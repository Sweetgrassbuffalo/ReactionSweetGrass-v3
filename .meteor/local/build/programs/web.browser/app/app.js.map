{"version":3,"sources":["meteor://ğŸ’»app/imports/plugins/included/product-variant/client/templates/products/productDetail/variants/variantForm/childVariant.js","meteor://ğŸ’»app/imports/plugins/included/product-variant/client/templates/products/productDetail/variants/variantForm/variantForm.js","meteor://ğŸ’»app/imports/plugins/included/product-variant/client/templates/products/productDetail/variants/variantList/variantList.js","meteor://ğŸ’»app/imports/plugins/included/product-variant/client/templates/products/productDetail/variants/variant.js","meteor://ğŸ’»app/imports/plugins/included/product-variant/client/templates/products/productDetail/attributes.js","meteor://ğŸ’»app/imports/plugins/included/product-variant/client/templates/products/productDetail/edit.js","meteor://ğŸ’»app/imports/plugins/included/product-variant/client/templates/products/productDetail/productImageGallery.js","meteor://ğŸ’»app/imports/plugins/included/product-variant/client/templates/products/productDetail/social.js","meteor://ğŸ’»app/imports/plugins/included/product-variant/client/templates/products/productGrid/content.js","meteor://ğŸ’»app/imports/plugins/included/product-variant/client/templates/products/productGrid/controls.js","meteor://ğŸ’»app/imports/plugins/included/product-variant/client/templates/products/productGrid/item.js","meteor://ğŸ’»app/imports/plugins/included/product-variant/client/templates/products/productGrid/notice.js","meteor://ğŸ’»app/imports/plugins/included/product-variant/client/templates/products/productGrid/productGrid.js","meteor://ğŸ’»app/imports/plugins/included/product-variant/client/templates/products/productGrid/publishControls.js","meteor://ğŸ’»app/imports/plugins/included/product-variant/client/templates/products/productList/productList.js","meteor://ğŸ’»app/imports/plugins/included/product-variant/client/templates/products/productSettings/productSettings.js","meteor://ğŸ’»app/imports/plugins/included/product-variant/client/templates/products/products.js","meteor://ğŸ’»app/imports/plugins/included/product-variant/client/components/variantForm.js","meteor://ğŸ’»app/imports/plugins/included/product-variant/client/containers/gridPublishContainer.js","meteor://ğŸ’»app/imports/plugins/included/product-variant/client/containers/variantFormContainer.js","meteor://ğŸ’»app/imports/plugins/included/product-variant/client/index.js","meteor://ğŸ’»app/imports/plugins/included/payments-paypal/client/templates/checkout/express/checkoutButton.js","meteor://ğŸ’»app/imports/plugins/included/payments-paypal/client/templates/checkout/express/index.js","meteor://ğŸ’»app/imports/plugins/included/payments-paypal/client/templates/checkout/payflow/index.js","meteor://ğŸ’»app/imports/plugins/included/payments-paypal/client/templates/checkout/payflow/payflowForm.js","meteor://ğŸ’»app/imports/plugins/included/payments-paypal/client/templates/checkout/return/cancel.js","meteor://ğŸ’»app/imports/plugins/included/payments-paypal/client/templates/checkout/return/done.js","meteor://ğŸ’»app/imports/plugins/included/payments-paypal/client/templates/checkout/return/index.js","meteor://ğŸ’»app/imports/plugins/included/payments-paypal/client/templates/settings/express.js","meteor://ğŸ’»app/imports/plugins/included/payments-paypal/client/templates/settings/payflow.js","meteor://ğŸ’»app/imports/plugins/included/payments-paypal/client/lib/paypalRestApi.js","meteor://ğŸ’»app/imports/plugins/included/payments-paypal/client/index.js","meteor://ğŸ’»app/imports/plugins/included/payments-paypal/lib/collections/schemas/index.js","meteor://ğŸ’»app/imports/plugins/included/payments-paypal/lib/collections/schemas/paypal.js","meteor://ğŸ’»app/imports/plugins/included/payments-paypal/lib/api/express.js","meteor://ğŸ’»app/imports/plugins/included/payments-paypal/lib/api/index.js","meteor://ğŸ’»app/imports/plugins/included/payments-paypal/lib/api/payflow.js","meteor://ğŸ’»app/imports/plugins/included/inventory/client/index.js","meteor://ğŸ’»app/imports/plugins/included/shipping-rates/client/templates/settings/rates.js","meteor://ğŸ’»app/imports/plugins/included/shipping-rates/client/templates/index.js","meteor://ğŸ’»app/imports/plugins/included/shipping-rates/client/index.js","meteor://ğŸ’»app/imports/plugins/included/social/client/templates/apps/facebook.js","meteor://ğŸ’»app/imports/plugins/included/social/client/templates/apps/googleplus.js","meteor://ğŸ’»app/imports/plugins/included/social/client/templates/apps/pinterest.js","meteor://ğŸ’»app/imports/plugins/included/social/client/templates/apps/twitter.js","meteor://ğŸ’»app/imports/plugins/included/social/client/templates/dashboard/social.js","meteor://ğŸ’»app/imports/plugins/included/social/client/templates/social.js","meteor://ğŸ’»app/imports/plugins/included/social/client/components/facebook.js","meteor://ğŸ’»app/imports/plugins/included/social/client/components/googleplus.js","meteor://ğŸ’»app/imports/plugins/included/social/client/components/index.js","meteor://ğŸ’»app/imports/plugins/included/social/client/components/pinterest.js","meteor://ğŸ’»app/imports/plugins/included/social/client/components/settings.js","meteor://ğŸ’»app/imports/plugins/included/social/client/components/socialButtons.js","meteor://ğŸ’»app/imports/plugins/included/social/client/components/twitter.js","meteor://ğŸ’»app/imports/plugins/included/social/client/containers/socialSettingsContainer.js","meteor://ğŸ’»app/imports/plugins/included/social/client/index.js","meteor://ğŸ’»app/imports/plugins/included/social/lib/helpers.js","meteor://ğŸ’»app/imports/plugins/included/ui-search/client/templates/accountSearch/accountResults.js","meteor://ğŸ’»app/imports/plugins/included/ui-search/client/templates/orderSearch/orderResults.js","meteor://ğŸ’»app/imports/plugins/included/ui-search/client/templates/productSearch/content.js","meteor://ğŸ’»app/imports/plugins/included/ui-search/client/templates/productSearch/notice.js","meteor://ğŸ’»app/imports/plugins/included/ui-search/client/templates/productSearch/productItem.js","meteor://ğŸ’»app/imports/plugins/included/ui-search/client/templates/productSearch/productResults.js","meteor://ğŸ’»app/imports/plugins/included/ui-search/client/templates/searchModal/searchModal.js","meteor://ğŸ’»app/imports/plugins/included/ui-search/client/index.js","meteor://ğŸ’»app/imports/plugins/included/analytics/client/templates/reactionAnalytics.js","meteor://ğŸ’»app/imports/plugins/included/analytics/client/index.js","meteor://ğŸ’»app/imports/plugins/included/analytics/client/startup.js","meteor://ğŸ’»app/imports/plugins/included/discount-codes/client/templates/codes.js","meteor://ğŸ’»app/imports/plugins/included/discount-codes/client/templates/index.js","meteor://ğŸ’»app/imports/plugins/included/discount-codes/client/templates/settings.js","meteor://ğŸ’»app/imports/plugins/included/discount-codes/client/collections/codes.js","meteor://ğŸ’»app/imports/plugins/included/discount-codes/client/index.js","meteor://ğŸ’»app/imports/plugins/included/discount-codes/lib/collections/schemas/codes.js","meteor://ğŸ’»app/imports/plugins/included/discount-codes/lib/collections/schemas/config.js","meteor://ğŸ’»app/imports/plugins/included/discount-codes/lib/collections/schemas/index.js","meteor://ğŸ’»app/imports/plugins/included/discount-rates/client/settings/rates.js","meteor://ğŸ’»app/imports/plugins/included/discount-rates/client/collections/rates.js","meteor://ğŸ’»app/imports/plugins/included/discount-rates/client/index.js","meteor://ğŸ’»app/imports/plugins/included/discount-rates/lib/collections/schemas/config.js","meteor://ğŸ’»app/imports/plugins/included/discount-rates/lib/collections/schemas/index.js","meteor://ğŸ’»app/imports/plugins/included/discount-rates/lib/collections/schemas/rates.js","meteor://ğŸ’»app/imports/plugins/included/launchdock-connect/client/templates/connect.js","meteor://ğŸ’»app/imports/plugins/included/launchdock-connect/client/templates/dashboard.js","meteor://ğŸ’»app/imports/plugins/included/launchdock-connect/client/templates/settings.js","meteor://ğŸ’»app/imports/plugins/included/launchdock-connect/client/index.js","meteor://ğŸ’»app/imports/plugins/included/launchdock-connect/lib/collections.js","meteor://ğŸ’»app/imports/plugins/included/launchdock-connect/lib/launchdock.js","meteor://ğŸ’»app/imports/plugins/included/notifications/client/templates/notifications.js","meteor://ğŸ’»app/imports/plugins/included/notifications/client/components/index.js","meteor://ğŸ’»app/imports/plugins/included/notifications/client/components/notificationComponent.js","meteor://ğŸ’»app/imports/plugins/included/notifications/client/components/notificationDropdown.js","meteor://ğŸ’»app/imports/plugins/included/notifications/client/components/notificationRoute.js","meteor://ğŸ’»app/imports/plugins/included/notifications/client/containers/index.js","meteor://ğŸ’»app/imports/plugins/included/notifications/client/containers/notificationContainer.js","meteor://ğŸ’»app/imports/plugins/included/notifications/client/containers/notificationRouteContainer.js","meteor://ğŸ’»app/imports/plugins/included/notifications/client/index.js","meteor://ğŸ’»app/imports/plugins/included/payments-authnet/client/checkout/authnet.js","meteor://ğŸ’»app/imports/plugins/included/payments-authnet/client/settings/authnet.js","meteor://ğŸ’»app/imports/plugins/included/payments-authnet/client/api/authnet.js","meteor://ğŸ’»app/imports/plugins/included/payments-authnet/client/api/index.js","meteor://ğŸ’»app/imports/plugins/included/payments-authnet/client/index.js","meteor://ğŸ’»app/imports/plugins/included/payments-authnet/lib/collections/schemas/index.js","meteor://ğŸ’»app/imports/plugins/included/payments-authnet/lib/collections/schemas/package.js","meteor://ğŸ’»app/imports/plugins/included/payments-braintree/client/checkout/braintree.js","meteor://ğŸ’»app/imports/plugins/included/payments-braintree/client/settings/braintree.js","meteor://ğŸ’»app/imports/plugins/included/payments-braintree/client/api/braintree.js","meteor://ğŸ’»app/imports/plugins/included/payments-braintree/client/index.js","meteor://ğŸ’»app/imports/plugins/included/payments-braintree/lib/collections/schemas/braintree.js","meteor://ğŸ’»app/imports/plugins/included/payments-braintree/lib/collections/schemas/index.js","meteor://ğŸ’»app/imports/plugins/included/payments-stripe/client/checkout/stripe.js","meteor://ğŸ’»app/imports/plugins/included/payments-stripe/client/settings/stripe.js","meteor://ğŸ’»app/imports/plugins/included/payments-stripe/client/index.js","meteor://ğŸ’»app/imports/plugins/included/payments-stripe/lib/collections/schemas/index.js","meteor://ğŸ’»app/imports/plugins/included/payments-stripe/lib/collections/schemas/stripe.js","meteor://ğŸ’»app/imports/plugins/included/payments-stripe/lib/api/index.js","meteor://ğŸ’»app/imports/plugins/included/payments-stripe/lib/api/stripe.js","meteor://ğŸ’»app/imports/plugins/included/product-admin/client/templates/productAdmin.js","meteor://ğŸ’»app/imports/plugins/included/product-admin/client/components/index.js","meteor://ğŸ’»app/imports/plugins/included/product-admin/client/components/productAdmin.js","meteor://ğŸ’»app/imports/plugins/included/product-admin/client/containers/index.js","meteor://ğŸ’»app/imports/plugins/included/product-admin/client/containers/productAdminContainer.js","meteor://ğŸ’»app/imports/plugins/included/product-admin/client/index.js","meteor://ğŸ’»app/imports/plugins/included/product-detail-simple/client/templates/productDetailSimple.js","meteor://ğŸ’»app/imports/plugins/included/product-detail-simple/client/components/addToCartButton.js","meteor://ğŸ’»app/imports/plugins/included/product-detail-simple/client/components/childVariant.js","meteor://ğŸ’»app/imports/plugins/included/product-detail-simple/client/components/index.js","meteor://ğŸ’»app/imports/plugins/included/product-detail-simple/client/components/metadata.js","meteor://ğŸ’»app/imports/plugins/included/product-detail-simple/client/components/priceRange.js","meteor://ğŸ’»app/imports/plugins/included/product-detail-simple/client/components/productDetail.js","meteor://ğŸ’»app/imports/plugins/included/product-detail-simple/client/components/productField.js","meteor://ğŸ’»app/imports/plugins/included/product-detail-simple/client/components/productNotFound.js","meteor://ğŸ’»app/imports/plugins/included/product-detail-simple/client/components/tags.js","meteor://ğŸ’»app/imports/plugins/included/product-detail-simple/client/components/variant.js","meteor://ğŸ’»app/imports/plugins/included/product-detail-simple/client/components/variantList.js","meteor://ğŸ’»app/imports/plugins/included/product-detail-simple/client/containers/index.js","meteor://ğŸ’»app/imports/plugins/included/product-detail-simple/client/containers/productDetailContainer.js","meteor://ğŸ’»app/imports/plugins/included/product-detail-simple/client/containers/publishContainer.js","meteor://ğŸ’»app/imports/plugins/included/product-detail-simple/client/containers/socialContainer.js","meteor://ğŸ’»app/imports/plugins/included/product-detail-simple/client/containers/variantListContainer.js","meteor://ğŸ’»app/imports/plugins/included/product-detail-simple/client/selectors/variants.js","meteor://ğŸ’»app/imports/plugins/included/product-detail-simple/client/index.js","meteor://ğŸ’»app/imports/plugins/included/search-mongo/client/settings/search.js","meteor://ğŸ’»app/imports/plugins/included/search-mongo/client/index.js","meteor://ğŸ’»app/imports/plugins/included/search-mongo/lib/collections/schemas/index.js","meteor://ğŸ’»app/imports/plugins/included/search-mongo/lib/collections/schemas/search.js","meteor://ğŸ’»app/imports/plugins/included/shippo/client/settings/carriers.js","meteor://ğŸ’»app/imports/plugins/included/shippo/client/settings/shippo.js","meteor://ğŸ’»app/imports/plugins/included/shippo/client/index.js","meteor://ğŸ’»app/imports/plugins/included/shippo/lib/collections/schemas/index.js","meteor://ğŸ’»app/imports/plugins/included/shippo/lib/collections/schemas/shippo.js","meteor://ğŸ’»app/imports/plugins/included/sms/client/templates/smsSettings.js","meteor://ğŸ’»app/imports/plugins/included/sms/client/actions/index.js","meteor://ğŸ’»app/imports/plugins/included/sms/client/actions/settings.js","meteor://ğŸ’»app/imports/plugins/included/sms/client/components/smsSettings.js","meteor://ğŸ’»app/imports/plugins/included/sms/client/containers/smsSettingsContainer.js","meteor://ğŸ’»app/imports/plugins/included/sms/client/index.js","meteor://ğŸ’»app/imports/plugins/included/taxes-avalara/client/accounts/exemption.js","meteor://ğŸ’»app/imports/plugins/included/taxes-avalara/client/settings/avagriddle.js","meteor://ğŸ’»app/imports/plugins/included/taxes-avalara/client/settings/avalara.js","meteor://ğŸ’»app/imports/plugins/included/taxes-avalara/client/index.js","meteor://ğŸ’»app/imports/plugins/included/taxes-avalara/lib/collections/schemas/index.js","meteor://ğŸ’»app/imports/plugins/included/taxes-avalara/lib/collections/schemas/schema.js","meteor://ğŸ’»app/imports/plugins/included/taxes-taxcloud/client/settings/taxcloud.js","meteor://ğŸ’»app/imports/plugins/included/taxes-taxcloud/client/index.js","meteor://ğŸ’»app/imports/plugins/included/taxes-taxcloud/lib/collections/schemas/index.js","meteor://ğŸ’»app/imports/plugins/included/taxes-taxcloud/lib/collections/schemas/schema.js","meteor://ğŸ’»app/imports/plugins/included/taxes-taxjar/client/settings/taxjar.js","meteor://ğŸ’»app/imports/plugins/included/taxes-taxjar/client/index.js","meteor://ğŸ’»app/imports/plugins/included/taxes-taxjar/lib/collections/schemas/index.js","meteor://ğŸ’»app/imports/plugins/included/taxes-taxjar/lib/collections/schemas/schema.js","meteor://ğŸ’»app/imports/plugins/included/default-theme/client/favicons.js","meteor://ğŸ’»app/imports/plugins/included/default-theme/client/index.js","meteor://ğŸ’»app/imports/plugins/core/checkout/client/templates/checkout/completed/completed.js","meteor://ğŸ’»app/imports/plugins/core/checkout/client/templates/checkout/login/login.js","meteor://ğŸ’»app/imports/plugins/core/checkout/client/templates/checkout/progressBar/progressBar.js","meteor://ğŸ’»app/imports/plugins/core/checkout/client/templates/checkout/review/review.js","meteor://ğŸ’»app/imports/plugins/core/checkout/client/templates/checkout/checkout.js","meteor://ğŸ’»app/imports/plugins/core/checkout/client/templates/cartDrawer/cartDrawer.js","meteor://ğŸ’»app/imports/plugins/core/checkout/client/templates/cartIcon/cartIcon.js","meteor://ğŸ’»app/imports/plugins/core/checkout/client/templates/cartPanel/component/cartPanel.js","meteor://ğŸ’»app/imports/plugins/core/checkout/client/templates/cartPanel/container/cartPanelContainer.js","meteor://ğŸ’»app/imports/plugins/core/checkout/client/components/cartDrawer.js","meteor://ğŸ’»app/imports/plugins/core/checkout/client/components/cartItems.js","meteor://ğŸ’»app/imports/plugins/core/checkout/client/components/cartSubTotal.js","meteor://ğŸ’»app/imports/plugins/core/checkout/client/components/emptyCartDrawer.js","meteor://ğŸ’»app/imports/plugins/core/checkout/client/container/cartDrawerContainer.js","meteor://ğŸ’»app/imports/plugins/core/checkout/client/container/cartSubTotalContainer.js","meteor://ğŸ’»app/imports/plugins/core/checkout/client/container/emptyCartContainer.js","meteor://ğŸ’»app/imports/plugins/core/checkout/client/helpers/cart.js","meteor://ğŸ’»app/imports/plugins/core/checkout/client/methods/cart.js","meteor://ğŸ’»app/imports/plugins/core/checkout/client/index.js","meteor://ğŸ’»app/imports/plugins/core/dashboard/client/templates/packages/grid/grid.js","meteor://ğŸ’»app/imports/plugins/core/dashboard/client/templates/packages/grid/package.js","meteor://ğŸ’»app/imports/plugins/core/dashboard/client/templates/packages/packages.js","meteor://ğŸ’»app/imports/plugins/core/dashboard/client/templates/shop/settings/settings.js","meteor://ğŸ’»app/imports/plugins/core/dashboard/client/templates/import/import.js","meteor://ğŸ’»app/imports/plugins/core/dashboard/client/templates/settings/settings.js","meteor://ğŸ’»app/imports/plugins/core/dashboard/client/templates/dashboard.js","meteor://ğŸ’»app/imports/plugins/core/dashboard/client/components/actionView.js","meteor://ğŸ’»app/imports/plugins/core/dashboard/client/components/index.js","meteor://ğŸ’»app/imports/plugins/core/dashboard/client/components/packageList.js","meteor://ğŸ’»app/imports/plugins/core/dashboard/client/components/toolbar.js","meteor://ğŸ’»app/imports/plugins/core/dashboard/client/containers/actionViewContainer.js","meteor://ğŸ’»app/imports/plugins/core/dashboard/client/containers/index.js","meteor://ğŸ’»app/imports/plugins/core/dashboard/client/containers/packageListContainer.js","meteor://ğŸ’»app/imports/plugins/core/dashboard/client/containers/toolbarContainer.js","meteor://ğŸ’»app/imports/plugins/core/dashboard/client/index.js","meteor://ğŸ’»app/imports/plugins/core/layout/client/templates/layout/admin/admin.js","meteor://ğŸ’»app/imports/plugins/core/layout/client/templates/layout/alerts/alerts.js","meteor://ğŸ’»app/imports/plugins/core/layout/client/templates/layout/alerts/inlineAlerts.js","meteor://ğŸ’»app/imports/plugins/core/layout/client/templates/layout/alerts/reactionAlerts.js","meteor://ğŸ’»app/imports/plugins/core/layout/client/templates/layout/createContentMenu/createContentMenu.js","meteor://ğŸ’»app/imports/plugins/core/layout/client/templates/layout/header/header.js","meteor://ğŸ’»app/imports/plugins/core/layout/client/templates/layout/notFound/notFound.js","meteor://ğŸ’»app/imports/plugins/core/layout/client/templates/layout/notice/unauthorized.js","meteor://ğŸ’»app/imports/plugins/core/layout/client/templates/theme/theme.js","meteor://ğŸ’»app/imports/plugins/core/layout/client/components/cartDrawer.js","meteor://ğŸ’»app/imports/plugins/core/layout/client/components/content.js","meteor://ğŸ’»app/imports/plugins/core/layout/client/components/coreLayout.js","meteor://ğŸ’»app/imports/plugins/core/layout/client/components/header.js","meteor://ğŸ’»app/imports/plugins/core/layout/client/components/index.js","meteor://ğŸ’»app/imports/plugins/core/layout/client/components/printLayout.js","meteor://ğŸ’»app/imports/plugins/core/layout/client/components/quickMenu.js","meteor://ğŸ’»app/imports/plugins/core/layout/client/index.js","meteor://ğŸ’»app/imports/plugins/core/layout/lib/blazeLayout.js","meteor://ğŸ’»app/imports/plugins/core/layout/lib/components.js","meteor://ğŸ’»app/imports/plugins/core/layout/lib/index.js","meteor://ğŸ’»app/imports/plugins/core/layout/lib/reactionLayout.js","meteor://ğŸ’»app/imports/plugins/core/orders/client/templates/details/detail.js","meteor://ğŸ’»app/imports/plugins/core/orders/client/templates/list/items.js","meteor://ğŸ’»app/imports/plugins/core/orders/client/templates/list/ordersList.js","meteor://ğŸ’»app/imports/plugins/core/orders/client/templates/list/pdf.js","meteor://ğŸ’»app/imports/plugins/core/orders/client/templates/list/summary.js","meteor://ğŸ’»app/imports/plugins/core/orders/client/templates/orderPage/details.js","meteor://ğŸ’»app/imports/plugins/core/orders/client/templates/orderPage/orderPage.js","meteor://ğŸ’»app/imports/plugins/core/orders/client/templates/workflow/shippingInvoice.js","meteor://ğŸ’»app/imports/plugins/core/orders/client/templates/workflow/shippingSummary.js","meteor://ğŸ’»app/imports/plugins/core/orders/client/templates/workflow/shippingTracking.js","meteor://ğŸ’»app/imports/plugins/core/orders/client/templates/workflow/workflow.js","meteor://ğŸ’»app/imports/plugins/core/orders/client/templates/orders.js","meteor://ğŸ’»app/imports/plugins/core/orders/client/components/invoice.js","meteor://ğŸ’»app/imports/plugins/core/orders/client/components/lineItems.js","meteor://ğŸ’»app/imports/plugins/core/orders/client/components/orderActions.js","meteor://ğŸ’»app/imports/plugins/core/orders/client/components/orderSummary.js","meteor://ğŸ’»app/imports/plugins/core/orders/client/components/totalActions.js","meteor://ğŸ’»app/imports/plugins/core/orders/client/containers/invoiceContainer.js","meteor://ğŸ’»app/imports/plugins/core/orders/client/containers/lineItemsContainer.js","meteor://ğŸ’»app/imports/plugins/core/orders/client/containers/orderSummaryContainer.js","meteor://ğŸ’»app/imports/plugins/core/orders/client/containers/ordersActionContainer.js","meteor://ğŸ’»app/imports/plugins/core/orders/client/containers/totalActionsContainer.js","meteor://ğŸ’»app/imports/plugins/core/orders/client/index.js","meteor://ğŸ’»app/imports/plugins/core/orders/lib/constants.js","meteor://ğŸ’»app/imports/plugins/core/payments/client/checkout/payment/index.js","meteor://ğŸ’»app/imports/plugins/core/payments/client/checkout/payment/methods.js","meteor://ğŸ’»app/imports/plugins/core/payments/client/checkout/index.js","meteor://ğŸ’»app/imports/plugins/core/payments/client/settings/index.js","meteor://ğŸ’»app/imports/plugins/core/payments/client/settings/settings.js","meteor://ğŸ’»app/imports/plugins/core/payments/client/index.js","meteor://ğŸ’»app/imports/plugins/core/shipping/client/templates/checkout/shipping.js","meteor://ğŸ’»app/imports/plugins/core/shipping/client/templates/settings/shipping.js","meteor://ğŸ’»app/imports/plugins/core/shipping/client/templates/index.js","meteor://ğŸ’»app/imports/plugins/core/shipping/client/index.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/button/button.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/button/button.jsx","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/button/buttonSelect.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/button/editButton.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/button/flatButton.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/button/handle.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/button/iconButton.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/button/index.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/button/visibilityButton.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/cards/card.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/cards/cardBody.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/cards/cardGroup.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/cards/cardHeader.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/cards/cardTitle.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/cards/cardToolbar.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/cards/cards.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/cards/index.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/cards/settingsCard.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/numericInput/numericInput.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/select/select.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/select/select.react.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/tags/index.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/tags/tag.jsx","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/tags/tagItem.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/tags/tagList.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/tags/tags.jsx","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/textfield/textfield.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/upload/upload.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/alerts/alert.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/alerts/alerts.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/alerts/index.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/buttonGroup/buttonGroup.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/buttonGroup/buttonToolbar.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/buttonGroup/index.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/checkbox/checkbox.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/checkbox/index.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/divider/divider.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/divider/verticalDivider.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/forms/form.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/forms/formActions.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/forms/index.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/icon/icon.jsx","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/icon/index.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/items/item.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/items/items.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/list/index.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/list/list.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/list/listItem.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/loading/loading.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/media/index.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/media/media.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/media/mediaGallery.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/menu/dropDownMenu.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/menu/index.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/menu/menu.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/menu/menuItem.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/metadata/index.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/metadata/metadata.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/metadata/metafield.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/modal/index.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/modal/overlay.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/multiselect/multiselect.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/popover/popover.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/popover/popoverContent.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/progress/circularProgress.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/slider/slider.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/switch/index.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/switch/switch.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/table/table.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/tabs/index.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/tabs/tabItem.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/tabs/tabList.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/toolbar/index.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/toolbar/toolbar.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/toolbar/toolbarGroup.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/toolbar/toolbarText.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/tooltip/tooltip.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/translation/currency.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/translation/index.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/translation/translation.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/components/index.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/templates/dashboard/dashboard.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/templates/themeDetails/themeDetails.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/templates/themeEditor/themeEditor.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/containers/alertContainer.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/containers/editContainer.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/containers/index.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/containers/mediaGalleryContainer.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/containers/sortableItem.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/containers/tagListContainer.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/helpers/helpers.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/helpers/react-template-helper.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/providers/admin.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/providers/adminContextProvider.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/providers/dragDropProvider.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/providers/index.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/providers/translatable.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/providers/translationProvider.js","meteor://ğŸ’»app/imports/plugins/core/ui/client/index.js","meteor://ğŸ’»app/imports/plugins/core/ui-navbar/client/components/brand/brand.js","meteor://ğŸ’»app/imports/plugins/core/ui-navbar/client/components/i18n/i18n.js","meteor://ğŸ’»app/imports/plugins/core/ui-navbar/client/components/navbar/navbar.js","meteor://ğŸ’»app/imports/plugins/core/ui-navbar/client/index.js","meteor://ğŸ’»app/imports/plugins/core/ui-tagnav/client/components/tagGroup/tagGroup.js","meteor://ğŸ’»app/imports/plugins/core/ui-tagnav/client/components/tagNav/tagNav.js","meteor://ğŸ’»app/imports/plugins/core/ui-tagnav/client/components/tagTree/tagTree.js","meteor://ğŸ’»app/imports/plugins/core/ui-tagnav/client/helpers/index.js","meteor://ğŸ’»app/imports/plugins/core/ui-tagnav/client/helpers/tags.js","meteor://ğŸ’»app/imports/plugins/core/ui-tagnav/client/index.js","meteor://ğŸ’»app/imports/plugins/core/catalog/client/templates/settings.js","meteor://ğŸ’»app/imports/plugins/core/catalog/client/index.js","meteor://ğŸ’»app/imports/plugins/core/email/client/templates/email.js","meteor://ğŸ’»app/imports/plugins/core/email/client/actions/index.js","meteor://ğŸ’»app/imports/plugins/core/email/client/actions/logs.js","meteor://ğŸ’»app/imports/plugins/core/email/client/actions/settings.js","meteor://ğŸ’»app/imports/plugins/core/email/client/components/emailConfig.js","meteor://ğŸ’»app/imports/plugins/core/email/client/components/emailLogs.js","meteor://ğŸ’»app/imports/plugins/core/email/client/components/emailSettings.js","meteor://ğŸ’»app/imports/plugins/core/email/client/components/emailTableColumn.js","meteor://ğŸ’»app/imports/plugins/core/email/client/containers/emailConfig.js","meteor://ğŸ’»app/imports/plugins/core/email/client/containers/emailLogs.js","meteor://ğŸ’»app/imports/plugins/core/email/client/containers/emailSettings.js","meteor://ğŸ’»app/imports/plugins/core/email/client/index.js","meteor://ğŸ’»app/imports/plugins/core/revisions/client/templates/settings.js","meteor://ğŸ’»app/imports/plugins/core/revisions/client/components/publishControls.js","meteor://ğŸ’»app/imports/plugins/core/revisions/client/components/settings.js","meteor://ğŸ’»app/imports/plugins/core/revisions/client/components/simpleDiff.js","meteor://ğŸ’»app/imports/plugins/core/revisions/client/containers/publishContainer.js","meteor://ğŸ’»app/imports/plugins/core/revisions/client/containers/settingsContainer.js","meteor://ğŸ’»app/imports/plugins/core/revisions/client/index.js","meteor://ğŸ’»app/imports/plugins/core/revisions/lib/api/index.js","meteor://ğŸ’»app/imports/plugins/core/revisions/lib/api/revisions.js","meteor://ğŸ’»app/imports/plugins/core/taxes/client/settings/custom.js","meteor://ğŸ’»app/imports/plugins/core/taxes/client/settings/settings.js","meteor://ğŸ’»app/imports/plugins/core/taxes/client/index.js","meteor://ğŸ’»app/imports/plugins/core/taxes/lib/collections/schemas/config.js","meteor://ğŸ’»app/imports/plugins/core/taxes/lib/collections/schemas/index.js","meteor://ğŸ’»app/imports/plugins/core/taxes/lib/collections/schemas/taxcodes.js","meteor://ğŸ’»app/imports/plugins/core/taxes/lib/collections/schemas/taxes.js","meteor://ğŸ’»app/imports/plugins/core/taxes/lib/collections/schemas/taxrates.js","meteor://ğŸ’»app/imports/plugins/core/taxes/lib/collections/collections.js","meteor://ğŸ’»app/imports/plugins/core/taxes/lib/collections/index.js","meteor://ğŸ’»app/imports/plugins/core/templates/client/templates/settings.js","meteor://ğŸ’»app/imports/plugins/core/templates/client/index.js","meteor://ğŸ’»app/imports/plugins/core/templates/lib/collections/schemas/emailtemplates.js","meteor://ğŸ’»app/imports/plugins/core/templates/lib/collections/schemas/index.js","meteor://ğŸ’»app/imports/plugins/core/discounts/lib/collections/schemas/config.js","meteor://ğŸ’»app/imports/plugins/core/discounts/lib/collections/schemas/discounts.js","meteor://ğŸ’»app/imports/plugins/core/discounts/lib/collections/schemas/index.js","meteor://ğŸ’»app/imports/plugins/core/discounts/client/components/form.js","meteor://ğŸ’»app/imports/plugins/core/discounts/client/components/list.js","meteor://ğŸ’»app/imports/plugins/core/router/lib/hooks.js","meteor://ğŸ’»app/imports/plugins/core/router/lib/index.js","meteor://ğŸ’»app/imports/plugins/core/router/lib/router.js","meteor://ğŸ’»app/imports/plugins/core/router/client/app.js","meteor://ğŸ’»app/imports/plugins/core/router/client/browserRouter.js","meteor://ğŸ’»app/imports/plugins/core/router/client/index.js","meteor://ğŸ’»app/imports/plugins/core/router/client/startup.js","meteor://ğŸ’»app/imports/plugins/core/i18n/client/components/localizationSettings.js","meteor://ğŸ’»app/imports/plugins/core/i18n/client/containers/localizationSettingsContainer.js","meteor://ğŸ’»app/imports/plugins/core/i18n/client/index.js","meteor://ğŸ’»app/imports/plugins/core/ui-grid/client/griddle.js","meteor://ğŸ’»app/imports/plugins/core/ui-grid/client/index.js","meteor://ğŸ’»app/imports/plugins/custom/payments-example/client/settings/templates/example.js","meteor://ğŸ’»app/imports/plugins/custom/payments-example/client/settings/components/exampleSettingsForm.js","meteor://ğŸ’»app/imports/plugins/custom/payments-example/client/settings/components/index.js","meteor://ğŸ’»app/imports/plugins/custom/payments-example/client/settings/containers/exampleSettingsFormContainer.js","meteor://ğŸ’»app/imports/plugins/custom/payments-example/client/settings/containers/index.js","meteor://ğŸ’»app/imports/plugins/custom/payments-example/client/checkout/example.js","meteor://ğŸ’»app/imports/plugins/custom/payments-example/client/index.js","meteor://ğŸ’»app/imports/plugins/custom/payments-example/lib/collections/schemas/example.js","meteor://ğŸ’»app/imports/plugins/custom/payments-example/lib/collections/schemas/index.js","meteor://ğŸ’»app/imports/plugins/custom/payments-example/lib/api/example.js","meteor://ğŸ’»app/imports/plugins/custom/payments-example/lib/api/index.js","meteor://ğŸ’»app/client/modules/accounts/templates/addressBook/add/add.js","meteor://ğŸ’»app/client/modules/accounts/templates/addressBook/edit/edit.js","meteor://ğŸ’»app/client/modules/accounts/templates/addressBook/form/form.js","meteor://ğŸ’»app/client/modules/accounts/templates/addressBook/grid/grid.js","meteor://ğŸ’»app/client/modules/accounts/templates/addressBook/addressBook.js","meteor://ğŸ’»app/client/modules/accounts/templates/dashboard/dashboard.js","meteor://ğŸ’»app/client/modules/accounts/templates/dropdown/dropdown.js","meteor://ğŸ’»app/client/modules/accounts/templates/forgot/forgot.js","meteor://ğŸ’»app/client/modules/accounts/templates/inline/inline.js","meteor://ğŸ’»app/client/modules/accounts/templates/login/loginForm.js","meteor://ğŸ’»app/client/modules/accounts/templates/members/member.js","meteor://ğŸ’»app/client/modules/accounts/templates/members/memberForm.js","meteor://ğŸ’»app/client/modules/accounts/templates/profile/profile.js","meteor://ğŸ’»app/client/modules/accounts/templates/signIn/signIn.js","meteor://ğŸ’»app/client/modules/accounts/templates/signUp/signUp.js","meteor://ğŸ’»app/client/modules/accounts/templates/updatePassword/updatePassword.js","meteor://ğŸ’»app/client/modules/accounts/helpers/helpers.js","meteor://ğŸ’»app/client/modules/accounts/helpers/index.js","meteor://ğŸ’»app/client/modules/accounts/helpers/templates.js","meteor://ğŸ’»app/client/modules/accounts/helpers/util.js","meteor://ğŸ’»app/client/modules/i18n/templates/currency/currency.js","meteor://ğŸ’»app/client/modules/i18n/templates/header/i18n.js","meteor://ğŸ’»app/client/modules/i18n/currency.js","meteor://ğŸ’»app/client/modules/i18n/helpers.js","meteor://ğŸ’»app/client/modules/i18n/index.js","meteor://ğŸ’»app/client/modules/i18n/startup.js","meteor://ğŸ’»app/client/modules/i18n/main.js","meteor://ğŸ’»app/client/modules/core/helpers/apps.js","meteor://ğŸ’»app/client/modules/core/helpers/globals.js","meteor://ğŸ’»app/client/modules/core/helpers/layout.js","meteor://ğŸ’»app/client/modules/core/helpers/permissions.js","meteor://ğŸ’»app/client/modules/core/helpers/templates.js","meteor://ğŸ’»app/client/modules/core/helpers/utils.js","meteor://ğŸ’»app/client/modules/core/accounts.js","meteor://ğŸ’»app/client/modules/core/index.js","meteor://ğŸ’»app/client/modules/core/startup.js","meteor://ğŸ’»app/client/modules/core/subscriptions.js","meteor://ğŸ’»app/client/modules/core/main.js","meteor://ğŸ’»app/client/modules/logger/index.js","meteor://ğŸ’»app/client/modules/router/helpers.js","meteor://ğŸ’»app/client/modules/router/hooks.js","meteor://ğŸ’»app/client/modules/router/index.js","meteor://ğŸ’»app/client/modules/router/main.js","meteor://ğŸ’»app/client/templates/layout.js","meteor://ğŸ’»app/client/api/index.js","meteor://ğŸ’»app/client/collections/countries.js","meteor://ğŸ’»app/client/collections/index.js","meteor://ğŸ’»app/client/collections/taxEntitycodes.js","meteor://ğŸ’»app/client/config/defaults.js","meteor://ğŸ’»app/client/plugins.js","meteor://ğŸ’»app/lib/api/router/metadata.js","meteor://ğŸ’»app/lib/api/account-validation.js","meteor://ğŸ’»app/lib/api/catalog.js","meteor://ğŸ’»app/lib/api/compose.js","meteor://ğŸ’»app/lib/api/files.js","meteor://ğŸ’»app/lib/api/helpers.js","meteor://ğŸ’»app/lib/api/index.js","meteor://ğŸ’»app/lib/api/match.js","meteor://ğŸ’»app/lib/api/products.js","meteor://ğŸ’»app/lib/api/prop-types.js","meteor://ğŸ’»app/lib/collections/schemas/accounts.js","meteor://ğŸ’»app/lib/collections/schemas/address.js","meteor://ğŸ’»app/lib/collections/schemas/analytics.js","meteor://ğŸ’»app/lib/collections/schemas/assets.js","meteor://ğŸ’»app/lib/collections/schemas/cart.js","meteor://ğŸ’»app/lib/collections/schemas/emails.js","meteor://ğŸ’»app/lib/collections/schemas/helpers.js","meteor://ğŸ’»app/lib/collections/schemas/index.js","meteor://ğŸ’»app/lib/collections/schemas/inventory.js","meteor://ğŸ’»app/lib/collections/schemas/layouts.js","meteor://ğŸ’»app/lib/collections/schemas/logs.js","meteor://ğŸ’»app/lib/collections/schemas/metafield.js","meteor://ğŸ’»app/lib/collections/schemas/notifications.js","meteor://ğŸ’»app/lib/collections/schemas/orders.js","meteor://ğŸ’»app/lib/collections/schemas/payments.js","meteor://ğŸ’»app/lib/collections/schemas/products.js","meteor://ğŸ’»app/lib/collections/schemas/registry.js","meteor://ğŸ’»app/lib/collections/schemas/revisions.js","meteor://ğŸ’»app/lib/collections/schemas/shipping.js","meteor://ğŸ’»app/lib/collections/schemas/shops.js","meteor://ğŸ’»app/lib/collections/schemas/sms.js","meteor://ğŸ’»app/lib/collections/schemas/social.js","meteor://ğŸ’»app/lib/collections/schemas/tags.js","meteor://ğŸ’»app/lib/collections/schemas/templates.js","meteor://ğŸ’»app/lib/collections/schemas/themes.js","meteor://ğŸ’»app/lib/collections/schemas/translations.js","meteor://ğŸ’»app/lib/collections/schemas/workflow.js","meteor://ğŸ’»app/lib/collections/transform/cart.js","meteor://ğŸ’»app/lib/collections/transform/order.js","meteor://ğŸ’»app/lib/collections/collectionFS.js","meteor://ğŸ’»app/lib/collections/collections.js","meteor://ğŸ’»app/lib/collections/index.js","meteor://ğŸ’»app/lib/collections/jobs.js","meteor://ğŸ’»app/lib/collections/search.js","meteor://ğŸ’»app/lib/core/templates.js","meteor://ğŸ’»app/lib/selectors/tags.js","meteor://ğŸ’»app/lib/selectors/variants.js"],"names":[],"mappings":"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","file":"/app.js","sourcesContent":["import { Reaction, i18next } from \"/client/api\";\nimport { ReactionProduct } from \"/lib/api\";\nimport { Media } from \"/lib/collections\";\nimport { Icon } from \"/imports/plugins/core/ui/client/components\";\n\nfunction productHandle() {\n  const selectedProduct = ReactionProduct.selectedProduct();\n  return selectedProduct.__published && selectedProduct.__published.handle || selectedProduct.handle;\n}\n/**\n * childVariantForm onRendered\n */\nTemplate.onRendered(function () {\n  this.autorun(() => {\n    const selectedVariantId = Reaction.Router.getParam(\"variantId\");\n\n    $(`div.child-variant-collapse:not(#child-variant-form-${selectedVariantId})`).collapse(\"hide\");\n    $(`#child-variant-form-${selectedVariantId}`).collapse(\"show\");\n    $(`#option-child-variant-form-${selectedVariantId}`).focus();\n  });\n});\n\n/**\n * childVariantForm helpers\n */\n\nTemplate.childVariantForm.helpers({\n  Icon() {\n    return Icon;\n  },\n  childVariantFormId: function () {\n    return \"child-variant-form-\" + this._id;\n  },\n  media: function () {\n    const media = Media.find({\n      \"metadata.variantId\": this._id\n    }, {\n      sort: {\n        \"metadata.priority\": 1\n      }\n    });\n\n    return media;\n  },\n  featuredMedia: function () {\n    const media = Media.findOne({\n      \"metadata.variantId\": this._id\n    }, {\n      sort: {\n        \"metadata.priority\": 1\n      }\n    });\n\n    if (media) {\n      return [media];\n    }\n\n    return false;\n  },\n  handleFileUpload() {\n    const ownerId = Meteor.userId();\n    const productId = ReactionProduct.selectedProductId();\n    const shopId = Reaction.getShopId();\n    const currentData = Template.currentData();\n    const variantId = currentData._id;\n\n    return (files) => {\n      for (const file of files) {\n        file.metadata = {\n          variantId,\n          productId,\n          shopId,\n          ownerId\n        };\n\n        Media.insert(file);\n      }\n    };\n  },\n  active() {\n    const variantId = ReactionProduct.selectedVariantId();\n\n    if (variantId === this._id) {\n      return \"panel-active\";\n    }\n\n    return \"panel-default\";\n  }\n});\n\n/**\n * childVariantForm events\n */\n\nTemplate.childVariantForm.events({\n  \"click .child-variant-form :input, click li\": function (event, template) {\n    const variantId = template.data._id;\n\n    Reaction.Router.go(\"product\", {\n      handle: productHandle(),\n      variantId: variantId\n    });\n\n    return ReactionProduct.setCurrentVariant(template.data._id);\n  },\n  \"change .child-variant-input\": function (event, template) {\n    const variant = template.data;\n    const value = Template.instance().$(event.currentTarget).val();\n    const field = Template.instance().$(event.currentTarget).attr(\"name\");\n\n    Meteor.call(\"products/updateProductField\", variant._id, field, value,\n      error => {\n        if (error) {\n          throw new Meteor.Error(\"error updating variant\", error);\n        }\n      });\n    return ReactionProduct.setCurrentVariant(variant._id);\n  },\n  \"click .js-child-variant-heading\": function (event, instance) {\n    const variantId = instance.data._id;\n\n    Reaction.Router.go(\"product\", {\n      handle: productHandle(),\n      variantId: variantId\n    });\n  },\n\n  \"click .js-remove-child-variant\": function (event, instance) {\n    event.stopPropagation();\n    event.preventDefault();\n    const title = instance.data.optionTitle || i18next.t(\"productDetailEdit.thisOption\");\n\n    Alerts.alert({\n      title: i18next.t(\"productDetailEdit.archiveVariantConfirm\", { title }),\n      showCancelButton: true,\n      confirmButtonText: \"Archive\"\n    }, (isConfirm) => {\n      if (isConfirm) {\n        const id = instance.data._id;\n        Meteor.call(\"products/deleteVariant\", id, function (error, result) {\n          // TODO why we have this on option remove?\n          if (result && ReactionProduct.selectedVariantId() === id) {\n            ReactionProduct.setCurrentVariant(null);\n          }\n        });\n      }\n    });\n  },\n\n  \"click .js-restore-child-variant\": function (event, instance) {\n    event.stopPropagation();\n    event.preventDefault();\n    const title = instance.data.optionTitle || i18next.t(\"productDetailEdit.thisOption\");\n\n    Alerts.alert({\n      title: i18next.t(\"productDetailEdit.restoreVariantConfirm\", { title }),\n      showCancelButton: true,\n      confirmButtonText: \"Restore\"\n    }, (isConfirm) => {\n      if (isConfirm) {\n        const id = instance.data._id;\n        Meteor.call(\"products/updateProductField\", id, \"isDeleted\", false, (error) => {\n          if (error) {\n            Alerts.alert({\n              text: i18next.t(\"productDetailEdit.restoreVariantFail\", { title }),\n              confirmButtonText: i18next.t(\"app.close\", { defaultValue: \"Close\" })\n            });\n          }\n        });\n      }\n    });\n  }\n});\n","import { Meteor } from \"meteor/meteor\";\nimport { ReactiveDict } from \"meteor/reactive-dict\";\nimport { Session } from \"meteor/session\";\nimport { Template } from \"meteor/templating\";\nimport { Reaction, i18next } from \"/client/api\";\nimport { ReactionProduct } from \"/lib/api\";\nimport { applyProductRevision } from \"/lib/api/products\";\nimport { Products } from \"/lib/collections\";\nimport VariantFormContainer from \"../../../../../containers/variantFormContainer\";\n\nTemplate.variantForm.onCreated(function () {\n  this.state = new ReactiveDict();\n\n  this.autorun(() => {\n    const productHandle = Reaction.Router.getParam(\"handle\");\n\n    if (!productHandle) {\n      Reaction.clearActionView();\n    }\n  });\n\n  this.getVariant = (variant) => {\n    const product = Products.findOne(variant._id);\n    return applyProductRevision(product);\n  };\n});\n\n/**\n * variantForm helpers\n */\n\nTemplate.variantForm.helpers({\n  variantFormComponent() {\n    return VariantFormContainer;\n  },\n  variant() {\n    const instance = Template.instance();\n    return instance.getVariant(instance.data);\n  },\n  childVariants: function () {\n    const _id = this._id;\n    const variants = ReactionProduct.getVariants();\n    const childVariants = [];\n    variants.map(variant => {\n      if (~variant.ancestors.indexOf(_id) && variant.type !== \"inventory\") {\n        childVariants.push(variant);\n      }\n    });\n    return childVariants;\n  },\n  variantFormId: function () {\n    return \"variant-form-\" + this._id;\n  }\n});\n\n/**\n * variantForm events\n */\n\nTemplate.variantForm.events({\n  \"click .btn-child-variant-form\": function (event, template) {\n    event.stopPropagation();\n    event.preventDefault();\n    const productId = ReactionProduct.selectedProductId();\n\n    if (!productId) {\n      return;\n    }\n\n    Meteor.call(\"products/createVariant\", template.data._id, function (error, result) {\n      if (error) {\n        Alerts.alert({\n          text: i18next.t(\"productDetailEdit.addVariantFail\", { title: template.data.title }),\n          confirmButtonText: i18next.t(\"app.close\", { defaultValue: \"Close\" })\n        });\n      } else if (result) {\n        const newVariantId = result;\n        const selectedProduct = ReactionProduct.selectedProduct();\n        const handle = selectedProduct.__published && selectedProduct.__published.handle || selectedProduct.handle;\n        ReactionProduct.setCurrentVariant(newVariantId);\n        Session.set(\"variant-form-\" + newVariantId, true);\n\n        Reaction.Router.go(\"product\", {\n          handle: handle,\n          variantId: newVariantId\n        });\n      }\n    });\n  }\n});\n","import Sortable from \"sortablejs\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Session } from \"meteor/session\";\nimport { Template } from \"meteor/templating\";\nimport { Reaction } from \"/client/api\";\nimport { ReactionProduct } from \"/lib/api\";\nimport { Products, Media } from \"/lib/collections\";\nimport { EditButton, VisibilityButton } from \"/imports/plugins/core/ui/client/components\";\n\nfunction variantIsSelected(variantId) {\n  const current = ReactionProduct.selectedVariant();\n  if (typeof current === \"object\" && (variantId === current._id || ~current.ancestors.indexOf(variantId))) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction variantIsInActionView(variantId) {\n  const actionViewVariant = Reaction.getActionView().data;\n\n  if (actionViewVariant) {\n    // Check if the variant is selected, and also visible & selected in the action view\n    return variantIsSelected(variantId) && variantIsSelected(actionViewVariant._id) && Reaction.isActionViewOpen();\n  }\n\n  return false;\n}\n\n/**\n * variant onRendered\n */\n\nTemplate.variantList.onRendered(function () {\n  const instance = this;\n\n  return this.autorun(function () {\n    if (Reaction.hasPermission(\"createProduct\")) {\n      const variantSort = $(\".variant-list\")[0];\n\n      this.sortable = Sortable.create(variantSort, {\n        group: \"variant-list\",\n        handle: \".variant-list-item\",\n        onUpdate() {\n          const positions = instance.$(\".variant-list-item\")\n            .toArray()\n            .map((element) => {\n              return element.getAttribute(\"data-id\");\n            });\n\n          Meteor.defer(function () {\n            Meteor.call(\"products/updateVariantsPosition\", positions);\n          });\n\n          Tracker.flush();\n        }\n      });\n    }\n  });\n});\n\n\n/**\n * variantList helpers\n */\nTemplate.variantList.helpers({\n  media: function () {\n    const media = Media.findOne({\n      \"metadata.variantId\": this._id\n    }, {\n      sort: {\n        \"metadata.priority\": 1\n      }\n    });\n\n    return media instanceof FS.File ? media : false;\n  },\n  variants: function () {\n    let inventoryTotal = 0;\n    const variants = ReactionProduct.getTopVariants();\n    if (variants.length) {\n      // calculate inventory total for all variants\n      for (const variant of variants) {\n        if (variant.inventoryManagement) {\n          const qty = ReactionProduct.getVariantQuantity(variant);\n          if (typeof qty === \"number\") {\n            inventoryTotal += qty;\n          }\n        }\n      }\n      // calculate percentage of total inventory of this product\n      for (const variant of variants) {\n        const qty = ReactionProduct.getVariantQuantity(variant);\n        variant.inventoryTotal = inventoryTotal;\n        if (variant.inventoryManagement && inventoryTotal) {\n          variant.inventoryPercentage = parseInt(qty / inventoryTotal * 100, 10);\n        } else {\n          // for cases when sellers doesn't use inventory we should always show\n          // \"green\" progress bar\n          variant.inventoryPercentage = 100;\n        }\n        if (variant.title) {\n          variant.inventoryWidth = parseInt(variant.inventoryPercentage -\n            variant.title.length, 10);\n        } else {\n          variant.inventoryWidth = 0;\n        }\n      }\n      // sort variants in correct order\n      variants.sort((a, b) => a.index - b.index);\n\n      return variants;\n    }\n    return [];\n  },\n  childVariants: function () {\n    const childVariants = [];\n    const variants = ReactionProduct.getVariants();\n    if (variants.length > 0) {\n      const current = ReactionProduct.selectedVariant();\n\n      if (!current) {\n        return [];\n      }\n\n      if (current.ancestors.length === 1) {\n        variants.map(variant => {\n          if (typeof variant.ancestors[1] === \"string\" &&\n            variant.ancestors[1] === current._id &&\n            variant.optionTitle &&\n            variant.type !== \"inventory\") {\n            childVariants.push(variant);\n          }\n        });\n      } else {\n        // TODO not sure we need this part...\n        variants.map(variant => {\n          if (typeof variant.ancestors[1] === \"string\" &&\n            variant.ancestors.length === current.ancestors.length &&\n            variant.ancestors[1] === current.ancestors[1] &&\n            variant.optionTitle\n          ) {\n            childVariants.push(variant);\n          }\n        });\n      }\n\n      return childVariants;\n    }\n\n    return null;\n  },\n  selectedVariant() {\n    if (variantIsSelected(this._id)) {\n      return \"variant-detail-selected\";\n    }\n\n    return null;\n  },\n  ChildVariantEditButton() {\n    const variant = Template.currentData();\n    const parentVariant = Products.findOne(variant.ancestors[1]);\n\n    return {\n      component: EditButton,\n      toggleOn: variantIsInActionView(variant._id),\n      onClick() {\n        ReactionProduct.setCurrentVariant(variant._id);\n        Session.set(\"variant-form-\" + parentVariant._id, true);\n\n        if (Reaction.hasPermission(\"createProduct\")) {\n          Reaction.showActionView({\n            label: \"Edit Variant\",\n            i18nKeyLabel: \"productDetailEdit.editVariant\",\n            template: \"variantForm\",\n            data: parentVariant\n          });\n        }\n      }\n    };\n  },\n  ChildVariantRevisionButton() {\n    const variant = Template.currentData();\n    // const parentVariant = Products.findOne(variant.ancestors[1]);\n\n    return {\n      component: VisibilityButton,\n      toggleOn: variant.isVisible,\n      onClick() {\n        ReactionProduct.toggleVisibility(variant);\n      }\n    };\n  }\n});\n\n/**\n * variantList events\n */\n\nTemplate.variantList.events({\n  \"click #create-variant\": function () {\n    return Meteor.call(\"products/createVariant\", this._id);\n  },\n  \"click .variant-select-option\": function (event, templateInstance) {\n    templateInstance.$(\".variant-select-option\").removeClass(\"active\");\n    $(event.target).addClass(\"active\");\n    Alerts.removeSeen();\n\n    const selectedProduct = ReactionProduct.selectedProduct();\n    Reaction.Router.go(\"product\", { handle: selectedProduct.handle, variantId: this._id });\n\n    return ReactionProduct.setCurrentVariant(this._id);\n  }\n});\n","import { Reaction } from \"/client/api\";\nimport { ReactionProduct } from \"/lib/api\";\nimport { EditButton, VisibilityButton } from \"/imports/plugins/core/ui/client/components\";\nimport { Session } from \"meteor/session\";\nimport { Template } from \"meteor/templating\";\n\n// Duplicated in variantList/variantList.js\nfunction variantIsSelected(variantId) {\n  const current = ReactionProduct.selectedVariant();\n  if (typeof current === \"object\" && (variantId === current._id || ~current.ancestors.indexOf(variantId))) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction variantIsInActionView(variantId) {\n  const actionViewVariant = Reaction.getActionView().data;\n\n  if (actionViewVariant) {\n    // Check if the variant is selected, and also visible & selected in the action view\n    return variantIsSelected(variantId) && variantIsSelected(actionViewVariant._id) && Reaction.isActionViewOpen();\n  }\n\n  return false;\n}\n\n\n/**\n * variant helpers\n */\n\nTemplate.variant.helpers({\n  progressBar: function () {\n    if (this.inventoryPercentage <= 10) {\n      return \"progress-bar-danger\";\n    } else if (this.inventoryPercentage <= 30) {\n      return \"progress-bar-warning\";\n    }\n    return \"progress-bar-success\";\n  },\n  selectedVariant: function () {\n    if (variantIsSelected(this._id)) {\n      return \"variant-detail-selected\";\n    }\n\n    return null;\n  },\n  displayQuantity: function () {\n    return ReactionProduct.getVariantQuantity(this);\n  },\n  displayPrice: function () {\n    return ReactionProduct.getVariantPriceRange(this._id);\n  },\n  isSoldOut: function () {\n    return ReactionProduct.getVariantQuantity(this) < 1;\n  },\n  EditButton() {\n    const data = Template.currentData();\n\n    return {\n      component: EditButton,\n      toggleOn: variantIsInActionView(data._id),\n      onClick() {\n        showVariant(data);\n      }\n    };\n  },\n  VariantRevisionButton() {\n    const variant = Template.currentData();\n\n    return {\n      component: VisibilityButton,\n      toggleOn: variant.isVisible,\n      onClick(event) {\n        event.stopPropagation();\n        ReactionProduct.toggleVisibility(variant);\n      }\n    };\n  }\n});\n\n/**\n * variant events\n */\n\nfunction showVariant(variant) {\n  const selectedProduct = ReactionProduct.selectedProduct();\n\n  ReactionProduct.setCurrentVariant(variant._id);\n  Session.set(\"variant-form-\" + variant._id, true);\n  Reaction.Router.go(\"product\", { handle: selectedProduct.handle, variantId: variant._id });\n\n  if (Reaction.hasPermission(\"createProduct\")) {\n    Reaction.showActionView({\n      label: \"Edit Variant\",\n      i18nKeyLabel: \"productDetailEdit.editVariant\",\n      template: \"variantForm\",\n      data: variant\n    });\n  }\n}\n\nTemplate.variant.events({\n  \"click .variant-edit\": function () {\n    showVariant(this);\n  },\n  \"dblclick .variant-detail\": function () {\n    showVariant(this);\n  },\n  \"click .variant-detail\": function () {\n    Alerts.removeSeen();\n\n    ReactionProduct.setCurrentVariant(this._id);\n  }\n});\n","import { ReactionProduct } from \"/lib/api\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Tracker } from \"meteor/tracker\";\nimport { Template } from \"meteor/templating\";\n\n/**\n * metaComponent helpers\n */\n\nTemplate.metaComponent.helpers({\n  buttonProps() {\n    const currentData = Template.currentData();\n\n    return {\n      icon() {\n        if (currentData.createNew) {\n          return \"plus\";\n        }\n\n        return \"times-circle\";\n      },\n      onClick() {\n        if (!currentData.createNew) {\n          const productId = ReactionProduct.selectedProductId();\n          Meteor.call(\"products/removeMetaFields\", productId, currentData);\n        }\n      }\n    };\n  }\n});\n\n\nTemplate.metaComponent.events({\n  \"change input\": function (event) {\n    const productId = ReactionProduct.selectedProductId();\n    const updateMeta = {\n      key: Template.instance().$(event.currentTarget).parent().children(\".metafield-key-input\").val(),\n      value: Template.instance().$(event.currentTarget).parent().children(\".metafield-value-input\").val()\n    };\n\n    if (this.key) {\n      const index = Template.instance().$(event.currentTarget).closest(\".metafield-list-item\").index();\n      Meteor.call(\"products/updateMetaFields\", productId, updateMeta, index);\n      Template.instance().$(event.currentTarget).animate({\n        backgroundColor: \"#e2f2e2\"\n      }).animate({\n        backgroundColor: \"#fff\"\n      });\n      return Tracker.flush();\n    }\n\n    if (updateMeta.value && !updateMeta.key) {\n      Template.instance().$(event.currentTarget).parent().children(\".metafield-key-input\").val(\"\").focus();\n    }\n    if (updateMeta.key && updateMeta.value) {\n      Meteor.call(\"products/updateMetaFields\", productId, updateMeta);\n      Tracker.flush();\n      Template.instance().$(event.currentTarget).parent().children(\".metafield-key-input\").val(\"\").focus();\n      return Template.instance().$(event.currentTarget).parent().children(\".metafield-value-input\").val(\"\");\n    }\n  }\n});\n","import autosize from \"autosize\";\nimport { Reaction, i18next, Logger } from \"/client/api\";\nimport { ReactionProduct } from \"/lib/api\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Session } from \"meteor/session\";\nimport { Template } from \"meteor/templating\";\n\n/**\n * productDetailEdit helpers\n */\n\nTemplate.productDetailEdit.helpers({\n  i18nPlaceholder: function () {\n    const i18nKey = `productDetailEdit.${this.field}`;\n    if (i18next.t(i18nKey) === i18nKey) {\n      Logger.warn(`returning empty placeholder productDetailEdit: ${i18nKey} no i18n key found.`);\n    } else {\n      return i18next.t(i18nKey);\n    }\n  }\n});\n\n/**\n * productDetailEdit events\n */\n\nTemplate.productDetailEdit.events({\n  \"change input,textarea\": function (event) {\n    const self = this;\n    const productId = ReactionProduct.selectedProductId();\n    Meteor.call(\"products/updateProductField\", productId, self.field,\n      Template.instance().$(event.currentTarget).val(),\n      (error, result) => {\n        if (error) {\n          return Alerts.inline(error.reason, \"error\", {\n            placement: \"productManagement\",\n            i18nKey: \"productDetail.errorMsg\",\n            id: self._id\n          });\n        }\n        if (result) {\n          // redirect to new url on title change\n          if (self.field === \"title\") {\n            Meteor.call(\"products/setHandle\", productId,\n              (err, res) => {\n                Alerts.removeSeen();\n                if (err) {\n                  Alerts.removeType(\"error\");\n                  Alerts.inline(err.reason, \"error\", {\n                    placement: \"productManagement\",\n                    i18nKey: \"productDetail.errorMsg\",\n                    id: self._id\n                  });\n                }\n                if (res) {\n                  Reaction.Router.go(\"product\", {\n                    handle: res\n                  });\n                }\n              }\n            );\n          }\n          // animate updated field\n          // TODO this needs to be moved into a component\n          return Template.instance().$(event.currentTarget).animate({\n            backgroundColor: \"#e2f2e2\"\n          }).animate({\n            backgroundColor: \"#fff\"\n          });\n        }\n      });\n\n    if (this.type === \"textarea\") {\n      autosize(Template.instance().$(event.currentTarget));\n    }\n\n    return Session.set(\"editing-\" + this.field, false);\n  }\n});\n\n/**\n * productDetailField events\n */\n\nTemplate.productDetailField.events({\n  \"click .product-detail-field\": function () {\n    if (Reaction.hasPermission(\"createProduct\")) {\n      const fieldClass = \"editing-\" + this.field;\n      Session.set(fieldClass, true);\n      // Tracker.flush();\n      return $(`.${this.field}-edit-input`).focus();\n    }\n  }\n});\n\n/**\n * productDetailEdit onRendered\n */\n\nTemplate.productDetailEdit.onRendered(function () {\n  return autosize($(\"textarea\"));\n});\n","import { $ } from \"meteor/jquery\";\nimport { Reaction } from \"/client/api\";\nimport { ReactionProduct } from \"/lib/api\";\nimport { Media } from \"/lib/collections\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Session } from \"meteor/session\";\nimport { Template } from \"meteor/templating\";\nimport Sortable from \"sortablejs\";\n\n/**\n * productImageGallery helpers\n */\n\n/*\n * uploadHandler method\n */\nfunction uploadHandler(event) {\n  // TODO: It would be cool to move this logic to common ValidatedMethod, but\n  // I can't find a way to do this, because of browser's `FileList` collection\n  // and it `Blob`s which is our event.target.files.\n  // There is a way to do this: http://stackoverflow.com/a/24003932. but it's too\n  // tricky\n  const productId = ReactionProduct.selectedProductId();\n  const variant = ReactionProduct.selectedVariant();\n  if (typeof variant !== \"object\") {\n    return Alerts.add(\"Please, create new Variant first.\", \"danger\", {\n      autoHide: true\n    });\n  }\n  const variantId = variant._id;\n  const shopId = ReactionProduct.selectedProduct().shopId || Reaction.getShopId();\n  const userId = Meteor.userId();\n  let count = Media.find({\n    \"metadata.variantId\": variantId\n  }).count();\n  // TODO: we need to mark the first variant images somehow for productGrid.\n  // But how do we know that this is the first, not second or other variant?\n  // Question is open. For now if product has more than 1 top variant, everyone\n  // will have a chance to be displayed\n  const toGrid = variant.ancestors.length === 1;\n\n  return FS.Utility.eachFile(event, function (file) {\n    const fileObj = new FS.File(file);\n    fileObj.metadata = {\n      ownerId: userId,\n      productId: productId,\n      variantId: variantId,\n      shopId: shopId,\n      priority: count,\n      toGrid: +toGrid // we need number\n    };\n    Media.insert(fileObj);\n    return count++;\n  });\n}\n\n/*\n * updateImagePriorities method\n */\nfunction updateImagePriorities() {\n  $(\".gallery > .gallery-image\")\n    .toArray()\n    .map((element, index) => {\n      const mediaId = element.getAttribute(\"data-index\");\n\n      Media.update(mediaId, {\n        $set: {\n          \"metadata.priority\": index\n        }\n      });\n    });\n}\n\n/**\n *  Product Image Gallery\n */\n\nTemplate.productImageGallery.helpers({\n  media: function () {\n    let mediaArray = [];\n    const variant = ReactionProduct.selectedVariant();\n\n    if (variant) {\n      mediaArray = Media.find({\n        \"metadata.variantId\": variant._id\n      }, {\n        sort: {\n          \"metadata.priority\": 1\n        }\n      });\n    }\n    return mediaArray;\n  },\n  variant: function () {\n    return ReactionProduct.selectedVariant();\n  }\n});\n\n/**\n * productImageGallery onRendered\n */\n\nTemplate.productImageGallery.onRendered(function () {\n  this.autorun(function () {\n    let $gallery;\n    if (Reaction.hasAdminAccess()) {\n      $gallery = $(\".gallery\")[0];\n\n      this.sortable = Sortable.create($gallery, {\n        group: \"gallery\",\n        handle: \".gallery-image\",\n        onUpdate() {\n          updateImagePriorities();\n        }\n      });\n    }\n  });\n});\n\n/*\n * productImageGallery events\n */\n\nTemplate.productImageGallery.events({\n  \"mouseenter .gallery > li\": function (event) {\n    event.stopImmediatePropagation();\n    // This is a workaround for an issue with FF refiring mouseover when the contents change\n    if (event.relatedTarget === null) {\n      return undefined;\n    }\n    if (!Reaction.hasPermission(\"createProduct\")) {\n      const first = $(\".gallery li:nth-child(1)\");\n      const target = Template.instance().$(event.currentTarget);\n      if ($(target).data(\"index\") !== first.data(\"index\")) {\n        return $(\".gallery li:nth-child(1)\").fadeOut(400, function () {\n          $(this).replaceWith(target);\n          first.css({\n            display: \"inline-block\"\n          }).appendTo($(\".gallery\"));\n          return $(\".gallery li:last-child\").fadeIn(100);\n        });\n      }\n    }\n    return undefined;\n  },\n  \"click .remove-image\": function () {\n    const imageUrl =\n      $(event.target)\n      .closest(\".gallery-image\")\n      .find(\"img\")\n      .attr(\"src\");\n\n    Alerts.alert({\n      title: \"Remove Media?\",\n      type: \"warning\",\n      showCancelButton: true,\n      imageUrl,\n      imageHeight: 150\n    }, (isConfirm) => {\n      if (isConfirm) {\n        const mediaId = this._id;\n\n        Media.remove({ _id: mediaId }, (error) => {\n          if (error) {\n            Alerts.toast(error.reason, \"warning\", {\n              autoHide: 10000\n            });\n          }\n\n          updateImagePriorities();\n        });\n      }\n    });\n  },\n  \"dropped #galleryDropPane\": uploadHandler\n});\n\n/*\n * imageUploader events\n */\n\nTemplate.imageUploader.events({\n  \"click #btn-upload\": function () {\n    return $(\"#files\").click();\n  },\n  \"change #files\": uploadHandler,\n  \"dropped #dropzone\": uploadHandler\n});\n\n/*\n * productImageGallery events\n */\n\nTemplate.productImageGallery.events({\n  \"click #img-upload\": function () {\n    return $(\"#files\").click();\n  },\n  \"load .img-responsive\": function (event, template) {\n    return Session.set(\"variantImgSrc\", template.$(\".img-responsive\").attr(\n      \"src\"));\n  }\n});\n","import { ReactionProduct } from \"/lib/api\";\nimport { Session } from \"meteor/session\";\nimport { Template } from \"meteor/templating\";\n\n/**\n* productSocial helpers\n*/\n\nTemplate.productSocial.helpers({\n  customSocialSettings: function () {\n    const product = ReactionProduct.selectedProduct();\n    let title = product.title;\n    if (ReactionProduct.selectedVariant()) {\n      title = ReactionProduct.selectedVariant().title;\n    }\n\n    const settings = {\n      placement: \"productDetail\",\n      faClass: \"\",\n      faSize: \"fa-lg\",\n      media: Session.get(\"variantImgSrc\"),\n      url: window.location.href,\n      title: title || \"\",\n      description: typeof product.description === \"string\" ? product.description.substring(0, 254) : void 0,\n      apps: {\n        facebook: {\n          description: product.facebookMsg\n        },\n        twitter: {\n          title: product.twitterMsg\n        },\n        googleplus: {\n          itemtype: \"Product\",\n          description: product.googleplusMsg\n        },\n        pinterest: {\n          description: product.pinterestMsg\n        }\n      }\n    };\n    return settings;\n  }\n});\n","import { Reaction } from \"/client/api\";\n\n/**\n * gridContent helpers\n */\n\nTemplate.gridContent.helpers({\n  pdpPath() {\n    const instance = Template.instance();\n    const product = instance.data;\n\n    if (product) {\n      let handle = product.handle;\n\n      if (product.__published) {\n        handle = product.__published.handle;\n      }\n\n      return Reaction.Router.pathFor(\"product\", {\n        hash: {\n          handle\n        }\n      });\n    }\n\n    return \"/\";\n  },\n  displayPrice: function () {\n    if (this.price && this.price.range) {\n      return this.price.range;\n    }\n  }\n});\n","import { Session } from \"meteor/session\";\nimport { Template } from \"meteor/templating\";\nimport { ReactiveDict } from \"meteor/reactive-dict\";\nimport { IconButton } from \"/imports/plugins/core/ui/client/components\";\n\nTemplate.gridControls.onCreated(function () {\n  this.state = new ReactiveDict();\n\n  this.autorun(() => {\n    if (this.data.product) {\n      const selectedProducts = Session.get(\"productGrid/selectedProducts\");\n      const isSelected = _.isArray(selectedProducts) ? selectedProducts.indexOf(this.data.product._id) >= 0 : false;\n\n      this.state.set(\"isSelected\", isSelected);\n    }\n  });\n});\n\nTemplate.gridControls.onRendered(function () {\n  return this.$(\"[data-toggle='tooltip']\").tooltip({\n    position: \"top\"\n  });\n});\n\nTemplate.gridControls.helpers({\n  checked: function () {\n    return Template.instance().state.equals(\"isSelected\", true);\n  },\n\n  isVisible() {\n    const currentData = Template.currentData();\n    return currentData && currentData.product && currentData.product.isVisible;\n  },\n\n  hasChanges() {\n    const { product } = Template.currentData();\n\n    if (product.__draft) {\n      return true;\n    }\n\n    return false;\n  },\n\n  VisibilityButton() {\n    return {\n      component: IconButton,\n      icon: \"\",\n      onIcon: \"\",\n      status: \"info\"\n    };\n  }\n});\n","import _ from \"lodash\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Session } from \"meteor/session\";\nimport { Template } from \"meteor/templating\";\nimport { Tracker } from \"meteor/tracker\";\nimport { $ } from \"meteor/jquery\";\nimport { Reaction } from \"/client/api\";\nimport Logger from \"/client/modules/logger\";\nimport { ReactionProduct } from \"/lib/api\";\nimport { Media } from \"/lib/collections\";\nimport { isRevisionControlEnabled } from \"/imports/plugins/core/revisions/lib/api\";\n\n\nTemplate.productGridItems.onRendered(function () {\n  $(\".page > main\").on(\"click\", function (event) {\n    // Do nothing if we are in preview mode\n    if (Reaction.isPreview() === false) {\n      // Don't trigger the clear selectiion if we're clicking on a grid item.\n      if ($(event.target).closest(\".product-grid-item\").length === 0) {\n        const selectedProducts = Session.get(\"productGrid/selectedProducts\");\n\n        // Do we have any selected products?\n        // If we do then lets reset the Grid Settings ActionView\n        if (Array.isArray(selectedProducts) && selectedProducts.length) {\n          // Reset sessions ver of selected products\n          Session.set(\"productGrid/selectedProducts\", []);\n\n          // Reset the action view of selected products\n          Reaction.setActionView({\n            label: \"Grid Settings\",\n            i18nKeyLabel: \"gridSettingsPanel.title\",\n            template: \"productSettings\",\n            type: \"product\",\n            data: {}\n          });\n        }\n      }\n    }\n  });\n});\n\nTemplate.productGridItems.onDestroyed(function () {\n  $(\".page > main\").off(\"click\");\n});\n\n/**\n * productGridItems helpers\n */\n\nTemplate.productGridItems.helpers({\n  pdpPath() {\n    const instance = Template.instance();\n    const product = instance.data;\n\n    if (product) {\n      let handle = product.handle;\n\n      if (product.__published) {\n        handle = product.__published.handle;\n      }\n\n      return Reaction.Router.pathFor(\"product\", {\n        hash: {\n          handle\n        }\n      });\n    }\n\n    return \"/\";\n  },\n\n  controlProps() {\n    const instance = Template.instance();\n\n    return {\n      product: instance.data,\n      onEditButtonClick() {\n        const data = instance.data;\n\n        const $checkbox = instance.$(`input[type=checkbox][value=${data._id}]`);\n\n        Session.set(\"productGrid/selectedProducts\", []);\n        $checkbox.prop(\"checked\", true).trigger(\"change\");\n      },\n      onPublishButtonClick() {\n        if (isRevisionControlEnabled()) {\n          Meteor.call(\"products/updateProductField\", instance.data._id, \"isVisible\", !instance.data.isVisible);\n        } else {\n          ReactionProduct.publishProduct(instance.data);\n        }\n      }\n    };\n  },\n  media: function () {\n    const media = Media.findOne({\n      \"metadata.productId\": this._id,\n      \"metadata.toGrid\": 1\n    }, {\n      sort: { \"metadata.priority\": 1, \"uploadedAt\": 1 }\n    });\n\n    return media instanceof FS.File ? media : false;\n  },\n  additionalMedia: function () {\n    const mediaArray = Media.find({\n      \"metadata.productId\": this._id,\n      \"metadata.priority\": {\n        $gt: 0\n      },\n      \"metadata.toGrid\": 1\n    }, { limit: 3 });\n\n    if (mediaArray.count() > 1) {\n      return mediaArray;\n    }\n\n    return false;\n  },\n  weightClass: function () {\n    const tag = ReactionProduct.getTag();\n    const positions = this.positions && this.positions[tag] || {};\n    const weight = positions.weight || 0;\n    switch (weight) {\n      case 1:\n        return \"product-medium\";\n      case 2:\n        return \"product-large\";\n      default:\n        return \"product-small\";\n    }\n  },\n  isSelected: function () {\n    if (Reaction.isPreview() === false) {\n      return _.includes(Session.get(\"productGrid/selectedProducts\"), this._id) ? \"active\" : \"\";\n    }\n    return false;\n  },\n  isMediumWeight: function () {\n    const tag = ReactionProduct.getTag();\n    const positions = this.positions && this.positions[tag] || {};\n    const weight = positions.weight || 0;\n\n    return weight === 1;\n  },\n  isLargeWeight: function () {\n    const tag = ReactionProduct.getTag();\n    const positions = this.positions && this.positions[tag] || {};\n    const weight = positions.weight || 0;\n\n    return weight === 3;\n  },\n  // TODO is it used?\n  shouldShowAdditionalImages: function () {\n    if (this.isMediumWeight && this.mediaArray) {\n      return true;\n    }\n    return false;\n  },\n  // this is needed to get `pinned` from the item template\n  positions() {\n    const tag = ReactionProduct.getTag();\n    return this.positions && this.positions[tag] || {};\n  }\n});\n\n/**\n * productGridItems events\n */\n\nTemplate.productGridItems.events({\n  \"dblclick [data-event-action=productClick]\": function (event, template) {\n    const instance = template;\n    const product = instance.data;\n    const handle = product.__published && product.__published.handle || product.handle;\n\n    Reaction.Router.go(\"product\", {\n      handle: handle\n    });\n\n    Reaction.setActionView({\n      i18nKeyLabel: \"productDetailEdit.productSettings\",\n      label: \"Product Settings\",\n      template: \"ProductAdmin\"\n    });\n  },\n  \"click [data-event-action=productClick]\": function (event, template) {\n    if (Reaction.hasPermission(\"createProduct\") && Reaction.isPreview() === false) {\n      event.preventDefault();\n\n      const isSelected = $(event.target).closest(\"li.product-grid-item.active\").length;\n\n      if (isSelected) {\n        // If product is already selected, and you are single clicking WITH command key, things whould happen\n        if (event.metaKey || event.ctrlKey || event.shiftKey) {\n          let $checkbox = template.$(`input[type=checkbox][value=${this._id}]`);\n          const $items = $(\"li.product-grid-item\");\n          const $activeItems = $(\"li.product-grid-item.active\");\n          const selected = $activeItems.length;\n\n          if (event.shiftKey && selected > 0) {\n            const indexes = [\n              $items.index($checkbox.parents(\"li.product-grid-item\")),\n              $items.index($activeItems.get(0)),\n              $items.index($activeItems.get(selected - 1))\n            ];\n            for (let i = _.min(indexes); i <= _.max(indexes); i++) {\n              $checkbox = $(\"input[type=checkbox]\", $items.get(i));\n              if ($checkbox.prop(\"checked\") === false) {\n                $checkbox.prop(\"checked\", true).trigger(\"change\");\n              }\n            }\n          } else {\n            $checkbox.prop(\"checked\", !$checkbox.prop(\"checked\")).trigger(\"change\");\n          }\n        }\n      } else {\n        if (event.metaKey || event.ctrlKey || event.shiftKey) {\n          let $checkbox = template.$(`input[type=checkbox][value=${this._id}]`);\n          const $items = $(\"li.product-grid-item\");\n          const $activeItems = $(\"li.product-grid-item.active\");\n          const selected = $activeItems.length;\n\n          if (event.shiftKey && selected > 0) {\n            const indexes = [\n              $items.index($checkbox.parents(\"li.product-grid-item\")),\n              $items.index($activeItems.get(0)),\n              $items.index($activeItems.get(selected - 1))\n            ];\n            for (let i = _.min(indexes); i <= _.max(indexes); i++) {\n              $checkbox = $(\"input[type=checkbox]\", $items.get(i));\n              if ($checkbox.prop(\"checked\") === false) {\n                $checkbox.prop(\"checked\", true).trigger(\"change\");\n              }\n            }\n          } else {\n            $checkbox.prop(\"checked\", !$checkbox.prop(\"checked\")).trigger(\"change\");\n          }\n        } else {\n          const $checkbox = template.$(`input[type=checkbox][value=${this._id}]`);\n\n          Session.set(\"productGrid/selectedProducts\", []);\n          $checkbox.prop(\"checked\", true).trigger(\"change\");\n        }\n      }\n    } else {\n      event.preventDefault();\n\n      const instance = template;\n      const product = instance.data;\n      const handle = product.__published && product.__published.handle || product.handle;\n\n      Reaction.Router.go(\"product\", {\n        handle: handle\n      });\n    }\n  },\n  \"click [data-event-action=selectSingleProduct]\": function (event, template) {\n    event.preventDefault();\n    const { data } = Template.instance();\n\n    const $checkbox = template.$(`input[type=checkbox][value=${data._id}]`);\n\n    Session.set(\"productGrid/selectedProducts\", []);\n    $checkbox.prop(\"checked\", true).trigger(\"change\");\n  },\n  \"click .publish-product\"(event, instance) {\n    ReactionProduct.publishProduct(instance.data);\n  },\n  \"click .delete-product\": function (event) {\n    event.preventDefault();\n    ReactionProduct.archiveProduct(this);\n  },\n  \"click .update-product-weight\": function (event) {\n    event.preventDefault();\n\n    const tag = ReactionProduct.getTag();\n    const positions = this.positions && this.positions[tag] || {};\n    let weight = positions.weight || 0;\n\n    if (weight < 2) {\n      weight++;\n    } else {\n      weight = 0;\n    }\n\n    const position = {\n      weight: weight,\n      updatedAt: new Date()\n    };\n    Meteor.call(\"products/updateProductPosition\", this._id, position, tag, error => {\n      if (error) {\n        Logger.warn(error);\n        throw new Meteor.Error(403, error);\n      }\n    });\n    return Tracker.flush();\n  }\n});\n","import { ReactionProduct } from \"/lib/api\";\n\n/**\n * gridNotice helpers\n */\nTemplate.gridNotice.helpers({\n  isLowQuantity: function () {\n    const topVariants = ReactionProduct.getTopVariants(this._id);\n\n    for (const topVariant of topVariants) {\n      const inventoryThreshold = topVariant.lowInventoryWarningThreshold;\n      const inventoryQuantity = ReactionProduct.getVariantQuantity(topVariant);\n\n      if (inventoryQuantity !== 0 && inventoryThreshold >= inventoryQuantity) {\n        return true;\n      }\n    }\n    return false;\n  },\n  isSoldOut: function () {\n    const topVariants = ReactionProduct.getTopVariants(this._id);\n\n    for (const topVariant of topVariants) {\n      const inventoryQuantity = ReactionProduct.getVariantQuantity(topVariant);\n\n      if (inventoryQuantity > 0) {\n        return false;\n      }\n    }\n    return true;\n  },\n  isBackorder: function () {\n    return this.isBackorder;\n  }\n});\n","import _ from \"lodash\";\nimport { Session } from \"meteor/session\";\nimport { Template } from \"meteor/templating\";\nimport { Reaction } from \"/client/api\";\nimport Logger from \"/client/modules/logger\";\nimport { ReactionProduct } from \"/lib/api\";\nimport Sortable from \"sortablejs\";\n\n/**\n * productGrid helpers\n */\n\nTemplate.productGrid.onCreated(function () {\n  const selectedProducts = Reaction.getUserPreferences(\"reaction-product-variant\", \"selectedGridItems\");\n\n  if (_.isEmpty(selectedProducts)) {\n    Reaction.hideActionView();\n  } else {\n    // Save the selected items to the Session\n    Session.set(\"productGrid/selectedProducts\", _.uniq(selectedProducts));\n\n    const products = Template.currentData().products;\n\n    if (products) {\n      const filteredProducts = _.filter(products, (product) => {\n        return _.includes(selectedProducts, product._id);\n      });\n\n      if (Reaction.isPreview() === false) {\n        Reaction.showActionView({\n          label: \"Grid Settings\",\n          i18nKeyLabel: \"gridSettingsPanel.title\",\n          template: \"productSettings\",\n          type: \"product\",\n          data: {\n            products: filteredProducts\n          }\n        });\n      }\n    }\n  }\n});\n\nTemplate.productGrid.onRendered(function () {\n  const instance = this;\n\n  if (Reaction.hasPermission(\"createProduct\")) {\n    const productSort = $(\".product-grid-list\")[0];\n\n    this.sortable = Sortable.create(productSort, {\n      group: \"products\",\n      handle: \".product-grid-item\",\n      onUpdate() {\n        const tag = ReactionProduct.getTag();\n\n        instance.$(\".product-grid-item\")\n          .toArray()\n          .map((element, index) => {\n            const productId = element.getAttribute(\"id\");\n            const position = {\n              position: index,\n              updatedAt: new Date()\n            };\n\n            Meteor.call(\"products/updateProductPosition\", productId, position, tag,\n              error => {\n                if (error) {\n                  Logger.warn(error);\n                  throw new Meteor.Error(403, error);\n                }\n              });\n          });\n\n        Tracker.flush();\n      }\n    });\n  }\n});\n\nTemplate.productGrid.events({\n  \"click [data-event-action=loadMoreProducts]\": (event) => {\n    event.preventDefault();\n    loadMoreProducts();\n  },\n  \"change input[name=selectProduct]\": (event) => {\n    let selectedProducts = Session.get(\"productGrid/selectedProducts\");\n\n    if (event.target.checked) {\n      selectedProducts.push(event.target.value);\n    } else {\n      selectedProducts = _.without(selectedProducts, event.target.value);\n    }\n\n    Reaction.setUserPreferences(\"reaction-product-variant\", \"selectedGridItems\", selectedProducts);\n\n    // Save the selected items to the Session\n    Session.set(\"productGrid/selectedProducts\", _.uniq(selectedProducts));\n\n    const products = Template.currentData().products;\n\n    if (products) {\n      const filteredProducts = _.filter(products, (product) => {\n        return _.includes(selectedProducts, product._id);\n      });\n\n      Reaction.showActionView({\n        label: \"Grid Settings\",\n        i18nKeyLabel: \"gridSettingsPanel.title\",\n        template: \"productSettings\",\n        type: \"product\",\n        data: {\n          products: filteredProducts\n        }\n      });\n    }\n  }\n});\n\nTemplate.productGrid.helpers({\n  loadMoreProducts() {\n    return Template.instance().state.equals(\"canLoadMoreProducts\", true);\n  },\n  products() {\n    return Template.currentData().products;\n  }\n});\n","import GridPublishContainer from \"../../../containers/gridPublishContainer\";\n\nTemplate.gridPublishControls.helpers({\n  PublishComponent() {\n    return {\n      component: GridPublishContainer\n    };\n  }\n});\n","import { ReactionProduct } from \"/lib/api\";\nimport { Media } from \"/lib/collections\";\n\n/**\n * productList helpers\n */\n\nTemplate.productList.helpers({\n  products: function () {\n    return ReactionProduct.getProductsByTag(this.tag);\n  },\n  media: function () {\n    let defaultImage;\n    const variants = getTopVariants();\n    if (variants.length > 0) {\n      const variantId = variants[0]._id;\n      defaultImage = Media.findOne({\n        \"metadata.variantId\": variantId\n      }, {\n        sort: { \"metadata.priority\": 1, \"uploadedAt\": 1 }\n      });\n    }\n    if (defaultImage) {\n      return defaultImage;\n    }\n    return false;\n  }\n});\n","import _ from \"lodash\";\nimport { ReactiveDict } from \"meteor/reactive-dict\";\nimport { Reaction } from \"/client/api\";\nimport Logger from \"/client/modules/logger\";\nimport { ReactionProduct } from \"/lib/api\";\nimport { Media, Products } from \"/lib/collections\";\nimport { isRevisionControlEnabled } from \"/imports/plugins/core/revisions/lib/api\";\nimport { applyProductRevision } from \"/lib/api/products\";\n\nfunction updateVariantProductField(variants, field, value) {\n  return variants.map(variant => {\n    Meteor.call(\"products/updateProductField\", variant._id, field, value);\n  });\n}\n\nTemplate.productSettings.onCreated(function () {\n  this.state = new ReactiveDict();\n  this.state.setDefault({\n    products: [],\n    productIds: []\n  });\n\n  this.autorun(() => {\n    const currentData = Template.currentData();\n\n    if (_.isArray(currentData.products)) {\n      const productIds = currentData.products.map((product) => {\n        return product._id;\n      });\n\n      const products = Products.find({\n        _id: {\n          $in: productIds\n        }\n      }).map((product) => {\n        return applyProductRevision(product);\n      });\n\n      this.state.set(\"productIds\", productIds);\n      this.state.set(\"products\", products);\n    }\n  });\n});\n\nTemplate.productSettings.helpers({\n  isVisible() {\n    const instance = Template.instance();\n    const products = instance.state.get(\"products\") || [];\n\n    // Use the first selected product to determin status of bulk, isVisible button\n    if (Array.isArray(products) && products.length) {\n      return products[0].isVisible;\n    }\n\n    return false;\n  },\n  hasSelectedProducts() {\n    return this.products && this.products.length > 0;\n  },\n  itemWeightActive: function (weight) {\n    const instance = Template.instance();\n    const products = instance.state.get(\"products\");\n    const tag = ReactionProduct.getTag();\n\n    for (const product of products) {\n      const positions = product.positions && product.positions[tag] || {};\n      const currentWeight = positions.weight || 0;\n      if (currentWeight === weight) {\n        return \"active\";\n      }\n    }\n    return \"\";\n  }\n});\n\nTemplate.productSettingsListItem.helpers({\n  pdpPath() {\n    const product = this;\n\n    if (product) {\n      let handle = product.handle;\n\n      if (product.__published) {\n        handle = product.__published.handle;\n      }\n\n      return Reaction.Router.pathFor(\"product\", {\n        hash: {\n          handle\n        }\n      });\n    }\n\n    return \"/\";\n  },\n\n  displayPrice() {\n    if (this._id) {\n      return ReactionProduct.getProductPriceRange(this._id).range;\n    }\n    return null;\n  },\n\n  media() {\n    const media = Media.findOne({\n      \"metadata.productId\": this._id,\n      \"metadata.priority\": 0,\n      \"metadata.toGrid\": 1\n    }, { sort: { uploadedAt: 1 } });\n\n    return media instanceof FS.File ? media : false;\n  },\n\n  listItemActiveClassName(productId) {\n    const handle = Reaction.Router.current().params.handle;\n\n    if (ReactionProduct.equals(\"productId\", productId) && handle) {\n      return \"active\";\n    }\n\n    return \"\";\n  }\n});\n\n/**\n * productExtendedControls events\n */\n\nTemplate.productSettings.events({\n  \"click [data-event-action=publishProduct]\": function () {\n    const instance = Template.instance();\n    const products = instance.state.get(\"products\") || [];\n\n    if (isRevisionControlEnabled()) {\n      for (const product of products) {\n        // Update the visibility using the first selected product to determine the proper\n        // visibility toggle. This is to ensure that all selected products will become visible or not visible\n        // at the same time so it's not confusing.\n        Meteor.call(\"products/updateProductField\", product._id, \"isVisible\", !products[0].isVisible);\n        // update the variants visibility\n        const variants = Products.find({\n          ancestors: {\n            $in: [product._id]\n          }\n        });\n        updateVariantProductField(variants, \"isVisible\", !products[0].isVisible);\n      }\n    } else {\n      // The legacy behavior will bulk toggle visibilty of each product seperatly.\n      //\n      // Example:\n      // If you selected 10 products, and 5 were visible and 5 were not visible, and then\n      // clicked the visibility button, 5 products would switched from not visible to visible, and the other 5\n      // would be swiched from visible to not visible.\n      ReactionProduct.publishProduct(products);\n    }\n  },\n  \"click [data-event-action=cloneProduct]\": function () {\n    ReactionProduct.cloneProduct(this.products);\n  },\n  \"click [data-event-action=archiveProduct]\": function () {\n    ReactionProduct.archiveProduct(this.products);\n  },\n  \"click [data-event-action=changeProductWeight]\": function (event) {\n    event.preventDefault();\n    const tag = ReactionProduct.getTag();\n    for (const product of this.products) {\n      const weight = Template.instance().$(event.currentTarget).data(\"event-data\") || 0;\n      const positions = {\n        weight: weight,\n        updatedAt: new Date()\n      };\n      /* eslint no-loop-func: 1 */\n      //\n      //\n      Meteor.call(\"products/updateProductPosition\", product._id, positions, tag,\n        (error) => { // eslint-disable-line no-loop-func\n          if (error) {\n            Logger.warn(error);\n            throw new Meteor.Error(403, error);\n          }\n        }\n      );\n    }\n  }\n});\n","import { Reaction } from \"/client/api\";\nimport { ReactionProduct } from \"/lib/api\";\nimport { applyProductRevision } from \"/lib/api/products\";\nimport { Products, Tags } from \"/lib/collections\";\nimport { Session } from \"meteor/session\";\nimport { Template } from \"meteor/templating\";\nimport { ITEMS_INCREMENT } from \"/client/config/defaults\";\n\n/**\n * loadMoreProducts\n * @summary whenever #productScrollLimitLoader becomes visible, retrieve more results\n * this basically runs this:\n * Session.set('productScrollLimit', Session.get('productScrollLimit') + ITEMS_INCREMENT);\n * @return {undefined}\n */\nfunction loadMoreProducts() {\n  let threshold;\n  const target = $(\"#productScrollLimitLoader\");\n  let scrollContainer = $(\"#reactionAppContainer\");\n\n  if (scrollContainer.length === 0) {\n    scrollContainer = $(window);\n  }\n\n  if (target.length) {\n    threshold = scrollContainer.scrollTop() + scrollContainer.height() - target.height();\n\n    if (target.offset().top < threshold) {\n      if (!target.data(\"visible\")) {\n        target.data(\"productScrollLimit\", true);\n        Session.set(\"productScrollLimit\", Session.get(\"productScrollLimit\") + ITEMS_INCREMENT || 24);\n      }\n    } else {\n      if (target.data(\"visible\")) {\n        target.data(\"visible\", false);\n      }\n    }\n  }\n}\n\n\nTemplate.products.onCreated(function () {\n  this.products = ReactiveVar();\n  this.state = new ReactiveDict();\n  this.state.setDefault({\n    initialLoad: true,\n    slug: \"\",\n    canLoadMoreProducts: false\n  });\n\n  // We're not ready to serve prerendered page until products have loaded\n  window.prerenderReady = false;\n\n\n  // Update product subscription\n  this.autorun(() => {\n    const slug = Reaction.Router.getParam(\"slug\");\n    const tag = Tags.findOne({ slug: slug }) || Tags.findOne(slug);\n    const scrollLimit = Session.get(\"productScrollLimit\");\n    let tags = {}; // this could be shop default implementation needed\n\n    if (tag) {\n      tags = { tags: [tag._id] };\n    }\n\n    // if we get an invalid slug, don't return all products\n    if (!tag && slug) {\n      return;\n    }\n\n    if (this.state.equals(\"slug\", slug) === false && this.state.equals(\"initialLoad\", false)) {\n      this.state.set(\"initialLoad\", true);\n    }\n\n    this.state.set(\"slug\", slug);\n\n    const queryParams = Object.assign({}, tags, Reaction.Router.current().queryParams);\n    const productsSubscription = this.subscribe(\"Products\", scrollLimit, queryParams);\n\n    // Once our products subscription is ready, we are ready to render\n    if (productsSubscription.ready()) {\n      window.prerenderReady = true;\n    }\n\n    // we are caching `currentTag` or if we are not inside tag route, we will\n    // use shop name as `base` name for `positions` object\n    const currentTag = ReactionProduct.getTag();\n    const productCursor = Products.find({\n      ancestors: [],\n      type: { $in: [\"simple\"] }\n    }, {\n      sort: {\n        [`positions.${currentTag}.position`]: 1,\n        [`positions.${currentTag}.createdAt`]: 1,\n        createdAt: 1\n      }\n    });\n\n    const products = productCursor.map((product) => {\n      return applyProductRevision(product);\n    });\n\n    const sortedProducts = ReactionProduct.sortProducts(products, currentTag);\n\n    this.state.set(\"canLoadMoreProducts\", productCursor.count() >= Session.get(\"productScrollLimit\"));\n    this.products.set(sortedProducts);\n    Session.set(\"productGrid/products\", sortedProducts);\n  });\n\n  this.autorun(() => {\n    const isActionViewOpen = Reaction.isActionViewOpen();\n    if (isActionViewOpen === false) {\n      Session.set(\"productGrid/selectedProducts\", []);\n    }\n  });\n});\n\nTemplate.products.onRendered(() => {\n  // run the above func every time the user scrolls\n  $(\"#reactionAppContainer\").on(\"scroll\", loadMoreProducts);\n  $(window).on(\"scroll\", loadMoreProducts);\n});\n\nTemplate.products.helpers({\n  tag: function () {\n    const id = Reaction.Router.getParam(\"_tag\");\n    return {\n      tag: Tags.findOne({ slug: id }) || Tags.findOne(id)\n    };\n  },\n\n  products() {\n    return Template.instance().products.get();\n  },\n\n  loadMoreProducts() {\n    return Template.instance().state.equals(\"canLoadMoreProducts\", true);\n  },\n\n  initialLoad() {\n    return Template.instance().state.set(\"initialLoad\", true);\n  },\n\n  ready() {\n    const instance = Template.instance();\n    const isInitialLoad = instance.state.equals(\"initialLoad\", true);\n    const isReady = instance.subscriptionsReady();\n\n    if (isInitialLoad === false) {\n      return true;\n    }\n\n    if (isReady) {\n      instance.state.set(\"initialLoad\", false);\n      return true;\n    }\n\n    return false;\n  }\n});\n\n/**\n * products events\n */\n\nTemplate.products.events({\n  \"click #productListView\": function () {\n    $(\".product-grid\").hide();\n    return $(\".product-list\").show();\n  },\n  \"click #productGridView\": function () {\n    $(\".product-list\").hide();\n    return $(\".product-grid\").show();\n  },\n  \"click .product-list-item\": function () {\n    // go to new product\n    Reaction.Router.go(\"product\", {\n      handle: this._id\n    });\n  },\n  \"click [data-event-action=loadMoreProducts]\": (event) => {\n    event.preventDefault();\n    loadMoreProducts();\n  }\n});\n","import { isEqual } from \"lodash\";\nimport React, { Component, PropTypes } from \"react\";\nimport Velocity from \"velocity-animate\";\nimport \"velocity-animate/velocity.ui\";\nimport update from \"react/lib/update\";\nimport { formatPriceString } from \"/client/api\";\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardGroup,\n  Divider,\n  Select,\n  SettingsCard,\n  Switch,\n  TextField\n} from \"/imports/plugins/core/ui/client/components\";\n\nconst fieldNames = [\n  \"title\",\n  \"originCountry\",\n  \"compareAtPrice\",\n  \"price\",\n  \"width\",\n  \"length\",\n  \"height\",\n  \"weight\",\n  \"taxCode\",\n  \"taxDescription\",\n  \"inventoryQuantity\",\n  \"inventoryPolicy\",\n  \"lowInventoryWarningThreshold\"\n];\n\nconst fieldGroups = {\n  title: { group: \"variantDetails\" },\n  originCountry: { group: \"variantDetails\" },\n  compareAtPrice: { group: \"variantDetails\" },\n  price: { group: \"variantDetails\" },\n  width: { group: \"variantDetails\" },\n  length: { group: \"variantDetails\" },\n  height: { group: \"variantDetails\" },\n  weight: { group: \"variantDetails\" },\n  taxCode: { group: \"taxable\" },\n  taxDescription: { group: \"taxable\" },\n  inventoryQuantity: { group: \"inventoryManagement\" },\n  inventoryPolicy: { group: \"inventoryManagement\" },\n  lowInventoryWarningThreshold: { group: \"inventoryManagement\" }\n};\n\nclass VariantForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      expandedCard: this.fieldGroupForFieldName(props.editFocus),\n      variant: props.variant,\n      inventoryPolicy: props.variant.inventoryPolicy,\n      taxable: props.variant.taxable,\n      inventoryManagement: props.variant.inventoryManagement\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const nextVariant = nextProps.variant || {};\n    const currentVariant = this.props.variant || {};\n\n    if (!isEqual(nextVariant, currentVariant)) {\n      for (const fieldName of fieldNames) {\n        if (nextVariant[fieldName] !== currentVariant[fieldName]) {\n          this.animateFieldFlash(fieldName);\n        }\n      }\n    }\n    const cardGroupName = this.fieldGroupForFieldName(nextProps.editFocus);\n\n    this.setState({\n      expandedCard: cardGroupName,\n      variant: nextProps.variant\n    });\n  }\n\n  fieldGroupForFieldName(field) {\n    // Other wise, if a field was passed\n    // const fieldName = this.state.viewProps.field;\n\n    let fieldName;\n\n    // If the field is an array of field name\n    if (Array.isArray(field) && field.length) {\n      // Use the first field name\n      fieldName = field[0];\n    } else {\n      fieldName = field;\n    }\n\n    const fieldData = fieldGroups[fieldName];\n\n    if (fieldData && fieldData.group) {\n      return fieldData.group;\n    }\n\n    return fieldName;\n  }\n\n  animateFieldFlash(fieldName) {\n    const fieldRef = this.refs[`${fieldName}Input`];\n\n    if (fieldRef) {\n      const input = fieldRef.refs.input;\n\n      Velocity.RunSequence([\n        { e: input, p: { backgroundColor: \"#e2f2e2\" }, o: { duration: 200 } },\n        { e: input, p: { backgroundColor: \"#fff\" }, o: { duration: 100 } }\n      ]);\n    }\n  }\n\n  get variant() {\n    return this.state.variant || this.props.variant || {};\n  }\n\n  handleFieldChange = (event, value, field) => {\n    const newState = update(this.state, {\n      variant: {\n        $merge: {\n          [field]: value\n        }\n      }\n    });\n\n    this.setState(newState);\n  }\n\n  handleFieldBlur = (event, value, field) => {\n    if (this.props.onVariantFieldSave) {\n      this.props.onVariantFieldSave(this.variant._id, field, value);\n    }\n  }\n\n  handleSelectChange = (value, field) => {\n    this.handleFieldChange(event, value, field);\n\n    if (this.props.onVariantFieldSave) {\n      this.props.onVariantFieldSave(this.variant._id, field, value);\n    }\n  }\n\n  handleCheckboxChange = (event, value, field) => {\n    this.setState({\n      [field]: value\n    });\n\n    this.handleFieldBlur(event, value, field);\n  }\n\n  handleCardExpand(cardName) {\n    if (this.props.onCardExpand) {\n      this.props.onCardExpand(cardName);\n    }\n  }\n\n  isExpanded(groupName) {\n    if (this.state.expandedCard && this.state.expandedCard === groupName) {\n      return true;\n    }\n\n    return false;\n  }\n\n  renderTaxCodeField() {\n    if (this.props.isProviderEnabled()) {\n      return (\n        <Select\n          clearable={false}\n          i18nKeyLabel=\"productVariant.taxCode\"\n          i18nKeyPlaceholder=\"productVariant.selectTaxCode\"\n          label=\"Tax Code\"\n          name=\"taxCode\"\n          ref=\"taxCodeInput\"\n          options={this.props.fetchTaxCodes()}\n          onChange={this.handleSelectChange}\n          value={this.variant.taxCode}\n        />\n      );\n    }\n    return (\n      <TextField\n        i18nKeyLabel=\"productVariant.taxCode\"\n        i18nKeyPlaceholder=\"productVariant.selectTaxCode\"\n        placeholder=\"Select Tax Code\"\n        label=\"Tax Code\"\n        name=\"taxCode\"\n        ref=\"taxCodeInput\"\n        value={this.variant.taxCode}\n        onBlur={this.handleFieldBlur}\n        onChange={this.handleFieldChange}\n        onReturnKeyDown={this.handleFieldBlur}\n      />\n    );\n  }\n\n  renderArchiveButton() {\n    if (this.props.isDeleted) {\n      return (\n        <Button\n          icon=\"refresh\"\n          className=\"rui btn btn-default btn-restore-variant flat\"\n          tooltip=\"Restore\"\n          onClick={() => this.props.restoreVariant(this.variant)}\n        />\n      );\n    }\n    return (\n      <Button\n        icon=\"archive\"\n        className=\"rui btn btn-default btn-remove-variant flat\"\n        tooltip=\"Archive\"\n        onClick={() => this.props.removeVariant(this.variant)}\n      />\n    );\n  }\n\n  renderArchivedLabel() {\n    if (this.props.isDeleted) {\n      return (\n        <div className=\"panel-subheading\">\n          <span className=\"badge badge-danger\" data-i18n=\"app.archived\">\n            <span>Archived</span>\n          </span>\n        </div>\n      );\n    }\n  }\n\n  renderQuantityField() {\n    if (this.props.hasChildVariants(this.variant)) {\n      return (\n        <div className=\"col-sm-6\">\n          <TextField\n            i18nKeyLabel=\"productVariant.inventoryQuantity\"\n            i18nKeyPlaceholder=\"0\"\n            placeholder=\"0\"\n            label=\"Quantity\"\n            name=\"inventoryQuantity\"\n            ref=\"inventoryQuantityInput\"\n            value={this.props.onUpdateQuantityField(this.variant)}\n            style={{ backgroundColor: \"lightgrey\", cursor: \"not-allowed\" }}\n            disabled={true}\n          />\n        </div>\n      );\n    }\n    return (\n      <div className=\"col-sm-6\">\n        <TextField\n          i18nKeyLabel=\"productVariant.inventoryQuantity\"\n          i18nKeyPlaceholder=\"0\"\n          placeholder=\"0\"\n          label=\"Quantity\"\n          name=\"inventoryQuantity\"\n          ref=\"inventoryQuantityInput\"\n          value={this.variant.inventoryQuantity}\n          onChange={this.handleFieldChange}\n          onBlur={this.handleFieldBlur}\n          onReturnKeyDown={this.handleFieldBlur}\n        />\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <CardGroup>\n        <Card\n          expanded={this.isExpanded(\"variantDetails\")}\n          onExpand={this.handleCardExpand.bind(this, \"variantDetails\")}\n        >\n          <CardHeader\n            actAsExpander={true}\n            i18nKeyTitle=\"productDetailEdit.variantDetails\"\n            title=\"Variant Details\"\n          >\n            {this.renderArchivedLabel()}\n            <Button\n              icon=\"files-o\"\n              className=\"rui btn btn-default btn-clone-variant flat\"\n              tooltip=\"Duplicate\"\n              onClick={() => this.props.cloneVariant(this.variant)}\n            />\n            {this.renderArchiveButton()}\n          </CardHeader>\n          <CardBody expandable={true}>\n            <TextField\n              i18nKeyLabel=\"productVariant.title\"\n              i18nKeyPlaceholder=\"productVariant.title\"\n              placeholder=\"Label\"\n              label=\"Label\"\n              name=\"title\"\n              ref=\"titleInput\"\n              value={this.variant.title}\n              onBlur={this.handleFieldBlur}\n              onChange={this.handleFieldChange}\n              onReturnKeyDown={this.handleFieldBlur}\n            />\n            <Select\n              clearable={false}\n              i18nKeyLabel=\"productVariant.originCountry\"\n              i18nKeyPlaceholder=\"productVariant.originCountry\"\n              label=\"Origin Country\"\n              name=\"originCountry\"\n              ref=\"countryOfOriginInput\"\n              options={this.props.countries}\n              onChange={this.handleSelectChange}\n              value={this.variant.originCountry}\n            />\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <TextField\n                  i18nKeyLabel=\"productVariant.compareAtPrice\"\n                  i18nKeyPlaceholder={formatPriceString(\"0.00\")}\n                  placeholder={formatPriceString(\"0.00\")}\n                  label=\"MSRP\"\n                  name=\"compareAtPrice\"\n                  ref=\"compareAtPriceInput\"\n                  value={this.variant.compareAtPrice}\n                  onBlur={this.handleFieldBlur}\n                  onChange={this.handleFieldChange}\n                  onReturnKeyDown={this.handleFieldBlur}\n                />\n              </div>\n              <div className=\"col-sm-6\">\n                <TextField\n                  i18nKeyLabel=\"productVariant.price\"\n                  i18nKeyPlaceholder={formatPriceString(\"0.00\")}\n                  placeholder={formatPriceString(\"0.00\")}\n                  label=\"Price\"\n                  name=\"price\"\n                  ref=\"priceInput\"\n                  value={this.variant.price}\n                  style={this.props.greyDisabledFields(this.variant)}\n                  disabled={this.props.hasChildVariants(this.variant)}\n                  onBlur={this.handleFieldBlur}\n                  onChange={this.handleFieldChange}\n                  onReturnKeyDown={this.handleFieldBlur}\n                />\n              </div>\n            </div>\n            <Divider />\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <TextField\n                  i18nKeyLabel=\"productVariant.width\"\n                  i18nKeyPlaceholder=\"0\"\n                  placeholder=\"0\"\n                  label=\"Width\"\n                  name=\"width\"\n                  ref=\"widthInput\"\n                  value={this.variant.width}\n                  onBlur={this.handleFieldBlur}\n                  onChange={this.handleFieldChange}\n                  onReturnKeyDown={this.handleFieldBlur}\n                />\n              </div>\n              <div className=\"col-sm-6\">\n                <TextField\n                  i18nKeyLabel=\"productVariant.length\"\n                  i18nKeyPlaceholder=\"0\"\n                  placeholder=\"0\"\n                  label=\"Length\"\n                  name=\"length\"\n                  ref=\"lengthInput\"\n                  value={this.variant.length}\n                  onBlur={this.handleFieldBlur}\n                  onChange={this.handleFieldChange}\n                  onReturnKeyDown={this.handleFieldBlur}\n                />\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <TextField\n                  i18nKeyLabel=\"productVariant.height\"\n                  i18nKeyPlaceholder=\"0\"\n                  placeholder=\"0\"\n                  label=\"Height\"\n                  name=\"height\"\n                  ref=\"heightInput\"\n                  value={this.variant.height}\n                  onBlur={this.handleFieldBlur}\n                  onChange={this.handleFieldChange}\n                  onReturnKeyDown={this.handleFieldBlur}\n                />\n              </div>\n              <div className=\"col-sm-6\">\n                <TextField\n                  i18nKeyLabel=\"productVariant.weight\"\n                  i18nKeyPlaceholder=\"0\"\n                  placeholder=\"0\"\n                  label=\"Weight\"\n                  name=\"weight\"\n                  ref=\"weightInput\"\n                  value={this.variant.weight}\n                  onBlur={this.handleFieldBlur}\n                  onChange={this.handleFieldChange}\n                  onReturnKeyDown={this.handleFieldBlur}\n                />\n              </div>\n            </div>\n          </CardBody>\n        </Card>\n\n        <SettingsCard\n          enabled={this.state.taxable}\n          expandable={true}\n          expanded={this.isExpanded(\"taxable\")}\n          i18nKeyTitle=\"productVariant.taxable\"\n          name=\"taxable\"\n          showSwitch={true}\n          title=\"Taxable\"\n          onExpand={this.handleCardExpand.bind(this, \"taxable\")}\n          onSwitchChange={this.handleCheckboxChange}\n        >\n          {this.renderTaxCodeField()}\n          <TextField\n            i18nKeyLabel=\"productVariant.taxDescription\"\n            i18nKeyPlaceholder=\"productVariant.taxDescription\"\n            placeholder=\"Tax Description\"\n            label=\"Tax Description\"\n            name=\"taxDescription\"\n            ref=\"taxDescriptionInput\"\n            value={this.variant.taxDescription}\n            onBlur={this.handleFieldBlur}\n            onChange={this.handleFieldChange}\n            onReturnKeyDown={this.handleFieldBlur}\n          />\n        </SettingsCard>\n\n        <SettingsCard\n          enabled={this.state.inventoryManagement}\n          expandable={true}\n          expanded={this.isExpanded(\"inventoryManagement\")}\n          i18nKeyTitle=\"productVariant.inventoryManagement\"\n          name=\"inventoryManagement\"\n          showSwitch={true}\n          title=\"Inventory Tracking\"\n          onExpand={this.handleCardExpand.bind(this, \"inventoryManagement\")}\n          onSwitchChange={this.handleCheckboxChange}\n        >\n          <div className=\"row\">\n            {this.renderQuantityField()}\n            <div className=\"col-sm-6\">\n              <TextField\n                i18nKeyLabel=\"productVariant.lowInventoryWarningThreshold\"\n                i18nKeyPlaceholder=\"0\"\n                placeholder=\"0\"\n                label=\"Warn At\"\n                name=\"lowInventoryWarningThreshold\"\n                ref=\"lowInventoryWarningThresholdInput\"\n                value={this.variant.lowInventoryWarningThreshold}\n                onBlur={this.handleFieldBlur}\n                onChange={this.handleFieldChange}\n                onReturnKeyDown={this.handleFieldBlur}\n              />\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <Switch\n                i18nKeyLabel=\"productVariant.inventoryPolicy\"\n                i18nKeyOnLabel=\"productVariant.inventoryPolicy\"\n                name=\"inventoryPolicy\"\n                label={\"Allow Backorder\"}\n                onLabel={\"Allow Backorder\"}\n                checked={this.state.inventoryPolicy}\n                onChange={this.handleCheckboxChange}\n              />\n            </div>\n          </div>\n        </SettingsCard>\n      </CardGroup>\n    );\n  }\n}\n\nVariantForm.propTypes = {\n  cloneVariant: PropTypes.func,\n  countries: PropTypes.arrayOf(PropTypes.object),\n  editFocus: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  fetchTaxCodes: PropTypes.func,\n  greyDisabledFields: PropTypes.func,\n  hasChildVariants: PropTypes.func,\n  isDeleted: PropTypes.bool,\n  isProviderEnabled: PropTypes.func,\n  onCardExpand: PropTypes.func,\n  onFieldChange: PropTypes.func,\n  onUpdateQuantityField: PropTypes.func,\n  onVariantFieldSave: PropTypes.func,\n  removeVariant: PropTypes.func,\n  restoreVariant: PropTypes.func,\n  variant: PropTypes.object\n};\n\nexport default VariantForm;\n","import React, { Component, PropTypes } from \"react\";\nimport { composeWithTracker } from \"/lib/api/compose\";\nimport { ReactionProduct } from \"/lib/api\";\nimport { Products } from \"/lib/collections\";\nimport PublishContainer from \"/imports/plugins/core/revisions/client/containers/publishContainer\";\n\nclass GridProductPublishContainer extends Component {\n  static propTypes = {\n    documentIds: PropTypes.arrayOf(PropTypes.string),\n    documents: PropTypes.arrayOf(PropTypes.object)\n  };\n\n  handleVisibilityChange = (event, isProductVisible) => {\n    if (Array.isArray(this.props.documentIds)) {\n      for (const productId of this.props.documentIds) {\n        Meteor.call(\"products/updateProductField\", productId, \"isVisible\", isProductVisible);\n      }\n    }\n  }\n\n  handlePublishActions = (event, action) => {\n    if (action === \"archive\") {\n      ReactionProduct.archiveProduct(this.props.documents);\n    }\n  }\n\n  render() {\n    return (\n      <PublishContainer\n        onAction={this.handlePublishActions}\n        onVisibilityChange={this.handleVisibilityChange}\n        {...this.props}\n      />\n    );\n  }\n}\n\nfunction composer(props, onData) {\n  const selectedProducts = Session.get(\"productGrid/selectedProducts\");\n  const products = Session.get(\"productGrid/products\");\n\n  let productIds;\n\n  if (Array.isArray(selectedProducts) && selectedProducts.length) {\n    productIds = selectedProducts;\n  } else if (Array.isArray(products) && products.length) {\n    productIds = products.map(p => p._id);\n  }\n\n  if (productIds) {\n    const documents = Products.find({\n      _id: { $in: productIds }\n    }).fetch();\n\n    onData(null, {\n      documentIds: productIds,\n      documents\n    });\n  } else {\n    onData(null, {});\n  }\n}\n\n// Decorate component and export\nexport default composeWithTracker(composer)(GridProductPublishContainer);\n","import React, { Component, PropTypes } from \"react\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Session } from \"meteor/session\";\nimport { composeWithTracker } from \"/lib/api/compose\";\nimport { ReactionProduct } from \"/lib/api\";\nimport { Packages } from \"/lib/collections\";\nimport { Countries } from \"/client/collections\";\nimport { Reaction, i18next } from \"/client/api\";\nimport { TaxCodes } from \"/imports/plugins/core/taxes/lib/collections\";\nimport VariantForm from \"../components/variantForm\";\n\nclass VariantFormContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isDeleted: props.variant.isDeleted\n    };\n\n    this.isProviderEnabled = this.isProviderEnabled.bind(this);\n    this.fetchTaxCodes = this.fetchTaxCodes.bind(this);\n    this.hasChildVariants = this.hasChildVariants.bind(this);\n    this.greyDisabledFields = this.greyDisabledFields.bind(this);\n    this.removeVariant = this.removeVariant.bind(this);\n    this.restoreVariant = this.restoreVariant.bind(this);\n    this.cloneVariant = this.cloneVariant.bind(this);\n    this.handleVariantFieldSave = this.handleVariantFieldSave.bind(this);\n    this.handleCardExpand = this.handleCardExpand.bind(this);\n    this.updateQuantityIfChildVariants = this.updateQuantityIfChildVariants.bind(this);\n  }\n\n  isProviderEnabled = () => {\n    const shopId = Reaction.getShopId();\n\n    const provider = Packages.findOne({\n      \"shopId\": shopId,\n      \"registry.provides\": \"taxCodes\",\n      \"$where\": function () {\n        const providerName = this.name.split(\"-\")[1];\n        return this.settings[providerName].enabled;\n      }\n    });\n\n    if (provider) {\n      return true;\n    }\n    return false;\n  }\n\n  fetchTaxCodes = () => {\n    const shopId = Reaction.getShopId();\n    const provider = Packages.findOne({\n      \"shopId\": shopId,\n      \"registry.provides\": \"taxCodes\",\n      \"$where\": function () {\n        const providerName = _.filter(this.registry, (o) => o.provides === \"taxCodes\")[0].name.split(\"/\")[2];\n        return this.settings[providerName].enabled;\n      }\n    });\n    const taxCodesArray = [];\n\n    const codes = TaxCodes.find({\n      shopId: shopId,\n      taxCodeProvider: provider.name\n    });\n\n    codes.forEach(function (code) {\n      taxCodesArray.push({\n        value: code.taxCode,\n        label: `${code.taxCode} | ${code.label}`\n      });\n    });\n    return taxCodesArray;\n  }\n\n  hasChildVariants = (variant) => {\n    if (ReactionProduct.checkChildVariants(variant._id) > 0) {\n      return true;\n    }\n    return false;\n  }\n\n  greyDisabledFields = (variant) => {\n    if (this.hasChildVariants(variant)) {\n      return { backgroundColor: \"lightgrey\", cursor: \"not-allowed\" };\n    }\n  }\n\n  restoreVariant = (variant) => {\n    const title = variant.title || i18next.t(\"productDetailEdit.thisVariant\");\n\n    Alerts.alert({\n      title: i18next.t(\"productDetailEdit.restoreVariantConfirm\", { title }),\n      showCancelButton: true,\n      confirmButtonText: \"Restore\"\n    }, (isConfirm) => {\n      if (isConfirm) {\n        const id = variant._id;\n        Meteor.call(\"products/updateProductField\", id, \"isDeleted\", false, (error) => {\n          if (error) {\n            Alerts.alert({\n              text: i18next.t(\"productDetailEdit.restoreVariantFail\", { title }),\n              confirmButtonText: i18next.t(\"app.close\", { defaultValue: \"Close\" })\n            });\n          }\n          this.setState({\n            isDeleted: !this.state.isDeleted\n          });\n        });\n      }\n    });\n  }\n\n  removeVariant = (variant) => {\n    const title = variant.title || i18next.t(\"productDetailEdit.thisVariant\");\n\n    Alerts.alert({\n      title: i18next.t(\"productDetailEdit.archiveVariantConfirm\", { title }),\n      showCancelButton: true,\n      confirmButtonText: \"Archive\"\n    }, (isConfirm) => {\n      if (isConfirm) {\n        this.setState({\n          isDeleted: !this.state.isDeleted\n        });\n        const id = variant._id;\n        Meteor.call(\"products/deleteVariant\", id, function (error, result) {\n          if (result && ReactionProduct.selectedVariantId() === id) {\n            return ReactionProduct.setCurrentVariant(null);\n          }\n        });\n      }\n    });\n  }\n\n  cloneVariant =  (variant) => {\n    const title = variant.title || i18next.t(\"productDetailEdit.thisVariant\");\n    const productId = ReactionProduct.selectedProductId();\n    if (!productId) {\n      return;\n    }\n    Meteor.call(\"products/cloneVariant\", productId, variant._id,\n     function (error, result) {\n       if (error) {\n         Alerts.alert({\n           text: i18next.t(\"productDetailEdit.cloneVariantFail\", { title }),\n           confirmButtonText: i18next.t(\"app.close\", { defaultValue: \"Close\" })\n         });\n       } else if (result) {\n         const variantId = result[0];\n\n         ReactionProduct.setCurrentVariant(variantId);\n         Session.set(\"variant-form-\" + variantId, true);\n       }\n     });\n  }\n\n  handleVariantFieldSave = (variantId, fieldName, value) => {\n    Meteor.call(\"products/updateProductField\", variantId, fieldName, value, (error) => {\n      if (error) {\n        Alerts.toast(error.message, \"error\");\n        this.forceUpdate();\n      }\n    });\n  }\n\n  handleCardExpand = (cardName) => {\n    Reaction.state.set(\"edit/focus\", cardName);\n  }\n\n  updateQuantityIfChildVariants =  (variant) => {\n    if (this.hasChildVariants(variant)) {\n      const variantQuantity = ReactionProduct.getVariantQuantity(variant);\n      return variantQuantity;\n    }\n  }\n\n  render() {\n    return (\n      <VariantForm\n        isProviderEnabled={this.isProviderEnabled}\n        fetchTaxCodes={this.fetchTaxCodes}\n        hasChildVariants={this.hasChildVariants}\n        greyDisabledFields={this.greyDisabledFields}\n        restoreVariant={this.restoreVariant}\n        removeVariant={this.removeVariant}\n        cloneVariant={this.cloneVariant}\n        onVariantFieldSave={this.handleVariantFieldSave}\n        onCardExpand={this.handleCardExpand}\n        onUpdateQuantityField={this.updateQuantityIfChildVariants}\n        isDeleted={this.state.isDeleted}\n        {...this.props}\n      />\n    );\n  }\n}\n\nfunction composer(props, onData) {\n  const countries = Countries.find({}).fetch();\n\n  const productHandle = Reaction.Router.getParam(\"handle\");\n  if (!productHandle) {\n    Reaction.clearActionView();\n  }\n\n  Meteor.subscribe(\"TaxCodes\");\n\n  onData(null, {\n    countries,\n    variant: props.variant,\n    editFocus: Reaction.state.get(\"edit/focus\")\n  });\n}\n\nVariantFormContainer.propTypes = {\n  variant: PropTypes.object\n};\n\nexport default composeWithTracker(composer)(VariantFormContainer);\n","import \"./templates/products/productDetail/variants/variantForm/childVariant.html\";\nimport \"./templates/products/productDetail/variants/variantForm/childVariant.js\";\nimport \"./templates/products/productDetail/variants/variantForm/variantForm.html\";\nimport \"./templates/products/productDetail/variants/variantForm/variantForm.js\";\nimport \"./templates/products/productDetail/variants/variantList/variantList.html\";\nimport \"./templates/products/productDetail/variants/variantList/variantList.js\";\nimport \"./templates/products/productDetail/variants/variant.html\";\nimport \"./templates/products/productDetail/variants/variant.js\";\nimport \"./templates/products/productDetail/attributes.html\";\nimport \"./templates/products/productDetail/attributes.js\";\nimport \"./templates/products/productDetail/edit.html\";\nimport \"./templates/products/productDetail/edit.js\";\nimport \"./templates/products/productDetail/productImageGallery.html\";\nimport \"./templates/products/productDetail/productImageGallery.js\";\nimport \"./templates/products/productDetail/social.html\";\nimport \"./templates/products/productDetail/social.js\";\n\nimport \"./templates/products/productGrid/content.html\";\nimport \"./templates/products/productGrid/content.js\";\nimport \"./templates/products/productGrid/controls.html\";\nimport \"./templates/products/productGrid/controls.js\";\nimport \"./templates/products/productGrid/item.html\";\nimport \"./templates/products/productGrid/item.js\";\nimport \"./templates/products/productGrid/notice.html\";\nimport \"./templates/products/productGrid/notice.js\";\nimport \"./templates/products/productGrid/productGrid.html\";\nimport \"./templates/products/productGrid/productGrid.js\";\nimport \"./templates/products/productGrid/publishControls.html\";\nimport \"./templates/products/productGrid/publishControls.js\";\n\nimport \"./templates/products/productList/productList.html\";\nimport \"./templates/products/productList/productList.js\";\n\nimport \"./templates/products/productSettings/productSettings.html\";\nimport \"./templates/products/productSettings/productSettings.js\";\n\nimport \"./templates/products/products.html\";\nimport \"./templates/products/products.js\";\n","import _ from \"lodash\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Session } from \"meteor/session\";\nimport { Template } from \"meteor/templating\";\nimport { Cart } from \"/lib/collections\";\nimport { PaypalClientAPI } from \"../../../lib/paypalRestApi\";\nimport \"./checkoutButton.html\";\n\n/**\n * PayPal Checkout Button\n *\n * This is the PayPal Express Checkout button that displays opens a popup,\n * provided by paypal.\n */\n\n/**\n * Checkout - Open PayPal Express popup\n * @return {undefined} no return value\n */\nfunction checkout() {\n  paypal.checkout.initXO();\n  const cart = Cart.findOne();\n  if (!cart) {\n    return undefined;\n  }\n\n  return Meteor.call(\"getExpressCheckoutToken\", cart._id, function (error, token) {\n    if (error) {\n      const msg = (error !== null ? error.error : void 0) || i18next.t(\"checkoutPayment.processingError\", \"There was a problem with your payment.\");\n      Alerts.add(msg, \"danger\", {\n        placement: \"paymentMethod\"\n      });\n      return paypal.checkout.closeFlow();\n    }\n    const url = paypal.checkout.urlPrefix + token;\n    return paypal.checkout.startFlow(url);\n  });\n}\n\n/**\n * Validate express checkout settings object\n * @param  {Object} settings Object containing \"merchantId\" and \"mode\":\n * @return {Boolean} true if valid, false otherwise\n */\nfunction expressCheckoutSettingsValid(settings) {\n  return _.isEmpty(settings.merchantId) === false && _.isEmpty(settings.mode) === false;\n}\n\n/**\n * PayPal checkout onCreate\n * @param  {Function} function to execute when template is created\n * @return {undefined} no return value\n */\nTemplate.paypalCheckoutButton.onCreated(function () {\n  Meteor.call(\"getExpressCheckoutSettings\", function (error, expressCheckoutSettings) {\n    if (!error) {\n      return Session.set(\"expressCheckoutSettings\", expressCheckoutSettings);\n    }\n  });\n  PaypalClientAPI.load();\n  this.state = new ReactiveDict();\n  this.state.setDefault({\n    isConfigured: true,\n    isLoading: true\n  });\n});\n\n/**\n * PayPal checkout onRendered\n * @param  {Function} function to execute when template is rendered\n * @return {undefined} no return value\n */\nTemplate.paypalCheckoutButton.onRendered(function () {\n  const element = this.$(\".js-paypal-express-checkout\")[0];\n\n  this.autorun(() => {\n    if (PaypalClientAPI.loaded()) {\n      const expressCheckoutSettings = Session.get(\"expressCheckoutSettings\");\n      if (expressCheckoutSettingsValid(expressCheckoutSettings)) {\n        // setup paypal button for this checkout\n        // gives nada back to us?\n        paypal.checkout.setup(expressCheckoutSettings.merchantId, {\n          environment: expressCheckoutSettings.mode,\n          button: element,\n           // Blank function to disable default paypal onClick functionality\n          click: function () {}\n        });\n        this.state.set(\"isLoading\", false);\n      } else {\n        this.state.set(\"isConfigured\", false);\n        this.state.set(\"isLoading\", false);\n      }\n    } else {\n      this.state.set(\"isLoading\", true);\n    }\n  });\n});\n\n/**\n * PayPal checkout button helpers\n */\nTemplate.paypalCheckoutButton.helpers({\n  expressCheckoutEnabled: function () {\n    const expressCheckoutSettings = Session.get(\"expressCheckoutSettings\");\n    return expressCheckoutSettings !== undefined ? expressCheckoutSettings.enabled : void 0;\n  },\n  /**\n   * Check for proper configuration of PayPal Express Checkout settings.\n   * This function only validates that the required settings exist and are not empty.\n   * @return {Boolean} true if properly configured, false otherwise\n   */\n  isConfigured() {\n    return Template.instance().state.equals(\"isConfigured\", true);\n  }\n});\n\n/**\n * PayPal checkout button events\n */\nTemplate.paypalCheckoutButton.events({\n\n  /**\n   * Click Event: Express Checkout Button\n   * @return {undefined} no return value\n   */\n  \"click .js-paypal-express-checkout\"() {\n    return checkout();\n  }\n});\n","import \"./checkoutButton.js\";\n","import \"./payflowForm.js\";\n","/* eslint camelcase: 0 */\nimport { Meteor } from \"meteor/meteor\";\nimport { Template } from \"meteor/templating\";\nimport Logger from \"/client/modules/logger\";\nimport { Cart, Shops, Packages } from \"/lib/collections\";\nimport { PaypalPayment } from \"/imports/plugins/included/payments-paypal/lib/collections/schemas\";\nimport { Reaction, i18next } from \"/client/api\";\nimport { PayPal } from \"/imports/plugins/included/payments-paypal/lib/api\";\nimport \"./payflowForm.html\";\n\n\nfunction uiEnd(template, buttonText) {\n  template.$(\".cart-checkout-step *\").removeAttr(\"disabled\");\n  template.$(\"#btn-complete-order\").text(buttonText);\n  return template.$(\"#btn-processing\").addClass(\"hidden\");\n}\n\nfunction paymentAlert(errorMessage) {\n  return $(\".alert\").removeClass(\"hidden\").text(errorMessage);\n}\n\nfunction hidePaymentAlert() {\n  return $(\".alert\").addClass(\"hidden\").text(\"\");\n}\n\nfunction getError(error, detailSubpart) {\n  if (error) {\n    if (error.response) {\n      return error.response[detailSubpart];\n    }\n  }\n  return undefined;\n}\n\nfunction handlePaypalSubmitError(error) {\n  const results = [];\n  const singleError = getError(error, \"error_description\");\n  const serverError = getError(error, \"message\");\n  const errors = getError(error, \"response\") || [];\n  if (singleError) {\n    return paymentAlert(\"Oops! \" + singleError);\n  } else if (errors.length) {\n    for (let i = 0, len = errors.length; i < len; i++) {\n      const thisError = errors[i];\n      const formattedError = \"Oops! \" + thisError.issue + \": \" + thisError.field.split(/[. ]+/).pop().replace(/_/g, \" \");\n      results.push(paymentAlert(formattedError));\n    }\n    return results;\n  } else if (serverError) {\n    // Alerts.toast(i18next.t(\"checkout.unknownError\", { err: serverError }), \"error\");\n    return paymentAlert(i18next.t(\"checkout.paymentMethod.unknownError\"));\n  }\n  Logger.fatal(\"An unknown error has occurred while processing a Paypal payment\");\n  return paymentAlert(i18next.t(\"checkout.paymentMethod.unknownError\"));\n}\n\n//\n// paypal payflow form helpers\n//\nTemplate.paypalPayflowForm.helpers({\n  PaypalPayment: function () {\n    return PaypalPayment;\n  }\n});\n\n//\n// autoform handling\n//\nAutoForm.addHooks(\"paypal-payment-form\", {\n  onSubmit: function (doc) {\n    hidePaymentAlert();\n    const template = this.template;\n    const payerNamePieces = doc.payerName.split(\" \");\n    const form = {\n      first_name: payerNamePieces[0],\n      last_name: payerNamePieces[1],\n      number: doc.cardNumber,\n      expire_month: doc.expireMonth,\n      expire_year: doc.expireYear,\n      cvv2: doc.cvv,\n      type: Reaction.getCardType(doc.cardNumber)\n    };\n    const storedCard = form.type.charAt(0).toUpperCase() + form.type.slice(1) + \" \" + doc.cardNumber.slice(-4);\n    PayPal.authorize(form, {\n      total: Cart.findOne().cartTotal(),\n      currency: Shops.findOne().currency\n    }, function (error, transaction) {\n      submitting = false; // todo: check scope\n      if (error) {\n        handlePaypalSubmitError(error);\n        uiEnd(template, i18next.t(\"checkout.paymentMethod.resubmit\"));\n      } else {\n        if (transaction.saved === true) {\n          const normalizedStatus = (function () {\n            switch (transaction.response.state) {\n              case \"created\":\n                return \"created\";\n              case \"approved\":\n                return \"created\";\n              case \"failed\":\n                return \"failed\";\n              case \"canceled\":\n                return \"canceled\";\n              case \"expired\":\n                return \"expired\";\n              case \"pending\":\n                return \"pending\";\n              default:\n                return \"failed\";\n            }\n          })();\n\n          const normalizedMode = (function () {\n            switch (transaction.response.intent) {\n              case \"sale\":\n                return \"capture\";\n              case \"authorize\":\n                return \"authorize\";\n              case \"order\":\n                return \"capture\";\n              default:\n                return \"capture\";\n            }\n          })();\n\n          // just auth, not transaction\n          const transactionId = transaction.response.id;\n          // when auth and transaction\n          let authId;\n          if (typeof transaction.response.transactions[0].related_resources[0] === \"object\") {\n            authId = transaction.response.transactions[0].related_resources[0].authorization.id;\n          }\n          Meteor.subscribe(\"Packages\");\n          const packageData = Packages.findOne({\n            name: \"reaction-paypal\",\n            shopId: Reaction.getShopId()\n          });\n\n          const paymentMethod = {\n            processor: \"PayflowPro\",\n            paymentPackageId: packageData._id,\n            paymentSettingsKey: packageData.registry[0].settingsKey,\n            storedCard: storedCard,\n            method: \"credit\",\n            authorization: authId,\n            transactionId: transactionId,\n            metadata: {\n              transactionId: transactionId,\n              authorizationId: authId\n            },\n            amount: Number(transaction.response.transactions[0].amount.total),\n            status: normalizedStatus,\n            mode: normalizedMode,\n            createdAt: new Date(transaction.response.create_time),\n            updatedAt: new Date(transaction.response.update_time),\n            transactions: []\n          };\n          paymentMethod.transactions.push(transaction.response);\n          Meteor.call(\"cart/submitPayment\", paymentMethod);\n        } else {\n          handlePaypalSubmitError(transaction.error);\n          uiEnd(template, i18next.t(\"checkout.paymentMethod.resubmit\"));\n        }\n      }\n    });\n    return false;\n  },\n  beginSubmit: function () {\n    this.template.$(\".cart-checkout-step *\").attr(\"disabled\", true);\n    this.template.$(\"#btn-complete-order\").text(i18next.t(\"checkout.paymentMethod.submitting\"));\n    return this.template.$(\"#btn-processing\").removeClass(\"hidden\");\n  },\n  endSubmit: function () {\n    if (!submitting) {\n      return uiEnd(this.template, i18next.t(\"checkout.completeYourOrder\"));\n    }\n    return undefined;\n  }\n});\n","import { Reaction } from \"/client/api\";\nimport { Session } from \"meteor/session\";\nimport { Template } from \"meteor/templating\";\n\nTemplate.paypalCancel.onCreated(() => {\n  Session.set(\"guestCheckoutFlow\", true);\n  Reaction.Router.go(\"cart/checkout\");\n});\n","import { Meteor } from \"meteor/meteor\";\nimport { Session } from \"meteor/session\";\nimport { Template } from \"meteor/templating\";\nimport { Tracker } from \"meteor/tracker\";\nimport { Reaction } from \"/client/api\";\nimport { Cart, Packages } from \"/lib/collections\";\nimport Logger from \"/client/modules/logger\";\n\n// This template handles receiving the token from Paypal, recording it and moving on the checkout\n\nfunction isDuplicate(error) {\n  const errorMessage = error.message;\n  const duplicateErrorCode = \"10415\";\n  return errorMessage.indexOf(duplicateErrorCode) > -1;\n}\n\nfunction showError(error) {\n  $(\".spinner-container\").hide();\n  $(\"#paypal-error-message\").text(error);\n  $(\".paypal-done-error\").show();\n}\n\nfunction buildPaymentMethod(result, status, mode) {\n  Meteor.subscribe(\"Packages\");\n  const packageData = Packages.findOne({\n    name: \"reaction-paypal\",\n    shopId: Reaction.getShopId()\n  });\n\n  const paymentMethod = {\n    processor: \"PaypalExpress\",\n    paymentPackageId: packageData._id,\n    paymentSettingsKey: packageData.registry[0].settingsKey,\n    method: \"credit\",\n    transactionId: result.TRANSACTIONID,\n    amount: parseFloat(result.AMT, 10),\n    status: status,\n    mode: mode,\n    createdAt: new Date(result.ORDERTIME),\n    updatedAt: new Date(result.ORDERTIME),\n    transactions: [result]\n  };\n  return paymentMethod;\n}\n\nTemplate.paypalDone.onRendered(function () {\n  $(\".paypal-done-error\").hide();\n});\n\nTemplate.paypalDone.helpers({\n  checkoutUrl: function () {\n    template = Template.instance();\n    return template.checkoutUrl;\n  }\n});\n\nTemplate.paypalDone.onCreated(function () {\n  const payerId = Reaction.Router.getQueryParam(\"PayerID\");\n  const token = Reaction.Router.getQueryParam(\"token\");\n  const prefix = Reaction.getShopPrefix();\n  this.checkoutUrl = `${prefix}/cart/checkout`;\n  // wait for cart to be ready\n  Tracker.autorun(function (c) {\n    if (Reaction.Subscriptions.Cart.ready()) {\n      const cart = Cart.findOne();\n      if (!cart) {\n        Logger.warn(\"Could not find valid cart\");\n        return;\n      }\n      c.stop();\n      if (Session.get(\"expressToken\") !== token) {\n        Session.set(\"expressToken\", token);\n        Meteor.call(\"confirmPaymentAuthorization\", cart._id, token, payerId, function (error, result) {\n          if (error) {\n            if (isDuplicate(error)) {\n              Reaction.Router.go(\"cart/completed\", {}, {\n                _id: cart._id\n              });\n            }\n            const msg = (error !== null ? error.error : void 0);\n            showError(msg);\n          }\n\n          if (result) {\n            let status;\n            let mode = \"authorize\";\n            // Normalize status depending on results\n            if (result.PAYMENTSTATUS === \"Pending\") {\n              status = \"created\";\n            } else if (result.PAYMENTSTATUS === \"Completed\") { // If we set capture at auth this will be completed\n              status = \"completed\";\n              mode = \"capture\";\n            } else {\n              status = result.PAYMENTSTATUS;\n            }\n            const paymentMethod = buildPaymentMethod(result, status, mode);\n\n            Meteor.call(\"cart/submitPayment\", paymentMethod, function (payError, payResult) {\n              if (!payResult && payError) {\n                Logger.warn(payError, \"Error received during submitting Payment via Paypal\");\n                showError(payError);\n                Session.set(\"guestCheckoutFlow\", true);\n              }\n            });\n          }\n        });\n      }\n    }\n  });\n});\n","import \"./cancel.html\";\nimport \"./cancel.js\";\nimport \"./done.html\";\nimport \"./done.js\";\n","/* eslint camelcase: 0 */\nimport { Template } from \"meteor/templating\";\nimport { Packages } from \"/lib/collections\";\nimport { PaypalPackageConfig } from \"../../../lib/collections/schemas\";\nimport \"./express.html\";\n\nTemplate.paypalExpressSettings.helpers({\n  PaypalPackageConfig: function () {\n    return PaypalPackageConfig;\n  },\n  packageData: function () {\n    return Packages.findOne({\n      name: \"reaction-paypal\"\n    });\n  }\n});\n\nAutoForm.hooks({\n  \"paypal-update-form\": {\n    onSuccess: function () {\n      Alerts.removeSeen();\n      return Alerts.add(\"Paypal settings saved.\", \"success\", {\n        autoHide: true\n      });\n    },\n    onError: function (operation, error) {\n      Alerts.removeSeen();\n      return Alerts.add(\"Paypal settings update failed. \" + error, \"danger\");\n    }\n  }\n});\n","/* eslint camelcase: 0 */\nimport { Template } from \"meteor/templating\";\nimport { Packages } from \"/lib/collections\";\nimport { PaypalPackageConfig } from \"../../../lib/collections/schemas\";\nimport \"./payflow.html\";\n\nTemplate.paypalPayFlowSettings.helpers({\n  PaypalPackageConfig: function () {\n    return PaypalPackageConfig;\n  },\n  packageData: function () {\n    return Packages.findOne({\n      name: \"reaction-paypal\"\n    });\n  }\n});\n\nAutoForm.hooks({\n  \"paypal-update-form\": {\n    onSuccess: function () {\n      Alerts.removeSeen();\n      return Alerts.add(\"Paypal settings saved.\", \"success\", {\n        autoHide: true\n      });\n    },\n    onError: function (operation, error) {\n      Alerts.removeSeen();\n      return Alerts.add(\"Paypal settings update failed. \" + error, \"danger\");\n    }\n  }\n});\n","import _ from \"lodash\";\nimport { Meteor } from \"meteor/meteor\";\nimport { ReactiveVar } from \"meteor/reactive-var\";\nimport { Logger } from \"/client/api\";\n\nexport const PaypalClientAPI = {\n\n  load: _.once(function () {\n    const script = document.createElement(\"script\");\n    script.type = \"text/javascript\";\n    script.async = true;\n    script.src = \"//www.paypalobjects.com/api/checkout.js\";\n    document.head.appendChild(script);\n\n    this._checkReady();\n  }),\n\n  _checkReady() {\n    let i = 0;\n    const checkReady = Meteor.setInterval(() => {\n      if (typeof paypal !== \"undefined\") {\n        this._loaded.set(true);\n        Meteor.clearInterval(checkReady);\n      } else {\n        i += 100;\n        if (i > 10000) {\n          // stop checking and warn if the lib isn't loaded within 10 secs\n          Meteor.clearInterval(checkReady);\n          Logger.warn(\"Error loading Paypal lib from CDN\");\n        }\n      }\n    }, 100);\n  },\n\n  _loaded: new ReactiveVar(false),\n\n  loaded() {\n    return this._loaded.get();\n  }\n};\n","import \"./templates/checkout/return\";\nimport \"./templates/checkout/express\";\nimport \"./templates/checkout/payflow\";\n\nimport \"./templates/settings/express\";\nimport \"./templates/settings/payflow\";\n\nimport \"./paypal.less\";\n","export * from \"./paypal\";\n","import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\nimport { PackageConfig } from \"/lib/collections/schemas/registry\";\n\nexport const PaypalPackageConfig = new SimpleSchema([\n  PackageConfig, {\n    \"settings.express_auth_and_capture\": {\n      type: Boolean,\n      label: \"Capture at time of Auth\",\n      defaultValue: false\n    },\n    \"settings.express.support\": {\n      type: Array,\n      label: \"Payment provider supported methods\"\n    },\n    \"settings.express.support.$\": {\n      type: String,\n      allowedValues: [\"authorize\", \"de-authorize\", \"capture\", \"refund\"]\n    },\n    \"settings.payflow.support\": {\n      type: Array,\n      label: \"Payment provider supported methods\"\n    },\n    \"settings.payflow.support.$\": {\n      type: String,\n      allowedValues: [\"Authorize\", \"De-authorize\", \"Capture\", \"Refund\"]\n    },\n    \"settings.merchantId\": {\n      type: String,\n      label: \"Merchant ID\",\n      optional: true\n    },\n    \"settings.username\": {\n      type: String,\n      label: \"Username\",\n      optional: true\n    },\n    \"settings.password\": {\n      type: String,\n      label: \"Password\",\n      optional: true\n    },\n    \"settings.signature\": {\n      type: String,\n      label: \"Signature\",\n      optional: true\n    },\n    \"settings.express_mode\": {\n      type: Boolean,\n      defaultValue: false\n    },\n    \"settings.payflow_enabled\": {\n      type: Boolean,\n      defaultValue: true\n    },\n    \"settings.client_id\": {\n      type: String,\n      label: \"API Client ID\",\n      min: 60,\n      optional: true\n    },\n    \"settings.client_secret\": {\n      type: String,\n      label: \"API Secret\",\n      min: 60,\n      optional: true\n    },\n    \"settings.payflow_mode\": {\n      type: Boolean,\n      defaultValue: false\n    }\n  }\n]);\n\nexport const PaypalPayment = new SimpleSchema({\n  payerName: {\n    type: String,\n    label: \"Cardholder name\",\n    regEx: /[A-Z][a-zA-Z]*/\n  },\n  cardNumber: {\n    type: String,\n    min: 12,\n    max: 19,\n    label: \"Card number\"\n  },\n  expireMonth: {\n    type: String,\n    max: 2,\n    label: \"Expiration month\"\n  },\n  expireYear: {\n    type: String,\n    max: 4,\n    label: \"Expiration year\"\n  },\n  cvv: {\n    type: String,\n    max: 4,\n    label: \"CVV\"\n  }\n});\n\nPaypalPayment.messages({\n  \"regEx payerName\": \"[label] must include both first and last name\"\n});\n","/* eslint camelcase: 0 */\nimport { Meteor } from \"meteor/meteor\";\nimport { Packages } from \"/lib/collections\";\nimport Reaction from \"/lib/api\";\n\nfunction getSettings(settings, ref, valueName) {\n  if (settings !== null) {\n    return settings[valueName];\n  } else if (ref !== null) {\n    return ref[valueName];\n  }\n  return {};\n}\n\n// using global instance of Reaction\n// Paypal is a shared client/server stub\n// to provide normalized PayPal tooling\n\nexport const Express = {\n  expressCheckoutAccountOptions: function () {\n    const shopId = Reaction.getShopId();\n    const settings = Packages.findOne({\n      name: \"reaction-paypal\",\n      shopId: shopId,\n      enabled: true\n    }).settings;\n    let mode;\n\n    if ((settings !== null ? settings.express_mode : void 0) === true) {\n      mode = \"production\";\n    } else {\n      mode = \"sandbox\";\n    }\n    const ref = Meteor.settings.paypal;\n\n    const options = {\n      enabled: settings !== null ? settings.express.enabled : void 0,\n      mode: mode,\n      username: getSettings(settings, ref, \"username\"),\n      password: getSettings(settings, ref, \"password\"),\n      signature: getSettings(settings, ref, \"signature\"),\n      merchantId: getSettings(settings, ref, \"merchantId\"),\n      return_url: Reaction.getAbsoluteUrl(\"/paypal/done\"),\n      cancel_url: Reaction.getAbsoluteUrl(\"/paypal/cancel\")\n    };\n    if (options.mode === \"sandbox\") {\n      options.url = \"https://api-3t.sandbox.paypal.com/nvp\";\n    } else {\n      options.url = \"https://api-3t.paypal.com/nvp\";\n    }\n    return options;\n  },\n  config: function (options) {\n    this.accountOptions = options;\n  }\n};\n","import * as PayFlow from \"./payflow\";\nimport * as Express from \"./express\";\n\nexport const PayPal = Object.assign({},\n  Express.Express,\n  PayFlow.PayFlow\n);\n","/* eslint camelcase: 0 */\nimport { Meteor } from \"meteor/meteor\";\nimport { Packages } from \"/lib/collections\";\nimport Reaction from \"/lib/api\";\n\n// using global instance of Reaction\n// Paypal is a shared client/server stub\n// to provide normalized PayPal tooling\n\nexport const PayFlow = {\n  payflowAccountOptions: function () {\n    const settings = Packages.findOne({\n      name: \"reaction-paypal\",\n      shopId: Reaction.getShopId(),\n      enabled: true\n    }).settings;\n    let mode;\n    if ((settings !== null ? settings.payflow_mode : void 0) === true) {\n      mode = \"live\";\n    } else {\n      mode = \"sandbox\";\n    }\n    const ref = Meteor.settings.paypal;\n    const options = {\n      mode: mode,\n      enabled: getSettings(settings, ref, \"payflow_enabled\"),\n      client_id: getSettings(settings, ref, \"client_id\"),\n      client_secret: getSettings(settings, ref, \"client_secret\")\n    };\n    if (!options.client_id) {\n      throw new Meteor.Error(403, \"Invalid PayPal Credentials\");\n    }\n    return options;\n  },\n  authorize: function (cardInfo, paymentInfo, callback) {\n    Meteor.call(\"payflowpro/payment/submit\", \"authorize\", cardInfo, paymentInfo, callback);\n  },\n  capture: function (transactionId, amount, callback) {\n    const captureDetails = {\n      amount: {\n        currency: \"USD\", // todo should this be locale.currency\n        total: parseFloat(amount, 10)\n      },\n      is_final_capture: true\n    };\n    Meteor.call(\"payflowpro/payment/capture\", transactionId, captureDetails, callback);\n  },\n  config: function (options) {\n    this.accountOptions = options;\n  },\n  paymentObj: function () {\n    return {\n      intent: \"sale\",\n      payer: {\n        payment_method: \"credit_card\",\n        funding_instruments: []\n      },\n      transactions: []\n    };\n  },\n  parseCardData: function (data) {\n    return {\n      credit_card: {\n        type: data.type,\n        number: data.number,\n        first_name: data.first_name,\n        last_name: data.last_name,\n        cvv2: data.cvv2,\n        expire_month: data.expire_month,\n        expire_year: data.expire_year\n      }\n    };\n  },\n  parsePaymentData: function (data) {\n    return {\n      amount: {\n        total: parseFloat(data.total, 10),\n        currency: data.currency\n      }\n    };\n  }\n};\n\nfunction getSettings(settings, ref, valueName) {\n  if (settings !== null) {\n    return settings[valueName];\n  } else if (ref !== null) {\n    return ref[valueName];\n  }\n  return {};\n}\n","import \"./templates/dashboard/inventory.html\";\nimport \"./templates/settings/settings.html\";\n","import { Template } from \"meteor/templating\";\nimport { ReactiveDict } from \"meteor/reactive-dict\";\nimport { AutoForm } from \"meteor/aldeed:autoform\";\nimport { Shipping } from \"/lib/collections\";\nimport { i18next } from \"/client/api\";\nimport MeteorGriddle from \"/imports/plugins/core/ui-grid/client/griddle\";\nimport { IconButton, Loading } from \"/imports/plugins/core/ui/client/components\";\n\nTemplate.shippingRatesSettings.onCreated(function () {\n  this.autorun(() => {\n    this.subscribe(\"Shipping\");\n  });\n\n  this.state = new ReactiveDict();\n  this.state.setDefault({\n    isEditing: false,\n    editingId: null\n  });\n});\n\nTemplate.shippingRatesSettings.helpers({\n  editButton() {\n    const instance = Template.instance();\n    const state = instance.state;\n    const isEditing = state.equals(\"isEditing\", true);\n    let editingId = state.get(\"editingId\");\n    // toggle edit state\n    if (!isEditing) {\n      editingId = null;\n    }\n    // return icon\n    return {\n      component: IconButton,\n      icon: \"fa fa-plus\",\n      onIcon: \"fa fa-pencil\",\n      toggle: true,\n      toggleOn: isEditing,\n      style: {\n        position: \"relative\",\n        top: \"-25px\",\n        right: \"8px\"\n      },\n      onClick() {\n        // remove active rows from grid\n        $(\".shipping-grid-row\").removeClass(\"active\");\n        return state.set({\n          isEditing: !isEditing,\n          editingId: editingId\n        });\n      }\n    };\n  },\n  shippingGrid() {\n    const filteredFields = [\"name\", \"group\", \"label\", \"rate\"];\n    const noDataMessage = i18next.t(\"admin.shippingSettings.noRatesFound\");\n    const instance = Template.instance();\n\n    // griddle helper to select row\n    function editRow(options) {\n      const currentId = instance.state.get(\"editingId\");\n      // isEditing is shipping rate object\n      instance.state.set(\"isEditing\", options.props.data);\n      instance.state.set(\"editingId\", options.props.data._id);\n      // toggle edit mode clicking on same row\n      if (currentId === options.props.data._id) {\n        instance.state.set(\"isEditing\", null);\n        instance.state.set(\"editingId\", null);\n      }\n    }\n\n    // add shipping-grid-row class\n    const customRowMetaData = {\n      bodyCssClassName: () =>  {\n        return \"shipping-grid-row\";\n      }\n    };\n\n    // add i18n handling to headers\n    const customColumnMetadata = [];\n    filteredFields.forEach(function (field) {\n      const columnMeta = {\n        columnName: field,\n        displayName: i18next.t(`admin.shippingGrid.${field}`)\n      };\n      customColumnMetadata.push(columnMeta);\n    });\n\n    // filter and extract shipping methods\n    // from flat rate shipping provider\n    function transform(results) {\n      const result = [];\n      for (method of results) {\n        if (method.provider && method.provider.name === \"flatRates\") {\n          result.push(method.methods);\n        }\n      }\n      return result[0];\n    }\n\n    // return shipping Grid\n    return {\n      component: MeteorGriddle,\n      publication: \"Shipping\",\n      transform: transform,\n      collection: Shipping,\n      matchingResultsCount: \"shipping-count\",\n      showFilter: true,\n      useGriddleStyles: false,\n      rowMetadata: customRowMetaData,\n      filteredFields: filteredFields,\n      columns: filteredFields,\n      noDataMessage: noDataMessage,\n      onRowClick: editRow,\n      columnMetadata: customColumnMetadata,\n      externalLoadingComponent: Loading\n    };\n  },\n\n  instance() {\n    const instance = Template.instance();\n    return instance;\n  },\n\n  shippingRate() {\n    const instance = Template.instance();\n    const id = instance.state.get(\"editingId\");\n    const providerRates = Shipping.findOne({ \"provider.name\": \"flatRates\" }) || {};\n    let rate = {};\n    if (providerRates && providerRates.methods) {\n      if (id) {\n        for (method of providerRates.methods) {\n          if (method._id === id) {\n            rate = method;\n          }\n        }\n      } else {\n        // a little trick to provide _id for insert\n        rate._id = providerRates._id;\n      }\n    }\n    return rate;\n  }\n});\n\n//\n// on submit lets clear the form state\n//\nTemplate.shippingRatesSettings.events({\n  \"submit #shipping-rates-update-form\": function () {\n    const instance = Template.instance();\n    instance.state.set({\n      isEditing: false,\n      editingId: null\n    });\n  },\n  \"submit #shipping-rates-insert-form\": function () {\n    const instance = Template.instance();\n    instance.state.set({\n      isEditing: true,\n      editingId: null\n    });\n  },\n  \"click .cancel, .shipping-grid-row .active\": function () {\n    instance = Template.instance();\n    // remove active rows from grid\n    instance.state.set({\n      isEditing: false,\n      editingId: null\n    });\n    // ugly hack\n    $(\".shipping-grid-row\").removeClass(\"active\");\n  },\n  \"click .delete\": function () {\n    const confirmTitle = i18next.t(\"admin.shippingSettings.confirmRateDelete\");\n    const confirmButtonText = i18next.t(\"app.delete\");\n    const instance = Template.instance();\n    const id = instance.state.get(\"editingId\");\n    // confirm delete\n    Alerts.alert({\n      title: confirmTitle,\n      type: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: confirmButtonText\n    }, (isConfirm) => {\n      if (isConfirm) {\n        if (id) {\n          Meteor.call(\"shipping/rates/delete\", id);\n          instance.state.set({\n            isEditing: false,\n            editingId: null\n          });\n        }\n      }\n    });\n  },\n  \"click .shipping-grid-row\": function (event) {\n    // toggle all rows off, then add our active row\n    $(\".shipping-grid-row\").removeClass(\"active\");\n    Template.instance().$(event.currentTarget).addClass(\"active\");\n  }\n});\n\n//\n// Hooks for update and insert forms\n//\nAutoForm.hooks({\n  \"shipping-rates-update-form\": {\n    onSuccess: function () {\n      return Alerts.toast(i18next.t(\"admin.shippingSettings.rateSaved\"),\n        \"success\");\n    },\n    onError: function (operation, error) {\n      return Alerts.toast(\n        `${i18next.t(\"admin.shippingSettings.rateFailed\")} ${error}`, \"error\"\n      );\n    }\n  },\n  \"shipping-rates-insert-form\": {\n    onSuccess: function () {\n      return Alerts.toast(i18next.t(\"admin.shippingSettings.rateSaved\"), \"success\");\n    },\n    onError: function (operation, error) {\n      return Alerts.toast(\n        `${i18next.t(\"admin.shippingSettings.rateFailed\")} ${error}`, \"error\"\n      );\n    }\n  }\n});\n","import \"./settings/rates.html\";\nimport \"./settings/rates.js\";\n","import \"./templates\";\n","/* eslint-disable */\n//\n// TODO facebook social templates need review to ensure proper use of reaction layouts\n//\nTemplate.facebook.onRendered(function () {\n  let ref;\n  if (this.data.placement === \"footer\" && (((ref = this.data.apps.facebook) !== null ? ref.profilePage : void 0) !== null)) { // eslint-disable-line no-cond-assign\n    return this.$(\".facebook-share\").attr(\"href\", this.data.apps.facebook.profilePage);\n  }\n  //\n  // autorun and insert fb\n  //\n  this.autorun(function () {\n    let media;\n    let ref1;\n    const template = Template.instance();\n    const data = Template.currentData();\n    $('meta[property^=\"og:\"]').remove();\n    const description = ((ref1 = data.apps.facebook) !== null ? ref1.description : void 0) || $(\".product-detail-field.description\").text();\n    let url = data.url || location.origin + location.pathname;\n    let title = data.title || document.title;\n    $(\"<meta>\", {\n      property: \"og:type\",\n      content: \"article\"\n    }).appendTo(\"head\");\n    $(\"<meta>\", {\n      property: \"og:site_name\",\n      content: location.hostname\n    }).appendTo(\"head\");\n    $(\"<meta>\", {\n      property: \"og:url\",\n      content: url\n    }).appendTo(\"head\");\n    $(\"<meta>\", {\n      property: \"og:title\",\n      content: title\n    }).appendTo(\"head\");\n    $(\"<meta>\", {\n      property: \"og:description\",\n      content: description\n    }).appendTo(\"head\");\n    if (data.media) {\n      if (!/^http(s?):\\/\\/+/.test(data.media)) {\n        media = location.origin + data.media;\n      }\n      $(\"<meta>\", {\n        property: \"og:image\",\n        content: media\n      }).appendTo(\"head\");\n    }\n    /* eslint no-unused-vars: 1 */\n    //\n    // TODO review Template.facebook.onRendered for FB response\n    // believe this object is declared by FB so the\n    // lint error should be ignored\n    //\n    if (data.apps.facebook.appId !== null) {\n      return template.$(\".facebook-share\").click(function (e) {\n        e.preventDefault();\n        return FB.ui({\n          method: \"share\",\n          display: \"popup\",\n          href: url\n        }, function () {});\n      });\n    }\n    // else return\n    url = encodeURIComponent(url);\n    title = encodeURIComponent(title);\n    const base = \"https://www.facebook.com/sharer/sharer.php\";\n    const summary = encodeURIComponent(description);\n    let href = base + \"?s=100&p[url]=\" + url + \"&p[title]=\" + title + \"&p[summary]=\" + summary;\n    if (data.media) {\n      href += \"&p[images][0]=\" + encodeURIComponent(media);\n    }\n    return template.$(\".facebook-share\").attr(\"href\", href);\n  });\n});\n\nTemplate.facebook.onCreated(function () {\n  const apps = Template.currentData().apps;\n  const isEnabled = \"facebook\" in apps && apps.facebook.enabled;\n  if (isEnabled) {\n    $('<div id=\"fb-root\"></div>').appendTo(\"body\");\n    window.fbAsyncInit = function () {\n      return FB.init({\n        appId: apps.facebook.appId,\n        xfbml: true,\n        version: \"v2.1\"\n      });\n    };\n    (function (d, s, id) {\n      let js = void 0;\n      const fjs = d.getElementsByTagName(s)[0];\n      if (d.getElementById(id)) {\n        return;\n      }\n      js = d.createElement(s);\n      js.id = id;\n      js.src = \"//connect.facebook.net/en_US/sdk.js\";\n      fjs.parentNode.insertBefore(js, fjs);\n    })(document, \"script\", \"facebook-jssdk\");\n  }\n  return isEnabled;\n});\n","/* eslint-disable */\n//\n// TODO google social templates need review to ensure proper use of reaction layouts\n//\nTemplate.googleplus.onRendered(function () {\n  let ref;\n  if (this.data.placement === \"footer\" && (((ref = this.data.apps.googleplus) !== null ? ref.profilePage : void 0) !== null)) {  // eslint-disable-line\n    return this.$(\".googleplus-share\").attr(\"href\", this.data.apps.googleplus.profilePage);\n  }\n  return this.autorun(function () {\n    let media;\n    let ref1;\n    let ref2;\n    const template = Template.instance();\n    const data = Template.currentData();\n    $(\"meta[itemscope]\").remove();\n    const description = ((ref1 = data.apps.googleplus) !== null ? ref1.description : void 0) || $(\".product-detail-field.description\").text(); // eslint-disable-line\n    const url = data.url || location.origin + location.pathname;\n    // const title = data.title;\n    const itemtype = ((ref2 = data.apps.googleplus) !== null ? ref2.itemtype : void 0) || \"Article\";\n    $(\"html\").attr(\"itemscope\", \"\").attr(\"itemtype\", \"http://schema.org/\" + itemtype);\n    $(\"<meta>\", {\n      itemprop: \"name\",\n      content: location.hostname\n    }).appendTo(\"head\");\n    $(\"<meta>\", {\n      itemprop: \"url\",\n      content: url\n    }).appendTo(\"head\");\n    $(\"<meta>\", {\n      itemprop: \"description\",\n      content: description\n    }).appendTo(\"head\");\n    if (data.media) {\n      if (!/^http(s?):\\/\\/+/.test(data.media)) {\n        media = location.origin + data.media;\n      }\n      $(\"<meta>\", {\n        itemprop: \"image\",\n        content: media\n      }).appendTo(\"head\");\n    }\n    const href = \"https://plus.google.com/share?url=\" + url;\n    return template.$(\".googleplus-share\").attr(\"href\", href);\n  });\n});\n\nTemplate.googleplus.events({\n  \"click a\": function (event) {\n    event.preventDefault();\n    return window.open(Template.instance().$(\".googleplus-share\").attr(\"href\"), \"googleplus_window\", \"width=750, height=650\");\n  }\n});\n","/* eslint-disable */\n//\n// TODO pinterest social templates need review to ensure proper use of reaction layouts\n//\nTemplate.pinterest.onRendered(function () {\n  let ref;\n  if (this.data.placement === \"footer\" && (((ref = this.data.apps.pinterest) !== null ? ref.profilePage : void 0) !== null)) {\n    return this.$(\".pinterest-share\").attr(\"href\", this.data.apps.pinterest.profilePage);\n  }\n  /*\n    Pinterest requires three parameters:\n      url: desired url\n      media: image being shared\n      description: image description\n   */\n  return this.autorun(function () {\n    let media;\n    let ref1;\n    const template = Template.instance();\n    const data = Template.currentData();\n    const preferredUrl = data.url || location.origin + location.pathname;\n    const url = encodeURIComponent(preferredUrl);\n    if (data.media) {\n      if (!/^http(s?):\\/\\/+/.test(data.media)) {\n        media = location.origin + data.media;\n      }\n    }\n    const description = encodeURIComponent(((ref1 = data.apps.pinterest) !== null ? ref1.description : void 0) || $(\".product-detail-field.description\").text());\n    const href = \"http://www.pinterest.com/pin/create/button/?url=\" + url + \"&media=\" + media + \"&description=\" + description;\n    return template.$(\".pinterest-share\").attr(\"href\", href);\n  });\n});\n\nTemplate.pinterest.events({\n  \"click a\": function (event) {\n    event.preventDefault();\n    return window.open(Template.instance().$(\".pinterest-share\").attr(\"href\"), \"pinterest_window\", \"width=750, height=650\");\n  }\n});\n","/* eslint-disable */\n//\n// TODO twitter social templates need review to ensure proper use of reaction layouts\n//\nTemplate.twitter.onRendered(function () {\n  let ref;\n  if (this.data.placement === \"footer\" && (((ref = this.data.apps.twitter) !== null ? ref.profilePage : void 0) !== null)) {\n    return this.$(\".twitter-share\").attr(\"href\", this.data.apps.twitter.profilePage);\n  }\n  //\n  // return twitter\n  //\n  return this.autorun(function () {\n    const template = Template.instance();\n    const data = Template.currentData();\n    $('meta[property^=\"twitter:\"]').remove();\n    $(\"<meta>\", {\n      property: \"twitter:card\",\n      content: \"summary\"\n    }).appendTo(\"head\");\n    if (data.apps.twitter.username) {\n      $(\"<meta>\", {\n        property: \"twitter:creator\",\n        content: data.apps.twitter.username\n      }).appendTo(\"head\");\n    }\n    let ref1;\n    const description = ((ref1 = data.apps.twitter) !== null ? ref1.description : void 0) || $(\".product-detail-field.description\").text();\n    $(\"<meta>\", {\n      property: \"twitter:url\",\n      content: location.origin + location.pathname\n    }).appendTo(\"head\");\n    $(\"<meta>\", {\n      property: \"twitter:title\",\n      content: \"\" + data.title\n    }).appendTo(\"head\");\n    $(\"<meta>\", {\n      property: \"twitter:description\",\n      content: description\n    }).appendTo(\"head\");\n    if (data.media) {\n      if (!/^http(s?):\\/\\/+/.test(data.media)) {\n        // let media = location.origin + data.media;\n        $(\"<meta>\", {\n          property: \"twitter:image\",\n          content: data.media\n        }).appendTo(\"head\");\n      }\n    }\n    const preferredUrl = data.url || location.origin + location.pathname;\n    const url = encodeURIComponent(preferredUrl);\n    const base = \"https://twitter.com/intent/tweet\";\n    let ref2;\n    const text = encodeURIComponent(((ref2 = data.apps.twitter) !== null ? ref2.title : void 0) || data.title);\n    let href = base + \"?url=\" + url + \"&text=\" + text;\n    if (data.apps.twitter.username) {\n      href += \"&via=\" + data.apps.twitter.username;\n    }\n    return template.$(\".twitter-share\").attr(\"href\", href);\n  });\n});\n\nTemplate.twitter.events({\n  \"click a\": function (event) {\n    event.preventDefault();\n    return window.open(Template.instance().$(\".twitter-share\").attr(\"href\"), \"twitter_window\", \"width=750, height=650\");\n  }\n});\n","import SocialSettingsContainer from \"../../containers/socialSettingsContainer\";\n\nTemplate.socialSettings.helpers({\n  SocialSettingsComponent() {\n    return {\n      component: SocialSettingsContainer\n    };\n  }\n});\n","import { Reaction } from \"/client/api\";\nimport { Packages } from \"/lib/collections\";\nimport { merge } from \"lodash\";\n\nTemplate.reactionSocial.onCreated(function () {\n  const self = this;\n  return this.autorun(function () {\n    const subscription = Reaction.Subscriptions.Packages;\n    if (subscription.ready()) {\n      const socialSettings = Packages.findOne({\n        name: \"reaction-social\"\n      });\n      if (socialSettings) {\n        self.socialSettings = socialSettings.settings.public;\n      }\n    }\n  });\n});\n\nTemplate.reactionSocial.helpers({\n  settings: function () {\n    const template = Template.instance();\n    return template && template.socialSettings;\n  },\n  socialTemplates: function () {\n    const templates = [];\n    const template = Template.instance();\n\n    if (template && template.socialSettings) {\n      let socialSettings = template.socialSettings;\n      socialSettings = merge({}, socialSettings, Template.currentData());\n\n      if (socialSettings.appsOrder) {\n        const appsOrder = socialSettings.appsOrder;\n\n        for (let i = 0; i < appsOrder.length; i++) {\n          const app = appsOrder[i];\n\n          if (typeof socialSettings.apps[app] === \"object\" &&\n            socialSettings.apps[app].enabled) {\n            templates.push(app);\n          }\n        }\n      }\n    }\n    return templates;\n  }\n});\n","import React, { Component, PropTypes } from \"react\";\nimport Helmet from \"react-helmet\";\nimport classnames from \"classnames\";\nimport { Translation } from \"/imports/plugins/core/ui/client/components\";\n\nexport function getOpenGraphMeta(props) {\n  const url = props.url || location.origin + location.pathname;\n  const title = props.title || document.title;\n  const description = props.settings.description;\n\n  const meta = [\n    { property: \"og:type\", content: \"article\" },\n    { property: \"og:site_name\", content: location.hostname },\n    { property: \"og:url\", content: url },\n    { property: \"og:title\", content: title },\n    { property: \"og:description\", content: description }\n  ];\n\n\n  if (props.media) {\n    if (!/^http(s?):\\/\\/+/.test(data.media)) {\n      media = location.origin + data.media;\n    }\n\n    meta.push({\n      property: \"og:image\",\n      content: media\n    });\n  }\n\n  return meta;\n}\n\nclass FacebookSocialButton extends Component {\n  componentDidMount() {\n    if (window && document) {\n      $('<div id=\"fb-root\"></div>').appendTo(\"body\");\n\n      window.fbAsyncInit = () => {\n        return FB.init({\n          appId: this.props.settings.appId,\n          xfbml: true,\n          version: this.props.settings.version || \"v2.7\"\n        });\n      };\n      (function (d, s, id) {\n        let js = void 0;\n        const fjs = d.getElementsByTagName(s)[0];\n        if (d.getElementById(id)) {\n          return;\n        }\n        js = d.createElement(s);\n        js.id = id;\n        js.src = \"//connect.facebook.net/en_US/sdk.js\";\n        fjs.parentNode.insertBefore(js, fjs);\n      })(document, \"script\", \"facebook-jssdk\");\n    }\n  }\n\n  handleClick = (event) => {\n    event.preventDefault();\n\n    if (window.FB) {\n      window.FB.ui({\n        method: \"share\",\n        display: \"popup\",\n        href: this.props.url\n      });\n    }\n  }\n\n  renderText() {\n    if (this.props.showText) {\n      return (\n        <Translation defaultValue=\"Share on Facebook\" i18nKey=\"social.shareOnFacebook\" />\n      );\n    }\n\n    return null;\n  }\n\n  render() {\n    const iconClassNames = classnames({\n      \"fa\": true,\n      \"fa-facebook\": this.props.altIcon !== true,\n      \"fa-facebook-alt\": this.props.altIcon,\n      [this.props.size]: this.props.size\n    });\n\n    return (\n      <a className=\"btn btn-flat facebook-share\" aria-label=\"Share to Facebook\" href=\"#\" onClick={this.handleClick}\n        target=\"_blank\"\n      >\n        <Helmet\n          meta={getOpenGraphMeta(this.props)}\n        />\n        <i className={iconClassNames} />\n        {this.renderText()}\n      </a>\n    );\n  }\n}\n\nFacebookSocialButton.propTypes = {\n  altIcon: PropTypes.string,\n  media: PropTypes.string,\n  settings: PropTypes.object,\n  showText: PropTypes.bool,\n  size: PropTypes.string,\n  url: PropTypes.string\n};\n\nexport default FacebookSocialButton;\n","import React, { Component, PropTypes } from \"react\";\nimport Helmet from \"react-helmet\";\nimport classnames from \"classnames\";\nimport { Translation } from \"/imports/plugins/core/ui/client/components\";\n\n\nexport function getGooglePlusMeta(props) {\n  const preferredUrl = props.url || location.origin + location.pathname;\n  const url = encodeURIComponent(preferredUrl);\n  const description = props.settings.description;\n\n  const meta = [\n    { property: \"itemprop:name\", content: location.hostname },\n    { property: \"itemprop:url\", content: url },\n    { property: \"itemprop:description\", content: description }\n  ];\n\n  if (props.media) {\n    let media;\n\n    if (!/^http(s?):\\/\\/+/.test(props.media)) {\n      media = location.origin + props.media;\n    }\n\n    meta.push({\n      property: \"itemprop:image\",\n      content: media\n    });\n  }\n}\n\nclass GooglePlusSocialButton extends Component {\n  handleClick = (event) => {\n    event.preventDefault();\n\n    if (window) {\n      window.open(this.url, \"googleplus_window\", \"width=750, height=650\");\n    }\n  }\n\n  get url() {\n    const props = this.props;\n    const preferredUrl = props.url || location.origin + location.pathname;\n    const url = encodeURIComponent(preferredUrl);\n    const href = \"https://plus.google.com/share?url=\" + url;\n\n    return href;\n  }\n\n  renderText() {\n    if (this.props.showText) {\n      return (\n        <Translation defaultValue=\"Share on GooglePlus\" i18nKey=\"social.shareOnGooglePlus\" />\n      );\n    }\n    return null;\n  }\n\n  render() {\n    const iconClassNames = classnames({\n      \"fa\": true,\n      \"fa-google-plus\": this.props.altIcon !== true,\n      \"fa-google-plus-alt\": this.props.altIcon,\n      [this.props.size]: this.props.size\n    });\n\n    return (\n      <a className=\"btn btn-flat googleplus-share\" aria-label=\"Share to Google Plus\" href=\"#\" onClick={this.handleClick}\n        target=\"_blank\"\n      >\n        <Helmet\n          meta={getGooglePlusMeta(this.props)}\n        />\n        <i className={iconClassNames} />\n        {this.renderText()}\n      </a>\n    );\n  }\n}\n\nGooglePlusSocialButton.propTypes = {\n  altIcon: PropTypes.bool,\n  showText: PropTypes.bool,\n  size: PropTypes.string\n};\n\nexport default GooglePlusSocialButton;\n","export { default as SocialButtons } from \"./socialButtons\";\nexport { default as Facebook } from \"./facebook\";\nexport { default as Twitter } from \"./twitter\";\nexport { default as GooglePlus } from \"./googleplus\";\nexport { default as Pinterest } from \"./pinterest\";\nexport { default as SocialSettings } from \"./settings\";\n","import React, { Component, PropTypes } from \"react\";\nimport classnames from \"classnames\";\nimport { Translation } from \"/imports/plugins/core/ui/client/components\";\n\nclass PinterestSocialButton extends Component {\n  handleClick = (event) => {\n    event.preventDefault();\n\n    if (window) {\n      window.open(this.url, \"pinterest_window\", \"width=750, height=650\");\n    }\n  }\n\n  get url() {\n    const props = this.props;\n    const preferredUrl = props.url || location.origin + location.pathname;\n    const url = encodeURIComponent(preferredUrl);\n    const description = props.settings.description;\n    const baseUrl = \"http://www.pinterest.com/pin/create/button/\";\n    let media = props.settings.media;\n\n    if (props.settings.media) {\n      if (!/^http(s?):\\/\\/+/.test(props.settings.media)) {\n        media = location.origin + props.settings.media;\n      }\n    }\n\n    const href = `${baseUrl}?url=${url}&media=${media}&description=${description}`;\n\n    return href;\n  }\n\n  renderText() {\n    if (this.props.showText) {\n      return (\n        <Translation defaultValue=\"Share on Pinterest\" i18nKey=\"social.shareOnPinterest\" />\n      );\n    }\n    return null;\n  }\n\n  render() {\n    const iconClassNames = classnames({\n      \"fa\": true,\n      \"fa-pinterest\": this.props.altIcon !== true,\n      \"fa-pinterest-alt\": this.props.altIcon,\n      [this.props.size]: this.props.size\n    });\n\n    return (\n      <a className=\"btn btn-flat pinterest-share\" aria-label=\"Share to Pinterest\" href={this.url} onClick={this.handleClick}\n        target=\"_blank\"\n      >\n        <i className={iconClassNames} />\n        {this.renderText()}\n      </a>\n    );\n  }\n}\n\nPinterestSocialButton.propTypes = {\n  altIcon: PropTypes.bool,\n  showText: PropTypes.bool,\n  size: PropTypes.string\n};\n\nexport default PinterestSocialButton;\n","import React, { Component, PropTypes } from \"react\";\nimport {\n  CardGroup,\n  SettingsCard,\n  Form\n} from \"/imports/plugins/core/ui/client/components\";\nimport { SocialPackageConfig } from \"/lib/collections/schemas/social\";\n\nconst socialProviders = [\n  {\n    name: \"facebook\",\n    icon: \"fa fa-facebook\",\n    fields: [\"appId\", \"appSecret\", \"profilePage\"]\n  },\n  {\n    name: \"twitter\",\n    icon: \"fa fa-twitter\",\n    fields: [\"username\", \"profilePage\"]\n  },\n  {\n    name: \"pinterest\",\n    icon: \"fa fa-pinterest\",\n    fields: [\"profilePage\"]\n  },\n  {\n    name: \"googleplus\",\n    icon: \"fa fa-google-plus\",\n    fields: [\"profilePage\"]\n  }\n];\n\nclass SocialSettings extends Component {\n  static propTypes = {\n    onSettingChange: PropTypes.func,\n    onSettingEnableChange: PropTypes.func,\n    onSettingExpand: PropTypes.func,\n    onSettingsSave: PropTypes.func,\n    packageData: PropTypes.object,\n    preferences: PropTypes.object,\n    providers: PropTypes.arrayOf(PropTypes.string),\n    socialSettings: PropTypes.object\n  }\n\n  getSchemaForField(provider, field) {\n    return SocialPackageConfig._schema[`settings.public.apps.${provider}.${field}`];\n  }\n\n  handleSettingChange = (event, value, name) => {\n    if (typeof this.props.onSettingChange === \"function\") {\n      const parts = name.split(\".\");\n      this.props.onSettingChange(parts[0], parts[1], value);\n    }\n  }\n\n  handleSubmit = (event, data, formName) => {\n    if (typeof this.props.onSettingsSave === \"function\") {\n      this.props.onSettingsSave(formName, data.doc);\n    }\n  }\n\n  renderCards() {\n    if (Array.isArray(socialProviders)) {\n      return socialProviders.map((provider, index) => {\n        const doc = {\n          settings: {\n            ...this.props.packageData.settings\n          }\n        };\n\n        return (\n          <SettingsCard\n            key={index}\n            i18nKeyTitle={`settings.${provider.name}`}\n            expandable={true}\n            onExpand={this.props.onSettingExpand}\n            expanded={this.props.preferences[provider.name]}\n            title={provider.name}\n            name={provider.name}\n            enabled={this.props.socialSettings.settings.apps[provider.name].enabled}\n            icon={provider.icon}\n            onSwitchChange={this.props.onSettingEnableChange}\n          >\n            <Form\n              schema={SocialPackageConfig}\n              doc={doc}\n              docPath={`settings.public.apps.${provider.name}`}\n              hideFields={[\n                `settings.public.apps.${provider.name}.enabled`\n              ]}\n              name={`settings.public.apps.${provider.name}`}\n              onSubmit={this.handleSubmit}\n            />\n          </SettingsCard>\n        );\n      });\n    }\n\n    return null;\n  }\n\n  render() {\n    return (\n      <CardGroup>\n        {this.renderCards()}\n      </CardGroup>\n    );\n  }\n}\n\nexport default SocialSettings;\n","import React, { Component, PropTypes } from \"react\";\nimport { Facebook, Twitter, GooglePlus, Pinterest } from \"./\";\n\nexport function getProviderComponentByName(providerName) {\n  switch (providerName) {\n    case \"facebook\":\n      return Facebook;\n    case \"twitter\":\n      return Twitter;\n    case \"googleplus\":\n      return GooglePlus;\n    case \"pinterest\":\n      return Pinterest;\n    default:\n      return null;\n  }\n}\n\n\nclass SocialButtons extends Component {\n\n  buttonSettngs(provider) {\n    return this.props.settings.apps[provider];\n  }\n\n  renderEditButton() {\n    if (this.props.editButton) {\n      return (\n        <span className=\"social-buttons-controls\">\n          {this.props.editButton}\n        </span>\n      );\n    }\n\n    return null;\n  }\n\n  renderButtons() {\n    if (this.props.providers) {\n      return this.props.providers.map((provider) => {\n        const buttonComponent = getProviderComponentByName(provider);\n\n        if (buttonComponent) {\n          const component = React.createElement(\n            getProviderComponentByName(provider),\n            {\n              key: provider,\n              title: this.props.title,\n              description: this.props.description,\n              url: this.props.url,\n              settings: this.buttonSettngs(provider)\n            }\n          );\n\n          return component;\n        }\n        return null;\n      });\n    }\n    return null;\n  }\n\n  render() {\n    return (\n      <div className=\"rui social-buttons\">\n        {this.renderButtons()}\n        {this.renderEditButton()}\n      </div>\n    );\n  }\n}\n\nSocialButtons.propTypes = {\n  description: PropTypes.string,\n  editButton: PropTypes.node,\n  providers: PropTypes.arrayOf(PropTypes.string),\n  settings: PropTypes.shape({\n    apps: PropTypes.object\n  }),\n  title: PropTypes.string,\n  url: PropTypes.string\n};\n\nexport default SocialButtons;\n","import React, { Component, PropTypes } from \"react\";\nimport Helmet from \"react-helmet\";\nimport classnames from \"classnames\";\nimport { Translation } from \"/imports/plugins/core/ui/client/components\";\n\n\nexport function getTwitterMeta(props) {\n  const title = props.title || document.title;\n  const preferredUrl = props.url || location.origin + location.pathname;\n  const url = encodeURIComponent(preferredUrl);\n  const username = props.settings.username;\n  const description = props.settings.description;\n\n  const meta = [\n    { property: \"twitter:card\", content: \"summary\" },\n    { property: \"twitter:creator\", content: username },\n    { property: \"twitter:url\", content: url },\n    { property: \"twitter:title\", content: title },\n    { property: \"twitter:description\", content: description }\n  ];\n\n  if (props.media) {\n    let media;\n\n    if (!/^http(s?):\\/\\/+/.test(props.media)) {\n      media = location.origin + props.media;\n    }\n\n    meta.push({\n      property: \"twitter:image\",\n      content: media\n    });\n  }\n}\n\nclass TwitterSocialButton extends Component {\n  handleClick = (event) => {\n    event.preventDefault();\n\n    if (window) {\n      window.open(this.url, \"twitter_window\", \"width=750, height=650\");\n    }\n  }\n\n  get url() {\n    const props = this.props;\n    const preferredUrl = props.url || location.origin + location.pathname;\n    const url = encodeURIComponent(preferredUrl);\n    const base = \"https://twitter.com/intent/tweet\";\n    const text = props.settings.description;\n    const username = props.settings.username;\n\n    let href = base + \"?url=\" + url + \"&text=\" + text;\n\n    if (username) {\n      href += \"&via=\" + username;\n    }\n\n    return href;\n  }\n\n  renderText() {\n    if (this.props.showText) {\n      return (\n        <Translation defaultValue=\"Share on Twitter\" i18nKey=\"social.shareOnTwitter\" />\n      );\n    }\n    return null;\n  }\n\n  render() {\n    const iconClassNames = classnames({\n      \"fa\": true,\n      \"fa-twitter\": this.props.altIcon !== true,\n      \"fa-twitter-alt\": this.props.altIcon,\n      [this.props.size]: this.props.size\n    });\n\n    return (\n      <a className=\"btn btn-flat twitter-share\" aria-label=\"Share to Twitter\" href=\"#\" onClick={this.handleClick}\n        target=\"_blank\"\n      >\n        <Helmet\n          meta={getTwitterMeta(this.props)}\n        />\n        <i className={iconClassNames} />\n        {this.renderText()}\n      </a>\n    );\n  }\n}\n\nTwitterSocialButton.propTypes = {\n  altIcon: PropTypes.bool,\n  showText: PropTypes.bool,\n  size: PropTypes.string\n};\n\nexport default TwitterSocialButton;\n","import React, { Component, PropTypes } from \"react\";\nimport { isEqual } from \"lodash\";\nimport { Meteor } from \"meteor/meteor\";\nimport { composeWithTracker } from \"/lib/api/compose\";\nimport { Reaction, i18next } from \"/client/api\";\nimport { Packages } from \"/lib/collections\";\nimport { SocialSettings } from \"../components\";\nimport { createSocialSettings } from \"../../lib/helpers\";\n\nclass SocialSettingsContainer extends Component {\n  static propTypes = {\n    settings: PropTypes.object\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      settings: props.settings\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (isEqual(nextProps.settings, this.props.settings) === false) {\n      this.setState({\n        settings: nextProps.settings\n      });\n    }\n  }\n\n  handleSettingEnable = (event, isChecked, name) => {\n    Meteor.call(\"reaction-social/updateSocialSetting\", name, \"enabled\", isChecked);\n  }\n\n  handleSettingExpand = (event, card, name, isExpanded) => {\n    Reaction.updateUserPreferences(\"reaction-social\", \"settingsCards\", {\n      [name]: isExpanded\n    });\n  }\n\n  handleSettingsSave = (settingName, values) => {\n    Meteor.call(\"reaction-social/updateSocialSettings\", values.settings, (error) => {\n      if (!error) {\n        Alerts.toast(\n          i18next.t(\"admin.settings.socialSettingsSaved\", { defaultValue: \"Social settings saved\" }),\n          \"success\"\n        );\n      }\n    });\n  }\n\n  render() {\n    return (\n      <SocialSettings\n        onSettingEnableChange={this.handleSettingEnable}\n        onSettingExpand={this.handleSettingExpand}\n        onSettingsSave={this.handleSettingsSave}\n        {...this.props}\n        settings={this.state.settings}\n      />\n    );\n  }\n}\n\nfunction composer(props, onData) {\n  const subscription = Reaction.Subscriptions.Packages;\n  const preferences = Reaction.getUserPreferences(\"reaction-social\", \"settingsCards\", {});\n\n  const socialPackage = Packages.findOne({\n    name: \"reaction-social\"\n  });\n\n  if (subscription.ready()) {\n    onData(null, {\n      preferences: preferences,\n      packageData: socialPackage,\n      socialSettings: createSocialSettings(props)\n    });\n  } else {\n    onData(null, {});\n  }\n}\n\nconst decoratedComponent = composeWithTracker(composer)(SocialSettingsContainer);\n\nexport default decoratedComponent;\n","import \"./templates/apps/facebook.html\";\nimport \"./templates/apps/facebook.js\";\nimport \"./templates/apps/googleplus.html\";\nimport \"./templates/apps/googleplus.js\";\nimport \"./templates/apps/pinterest.html\";\nimport \"./templates/apps/pinterest.js\";\nimport \"./templates/apps/twitter.html\";\nimport \"./templates/apps/twitter.js\";\n\nimport \"./templates/dashboard/social.html\";\nimport \"./templates/dashboard/social.js\";\n\nimport \"./templates/social.html\";\nimport \"./templates/social.js\";\n","import { Packages } from \"/lib/collections\";\nimport merge from \"lodash/merge\";\n\nexport function createSocialSettings(options) {\n  let socialSettings;\n\n  const socialPackage = Packages.findOne({\n    name: \"reaction-social\"\n  });\n\n  if (socialPackage) {\n    socialSettings = socialPackage.settings.public;\n    socialSettings = merge({}, socialSettings, options);\n    const socialButtons = [];\n\n    if (socialSettings.appsOrder) {\n      const appsOrder = socialSettings.appsOrder;\n      for (let i = 0; i < appsOrder.length; i++) {\n        const app = appsOrder[i];\n\n        if (typeof socialSettings.apps[app] === \"object\" && socialSettings.apps[app].enabled) {\n          socialButtons.push(app);\n        }\n      }\n    }\n\n    return {\n      url: options.url || location.origin + location.pathname,\n      media: options.media,\n      settings: socialSettings,\n      providers: socialButtons\n    };\n  }\n\n  return null;\n}\n","import React from \"react\";\nimport { DataType } from \"react-taco-table\";\nimport { Template } from \"meteor/templating\";\nimport { Reaction, i18next } from \"/client/api\";\nimport { SortableTable } from \"/imports/plugins/core/ui/client/components\";\n\nfunction userPermissions(userId) {\n  if (Reaction.hasPermission(\"reaction-accounts\")) {\n    const shopId = Reaction.getShopId();\n    const user = Meteor.users.findOne(userId);\n    const member = {};\n\n    member.userId = user._id;\n\n    if (user.emails && user.emails.length) {\n      // this is some kind of denormalization. It is helpful to have both\n      // of this string and array. Array goes to avatar, string goes to\n      // template\n      member.emails = user.emails;\n      member.email = user.emails[0].address;\n    }\n    // member.user = user;\n    member.username = user.username;\n    member.isAdmin = Roles.userIsInRole(user._id, \"admin\", shopId);\n    member.roles = user.roles;\n    member.services = user.services;\n\n    if (Roles.userIsInRole(member.userId, \"owner\", shopId)) {\n      member.role = \"owner\";\n    } else if (Roles.userIsInRole(member.userId, \"admin\", shopId)) {\n      member.role = \"admin\";\n    } else if (Roles.userIsInRole(member.userId, \"dashboard\", shopId)) {\n      member.role = \"dashboard\";\n    } else if (Roles.userIsInRole(member.userId, \"guest\", shopId)) {\n      member.role = \"guest\";\n    }\n\n    return member;\n  }\n}\n\n\nTemplate.searchModal.onCreated(function () {\n  this.autorun(() => {\n    this.subscribe(\"ShopMembers\");\n  });\n});\n\n/**\n * accountSearch helpers\n */\nTemplate.searchModal.helpers({\n  accountSearchResults() {\n    const instance = Template.instance();\n    const results = instance.state.get(\"accountSearchResults\");\n    return results;\n  },\n  accountTable() {\n    const instance = Template.instance();\n    const results = instance.state.get(\"accountSearchResults\");\n\n    const columns = [\n      {\n        id: \"_id\",\n        type: DataType.String,\n        header: i18next.t(\"search.accountSearchResults.accountId\", { defaultValue: \"Account ID\" }),\n        value: rowData => {\n          return rowData._id;\n        }\n      },\n      {\n        id: \"shopId\",\n        type: DataType.String,\n        header: i18next.t(\"search.accountSearchResults.shopId\", { defaultValue: \"Shop ID\" }),\n        value: rowData => {\n          return rowData.shopId;\n        }\n      },\n      {\n        id: \"firstName\",\n        type: DataType.String,\n        header: i18next.t(\"search.accountSearchResults.firstName\", { defaultValue: \"First Name\" }),\n        value: rowData => {\n          if (rowData.profile) {\n            return rowData.profile.firstName;\n          }\n          return undefined;\n        }\n      },\n      {\n        id: \"lastName\",\n        type: DataType.String,\n        header: i18next.t(\"search.accountSearchResults.lastName\", { defaultValue: \"Last Name\" }),\n        value: rowData => {\n          if (rowData.profile) {\n            return rowData.profile.lastName;\n          }\n          return undefined;\n        }\n      },\n      {\n        id: \"phone\",\n        type: DataType.String,\n        header: i18next.t(\"search.accountSearchResults.phone\", { defaultValue: \"Phone\" }),\n        value: rowData => {\n          if (rowData.profile) {\n            return rowData.profile.phone;\n          }\n          return undefined;\n        }\n      },\n      {\n        id: \"email\",\n        type: DataType.String,\n        header: i18next.t(\"search.accountSearchResults.emails\", { defaultValue: \"Email\" }),\n        value: rowData => {\n          return rowData.emails[0];\n        }\n      },\n      {\n        id: \"manageAccount\",\n        type: DataType.String,\n        header: i18next.t(\"search.orderSearchResults.shippingStatus\", { defaultValue: \"Shipping Status\" }),\n        value: rowData => {\n          return rowData.emails[0];\n        },\n        tdClassName: \"account-manage\",\n        renderer(cellData, { rowData }) {\n          return <span data-event-action=\"manageAccount\" data-event-data={rowData._id}>Manage</span>;\n        }\n      }\n    ];\n\n    return {\n      component: SortableTable,\n      data: results,\n      columns: columns\n    };\n  }\n});\n\n\n/**\n * orderResults events\n */\nTemplate.searchModal.events({\n  \"click [data-event-action=manageAccount]\": function (event) {\n    const instance = Template.instance();\n    const view = instance.view;\n\n    const userId = $(event.target).data(\"event-data\");\n\n    Reaction.showActionView({\n      label: \"Permissions\",\n      i18nKeyLabel: \"admin.settings.permissionsSettingsLabel\",\n      data: userPermissions(userId),\n      template: \"memberSettings\"\n    });\n\n    Reaction.Router.go(\"dashboard/accounts\", {}, {});\n\n    $(\".js-search-modal\").delay(400).fadeOut(400, () => {\n      Blaze.remove(view);\n    });\n  }\n});\n","import _ from \"lodash\";\nimport React from \"react\";\nimport { DataType } from \"react-taco-table\";\nimport { Template } from \"meteor/templating\";\nimport { Reaction, i18next } from \"/client/api\";\nimport { SortableTable } from \"/imports/plugins/core/ui/client/components\";\n\n\n/**\n * orderResults helpers\n */\nTemplate.searchModal.helpers({\n  orderSearchResults() {\n    const instance = Template.instance();\n    const results = instance.state.get(\"orderSearchResults\");\n    return results;\n  },\n  orderTable() {\n    const instance = Template.instance();\n    const results = instance.state.get(\"orderSearchResults\");\n    // const route = rowData.url;\n    const columns = [\n      {\n        id: \"_id\",\n        type: DataType.String,\n        header: i18next.t(\"search.orderSearchResults.orderId\", { defaultValue: \"Order ID\" }),\n        renderer(cellData) { // eslint-disable-line react/no-multi-comp\n          return <a data-event-action=\"goToOrder\" data-event-data={cellData}>{cellData}</a>;\n        }\n      },\n      {\n        id: \"shippingName\",\n        type: DataType.String,\n        header: i18next.t(\"search.orderSearchResults.shippingName\", { defaultValue: \"Name\" }),\n        value: rowData => {\n          return rowData.shippingName;\n        }\n      },\n      {\n        id: \"userEmail\",\n        type: DataType.String,\n        header: i18next.t(\"search.orderSearchResults.userEmails\", { defaultValue: \"Email\" }),\n        value: rowData => {\n          return rowData.userEmails[0];\n        }\n      },\n      {\n        id: \"shippingAddress\",\n        type: DataType.String,\n        header: i18next.t(\"search.orderSearchResults.shippingAddress\", { defaultValue: \"Address\" }),\n        value: rowData => {\n          return rowData.shippingAddress.address;\n        }\n      },\n      {\n        id: \"shippingCity\",\n        type: DataType.String,\n        header: i18next.t(\"search.orderSearchResults.shippingCity\", { defaultValue: \"City\" }),\n        value: rowData => {\n          return rowData.shippingAddress.city;\n        }\n      },\n      {\n        id: \"shippingRegion\",\n        type: DataType.String,\n        header: i18next.t(\"search.orderSearchResults.shippingRegion\", { defaultValue: \"Region\" }),\n        value: rowData => {\n          return rowData.shippingAddress.region;\n        }\n      },\n      {\n        id: \"shippingCountry\",\n        type: DataType.String,\n        header: i18next.t(\"search.orderSearchResults.shippingCountry\", { defaultValue: \"Country\" }),\n        value: rowData => {\n          return rowData.shippingAddress.country;\n        }\n      },\n      {\n        id: \"shippingPhone\",\n        type: DataType.String,\n        header: i18next.t(\"search.orderSearchResults.shippingPhone\", { defaultValue: \"Phone\" }),\n        value: rowData => {\n          return rowData.shippingPhone;\n        }\n      },\n      {\n        id: \"shippingStatus\",\n        type: DataType.String,\n        header: i18next.t(\"search.orderSearchResults.shippingStatus\", { defaultValue: \"Shipping Status\" }),\n        value: rowData => {\n          return rowData.shippingStatus;\n        },\n        tdClassName: \"shipping-status\",\n        renderer(cellData, { rowData }) { // eslint-disable-line react/no-multi-comp\n          const rowClassName = _.lowerCase(rowData.shippingStatus);\n          return <span className={rowClassName}>{cellData}</span>;\n        }\n      },\n      {\n        id: \"orderDate\",\n        type: DataType.Date,\n        header: i18next.t(\"search.orderSearchResults.orderDate\", { defaultValue: \"Date\" }),\n        value: rowData => {\n          return rowData.orderDate;\n        }\n      },\n      {\n        id: \"orderTotal\",\n        type: DataType.Number,\n        header: i18next.t(\"search.orderSearchResults.orderTotal\", { defaultValue: \"Total\" }),\n        value: rowData => {\n          return rowData.orderTotal;\n        }\n      }\n    ];\n\n    return {\n      component: SortableTable,\n      data: results,\n      columns: columns\n    };\n  }\n});\n\n\n/**\n * orderResults events\n */\nTemplate.searchModal.events({\n  \"click [data-event-action=goToOrder]\": function (event) {\n    const instance = Template.instance();\n    const view = instance.view;\n    const isActionViewOpen = Reaction.isActionViewOpen();\n    const orderId = $(event.target).data(\"event-data\");\n\n    // toggle detail views\n    if (isActionViewOpen === false) {\n      Reaction.showActionView({\n        label: \"Order Details\",\n        i18nKeyLabel: \"orderWorkflow.orderDetails\",\n        data: instance.data.order,\n        props: {\n          size: \"large\"\n        },\n        template: \"coreOrderWorkflow\"\n      });\n    }\n\n    Reaction.Router.go(\"dashboard/orders\", {}, {\n      _id: orderId\n    });\n\n    $(\".js-search-modal\").delay(400).fadeOut(400, () => {\n      Blaze.remove(view);\n    });\n  }\n});\n","/**\n * gridContent helpers\n */\n\nTemplate.searchGridContent.inheritsHelpersFrom(\"gridContent\");\n","/**\n * searchGridNotice helpers\n */\nTemplate.searchGridNotice.helpers({\n  isLowQuantity: function () {\n    return this.product.isLowQuantity;\n  },\n  isSoldOut: function () {\n    return this.product.isSoldOut;\n  },\n  isBackorder: function () {\n    return this.product.isBackorder;\n  }\n});\n","import _ from \"lodash\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Session } from \"meteor/session\";\nimport { Template } from \"meteor/templating\";\nimport { Tracker } from \"meteor/tracker\";\nimport { $ } from \"meteor/jquery\";\nimport Logger from \"/client/modules/logger\";\nimport { ReactionProduct } from \"/lib/api\";\nimport { Media, Products } from \"/lib/collections\";\nimport { Reaction } from \"/client/api\";\n\n/**\n * productGridItems helpers\n */\n\nTemplate.productItem.helpers({\n  controlProps() {\n    const instance = Template.instance();\n\n    return {\n      product: instance.data,\n      onEditButtonClick() {\n        const data = instance.data.product;\n        const $checkbox = instance.$(`input[type=checkbox][value=${data._id}]`);\n\n        Session.set(\"productGrid/selectedProducts\", []);\n        $checkbox.prop(\"checked\", true).trigger(\"change\");\n      },\n      onPublishButtonClick() {\n        ReactionProduct.publishProduct(instance.data);\n      }\n    };\n  },\n  media: function () {\n    const media = Media.findOne({\n      \"metadata.productId\": this.product._id,\n      \"metadata.priority\": 0,\n      \"metadata.toGrid\": 1\n    }, { sort: { uploadedAt: 1 } });\n\n    return media instanceof FS.File ? media : false;\n  },\n  additionalMedia: function () {\n    const mediaArray = Media.find({\n      \"metadata.productId\": this._id,\n      \"metadata.priority\": {\n        $gt: 0\n      },\n      \"metadata.toGrid\": 1\n    }, { limit: 3 });\n\n    if (mediaArray.count() > 1) {\n      return mediaArray;\n    }\n\n    return false;\n  },\n  weightClass: function () {\n    const tag = ReactionProduct.getTag();\n    const positions = this.positions && this.positions[tag] || {};\n    const weight = positions.weight || 0;\n    switch (weight) {\n      case 1:\n        return \"product-medium\";\n      case 2:\n        return \"product-large\";\n      default:\n        return \"product-small\";\n    }\n  },\n  isSelected: function () {\n    return _.includes(Session.get(\"productGrid/selectedProducts\"), this._id) ? \"active\" : \"\";\n  },\n  isMediumWeight: function () {\n    const tag = ReactionProduct.getTag();\n    const positions = this.positions && this.positions[tag] || {};\n    const weight = positions.weight || 0;\n\n    return weight === 1;\n  },\n  isLargeWeight: function () {\n    const tag = ReactionProduct.getTag();\n    const positions = this.positions && this.positions[tag] || {};\n    const weight = positions.weight || 0;\n\n    return weight === 3;\n  },\n  shouldShowAdditionalImages: function () {\n    if (this.isMediumWeight && this.mediaArray) {\n      return true;\n    }\n    return false;\n  },\n  // this is needed to get `pinned` from the item template\n  positions() {\n    const tag = ReactionProduct.getTag();\n    return this.positions && this.positions[tag] || {};\n  }\n});\n\n/**\n * productGridItems events\n */\n\nTemplate.productItem.events({\n  \"click [data-event-action=productClick]\": function (event) {\n    event.preventDefault();\n    const instance = Template.instance();\n    const view = instance.view;\n    const product = Products.findOne(event.currentTarget.dataset.eventValue);\n\n    let handle = product.handle;\n    if (product.__published) {\n      handle = product.__published.handle;\n    }\n\n    Reaction.Router.go(\"product\", {\n      handle: handle\n    });\n\n    $(\".js-search-modal\").delay(400).fadeOut(400, () => {\n      $(\"body\").css(\"overflow-y\", \"inherit\");\n      Blaze.remove(view);\n    });\n  },\n  \"click [data-event-action=selectSingleProduct]\": function (event, template) {\n    event.preventDefault();\n    const { data } = Template.instance();\n\n    const $checkbox = template.$(`input[type=checkbox][value=${data._id}]`);\n\n    Session.set(\"productGrid/selectedProducts\", []);\n    $checkbox.prop(\"checked\", true).trigger(\"change\");\n  },\n  \"click .publish-product\"(event, instance) {\n    ReactionProduct.publishProduct(instance.data);\n  },\n  \"click .delete-product\": function (event) {\n    event.preventDefault();\n    ReactionProduct.archiveProduct(this);\n  },\n  \"click .update-product-weight\": function (event) {\n    event.preventDefault();\n\n    const tag = ReactionProduct.getTag();\n    const positions = this.positions && this.positions[tag] || {};\n    let weight = positions.weight || 0;\n\n    if (weight < 2) {\n      weight++;\n    } else {\n      weight = 0;\n    }\n\n    const position = {\n      weight: weight,\n      updatedAt: new Date()\n    };\n    Meteor.call(\"products/updateProductPosition\", this._id, position, tag, error => {\n      if (error) {\n        Logger.warn(error);\n        throw new Meteor.Error(403, error);\n      }\n    });\n    return Tracker.flush();\n  }\n});\n","import _ from \"lodash\";\nimport { Session } from \"meteor/session\";\nimport { Template } from \"meteor/templating\";\nimport { Reaction } from \"/client/api\";\nimport Logger from \"/client/modules/logger\";\nimport { ReactionProduct } from \"/lib/api\";\nimport Sortable from \"sortablejs\";\n\n/**\n * productGrid helpers\n */\n\nTemplate.productResults.onCreated(function () {\n  Session.set(\"productGrid/selectedProducts\", []);\n});\n\nTemplate.productResults.onRendered(function () {\n  const instance = this;\n\n  if (Reaction.hasPermission(\"createProduct\")) {\n    const productSort = $(\".product-grid-list\")[0];\n\n    this.sortable = Sortable.create(productSort, {\n      group: \"products\",\n      handle: \".product-grid-item\",\n      onUpdate() {\n        const tag = ReactionProduct.getTag();\n\n        instance.$(\".product-grid-item\")\n          .toArray()\n          .map((element, index) => {\n            const productId = element.getAttribute(\"id\");\n            const position = {\n              position: index,\n              updatedAt: new Date()\n            };\n\n            Meteor.call(\"products/updateProductPosition\", productId, position, tag,\n              error => {\n                if (error) {\n                  Logger.warn(error);\n                  throw new Meteor.Error(403, error);\n                }\n              });\n          });\n\n        Tracker.flush();\n      }\n    });\n  }\n});\n\nTemplate.productResults.events({\n  \"click [data-event-action=loadMoreProducts]\": (event) => {\n    event.preventDefault();\n    loadMoreProducts();\n  },\n  \"change input[name=selectProduct]\": (event) => {\n    let selectedProducts = Session.get(\"productGrid/selectedProducts\");\n\n    if (event.target.checked) {\n      selectedProducts.push(event.target.value);\n    } else {\n      selectedProducts = _.without(selectedProducts, event.target.value);\n    }\n\n    Session.set(\"productGrid/selectedProducts\", _.uniq(selectedProducts));\n\n    const productCursor = Template.currentData().products;\n\n    if (productCursor) {\n      const products = productCursor.fetch();\n\n      const filteredProducts = _.filter(products, (product) => {\n        return _.includes(selectedProducts, product._id);\n      });\n\n      Reaction.showActionView({\n        label: \"Product Settings\",\n        i18nKeyLabel: \"productDetailEdit.productSettings\",\n        template: \"productSettings\",\n        type: \"product\",\n        data: {\n          products: filteredProducts\n        }\n      });\n    }\n  }\n});\n\nTemplate.productResults.helpers({\n  loadMoreProducts() {\n    return Template.instance().state.equals(\"canLoadMoreProducts\", true);\n  },\n  products() {\n    return Template.currentData().products;\n  }\n});\n","import _ from \"lodash\";\nimport { Template } from \"meteor/templating\";\nimport { ProductSearch, Tags, OrderSearch, AccountSearch } from \"/lib/collections\";\nimport { IconButton } from \"/imports/plugins/core/ui/client/components\";\n\n/*\n * searchModal extra functions\n */\nfunction tagToggle(arr, val) {\n  if (arr.length === _.pull(arr, val).length) {\n    arr.push(val);\n  }\n  return arr;\n}\n\n/*\n * searchModal onCreated\n */\nTemplate.searchModal.onCreated(function () {\n  this.state = new ReactiveDict();\n  this.state.setDefault({\n    initialLoad: true,\n    slug: \"\",\n    canLoadMoreProducts: false,\n    searchQuery: \"\",\n    productSearchResults: [],\n    tagSearchResults: []\n  });\n\n\n  // Allow modal to be closed by clicking ESC\n  // Must be done in Template.searchModal.onCreated and not in Template.searchModal.events\n  $(document).on(\"keyup\", (event) => {\n    if (event.keyCode === 27) {\n      const view = this.view;\n      $(\".js-search-modal\").fadeOut(400, () => {\n        $(\"body\").css(\"overflow\", \"visible\");\n        Blaze.remove(view);\n      });\n    }\n  });\n\n\n  this.autorun(() => {\n    const searchCollection = this.state.get(\"searchCollection\") || \"products\";\n    const searchQuery = this.state.get(\"searchQuery\");\n    const facets = this.state.get(\"facets\") || [];\n    const sub = this.subscribe(\"SearchResults\", searchCollection, searchQuery, facets);\n\n    if (sub.ready()) {\n      /*\n       * Product Search\n       */\n      if (searchCollection === \"products\") {\n        const productResults = ProductSearch.find().fetch();\n        const productResultsCount = productResults.length;\n        this.state.set(\"productSearchResults\", productResults);\n        this.state.set(\"productSearchCount\", productResultsCount);\n\n        const hashtags = [];\n        for (const product of productResults) {\n          if (product.hashtags) {\n            for (const hashtag of product.hashtags) {\n              if (!_.includes(hashtags, hashtag)) {\n                hashtags.push(hashtag);\n              }\n            }\n          }\n        }\n        const tagResults = Tags.find({\n          _id: { $in: hashtags }\n        }).fetch();\n        this.state.set(\"tagSearchResults\", tagResults);\n\n        // TODO: Do we need this?\n        this.state.set(\"accountSearchResults\", \"\");\n        this.state.set(\"orderSearchResults\", \"\");\n      }\n\n      /*\n       * Account Search\n       */\n      if (searchCollection === \"accounts\") {\n        const accountResults = AccountSearch.find().fetch();\n        const accountResultsCount = accountResults.length;\n        this.state.set(\"accountSearchResults\", accountResults);\n        this.state.set(\"accountSearchCount\", accountResultsCount);\n\n        // TODO: Do we need this?\n        this.state.set(\"orderSearchResults\", \"\");\n        this.state.set(\"productSearchResults\", \"\");\n        this.state.set(\"tagSearchResults\", \"\");\n      }\n\n      /*\n       * Order Search\n       */\n      if (searchCollection === \"orders\") {\n        const orderResults = OrderSearch.find().fetch();\n        const orderResultsCount = orderResults.length;\n        this.state.set(\"orderSearchResults\", orderResults);\n        this.state.set(\"orderSearchCount\", orderResultsCount);\n\n\n        // TODO: Do we need this?\n        this.state.set(\"accountSearchResults\", \"\");\n        this.state.set(\"productSearchResults\", \"\");\n        this.state.set(\"tagSearchResults\", \"\");\n      }\n    }\n  });\n});\n\n\n/*\n * searchModal helpers\n */\nTemplate.searchModal.helpers({\n  IconButtonComponent() {\n    const instance = Template.instance();\n    const view = instance.view;\n\n    return {\n      component: IconButton,\n      icon: \"fa fa-times\",\n      onClick() {\n        $(\".js-search-modal\").fadeOut(400, () => {\n          $(\"body\").css(\"overflow\", \"visible\");\n          Blaze.remove(view);\n        });\n      }\n    };\n  },\n  productSearchResults() {\n    const instance = Template.instance();\n    const results = instance.state.get(\"productSearchResults\");\n    return results;\n  },\n  tagSearchResults() {\n    const instance = Template.instance();\n    const results = instance.state.get(\"tagSearchResults\");\n    return results;\n  },\n  showSearchResults() {\n    return false;\n  }\n});\n\n\n/*\n * searchModal events\n */\nTemplate.searchModal.events({\n  // on type, reload Reaction.SaerchResults\n  \"keyup input\": (event, templateInstance) => {\n    event.preventDefault();\n    const searchQuery = templateInstance.find(\"#search-input\").value;\n    templateInstance.state.set(\"searchQuery\", searchQuery);\n    $(\".search-modal-header:not(.active-search)\").addClass(\".active-search\");\n    if (!$(\".search-modal-header\").hasClass(\"active-search\")) {\n      $(\".search-modal-header\").addClass(\"active-search\");\n    }\n  },\n  \"click [data-event-action=filter]\": function (event, templateInstance) {\n    event.preventDefault();\n    const instance = Template.instance();\n    const facets = instance.state.get(\"facets\") || [];\n    const newFacet = $(event.target).data(\"event-value\");\n\n    tagToggle(facets, newFacet);\n\n    $(event.target).toggleClass(\"active-tag btn-active\");\n\n    templateInstance.state.set(\"facets\", facets);\n  },\n  \"click [data-event-action=productClick]\": function () {\n    const instance = Template.instance();\n    const view = instance.view;\n    $(\".js-search-modal\").delay(400).fadeOut(400, () => {\n      Blaze.remove(view);\n    });\n  },\n  \"click [data-event-action=clearSearch]\": function (event, templateInstance) {\n    $(\"#search-input\").val(\"\");\n    $(\"#search-input\").focus();\n    const searchQuery = templateInstance.find(\"#search-input\").value;\n    templateInstance.state.set(\"searchQuery\", searchQuery);\n  },\n  \"click [data-event-action=searchCollection]\": function (event, templateInstance) {\n    event.preventDefault();\n    const searchCollection = $(event.target).data(\"event-value\");\n\n    $(\".search-type-option\").not(event.target).removeClass(\"search-type-active\");\n    $(event.target).addClass(\"search-type-active\");\n\n    $(\"#search-input\").focus();\n\n    templateInstance.state.set(\"searchCollection\", searchCollection);\n  }\n});\n\n\n/*\n * searchModal onDestroyed\n */\nTemplate.searchModal.onDestroyed(() => {\n  // Kill Allow modal to be closed by clicking ESC, which was initiated in Template.searchModal.onCreated\n  $(document).off(\"keyup\");\n});\n","// Search Modal\nimport \"./templates/searchModal/searchModal.html\";\nimport \"./templates/searchModal/searchModal.js\";\nimport \"./templates/searchModal/searchInput.html\";\nimport \"./templates/searchModal/searchTypeToggle.html\";\nimport \"./templates/searchModal/searchResults.html\";\n\n// Product Search\nimport \"./templates/productSearch/productResults.html\";\nimport \"./templates/productSearch/productResults.js\";\nimport \"./templates/productSearch/productSearchTags.html\";\nimport \"./templates/productSearch/productItem.html\";\nimport \"./templates/productSearch/productItem.js\";\nimport \"./templates/productSearch/content.html\";\nimport \"./templates/productSearch/content.js\";\nimport \"./templates/productSearch/notice.html\";\nimport \"./templates/productSearch/notice.js\";\n\n// Order Search\nimport \"./templates/orderSearch/orderResults.html\";\nimport \"./templates/orderSearch/orderResults.js\";\n\n// Account Search\nimport \"./templates/accountSearch/accountResults.html\";\nimport \"./templates/accountSearch/accountResults.js\";\n","import { Packages } from \"/lib/collections\";\nimport { i18next } from \"/client/api\";\n\nTemplate.reactionAnalyticsSettings.helpers({\n  packageData() {\n    return Packages.findOne({\n      name: \"reaction-analytics\"\n    });\n  },\n  googleAnalyticsEnabled() {\n    return typeof ga === \"function\";\n  },\n  segmentioEnabled() {\n    return typeof analytics === \"object\";\n  },\n  mixpanelEnabled() {\n    return typeof mixpanel === \"object\";\n  }\n});\n\n\nAutoForm.hooks({\n  \"analytics-update-form\": {\n    onSuccess() {\n      Alerts.removeType(\"analytics-not-configured\");\n      return Alerts.toast(i18next.t(\"admin.settings.analyticsSettingsSaved\"), \"success\");\n    },\n    onError(operation, error) {\n      const msg = error.message || error.reason || \"Unknown error\";\n      return Alerts.toast(`${i18next.t(\"admin.settings.analyticsSettingsFailed\")} ${msg}`, \"error\");\n    }\n  }\n});\n","import \"./templates/reactionAnalytics.html\";\nimport \"./templates/reactionAnalytics.js\";\n\nimport \"./startup\";\n","import _ from \"lodash\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Tracker } from \"meteor/tracker\";\nimport { AnalyticsEvents, Packages } from \"/lib/collections\";\nimport { Reaction, i18next, Logger } from \"/client/api\";\n\n// Create a queue, but don't obliterate an existing one!\nanalytics = window.analytics = window.analytics || [];\n\n// If the real analytics.js is already on the page return.\nif (analytics.initialize) return;\n\n// If the snippet was invoked already show an error.\nif (analytics.invoked) {\n  Logger.warn(\"Segment snippet included twice.\");\n  return;\n}\n\n// Invoked flag, to make sure the snippet\n// is never invoked twice.\nanalytics.invoked = true;\n\n// A list of the methods in Analytics.js to stub.\nanalytics.methods = [\n  \"trackSubmit\",\n  \"trackClick\",\n  \"trackLink\",\n  \"trackForm\",\n  \"pageview\",\n  \"identify\",\n  \"reset\",\n  \"group\",\n  \"track\",\n  \"ready\",\n  \"alias\",\n  \"page\",\n  \"once\",\n  \"off\",\n  \"on\"\n];\n\n// Define a factory to create stubs. These are placeholders\n// for methods in Analytics.js so that you never have to wait\n// for it to load to actually record data. The `method` is\n// stored as the first argument, so we can replay the data.\nanalytics.factory = function (method) {\n  return function () {\n    const args = Array.prototype.slice.call(arguments);\n    args.unshift(method);\n    analytics.push(args);\n    return analytics;\n  };\n};\n\n// For each of our methods, generate a queueing stub.\nfor (let i = 0; i < analytics.methods.length; i++) {\n  const key = analytics.methods[i];\n  analytics[key] = analytics.factory(key);\n}\n\n// Define a method to load Analytics.js from our CDN,\n// and that will be sure to only ever load it once.\nanalytics.load = function (key) {\n  // Create an async script element based on your key.\n  const script = document.createElement(\"script\");\n  script.type = \"text/javascript\";\n  script.async = true;\n  script.src = (document.location.protocol === \"https:\" ? \"https://\" : \"http://\") +\n    \"cdn.segment.com/analytics.js/v1/\" + key + \"/analytics.min.js\";\n  // Insert our script next to the first script element.\n  const first = document.getElementsByTagName(\"script\")[0];\n  first.parentNode.insertBefore(script, first);\n};\n\n// Add a version to keep track of what\"s in the wild.\nanalytics.SNIPPET_VERSION = \"3.1.0\";\n\n// Load Analytics.js with your key, which will automatically\n// load the tools you\"ve enabled for your account. Boosh!\n// analytics.load(\"YOUR_WRITE_KEY\");\n\n// Make the first page call to load the integrations. If\n// you\"d like to manually name or tag the page, edit or\n// move this call however you\"d like.\n// analytics.page();\n\n//\n// Initialize analytics page tracking\n//\n\n// segment page tracking\nfunction notifySegment(context) {\n  if (typeof analytics !== \"undefined\") {\n    analytics.page({\n      userId: Meteor.userId(),\n      properties: {\n        url: context.path,\n        shopId: Reaction.getShopId()\n      }\n    });\n  }\n}\n// google analytics page tracking\nfunction notifyGoogleAnalytics(context) {\n  if (typeof ga !== \"undefined\") {\n    ga(\"send\", \"pageview\", context.path);\n  }\n}\n\n// mixpanel page tracking\nfunction notifyMixpanel(context) {\n  if (typeof mixpanel !== \"undefined\") {\n    mixpanel.track(\"page viewed\", {\n      \"page name\": document.title,\n      \"url\": context.path\n    });\n  }\n}\n\nReaction.Router.triggers.enter([notifySegment, notifyGoogleAnalytics, notifyMixpanel]);\n\n//\n// Initialize analytics event tracking\n//\nMeteor.startup(function () {\n  Tracker.autorun(function () {\n    const coreAnalytics = Packages.findOne({\n      name: \"reaction-analytics\"\n    });\n\n    // check if installed and enabled\n    if (!coreAnalytics || !coreAnalytics.enabled) {\n      return Alerts.removeType(\"analytics-not-configured\");\n    }\n\n    const googleAnalytics = coreAnalytics.settings.public.googleAnalytics;\n    const mixpanel = coreAnalytics.settings.public.mixpanel;\n    const segmentio = coreAnalytics.settings.public.segmentio;\n\n    //\n    // segment.io\n    //\n    if (segmentio.enabled) {\n      if (segmentio.api_key && analytics.invoked === true) {\n        analytics.load(segmentio.api_key);\n      } else if (!segmentio.api_key && Reaction.hasAdminAccess()) {\n        _.defer(function () {\n          return Alerts.toast(\n            `${i18next.t(\"admin.settings.segmentNotConfigured\")}`,\n            \"danger\", {\n              html: true,\n              sticky: true\n            });\n        });\n      }\n    }\n\n    //\n    // Google Analytics\n    //\n    if (googleAnalytics.enabled) {\n      if (googleAnalytics.api_key) {\n        ga(\"create\", googleAnalytics.api_key, \"auto\");\n      } else if (!googleAnalytics.api_key && Reaction.hasAdminAccess()) {\n        _.defer(function () {\n          return Alerts.toast(\n            `${i18next.t(\"admin.settings.googleAnalyticsNotConfigured\")}`,\n            \"error\", {\n              type: \"analytics-not-configured\",\n              html: true,\n              sticky: true\n            });\n        });\n      }\n    }\n\n    //\n    // mixpanel\n    //\n    if (mixpanel.enabled) {\n      if (mixpanel.api_key) {\n        mixpanel.init(mixpanel.api_key);\n      } else if (!mixpanel.api_key && Reaction.hasAdminAccess()) {\n        _.defer(function () {\n          return Alerts.toast(\n            `${i18next.t(\"admin.settings.mixpanelNotConfigured\")}`,\n            \"error\", {\n              type: \"analytics-not-configured\",\n              html: true,\n              sticky: true\n            });\n        });\n      }\n    }\n\n    if (!Reaction.hasAdminAccess()) {\n      return Alerts.removeType(\"analytics-not-configured\");\n    }\n    return null;\n  });\n\n  //\n  // analytics event processing\n  //\n  return $(document.body).click(function (e) {\n    let $targets = $(e.target).closest(\"*[data-event-action]\");\n    $targets = $targets.parents(\"*[data-event-action]\").add($targets);\n    return $targets.each(function (index, element) {\n      const $element = $(element);\n      const analyticsEvent = {\n        eventType: \"event\",\n        category: $element.data(\"event-category\"),\n        action: $element.data(\"event-action\"),\n        label: $element.data(\"event-label\"),\n        value: $element.data(\"event-value\")\n      };\n      if (typeof ga === \"function\") {\n        ga(\"send\", \"event\", analyticsEvent.category, analyticsEvent.action, analyticsEvent.label,\n          analyticsEvent.value);\n      }\n      if (typeof mixpanel === \"object\" && mixpanel.length > 0) {\n        mixpanel.track(analyticsEvent.action, {\n          Category: analyticsEvent.category,\n          Label: analyticsEvent.label,\n          Value: analyticsEvent.value\n        });\n      }\n\n      if (typeof analytics === \"object\") {\n        analytics.track(analyticsEvent.action, {\n          Category: analyticsEvent.category,\n          Label: analyticsEvent.label,\n          Value: analyticsEvent.value\n        });\n      }\n      // we could add a hook here, but not needed as\n      // you can trigger using the collection hooks\n      return AnalyticsEvents.insert(analyticsEvent);\n    });\n  });\n});\n","import { Cart } from \"/lib/collections\";\nimport DiscountList from \"/imports/plugins/core/discounts/client/components/list\";\nimport \"./codes.html\";\n\nTemplate.discountCodesCheckout.helpers({\n  DiscountList() {\n    return DiscountList;\n  },\n  cartId() {\n    return Cart.findOne()._id;\n  }\n});\n","import \"./codes\";\nimport \"./settings\";\n","import { Template } from \"meteor/templating\";\nimport { ReactiveDict } from \"meteor/reactive-dict\";\nimport { AutoForm } from \"meteor/aldeed:autoform\";\nimport { DiscountCodes } from \"../collections/codes\";\nimport { i18next } from \"/client/api\";\nimport { DiscountCodes as DiscountSchema } from \"../../lib/collections/schemas\";\nimport MeteorGriddle from \"/imports/plugins/core/ui-grid/client/griddle\";\nimport { IconButton, Loading }  from \"/imports/plugins/core/ui/client/components\";\nimport \"./settings.html\";\n\n/* eslint no-shadow: [\"error\", { \"allow\": [\"options\"] }] */\n/* eslint no-unused-vars: [\"error\", { \"argsIgnorePattern\": \"[oO]ptions\" }] */\n\nTemplate.customDiscountCodes.onCreated(function () {\n  this.autorun(() => {\n    this.subscribe(\"DiscountCodes\");\n  });\n\n  this.state = new ReactiveDict();\n  this.state.setDefault({\n    isEditing: false,\n    editingId: null\n  });\n});\n\nTemplate.customDiscountCodes.helpers({\n  editButton() {\n    const instance = Template.instance();\n    const state = instance.state;\n    const isEditing = state.equals(\"isEditing\", true);\n    let editingId = state.get(\"editingId\");\n    // toggle edit state\n    if (!isEditing) {\n      editingId = null;\n    }\n    // return icon\n    return {\n      component: IconButton,\n      icon: \"fa fa-plus\",\n      onIcon: \"fa fa-pencil\",\n      toggle: true,\n      toggleOn: isEditing,\n      style: {\n        position: \"relative\",\n        top: \"-25px\",\n        right: \"8px\"\n      },\n      onClick() {\n        // remove active rows from grid\n        $(\".discount-codes-grid-row\").removeClass(\"active\");\n        return state.set({\n          isEditing: !isEditing,\n          editingId: editingId\n        });\n      }\n    };\n  },\n  discountGrid() {\n    const filteredFields = [\"code\", \"discount\", \"conditions.redemptionLimit\", \"calculation.method\"];\n    const noDataMessage = i18next.t(\"admin.settings.noCustomDiscountCodesFound\");\n    const instance = Template.instance();\n\n    //\n    // helper to get and select row from griddle\n    // into blaze for to select discount row for editing\n    //\n    function editRow(options) {\n      const currentId = instance.state.get(\"editingId\");\n      // isEditing is discount rate object\n      instance.state.set(\"isEditing\", options.props.data);\n      instance.state.set(\"editingId\", options.props.data._id);\n      // toggle edit mode clicking on same row\n      if (currentId === options.props.data._id) {\n        instance.state.set(\"isEditing\", null);\n        instance.state.set(\"editingId\", null);\n      }\n    }\n\n    //\n    // helper adds a class to every grid row\n    //\n    const customRowMetaData = {\n      bodyCssClassName: () =>  {\n        return \"discount-codes-grid-row\";\n      }\n    };\n\n    // add i18n handling to headers\n    const customColumnMetadata = [];\n    filteredFields.forEach(function (field) {\n      const columnMeta = {\n        columnName: field,\n        displayName: i18next.t(`admin.discountGrid.${field}`)\n      };\n      customColumnMetadata.push(columnMeta);\n    });\n\n    // return discount Grid\n    return {\n      component: MeteorGriddle,\n      publication: \"DiscountCodes\",\n      collection: DiscountCodes,\n      matchingResultsCount: \"discounts-count\",\n      showFilter: true,\n      useGriddleStyles: false,\n      rowMetadata: customRowMetaData,\n      filteredFields: filteredFields,\n      columns: filteredFields,\n      noDataMessage: noDataMessage,\n      onRowClick: editRow,\n      columnMetadata: customColumnMetadata,\n      externalLoadingComponent: Loading\n    };\n  },\n\n  instance() {\n    const instance = Template.instance();\n    return instance;\n  },\n  // schema for forms\n  discountSchema() {\n    return DiscountSchema;\n  },\n\n  discountCode() {\n    const instance = Template.instance();\n    const id = instance.state.get(\"editingId\");\n    const discount = DiscountCodes.findOne(id) || {};\n    return discount;\n  }\n});\n\n//\n// on submit lets clear the form state\n//\nTemplate.customDiscountCodes.events({\n  \"submit #discount-codes-update-form\": function () {\n    const instance = Template.instance();\n    instance.state.set({\n      isEditing: false,\n      editingId: null\n    });\n  },\n  \"submit #discount-codes-insert-form\": function () {\n    const instance = Template.instance();\n    instance.state.set({\n      isEditing: true,\n      editingId: null\n    });\n  },\n  \"click .cancel, .discount-codes-grid-row .active\": function () {\n    instance = Template.instance();\n    // remove active rows from grid\n    instance.state.set({\n      isEditing: false,\n      editingId: null\n    });\n    // ugly hack\n    $(\".discount-codes-grid-row\").removeClass(\"active\");\n  },\n  \"click .delete\": function () {\n    const confirmTitle = i18next.t(\"admin.settings.confirmRateDelete\");\n    const confirmButtonText = i18next.t(\"app.delete\");\n    const instance = Template.instance();\n    const id = instance.state.get(\"editingId\");\n    // confirm delete\n    Alerts.alert({\n      title: confirmTitle,\n      type: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: confirmButtonText\n    }, (isConfirm) => {\n      if (isConfirm) {\n        if (id) {\n          Meteor.call(\"discounts/deleteRate\", id);\n          instance.state.set({\n            isEditing: false,\n            editingId: null\n          });\n        }\n      }\n    });\n  },\n  \"click .discount-codes-grid-row\": function (event) {\n    // toggle all rows off, then add our active row\n    $(\".discount-codes-grid-row\").removeClass(\"active\");\n    Template.instance().$(event.currentTarget).addClass(\"active\");\n  }\n});\n\n//\n// Hooks for update and insert forms\n//\nAutoForm.hooks({\n  \"discount-codes-update-form\": {\n    onSuccess: function () {\n      return Alerts.toast(i18next.t(\"admin.settings.settingsSaveSuccess\"),\n        \"success\");\n    },\n    onError: function (operation, error) {\n      return Alerts.toast(\n        `${i18next.t(\"admin.settings.settingsSaveFailure\")} ${error}`, \"error\"\n      );\n    }\n  },\n  \"discount-codes-insert-form\": {\n    onSuccess: function () {\n      return Alerts.toast(i18next.t(\"admin.settings.settingsSaveSuccess\"), \"success\");\n    },\n    onError: function (operation, error) {\n      return Alerts.toast(\n        `${i18next.t(\"admin.settings.settingsSaveFailure\")} ${error}`, \"error\"\n      );\n    }\n  }\n});\n","import { Mongo } from \"meteor/mongo\";\nimport { DiscountCodes as DiscountSchema } from \"../../lib/collections/schemas\";\n\n\n/**\n * Client side collections\n */\nexport const DiscountCodes = new Mongo.Collection(\"DiscountCodes\");\n// attach discount code specific schema\nDiscountCodes.attachSchema(DiscountSchema);\n","import \"./collections/codes\";\nimport \"./templates\";\n","import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\nimport { Discounts } from \"/imports/plugins/core/discounts/lib/collections/schemas\";\n\n/**\n* Discount Codes Schema\n* @type {Object}\n* @desc schema that extends discount schema\n* with properties for discount codes.\n*/\nexport const DiscountCodes = new SimpleSchema([\n  Discounts, {\n    \"discountMethod\": {\n      label: \"Method\",\n      type: String,\n      defaultValue: \"code\"\n    },\n    \"calculation.method\": {\n      type: String,\n      index: 1,\n      defaultValue: \"discount\"\n    },\n    \"code\": {\n      label: \"Discount Code\",\n      type: String\n    },\n    \"conditions.redemptionLimit\": {\n      type: Number,\n      label: \"Total Limit\",\n      optional: true\n    },\n    \"conditions.accountLimit\": {\n      type: Number,\n      label: \"Account Limit\",\n      defaultValue: 1,\n      optional: true\n    }\n  }\n]);\n","import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\nimport { DiscountsPackageConfig } from \"/imports/plugins/core/discounts/lib/collections/schemas\";\n\n/**\n* Discount Codes Package Config Schema\n* @type {Object}\n* @desc schema that extends discount schema\n* with properties for discount rates.\n*/\nexport const DiscountCodesPackageConfig = new SimpleSchema([\n  DiscountsPackageConfig, {\n    \"settings.codes\": {\n      type: Object,\n      optional: true\n    },\n    \"settings.codes.enabled\": {\n      type: Boolean,\n      optional: true,\n      defaultValue: false\n    }\n  }\n]);\n","export * from \"./config\";\nexport * from \"./codes\";\n","import { Template } from \"meteor/templating\";\nimport { ReactiveDict } from \"meteor/reactive-dict\";\nimport { AutoForm } from \"meteor/aldeed:autoform\";\nimport { DiscountRates } from \"../collections/rates\";\nimport { DiscountRates as DiscountRateSchema } from \"../../lib/collections/schemas/rates\";\nimport { i18next } from \"/client/api\";\nimport MeteorGriddle from \"/imports/plugins/core/ui-grid/client/griddle\";\nimport { IconButton, Loading } from \"/imports/plugins/core/ui/client/components\";\n\n/* eslint no-shadow: [\"error\", { \"allow\": [\"options\"] }] */\n/* eslint no-unused-vars: [\"error\", { \"argsIgnorePattern\": \"[oO]ptions\" }] */\n\nTemplate.customDiscountRates.onCreated(function () {\n  this.autorun(() => {\n    this.subscribe(\"DiscountRates\");\n  });\n\n  this.state = new ReactiveDict();\n  this.state.setDefault({\n    isEditing: false,\n    editingId: null\n  });\n});\n\nTemplate.customDiscountRates.helpers({\n  editButton() {\n    const instance = Template.instance();\n    const state = instance.state;\n    const isEditing = state.equals(\"isEditing\", true);\n    let editingId = state.get(\"editingId\");\n    // toggle edit state\n    if (!isEditing) {\n      editingId = null;\n    }\n    // return icon\n    return {\n      component: IconButton,\n      icon: \"fa fa-plus\",\n      onIcon: \"fa fa-pencil\",\n      toggle: true,\n      toggleOn: isEditing,\n      style: {\n        position: \"relative\",\n        top: \"-25px\",\n        right: \"8px\"\n      },\n      onClick() {\n        // remove active rows from grid\n        $(\".discount-rates-grid-row\").removeClass(\"active\");\n        return state.set({\n          isEditing: !isEditing,\n          editingId: editingId\n        });\n      }\n    };\n  },\n  discountGrid() {\n    const filteredFields = [\"label\", \"discountMethod\", \"discount\"];\n    const noDataMessage = i18next.t(\"admin.settings.noCustomDiscountRatesFound\");\n    const instance = Template.instance();\n\n    //\n    // helper to get and select row from griddle\n    // into blaze for to select discount row for editing\n    //\n    function editRow(options) {\n      const currentId = instance.state.get(\"editingId\");\n      // isEditing is discount rate object\n      instance.state.set(\"isEditing\", options.props.data);\n      instance.state.set(\"editingId\", options.props.data._id);\n      // toggle edit mode clicking on same row\n      if (currentId === options.props.data._id) {\n        instance.state.set(\"isEditing\", null);\n        instance.state.set(\"editingId\", null);\n      }\n    }\n\n    //\n    // helper adds a class to every grid row\n    //\n    const customRowMetaData = {\n      bodyCssClassName: () =>  {\n        return \"discount-rates-grid-row\";\n      }\n    };\n\n    // add i18n handling to headers\n    const customColumnMetadata = [];\n    filteredFields.forEach(function (field) {\n      const columnMeta = {\n        columnName: field,\n        displayName: i18next.t(`admin.discountGrid.${field}`)\n      };\n      customColumnMetadata.push(columnMeta);\n    });\n\n    // return discount Grid\n    return {\n      component: MeteorGriddle,\n      publication: \"DiscountRates\",\n      collection: DiscountRates,\n      matchingResultsCount: \"discounts-count\",\n      showFilter: true,\n      useGriddleStyles: false,\n      rowMetadata: customRowMetaData,\n      filteredFields: filteredFields,\n      columns: filteredFields,\n      noDataMessage: noDataMessage,\n      onRowClick: editRow,\n      columnMetadata: customColumnMetadata,\n      externalLoadingComponent: Loading\n    };\n  },\n\n  instance() {\n    const instance = Template.instance();\n    return instance;\n  },\n  // schema for forms\n  discountRateSchema() {\n    return DiscountRateSchema;\n  },\n  discountRate() {\n    const instance = Template.instance();\n    const id = instance.state.get(\"editingId\");\n    const discount = DiscountRates.findOne(id) || {};\n    return discount;\n  }\n});\n\n//\n// on submit lets clear the form state\n//\nTemplate.customDiscountRates.events({\n  \"submit #discount-rates-update-form\": function () {\n    const instance = Template.instance();\n    instance.state.set({\n      isEditing: false,\n      editingId: null\n    });\n  },\n  \"submit #discount-rates-insert-form\": function () {\n    const instance = Template.instance();\n    instance.state.set({\n      isEditing: true,\n      editingId: null\n    });\n  },\n  \"click .cancel, .discount-rates-grid-row.active\": function () {\n    instance = Template.instance();\n    // remove active rows from grid\n    instance.state.set({\n      isEditing: false,\n      editingId: null\n    });\n    // ugly hack\n    $(\".discount-rates-grid-row\").removeClass(\"active\");\n  },\n  \"click .delete\": function () {\n    const confirmTitle = i18next.t(\"admin.settings.confirmRateDelete\");\n    const confirmButtonText = i18next.t(\"app.delete\");\n    const instance = Template.instance();\n    const id = instance.state.get(\"editingId\");\n    // confirm delete\n    Alerts.alert({\n      title: confirmTitle,\n      type: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: confirmButtonText\n    }, (isConfirm) => {\n      if (isConfirm) {\n        if (id) {\n          Meteor.call(\"discounts/deleteRate\", id);\n          instance.state.set({\n            isEditing: false,\n            editingId: null\n          });\n        }\n      }\n    });\n  },\n  \"click .discount-rates-grid-row\": function (event) {\n    // toggle all rows off, then add our active row\n    $(\".discount-rates-grid-row\").removeClass(\"active\");\n    Template.instance().$(event.currentTarget).addClass(\"active\");\n  }\n});\n\n\nAutoForm.hooks({\n  \"discount-rates-update-form\": {\n    onSuccess: function () {\n      return Alerts.toast(i18next.t(\"admin.settings.settingsSaveSuccess\"),\n        \"success\");\n    },\n    onError: function (operation, error) {\n      return Alerts.toast(\n        `${i18next.t(\"admin.settings.settingsSaveFailure\")} ${error}`, \"error\"\n      );\n    }\n  }\n});\n\nAutoForm.hooks({\n  \"discount-rates-insert-form\": {\n    onSuccess: function () {\n      return Alerts.toast(i18next.t(\"admin.settings.settingsSaveSuccess\"),\n        \"success\");\n    },\n    onError: function (operation, error) {\n      return Alerts.toast(\n        `${i18next.t(\"admin.settings.settingsSaveFailure\")} ${error}`, \"error\"\n      );\n    }\n  }\n});\n","import { Mongo } from \"meteor/mongo\";\nimport { DiscountRates as DiscountSchema } from \"../../lib/collections/schemas\";\n\n/**\n * Client side collections\n */\nexport const DiscountRates = new Mongo.Collection(\"DiscountRates\");\n// attach discount code specific schema\nDiscountRates.attachSchema(DiscountSchema);\n","import \"./collections/rates.js\";\nimport \"./settings/rates.html\";\nimport \"./settings/rates.js\";\n","import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\nimport { DiscountsPackageConfig } from \"/imports/plugins/core/discounts/lib/collections/schemas\";\n\n/**\n* Discount Rates Package Config Schema\n* @type {Object}\n* @desc schema that extends discount schema\n* with properties for discount rates.\n*/\nexport const DiscountRatesPackageConfig = new SimpleSchema([\n  DiscountsPackageConfig, {\n    \"settings.rates\": {\n      type: Object,\n      optional: true\n    },\n    \"settings.rates.enabled\": {\n      type: Boolean,\n      optional: true,\n      defaultValue: false\n    }\n  }\n]);\n","export * from \"./config\";\nexport * from \"./rates\";\n","import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\nimport { Discounts } from \"/imports/plugins/core/discounts/lib/collections/schemas/discounts\";\n\n/**\n* Discount Codes Schema\n* @type {Object}\n* @desc schema that extends discount schema\n* with properties for discount codes.\n*/\nexport const DiscountRates = new SimpleSchema([\n  Discounts, {\n    discountMethod: {\n      label: \"Calculation Method\",\n      type: String,\n      defaultValue: \"rate\"\n    }\n  }\n]);\n","import { Template } from \"meteor/templating\";\nimport Launchdock from \"../../lib/launchdock\";\n\n/**\n * Checks to see if we have a valid connection to ld,\n * and currently assumes you don't have a launchdock account\n * rather than being some kind of status indicator (really should be both)\n */\n\nTemplate.connectDashboard.onCreated(function () {\n  this.subscribe(\"launchdock-auth\");\n});\n\nTemplate.connectDashboard.helpers({\n  ldConnection() {\n    return Launchdock.connect();\n  }\n});\n\n\nTemplate.connectSettings.onCreated(function () {\n  this.subscribe(\"launchdock-auth\");\n});\n\nTemplate.connectSettings.helpers({\n  ldConnection() {\n    return Launchdock.connect();\n  }\n});\n","import moment from \"moment\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Template } from \"meteor/templating\";\nimport { Mongo } from \"meteor/mongo\";\nimport { ReactiveVar } from \"meteor/reactive-var\";\nimport { ReactiveStripe } from \"meteor/jeremy:stripe\";\nimport { Packages } from \"/lib/collections\";\nimport Launchdock from \"../../lib/launchdock\";\n\nTemplate.launchdockDashboard.onCreated(function () {\n  // create and return connection\n  const launchdock = Launchdock.connect();\n\n  // remote users collection (only contains current user)\n  this.LaunchdockUsers = new Mongo.Collection(\"users\", {\n    connection: launchdock\n  });\n\n  // remote stacks collection (only contains current stack)\n  this.LaunchdockStacks = new Mongo.Collection(\"stacks\", {\n    connection: launchdock\n  });\n\n  // remote settings collection (only contains Stripe public key)\n  this.LaunchdockSettings = new Mongo.Collection(\"settings\", {\n    connection: launchdock\n  });\n\n  const user = Meteor.user();\n\n  // subscribe to user/stack details\n  this.ldStackSub = launchdock.subscribe(\"reaction-account-info\", user.services.launchdock.stackId);\n\n  // Stripe public key for Launchdock\n  launchdock.subscribe(\"launchdock-stripe-public-key\");\n\n  // setup Stripe client libs\n  this.autorun(() => {\n    this.stripeKey = new ReactiveVar();\n    const s = this.LaunchdockSettings.findOne();\n\n    if (s) {\n      const key = s.stripeLivePublishableKey || s.stripeTestPublishableKey;\n\n      // store key in ReactiveVar on template instance\n      this.stripeKey.set(key);\n\n      // load client side Stripe libs\n      ReactiveStripe.load(key);\n    }\n  });\n});\n\n\nTemplate.launchdockDashboard.helpers({\n\n  packageData() {\n    return Packages.findOne({\n      name: \"reaction-connect\"\n    });\n  },\n\n  launchdockDataReady() {\n    return Template.instance().ldStackSub.ready();\n  },\n\n  launchdockStack() {\n    return Template.instance().LaunchdockStacks.findOne();\n  },\n\n  trial() {\n    const stack = Template.instance().LaunchdockStacks.findOne();\n    // calculate the trial end date and days remaining\n    let ends;\n    let daysRemaining;\n    let daySuffix;\n\n    if (stack) {\n      const startDate = stack.createdAt;\n      ends = new Date();\n      ends.setDate(startDate.getDate() + 30);\n      const now = new Date();\n      const msPerDay = 24 * 60 * 60 * 1000;\n      const timeLeft = ends.getTime() - now.getTime();\n      const daysLeft = timeLeft / msPerDay;\n      daysRemaining = Math.floor(daysLeft);\n      daySuffix = daysRemaining === 1 ? \" day\" : \" days\";\n    }\n    return {\n      ends: moment(ends).format(\"MMMM Do YYYY\"),\n      daysRemaining: daysRemaining + daySuffix\n    };\n  },\n\n  shopCreatedAt() {\n    const stack = Template.instance().LaunchdockStacks.findOne();\n    return stack ? moment(stack.createdAt).format(\"MMMM Do YYYY, h:mma\") : \"\";\n  },\n\n  isSubscribed() {\n    const user = Template.instance().LaunchdockUsers.findOne();\n    return !!(user && user.subscription && user.subscription.status === \"active\");\n  },\n\n  plan() {\n    const user = Template.instance().LaunchdockUsers.findOne();\n    return user && user.subscription ? user.subscription.plan.name : null;\n  },\n\n  nextPayment() {\n    const user = Template.instance().LaunchdockUsers.findOne();\n    if (user && user.subscription) {\n      const nextPayment = user.subscription.next_payment;\n      return moment(nextPayment).format(\"LL\");\n    }\n    return null;\n  },\n\n  yearlyPaymentDate() {\n    const today = new Date();\n    const nextDue = new Date();\n    nextDue.setDate(today.getDate() + 365);\n\n    return moment(nextDue).format(\"LL\");\n  }\n});\n\n\nTemplate.launchdockDashboard.events({\n  // open settings panel\n  \"click [data-event-action=showLaunchdockSettings]\"() {\n    Reaction.showActionView({\n      label: \"SSL Settings\",\n      template: \"connectSettings\",\n      data: this\n    });\n  },\n\n  // change UI based on which subscription option is chosen\n  \"change input[name='plan-choice']\"(e, t) {\n    const plan = t.$(\"input[name='plan-choice']:checked\").val();\n\n    let dueToday;\n    let term;\n\n    if (plan === \"Yearly\") {\n      dueToday = \"$540 for 12 months\";\n      term = dueToday;\n      daysFromNow = 365;\n    } else {\n      dueToday = \"$50 for first month\";\n      term = \"$50 per month\";\n      daysFromNow = 30;\n    }\n\n    const today = new Date();\n    const nextDue = new Date();\n    nextDue.setDate(today.getDate() + daysFromNow);\n\n    t.$(\".price\").text(dueToday);\n    t.$(\".term\").text(term);\n    t.$(\".next-due\").text(moment(nextDue).format(\"LL\"));\n  },\n\n  // trigger subscription checkout\n  \"click .checkout\"(e, t) {\n    e.preventDefault();\n\n    const stripeKey = Template.instance().stripeKey.get();\n\n    if (!stripeKey) {\n      Alerts.add(\"Unable to process a payment. Please contact support.\", \"danger\");\n    }\n\n    const plan = t.$(\"input[name='plan-choice']:checked\").val();\n\n    let price;\n\n    if (plan === \"Yearly\") {\n      price = 54000;\n    } else {\n      price = 5000;\n    }\n\n    const user = Meteor.user();\n\n    const charge = StripeCheckout.configure({\n      key: stripeKey,\n      image: \"https://reactioncommerce.com/images/reaction-logo.png\",\n      locale: \"auto\",\n      email: user.emails[0].address,\n      panelLabel: `Subscribe (${plan.toLowerCase()})`,\n      token: (token) => {\n        const options = {\n          cardToken: token.id,\n          plan: plan.toLowerCase(),\n          stackId: user.services.launchdock.stackId\n        };\n\n        const launchdock = Launchdock.connect();\n\n        launchdock.call(\"stripe/createCustomerAndSubscribe\", options, (err) => {\n          if (err) {\n            Alerts.add(\"Unable to process a payment. Please contact support.\", \"danger\");\n          } else {\n            Alerts.add(\"Thank you for your payment!\", \"success\", {\n              autoHide: true\n            });\n          }\n        });\n      }\n    });\n\n    charge.open({\n      name: \"Reaction Commerce\",\n      description: `${plan} Subscription`,\n      amount: price\n    });\n  }\n});\n","import { Template } from \"meteor/templating\";\nimport { Packages } from \"/lib/collections\";\n\n\nTemplate.launchdockSettings.onCreated(function () {\n  this.subscribe(\"launchdock-auth\");\n});\n\n\nTemplate.launchdockSettings.helpers({\n  packageData() {\n    return Packages.findOne({\n      name: \"reaction-connect\"\n    });\n  }\n});\n\n\nTemplate.launchdockSettings.events({\n  \"submit #launchdock-ssl-update-form\"(event, tmpl) {\n    event.preventDefault();\n\n    const opts = {\n      domain: tmpl.find(\"input[name='ssl-domain']\").value,\n      privateKey: tmpl.find(\"textarea[name='ssl-private-key']\").value,\n      publicCert: tmpl.find(\"textarea[name='ssl-certificate']\").value\n    };\n\n    Meteor.call(\"launchdock/setCustomSsl\", opts, (err) => {\n      if (err) {\n        Alerts.removeSeen();\n        Alerts.add(\"SSL settings update failed. \" + err.reason, \"danger\");\n        return;\n      }\n      Alerts.add(\"SSL settings saved. Connecting to Launckdock...\", \"success\", {\n        autoHide: true\n      });\n    });\n  }\n});\n","import \"../lib/collections\";\n\nimport \"./templates/connect.html\";\nimport \"./templates/connect.js\";\nimport \"./templates/dashboard.html\";\nimport \"./templates/dashboard.less\";\nimport \"./templates/dashboard.js\";\nimport \"./templates/settings.html\";\nimport \"./templates/settings.js\";\n","import * as Schemas from \"/lib/collections/schemas\";\n\nSchemas.LaunchdockPackageConfig = new SimpleSchema([\n  Schemas.PackageConfig, {\n    \"settings.ssl.domain\": {\n      type: String,\n      label: \"Custom Domain\"\n    },\n    \"settings.ssl.privateKey\": {\n      type: String,\n      label: \"SSL Private Key\"\n    },\n    \"settings.ssl.certificate\": {\n      type: String,\n      label: \"SSL Certificate\"\n    }\n  }\n]);\n","import { Meteor } from \"meteor/meteor\";\nimport { DDP } from \"meteor/ddp\";\n\nconst Launchdock = {\n  /*\n  * Create authenticated DDP connection to Launchdock\n  */\n  connect() {\n    let url;\n    let username;\n    let pw;\n\n    /*\n    * client login info\n    */\n    if (Meteor.isClient) {\n      const user = Meteor.user();\n\n      if (!user || !user.services || !user.services.launchdock) {\n        return null;\n      }\n\n      url = user.services.launchdock.url;\n      username = user.services.launchdock.username;\n      pw = user.services.launchdock.auth;\n    }\n\n    /*\n    * server login info\n    */\n    if (Meteor.isServer) {\n      url = process.env.LAUNCHDOCK_URL;\n      username = process.env.LAUNCHDOCK_USERNAME;\n      pw = process.env.LAUNCHDOCK_AUTH;\n    }\n\n    if (!url || !username || !pw) {\n      return null;\n    }\n\n    // create and return connection\n    const launchdock = DDP.connect(url);\n    DDP.loginWithPassword(launchdock, { username: username }, pw);\n\n    return launchdock;\n  }\n};\n\nexport default Launchdock;\n","import { Template } from \"meteor/templating\";\nimport { NotificationRouteContainer } from \"../containers\";\n\nTemplate.notificationRoute.helpers({\n  notificationRoute() {\n    return {\n      component: NotificationRouteContainer\n    };\n  }\n});\n","export { default as NotificationDropdown } from \"./notificationDropdown\";\nexport { default as NotificationComponent } from \"./notificationComponent\";\nexport { default as NotificationRoute } from \"./notificationRoute\";\n","import React, { Component, PropTypes } from \"react\";\nimport NotificationDropdown from \"./notificationDropdown.js\";\nimport \"../styles/main.less\";\nimport \"../styles/dropdown.css\";\n\nclass NotificationComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleBtn = this.handleBtn.bind(this);\n  }\n\n  handleBtn(unread) {\n    if (unread) {\n      return (\n        <button className=\"btn btn-default notify-btn rui button flat\">\n            <i className=\"rui fa fa-bell\" />\n            <span className=\"badge notify-icon badge-red\">{ unread }</span>\n        </button>\n      );\n    }\n    return (\n      <button className=\"btn btn-default rui button flat\">\n          <i className=\"rui fa fa-bell\" />\n      </button>\n    );\n  }\n\n  render() {\n    const { notificationList, handleDelete, unread, markOneAsRead, markAllAsRead } = this.props;\n    return (\n      <div className=\"dropdown\">\n        <div className=\"notification-icon\" data-toggle=\"dropdown\">\n          { this.handleBtn(unread) }\n        </div>\n        <div className=\"notify-drop dropdown-menu\">\n          <NotificationDropdown\n            notificationList={notificationList}\n            unread={unread}\n            handleDelete={handleDelete}\n            markAllAsRead={markAllAsRead}\n            markOneAsRead={markOneAsRead}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nNotificationComponent.propTypes = {\n  handleDelete: PropTypes.func,\n  markAllAsRead: PropTypes.func,\n  markOneAsRead: PropTypes.func,\n  notificationList: PropTypes.array,\n  unread: PropTypes.number\n};\n\nexport default NotificationComponent;\n","import React, { Component, PropTypes } from \"react\";\nimport moment from \"moment\";\nimport { Reaction } from \"/client/api\";\n\nclass NotificationDropdown extends Component {\n  constructor(props) {\n    super(props);\n    this.prefix = Reaction.getShopPrefix();\n    this.handleNoNotifications = this.handleNoNotifications.bind(this);\n    this.renderDropdownHead = this.renderDropdownHead.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleNoNotifications(notifyArr) {\n    if (notifyArr.length <= 0) {\n      return (\n          <li className=\"notification\">\n              <div className=\"media\">\n                 <div className=\"media-body\">\n                    <strong className=\"notification-title\" data-i18n=\"notifications.body.noNotifications\">No notifications yet</strong>\n                 </div>\n              </div>\n          </li>\n      );\n    }\n    return null;\n  }\n\n  handleClick(notify) {\n    if (notify.type === \"forAdmin\") {\n      const actionViewData = Reaction.Apps({\n        name: \"reaction-orders\",\n        provides: \"dashboard\"\n      });\n      Reaction.showActionView(actionViewData);\n    } else {\n      Reaction.Router.go(notify.url);\n    }\n\n    const { markOneAsRead } = this.props;\n    return markOneAsRead(notify._id);\n  }\n\n  renderDropdownHead() {\n    const { notificationList, unread, markAllAsRead } = this.props;\n    return (\n        <div className=\"dropdown-toolbar\">\n            <div className=\"dropdown-toolbar-actions\">\n                <a onClick={() => {\n                  markAllAsRead(notificationList);\n                }}\n                  data-i18n=\"notifications.body.markAllAsRead\"\n                > Mark all as read</a>\n            </div>\n            <h3 className=\"dropdown-toolbar-title\"><span data-i18n=\"notifications.body.recent\">Recent</span> ({unread})</h3>\n        </div>\n    );\n  }\n\n  render() {\n    const { notificationList } = this.props;\n    const prefix = this.prefix + \"/notifications\";\n    return (\n        <div className=\"notify-bar\">\n            { this.renderDropdownHead() }\n             <ul className=\"dropdown-notify notifications\">\n                { this.handleNoNotifications(notificationList) }\n                { notificationList.map((notify, key) => {\n                  const timeNow = moment(notify.timeSent).fromNow();\n                  const read = `notification ${notify.status}`;\n                  const i18n = `notifications.messages.${notify.type}`;\n                  return (\n                        <li className={read} key={key}>\n                            <a onClick={() => {\n                              this.handleClick(notify);\n                            }}\n                            >\n                                <div className=\"media\">\n                                    <div className=\"media-body\">\n                                    <strong className=\"notification-title\" data-i18n={i18n}>{notify.message}</strong>\n                                    <div className=\"notification-meta\">\n                                        <small className=\"timestamp\">{timeNow}</small>\n                                    </div>\n                                    </div>\n                                </div>\n                            </a>\n                        </li>\n                  );\n                })}\n             </ul>\n             <div className=\"dropdown-footer text-center\">\n                 <a href={prefix} data-i18n=\"notifications.body.viewAll\">View All</a>\n             </div>\n        </div>\n    );\n  }\n}\n\nNotificationDropdown.propTypes = {\n  markAllAsRead: PropTypes.func.isRequired,\n  markOneAsRead: PropTypes.func.isRequired,\n  notificationList: PropTypes.array.isRequired,\n  unread: PropTypes.number.isRequired\n};\n\nexport default NotificationDropdown;\n","import React, { Component, PropTypes } from \"react\";\nimport moment from \"moment\";\n\n\nclass NotificationRoute extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNoNotifications = this.handleNoNotifications.bind(this);\n    this.renderDropdownHead = this.renderDropdownHead.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleNoNotifications(notifyArr) {\n    if (notifyArr.length <= 0) {\n      return (\n          <li className=\"notification\">\n              <div className=\"media\">\n                 <div className=\"media-body\">\n                    <strong className=\"notification-title\" data-i18n=\"notifications.body.noNotifcations\">No notifications yet</strong>\n                 </div>\n              </div>\n          </li>\n      );\n    }\n    return null;\n  }\n\n  handleClick(notify) {\n    const { markOneAsRead } = this.props;\n    return markOneAsRead(notify._id);\n  }\n\n  renderDropdownHead() {\n    const { notificationList, unread, markAllAsRead } = this.props;\n    return (\n        <div className=\"dropdown-toolbar\">\n            <div className=\"dropdown-toolbar-actions\">\n                <a onClick={() => {\n                  markAllAsRead(notificationList);\n                }}\n                  data-i18n=\"notifications.body.markAllAsRead\"\n                > Mark all as read</a>\n            </div>\n            <h3 className=\"dropdown-toolbar-title\"><span data-i18n=\"notifications.body.recent\">Recent</span> ({unread})</h3>\n        </div>\n    );\n  }\n\n  render() {\n    const { notificationList } = this.props;\n    return (\n        <div className=\"notify-bar\">\n            { this.renderDropdownHead() }\n             <ul className=\"dropdown-notify notifications\">\n                { this.handleNoNotifications(notificationList) }\n                { notificationList.map((notify, key) => {\n                  const timeNow = moment(notify.timeSent).fromNow();\n                  const read = `notification ${notify.status}`;\n                  const i18n = `notifications.messages.${notify.type}`;\n                  return (\n                        <li className={read} key={key}>\n                            <a href={notify.url} onClick={() => {\n                              this.handleClick(notify);\n                            }}\n                            >\n                                <div className=\"media\">\n                                    <div className=\"media-body\">\n                                    <strong className=\"notification-title\" data-i18n={i18n}>{notify.message}</strong>\n                                    <div className=\"notification-meta\">\n                                        <small className=\"timestamp\">{timeNow}</small>\n                                    </div>\n                                    </div>\n                                </div>\n                            </a>\n                        </li>\n                  );\n                })}\n             </ul>\n        </div>\n    );\n  }\n}\n\nNotificationRoute.propTypes = {\n  markAllAsRead: PropTypes.func,\n  markOneAsRead: PropTypes.func,\n  notificationList: PropTypes.array,\n  unread: PropTypes.number\n};\n\nexport default NotificationRoute;\n","export { default as NotificationContainer } from \"./notificationContainer\";\nexport { default as NotificationRouteContainer } from \"./notificationRouteContainer\";\n","import React from \"react\";\nimport { composeWithTracker, merge } from \"/lib/api/compose\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Notifications } from \"/lib/collections\";\nimport { NotificationComponent } from \"../components\";\n\nconst NotificationContainer = (props) => {\n  return (\n     <NotificationComponent {...props}/>\n  );\n};\n\nfunction markAllAsRead(notificationList) {\n  notificationList.map((notify) => {\n    Meteor.call(\"notification/markOneAsRead\", notify._id);\n  });\n}\n\nfunction markOneAsRead(id) {\n  Meteor.call(\"notification/markOneAsRead\", id);\n}\n\nfunction composer(props, onData) {\n  Meteor.subscribe(\"Notification\", Meteor.userId());\n  const notificationList = Notifications.find({}, { sort: { timeSent: -1 }, limit: 5 }).fetch();\n  const unread = Notifications.find({ status: \"unread\" }).count();\n\n  onData(null, {\n    notificationList,\n    unread,\n    markAllAsRead,\n    markOneAsRead\n  });\n}\n\nexport default merge(\n  composeWithTracker(composer)\n)(NotificationContainer);\n","import React from \"react\";\nimport { composeWithTracker, merge } from \"/lib/api/compose\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Notifications } from \"/lib/collections\";\nimport { NotificationRoute } from \"../components\";\n\nconst NotificationRouteContainer = (props) => {\n  return (\n    <NotificationRoute {...props}/>\n  );\n};\n\nfunction markAllAsRead(notificationList) {\n  notificationList.map((notify) => {\n    Meteor.call(\"notification/markOneAsRead\", notify._id);\n  });\n}\n\nfunction markOneAsRead(id) {\n  Meteor.call(\"notification/markOneAsRead\", id);\n}\n\nfunction composer(props, onData) {\n  Meteor.subscribe(\"Notification\", Meteor.userId());\n  const notificationList = Notifications.find({}, { sort: { timeSent: -1 } }).fetch();\n  const unread = Notifications.find({ status: \"unread\" }).count();\n\n  onData(null, {\n    notificationList,\n    unread,\n    markAllAsRead,\n    markOneAsRead\n  });\n}\n\nexport default merge(\n  composeWithTracker(composer)\n)(NotificationRouteContainer);\n","// Styles\nimport \"./styles/main.less\";\nimport \"./templates/notifications.html\";\nimport \"./templates/notifications.js\";\n","/* eslint camelcase: 0 */\nimport { Meteor } from \"meteor/meteor\";\nimport { Reaction, Logger } from \"/client/api\";\nimport { getCardType } from \"/client/modules/core/helpers/globals\";\nimport { Cart, Shops, Packages } from \"/lib/collections\";\nimport { AutoForm } from \"meteor/aldeed:autoform\";\nimport { AuthNetPayment } from \"../../lib/collections/schemas\";\nimport { AuthNet } from \"../api\";\n\n\nimport \"./authnet.html\";\n\nfunction uiEnd(tpl, buttonText) {\n  tpl.$(\":input\").removeAttr(\"disabled\");\n  tpl.$(\"#btn-complete-order\").text(buttonText);\n  tpl.$(\"#btn-processing\").addClass(\"hidden\");\n}\n\nfunction paymentAlert(errorMessage) {\n  return $(\".alert\").removeClass(\"hidden\").text(errorMessage);\n}\n\nfunction hidePaymentAlert() {\n  $(\".alert\").addClass(\"hidden\").text(\"\");\n}\n\nfunction handleAuthNetSubmitError(error) {\n  // TODO - this error handling needs to be reworked for the Authorize.net API\n  paymentAlert(error);\n  Logger.fatal(error);\n}\n\n// used to track asynchronous submitting for UI changes\nlet submitting = false;\n\nTemplate.authnetPaymentForm.helpers({\n  AuthNetPayment() {\n    return AuthNetPayment;\n  }\n});\n\nAutoForm.addHooks(\"authnet-payment-form\", {\n  onSubmit(doc) {\n    // Process form (pre-validated by autoform)\n    submitting = true;\n    const tpl = this.template;\n    // regEx in the schema ensures that there will be exactly two names with one space between\n    const payerNamePieces = doc.payerName.split(\" \");\n    const form = {\n      first_name: payerNamePieces[0],\n      last_name: payerNamePieces[1],\n      number: doc.cardNumber,\n      expire_date: doc.expireMonth.toString() + doc.expireYear.slice(-2),\n      cvv2: doc.cvv,\n      type: getCardType(doc.cardNumber)\n    };\n\n    // Reaction only stores type and 4 digits\n    const storedCard = form.type.charAt(0).toUpperCase() + form.type.slice(1) + \" \" + doc.cardNumber.slice(-4);\n\n    hidePaymentAlert();\n\n    const cardInfo = {\n      cardNumber: doc.cardNumber,\n      expirationYear: doc.expireYear,\n      expirationMonth: doc.expireMonth,\n      cvv2: doc.cvv\n    };\n    const paymentInfo = {\n      total: Cart.findOne().cartTotal(),\n      currency: Shops.findOne().currency\n    };\n\n    // Submit for processing\n    AuthNet.authorize(cardInfo, paymentInfo, function (error, transaction) {\n      if (error || !transaction) {\n        handleAuthNetSubmitError(error);\n        uiEnd(tpl, \"Resubmit payment\");\n      } else {\n        const normalizedMode = \"authorize\";\n        let normalizedStatus = \"failed\";\n\n        const transId = transaction.transactionId[0].toString();\n        Meteor.subscribe(\"Packages\");\n        const packageData = Packages.findOne({\n          name: \"reaction-auth-net\",\n          shopId: Reaction.getShopId()\n        });\n\n        if (transaction._original.responseCode[0] === \"1\") {\n          normalizedStatus = \"created\";\n        }\n\n        const paymentMethod = {\n          processor: \"AuthNet\",\n          paymentPackageId: packageData._id,\n          paymentSettingsKey: packageData.registry[0].settingsKey,\n          storedCard: storedCard,\n          method: \"credit\",\n          transactionId: transId,\n          amount: +paymentInfo.total,\n          status: normalizedStatus,\n          mode: normalizedMode,\n          createdAt: new Date(),\n          updatedAt: new Date(),\n          transactions: [\n            transaction._original\n          ]\n        };\n        Meteor.call(\"cart/submitPayment\", paymentMethod);\n        uiEnd(tpl, \"Resubmit payment\");\n      }\n    });\n\n    return false;\n  },\n\n  beginSubmit() {\n    this.template.$(\":input\").attr(\"disabled\", true);\n    this.template.$(\"#btn-complete-order\").text(\"Submitting \");\n    return this.template.$(\"#btn-processing\").removeClass(\"hidden\");\n  },\n\n  endSubmit() {\n    // Hide processing UI here if form was not valid\n    if (!submitting) {\n      uiEnd(this.template, \"Complete your order\");\n    }\n  }\n});\n","import { Template } from \"meteor/templating\";\nimport { Packages } from \"/lib/collections\";\nimport { AutoForm } from \"meteor/aldeed:autoform\";\nimport { Reaction, i18next } from \"/client/api\";\nimport { AuthNetPackageConfig } from \"../../lib/collections/schemas\";\n\nimport \"./authnet.html\";\n\nTemplate.authnetSettings.helpers({\n  AuthNetPackageConfig() {\n    return AuthNetPackageConfig;\n  },\n  packageData() {\n    return Packages.findOne({ name: \"reaction-auth-net\", shopId: Reaction.getShopId() });\n  }\n});\n\nAutoForm.hooks({\n  \"authnet-update-form\": {\n    onSuccess: function () {\n      return Alerts.toast(i18next.t(\"admin.settings.saveSuccess\"), \"success\");\n    },\n    onError: function () {\n      return Alerts.toast(`${i18next.t(\"admin.settings.saveFailed\")} ${error}`, \"error\");\n    }\n  }\n});\n","/* eslint camelcase: 0 */\nimport { Meteor } from \"meteor/meteor\";\n\nexport const AuthNet = {\n  authorize(cardInfo, paymentInfo, callback) {\n    Meteor.call(\"authnetSubmit\", \"authorizeTransaction\",\n      cardInfo,\n      paymentInfo,\n      callback\n    );\n  }\n};\n","export { AuthNet } from \"./authnet\";\n","import \"./checkout/authnet\";\nimport \"./settings/authnet\";\n","export * from \"./package\";\n","import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\nimport { PackageConfig } from \"/lib/collections/schemas/registry\";\n/**\n * Meteor.settings.authnet =\n *   mode: false (sandbox)\n *   api_id: \"\"\n *   transaction_key: \"\"\n *   see: https://developer.authnet.com/webapps/developer/docs/api/\n *   see: https://github.com/authnet/rest-api-sdk-nodejs\n */\n\nexport const AuthNetPackageConfig = new SimpleSchema([\n  PackageConfig, {\n    \"settings.mode\": {\n      type: Boolean,\n      defaultValue: false\n    },\n    \"settings.reaction-auth-net.support\": {\n      type: Array,\n      label: \"Payment provider supported methods\"\n    },\n    \"settings.reaction-auth-net.support.$\": {\n      type: String,\n      allowedValues: [\"Authorize\", \"De-authorize\", \"Capture\", \"Refund\"]\n    },\n    \"settings.api_id\": {\n      type: String,\n      label: \"API Login ID\",\n      min: 60\n    },\n    \"settings.transaction_key\": {\n      type: String,\n      label: \"Transaction Key\",\n      min: 60\n    }\n  }\n]);\n\nexport const AuthNetPayment = new SimpleSchema({\n  payerName: {\n    type: String,\n    label: \"Cardholder name\",\n    regEx: /[A-Z][a-zA-Z]*/\n  },\n  cardNumber: {\n    type: String,\n    label: \"Card number\",\n    min: 12,\n    max: 19\n  },\n  expireMonth: {\n    type: String,\n    label: \"Expiration month\",\n    max: 2\n  },\n  expireYear: {\n    type: String,\n    label: \"Expiration year\",\n    max: 4\n  },\n  cvv: {\n    type: String,\n    label: \"CVV\",\n    max: 4\n  }\n});\n\nAuthNetPayment.messages({\n  \"regEx payerName\": \"[label] must include both first and last name\"\n});\n","/* eslint camelcase: 0 */\nimport { Meteor } from \"meteor/meteor\";\nimport { Template } from \"meteor/templating\";\nimport { getCardType } from \"/client/modules/core/helpers/globals\";\nimport { Cart, Shops, Packages } from \"/lib/collections\";\nimport { Braintree } from \"../api/braintree\";\nimport { Reaction } from \"/client/api\";\nimport { BraintreePayment } from \"../../lib/collections/schemas\";\n\nimport \"./braintree.html\";\n\nTemplate.braintreePaymentForm.helpers({\n  BraintreePayment() {\n    return BraintreePayment;\n  }\n});\n\n\nuiEnd = function (template, buttonText) {\n  template.$(\":input\").removeAttr(\"disabled\");\n  template.$(\"#btn-complete-order\").text(buttonText);\n  return template.$(\"#btn-processing\").addClass(\"hidden\");\n};\n\npaymentAlert = function (errorMessage) {\n  return $(\".alert\").removeClass(\"hidden\").text(errorMessage);\n};\n\nhidePaymentAlert = function () {\n  return $(\".alert\").addClass(\"hidden\").text(\"\");\n};\n\nhandleBraintreeSubmitError = function (error) {\n  const serverError = error !== null ? error.message : void 0;\n  if (serverError) {\n    return paymentAlert(\"Server Error \" + serverError);\n  } else if (error) {\n    return paymentAlert(\"Oops! Credit card is invalid. Please check your information and try again.\");\n  }\n};\n\nlet submitting = false;\n\nsubmitToBrainTree = function (doc, template) {\n  submitting = true;\n  hidePaymentAlert();\n  const cardData = {\n    name: doc.payerName,\n    number: doc.cardNumber,\n    expirationMonth: doc.expireMonth,\n    expirationYear: doc.expireYear,\n    cvv2: doc.cvv,\n    type: getCardType(doc.cardNumber)\n  };\n  const cartTotal = Cart.findOne().cartTotal();\n  const currencyCode = Shops.findOne().currency;\n\n  Braintree.authorize(cardData, {\n    total: cartTotal,\n    currency: currencyCode\n  }, function (error, results) {\n    let paymentMethod;\n    submitting = false;\n    if (error) {\n      handleBraintreeSubmitError(error);\n      uiEnd(template, \"Resubmit payment\");\n    } else {\n      if (results.saved === true) {\n        const normalizedStatus = normalizeState(results.response.transaction.status);\n        const normalizedMode = normalizeMode(results.response.transaction.status);\n        Meteor.subscribe(\"Packages\");\n        const packageData = Packages.findOne({\n          name: \"reaction-braintree\",\n          shopId: Reaction.getShopId()\n        });\n\n        const storedCard = results.response.transaction.creditCard.cardType.toUpperCase() + \" \" + results.response.transaction.creditCard.last4;\n        paymentMethod = {\n          processor: \"Braintree\",\n          storedCard: storedCard,\n          paymentPackageId: packageData._id,\n          paymentSettingsKey: packageData.registry[0].settingsKey,\n          method: \"credit\",\n          transactionId: results.response.transaction.id,\n          amount: parseFloat(results.response.transaction.amount),\n          status: normalizedStatus,\n          mode: normalizedMode,\n          createdAt: new Date(),\n          updatedAt: new Date(),\n          transactions: []\n        };\n        paymentMethod.transactions.push(results.response);\n        Meteor.call(\"cart/submitPayment\", paymentMethod);\n      } else {\n        handleBraintreeSubmitError(results.response.message);\n        uiEnd(template, \"Resubmit payment\");\n      }\n    }\n  });\n};\n\nAutoForm.addHooks(\"braintree-payment-form\", {\n  onSubmit: function (doc) {\n    submitToBrainTree(doc, this.template);\n    return false;\n  },\n  beginSubmit: function () {\n    this.template.$(\":input\").attr(\"disabled\", true);\n    this.template.$(\"#btn-complete-order\").text(\"Submitting \");\n    return this.template.$(\"#btn-processing\").removeClass(\"hidden\");\n  },\n  endSubmit: function () {\n    if (!submitting) {\n      return uiEnd(this.template, \"Complete your order\");\n    }\n  }\n});\n\nconst normalizedStates = {\n  authorization_expired: \"expired\",\n  authorized: \"created\",\n  authorizing: \"pending\",\n  settlement_pending: \"pending\",\n  settlement_confirmed: \"settled\",\n  settlement_declined: \"failed\",\n  failed: \"failed\",\n  gateway_rejected: \"failed\",\n  processor_declined: \"failed\",\n  settled: \"settled\",\n  settling: \"pending\",\n  submitted_for_settlement: \"pending\",\n  voided: \"voided\",\n  default: \"failed\"\n};\n\nnormalizeState = function (stateString) {\n  let normalizedState = normalizedStates[stateString];\n  if (typeof normalizedState === \"undefined\") {\n    normalizedState = normalizedStates.default;\n  }\n  return normalizedState;\n};\n\nconst normalizedModes = {\n  settled: \"capture\",\n  settling: \"capture\",\n  submitted_for_settlement: \"capture\",\n  settlement_confirmed: \"capture\",\n  authorized: \"authorize\",\n  authorizing: \"authorize\",\n  default: \"capture\"\n};\n\nnormalizeMode = function (modeString) {\n  let normalizedMode = normalizedModes[modeString];\n  if (typeof normalizedMode === \"undefined\") {\n    normalizedMode = normalizedModes.default;\n  }\n  return normalizedMode;\n};\n","/* eslint no-unused-vars: 0 */\nimport { Template } from \"meteor/templating\";\nimport { Reaction, i18next } from \"/client/api\";\nimport { Packages } from \"/lib/collections\";\nimport { BraintreePackageConfig } from \"../../lib/collections/schemas\";\n\nimport \"./braintree.html\";\n\nTemplate.braintreeSettings.helpers({\n  BraintreePackageConfig: function () {\n    return BraintreePackageConfig;\n  },\n\n  packageData: function () {\n    return Packages.findOne({\n      name: \"reaction-braintree\"\n    });\n  }\n});\n\nTemplate.braintree.helpers({\n  packageData: function () {\n    const packageData = Packages.findOne({\n      name: \"reaction-braintree\"\n    });\n    return packageData;\n  }\n});\n\nTemplate.braintree.events({\n  \"click [data-event-action=showBraintreeSettings]\": function () {\n    Reaction.showActionView();\n  }\n});\n\nAutoForm.hooks({\n  \"braintree-update-form\": {\n    onSuccess: function () {\n      return Alerts.toast(i18next.t(\"admin.settings.saveSuccess\"), \"success\");\n    },\n    onError: function () {\n      return Alerts.toast(`${i18next.t(\"admin.settings.saveFailed\")} ${error}`, \"error\");\n    }\n  }\n});\n","import { Meteor } from \"meteor/meteor\";\n\nexport const Braintree =\n  {// authorize submits a payment authorization to Braintree\n    authorize(cardData, paymentData, callback) {\n      Meteor.call(\"braintreeSubmit\", \"authorize\", cardData, paymentData, callback);\n    }\n  };\n","import \"./checkout/braintree\";\nimport \"./settings/braintree\";\nimport \"./api/braintree\";\n","import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\nimport { PackageConfig } from \"/lib/collections/schemas/registry\";\n\n/**\n *  Meteor.settings.braintree =\n *    mode: false  #sandbox\n *    merchant_id: \"\"\n *    public_key: \"\"\n *    private_key: \"\"\n *  see: https://developers.braintreepayments.com/javascript+node/reference\n */\n\nexport const BraintreePackageConfig = new SimpleSchema([\n  PackageConfig,\n  {\n    \"settings.mode\": {\n      type: Boolean,\n      defaultValue: false\n    },\n    \"settings.merchant_id\": {\n      type: String,\n      label: \"Merchant ID\",\n      optional: false\n    },\n    \"settings.public_key\": {\n      type: String,\n      label: \"Public Key\",\n      optional: false\n    },\n    \"settings.private_key\": {\n      type: String,\n      label: \"Private Key\",\n      optional: false\n    },\n    \"settings.reaction-braintree.support\": {\n      type: Array,\n      label: \"Payment provider supported methods\"\n    },\n    \"settings.reaction-braintree.support.$\": {\n      type: String,\n      allowedValues: [\"Authorize\", \"De-authorize\", \"Capture\", \"Refund\"]\n    }\n  }\n]);\n\nexport const BraintreePayment = new SimpleSchema({\n  payerName: {\n    type: String,\n    label: \"Cardholder name\",\n    regEx: /^\\w+\\s\\w+$/\n  },\n  cardNumber: {\n    type: String,\n    min: 12,\n    max: 19,\n    label: \"Card number\"\n  },\n  expireMonth: {\n    type: String,\n    max: 2,\n    label: \"Expiration month\"\n  },\n  expireYear: {\n    type: String,\n    max: 4,\n    label: \"Expiration year\"\n  },\n  cvv: {\n    type: String,\n    max: 4,\n    label: \"CVV\"\n  }\n});\n\nBraintreePayment.messages({\n  \"regEx payerName\": \"[label] must include both first and last name\"\n});\n","export * from \"./braintree\";\n","/* eslint camelcase: 0 */\nimport { Meteor } from \"meteor/meteor\";\nimport { Template } from \"meteor/templating\";\nimport { AutoForm } from \"meteor/aldeed:autoform\";\nimport { getCardType } from \"/client/modules/core/helpers/globals\";\nimport { Reaction } from \"/client/api\";\nimport { Cart, Shops, Packages } from \"/lib/collections\";\nimport { Stripe } from \"../../lib/api\";\nimport { StripePayment } from \"../../lib/collections/schemas\";\n\nimport \"./stripe.html\";\n\nlet submitting = false;\n\n//\n// local helpers\n//\nfunction uiEnd(template, buttonText) {\n  template.$(\":input\").removeAttr(\"disabled\");\n  template.$(\"#btn-complete-order\").text(buttonText);\n  return template.$(\"#btn-processing\").addClass(\"hidden\");\n}\n\nfunction paymentAlert(errorMessage) {\n  return $(\".alert\").removeClass(\"hidden\").text(errorMessage);\n}\n\nfunction hidePaymentAlert() {\n  return $(\".alert\").addClass(\"hidden\").text(\"\");\n}\n\nfunction handleStripeSubmitError(error) {\n  const singleError = error;\n  const serverError = error ? error.message : null;\n  if (serverError) {\n    return paymentAlert(\"Oops! Credit card is invalid. Please check your information and try again.\");\n  } else if (singleError) {\n    return paymentAlert(\"Oops! \" + singleError);\n  }\n}\n\n//\n// Template helpers\n//\nTemplate.stripePaymentForm.helpers({\n  StripePayment() {\n    return StripePayment;\n  }\n});\n\n//\n// autoform handling\n//\nAutoForm.addHooks(\"stripe-payment-form\", {\n  onSubmit(doc) {\n    submitting = true;\n    const template = this.template;\n    hidePaymentAlert();\n    const cardData = {\n      name: doc.payerName,\n      number: doc.cardNumber,\n      expire_month: doc.expireMonth,\n      expire_year: doc.expireYear,\n      cvv2: doc.cvv,\n      type: getCardType(doc.cardNumber)\n    };\n    const storedCard = cardData.type.charAt(0).toUpperCase() + cardData.type.slice(1) + \" \" + doc.cardNumber.slice(-4);\n    Stripe.authorize(cardData, {\n      total: Cart.findOne().cartTotal(),\n      currency: Shops.findOne().currency\n    }, function (error, transaction) {\n      submitting = false;\n      if (error) {\n        handleStripeSubmitError(error);\n        uiEnd(template, \"Resubmit payment\");\n      } else {\n        if (transaction.saved === true) {\n          const normalizedStatus = (function () {\n            switch (false) {\n              case !(!transaction.response.captured && !transaction.response.failure_code):\n                return \"created\";\n              case !(transaction.response.captured === true && !transaction.response.failure_code):\n                return \"settled\";\n              case !transaction.response.failure_code:\n                return \"failed\";\n              default:\n                return \"failed\";\n            }\n          })();\n          const normalizedMode = (function () {\n            switch (false) {\n              case !(!transaction.response.captured && !transaction.response.failure_code):\n                return \"authorize\";\n              case !transaction.response.captured:\n                return \"capture\";\n              default:\n                return \"capture\";\n            }\n          })();\n          Meteor.subscribe(\"Packages\");\n          const packageData = Packages.findOne({\n            name: \"reaction-stripe\",\n            shopId: Reaction.getShopId()\n          });\n\n          submitting = false;\n          paymentMethod = {\n            processor: \"Stripe\",\n            storedCard: storedCard,\n            method: \"credit\",\n            paymentPackageId: packageData._id,\n            paymentSettingsKey: packageData.registry[0].settingsKey,\n            transactionId: transaction.response.id,\n            amount: transaction.response.amount * 0.01,\n            status: normalizedStatus,\n            mode: normalizedMode,\n            createdAt: new Date(transaction.response.created),\n            transactions: []\n          };\n          paymentMethod.transactions.push(transaction.response);\n          Meteor.call(\"cart/submitPayment\", paymentMethod);\n        } else {\n          handleStripeSubmitError(transaction.error);\n          uiEnd(template, \"Resubmit payment\");\n        }\n      }\n    });\n    return false;\n  },\n  beginSubmit() {\n    this.template.$(\":input\").attr(\"disabled\", true);\n    this.template.$(\"#btn-complete-order\").text(\"Submitting \");\n    return this.template.$(\"#btn-processing\").removeClass(\"hidden\");\n  },\n  endSubmit() {\n    if (!submitting) {\n      return uiEnd(this.template, \"Complete your order\");\n    }\n  }\n});\n","import { Template } from \"meteor/templating\";\nimport { Reaction, i18next } from \"/client/api\";\nimport { Packages } from \"/lib/collections\";\nimport { StripePackageConfig } from \"../../lib/collections/schemas\";\n\nimport \"./stripe.html\";\n\nTemplate.stripeSettings.helpers({\n  StripePackageConfig() {\n    return StripePackageConfig;\n  },\n  packageData() {\n    return Packages.findOne({\n      name: \"reaction-stripe\",\n      shopId: Reaction.getShopId()\n    });\n  }\n});\n\nTemplate.stripe.helpers({\n  packageData() {\n    return Packages.findOne({\n      name: \"reaction-stripe\",\n      shopId: Reaction.getShopId()\n    });\n  }\n});\n\nTemplate.stripe.events({\n  \"click [data-event-action=showStripeSettings]\"() {\n    Reaction.showActionView();\n  }\n});\n\nAutoForm.hooks({\n  \"stripe-update-form\": {\n    onSuccess: function () {\n      return Alerts.toast(i18next.t(\"admin.settings.saveSuccess\"), \"success\");\n    },\n    onError: function () {\n      return Alerts.toast(`${i18next.t(\"admin.settings.saveFailed\")} ${error}`, \"error\");\n    }\n  }\n});\n","import \"./checkout/stripe\";\nimport \"./settings/stripe\";\n","export * from \"./stripe\";\n","import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\nimport { PackageConfig } from \"/lib/collections/schemas/registry\";\n/*\n *  Meteor.settings.stripe =\n *    mode: false  #sandbox\n *    api_key: \"\"\n *  see: https://stripe.com/docs/api\n */\n\nexport const StripePackageConfig = new SimpleSchema([\n  PackageConfig, {\n    \"settings.mode\": {\n      type: Boolean,\n      defaultValue: false\n    },\n    \"settings.api_key\": {\n      type: String,\n      label: \"API Client ID\"\n    },\n    \"settings.reaction-stripe.support\": {\n      type: Array,\n      label: \"Payment provider supported methods\"\n    },\n    \"settings.reaction-stripe.support.$\": {\n      type: String,\n      allowedValues: [\"Authorize\", \"De-authorize\", \"Capture\", \"Refund\"]\n    }\n  }\n]);\n\nexport const StripePayment = new SimpleSchema({\n  payerName: {\n    type: String,\n    label: \"Cardholder name\"\n  },\n  cardNumber: {\n    type: String,\n    min: 13,\n    max: 16,\n    label: \"Card number\"\n  },\n  expireMonth: {\n    type: String,\n    max: 2,\n    label: \"Expiration month\"\n  },\n  expireYear: {\n    type: String,\n    max: 4,\n    label: \"Expiration year\"\n  },\n  cvv: {\n    type: String,\n    max: 4,\n    label: \"CVV\"\n  }\n});\n\nStripePayment.messages({\n  \"regEx payerName\": \"[label] must include both first and last name\"\n});\n","export { Stripe } from \"./stripe\";\n","/* eslint camelcase: 0 */\nimport { Meteor } from \"meteor/meteor\";\n\nexport const Stripe = {\n  authorize: function (cardData, paymentInfo, callback) {\n    Meteor.call(\"stripeSubmit\", \"authorize\", cardData, paymentInfo, callback);\n  }\n};\n","import { ProductAdminContainer } from \"../containers\";\n\nTemplate.ProductAdmin.helpers({\n  component() {\n    const currentData = Template.currentData() || {};\n\n    return {\n      ...currentData,\n      component: ProductAdminContainer\n    };\n  }\n});\n","export { default as ProductAdmin } from \"./productAdmin.js\";\n","import { isEqual } from \"lodash\";\nimport React, { Component, PropTypes } from \"react\";\nimport Velocity from \"velocity-animate\";\nimport \"velocity-animate/velocity.ui\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardGroup,\n  Metadata,\n  TextField,\n  Translation,\n  Select\n} from \"/imports/plugins/core/ui/client/components\";\nimport { Router } from \"/client/api\";\nimport { TagListContainer } from \"/imports/plugins/core/ui/client/containers\";\nimport update from \"react/lib/update\";\n\nconst fieldNames = [\n  \"title\",\n  \"handle\",\n  \"subtitle\",\n  \"vendor\",\n  \"description\",\n  \"origincountry\",\n  \"facebookMsg\",\n  \"twitterMsg\",\n  \"pinterestMsg\",\n  \"googleplusMsg\"\n];\n\nconst fieldGroups = {\n  title: { group: \"productDetails\" },\n  handle: { group: \"productDetails\" },\n  pageTitle: { group: \"productDetails\" },\n  vendor: { group: \"productDetails\" },\n  description: { group: \"productDetails\" },\n  facebookMsg: { group: \"social\" },\n  twitterMsg: { group: \"social\" },\n  pinterestMsg: { group: \"social\" },\n  googleplusMsg: { group: \"social\" },\n  hashtags: { group: \"hashtags\" },\n  metafields: { group: \"metafields\" }\n};\n\nclass ProductAdmin extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      expandedCard: this.fieldGroupForFieldName(props.editFocus),\n      product: props.product,\n      viewProps: props.viewProps\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const nextProduct = nextProps.product || {};\n    const currentProduct = this.props.product || {};\n\n    if (!isEqual(nextProduct, currentProduct)) {\n      for (const fieldName of fieldNames) {\n        if (nextProduct[fieldName] !== currentProduct[fieldName]) {\n          this.animateFieldFlash(fieldName);\n        }\n      }\n    }\n\n    const cardGroupName = this.fieldGroupForFieldName(nextProps.editFocus);\n\n    this.setState({\n      expandedCard: cardGroupName,\n      viewProps: nextProps.viewProps\n    });\n\n    this.setState({\n      product: nextProps.product\n    });\n  }\n\n  fieldGroupForFieldName(field) {\n    // Other wise, if a field was passed\n    // const fieldName = this.state.viewProps.field;\n\n    let fieldName;\n\n    // If the field is an array of field name\n    if (Array.isArray(field) && field.length) {\n      // Use the first field name\n      fieldName = field[0];\n    } else {\n      fieldName = field;\n    }\n\n    const fieldData = fieldGroups[fieldName];\n\n    if (fieldData && fieldData.group) {\n      return fieldData.group;\n    }\n\n    return fieldName;\n  }\n\n  animateFieldFlash(fieldName) {\n    const fieldRef = this.refs[`${fieldName}Input`];\n\n    if (fieldRef) {\n      const input = fieldRef.refs.input;\n\n      Velocity.RunSequence([\n        { e: input, p: { backgroundColor: \"#e2f2e2\" }, o: { duration: 200 } },\n        { e: input, p: { backgroundColor: \"#fff\" }, o: { duration: 100 } }\n      ]);\n    }\n  }\n\n  handleCardExpand(cardName) {\n    if (this.props.onCardExpand) {\n      this.props.onCardExpand(cardName);\n    }\n  }\n\n  handleDeleteProduct = () => {\n    if (this.props.onDeleteProduct) {\n      this.props.onDeleteProduct(this.props.product);\n    }\n  }\n\n  handleRestoreProduct = () => {\n    if (this.props.onRestoreProduct) {\n      this.props.onRestoreProduct(this.props.product);\n    }\n  }\n\n\n  handleFieldChange = (event, value, field) => {\n    const newState = update(this.state, {\n      product: {\n        $merge: {\n          [field]: value\n        }\n      }\n    });\n\n    this.setState(newState, () => {\n      if (this.props.onFieldChange) {\n        this.props.onFieldChange(field, value);\n      }\n    });\n  }\n\n  handleSelectChange = (value, field) => {\n    if (this.props.onProductFieldSave) {\n      this.props.onProductFieldSave(this.product._id, field, value);\n    }\n  }\n\n  handleToggleVisibility = () => {\n    if (this.props.onProductFieldSave) {\n      this.props.onProductFieldSave(this.product._id, \"isVisible\", !this.product.isVisible);\n    }\n  }\n\n  handleMetaChange = (event, metafield, index) => {\n    if (this.props.onMetaChange) {\n      this.props.onMetaChange(metafield, index);\n    }\n  }\n\n  handleFieldBlur = (event, value, field) => {\n    if (this.props.onProductFieldSave) {\n      this.props.onProductFieldSave(this.product._id, field, value);\n    }\n  }\n\n  handleMetaSave = (event, metafield, index) => {\n    if (this.props.onMetaSave) {\n      this.props.onMetaSave(this.product._id, metafield, index);\n    }\n  }\n\n  handleMetaRemove = (event, metafield, index) => {\n    if (this.props.onMetaRemove) {\n      this.props.onMetaRemove(this.product._id, metafield, index);\n    }\n  }\n\n  get product() {\n    return this.state.product || this.props.product || {};\n  }\n\n  get permalink() {\n    if (this.props.product) {\n      return Router.pathFor(\"product\", {\n        hash: {\n          handle: this.props.product.handle\n        }\n      });\n    }\n\n    return \"\";\n  }\n\n  renderProductVisibilityLabel() {\n    if (this.product.isVisible) {\n      return (\n        <Translation defaultValue=\"Product is visible\" i18nKey=\"productDetailEdit.productIsVisible\" />\n      );\n    }\n\n    return (\n      <Translation defaultValue=\"Product is not visible\" i18nKey=\"productDetailEdit.productIsNotVisible\" />\n    );\n  }\n\n  isExpanded(groupName) {\n    if (this.state.expandedCard && this.state.expandedCard === groupName) {\n      return true;\n    }\n\n    return false;\n  }\n\n  render() {\n    return (\n      <CardGroup>\n        <Card\n          expanded={this.isExpanded(\"productDetails\")}\n          onExpand={this.handleCardExpand.bind(this, \"productDetails\")}\n        >\n          <CardHeader\n            actAsExpander={true}\n            i18nKeyTitle=\"productDetailEdit.productSettings\"\n            title=\"Product Settings\"\n            onChange={this.handleFieldChange}\n          />\n          <CardBody expandable={true}>\n            <Select\n              clearable={false}\n              i18nKeyLabel=\"productDetailEdit.template\"\n              i18nKeyPlaceholder=\"productDetailEdit.templateSelectPlaceholder\"\n              label=\"Template\"\n              name=\"template\"\n              onChange={this.handleSelectChange}\n              options={this.props.templates}\n              placeholder=\"Select a template\"\n              value={this.product.template}\n            />\n            <TextField\n              i18nKeyLabel=\"productDetailEdit.title\"\n              i18nKeyPlaceholder=\"productDetailEdit.title\"\n              label=\"Title\"\n              name=\"title\"\n              onBlur={this.handleFieldBlur}\n              onChange={this.handleFieldChange}\n              onReturnKeyDown={this.handleFieldBlur}\n              placeholder=\"Title\"\n              ref=\"titleInput\"\n              value={this.product.title}\n            />\n            <TextField\n              helpText={this.permalink}\n              i18nKeyLabel=\"productDetailEdit.permalink\"\n              i18nKeyPlaceholder=\"productDetailEdit.permalink\"\n              label=\"Permalink\"\n              name=\"handle\"\n              onBlur={this.handleFieldBlur}\n              onChange={this.handleFieldChange}\n              onReturnKeyDown={this.handleFieldBlur}\n              placeholder=\"Permalink\"\n              ref=\"handleInput\"\n              value={this.product.handle}\n            />\n            <TextField\n              i18nKeyLabel=\"productDetailEdit.pageTitle\"\n              i18nKeyPlaceholder=\"productDetailEdit.pageTitle\"\n              label=\"Subtitle\"\n              name=\"pageTitle\"\n              onBlur={this.handleFieldBlur}\n              onChange={this.handleFieldChange}\n              onReturnKeyDown={this.handleFieldBlur}\n              placeholder=\"Subtitle\"\n              ref=\"subtitleInput\"\n              value={this.product.pageTitle}\n            />\n            <TextField\n              i18nKeyLabel=\"productDetailEdit.vendor\"\n              i18nKeyPlaceholder=\"productDetailEdit.vendor\"\n              label=\"Vendor\"\n              name=\"vendor\"\n              onBlur={this.handleFieldBlur}\n              onChange={this.handleFieldChange}\n              onReturnKeyDown={this.handleFieldBlur}\n              placeholder=\"Vendor\"\n              ref=\"vendorInput\"\n              value={this.product.vendor}\n            />\n            <TextField\n              i18nKeyLabel=\"productDetailEdit.description\"\n              i18nKeyPlaceholder=\"productDetailEdit.description\"\n              label=\"Description\"\n              multiline={true}\n              name=\"description\"\n              onBlur={this.handleFieldBlur}\n              onChange={this.handleFieldChange}\n              placeholder=\"Description\"\n              ref=\"descriptionInput\"\n              value={this.product.description}\n            />\n            <Select\n              clearable={false}\n              i18nKeyLabel=\"productDetailEdit.originCountry\"\n              i18nKeyPlaceholder=\"productDetailEdit.originCountry\"\n              label=\"Origin Country\"\n              name=\"originCountry\"\n              onChange={this.handleSelectChange}\n              placeholder=\"Select a Country\"\n              ref=\"countryOfOriginInput\"\n              value={this.product.originCountry}\n              options={this.props.countries}\n            />\n          </CardBody>\n        </Card>\n        <Card\n          expanded={this.isExpanded(\"social\")}\n          onExpand={this.handleCardExpand.bind(this, \"social\")}\n        >\n          <CardHeader\n            actAsExpander={true}\n            i18nKeyTitle=\"social.socialTitle\"\n            title=\"Social\"\n          />\n          <CardBody expandable={true}>\n            <TextField\n              i18nKeyLabel=\"productDetailEdit.facebookMsg\"\n              label=\"Facebook Message\"\n              multiline={true}\n              name=\"facebookMsg\"\n              onBlur={this.handleFieldBlur}\n              onChange={this.handleFieldChange}\n              ref=\"facebookMsgInput\"\n              value={this.product.facebookMsg}\n            />\n            <TextField\n              i18nKeyLabel=\"productDetailEdit.twitterMsg\"\n              label=\"Twitter Message\"\n              multiline={true}\n              name=\"twitterMsg\"\n              onBlur={this.handleFieldBlur}\n              onChange={this.handleFieldChange}\n              ref=\"twitterMsgInput\"\n              value={this.product.twitterMsg}\n            />\n            <TextField\n              i18nKeyLabel=\"productDetailEdit.pinterestMsg\"\n              label=\"Pinterest Message\"\n              multiline={true}\n              name=\"pinterestMsg\"\n              onBlur={this.handleFieldBlur}\n              onChange={this.handleFieldChange}\n              ref=\"pinterestMsgInput\"\n              value={this.product.pinterestMsg}\n            />\n            <TextField\n              i18nKeyLabel=\"productDetailEdit.googleplusMsg\"\n              label=\"Google+ Message\"\n              multiline={true}\n              name=\"googleplusMsg\"\n              onBlur={this.handleFieldBlur}\n              onChange={this.handleFieldChange}\n              ref=\"googleplusMsgInput\"\n              value={this.product.googleplusMsg}\n            />\n          </CardBody>\n        </Card>\n\n        <Card\n          expanded={this.isExpanded(\"hashtags\")}\n          onExpand={this.handleCardExpand.bind(this, \"hashtags\")}\n        >\n          <CardHeader\n            actAsExpander={true}\n            i18nKeyTitle=\"productDetail.tags\"\n            title=\"Tags\"\n          />\n          <CardBody expandable={true}>\n            <TagListContainer\n              enableNewTagForm={true}\n              product={this.product}\n              tagProps={{\n                fullWidth: true\n              }}\n            />\n          </CardBody>\n        </Card>\n\n        <Card\n          expanded={this.isExpanded(\"metafields\")}\n          onExpand={this.handleCardExpand.bind(this, \"metafields\")}\n        >\n          <CardHeader\n            actAsExpander={true}\n            i18nKeyTitle=\"productDetailEdit.details\"\n            title=\"Details\"\n          />\n          <CardBody expandable={true}>\n            <Metadata\n              metafields={this.product.metafields}\n              newMetafield={this.props.newMetafield}\n              onMetaChange={this.handleMetaChange}\n              onMetaRemove={this.handleMetaRemove}\n              onMetaSave={this.handleMetaSave}\n            />\n          </CardBody>\n        </Card>\n      </CardGroup>\n    );\n  }\n}\n\nProductAdmin.propTypes = {\n  countries: PropTypes.arrayOf(PropTypes.object),\n  editFocus: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  handleFieldBlur: PropTypes.func,\n  handleFieldChange: PropTypes.func,\n  handleProductFieldChange: PropTypes.func,\n  newMetafield: PropTypes.object,\n  onCardExpand: PropTypes.func,\n  onDeleteProduct: PropTypes.func,\n  onFieldChange: PropTypes.func,\n  onMetaChange: PropTypes.func,\n  onMetaRemove: PropTypes.func,\n  onMetaSave: PropTypes.func,\n  onProductFieldSave: PropTypes.func,\n  onRestoreProduct: PropTypes.func,\n  product: PropTypes.object,\n  revisonDocumentIds: PropTypes.arrayOf(PropTypes.string),\n  templates: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string,\n    value: PropTypes.any\n  })),\n  viewProps: PropTypes.object\n};\n\nexport default ProductAdmin;\n","export { default as ProductAdminContainer } from \"./productAdminContainer\";\n","import React, { Component, PropTypes } from \"react\";\nimport update from \"react/lib/update\";\nimport { Reaction } from \"/client/api\";\nimport { composeWithTracker } from \"/lib/api/compose\";\nimport { ReactionProduct } from \"/lib/api\";\nimport { Tags, Media, Templates } from \"/lib/collections\";\nimport { Countries } from \"/client/collections\";\nimport { ProductAdmin } from \"../components\";\n\nclass ProductAdminContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      newMetafield: {\n        key: \"\",\n        value: \"\"\n      }\n    };\n  }\n\n  handleCardExpand = (cardName) => {\n    Reaction.state.set(\"edit/focus\", cardName);\n  }\n\n  handleDeleteProduct = (product) => {\n    ReactionProduct.archiveProduct(product || this.product);\n  }\n\n  handleProductFieldSave = (productId, fieldName, value) => {\n    let updateValue = value;\n    // special case, slugify handles.\n    if (fieldName === \"handle\") {\n      updateValue = Reaction.getSlug(value);\n    }\n    Meteor.call(\"products/updateProductField\", productId, fieldName, updateValue, (error) => {\n      if (error) {\n        Alerts.toast(error.message, \"error\");\n        this.forceUpdate();\n      }\n    });\n  }\n\n\n  handleMetaChange = (metafield, index) => {\n    let newState = {};\n\n    if (index >= 0) {\n      newState = update(this.state, {\n        product: {\n          metafields: {\n            [index]: {\n              $set: metafield\n            }\n          }\n        }\n      });\n    } else {\n      newState = {\n        newMetafield: metafield\n      };\n    }\n\n    this.setState(newState);\n  }\n\n  handleMetafieldSave = (productId, metafield, index) => {\n    // update existing metafield\n    if (index >= 0) {\n      Meteor.call(\"products/updateMetaFields\", productId, metafield, index);\n    } else if (metafield.key && metafield.value) {\n      Meteor.call(\"products/updateMetaFields\", productId, metafield);\n    }\n\n    this.setState({\n      newMetafield: {\n        key: \"\",\n        value: \"\"\n      }\n    });\n  }\n\n  handleMetaRemove = (productId, metafield) => {\n    Meteor.call(\"products/removeMetaFields\", productId, metafield);\n  }\n\n  handleProductRestore = (product) => {\n    Meteor.call(\"products/updateProductField\", product._id, \"isDeleted\", false);\n  }\n\n  render() {\n    return (\n      <ProductAdmin\n        newMetafield={this.state.newMetafield}\n        onCardExpand={this.handleCardExpand}\n        onDeleteProduct={this.handleDeleteProduct}\n        onMetaChange={this.handleMetaChange}\n        onMetaRemove={this.handleMetaRemove}\n        onMetaSave={this.handleMetafieldSave}\n        onProductFieldSave={this.handleProductFieldSave}\n        onRestoreProduct={this.handleProductRestore}\n        {...this.props}\n      />\n    );\n  }\n}\n\n\nfunction composer(props, onData) {\n  const product = ReactionProduct.selectedProduct();\n  let tags;\n  let media;\n  let revisonDocumentIds;\n\n  if (product) {\n    if (_.isArray(product.hashtags)) {\n      tags = _.map(product.hashtags, function (id) {\n        return Tags.findOne(id);\n      });\n    }\n\n    const selectedVariant = ReactionProduct.selectedVariant();\n\n    if (selectedVariant) {\n      media = Media.find({\n        \"metadata.variantId\": selectedVariant._id\n      }, {\n        sort: {\n          \"metadata.priority\": 1\n        }\n      });\n    }\n\n    revisonDocumentIds = [product._id];\n\n    const templates = Templates.find({\n      parser: \"react\",\n      provides: \"template\",\n      templateFor: { $in: [\"pdp\"] },\n      enabled: true\n    }).map((template) => {\n      return {\n        label: template.title,\n        value: template.name\n      };\n    });\n\n    const countries = Countries.find({}).fetch();\n\n    onData(null, {\n      editFocus: Reaction.state.get(\"edit/focus\"),\n      product: product,\n      media,\n      tags,\n      revisonDocumentIds,\n      templates,\n      countries\n    });\n  } else {\n    onData(null, {});\n  }\n}\n\nProductAdminContainer.propTypes = {\n  product: PropTypes.object,\n  tags: PropTypes.arrayOf(PropTypes.object)\n};\n\n// Decorate component and export\nexport default composeWithTracker(composer)(ProductAdminContainer);\n","import \"./templates/productAdmin.html\";\nimport \"./templates/productAdmin.js\";\n","import { ProductDetailContainer, PublishContainer } from \"../containers\";\n\nTemplate.productDetailSimple.helpers({\n  PDC() {\n    return ProductDetailContainer;\n  }\n});\n\nTemplate.productDetailSimpleToolbar.helpers({\n  PublishContainerComponent() {\n    return {\n      component: PublishContainer\n    };\n  }\n});\n","import React, { Component, PropTypes } from \"react\";\nimport { Alert, Translation } from \"/imports/plugins/core/ui/client/components\";\n\n\nclass AddToCartButton extends Component {\n  get hasVariants() {\n    return Array.isArray(this.props.variants) && this.props.variants.length > 0;\n  }\n  handleCartQuantityChange = (event) => {\n    if (this.props.onCartQuantityChange) {\n      this.props.onCartQuantityChange(event, event.target.value);\n    }\n  }\n\n  render() {\n    if (this.hasVariants) {\n      return (\n        <div className=\"pdp add-to-cart block\">\n          <input\n            className=\"form-control input-md\"\n            id=\"add-to-cart-quantity\"\n            min=\"1\"\n            name=\"addToCartQty\"\n            onChange={this.handleCartQuantityChange}\n            type=\"number\"\n            value={this.props.cartQuantity}\n          />\n          <button\n            className=\"input-group-addon add-to-cart-text js-add-to-cart\"\n            data-i18n=\"productDetail.addToCart\"\n            onClick={this.props.onClick || this.props.onAddToCart}\n          >\n            <Translation defaultValue=\"Add to cart\" i18nKey=\"productDetail.addToCart\" />\n          </button>\n        </div>\n      );\n    }\n\n    if (this.props.editable && this.hasVariants === false) {\n      return (\n        <Alert>\n          <Translation defaultValue=\"Add options to enable 'Add to Cart' button\" i18nkey=\"productVariant.addVariantOptions\" />\n        </Alert>\n      );\n    }\n    return null;\n  }\n}\n\nAddToCartButton.propTypes = {\n  cartQuantity: PropTypes.number,\n  editable: PropTypes.bool,\n  onAddToCart: PropTypes.func,\n  onCartQuantityChange: PropTypes.func,\n  onClick: PropTypes.func,\n  variants: PropTypes.arrayOf(PropTypes.object)\n};\n\nexport default AddToCartButton;\n","import React, { Component, PropTypes } from \"react\";\nimport classnames from \"classnames\";\nimport { Translation } from \"/imports/plugins/core/ui/client/components\";\nimport { MediaItem } from \"/imports/plugins/core/ui/client/components\";\n\nclass ChildVariant extends Component {\n  handleClick = (event) => {\n    if (this.props.onClick) {\n      this.props.onClick(event, this.props.variant);\n    }\n  }\n\n  get hasMedia() {\n    return Array.isArray(this.props.media) && this.props.media.length > 0;\n  }\n\n  get primaryMediaItem() {\n    if (this.hasMedia) {\n      return this.props.media[0];\n    }\n\n    return null;\n  }\n\n  renderInventoryStatus() {\n    const {\n      inventoryManagement,\n      inventoryPolicy\n    } = this.props.variant;\n\n    // If childVariant is sold out, show Sold Out badge\n    if (inventoryManagement && this.props.variant.inventoryQuantity <= 0) {\n      if (inventoryPolicy) {\n        return (\n          <span className=\"variant-qty-sold-out badge badge-danger\">\n            <Translation defaultValue=\"Sold Out!\" i18nKey=\"productDetail.soldOut\" />\n          </span>\n        );\n      }\n\n      return (\n        <span className=\"variant-qty-sold-out badge badge-info\">\n          <Translation defaultValue=\"Backorder\" i18nKey=\"productDetail.backOrder\" />\n        </span>\n      );\n    }\n\n    return null;\n  }\n\n  renderDeletionStatus() {\n    if (this.props.variant.isDeleted) {\n      return (\n        <span className=\"badge badge-danger\">\n          <Translation defaultValue=\"Archived\" i18nKey=\"app.archived\" />\n        </span>\n      );\n    }\n\n    return null;\n  }\n\n  renderMedia() {\n    if (this.hasMedia) {\n      const media = this.primaryMediaItem;\n\n      return (\n        <MediaItem source={media.url()} />\n      );\n    }\n\n    return null;\n  }\n\n  render() {\n    const variant = this.props.variant;\n    const classes = classnames({\n      \"btn\": true,\n      \"btn-default\": true,\n      \"variant-detail-selected\": this.props.isSelected,\n      \"variant-deleted\": this.props.variant.isDeleted\n    });\n\n    return (\n      <div className=\"variant-select-option\">\n        <button\n          className={classes}\n          onClick={this.handleClick}\n          type=\"button\"\n        >\n          {this.renderMedia()}\n          <span className=\"title\">{variant.optionTitle}</span>\n        </button>\n\n        <div className=\"variant-controls\">\n          {this.renderDeletionStatus()}\n          {this.renderInventoryStatus()}\n          {this.props.visibilityButton}\n          {this.props.editButton}\n        </div>\n      </div>\n    );\n  }\n}\n\nChildVariant.propTypes = {\n  editButton: PropTypes.node,\n  isSelected: PropTypes.bool,\n  media: PropTypes.arrayOf(PropTypes.object),\n  onClick: PropTypes.func,\n  soldOut: PropTypes.bool,\n  variant: PropTypes.object,\n  visibilityButton: PropTypes.node\n};\n\n\nexport default ChildVariant;\n","export { default as ProductDetail } from \"./productDetail\";\nexport { default as VariantList } from \"./variantList\";\nexport { default as ChildVariant } from \"./childVariant\";\nexport { default as AddToCartButton } from \"./addToCartButton\";\nexport { default as ProductMetadata } from \"./metadata\";\nexport { default as ProductTags } from \"./tags\";\nexport { default as ProductField } from \"./productField\";\nexport { default as PriceRange } from \"./priceRange\";\nexport { default as ProductNotFound } from \"./productNotFound\";\n","import React, { Component, PropTypes } from \"react\";\nimport classnames from \"classnames\";\nimport { Metadata, Translation } from \"/imports/plugins/core/ui/client/components/\";\nimport { EditContainer } from \"/imports/plugins/core/ui/client/containers\";\n\nclass ProductMetadata extends Component {\n  get metafields() {\n    return this.props.metafields || this.props.product.metafields;\n  }\n\n  get showEditControls() {\n    return this.props.product && this.props.editable;\n  }\n\n  renderEditButton() {\n    if (this.showEditControls) {\n      return (\n        <span className=\"edit-button\">\n          <EditContainer\n            data={this.props.product}\n            disabled={this.props.editable === false}\n            editTypes={[\"edit\"]}\n            editView=\"ProductAdmin\"\n            field=\"metafields\"\n            i18nKeyLabel=\"productDetailEdit.productSettings\"\n            label=\"Product Settings\"\n            permissions={[\"createProduct\"]}\n            {...this.props.editContainerProps}\n          />\n        </span>\n      );\n    }\n\n    return null;\n  }\n\n  render() {\n    if (Array.isArray(this.metafields) && this.metafields.length > 0) {\n      const headerClassName = classnames({\n        \"meta-header\": true,\n        \"edit\": this.showEditControls\n      });\n\n      return (\n        <div className=\"pdp product-metadata\">\n          <h3 className={headerClassName}>\n            <Translation defaultValue=\"Details\" i18nKey=\"productDetail.details\" />\n            {this.renderEditButton()}\n          </h3>\n          <Metadata editable={false} metafields={this.metafields} />\n        </div>\n      );\n    }\n\n    return null;\n  }\n}\n\nProductMetadata.propTypes = {\n  editContainerProps: PropTypes.object,\n  editable: PropTypes.bool,\n  metafields: PropTypes.arrayOf(PropTypes.object),\n  product: PropTypes.object\n};\n\nexport default ProductMetadata;\n","import React from \"react\";\nimport { Currency } from \"/imports/plugins/core/ui/client/components/\";\n\nconst PriceRange = (props) => {\n  return (\n    <div className=\"pdp price-range\">\n      <Currency {...props} />\n    </div>\n  );\n};\n\nexport default PriceRange;\n","import React, { Component, PropTypes } from \"react\";\nimport { AlertContainer } from \"/imports/plugins/core/ui/client/containers\";\nimport { ReactionLayout } from \"/imports/plugins/core/layout/lib\";\n\nclass ProductDetail extends Component {\n  get tags() {\n    return this.props.tags || [];\n  }\n\n  get product() {\n    return this.props.product || {};\n  }\n\n  get editable() {\n    return this.props.editable;\n  }\n\n  render() {\n    return (\n      <div className=\"pdp\" style={{ position: \"relative\" }}>\n        <div className=\"container container-main pdp-container\" itemScope itemType=\"http://schema.org/Product\">\n          <div className=\"row\">\n            <AlertContainer placement=\"productManagement\" />\n            <ReactionLayout\n              context={this}\n              layoutName={this.props.layout}\n              layoutProps={this.props}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nProductDetail.propTypes = {\n  cartQuantity: PropTypes.number,\n  editable: PropTypes.bool,\n  hasAdminPermission: PropTypes.bool,\n  layout: PropTypes.string,\n  layoutName: PropTypes.string,\n  mediaGalleryComponent: PropTypes.node,\n  onAddToCart: PropTypes.func,\n  onCartQuantityChange: PropTypes.func,\n  onDeleteProduct: PropTypes.func,\n  onProductFieldChange: PropTypes.func,\n  onViewContextChange: PropTypes.func,\n  priceRange: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  product: PropTypes.object,\n  socialComponent: PropTypes.node,\n  tags: PropTypes.arrayOf(PropTypes.object),\n  topVariantComponent: PropTypes.node,\n  viewAs: PropTypes.string\n};\n\nexport default ProductDetail;\n","import React, { Component, PropTypes } from \"react\";\nimport classnames from \"classnames\";\nimport Velocity from \"velocity-animate\";\nimport \"velocity-animate/velocity.ui\";\nimport { TextField } from \"/imports/plugins/core/ui/client/components/\";\nimport { EditContainer } from \"/imports/plugins/core/ui/client/containers\";\n\nclass ProductField extends Component {\n  static state = {}\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: this.value\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.product[this.fieldName] !== this.props.product[this.fieldName]) {\n      this.setState({\n        value: nextProps.product[this.fieldName]\n      }, () => {\n        if (this._input && this._input.refs.input) {\n          const input = this._input.refs.input;\n\n          Velocity.RunSequence([\n            { e: input, p: { backgroundColor: \"#e2f2e2\" }, o: { duration: 200 } },\n            { e: input, p: { backgroundColor: \"#fff\" }, o: { duration: 100 } }\n          ]);\n        }\n      });\n    } else {\n      this.setState({\n        value: nextProps.product[this.fieldName]\n      });\n    }\n  }\n\n  handleChange = (event, value) => {\n    this.setState({\n      value\n    });\n  }\n\n  handleBlur = (event, value) => {\n    if (this.props.onProductFieldChange) {\n      this.props.onProductFieldChange(this.props.product._id, this.fieldName, value);\n    }\n  }\n\n  get fieldName() {\n    return this.props.fieldName;\n  }\n\n  get value() {\n    return (this.state && this.state.value) || this.props.product[this.fieldName];\n  }\n\n  get showEditControls() {\n    return this.props.product && this.props.editable;\n  }\n\n  renderEditButton() {\n    if (this.showEditControls) {\n      return (\n        <span className=\"edit-controls\">\n          <EditContainer\n            autoHideEditButton={true}\n            data={this.props.product}\n            editView=\"ProductAdmin\"\n            field={this.fieldName}\n            i18nKeyLabel={`productDetailEdit.${this.field}`}\n            label=\"Edit Field\"\n            permissions={[\"createProduct\"]}\n            {...this.props.editContainerProps}\n          />\n        </span>\n      );\n    }\n\n    return null;\n  }\n\n  renderTextField() {\n    const baseClassName = classnames({\n      \"pdp\": true,\n      \"product-detail-edit\": true,\n      [`${this.fieldName}-edit`]: this.fieldName\n    });\n\n    const textFieldClassName = classnames({\n      \"pdp\": true,\n      \"product-detail-edit\": true,\n      [`${this.fieldName}-edit-input`]: this.fieldName\n    });\n\n    return (\n      <div className={baseClassName}>\n        <TextField\n          ref={(ref) => { this._input = ref;}}\n          className={textFieldClassName}\n          multiline={this.props.multiline}\n          onBlur={this.handleBlur}\n          onChange={this.handleChange}\n          onReturnKeyDown={this.handleBlur}\n          value={this.state.value}\n          {...this.props.textFieldProps}\n        />\n        {this.renderEditButton()}\n      </div>\n    );\n  }\n\n  render() {\n    if (this.showEditControls) {\n      return this.renderTextField();\n    }\n\n    if (this.props.element) {\n      return React.createElement(this.props.element, {\n        className: \"pdp field\",\n        itemProp: this.props.itemProp,\n        children: this.value\n      });\n    }\n\n    return (\n      <div className=\"pdp field\">\n        {this.value}\n      </div>\n    );\n  }\n}\n\nProductField.propTypes = {\n  editContainerProps: PropTypes.object,\n  editable: PropTypes.bool,\n  element: PropTypes.node,\n  fieldName: PropTypes.string,\n  fieldTitle: PropTypes.string,\n  itemProp: PropTypes.string,\n  multiline: PropTypes.bool,\n  onProductFieldChange: PropTypes.func,\n  product: PropTypes.object,\n  textFieldProps: PropTypes.object\n};\n\nexport default ProductField;\n","import React from \"react\";\nimport { Translation } from \"/imports/plugins/core/ui/client/components\";\nimport { TranslationProvider } from \"/imports/plugins/core/ui/client/providers\";\n\nconst ProductNotFound = () => {\n  return (\n    <TranslationProvider>\n      <div className=\"container-fluid-sm\">\n        <div className=\"empty-view-message\">\n          <i className=\"fa fa-barcode\" />\n          <Translation defaultValue=\"Oops\" i18nKey=\"productDetail.notFoundTitle\" />\n          <Translation defaultValue=\"Product Not Found\" i18nKey=\"productDetail.notFoundError\" />\n        </div>\n      </div>\n    </TranslationProvider>\n  );\n};\n\nexport default ProductNotFound;\n","import React, { Component, PropTypes } from \"react\";\nimport classnames from \"classnames\";\nimport { Translation } from \"/imports/plugins/core/ui/client/components/\";\nimport { TagListContainer, EditContainer } from \"/imports/plugins/core/ui/client/containers\";\n\nclass ProductTags extends Component {\n  get tags() {\n    return this.props.tags;\n  }\n\n  get showEditControls() {\n    return this.props.product && this.props.editable;\n  }\n\n  renderEditButton() {\n    if (this.showEditControls) {\n      return (\n        <span className=\"edit-button\">\n          <EditContainer\n            data={this.props.product}\n            disabled={this.props.editable === false}\n            editView=\"ProductAdmin\"\n            field=\"hashtags\"\n            i18nKeyLabel=\"productDetailEdit.productSettings\"\n            label=\"Product Settings\"\n            permissions={[\"createProduct\"]}\n          />\n        </span>\n      );\n    }\n\n    return null;\n  }\n\n  render() {\n    if (Array.isArray(this.tags) && this.tags.length > 0) {\n      const headerClassName = classnames({\n        \"tags-header\": true,\n        \"edit\": this.showEditControls\n      });\n\n      return (\n        <div className=\"pdp product-tags\">\n          <h3 className={headerClassName}>\n            <Translation defaultValue=\"Tags\" i18nKey=\"productDetail.tags\" />\n            {this.renderEditButton()}\n          </h3>\n          <TagListContainer\n            editable={false}\n            product={this.props.product}\n            tags={this.tags}\n          />\n        </div>\n      );\n    }\n    return null;\n  }\n}\n\nProductTags.propTypes = {\n  editButton: PropTypes.node,\n  editable: PropTypes.bool,\n  product: PropTypes.object,\n  tags: PropTypes.arrayOf(PropTypes.object)\n};\n\nexport default ProductTags;\n","import React, { Component, PropTypes } from \"react\";\nimport classnames from \"classnames\";\nimport { Currency, Translation } from \"/imports/plugins/core/ui/client/components\";\nimport { SortableItem } from \"/imports/plugins/core/ui/client/containers\";\n\nclass Variant extends Component {\n\n  handleClick = (event) => {\n    if (this.props.onClick) {\n      this.props.onClick(event, this.props.variant);\n    }\n  }\n\n  get price() {\n    return this.props.displayPrice || this.props.variant.price;\n  }\n\n  renderInventoryStatus() {\n    const {\n      inventoryManagement,\n      inventoryPolicy\n    } = this.props.variant;\n\n    // If variant is sold out, show Sold Out badge\n    if (inventoryManagement && this.props.soldOut) {\n      if (inventoryPolicy) {\n        return (\n          <span className=\"variant-qty-sold-out badge badge-danger\">\n            <Translation defaultValue=\"Sold Out!\" i18nKey=\"productDetail.soldOut\" />\n          </span>\n        );\n      }\n\n      return (\n        <span className=\"variant-qty-sold-out badge badge-info\">\n          <Translation defaultValue=\"Backorder\" i18nKey=\"productDetail.backOrder\" />\n        </span>\n      );\n    }\n\n    // If Warning Threshold is met, show Limited Supply Badge\n    if (inventoryManagement && this.props.variant.lowInventoryWarningThreshold >= this.props.variant.inventoryTotal) {\n      if (inventoryPolicy) {\n        return (\n          <span className=\"variant-qty-sold-out badge badge-warning\">\n            <Translation defaultValue=\"Limited Supply\" i18nKey=\"productDetail.limitedSupply\" />\n          </span>\n        );\n      }\n\n      return (\n        <span className=\"variant-qty-sold-out badge badge-info\">\n          <Translation defaultValue=\"Backorder\" i18nKey=\"productDetail.backOrder\" />\n        </span>\n      );\n    }\n\n    return null;\n  }\n\n  renderDeletionStatus() {\n    if (this.props.variant.isDeleted) {\n      return (\n        <span className=\"badge badge-danger\">\n          <Translation defaultValue=\"Archived\" i18nKey=\"app.archived\" />\n        </span>\n      );\n    }\n\n    return null;\n  }\n\n  render() {\n    const variant = this.props.variant;\n    const classes = classnames({\n      \"variant-detail\": true,\n      \"variant-detail-selected\": this.props.isSelected,\n      \"variant-deleted\": this.props.variant.isDeleted\n    });\n\n    let variantTitleElement;\n\n    if (typeof variant.title === \"string\" && variant.title.length) {\n      variantTitleElement = (\n        <span className=\"variant-title\">{variant.title}</span>\n      );\n    } else {\n      variantTitleElement = (\n        <Translation defaultValue=\"Label\" i18nKey=\"productVariant.title\" />\n      );\n    }\n\n    const variantElement = (\n      <li\n        className=\"variant-list-item\"\n        id=\"variant-list-item-{variant._id}\"\n        key={variant._id}\n        onClick={this.handleClick}\n      >\n        <div className={classes}>\n          <div className=\"title\">\n            {variantTitleElement}\n          </div>\n\n          <div className=\"actions\">\n            <span className=\"variant-price\">\n              <Currency amount={this.price} editable={this.props.editable}/>\n            </span>\n          </div>\n\n          <div className=\"alerts\">\n            {this.renderDeletionStatus()}\n            {this.renderInventoryStatus()}\n            {this.props.visibilityButton}\n            {this.props.editButton}\n          </div>\n        </div>\n      </li>\n    );\n\n    if (this.props.editable) {\n      return this.props.connectDragSource(\n        this.props.connectDropTarget(\n          variantElement\n        )\n      );\n    }\n\n    return variantElement;\n  }\n}\n\nVariant.propTypes = {\n  connectDragSource: PropTypes.func,\n  connectDropTarget: PropTypes.func,\n  displayPrice: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  editButton: PropTypes.node,\n  editable: PropTypes.bool,\n  isSelected: PropTypes.bool,\n  onClick: PropTypes.func,\n  soldOut: PropTypes.bool,\n  variant: PropTypes.object,\n  visibilityButton: PropTypes.node\n};\n\nexport default SortableItem(\"product-variant\", Variant);\n","import React, { Component, PropTypes } from \"react\";\nimport Variant from \"./variant\";\nimport { EditContainer } from \"/imports/plugins/core/ui/client/containers\";\nimport { Divider, IconButton } from \"/imports/plugins/core/ui/client/components\";\nimport { ChildVariant } from \"./\";\n\nclass VariantList extends Component {\n\n  handleVariantEditClick = (event, editButtonProps) => {\n    if (this.props.onEditVariant) {\n      return this.props.onEditVariant(event, editButtonProps.data);\n    }\n    return true;\n  }\n\n  handleVariantVisibilityClick = (event, editButtonProps) => {\n    if (this.props.onVariantVisibiltyToggle) {\n      const isVariantVisible = !editButtonProps.data.isVisible;\n      this.props.onVariantVisibiltyToggle(event, editButtonProps.data, isVariantVisible);\n    }\n  }\n\n  handleChildleVariantClick = (event, variant) => {\n    if (this.props.onVariantClick) {\n      this.props.onVariantClick(event, variant, 1);\n    }\n  }\n\n  handleChildVariantEditClick = (event, editButtonProps) => {\n    if (this.props.onEditVariant) {\n      return this.props.onEditVariant(event, editButtonProps.data, 1);\n    }\n    return true;\n  }\n\n  isSoldOut(variant) {\n    if (this.props.isSoldOut) {\n      return this.props.isSoldOut(variant);\n    }\n\n    return false;\n  }\n\n  renderVariants() {\n    let variants = [];\n    let addButton;\n\n    if (this.props.editable) {\n      addButton = (\n        <div className=\"rui items flex\">\n          <div className=\"rui item full justify center\">\n            <IconButton\n              i18nKeyTooltip=\"variantList.createVariant\"\n              icon=\"fa fa-plus\"\n              primary={true}\n              tooltip=\"Create Variant\"\n              onClick={this.props.onCreateVariant}\n            />\n          </div>\n        </div>\n      );\n    }\n\n    if (this.props.variants) {\n      variants = this.props.variants.map((variant, index) => {\n        const displayPrice = this.props.displayPrice && this.props.displayPrice(variant._id);\n\n        return (\n          <EditContainer\n            data={variant}\n            disabled={this.props.editable === false}\n            editView=\"variantForm\"\n            i18nKeyLabel=\"productDetailEdit.editVariant\"\n            key={index}\n            label=\"Edit Variant\"\n            onEditButtonClick={this.handleVariantEditClick}\n            onVisibilityButtonClick={this.handleVariantVisibilityClick}\n            permissions={[\"createProduct\"]}\n            showsVisibilityButton={true}\n          >\n            <Variant\n              displayPrice={displayPrice}\n              editable={this.props.editable}\n              index={index}\n              isSelected={this.props.variantIsSelected(variant._id)}\n              onClick={this.props.onVariantClick}\n              onMove={this.props.onMoveVariant}\n              soldOut={this.isSoldOut(variant)}\n              variant={variant}\n            />\n          </EditContainer>\n        );\n      });\n    }\n\n    const variantList = (\n      <ul className=\"variant-list list-unstyled\" id=\"variant-list\" key=\"variantList\">\n        {variants}\n        {addButton}\n      </ul>\n    );\n\n    if (variants.length === 0 && this.props.editable === false) {\n      return variantList;\n    } else if (variants.length > 1 || variants.length === 0) {\n      return [\n        <Divider\n          i18nKeyLabel=\"productDetail.options\"\n          key=\"dividerWithLabel\"\n          label=\"Options\"\n        />,\n        variantList\n      ];\n    } else if (variants.length === 1) {\n      return [\n        <Divider key=\"divider\" />,\n        variantList\n      ];\n    }\n\n    return variantList;\n  }\n\n  renderChildVariants() {\n    let childVariants = [];\n\n    if (this.props.childVariants) {\n      childVariants = this.props.childVariants.map((childVariant, index) => {\n        const media = this.props.childVariantMedia.filter((mediaItem) => {\n          if (mediaItem.metadata.variantId === childVariant._id) {\n            return true;\n          }\n          return false;\n        });\n\n        return (\n          <EditContainer\n            data={childVariant}\n            disabled={this.props.editable === false}\n            editView=\"variantForm\"\n            i18nKeyLabel=\"productDetailEdit.editVariant\"\n            key={index}\n            label=\"Edit Variant\"\n            onEditButtonClick={this.handleChildVariantEditClick}\n            onVisibilityButtonClick={this.handleVariantVisibilityClick}\n            permissions={[\"createProduct\"]}\n            showsVisibilityButton={true}\n          >\n            <ChildVariant\n              isSelected={this.props.variantIsSelected(childVariant._id)}\n              media={media}\n              onClick={this.handleChildleVariantClick}\n              variant={childVariant}\n            />\n          </EditContainer>\n        );\n      });\n    }\n\n    if (childVariants.length) {\n      return [\n        <Divider\n          key=\"availableOptionsDivider\"\n          i18nKeyLabel=\"productDetail.availableOptions\"\n          label=\"Available Options\"\n        />,\n        <div className=\"row variant-product-options\" key=\"childVariantList\">\n          {childVariants}\n        </div>\n      ];\n    }\n\n    return null;\n  }\n\n  render() {\n    return (\n      <div className=\"product-variants\">\n        {this.renderVariants()}\n        {this.renderChildVariants()}\n      </div>\n    );\n  }\n}\n\nVariantList.propTypes = {\n  childVariantMedia: PropTypes.arrayOf(PropTypes.any),\n  childVariants: PropTypes.arrayOf(PropTypes.object),\n  displayPrice: PropTypes.func,\n  editable: PropTypes.bool,\n  isSoldOut: PropTypes.func,\n  onCreateVariant: PropTypes.func,\n  onEditVariant: PropTypes.func,\n  onMoveVariant: PropTypes.func,\n  onVariantClick: PropTypes.func,\n  onVariantVisibiltyToggle: PropTypes.func,\n  variantIsSelected: PropTypes.func,\n  variants: PropTypes.arrayOf(PropTypes.object)\n};\n\nexport default VariantList;\n","export { default as ProductDetailContainer } from \"./productDetailContainer\";\nexport { default as SocialContainer } from \"./socialContainer\";\nexport { default as VariantListContainer } from \"./variantListContainer\";\nexport { default as PublishContainer } from \"./publishContainer\";\n","import { isEmpty } from \"lodash\";\nimport { StyleRoot } from \"radium\";\nimport React, { Component, PropTypes } from \"react\";\nimport { composeWithTracker } from \"/lib/api/compose\";\nimport { Meteor } from \"meteor/meteor\";\nimport { ReactionProduct } from \"/lib/api\";\nimport { Reaction, i18next, Logger } from \"/client/api\";\nimport { Tags, Media, Cart } from \"/lib/collections\";\nimport { Loading } from \"/imports/plugins/core/ui/client/components\";\nimport { ProductDetail, ProductNotFound } from \"../components\";\nimport { SocialContainer, VariantListContainer } from \"./\";\nimport { MediaGalleryContainer } from \"/imports/plugins/core/ui/client/containers\";\nimport { DragDropProvider, TranslationProvider } from \"/imports/plugins/core/ui/client/providers\";\n\nclass ProductDetailContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.animationTimeOut = null;\n    this.textTimeOut = null;\n    this.state = {\n      cartQuantity: 1,\n      click: 0\n    };\n  }\n\n  handleCartQuantityChange = (event, quantity) => {\n    this.setState({\n      cartQuantity: Math.max(quantity, 1)\n    });\n  }\n\n  handleAddToCart = () => {\n    let productId;\n    let quantity;\n    let maxQuantity;\n    let totalQuantity;\n    let storedQuantity = 0;\n    const currentVariant = ReactionProduct.selectedVariant();\n    const currentProduct = ReactionProduct.selectedProduct();\n\n    if (currentVariant) {\n      if (currentVariant.ancestors.length === 1) {\n        const options = ReactionProduct.getVariants(currentVariant._id);\n\n        if (options.length > 0) {\n          Alerts.inline(\"Please choose options before adding to cart\", \"warning\", {\n            placement: \"productDetail\",\n            i18nKey: \"productDetail.chooseOptions\",\n            autoHide: 10000\n          });\n          return [];\n        }\n      }\n\n      if (currentVariant.inventoryPolicy && currentVariant.inventoryQuantity < 1) {\n        Alerts.inline(\"Sorry, this item is out of stock!\", \"warning\", {\n          placement: \"productDetail\",\n          i18nKey: \"productDetail.outOfStock\",\n          autoHide: 10000\n        });\n        return [];\n      }\n\n      if (this.props.storedCart && this.props.storedCart.items) {\n        this.props.storedCart.items.forEach((item) => {\n          if (item.variants._id === currentVariant._id) {\n            storedQuantity = item.quantity;\n          }\n        });\n      }\n\n      quantity = parseInt(this.state.cartQuantity, 10);\n      totalQuantity = quantity + storedQuantity;\n      maxQuantity = currentVariant.inventoryQuantity;\n\n      if (quantity < 1) {\n        quantity = 1;\n      }\n\n      if (currentVariant.inventoryPolicy && quantity > maxQuantity && storedQuantity < maxQuantity) {\n        Alerts.inline(\"Your product quantity has been adjusted to the max quantity in stock\", \"warning\", {\n          placement: \"productDetail\",\n          i18nKey: \"admin.inventoryAlerts.adjustedQuantity\",\n          autoHide: 10000\n        });\n        quantity = maxQuantity - storedQuantity;\n        totalQuantity = maxQuantity;\n      }\n\n      if (currentVariant.inventoryPolicy && totalQuantity > maxQuantity && storedQuantity < maxQuantity && quantity < maxQuantity) {\n        Alerts.inline(\"Your product quantity has been adjusted to the max quantity in stock\", \"warning\", {\n          placement: \"productDetail\",\n          i18nKey: \"admin.inventoryAlerts.adjustedQuantity\",\n          autoHide: 10000\n        });\n        quantity = maxQuantity - storedQuantity;\n        totalQuantity = maxQuantity;\n      }\n\n      if (currentVariant.inventoryPolicy && totalQuantity > maxQuantity) {\n        Alerts.inline(\"Sorry, this item is out of stock!\", \"error\", {\n          placement: \"productDetail\",\n          i18nKey: \"productDetail.outOfStock\",\n          autoHide: 10000\n        });\n        return [];\n      }\n\n      if (!currentProduct.isVisible) {\n        Alerts.inline(\"Publish product before adding to cart.\", \"error\", {\n          placement: \"productDetail\",\n          i18nKey: \"productDetail.publishFirst\",\n          autoHide: 10000\n        });\n      } else {\n        productId = currentProduct._id;\n\n        if (productId) {\n          Meteor.call(\"cart/addToCart\", productId, currentVariant._id, quantity, (error) => {\n            if (error) {\n              Logger.error(error, \"Failed to add to cart.\");\n              return error;\n            }\n            // Reset cart quantity on success\n            this.handleCartQuantityChange(null, 1);\n            this.state.click++;\n\n            return true;\n          });\n        }\n\n        // template.$(\".variant-select-option\").removeClass(\"active\");\n        ReactionProduct.setCurrentVariant(null);\n        // qtyField.val(1);\n        // scroll to top on cart add\n        $(\"html,body\").animate({\n          scrollTop: 0\n        }, 0);\n        // slide out label\n        const addToCartText = i18next.t(\"productDetail.addedToCart\");\n        const addToCartTitle = currentVariant.title || \"\";\n        // Grab and cache the width of the alert to be used in animation\n        const alertWidth = $(\".cart-alert\").width();\n        const direction = i18next.dir() === \"rtl\" ? \"left\" : \"right\";\n        const oppositeDirection = i18next.dir() === \"rtl\" ? \"right\" : \"left\";\n        if ($(\".cart-alert\").css(\"display\") === \"none\") {\n          $(\"#spin\").addClass(\"hidden\");\n          $(\".cart-alert-text\").text(`${quantity} ${addToCartTitle} ${addToCartText}`);\n          this.handleSlideOut(alertWidth, direction, oppositeDirection);\n          this.animationTimeOut = setTimeout(() => {\n            this.handleSlideIn(alertWidth, direction, oppositeDirection);\n          }, 4000);\n        } else {\n          clearTimeout(this.textTimeOut);\n\n          // hides text and display spinner\n          $(\".cart-alert-text\").hide();\n          $(\"#spin\").removeClass(\"hidden\");\n\n          this.textTimeOut = setTimeout(() => {\n            $(\"#spin\").addClass(\"hidden\");\n            $(\".cart-alert-text\").text(`${this.state.click * quantity} ${addToCartTitle} ${addToCartText}`);\n            $(\".cart-alert-text\").fadeIn(\"slow\");\n            this.setState({ click: 0 });\n          }, 2000);\n\n          clearTimeout(this.animationTimeOut);\n          this.animationTimeOut = setTimeout(() => {\n            this.handleSlideIn(alertWidth, direction, oppositeDirection);\n          }, 4000);\n        }\n      }\n    } else {\n      Alerts.inline(\"Select an option before adding to cart\", \"warning\", {\n        placement: \"productDetail\",\n        i18nKey: \"productDetail.selectOption\",\n        autoHide: 8000\n      });\n    }\n\n    return null;\n  }\n\n  handleSlideOut(alertWidth, direction, oppositeDirection) {\n    // Animate slide out\n    return $(\".cart-alert\")\n      .show()\n      .css({\n        [oppositeDirection]: \"auto\",\n        [direction]: -alertWidth\n      })\n      .animate({\n        [oppositeDirection]: \"auto\",\n        [direction]: 0\n      }, 600);\n  }\n\n  handleSlideIn(alertWidth, direction, oppositeDirection) {\n    // Animate slide in\n    return $(\".cart-alert\").animate({\n      [oppositeDirection]: \"auto\",\n      [direction]: -alertWidth\n    }, {\n      duration: 600,\n      complete() {\n        $(\".cart-alert\").hide();\n      }\n    });\n  }\n\n  handleProductFieldChange = (productId, fieldName, value) => {\n    Meteor.call(\"products/updateProductField\", productId, fieldName, value, (error) => {\n      if (error) {\n        Alerts.toast(error.message, \"error\");\n        this.forceUpdate();\n      }\n    });\n  }\n\n  handleViewContextChange = (event, value) => {\n    Reaction.Router.setQueryParams({ as: value });\n  }\n\n  handleDeleteProduct = () => {\n    ReactionProduct.archiveProduct(this.props.product);\n  }\n\n  render() {\n    if (isEmpty(this.props.product)) {\n      return (\n        <ProductNotFound />\n      );\n    }\n    return (\n      <TranslationProvider>\n        <DragDropProvider>\n          <StyleRoot>\n            <ProductDetail\n              cartQuantity={this.state.cartQuantity}\n              mediaGalleryComponent={<MediaGalleryContainer media={this.props.media} />}\n              onAddToCart={this.handleAddToCart}\n              onCartQuantityChange={this.handleCartQuantityChange}\n              onViewContextChange={this.handleViewContextChange}\n              socialComponent={<SocialContainer />}\n              topVariantComponent={<VariantListContainer />}\n              onDeleteProduct={this.handleDeleteProduct}\n              onProductFieldChange={this.handleProductFieldChange}\n              {...this.props}\n            />\n          </StyleRoot>\n        </DragDropProvider>\n      </TranslationProvider>\n    );\n  }\n}\n\nProductDetailContainer.propTypes = {\n  media: PropTypes.arrayOf(PropTypes.object),\n  product: PropTypes.object,\n  storedCart: PropTypes.object\n};\n\nfunction composer(props, onData) {\n  const tagSub = Meteor.subscribe(\"Tags\");\n  const productId = Reaction.Router.getParam(\"handle\");\n  const variantId = Reaction.Router.getParam(\"variantId\");\n  const revisionType = Reaction.Router.getQueryParam(\"revision\");\n  const viewProductAs = Reaction.getUserPreferences(\"reaction-dashboard\", \"viewAs\", \"administrator\");\n\n  let productSub;\n\n  if (productId) {\n    productSub = Meteor.subscribe(\"Product\", productId);\n  }\n\n  if (productSub && productSub.ready() && tagSub.ready() && Reaction.Subscriptions.Cart.ready()) {\n    // Get the product\n    const product = ReactionProduct.setProduct(productId, variantId);\n\n    if (Reaction.hasPermission(\"createProduct\")) {\n      if (!Reaction.getActionView() && Reaction.isActionViewOpen() === true) {\n        Reaction.setActionView({\n          template: \"productAdmin\",\n          data: product\n        });\n      }\n    }\n\n    // Get the product tags\n    if (product) {\n      let tags;\n      if (_.isArray(product.hashtags)) {\n        tags = _.map(product.hashtags, function (id) {\n          return Tags.findOne(id);\n        });\n      }\n\n      let mediaArray = [];\n      const selectedVariant = ReactionProduct.selectedVariant();\n\n      if (selectedVariant) {\n        // Find the media for the selected variant\n        mediaArray = Media.find({\n          \"metadata.variantId\": selectedVariant._id\n        }, {\n          sort: {\n            \"metadata.priority\": 1\n          }\n        }).fetch();\n\n        // If no media found, broaden the search to include other media from parents\n        if (Array.isArray(mediaArray) && mediaArray.length === 0 && selectedVariant.ancestors) {\n          // Loop through ancestors in reverse to find a variant that has media to use\n          for (const ancestor of selectedVariant.ancestors.reverse()) {\n            const media = Media.find({\n              \"metadata.variantId\": ancestor\n            }, {\n              sort: {\n                \"metadata.priority\": 1\n              }\n            }).fetch();\n\n            // If we found some media, then stop here\n            if (Array.isArray(media) && media.length) {\n              mediaArray = media;\n              break;\n            }\n          }\n        }\n      }\n\n      let priceRange;\n      if (selectedVariant && typeof selectedVariant === \"object\") {\n        const childVariants = ReactionProduct.getVariants(selectedVariant._id);\n        // when top variant has no child variants we display only its price\n        if (childVariants.length === 0) {\n          priceRange = selectedVariant.price;\n        } else {\n          // otherwise we want to show child variants price range\n          priceRange = ReactionProduct.getVariantPriceRange();\n        }\n      }\n\n      let productRevision;\n\n      if (revisionType === \"published\") {\n        productRevision = product.__published;\n      }\n\n      let editable;\n\n      if (viewProductAs === \"customer\") {\n        editable = false;\n      } else {\n        editable = Reaction.hasPermission([\"createProduct\"]);\n      }\n\n      const topVariants = ReactionProduct.getTopVariants();\n\n      const storedCart = Cart.findOne();\n\n      onData(null, {\n        variants: topVariants,\n        layout: product.template || \"productDetailSimple\",\n        product: productRevision || product,\n        priceRange,\n        tags,\n        media: mediaArray,\n        editable,\n        viewAs: viewProductAs,\n        hasAdminPermission: Reaction.hasPermission([\"createProduct\"]),\n        storedCart\n      });\n    } else {\n      // onData must be called with composeWithTracker, or else the loading icon will show forever.\n      onData(null, {});\n    }\n  }\n}\n\n// Decorate component and export\nexport default composeWithTracker(composer, Loading)(ProductDetailContainer);\n","import React, { Component, PropTypes } from \"react\";\nimport { Meteor } from \"meteor/meteor\";\nimport { composeWithTracker } from \"/lib/api/compose\";\nimport { Router } from \"/client/api\";\nimport { ReactionProduct } from \"/lib/api\";\nimport { Tags, Media, Products } from \"/lib/collections\";\nimport PublishContainer from \"/imports/plugins/core/revisions/client/containers/publishContainer\";\n\nclass ProductPublishContainer extends Component {\n  handleMetaRemove = (productId, metafield) => {\n    Meteor.call(\"products/removeMetaFields\", productId, metafield);\n  }\n\n  handleProductRestore = (product) => {\n    Meteor.call(\"products/updateProductField\", product._id, \"isDeleted\", false);\n  }\n\n  handleVisibilityChange = (event, isProductVisible) => {\n    // Update main product\n    Meteor.call(\"products/updateProductField\", this.props.product._id, \"isVisible\", isProductVisible);\n\n    const variants = Products.find({\n      ancestors: {\n        $in: [this.props.product._id]\n      }\n    }).fetch();\n\n    variants.map(variant => {\n      // update variant\n      Meteor.call(\"products/updateProductField\", variant._id, \"isVisible\", isProductVisible);\n    });\n  }\n\n  handlePublishActions = (event, action, documentIds) => {\n    if (action === \"archive\") {\n      ReactionProduct.archiveProduct(documentIds);\n    }\n  }\n\n  handlePublishSuccess = (result) => {\n    if (result && result.status === \"success\" && this.props.product) {\n      const productDocument = result.previousDocuments.find((product) => this.props.product._id === product._id);\n\n      if (productDocument && this.props.product.handle !== productDocument.handle) {\n        const newProductPath = Router.pathFor(\"product\", {\n          hash: {\n            handle: this.props.product.handle\n          }\n        });\n\n        window.location.href = newProductPath;\n      }\n    }\n  }\n\n  render() {\n    return (\n      <PublishContainer\n        onAction={this.handlePublishActions}\n        onPublishSuccess={this.handlePublishSuccess}\n        onVisibilityChange={this.handleVisibilityChange}\n        {...this.props}\n      />\n    );\n  }\n}\n\n\nfunction composer(props, onData) {\n  const product = ReactionProduct.selectedProduct();\n  let revisonDocumentIds;\n\n  if (product) {\n    if (_.isArray(product.hashtags)) {\n      tags = _.map(product.hashtags, function (id) {\n        return Tags.findOne(id);\n      });\n    }\n\n    const selectedVariant = ReactionProduct.selectedVariant();\n\n    if (selectedVariant) {\n      media = Media.find({\n        \"metadata.variantId\": selectedVariant._id\n      }, {\n        sort: {\n          \"metadata.priority\": 1\n        }\n      });\n    }\n\n    revisonDocumentIds = [product._id];\n\n    onData(null, {\n      product,\n      documentIds: revisonDocumentIds,\n      documents: [product]\n    });\n  } else {\n    onData(null, {});\n  }\n}\n\nProductPublishContainer.propTypes = {\n  product: PropTypes.object,\n  tags: PropTypes.arrayOf(PropTypes.object)\n};\n\n// Decorate component and export\nexport default composeWithTracker(composer)(ProductPublishContainer);\n","import React, { Component, PropTypes } from \"react\";\nimport { composeWithTracker } from \"/lib/api/compose\";\nimport { ReactionProduct } from \"/lib/api\";\nimport SocialButtons from \"/imports/plugins/included/social/client/components/socialButtons\";\nimport { createSocialSettings } from \"/imports/plugins/included/social/lib/helpers\";\nimport { EditContainer } from \"/imports/plugins/core/ui/client/containers\";\nimport { Media } from \"/lib/collections\";\n\nclass ProductSocialContainer extends Component {\n  render() {\n    return (\n      <EditContainer\n        data={this.props.data}\n        editView=\"ProductAdmin\"\n        field={[\"facebookMsg\", \"twitterMsg\", \"googleplusMsg\", \"pinterestMsg\"]}\n        i18nKeyLabel=\"productDetailEdit.editSocial\"\n        label=\"Edit Social Messaging\"\n        permissions={[\"createProduct\"]}\n      >\n        <SocialButtons {...this.props.socialSettings} />\n      </EditContainer>\n    );\n  }\n}\n\nfunction composer(props, onData) {\n  const product = ReactionProduct.selectedProduct() || {};\n  const selectedVariant = ReactionProduct.selectedVariant() || {};\n  let title = product.title;\n  let mediaUrl;\n\n  if (selectedVariant) {\n    title = selectedVariant.title;\n  }\n\n  let description;\n\n  if (typeof product.description === \"string\") {\n    description = product.description.substring(0, 254);\n  }\n\n  const media = Media.findOne({\n    \"metadata.variantId\": {\n      $in: [\n        selectedVariant._id,\n        product._id\n      ]\n    }\n  }, {\n    sort: {\n      \"metadata.priority\": 1\n    }\n  });\n\n  if (media) {\n    mediaUrl = media.url();\n  }\n\n  const options = {\n    data: product,\n    title: product.title,\n    description,\n    placement: \"productDetail\",\n    buttonClassName: \"fa-lg\",\n    media: mediaUrl,\n    apps: {\n      facebook: {\n        description: product.facebookMsg || description,\n        media: mediaUrl\n      },\n      twitter: {\n        description: product.twitterMsg || title,\n        media: mediaUrl\n      },\n      googleplus: {\n        itemtype: \"Product\",\n        description: product.googleplusMsg || description,\n        media: mediaUrl\n      },\n      pinterest: {\n        description: product.pinterestMsg || description,\n        media: mediaUrl\n      }\n    }\n  };\n\n  const socialSettings = createSocialSettings(options);\n\n  onData(null, {\n    data: product,\n    socialSettings\n  });\n}\n\nProductSocialContainer.propTypes = {\n  data: PropTypes.object,\n  socialSettings: PropTypes.object\n};\n\nexport default composeWithTracker(composer)(ProductSocialContainer);\n","import React, { Component, PropTypes } from \"react\";\nimport { composeWithTracker } from \"/lib/api/compose\";\nimport { ReactionProduct } from \"/lib/api\";\nimport { Reaction, i18next } from \"/client/api\";\nimport { VariantList } from \"../components\";\nimport { getChildVariants } from \"../selectors/variants\";\nimport { Products, Media } from \"/lib/collections\";\nimport update from \"react/lib/update\";\nimport { getVariantIds } from \"/lib/selectors/variants\";\nimport { DragDropProvider } from \"/imports/plugins/core/ui/client/providers\";\n\nfunction variantIsSelected(variantId) {\n  const current = ReactionProduct.selectedVariant();\n  if (current && typeof current === \"object\" && (variantId === current._id || ~current.ancestors.indexOf(variantId))) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction variantIsInActionView(variantId) {\n  const actionViewVariant = Reaction.getActionView().data;\n\n  if (actionViewVariant) {\n    // Check if the variant is selected, and also visible & selected in the action view\n    return variantIsSelected(variantId) && variantIsSelected(actionViewVariant._id) && Reaction.isActionViewOpen();\n  }\n\n  return false;\n}\n\nfunction getTopVariants() {\n  let inventoryTotal = 0;\n  const variants = ReactionProduct.getTopVariants();\n  if (variants.length) {\n    // calculate inventory total for all variants\n    for (const variant of variants) {\n      if (variant.inventoryManagement) {\n        const qty = ReactionProduct.getVariantQuantity(variant);\n        if (typeof qty === \"number\") {\n          inventoryTotal += qty;\n        }\n      }\n    }\n    // calculate percentage of total inventory of this product\n    for (const variant of variants) {\n      const qty = ReactionProduct.getVariantQuantity(variant);\n      variant.inventoryTotal = inventoryTotal;\n      if (variant.inventoryManagement && inventoryTotal) {\n        variant.inventoryPercentage = parseInt(qty / inventoryTotal * 100, 10);\n      } else {\n        // for cases when sellers doesn't use inventory we should always show\n        // \"green\" progress bar\n        variant.inventoryPercentage = 100;\n      }\n      if (variant.title) {\n        variant.inventoryWidth = parseInt(variant.inventoryPercentage -\n          variant.title.length, 10);\n      } else {\n        variant.inventoryWidth = 0;\n      }\n    }\n    // sort variants in correct order\n    variants.sort((a, b) => a.index - b.index);\n\n    return variants;\n  }\n  return [];\n}\n\nfunction isSoldOut(variant) {\n  return ReactionProduct.getVariantQuantity(variant) < 1;\n}\n\nclass VariantListContainer extends Component {\n  componentWillReceiveProps() {\n    this.setState({});\n  }\n\n  get variants() {\n    return (this.state && this.state.variants) || this.props.variants;\n  }\n\n  get productHandle() {\n    const selectedProduct = ReactionProduct.selectedProduct();\n    return selectedProduct.__published && selectedProduct.__published.handle || selectedProduct.handle;\n  }\n\n  handleCreateVariant = () => {\n    const selectedProduct =  ReactionProduct.selectedProduct();\n\n    Meteor.call(\"products/createVariant\", selectedProduct._id, (error) => {\n      if (error) {\n        Alerts.alert({\n          text: i18next.t(\"productDetailEdit.addVariantFail\", { title: selectedProduct.title }),\n          confirmButtonText: i18next.t(\"app.close\", { defaultValue: \"Close\" })\n        });\n      }\n    });\n  }\n\n  handleVariantClick = (event, variant, ancestors = -1) => {\n    if (Reaction.isActionViewOpen()) {\n      this.handleEditVariant(event, variant, ancestors);\n    } else {\n      ReactionProduct.setCurrentVariant(variant._id);\n      Session.set(\"variant-form-\" + variant._id, true);\n      Reaction.Router.go(\"product\", {\n        handle: this.productHandle,\n        variantId: variant._id\n      }, {\n        as: Reaction.Router.getQueryParam(\"as\")\n      });\n    }\n  }\n\n  handleEditVariant = (event, variant, ancestors = -1) => {\n    let editVariant = variant;\n    if (ancestors >= 0) {\n      editVariant = Products.findOne(variant.ancestors[ancestors]);\n    }\n\n    ReactionProduct.setCurrentVariant(variant._id);\n    Session.set(\"variant-form-\" + editVariant._id, true);\n    Reaction.Router.go(\"product\", {\n      handle: this.productHandle,\n      variantId: variant._id\n    }, {\n      as: Reaction.Router.getQueryParam(\"as\")\n    });\n\n    if (Reaction.hasPermission(\"createProduct\")) {\n      Reaction.showActionView({\n        label: \"Edit Variant\",\n        i18nKeyLabel: \"productDetailEdit.editVariant\",\n        template: \"variantForm\",\n        data: editVariant\n      });\n    }\n\n    // Prevent the default edit button `onEditButtonClick` function from running\n    return false;\n  }\n\n  handleVariantVisibilityToggle = (event, variant, variantIsVisible) => {\n    Meteor.call(\"products/updateProductField\", variant._id, \"isVisible\", variantIsVisible);\n  }\n\n  handleMoveVariant = (dragIndex, hoverIndex) => {\n    const variant = this.props.variants[dragIndex];\n\n    // Apply new sort order to variant list\n    const newVariantOrder = update(this.props.variants, {\n      $splice: [\n        [dragIndex, 1],\n        [hoverIndex, 0, variant]\n      ]\n    });\n\n    // Set local state so the component does't have to wait for a round-trip\n    // to the server to get the updated list of variants\n    this.setState({\n      variants: newVariantOrder\n    });\n\n    // Save the updated positions\n    Meteor.defer(() => {\n      Meteor.call(\"products/updateVariantsPosition\", getVariantIds(newVariantOrder));\n    });\n  }\n\n  render() {\n    return (\n      <DragDropProvider>\n        <VariantList\n          onEditVariant={this.handleEditVariant}\n          onMoveVariant={this.handleMoveVariant}\n          onVariantClick={this.handleVariantClick}\n          onVariantVisibiltyToggle={this.handleVariantVisibilityToggle}\n          onCreateVariant={this.handleCreateVariant}\n          {...this.props}\n          variants={this.variants}\n        />\n      </DragDropProvider>\n    );\n  }\n}\n\nfunction composer(props, onData) {\n  let childVariantMedia = [];\n  const childVariants = getChildVariants();\n\n  if (Array.isArray(childVariants)) {\n    childVariantMedia = Media.find({\n      \"metadata.variantId\": {\n        $in: getVariantIds(childVariants)\n      }\n    }, {\n      sort: {\n        \"metadata.priority\": 1\n      }\n    }).fetch();\n  }\n\n  let editable;\n\n  if (Reaction.isPreview() === true) {\n    editable = false;\n  } else {\n    editable = Reaction.hasPermission([\"createProduct\"]);\n  }\n\n  onData(null, {\n    variants: getTopVariants(),\n    variantIsSelected,\n    variantIsInActionView,\n    childVariants,\n    childVariantMedia,\n    displayPrice: ReactionProduct.getVariantPriceRange,\n    isSoldOut: isSoldOut,\n    editable\n  });\n}\n\nVariantListContainer.propTypes = {\n  variants: PropTypes.arrayOf(PropTypes.object)\n};\n\nexport default composeWithTracker(composer)(VariantListContainer);\n","import { ReactionProduct } from \"/lib/api\";\n\nexport function getChildVariants() {\n  const childVariants = [];\n  const variants = ReactionProduct.getVariants();\n  if (variants.length > 0) {\n    const current = ReactionProduct.selectedVariant();\n\n    if (!current) {\n      return [];\n    }\n\n    if (current.ancestors.length === 1) {\n      variants.map(variant => {\n        if (typeof variant.ancestors[1] === \"string\" &&\n          variant.ancestors[1] === current._id &&\n          variant.optionTitle &&\n          variant.type !== \"inventory\") {\n          childVariants.push(variant);\n        }\n      });\n    } else {\n      // TODO not sure we need this part...\n      variants.map(variant => {\n        if (typeof variant.ancestors[1] === \"string\" &&\n          variant.ancestors.length === current.ancestors.length &&\n          variant.ancestors[1] === current.ancestors[1] &&\n          variant.optionTitle\n        ) {\n          childVariants.push(variant);\n        }\n      });\n    }\n\n    return childVariants;\n  }\n\n  return null;\n}\n","import \"./templates/productDetailSimple.html\";\nimport \"./templates/productDetailSimple.js\";\nimport { registerComponent } from \"/imports/plugins/core/layout/lib/components\";\n\nimport {\n  ProductField,\n  ProductTags,\n  ProductMetadata,\n  PriceRange,\n  AddToCartButton,\n  ProductNotFound\n} from \"./components\";\n\nimport {\n  Divider\n} from \"/imports/plugins/core/ui/client/components\";\n\nimport {\n  SocialContainer,\n  VariantListContainer\n} from \"./containers\";\n\nimport {\n  AlertContainer,\n  MediaGalleryContainer\n} from \"/imports/plugins/core/ui/client/containers\";\n\n\n// Register PDP components and some others\nregisterComponent({\n  name: \"ProductField\",\n  component: ProductField\n});\n\nregisterComponent({\n  name: \"ProductTags\",\n  component: ProductTags\n});\n\nregisterComponent({\n  name: \"ProductMetadata\",\n  component: ProductMetadata\n});\n\nregisterComponent({\n  name: \"PriceRange\",\n  component: PriceRange\n});\n\nregisterComponent({\n  name: \"AlertContainer\",\n  component: AlertContainer\n});\n\nregisterComponent({\n  name: \"MediaGalleryContainer\",\n  component: MediaGalleryContainer\n});\n\nregisterComponent({\n  name: \"SocialContainer\",\n  component: SocialContainer\n});\n\nregisterComponent({\n  name: \"VariantListContainer\",\n  component: VariantListContainer\n});\n\nregisterComponent({\n  name: \"AddToCartButton\",\n  component: AddToCartButton\n});\n\nregisterComponent({\n  name: \"Divider\",\n  component: Divider\n});\n\nregisterComponent({\n  name: \"ProductNotFound\",\n  component: ProductNotFound\n});\n","import { Template } from \"meteor/templating\";\nimport { Reaction, i18next } from \"/client/api\";\nimport { Packages } from \"/lib/collections\";\nimport { SearchPackageConfig } from \"../../lib/collections/schemas\";\n\n\nTemplate.searchSettings.helpers({\n  SearchPackageConfig() {\n    return SearchPackageConfig;\n  },\n  packageData() {\n    return Packages.findOne({\n      name: \"reaction-search\",\n      shopId: Reaction.getShopId()\n    });\n  }\n});\n\n\nTemplate.searchSettings.events({\n  \"click [data-event-action=showSearchSettings]\"() {\n    Reaction.showActionView();\n  }\n});\n\nAutoForm.hooks({\n  \"search-update-form\": {\n    /* eslint-disable no-unused-vars*/\n    onSuccess: function () {\n      Alerts.removeSeen();\n      return Alerts.toast(i18next.t(\"searchSettings.settingsSaved\"),\n        \"success\");\n    },\n    onError: function (operation, error) {\n      Alerts.removeSeen();\n      return Alerts.toast(\n        `${i18next.t(\"searchSettings.settingsFailed\")} ${error}`, \"error\"\n      );\n    }\n    /* eslint-enable no-unused-vars*/\n  }\n});\n","import \"./settings/search.html\";\nimport \"./settings/search.js\";\n\n","export * from \"./search\";\n","import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\nimport { PackageConfig } from \"/lib/collections/schemas/registry\";\n\nexport const SearchPackageConfig = new SimpleSchema([\n  PackageConfig, {\n    \"settings.products.includes.title\": {\n      type: Boolean,\n      defaultValue: true,\n      label: \"Include title\"\n    },\n    \"settings.products.weights.title\": {\n      type: Number,\n      label: \"Title weight\",\n      defaultValue: 10,\n      max: 10,\n      min: 1\n    },\n    \"settings.products.includes.description\": {\n      type: Boolean,\n      label: \"Include description\",\n      defaultValue: true\n    },\n    \"settings.products.weights.description\": {\n      type: Number,\n      label: \"Desc. weight\",\n      defaultValue: 5,\n      max: 10,\n      min: 1\n    },\n    \"settings.products.includes.pageTitle\": {\n      type: Boolean,\n      label: \"Include page title\",\n      defaultValue: false\n    },\n    \"settings.products.weights.pageTitle\": {\n      type: Number,\n      label: \"Page title weight\",\n      defaultValue: 2,\n      max: 10,\n      min: 1\n    },\n    \"settings.products.includes.metafields\": {\n      type: Boolean,\n      label: \"Include details\",\n      defaultValue: true\n    },\n    \"settings.products.weights.metafields\": {\n      type: Number,\n      label: \"Details weight\",\n      defaultValue: 6,\n      max: 10,\n      min: 1\n    },\n    \"settings.products.includes.vendor\": {\n      type: Boolean,\n      label: \"Include vendor\",\n      defaultValue: true\n    },\n    \"settings.products.weights.vendor\": {\n      type: Number,\n      label: \"Vendor weight\",\n      defaultValue: 6,\n      max: 10,\n      min: 1\n    }\n  }\n]);\n","import { Template } from \"meteor/templating\";\nimport { ReactiveDict } from \"meteor/reactive-dict\";\nimport { AutoForm } from \"meteor/aldeed:autoform\";\nimport { Shipping } from \"/lib/collections\";\nimport { i18next } from \"/client/api\";\nimport MeteorGriddle from \"/imports/plugins/core/ui-grid/client/griddle\";\nimport { Loading } from \"/imports/plugins/core/ui/client/components\";\n\nimport \"./carriers.html\";\n\nTemplate.shippoCarriers.onCreated(function () {\n  this.autorun(() => {\n    this.subscribe(\"Shipping\");\n  });\n\n  this.state = new ReactiveDict();\n  this.state.setDefault({\n    isEditing: false,\n    editingId: null\n  });\n});\n\nTemplate.shippoCarriers.helpers({\n  carrierGrid() {\n    const filteredFields = [\"name\", \"carrier\", \"label\", \"enabled\"];\n    const noDataMessage = i18next.t(\"admin.shippingSettings.noCarriersFound\");\n    const instance = Template.instance();\n\n    // griddle helper to select row\n    function editRow(options) {\n      const currentId = instance.state.get(\"editingId\");\n      // isEditing is shipping rate object\n      instance.state.set(\"isEditing\", options.props.data);\n      instance.state.set(\"editingId\", options.props.data._id);\n      // toggle edit mode clicking on same row\n      if (currentId === options.props.data._id) {\n        instance.state.set(\"isEditing\", null);\n        instance.state.set(\"editingId\", null);\n      }\n    }\n\n    // add shipping-carriers-grid-row class\n    const customRowMetaData = {\n      bodyCssClassName: () =>  {\n        return \"shipping-carriers-grid-row\";\n      }\n    };\n\n    // add i18n handling to headers\n    const customColumnMetadata = [];\n    filteredFields.forEach(function (field) {\n      const columnMeta = {\n        columnName: field,\n        displayName: i18next.t(`admin.shippingGrid.${field}`)\n      };\n      customColumnMetadata.push(columnMeta);\n    });\n\n    // filter and extract shipping methods\n    // from flat rate shipping provider\n    function transform(results) {\n      const result = [];\n      for (const method of results) {\n        if (method.provider && typeof method.provider.shippoProvider === \"object\") {\n          method.provider.carrier = method.name;\n          result.push(method.provider);\n        }\n      }\n      return result;\n    }\n\n    // return shipping Grid\n    return {\n      component: MeteorGriddle,\n      publication: \"Shipping\",\n      transform: transform,\n      collection: Shipping,\n      showFilter: true,\n      useGriddleStyles: false,\n      rowMetadata: customRowMetaData,\n      filteredFields: filteredFields,\n      columns: filteredFields,\n      noDataMessage: noDataMessage,\n      onRowClick: editRow,\n      columnMetadata: customColumnMetadata,\n      externalLoadingComponent: Loading\n    };\n  },\n\n  instance() {\n    const instance = Template.instance();\n    return instance;\n  },\n\n  shippoCarrier() {\n    const instance = Template.instance();\n    const id = instance.state.get(\"editingId\");\n    const shippoCarriers = Shipping.findOne({ \"provider._id\": id });\n    return shippoCarriers.provider;\n  }\n});\n\n//\n// on submit lets clear the form state\n//\nTemplate.shippoCarriers.events({\n  \"submit #shipping-carrier-insert-form\": function () {\n    const instance = Template.instance();\n    instance.state.set({\n      isEditing: true,\n      editingId: null\n    });\n  },\n  \"click .cancel, .shipping-carriers-grid-row .active\": function () {\n    instance = Template.instance();\n    // remove active rows from grid\n    instance.state.set({\n      isEditing: false,\n      editingId: null\n    });\n    // ugly hack\n    $(\".shipping-carriers-grid-row\").removeClass(\"active\");\n  },\n  \"click .shipping-carriers-grid-row\": function (event) {\n    // toggle all rows off, then add our active row\n    $(\".shipping-carriers-grid-row\").removeClass(\"active\");\n    Template.instance().$(event.currentTarget).addClass(\"active\");\n  }\n});\n\n//\n// Hooks for update and insert forms\n//\nAutoForm.hooks({\n  \"shipping-carrier-update-form\": {\n    onSuccess: function () {\n      return Alerts.toast(i18next.t(\"admin.shippingSettings.carrierSaved\"),\n        \"success\");\n    },\n    onError: function (operation, error) {\n      return Alerts.toast(\n        `${i18next.t(\"admin.shippingSettings.carrierFailed\")} ${error}`, \"error\"\n      );\n    }\n  }\n});\n","import { Template } from \"meteor/templating\";\nimport { Reaction, i18next } from \"/client/api\";\nimport { Packages } from \"/lib/collections\";\nimport { ShippoPackageConfig } from \"../../lib/collections/schemas\";\n\nimport \"./shippo.html\";\n\nTemplate.shippoSettings.helpers({\n  packageData() {\n    return Packages.findOne({\n      name: \"reaction-shippo\",\n      shopId: Reaction.getShopId()\n    });\n  },\n  ShippoPackageConfig() {\n    return ShippoPackageConfig;\n  }\n});\n\nTemplate.shippoSettings.events({\n  \"click [data-event-action=fetchShippoProviders]\"(event) {\n    event.preventDefault();\n    Meteor.call(\"shippo/fetchProviders\");\n  }\n});\n\nAutoForm.hooks({\n  \"shippo-update-form\": {\n    onSuccess(formType, result) {\n      Alerts.removeSeen();\n      const successMsg = (result.type === \"delete\") ? i18next.t(\"admin.settings.saveSuccess\") :\n                                                   i18next.t(\"shippo.connectedAndSaved\");\n\n      return Alerts.toast(successMsg, \"success\", {\n        autoHide: true\n      });\n    },\n    onError(operation, error) {\n      Alerts.removeSeen();\n\n      return Alerts.toast(`Shippo settings update failed. ${error}`, \"error\");\n    }\n  }\n});\n","import \"./settings/shippo\";\nimport \"./settings/carriers\";\n","export * from \"./shippo\";\n","import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\nimport { PackageConfig } from \"/lib/collections/schemas/registry\";\n\nexport const ShippoPackageConfig = new SimpleSchema([\n  PackageConfig, {\n    \"settings.apiKey\": {\n      type: String,\n      label: \"API Key\",\n      min: 10,\n      optional: true\n    }\n  }\n]);\n","import { Template } from \"meteor/templating\";\nimport SmsSettings from \"../containers/smsSettingsContainer\";\n\nTemplate.smsSettings.helpers({\n  SmsSettings() {\n    return {\n      component: SmsSettings\n    };\n  }\n});\n","export { default as settings } from \"./settings\";\n","import Alert from \"sweetalert2\";\nimport { i18next } from \"/client/api\";\n\nexport default {\n\n  /**\n   * Save email settings\n   * @param {Object} settings - object of mail provider settings\n   * @param {Function} callback - optional callback\n   * @return {Boolean} returns true if all fields provided and update method called\n   */\n  saveSettings(settings, callback) {\n    const { apiKey, apiToken, smsProvider, smsPhone } = settings;\n\n    if (!apiKey) {\n      Alert(i18next.t(\"app.error\"), i18next.t(\"admin.alerts.noApiKey\"), \"error\");\n      return callback();\n    }\n    if (!apiToken) {\n      Alert(i18next.t(\"app.error\"), i18next.t(\"admin.alerts.noApiToken\"), \"error\");\n      return callback();\n    }\n    if (!smsProvider) {\n      Alert(i18next.t(\"app.error\"), i18next.t(\"admin.alerts.noSmsProvider\"), \"error\");\n      return callback();\n    }\n    if (!smsPhone) {\n      Alert(i18next.t(\"app.error\"), i18next.t(\"admin.alerts.noSmsPhone\"), \"error\");\n      return callback();\n    }\n\n    const save = () => {\n      Meteor.call(\"sms/saveSettings\", settings, (err) => {\n        if (err) {\n          return Alert(i18next.t(\"app.error\"),\n           \"Your API credentials could not be saved\",\n            \"error\");\n        }\n        return Alert({\n          title: i18next.t(\"app.success\"),\n          text: i18next.t(\"admin.alerts.saveSuccess\"),\n          type: \"success\",\n          timer: 1700\n        }).catch(() => null);\n      });\n    };\n    save();\n    return callback();\n  }\n};\n","import React, { Component, PropTypes } from \"react\";\nimport { Button, Card, CardHeader, CardBody, CardGroup, TextField, Select } from \"/imports/plugins/core/ui/client/components\";\n\nclass SmsSettings extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      settings: props.settings || {},\n      isSaving: false\n    };\n    this.handleStateChange = this.handleStateChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n  }\n\n  handleStateChange(e) {\n    const { settings } = this.state;\n    settings[e.target.name] = e.target.value;\n    this.setState({ settings });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const { saveSettings } = this.props;\n    const { settings } = this.state;\n    this.setState({ isSaving: true });\n    saveSettings(settings, () => this.setState({ isSaving: false }));\n  }\n\n  handleSelect(e) {\n    const { settings } = this.state;\n    settings.smsProvider = e;\n    this.setState({ settings });\n  }\n\n  handleProductFieldSave = (productId, fieldName, value) => {\n    let updateValue = value;\n    // special case, slugify handles.\n    if (fieldName === \"handle\") {\n      updateValue = Reaction.getSlug(value);\n    }\n    Meteor.call(\"products/updateProductField\", productId, fieldName, updateValue);\n  }\n\n\n  render() {\n    const settings = this.state.settings;\n    const isSaving = this.state.isSaving;\n\n    const smsProviders = [{\n      label: \"Twilio\", value: \"twilio\"\n    }, {\n      label: \"Nexmo\", value: \"nexmo\"\n    }];\n\n    return (\n      <CardGroup>\n        <Card\n          expanded={true}\n        >\n          <CardHeader\n            actAsExpander={true}\n            i18nKeyTitle=\"admin.settings.smsProvider\"\n            title=\"SMS Provider\"\n          />\n          <CardBody expandable={true}>\n            <form onSubmit={this.handleSubmit}>\n              <Select\n                clearable={false}\n                label=\"Provider Name\"\n                i18nKeyLabel=\"admin.settings.providerName\"\n                placeholder=\"Select an SMS provider\"\n                i18nKeyPlaceholder=\"admin.settings.selectProvider\"\n                name=\"smsProvider\"\n                onChange={this.handleSelect}\n                options={smsProviders}\n                value={settings.smsProvider || \"\"}\n              />\n              <hr/>\n              <TextField\n                label=\"SMS Phone Number\"\n                type=\"text\"\n                i18nKeyLabel=\"admin.settings.phoneNumber\"\n                name=\"smsPhone\"\n                value={settings.smsPhone || \"\"}\n                onChange={this.handleStateChange}\n              />\n              <TextField\n                label=\"API Key\"\n                type=\"password\"\n                i18nKeyLabel=\"admin.settings.apiKey\"\n                name=\"apiKey\"\n                value={settings.apiKey || \"\"}\n                onChange={this.handleStateChange}\n              />\n              <TextField\n                label=\"API Token/Secret\"\n                type=\"password\"\n                i18nKeyLabel=\"admin.settings.apiToken\"\n                name=\"apiToken\"\n                value={settings.apiToken || \"\"}\n                onChange={this.handleStateChange}\n              />\n              <Button\n                bezelStyle=\"solid\"\n                status=\"primary\"\n                className=\"pull-right\"\n                type=\"submit\" disabled={isSaving}\n              >\n                {isSaving ?\n                    <i className=\"fa fa-refresh fa-spin\"/>\n                  : <span data-i18n=\"app.save\">Save</span>}\n              </Button>\n            </form>\n          </CardBody>\n        </Card>\n      </CardGroup>\n    );\n  }\n}\n\nSmsSettings.propTypes = {\n  saveSettings: PropTypes.func.isRequired,\n  settings: PropTypes.shape({\n    apiKey: PropTypes.string,\n    apiToken: PropTypes.string,\n    smsPhone: PropTypes.string,\n    smsProvider: PropTypes.string\n  })\n};\n\nexport default SmsSettings;\n","import { composeWithTracker, merge } from \"/lib/api/compose\";\nimport { useDeps } from \"react-simple-di\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Loading } from \"/imports/plugins/core/ui/client/components\";\nimport { Sms } from \"/lib/collections\";\nimport actions from \"../actions\";\nimport SmsSettings from \"../components/smsSettings\";\n\n\nconst composer = ({}, onData) => {\n  if (Meteor.subscribe(\"SmsSettings\").ready()) {\n    const settings = Sms.findOne();\n    onData(null, { settings: settings });\n  }\n};\n\nconst depsMapper = () => ({\n  saveSettings: actions.settings.saveSettings\n});\n\nexport default merge(\n  composeWithTracker(composer, Loading),\n  useDeps(depsMapper)\n)(SmsSettings);\n","import \"./templates/smsSettings.html\";\nimport \"./templates/smsSettings.js\";\n","import _ from \"lodash\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Template } from \"meteor/templating\";\nimport { Reaction, i18next } from \"/client/api\";\nimport { Packages, Accounts } from \"/lib/collections\";\nimport { Accounts as AccountsSchema } from \"/lib/collections/schemas/accounts\";\nimport { TaxEntityCodes } from \"/client/collections\";\n\nlet entityCodeList = [];\nlet currentAccount;\n\nTemplate.taxSettingsPanel.onCreated(function () {\n  this.subscribe(\"UserAccount\", Meteor.userId());\n});\n\nTemplate.taxSettingsPanel.helpers({\n  account() {\n    if (Template.instance().subscriptionsReady()) {\n      const account = Accounts.findOne(this.member.userId);\n      currentAccount = account;\n      return account;\n    }\n\n    return null;\n  },\n  makeUniqueId() {\n    return `tax-settings-form-${this.member.userId}`;\n  },\n  accountsSchema() {\n    return AccountsSchema;\n  },\n  entityCodes() {\n    const customOption = [{\n      label: i18next.t(\"admin.taxSettings.entityCodeCustomLabel\"),\n      value: \"CUSTOM USER INPUT\"\n    }];\n\n    const entityCodes = TaxEntityCodes.find().map((entityCode) => {\n      return Object.assign({}, entityCode, {\n        label: entityCode.name,\n        value: entityCode.code\n      });\n    });\n    entityCodeList = (entityCodes || []).map((a) => a.code);\n    return (entityCodes || []).concat(customOption);\n  }\n});\n\nTemplate.taxSettingsPanel.events({\n  \"change [data-event-action=customType]\": function (event) {\n    event.stopPropagation();\n    const formId = $(event.currentTarget.closest(\"form\")).attr(\"id\");\n\n    if (isCustomValue(formId)) {\n      // show input field for custom; pre-fill with existing custom val\n      const currType = _.get(currentAccount, \"taxSettings.customerUsageType\", \"\");\n      if (entityCodeList.indexOf(currType) < 0) {\n        $(\".customerUsageType input\").val(currType);\n      }\n      return $(\".customerUsageType\").toggleClass(\"hide\");\n    }\n\n    $(\".customerUsageType\").addClass(\"hide\");\n  }\n});\n\nTemplate.taxSettingsPanel.onCreated(function () {\n  const avalaraPackage = Packages.findOne({\n    name: \"taxes-avalara\",\n    shopId: Reaction.getShopId()\n  });\n  const isAvalaraEnabled = _.get(avalaraPackage, \"settings.avalara.enabled\", false);\n  const currentCodes = TaxEntityCodes.find().fetch();\n\n  if (isAvalaraEnabled && !currentCodes.length) {\n    Meteor.call(\"avalara/getEntityCodes\", (error, entityCodes) => {\n      if (error) {\n        return Alerts.toast(\n          `${i18next.t(\"settings.apiError\")} ${error.message}`, \"error\"\n        );\n      }\n      (entityCodes || []).forEach((entityCode) => TaxEntityCodes.insert(entityCode));\n    });\n  }\n});\n\nAutoForm.addHooks(null, {\n  before: {\n    update: function (doc) {\n      const oldType = _.get(Template.instance(), \"data.doc.taxSettings.customerUsageType\");\n      if (isCustomValue()) {\n        const value = $(\".customerUsageType input\").val();\n        doc.$set[\"taxSettings.customerUsageType\"] = value;\n      }\n      if (oldType && entityCodeList.indexOf(oldType) < 0) {\n        delete doc.$unset; // there's existing custom value.... this prevent autoform override\n      }\n\n      return doc;\n    }\n  }\n});\n\n/**\n * @summary Checks if customerUsageType is set to \"custom\"\n * @param {String} formId - Id of the Autoform instance..\n * @returns {boolean} - true if Custom Entity Type is set\n */\nfunction isCustomValue(formId) {\n  const formData = AutoForm.getFormValues(formId);\n  const value = _.get(formData, \"insertDoc.taxSettings.customerUsageType\");\n  return value === \"CUSTOM USER INPUT\";\n}\n","/* eslint react/prop-types:0, react/jsx-sort-props:0, react/forbid-prop-types: 0, \"react/prefer-es6-class\": [1, \"never\"] */\nimport _ from \"lodash\";\nimport React from \"react\";\nimport moment from \"moment\";\nimport Griddle from \"griddle-react\";\nimport { Counts } from \"meteor/tmeasday:publish-counts\";\nimport { ReactMeteorData } from \"meteor/react-meteor-data\";\n\nconst LogGriddle = React.createClass({\n  propTypes: {\n    collection: React.PropTypes.object,\n    matchingResultsCount: React.PropTypes.string,\n    publication: React.PropTypes.string,\n    subscriptionParams: React.PropTypes.object\n  },\n  mixins: [ReactMeteorData],\n\n  getInitialState() {\n    return {\n      currentPage: 0,\n      maxPages: 0,\n      externalResultsPerPage: this.props.externalResultsPerPage,\n      externalSortColumn: this.props.externalSortColumn,\n      externalSortAscending: this.props.externalSortAscending\n    };\n  },\n\n  getMeteorData() {\n    const matchingResults = Counts.get(this.props.matchingResultsCount);\n    const pubHandle = Meteor.subscribe(this.props.publication, this.props.subscriptionParams);\n    const rawResults = this.props.collection.find({}).fetch();\n    let results;\n    if (rawResults) {\n      results = rawResults.map((o) => {\n        return {\n          date: moment(o.data).format(\"MM/DD/YYYY HH:mm:ss\"),\n          docType: _.get(o, \"data.request.data.type\", \"\"),\n          request: JSON.stringify(o.data.request),\n          result: JSON.stringify(o.data.result),\n          _id: o._id\n        };\n      });\n    }\n\n    return {\n      loading: !pubHandle.ready(),\n      results,\n      matchingResults\n    };\n  },\n\n  setPage(index) {\n    this.setState({ currentPage: index });\n  },\n\n  render() {\n    const maxPages = Math.ceil(this.data.matchingResults / this.state.externalResultsPerPage);\n    const allProps = this.props;\n\n    return (\n      <Griddle\n        {...allProps}\n        tableClassName=\"table\"\n        results={this.data.results}\n        columnMetaData={this.props.columnMetaData}\n        externalSetPage={this.setPage}\n        externalSetPageSize={this.setPageSize}\n        externalMaxPage={maxPages}\n        externalSortColumn={this.state.externalSortColumn}\n        externalSortAscending={this.state.externalSortAscending}\n        externalIsLoading={this.data.loading}\n      />\n    );\n  }\n\n});\n\nexport default LogGriddle;\n","import _ from \"lodash\";\nimport { Template } from \"meteor/templating\";\nimport { ReactiveDict } from \"meteor/reactive-dict\";\nimport { Meteor } from \"meteor/meteor\";\nimport { AutoForm } from \"meteor/aldeed:autoform\";\nimport { Countries } from \"/client/collections\";\nimport { Reaction, i18next } from \"/client/api\";\nimport { Packages, Logs } from \"/lib/collections\";\nimport { Logs as LogSchema } from \"/lib/collections/schemas/logs\";\nimport { AvalaraPackageConfig } from \"../../lib/collections/schemas\";\nimport LogGriddle from \"./avagriddle\";\nimport { Loading } from \"/imports/plugins/core/ui/client/components\";\n\n\nfunction getPackageData() {\n  return Packages.findOne({\n    name: \"taxes-avalara\",\n    shopId: Reaction.getShopId()\n  });\n}\n\n\nTemplate.avalaraSettings.onCreated(function () {\n  this.autorun(() => {\n    this.subscribe(\"Logs\", {\n      logType: \"avalara\"\n    });\n  });\n\n  this.state = new ReactiveDict();\n  this.state.setDefault({\n    isEditing: false,\n    editingId: null\n  });\n});\n\n// Avalara supports only Canada and US for address validation\nconst countryDefaults = [\"US\", \"CA\"];\n\nTemplate.avalaraSettings.helpers({\n  packageConfigSchema() {\n    return AvalaraPackageConfig;\n  },\n  packageData() {\n    return getPackageData();\n  },\n  logSchema() {\n    return LogSchema;\n  },\n  logCollection() {\n    return Logs;\n  },\n  countryOptions() {\n    return Countries.find({ value: { $in: countryDefaults } }).fetch();\n  },\n  countryDefaults() {\n    return countryDefaults;\n  },\n  currentCountryList() {\n    return AutoForm.getFieldValue(\"settings.addressValidation.countryList\");\n  },\n  loggingEnabled() {\n    const pkgData = getPackageData();\n    return pkgData.settings.avalara.enableLogging;\n  },\n\n  logGrid() {\n    const fields = [\"date\", \"docType\"];\n    const noDataMessage = i18next.t(\"logGrid.noLogsFound\");\n    const instance = Template.instance();\n\n    function editRow(options) {\n      const currentId = instance.state.get(\"editingId\");\n      instance.state.set(\"isEditing\", options.props.data);\n      instance.state.set(\"editingId\", options.props.data._id);\n      // toggle edit mode clicking on same row\n      if (currentId === options.props.data._id) {\n        instance.state.set(\"isEditing\", null);\n        instance.state.set(\"editingId\", null);\n      }\n    }\n\n    // helper adds a class to every grid row\n    const customRowMetaData = {\n      bodyCssClassName: () =>  {\n        return \"log-grid-row\";\n      }\n    };\n\n    // add i18n handling to headers\n    const customColumnMetadata = [];\n    fields.forEach(function (field) {\n      const columnMeta = {\n        columnName: field,\n        displayName: i18next.t(`logGrid.columns.${field}`)\n      };\n      customColumnMetadata.push(columnMeta);\n    });\n\n    // return template Grid\n    return {\n      component: LogGriddle,\n      publication: \"Logs\",\n      collection: Logs,\n      matchingResultsCount: \"logs-count\",\n      useGriddleStyles: false,\n      rowMetadata: customRowMetaData,\n      columns: fields,\n      noDataMessage: noDataMessage,\n      onRowClick: editRow,\n      columnMetadata: customColumnMetadata,\n      externalLoadingComponent: Loading,\n      subscriptionParams: { logType: \"avalara\" }\n    };\n  },\n\n  instance() {\n    const instance = Template.instance();\n    return instance;\n  },\n\n  logEntry() {\n    const instance = Template.instance();\n    const id = instance.state.get(\"editingId\");\n    const log = Logs.findOne(id) || {};\n    log.data = JSON.stringify(log.data, null, 4);\n    return log;\n  }\n\n\n});\n\nTemplate.avalaraSettings.events({\n  \"click .template-grid-row\": function (event) {\n    // toggle all rows off, then add our active row\n    $(\".template-grid-row\").removeClass(\"active\");\n    Template.instance().$(event.currentTarget).addClass(\"active\");\n  },\n  \"click [data-event-action=testCredentials]\": function (event) {\n    const formId = \"avalara-update-form\";\n    if (!AutoForm.validateForm(formId)) {\n      return null;\n    }\n    event.preventDefault();\n    event.stopPropagation();\n    const formData = AutoForm.getFormValues(formId);\n    const settings = _.get(formData, \"insertDoc.settings.avalara\");\n\n    Meteor.call(\"avalara/testCredentials\", settings, function (error, result) {\n      if (error && error.message) {\n        return Alerts.toast(`${i18next.t(\"settings.testCredentialsFailed\")} ${error.message}`, \"error\");\n      }\n      const statusCode = _.get(result, \"statusCode\");\n      const connectionValid = _.inRange(statusCode, 400);\n      if (connectionValid) {\n        return Alerts.toast(i18next.t(\"settings.testCredentialsSuccess\"), \"success\");\n      }\n      return Alerts.toast(i18next.t(\"settings.testCredentialsFailed\"), \"error\");\n    });\n  }\n});\n\nAutoForm.hooks({\n  \"avalara-update-form\": {\n    onSuccess: function () {\n      return Alerts.toast(i18next.t(\"admin.taxSettings.shopTaxMethodsSaved\"),\n        \"success\");\n    },\n    onError: function (operation, error) {\n      return Alerts.toast(\n        `${i18next.t(\"admin.taxSettings.shopTaxMethodsFailed\")} ${error}`, \"error\"\n      );\n    }\n  }\n});\n","import \"./settings/avalara.html\";\nimport \"./accounts/exemption.html\";\nimport \"./settings/avalara.js\";\nimport \"./accounts/exemption.js\";\nimport \"./styles/settings.less\";\n","export * from \"./schema\";\n","import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\nimport { TaxPackageConfig } from \"/imports/plugins/core/taxes/lib/collections/schemas\";\n\n/**\n* TaxPackageConfig Schema\n*/\n\nexport const AvalaraPackageConfig = new SimpleSchema([\n  TaxPackageConfig, {\n    \"settings.avalara\": {\n      type: Object,\n      optional: true\n    },\n    \"settings.avalara.enabled\": {\n      type: Boolean,\n      optional: true,\n      defaultValue: false\n    },\n    \"settings.avalara.apiLoginId\": {\n      type: String,\n      label: \"Avalara API Login ID\"\n    },\n    \"settings.avalara.username\": {\n      type: String\n    },\n    \"settings.avalara.companyCode\": {\n      type: String\n    },\n    \"settings.avalara.companyId\": {\n      type: String\n    },\n    \"settings.avalara.password\": {\n      type: String\n    },\n    \"settings.avalara.mode\": {\n      label: \"Production Mode\",\n      type: Boolean,\n      defaultValue: false\n    },\n    \"settings.avalara.shippingTaxCode\": {\n      label: \"Shipping Tax Code\",\n      type: String\n    },\n    \"settings.addressValidation.enabled\": {\n      label: \"Address Validation\",\n      type: Boolean,\n      defaultValue: true\n    },\n    \"settings.avalara.commitDocuments\": {\n      label: \"Commit Documents\",\n      type: Boolean,\n      defaultValue: true\n    },\n    \"settings.avalara.performTaxCalculation\": {\n      label: \"Perform Tax Calculation\",\n      type: Boolean,\n      defaultValue: true\n    },\n    \"settings.avalara.enableLogging\": {\n      label: \"Enable Transaction Logging\",\n      type: Boolean,\n      defaultValue: false\n    },\n    \"settings.avalara.logRetentionDuration\": {\n      label: \"Retain Logs Duration (Days)\",\n      type: Number,\n      defaultValue: 30\n    },\n    \"settings.avalara.requestTimeout\": {\n      label: \"Request Timeout\",\n      type: Number,\n      defaultValue: 1500\n    },\n    \"settings.addressValidation.countryList\": {\n      label: \"Enable Address Validation by Country\",\n      type: [String],\n      optional: true\n    }\n  }\n]);\n","import { Template } from \"meteor/templating\";\nimport { AutoForm } from \"meteor/aldeed:autoform\";\nimport { Packages } from \"/lib/collections\";\nimport { Reaction, i18next } from \"/client/api\";\nimport { TaxCloudPackageConfig } from \"../../lib/collections/schemas\";\n\nTemplate.taxCloudSettings.helpers({\n  packageConfigSchema() {\n    return TaxCloudPackageConfig;\n  },\n  packageData() {\n    return Packages.findOne({\n      name: \"taxes-taxcloud\",\n      shopId: Reaction.getShopId()\n    });\n  }\n});\n\n\nAutoForm.hooks({\n  \"taxcloud-update-form\": {\n    onSuccess: function () {\n      return Alerts.toast(i18next.t(\"admin.taxSettings.shopTaxMethodsSaved\"),\n        \"success\");\n    },\n    onError: function (operation, error) {\n      return Alerts.toast(\n        `${i18next.t(\"admin.taxSettings.shopTaxMethodsFailed\")} ${error}`, \"error\"\n      );\n    }\n  }\n});\n","import \"./settings/taxcloud.html\";\nimport \"./settings/taxcloud.js\";\n","export * from \"./schema\";\n","import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\nimport { TaxPackageConfig } from \"/imports/plugins/core/taxes/lib/collections/schemas\";\n\n/**\n* TaxPackageConfig Schema\n*/\n\nexport const TaxCloudPackageConfig = new SimpleSchema([\n  TaxPackageConfig, {\n    \"settings.taxcloud\": {\n      type: Object,\n      optional: true\n    },\n    \"settings.taxcloud.enabled\": {\n      type: Boolean,\n      optional: true,\n      defaultValue: false\n    },\n    \"settings.taxcloud.apiLoginId\": {\n      type: String,\n      label: \"TaxCloud API Login ID\"\n    },\n    \"settings.taxcloud.apiKey\": {\n      type: String,\n      label: \"TaxCloud API Key\"\n    },\n    \"settings.taxcloud.refreshPeriod\": {\n      type: String,\n      label: \"TaxCode Refresh Period\",\n      defaultValue: \"every 7 days\",\n      optional: true\n    },\n    \"settings.taxcloud.taxCodeUrl\": {\n      type: String,\n      label: \"TaxCode API Url\",\n      defaultValue: \"https://taxcloud.net/tic/?format=json\",\n      optional: true\n    }\n  }\n]);\n","import { Template } from \"meteor/templating\";\nimport { AutoForm } from \"meteor/aldeed:autoform\";\nimport { Packages } from \"/lib/collections\";\nimport { Reaction, i18next } from \"/client/api\";\nimport { TaxJarPackageConfig } from \"../../lib/collections/schemas\";\n\nTemplate.taxJarSettings.helpers({\n  packageConfigSchema() {\n    return TaxJarPackageConfig;\n  },\n  packageData() {\n    return Packages.findOne({\n      name: \"taxes-taxjar\",\n      shopId: Reaction.getShopId()\n    });\n  }\n});\n\n\nAutoForm.hooks({\n  \"taxjar-update-form\": {\n    onSuccess: function () {\n      return Alerts.toast(i18next.t(\"admin.taxSettings.shopTaxMethodsSaved\"),\n        \"success\");\n    },\n    onError: function (operation, error) {\n      return Alerts.toast(\n        `${i18next.t(\"admin.taxSettings.shopTaxMethodsFailed\")} ${error}`, \"error\"\n      );\n    }\n  }\n});\n","import \"./settings/taxjar.html\";\nimport \"./settings/taxjar.js\";\n","export * from \"./schema\";\n","import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\nimport { TaxPackageConfig } from \"/imports/plugins/core/taxes/lib/collections/schemas\";\n\n/**\n* TaxPackageConfig Schema\n*/\n\nexport const TaxJarPackageConfig = new SimpleSchema([\n  TaxPackageConfig, {\n    \"settings.taxjar\": {\n      type: Object,\n      optional: true\n    },\n    \"settings.taxjar.enabled\": {\n      type: Boolean,\n      optional: true,\n      defaultValue: false\n    },\n    \"settings.taxjar.apiLoginId\": {\n      type: String,\n      label: \"TaxJar API Login ID\",\n      optional: true\n    }\n  }\n]);\n","/**\n * Set up default Reaction favicon for all browsers/platforms\n * Assets generated by https://realfavicongenerator.net\n */\n\n\n// folder path where all assets live\nconst basePath = \"https://assets.reactioncommerce.com/favicon/\";\n\n\n// define link tags\nconst linkTags = [\n  {\n    rel: \"apple-touch-icon\",\n    sizes: \"180x180\",\n    href: basePath + \"apple-touch-icon.png\"\n  },\n  {\n    rel: \"icon\",\n    type: \"image/png\",\n    sizes: \"32x32\",\n    href: basePath + \"favicon-32x32.png\"\n  },\n  {\n    rel: \"icon\",\n    type: \"image/png\",\n    sizes: \"16x16\",\n    href: basePath + \"favicon-16x16.png\"\n  },\n  {\n    rel: \"manifest\",\n    href: basePath + \"manifest.json\"\n  },\n  {\n    rel: \"mask-icon\",\n    color: \"#5bbad5\",\n    href: basePath + \"safari-pinned-tab.svg\"\n  },\n  {\n    rel: \"shortcut icon\",\n    href: basePath + \"favicon.ico\"\n  }\n];\n\n\n// define meta tags\nconst metaTags = [\n  {\n    name: \"msapplication-config\",\n    content: basePath + \"browserconfig.xml\"\n  },\n  {\n    name: \"theme-color\",\n    content: \"#ffffff\"\n  }\n];\n\n\n/**\n * Add a tag to the <head> of the page\n * @param {String} type - tag type (link, meta, etc.)\n * @param {Object} details - key/value pairs for tag attributes\n * @return {undefined} no return value\n */\nfunction addTag(type, details) {\n  let props = \"\";\n  for (const key in details) {\n    if ({}.hasOwnProperty.call(details, key)) {\n      props += `${key}=\"${details[key]}\" `;\n    }\n  }\n  const tag = `<${type} ${props}/>`;\n  document.getElementsByTagName(\"head\")[0].insertAdjacentHTML(\"beforeend\", tag);\n}\n\n\n// add the favicon tags to the <head>\nlinkTags.forEach(tag => addTag(\"link\", tag));\nmetaTags.forEach(tag => addTag(\"meta\", tag));\n\n\n// HTML output should look like this...\n//\n// <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"https://assets.reactioncommerce.com/favicon/apple-touch-icon.png\">\n// <link rel=\"icon\" type=\"image/png\" href=\"https://assets.reactioncommerce.com/favicon/favicon-32x32.png\" sizes=\"32x32\">\n// <link rel=\"icon\" type=\"image/png\" href=\"https://assets.reactioncommerce.com/favicon/favicon-16x16.png\" sizes=\"16x16\">\n// <link rel=\"manifest\" href=\"https://assets.reactioncommerce.com/favicon/manifest.json\">\n// <link rel=\"mask-icon\" href=\"https://assets.reactioncommerce.com/favicon/safari-pinned-tab.svg\" color=\"#5bbad5\">\n// <link rel=\"shortcut icon\" href=\"https://assets.reactioncommerce.com/favicon/favicon.ico\">\n// <meta name=\"msapplication-config\" content=\"https://assets.reactioncommerce.com/favicon/browserconfig.xml\">\n// <meta name=\"theme-color\" content=\"#ffffff\">\n","// Favicons\nimport \"./favicons\";\n\n// Scripts\nimport \"bootstrap/dist/js/npm.js\";\n","import { Meteor } from \"meteor/meteor\";\nimport { Session } from \"meteor/session\";\nimport { Reaction, i18next } from \"/client/api\";\nimport { Orders } from \"/lib/collections\";\nimport { Template } from \"meteor/templating\";\n\n/**\n * cartCompleted helpers\n *\n * if order status = new translate submitted message\n */\nTemplate.cartCompleted.helpers({\n  orderCompleted: function () {\n    const id = Reaction.Router.getQueryParam(\"_id\");\n    if (id) {\n      const ccoSub = Meteor.subscribe(\"CompletedCartOrder\", Meteor.userId(), id);\n      if (ccoSub.ready()) {\n        return true;\n      }\n    }\n    return false;\n  },\n  order: function () {\n    return Orders.findOne({\n      userId: Meteor.userId(),\n      cartId: Reaction.Router.getQueryParam(\"_id\")\n    });\n  },\n  orderStatus: function () {\n    switch (this.workflow.status) {\n      case \"new\":\n        return i18next.t(\"cartCompleted.submitted\");\n      case \"coreOrderWorkflow/processing\":\n        return i18next.t(\"cartCompleted.processing\");\n      case \"coreOrderWorkflow/completed\":\n        return i18next.t(\"cartCompleted.completed\");\n      default:\n        return this.workflow.status;\n    }\n  },\n  userOrders: function () {\n    if (Meteor.user()) {\n      return Orders.find({\n        userId: Meteor.userId(),\n        cartId: this._id\n      });\n    }\n    return {};\n  }\n});\n\n/**\n * cartCompleted events\n *\n * adds email to order\n */\nTemplate.cartCompleted.events({\n  \"click #update-order\": function () {\n    const templateInstance = Template.instance();\n    const email = templateInstance.find(\"input[name=email]\").value;\n    check(email, String);\n    const cartId = Reaction.Router.getQueryParam(\"_id\");\n\n    return Meteor.call(\"orders/addOrderEmail\", cartId, email, (err) => {\n      if (err) {\n        Alerts.toast(i18next.t(\"mail.alerts.cantSendEmail\"), \"error\");\n      } else {\n        const order = Orders.findOne({\n          userId: Meteor.userId(),\n          cartId: Reaction.Router.getQueryParam(\"_id\")\n        });\n        Meteor.call(\"orders/sendNotification\", order);\n      }\n    });\n  }\n});\n\n/**\n * cartCompleted onCreated\n *\n * when the order is completed we need to destroy and recreate\n * the subscription to get the new cart\n */\nTemplate.cartCompleted.onCreated(function () {\n  const sessionId = Session.get(\"sessionId\");\n  const userId = Meteor.userId();\n  const cartSub = Reaction.Subscriptions.Cart = Meteor.subscribe(\"Cart\", sessionId, userId);\n  cartSub.stop();\n  Reaction.Subscriptions.Cart = Meteor.subscribe(\"Cart\", sessionId, userId);\n});\n","import { Reaction } from \"/client/api\";\nimport { Cart } from \"/lib/collections\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Template } from \"meteor/templating\";\n\n/**\n * checkoutLoginCompleted\n * returns true if we've already past this stage,\n * or if the user is a guest but not anonymous\n */\n\nTemplate.checkoutLogin.helpers({\n  checkoutLoginCompleted: function () {\n    const self = this;\n    const cart = Cart.findOne();\n    if (cart && cart.workflow) {\n      const currentStatus = cart.workflow.status;\n      const guestUser = Reaction.hasPermission(\"guest\", Meteor.user());\n      const anonUser = Roles.userIsInRole(\"anonymous\", Meteor.user(), Reaction.getShopId());\n\n      if (currentStatus !== self.template && guestUser === true && anonUser === false) {\n        return true;\n      }\n    }\n    return false;\n  }\n});\n","import _ from \"lodash\";\nimport { Cart } from \"/lib/collections\";\nimport { Template } from \"meteor/templating\";\n\n/**\n * checkoutProgressBar helpers\n * progressbar status: \"visited first\",\"previous visited\",\"active\",\"next\"\n */\n\nTemplate.checkoutProgressBar.helpers({\n  progressbarStatusClass() {\n    const cartWorkflow = Cart.findOne().workflow;\n    const thisStep = cartWorkflow.status === this.template; // active\n    const previouslyVisited = _.includes(cartWorkflow.workflow, this.template);\n\n    if (previouslyVisited === true && thisStep === false) {\n      return \"visited\";\n    } else if (thisStep === true) {\n      return \"visited active\";\n    }\n    return \"\";\n  }\n});\n","import \"./review.html\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Template } from \"meteor/templating\";\nimport CartSubTotals from \"../../../container/cartSubTotalContainer\";\n\n/**\n* review status\n* trigger checkoutPayment step on template checkoutReview render\n*/\n\nTemplate.checkoutReview.onRendered(function () {\n  Meteor.call(\"workflow/pushCartWorkflow\", \"coreCartWorkflow\", \"checkoutReview\");\n});\n\nTemplate.checkoutReview.helpers({\n  CartSubTotals() {\n    return CartSubTotals;\n  }\n});\n","import { Reaction } from \"/client/api\";\nimport { Cart } from \"/lib/collections\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Template } from \"meteor/templating\";\nimport \"./checkout.html\";\n\n//\n// cartCheckout is a wrapper template\n// controlling the load order of checkout step templates\n//\n\nTemplate.cartCheckout.helpers({\n  cart() {\n    if (Reaction.Subscriptions.Cart.ready()) {\n      return Cart.findOne();\n    }\n    return {};\n  }\n});\n\n\nTemplate.cartCheckout.onCreated(function () {\n  if (Reaction.Subscriptions.Cart.ready()) {\n    const cart = Cart.findOne();\n    if (cart && cart.workflow && cart.workflow.status === \"new\") {\n        // if user logged in as normal user, we must pass it through the first stage\n      Meteor.call(\"workflow/pushCartWorkflow\", \"coreCartWorkflow\", \"checkoutLogin\", cart._id);\n    }\n  }\n});\n\n/**\n * checkoutSteps Helpers\n * helper isPending evaluates that this is\n * the current step, or has been processed already\n */\nTemplate.checkoutSteps.helpers({\n  isCompleted: function () {\n    if (this.status === true) {\n      return this.status;\n    }\n    return false;\n  },\n\n  isPending: function () {\n    if (this.status === this.template) {\n      return this.status;\n    }\n    return false;\n  }\n});\n\n/**\n * checkoutStepBadge Helpers\n */\nTemplate.checkoutStepBadge.helpers({\n  checkoutStepBadgeClass: function () {\n    const workflowStep = Template.instance().data;\n    // let currentStatus = Cart.findOne().workflow.status;\n    if (workflowStep.status === true || workflowStep.status === this.template) {\n      return \"active\";\n    }\n    return \"\";\n  }\n});\n","import { Cart } from \"/lib/collections\";\nimport { Session } from \"meteor/session\";\nimport { Template } from \"meteor/templating\";\nimport Swiper from \"swiper\";\nimport CartDrawerContainer from \"../../container/cartDrawerContainer\";\nimport EmptyCartDrawer from \"../../container/emptyCartContainer\";\n/**\n * cartDrawer helpers\n *\n * @provides displayCartDrawer\n * @returns  open or closed cart drawer template\n */\n\nTemplate.cartDrawer.helpers({\n  displayCartDrawer: function () {\n    if (!Session.equals(\"displayCart\", true)) {\n      return null;\n    }\n\n    const storedCart = Cart.findOne();\n    let count = 0;\n\n    if (typeof storedCart === \"object\" && storedCart.items) {\n      for (const items of storedCart.items) {\n        count += items.quantity;\n      }\n    }\n\n    if (count === 0) {\n      return Template.emptyCartDrawer;\n    }\n    return Template.openCartDrawer;\n  }\n});\n\n/**\n * openCartDrawer helpers\n *\n */\nTemplate.openCartDrawer.onRendered(function () {\n  /**\n   * Add swiper to openCartDrawer\n   *\n   */\n\n  let swiper;\n\n  $(\"#cart-drawer-container\").fadeIn(() => {\n    if (!swiper) {\n      swiper = new Swiper(\".cart-drawer-swiper-container\", {\n        direction: \"horizontal\",\n        setWrapperSize: true,\n        loop: false,\n        grabCursor: true,\n        slidesPerView: \"auto\",\n        wrapperClass: \"cart-drawer-swiper-wrapper\",\n        slideClass: \"cart-drawer-swiper-slide\",\n        slideActiveClass: \"cart-drawer-swiper-slide-active\",\n        pagination: \".cart-drawer-pagination\",\n        paginationClickable: true\n      });\n    }\n  });\n});\n\nTemplate.openCartDrawer.helpers({\n  CartDrawerContainer() {\n    return CartDrawerContainer;\n  }\n});\n\nTemplate.emptyCartDrawer.onRendered(function () {\n  return $(\"#cart-drawer-container\").fadeIn();\n});\n\nTemplate.emptyCartDrawer.helpers({\n  EmptyCartDrawer() {\n    return EmptyCartDrawer;\n  }\n});\n","import { Reaction } from \"/client/api\";\nimport { Cart } from \"/lib/collections\";\nimport { Template } from \"meteor/templating\";\n\n/**\n * cartIcon helpers\n *\n */\nTemplate.cartIcon.helpers({\n  cart() {\n    return Cart.findOne();\n  }\n});\n\nTemplate.cartIcon.events({\n  \"click .cart-icon\"() {\n    return $(\"#cart-drawer-container\").fadeOut(300, function () {\n      return Reaction.toggleSession(\"displayCart\");\n    });\n  }\n});\n","import React, { Component, PropTypes } from \"react\";\nimport { Button } from \"/imports/plugins/core/ui/client/components\";\n\nclass CartPanel extends Component {\n  render() {\n    return (\n      <div style={{ textAlign: \"center\" }}>\n        <span id=\"spin\" >\n          <i className=\"fa fa-circle-o-notch fa-spin fa-3x fa-fw\"\n            style={{ marginBottom: \"10px\", marginTop: \"10px\", fontSize: \"2.65em\" }}\n          />\n        </span>\n        <div className=\"cart-alert-text\">{}</div>\n        <div className=\"cart-alert-checkout\">\n          <Button\n            id=\"btn-checkout\"\n            bezelStyle=\"solid\"\n            className=\"btn-lg btn-block\"\n            i18nKeyLabel=\"cartDrawer.checkout\"\n            label=\"Checkout now\"\n            onClick={this.props.onClick || this.props.checkout}\n            status=\"success\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nCartPanel.propTypes = {\n  checkout: PropTypes.func,\n  onClick: PropTypes.func\n};\n\nexport default CartPanel;\n","import React, { Component } from \"react\";\nimport { Reaction } from \"/client/api\";\nimport CartPanel from \"../component/cartPanel\";\n\nclass CartPanelContainer extends Component {\n  handleCheckout() {\n    $(\"#cart-drawer-container\").fadeOut();\n    Session.set(\"displayCart\", false);\n    return Reaction.Router.go(\"cart/checkout\");\n  }\n  render() {\n    return (\n      <CartPanel\n        checkout={this.handleCheckout}\n      />\n    );\n  }\n}\n\nexport default CartPanelContainer;\n","import React, { PropTypes } from \"react\";\nimport CartSubTotals from \"../container/cartSubTotalContainer\";\nimport CartItems from \"./cartItems\";\n\nconst cartDrawer = ({ productItems, pdpPath, handleRemoveItem, handleCheckout, handleImage, handleLowInventory, handleShowProduct }) => {\n  return (\n    <div>\n      <div className=\"cart-drawer-swiper-container\">\n        <div className=\"cart-drawer-swiper-wrapper\">\n          <div className=\"cart-drawer-swiper-slide\">\n            <CartSubTotals />\n          </div>\n          {productItems.map(item => {\n            return (\n              <div className=\"cart-drawer-swiper-slide\" key={item._id}>\n                <CartItems\n                  item={item}\n                  pdpPath={pdpPath}\n                  handleLowInventory={handleLowInventory}\n                  handleImage={handleImage}\n                  handleRemoveItem={handleRemoveItem}\n                  handleShowProduct={handleShowProduct}\n                />\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      <div className=\"cart-drawer-pagination\" />\n      <div className=\"row\">\n        <span className=\"rui btn btn-cta btn-lg btn-block\" id=\"btn-checkout\" data-i18n=\"cartDrawer.checkout\" onClick={handleCheckout}>\n          Checkout now\n          </span>\n      </div>\n    </div>\n  );\n};\n\ncartDrawer.propTypes = {\n  handleCheckout: PropTypes.func,\n  handleImage: PropTypes.func,\n  handleLowInventory: PropTypes.func,\n  handleRemoveItem: PropTypes.func,\n  handleShowProduct: PropTypes.func,\n  pdpPath: PropTypes.func,\n  productItems: PropTypes.array\n};\n\nexport default cartDrawer;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass CartItems extends Component {\n  static propTypes = {\n    handleImage: PropTypes.func,\n    handleLowInventory: PropTypes.func,\n    handleRemoveItem: PropTypes.func,\n    handleShowProduct: PropTypes.func,\n    item: PropTypes.object,\n    pdpPath: PropTypes.func\n  }\n\n  handleClick = (event) => {\n    event.preventDefault();\n\n    if (typeof this.props.handleShowProduct === \"function\") {\n      this.props.handleShowProduct(this.props.item);\n    }\n  }\n\n  render() {\n    const {\n      handleLowInventory,\n      pdpPath,\n      handleImage,\n      handleRemoveItem,\n      item\n    } = this.props;\n\n    return (\n      <div className=\"cart-items\" key={item._id} style={{ display: \"inline-block\" }}>\n        <i className=\"remove-cart-item fa fa-times fa-lg\"\n          id={item._id}\n          onClick={handleRemoveItem}\n        />\n        <a href={pdpPath(item)}\n          data-event-action=\"product-click\"\n          data-event-value={item.productId}\n          onClick={this.handleClick}\n        >\n          {handleImage(item) ?\n            <div className=\"center-cropped\" style={{ backgroundImage: `url(${handleImage(item).url({ store: \"small\" })})` }}>\n              <img src={handleImage(item).url({ store: \"small\" })} className=\"product-grid-item-images img-responsive\" />\n            </div> :\n            <div className=\"center-cropped\" style={{ backgroundImage: \"url('/resources/placeholder.gif')\" }}>\n              <img src=\"/resources/placeholder.gif\" className=\"product-grid-item-images img-responsive\" />\n            </div>\n          }\n        </a>\n        <div className=\"cart-labels\">\n          {handleLowInventory(item) ?\n            <div className=\"badge badge-low-inv-warning\"\n              title={item.variants.inventoryQuantity}\n              data-i18n=\"cartDrawerItems.left\"\n            >!</div> :\n            <div>\n              <span className=\"badge\" style={{ marginRight: \"3px\" }}>{item.quantity}</span>\n              <span className=\"cart-item-title\">\n                {item.title}\n                <br />\n                <small>{item.variants.title}</small>\n              </span>\n            </div>\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CartItems;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Currency, Translation } from \"/imports/plugins/core/ui/client/components/\";\n\nclass CartSubTotal extends Component {\n  static propTypes = {\n    cartCount: PropTypes.number,\n    cartDiscount: PropTypes.string,\n    cartShipping: PropTypes.string,\n    cartSubTotal: PropTypes.string,\n    cartTaxes: PropTypes.string,\n    cartTotal: PropTypes.string\n  }\n\n  validateDiscount() {\n    if (Number(this.props.cartDiscount) > 0) {\n      return (\n        <tr>\n          <td><Translation defaultValue=\"Discount\" i18nKey=\"cartSubTotals.discount\" /></td>\n          <td><Currency amount={this.props.cartDiscount} /></td>\n        </tr>\n      );\n    }\n  }\n  validateShipping() {\n    if (Number(this.props.cartShipping) > 0) {\n      return (\n        <tr>\n          <td><Translation defaultValue=\"Shipping\" i18nKey=\"cartSubTotals.shipping\" /></td>\n          <td><Currency amount={this.props.cartShipping} /></td>\n        </tr>\n      );\n    }\n  }\n  validateTaxes() {\n    if (Number(this.props.cartTaxes) > 0) {\n      return (\n        <tr>\n          <td><Translation defaultValue=\"Tax\" i18nKey=\"cartSubTotals.tax\" /></td>\n          <td><Currency amount={this.props.cartTaxes} /></td>\n        </tr>\n      );\n    }\n  }\n  render() {\n    return (\n      <div className=\"cart-items\">\n        <div className=\"cart-totals\">\n          <table className=\"table table-condensed\">\n            <thead>\n              <tr><th><Translation defaultValue=\"Your cart\" i18nKey=\"cartSubTotals.head\" /></th></tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td><Translation defaultValue=\"Items in cart\" i18nKey=\"cartSubTotals.items\" /></td>\n                <td>{this.props.cartCount}</td>\n              </tr>\n              <tr>\n                <td><Translation defaultValue=\"Sub total\" i18nKey=\"cartSubTotals.subtotal\" /></td>\n                <td><Currency amount={this.props.cartSubTotal} /></td>\n              </tr>\n              {this.validateDiscount()}\n              {this.validateShipping()}\n              {this.validateTaxes()}\n              <tr>\n                <td><Translation defaultValue=\"Total\" i18nKey=\"cartSubTotals.total\" /></td>\n                <td><Currency amount={this.props.cartTotal} /></td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CartSubTotal;\n","import React, { PropTypes } from \"react\";\nimport { Button, Translation } from \"/imports/plugins/core/ui/client/components\";\n\n\nconst EmptyCartDrawer = ({ keepShopping }) => {\n  return (\n    <div className=\"cart-drawer\" id=\"cart-drawer\">\n      <div className=\"cart-drawer-empty\">\n        <div className=\"row cart-drawer-empty-msg\">\n          <p className=\"text-align\">\n            <i className=\"fa fa-frown-o fa-lg\" />\n          </p>\n          <p className=\"text-align\">\n            <Translation defaultValue=\"We're sad. Your cart is empty.\" i18nKey=\"cartDrawer.empty\" />\n          </p>\n        </div>\n        <div className=\"row\">\n          <Button\n            id=\"btn-keep-shopping\"\n            bezelStyle=\"solid\"\n            className=\"btn-lg btn-block\"\n            i18nKeyLabel=\"cartDrawer.keepShopping\"\n            label=\"Keep on shopping\"\n            onClick={keepShopping}\n            status=\"warning\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nEmptyCartDrawer.propTypes = {\n  keepShopping: PropTypes.func\n};\n\nexport default EmptyCartDrawer;\n","import React, { Component, PropTypes } from \"react\";\nimport { Session } from \"meteor/session\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Cart, Media } from \"/lib/collections\";\nimport { Reaction } from \"/client/api\";\nimport { composeWithTracker } from \"/lib/api/compose\";\nimport { Loading } from \"/imports/plugins/core/ui/client/components\";\nimport CartDrawer from \"../components/cartDrawer\";\n\nclass CartDrawerContainer extends Component {\n  static propTypes = {\n    defaultImage: PropTypes.object,\n    lowInventory: PropTypes.bool,\n    productItems: PropTypes.array\n  }\n\n  handleImage(item) {\n    const { defaultImage } = item;\n    if (defaultImage && defaultImage.url({ store: \"small\" })) {\n      return defaultImage;\n    }\n    return false;\n  }\n  /**\n  * showLowInventoryWarning\n  * @param {Object} productItem - product item object\n  * @return {Boolean} return true if low inventory on variant\n  */\n  showItemLowInventoryWarning(productItem) {\n    const { variants } = productItem;\n    if (variants && variants.inventoryPolicy &&\n      variants.lowInventoryWarningThreshold) {\n      return variants.inventoryQuantity <=\n        variants.lowInventoryWarningThreshold;\n    }\n    return false;\n  }\n\n  handleLowInventory = (productItem) => {\n    return this.showItemLowInventoryWarning(productItem);\n  }\n\n  handleShowProduct = (productItem) => {\n    if (productItem) {\n      Reaction.Router.go(\"product\", {\n        handle: productItem.productId,\n        variantId: productItem.variants._id\n      });\n    }\n  }\n\n  pdpPath(productItem) {\n    if (productItem) {\n      const handle = productItem.productId;\n      return Reaction.Router.pathFor(\"product\", {\n        hash: {\n          handle,\n          variantId: productItem.variants._id\n        }\n      });\n    }\n  }\n\n  handleRemoveItem(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    const currentCartItemId = event.target.getAttribute(\"id\");\n    $(`#${currentCartItemId}`).fadeOut(500, () => {\n      return Meteor.call(\"cart/removeFromCart\", currentCartItemId);\n    });\n  }\n  handleCheckout() {\n    $(\"#cart-drawer-container\").fadeOut();\n    Session.set(\"displayCart\", false);\n    return Reaction.Router.go(\"cart/checkout\");\n  }\n  render() {\n    const { productItems } = this.props;\n    return (\n      <CartDrawer\n        productItems={productItems}\n        pdpPath={this.pdpPath}\n        handleLowInventory={this.handleLowInventory}\n        handleImage={this.handleImage}\n        handleRemoveItem={this.handleRemoveItem}\n        handleCheckout={this.handleCheckout}\n        handleShowProduct={this.handleShowProduct}\n      />\n    );\n  }\n}\n\nfunction composer(props, onData) {\n  const userId = Meteor.userId();\n  const shopId = Reaction.getShopId();\n  let productItems = Cart.findOne({ userId, shopId }).items;\n  let defaultImage;\n\n  productItems = productItems.map((item) => {\n    Meteor.subscribe(\"CartItemImage\", item);\n    defaultImage = Media.findOne({\n      \"metadata.variantId\": item.variants._id\n    });\n    if (defaultImage) {\n      return Object.assign({}, item, { defaultImage });\n    }\n    defaultImage = Media.findOne({\n      \"metadata.productId\": item.productId\n    });\n    return Object.assign({}, item, { defaultImage });\n  });\n  onData(null, {\n    productItems\n  });\n}\n\nexport default composeWithTracker(composer, Loading)(CartDrawerContainer);\n","import React, { Component } from \"react\";\nimport { Cart } from \"/lib/collections\";\nimport { composeWithTracker } from \"/lib/api/compose\";\nimport { Loading } from \"/imports/plugins/core/ui/client/components\";\nimport CartSubTotal from \"../components/cartSubTotal\";\n\nclass CartSubTotalContainer extends Component {\n  render() {\n    return (\n      <CartSubTotal\n        {...this.props}\n      />\n    );\n  }\n\n}\n\nfunction composer(props, onData) {\n  const cart = Cart.findOne();\n  if (cart) {\n    onData(null, {\n      cartSubTotal: cart.cartSubTotal(),\n      cartCount: cart.cartCount(),\n      cartShipping: cart.cartShipping(),\n      cartDiscount: cart.cartDiscounts(),\n      cartTaxes: cart.cartTaxes(),\n      cartTotal: cart.cartTotal()\n    });\n  } else {\n    onData(null, {});\n  }\n}\n\nexport default composeWithTracker(composer, Loading)(CartSubTotalContainer);\n","import React, { Component } from \"react\";\nimport { Reaction } from \"/client/api\";\nimport EmptyCartDrawer from \"../components/emptyCartDrawer\";\n\nclass EmptyCartContainer extends Component {\n  handleKeepShopping(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    return $(\"#cart-drawer-container\").fadeOut(300, function () {\n      return Reaction.toggleSession(\"displayCart\");\n    });\n  }\n  render() {\n    return (\n      <div>\n        <EmptyCartDrawer keepShopping={this.handleKeepShopping}/>\n      </div>\n    );\n  }\n}\n\nexport default EmptyCartContainer;\n","import { Cart } from \"/lib/collections\";\nimport { Template } from \"meteor/templating\";\n\n/*\n * Template helpers for cart\n *\n */\n\n/**\n * cart template helper\n * @description\n * methods to return cart calculated values\n * cartCount, cartSubTotal, cartShipping, cartTaxes, cartTotal\n * are calculated by a transformation on the collection\n * and are available to use in template as cart.xxx\n * in template: {{cart.cartCount}}\n * in code: Cart.findOne().cartTotal()\n * @return {Object} returns inventory helpers\n */\nTemplate.registerHelper(\"cart\", function () {\n  const cartHelpers = {\n    /**\n     * showCartIconWarning\n     * @return {Boolean} return true if low inventory on any item in cart\n     */\n    showCartIconWarning() {\n      if (this.showLowInventoryWarning()) {\n        return true;\n      }\n      return false;\n    },\n    /**\n     * showLowInventoryWarning\n     * @return {Boolean} return true if low inventory on any item in cart\n     */\n    showLowInventoryWarning() {\n      let item;\n      const storedCart = Cart.findOne();\n      // we're not being picky here - first thing in cart\n      // that is low will trigger a inventory warning\n      if (storedCart && storedCart.items) {\n        for (item of storedCart.items) {\n          if (item.variants && item.variants.inventoryPolicy &&\n            item.variants.lowInventoryWarningThreshold) {\n            return item.variants.inventoryQuantity <=\n              item.variants.lowInventoryWarningThreshold;\n          }\n        }\n      }\n      return false;\n    },\n    /**\n     * showLowInventoryWarning\n     * @param {Object} variant - variant object to check inventory levels on\n     * @return {Boolean} return true if low inventory on variant\n     */\n    showItemLowInventoryWarning(variant) {\n      if (variant && variant.inventoryPolicy &&\n        variant.lowInventoryWarningThreshold) {\n        return variant.inventoryQuantity <=\n          variant.lowInventoryWarningThreshold;\n      }\n      return false;\n    }\n  };\n  return cartHelpers;\n});\n\n/**\n * cartPayerName\n * @summary gets current cart billing address / payment name\n * @return {String} returns cart.billing[0].fullName\n */\nTemplate.registerHelper(\"cartPayerName\", function () {\n  const cart = Cart.findOne();\n  if (cart && cart.billing && cart.billing[0] && cart.billing[0].address && cart.billing[0].address.fullName) {\n    const name = cart.billing[0].address.fullName;\n    if (name.replace(/[a-zA-Z ]*/, \"\").length === 0) return name;\n  }\n});\n","import _ from \"lodash\";\nimport { Meteor } from \"meteor/meteor\";\nimport { check } from \"meteor/check\";\nimport { Logger, Reaction, i18next } from \"/client/api\";\nimport { Cart } from \"/lib/collections\";\n\n// Client Cart Methods\n// Stubs with matching server methods.\nMeteor.methods({\n  \"cart/submitPayment\": function (paymentMethod) {\n    check(paymentMethod, Reaction.Schemas.PaymentMethod);\n    const checkoutCart = Cart.findOne({\n      userId: Meteor.userId()\n    });\n\n    const cart = _.clone(checkoutCart);\n    const cartId = cart._id;\n    const invoice = {\n      shipping: cart.cartShipping(),\n      subtotal: cart.cartSubTotal(),\n      taxes: cart.cartTaxes(),\n      discounts: cart.cartDiscounts(),\n      total: cart.cartTotal()\n    };\n    // we won't actually close the order at this stage.\n    // we'll just update the workflow and billing data where\n    // method-hooks can process the workflow update.\n\n    let selector;\n    let update;\n    // temp hack until we build out multiple billing handlers\n    // if we have an existing item update it, otherwise add to set.\n    if (cart.billing) {\n      selector = {\n        \"_id\": cartId,\n        \"billing._id\": cart.billing[0]._id\n      };\n      update = {\n        $set: {\n          \"billing.$.paymentMethod\": paymentMethod,\n          \"billing.$.invoice\": invoice\n        }\n      };\n    } else {\n      selector = {\n        _id: cartId\n      };\n      update = {\n        $addToSet: {\n          \"billing.paymentMethod\": paymentMethod,\n          \"billing.invoice\": invoice\n        }\n      };\n    }\n\n    Cart.update(selector, update, function (error, result) {\n      if (error) {\n        Logger.debug(error, \"An error occurred saving the order\");\n        throw new Meteor.Error(\"An error occurred saving the order\", error);\n      } else {\n        // it's ok and a safety check for this to be called multiple times\n        Meteor.call(\"workflow/pushCartWorkflow\", \"coreCartWorkflow\", \"paymentSubmitted\");\n        // Client Stub Actions\n        if (result === 1) {\n          Reaction.Router.go(\"cart/completed\", {}, {\n            _id: cartId\n          });\n        } else {\n          Alerts.inline(i18next.t(\"checkoutPayment.failedToPlaceOrder\"), \"danger\", {\n            autoHide: true,\n            placement: \"paymentMethod\"\n          });\n          Logger.debug(error, \"An error occurred saving the order\", cartId, error);\n          throw new Meteor.Error(\"An error occurred saving the order\", cartId, error);\n        }\n      }\n    });\n  }\n});\n","import \"./helpers/cart\";\nimport \"./methods/cart\";\n\nimport \"./templates/cartDrawer/cartDrawer.html\";\nimport \"./templates/cartDrawer/cartDrawer.js\";\n\nimport \"./templates/cartIcon/cartIcon.html\";\nimport \"./templates/cartIcon/cartIcon.js\";\n\nimport \"./templates/checkout/addressBook/addressBook.html\";\nimport \"./templates/checkout/completed/completed.html\";\nimport \"./templates/checkout/completed/completed.js\";\nimport \"./templates/checkout/header/header.html\";\nimport \"./templates/checkout/login/login.html\";\nimport \"./templates/checkout/login/login.js\";\nimport \"./templates/checkout/progressBar/progressBar.html\";\nimport \"./templates/checkout/progressBar/progressBar.js\";\nimport \"./templates/checkout/review/review.html\";\nimport \"./templates/checkout/review/review.js\";\nimport \"./templates/checkout/checkout.html\";\nimport \"./templates/checkout/checkout.js\";\n","import _ from \"lodash\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Reaction, i18next } from \"/client/api\";\n\nfunction pkgPermissions(pkg) {\n  // if (Reaction.hasPermission(\"dashboard\")) {\n  //   // route specific permissions\n  //   if (pkg.name) {\n  //     return Reaction.hasPermission(pkg.name);\n  //   }\n  //   // name is a global group role for packages\n  //   if (pkg.template) {\n  //     return Reaction.hasPermission(pkg.template);\n  //   }\n  // }\n  return Reaction.hasPermission(pkg.name);\n}\n\nfunction enableReactionPackage(reactionPackage) {\n  const self = reactionPackage;\n\n  Meteor.call(\"shop/togglePackage\", self.packageId, false,\n    (error, result) => {\n      if (result === 1) {\n        Alerts.toast(\n          i18next.t(\n            \"gridPackage.pkgEnabled\",\n            { app: i18next.t(self.i18nKeyLabel) }\n          ),\n          \"error\", {\n            type: \"pkg-enabled-\" + self.name\n          }\n        );\n        if (self.name || self.route) {\n          const route = self.name || self.route;\n          return Reaction.Router.go(route);\n        }\n      } else if (error) {\n        return Alerts.toast(\n          i18next.t(\n            \"gridPackage.pkgDisabled\",\n            { app: i18next.t(self.i18nKeyLabel) }\n          ),\n          \"warning\"\n        );\n      }\n    }\n  );\n}\n\nfunction disableReactionPackage(reactionPackage) {\n  const self = reactionPackage;\n\n  if (self.name === \"core\") {\n    return;\n  }\n\n  Alerts.alert(\n    \"Disable Package\",\n    i18next.t(\"gridPackage.disableConfirm\", { app: i18next.t(self.i18nKeyLabel) }),\n    {\n      type: \"warning\",\n      showCancelButton: true\n    },\n    () => {\n      Meteor.call(\"shop/togglePackage\", self.packageId, true,\n        (error, result) => {\n          if (result === 1) {\n            return Alerts.toast(\n              i18next.t(\"gridPackage.pkgDisabled\", {\n                app: i18next.t(self.i18nKeyLabel)\n              }),\n              \"success\"\n            );\n          } else if (error) {\n            throw new Meteor.Error(\"error disabling package\", error);\n          }\n        }\n      );\n    });\n}\n\nTemplate.packagesGrid.onCreated(function () {\n  this.state = new ReactiveDict();\n  this.state.setDefault({\n    groups: [],\n    appsByGroup: {},\n    apps: []\n  });\n\n  this.autorun(() => {\n    const apps = Reaction.Apps({ provides: \"dashboard\", enabled: true });\n    const groupedApps = _.groupBy(apps, (app) => {\n      return app.container || \"misc\";\n    });\n    this.state.set(\"apps\", apps);\n    this.state.set(\"appsByGroup\", groupedApps);\n    this.state.set(\"groups\", Object.keys(groupedApps));\n  });\n});\n\n/**\n * packagesGrid helpers\n */\nTemplate.packagesGrid.helpers({\n  groups() {\n    return Template.instance().state.get(\"groups\");\n  },\n\n  appsInGroup(groupName) {\n    const group = Template.instance().state.get(\"appsByGroup\") || {};\n    return group[groupName] || false;\n  },\n\n  shopId() {\n    return Reaction.getShopId();\n  },\n\n\n  pkgPermissions\n});\n\nTemplate.packagesGridGroup.helpers({\n  pkgPermissions,\n\n  packageProps(app) {\n    return {\n      package: app,\n      enablePackage(reactionPackage, value) {\n        if (value === true) {\n          enableReactionPackage(reactionPackage);\n        } else {\n          disableReactionPackage(reactionPackage);\n        }\n      }\n    };\n  }\n});\n","import { Reaction } from \"/client/api\";\n/* eslint no-loop-func: 0 */\n\n/**\n * gridPackage helpers\n */\nTemplate.gridPackage.helpers({\n  /**\n   * Properties for the card\n   * @see packages/reaction-ui/client/components/cards/cards.js\n   * @return {CardProps} Object of properties for the card component\n   */\n  cardProps() {\n    const instance = Template.instance();\n    const data = instance.data;\n    const apps = Reaction.Apps({\n      provides: \"settings\",\n      name: data.package.packageName\n    });\n\n    const controls = [];\n\n    if (data.package.priority > 1) {\n      controls.push({\n        icon: \"fa fa-plus-square fa-fw\",\n        onIcon: \"fa fa-check-square fa-fw\",\n        toggle: true,\n        toggleOn: data.package.enabled,\n        onClick() {\n          if (instance.data.enablePackage) {\n            instance.data.enablePackage(data.package, !data.package.enabled);\n          }\n        }\n      });\n    }\n\n    for (const app of apps) {\n      controls.push({\n        icon: app.icon || \"fa fa-cog fa-fw\",\n        onClick() {\n          Reaction.pushActionView(app);\n        }\n      });\n    }\n\n    if (data.package.route) {\n      controls.push({\n        icon: \"angle-right\",\n        onClick() {\n          Reaction.pushActionView(data.package);\n        }\n      });\n    }\n\n    return {\n      controls,\n      onContentClick() {\n        Reaction.pushActionView(data.package);\n      }\n    };\n  },\n\n  showPackageManagementEvent(pkg) {\n    if (pkg.name && pkg.route && pkg.template) {\n      return \"showPackageManagement\";\n    }\n  }\n});\n","import { PackageList } from \"../../components\";\nimport { PackageListContainer } from \"../../containers\";\n\nTemplate.dashboardPackages.helpers({\n  PackageListComponent() {\n    return {\n      component: PackageListContainer(PackageList)\n    };\n  }\n});\n","import _ from \"lodash\";\nimport { Reaction, i18next } from \"/client/api\";\nimport { Media, Packages, Shops } from \"/lib/collections\";\n\nTemplate.shopBrandImageOption.helpers({\n  cardProps(data) {\n    const props = {\n      controls: []\n    };\n\n    // Add the enable / disable toggle button\n    props.controls.push({\n      icon: \"square-o\",\n      onIcon: \"check-square-o\",\n      toggle: true,\n      toggleOn: data.selected,\n      onClick() {\n        const asset = {\n          mediaId: data.option._id,\n          type: \"navbarBrandImage\"\n        };\n\n        Meteor.call(\"shop/updateBrandAssets\", asset, (error, result) => {\n          if (error) {\n            // Display Error\n            return Alerts.toast(\"Couldn't update brand asset.\", \"error\");\n          }\n\n          if (result === 1) {\n            Alerts.toast(\"Updated brand asset\", \"success\");\n          }\n        });\n      }\n    });\n\n    // Show the delete button for brand assets that are not enabled.\n    // This will prevent users from deleting assets that are being used at the moment.\n    if (!data.selected) {\n      props.controls.push({\n        icon: \"trash-o\",\n        onClick() {\n          Alerts.alert({\n            title: \"Remove this brand image?\",\n            type: \"warning\",\n            showCancelButton: true,\n            confirmButtonText: \"Remove\"\n          }, () => {\n            Media.findOne(data.option._id).remove();\n          });\n        }\n      });\n    }\n\n    return props;\n  }\n});\n\n/**\n * shopSettings helpers\n *\n */\nTemplate.shopSettings.helpers({\n  brandImageSelectProps() {\n    const media = Media.find({\n      \"metadata.type\": \"brandAsset\"\n    });\n\n    const shop = Shops.findOne({\n      \"_id\": Reaction.getShopId(),\n      \"brandAssets.type\": \"navbarBrandImage\"\n    });\n\n    let selectedMediaId;\n    if (shop && _.isArray(shop.brandAssets)) {\n      selectedMediaId = shop.brandAssets[0].mediaId;\n    }\n\n    return {\n      type: \"radio\",\n      options: media,\n      key: \"_id\",\n      optionTemplate: \"shopBrandImageOption\",\n      selected: selectedMediaId,\n      classNames: {\n        itemList: { half: true },\n        input: { hidden: true }\n      },\n      onSelect(value) {\n        const asset = {\n          mediaId: value,\n          type: \"navbarBrandImage\"\n        };\n\n        Meteor.call(\"shop/updateBrandAssets\", asset, (error, result) => {\n          if (error) {\n            // Display Error\n            return Alerts.toast(\"Couldn't update brand asset.\", \"error\");\n          }\n\n          if (result === 1) {\n            Alerts.toast(\"Updated brand asset\", \"success\");\n          }\n        });\n      }\n    };\n  },\n\n  handleFileUpload() {\n    const userId = Meteor.userId();\n    const shopId = Reaction.getShopId();\n\n    return (files) => {\n      for (const file of files) {\n        file.metadata = {\n          type: \"brandAsset\",\n          ownerId: userId,\n          shopId: shopId\n        };\n\n        Media.insert(file);\n      }\n    };\n  },\n\n  shop: function () {\n    return Shops.findOne();\n  },\n  packageData: function () {\n    return Packages.findOne({\n      name: \"core\"\n    });\n  },\n  addressBook: function () {\n    const address = Shops.findOne().addressBook;\n    return address[0];\n  }\n});\n\n/**\n * shopSettings autoform alerts\n */\n\nAutoForm.hooks({\n  shopEditForm: {\n    onSuccess: function () {\n      return Alerts.toast(i18next.t(\"shopSettings.shopGeneralSettingsSaved\"),\n        \"success\");\n    },\n    onError: function (operation, error) {\n      return Alerts.toast(\n        `${i18next.t(\"shopSettings.shopGeneralSettingsFailed\")} ${error}`, \"error\"\n      );\n    }\n  }\n});\n\nAutoForm.hooks({\n  shopEditAddressForm: {\n    onSuccess: function () {\n      return Alerts.toast(i18next.t(\"shopSettings.shopAddressSettingsSaved\"),\n        \"success\");\n    },\n    onError: function (operation, error) {\n      return Alerts.toast(\n        `${i18next.t(\"shopSettings.shopAddressSettingsFailed\")} ${error}`, \"error\"\n      );\n    }\n  }\n});\n\nAutoForm.hooks({\n  shopEditExternalServicesForm: {\n    onSuccess: function () {\n      return Alerts.toast(\n        i18next.t(\"shopSettings.shopExternalServicesSettingsSaved\"), \"success\"\n      );\n    },\n    onError: function (operation, error) {\n      return Alerts.toast(\n        `${i18next.t(\"shopSettings.shopExternalServicesSettingsFailed\")} ${error}`,\n        \"error\"\n      );\n    }\n  }\n});\n\nAutoForm.hooks({\n  shopEditOptionsForm: {\n    onSuccess: function () {\n      return Alerts.toast(i18next.t(\"shopSettings.shopOptionsSettingsSaved\"),\n        \"success\");\n    },\n    onError: function (operation, error) {\n      return Alerts.toast(\n        `${i18next.t(\"shopSettings.shopOptionsSettingsFailed\")} ${error}`, \"error\"\n      );\n    }\n  }\n});\n","import { Reaction } from \"/client/api\";\nimport { Media, Products } from \"/lib/collections\";\n\nfunction uploadHandler(event) {\n  const shopId = Reaction.getShopId();\n  const userId = Meteor.userId();\n  const files = event.target.files.files;\n\n  for (let i = 0; i < files.length; i++) {\n    const parts = files[i].name.split(\".\");\n    let product;\n    if (parts[0]) {\n      product = Products.findOne({\n        \"variants.barcode\": parts[0]\n      }, {\n        variants: {\n          $elemMatch: {\n            barcode: parts[0]\n          }\n        }\n      });\n    }\n    if (product) {\n      const fileObj = new FS.File(files[i]);\n      fileObj.metadata = {\n        ownerId: userId,\n        productId: product._id,\n        variantId: product.variants[0]._id,\n        shopId: shopId,\n        priority: Number(parts[1]) || 0\n      };\n      Media.insert(fileObj);\n    }\n  }\n}\n\nTemplate.import.events({\n  \"submit form#form-import-images\": function (event) {\n    event.preventDefault();\n    uploadHandler(event);\n  }\n});\n","import _ from \"lodash\";\nimport { Reaction } from \"/client/api\";\nimport { Packages } from \"/lib/collections\";\n\n/**\n * Helpers for Settings Header (actionView)\n */\nTemplate.settingsHeader.helpers({\n\n  /**\n   * Data pased to action view\n   * @return {Object} Registry entry for item\n   */\n  registry() {\n    return Reaction.getActionView() || {};\n  },\n\n  isActionViewAtRootView() {\n    return Reaction.isActionViewAtRootView();\n  },\n\n  /**\n   * thisApp\n   * @return {Object} Registry entry for item\n   */\n  thisApp() {\n    const reactionApp = Packages.findOne({\n      \"registry.provides\": \"settings\",\n      \"registry.route\": Reaction.Router.getRouteName()\n    }, {\n      enabled: 1,\n      registry: 1,\n      name: 1,\n      route: 1\n    });\n\n    if (reactionApp) {\n      const settingsData = _.find(reactionApp.registry, function (item) {\n        return item.route === Reaction.Router.getRouteName() && item.provides === \"settings\";\n      });\n\n      return settingsData;\n    }\n    return reactionApp;\n  }\n\n});\n\n/**\n * Events for Setting Header (actionView)\n */\nTemplate.settingsHeader.events({\n  \"click [data-event-action=closeSettings]\": () => {\n    Reaction.hideActionView();\n  },\n\n  \"click .js-back-button\"() {\n    Reaction.popActionView();\n  }\n});\n\n/**\n * Helpers for Settings Sidebar (actionView)\n */\nTemplate.settingsSidebar.helpers({\n\n  /**\n   * pkgPermissions Check package permissions\n   * @return {Boolean} user has permission to see settings for this package\n   */\n  pkgPermissions() {\n    if (Reaction.hasPermission(\"dashboard\")) {\n      if (this.name) {\n        return Reaction.hasPermission(this.name);\n      }\n\n      return Reaction.hasPermission(this.name);\n    }\n\n    return false;\n  }\n});\n\nTemplate.settingsSidebarItem.helpers({\n\n  /**\n   * label\n   * @return {String} Label for item\n   */\n  label() {\n    return Template.parentData(1).label || this.label;\n  }\n});\n","import { Reaction } from \"/client/api\";\nimport { translateRegistry } from \"/lib/api\";\n\n//\n// registry helper for the dashboard, assembles i18n labels\n//\nTemplate.dashboardHeader.helpers({\n  registry() {\n    // just some handle little helpers for default package i18nKey/i18nLabel\n    const route = Reaction.Router.getRouteName();\n    const registry = Reaction.getRegistryForCurrentRoute() || {};\n    if (registry && route) {\n      return translateRegistry(registry);\n    }\n  }\n});\n\n//\n// dashboard events\n//\nTemplate.dashboardHeader.events({\n  \"click [data-event-action=showPackageSettings]\"() {\n    Reaction.showActionView();\n  }\n});\n","import React, { Component, PropTypes } from \"react\";\nimport classnames from \"classnames\";\nimport Blaze from \"meteor/gadicc:blaze-react-component\";\nimport { Admin } from \"/imports/plugins/core/ui/client/providers\";\nimport Radium from \"radium\";\nimport \"velocity-animate\";\nimport \"velocity-animate/velocity.ui\";\nimport { VelocityTransitionGroup } from \"velocity-react\";\nimport debounce from \"lodash/debounce\";\nimport {\n  IconButton,\n  Translation,\n  Overlay\n} from \"/imports/plugins/core/ui/client/components\";\nimport { getComponent } from \"/imports/plugins/core/layout/lib/components\";\n\n\nconst getStyles = (props) => {\n  let viewSize = 400;\n  const actionView = props.actionView || {};\n  const isBigView = actionView.provides === \"dashboard\" || (actionView.provides === \"shortcut\" && actionView.container === \"dashboard\");\n\n  if (isBigView) {\n    viewSize = \"90vw\";\n  }\n\n  if (actionView.meta && actionView.meta.actionView) {\n    const isSmView = actionView.meta.actionView.dashboardSize === \"sm\";\n    const isMdView = actionView.meta.actionView.dashboardSize === \"md\";\n    const isLgView = actionView.meta.actionView.dashboardSize === \"lg\";\n\n    if (isSmView) {\n      viewSize = \"400px\";\n    }\n    if (isMdView) {\n      viewSize = \"50vw\";\n    }\n    if (isLgView) {\n      viewSize = \"90vw\";\n    }\n  }\n\n  if (props.actionViewIsOpen === false) {\n    viewSize = 400;\n  }\n\n  return {\n    base: {\n      \"display\": \"flex\",\n      \"flexDirection\": \"row\",\n      \"height\": \"100vh\",\n      \"position\": \"relative\",\n      \"width\": viewSize,\n      \"minWidth\": 400,\n      \"@media only screen and (max-width: 949px)\": {\n        width: \"100vw\"\n      },\n      \"boxShadow\": isBigView ? \"0 0 40px rgba(0,0,0,.1)\" : \"\",\n      \"flex\": \"0 0 auto\",\n      \"backgroundColor\": \"white\",\n      \"borderLeft\": \"1px solid @black10\",\n      \"overflow\": \"hidden\",\n      \"transition\": \"width 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955))\",\n      \"zIndex\": 1050\n    },\n    header: {\n      display: \"flex\",\n      alignItems: \"center\",\n      position: \"relative\",\n      minHeight: \"56px\",\n      height: \"56px\",\n      padding: \"0 20px\"\n    },\n    heading: {\n      display: \"flex\",\n      alignItems: \"center\",\n      flex: \"1 1 auto\",\n      position: \"relative\",\n      margin: \"0 0 0 1rem\",\n      height: \"100%\"\n    },\n    body: {\n      display: \"flex\",\n      flex: \"1 1 auto\",\n      overflow: \"auto\",\n      WebkitOverflowScrolling: \"touch\"\n    },\n    masterViewPanel: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      flex: \"1 1 auto\"\n      // height: \"100%\"\n    },\n    masterView: {\n      flex: \"1 1 auto\",\n      // height: \"100%\",\n      overflow: \"auto\"\n      // WebkitOverflowScrolling: \"touch\"\n    },\n    detailViewPanel: {\n      \"display\": \"flex\",\n      \"flexDirection\": \"column\",\n      \"flex\": \"1 1 auto\",\n      \"maxWidth\": \"400px\",\n      \"height\": \"100vh\",\n      \"backgroundColor\": \"white\",\n      \"borderRight\": \"1px solid #ccc\",\n      \"@media only screen and (max-width: 949px)\": {\n        position: \"absolute\",\n        top: 0,\n        right: 0,\n        width: \"96vw\",\n        zIndex: 1050\n      }\n    },\n    detailView: {\n      width: \"100%\"\n    },\n    backButton: {\n      height: \"100%\"\n    },\n    backButtonContainers: {\n      display: \"flex\",\n      alignItems: \"center\",\n      height: \"100%\"\n    }\n  };\n};\n\nclass ActionView extends Component {\n  static propTypes = {\n    actionView: PropTypes.object,\n    actionViewIsOpen: PropTypes.bool,\n    buttons: PropTypes.array,\n    detailView: PropTypes.object,\n    detailViewIsOpen: PropTypes.bool,\n    handleActionViewBack: PropTypes.func,\n    handleActionViewClose: PropTypes.func,\n    handleActionViewDetailBack: PropTypes.func,\n    handleActionViewDetailClose: PropTypes.func,\n    isActionViewAtRootView: PropTypes.bool,\n    isDetailViewAtRootView: PropTypes.bool\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isMobile: this.isMobile,\n      enterAnimation: {\n        animation: { translateX: 0 },\n        duration: 200,\n        easing: \"easeInOutQuad\"\n      },\n      leaveAnimation: {\n        animation: { translateX: 400 },\n        duration: 200,\n        easing: \"easeInOutQuad\"\n      },\n      enterAnimationForDetailView: {\n        animation: { width: 400 },\n        duration: 200,\n        easing: \"easeInOutQuad\"\n      },\n      leaveAnimationForDetailView: {\n        animation: { width: 0 },\n        duration: 200,\n        easing: \"easeInOutQuad\"\n      }\n    };\n\n    this.handleResize = debounce(() => {\n      if (window) {\n        this.setState({\n          isMobile: this.isMobile\n        });\n      }\n    }, 66);\n  }\n\n  componentDidMount() {\n    if (window) {\n      window.addEventListener(\"resize\", this.handleResize, false);\n    }\n  }\n\n  componentWillUnmount() {\n    if (window) {\n      window.removeEventListener(\"resize\", this.handleResize);\n    }\n  }\n\n  renderControlComponent() {\n    if (this.props.actionView && typeof this.props.actionView.template === \"string\") {\n      // Render a react component if one has been registered by name\n      const component = getComponent(this.props.actionView.template);\n\n      if (component) {\n        return (\n          <div style={this.styles.masterView} className=\"master\">\n            {React.createElement(component, this.props.actionView.data)}\n          </div>\n        );\n      }\n\n      return (\n        <div style={this.styles.masterView} className=\"master\">\n          <Blaze\n            {...this.props.actionView.data}\n            template={this.props.actionView.template}\n          />\n        </div>\n      );\n    }\n\n    return null;\n  }\n\n  renderDetailComponent() {\n    if (this.props.detailView && typeof this.props.detailView.template === \"string\") {\n      return (\n        <div style={this.styles.detailView} className=\"detail\">\n          <Blaze\n            {...this.props.detailView.data}\n            template={this.props.detailView.template}\n          />\n        </div>\n      );\n    }\n\n    return null;\n  }\n\n  renderFooter() {\n    // if (this.props.footerTemplate) {\n    //   return (\n    //     <Blaze template={this.props.footerTemplate} />\n    //   );\n    // }\n  }\n\n  renderBackButton() {\n    let button;\n\n    if (this.props.isActionViewAtRootView === false) {\n      button = (\n        <IconButton\n          bezelStyle={\"flat\"}\n          icon=\"fa fa-arrow-left\"\n          onClick={this.props.handleActionViewBack}\n        />\n      );\n    } else {\n      button = (\n        <IconButton\n          bezelStyle={\"flat\"}\n          icon=\"fa fa-times\"\n          onClick={this.props.handleActionViewClose}\n        />\n      );\n    }\n\n    return (\n      <div style={this.styles.backButton}>\n        <div style={this.styles.backButtonContainers}>\n          {button}\n        </div>\n      </div>\n    );\n  }\n\n  get isMobile() {\n    return window.matchMedia(\"(max-width: 991px)\").matches;\n  }\n\n  get actionViewIsLargeSize() {\n    const { meta } = this.props.actionView;\n    const dashboardSize = meta && meta.actionView && meta.actionView.dashboardSize || \"sm\";\n\n    return this.props.actionView.provides === \"dashboard\" || dashboardSize !== \"sm\";\n  }\n\n  get showOverlay() {\n    if (this.props.actionViewIsOpen === false) {\n      return false;\n    }\n\n    return this.actionViewIsLargeSize || this.state.isMobile;\n  }\n\n  get showDetailViewOverlay() {\n    return this.props.detailViewIsOpen && this.state.isMobile;\n  }\n\n  renderDetailViewBackButton() {\n    if (this.props.isDetailViewAtRootView === false) {\n      return (\n        <div style={this.styles.backButton}>\n          <div style={this.styles.backButtonContainers}>\n            <IconButton\n              bezelStyle={\"flat\"}\n              icon=\"fa fa-arrow-left\"\n              onClick={this.props.handleActionViewDetailBack}\n            />\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <IconButton\n        bezelStyle={\"flat\"}\n        icon=\"fa fa-times\"\n        onClick={this.props.handleActionViewDetailClose}\n      />\n    );\n  }\n\n  get styles() {\n    return getStyles(this.props);\n  }\n\n  get backButtonEnterAnimation() {\n    return {\n      animation: {\n        display: \"flex\",\n        position: \"absolute\",\n        left: 20,\n        opaticy: 1\n      },\n      duration: 200\n    };\n  }\n\n  get backButtonLeaveAnimaton() {\n    return {\n      animation: {\n        display: \"flex\",\n        position: \"absolute\",\n        left: -30,\n        opaticy: 0\n      },\n      duration: 200\n\n    };\n  }\n\n  renderMasterView() {\n    const { actionView } = this.props;\n\n    return (\n      <div style={this.styles.masterViewPanel}>\n        <div style={this.styles.header} className=\"header\">\n          {this.renderBackButton()}\n          <div style={this.styles.heading} className=\"heading\">\n            <h3 className=\"title\" style={this.styles.title}>\n              <Translation\n                defaultValue={actionView.label || \"Dashboard\"}\n                i18nKey={actionView.i18nKeyLabel || \"dashboard.coreTitle\"}\n              />\n            </h3>\n          </div>\n\n          <div className=\"controlsÂ»\">\n            {/* Controls */}\n          </div>\n        </div>\n        <div style={this.styles.body} className=\"admin-controls-content action-view-body\">\n\n            {this.renderControlComponent()}\n\n        </div>\n      </div>\n\n    );\n  }\n\n  renderDetailView() {\n    const { actionView } = this.props;\n\n    const baseClassName = classnames({\n      \"rui\": true,\n      \"admin\": true,\n      \"action-view-pane\": true,\n      \"action-view-detail\": true\n    });\n\n    if (this.props.detailViewIsOpen) {\n      return (\n        <div className={baseClassName} style={this.styles.detailViewPanel}>\n          <div style={this.styles.header} className=\"header\">\n            <VelocityTransitionGroup\n              enter={this.backButtonEnterAnimation}\n              leave={this.backButtonLeaveAnimaton}\n            >\n              {this.renderDetailViewBackButton()}\n            </VelocityTransitionGroup>\n\n            <div style={this.styles.heading} className=\"heading\">\n              <h3 className=\"title\" style={this.styles.title}>\n                <Translation\n                  defaultValue={actionView.label}\n                  i18nKey={actionView.i18nKeyLabel}\n                />\n              </h3>\n            </div>\n\n            <div className=\"controls\">\n              {/* Controls */}\n            </div>\n          </div>\n          <div style={this.styles.body} className=\"admin-controls-content action-view-body\">\n\n              {/* this.renderControlComponent() */}\n              {this.renderDetailComponent()}\n          </div>\n        </div>\n\n      );\n    }\n  }\n\n  renderActionView() {\n    const baseClassName = classnames({\n      \"rui\": true,\n      \"admin\": true,\n      \"action-view-pane\": true,\n      \"action-view\": true,\n      \"open\": this.props.actionViewIsOpen\n    });\n\n    if (this.props.actionViewIsOpen) {\n      return (\n        <div style={this.styles.base} className={baseClassName}>\n\n          {this.renderMasterView()}\n          <Overlay\n            isVisible={this.showDetailViewOverlay}\n            onClick={this.props.handleActionViewDetailClose}\n          />\n          <VelocityTransitionGroup\n            enter={this.state.enterAnimationForDetailView}\n            leave={this.state.leaveAnimationForDetailView}\n          >\n            {this.renderDetailView()}\n          </VelocityTransitionGroup>\n\n\n          <div className=\"admin-controls-footer\">\n            <div className=\"admin-controls-container\">\n              {this.renderFooter()}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return null;\n  }\n\n  render() {\n    return (\n      <div>\n        <VelocityTransitionGroup\n          enter={this.state.enterAnimation}\n          leave={this.state.leaveAnimation}\n        >\n          {this.renderActionView()}\n        </VelocityTransitionGroup>\n\n        <Overlay\n          isVisible={this.showOverlay}\n          onClick={this.props.handleActionViewClose}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Admin()(Radium(ActionView));\n","export { default as ActionView } from \"./actionView\";\nexport { default as PackageList } from \"./packageList\";\nexport { default as Toolbar } from \"./toolbar\";\n","import React, { Component, PropTypes } from \"react\";\nimport { map } from \"lodash\";\nimport { Card, CardHeader, CardBody, CardGroup, ListItem } from \"/imports/plugins/core/ui/client/components\";\nimport { getComponent } from \"/imports/plugins/core/layout/lib/components\";\n\nclass PackageList extends Component {\n  static propTypes = {\n    groupedPackages: PropTypes.object,\n    handleShowPackage: PropTypes.func,\n    onCardExpand: PropTypes.func\n  }\n\n  state = {}\n\n  isExpanded(cardName) {\n    if (this.state[`card_${cardName}`] && typeof this.state[`card_${cardName}`].isExpanded === \"boolean\") {\n      return this.state[`card_${cardName}`].isExpanded;\n    }\n\n    return true;\n  }\n\n  handleCardExpand(cardName) {\n    let isExpanded;\n\n    if (typeof this.state[`card_${cardName}`] === \"undefined\") {\n      isExpanded = false;\n    } else {\n      isExpanded = !this.state[`card_${cardName}`].isExpanded;\n    }\n\n    this.setState({\n      [`card_${cardName}`]: {\n        isExpanded\n      }\n    });\n\n    if (this.props.onCardExpand) {\n      this.props.onCardExpand(cardName);\n    }\n  }\n\n  renderSections() {\n    if (this.props.groupedPackages) {\n      // Loop through the groups of packages\n      return map(this.props.groupedPackages, (group, groupName) => {\n        // Loop through the individual cards of packages\n        if (Array.isArray(group.packages)) {\n          const items = group.packages.map((packageData, index) => {\n            const elements = [];\n\n            // Standard list element\n            elements.push(\n              <ListItem\n                key={index}\n                i18nKeyLabel={packageData.i18nKeyLabel}\n                icon={packageData.icon}\n                label={packageData.label}\n                onClick={this.props.handleShowPackage}\n                actionType=\"arrow\"\n                value={packageData}\n              />\n            );\n\n            // Look for a registered component_ActionDashboard component\n            const actionComponent = getComponent(`${packageData.template}_ActionDashboard`);\n\n            // If one exists, add it to the list of elements\n            if (actionComponent) {\n              elements.push(\n                <Card expandable={true} key={`action-${index}`}>\n                  <CardBody>\n                    {React.createElement(actionComponent)}\n                  </CardBody>\n                </Card>\n              );\n            }\n\n            return elements;\n          });\n\n          return (\n            <Card\n              key={groupName}\n              expanded={this.isExpanded(groupName)}\n              onExpand={this.handleCardExpand.bind(this, groupName)}\n            >\n              <CardHeader\n                actAsExpander={true}\n                title={group.title}\n                i18nKeyTitle={group.i18nKeyTitle}\n              />\n              <CardBody expandable={true} padded={false}>\n                {items}\n              </CardBody>\n            </Card>\n          );\n        }\n\n        return null;\n      });\n    }\n\n    return null;\n  }\n\n  render() {\n    return (\n      <CardGroup>\n        {this.renderSections()}\n      </CardGroup>\n    );\n  }\n}\n\nexport default PackageList;\n","import React, { Component, PropTypes } from \"react\";\nimport Blaze from \"meteor/gadicc:blaze-react-component\";\nimport {\n  FlatButton,\n  Toolbar,\n  ToolbarGroup,\n  Switch,\n  Icon,\n  VerticalDivider\n} from \"/imports/plugins/core/ui/client/components\";\nimport { Translatable } from \"/imports/plugins/core/ui/client/providers\";\nimport { Reaction } from \"/client/api\";\n\nclass PublishControls extends Component {\n  static propTypes = {\n    dashboardHeaderTemplate: PropTypes.oneOfType([PropTypes.func, PropTypes.node, PropTypes.string]),\n    documentIds: PropTypes.arrayOf(PropTypes.string),\n    documents: PropTypes.arrayOf(PropTypes.object),\n    hasCreateProductAccess: PropTypes.bool,\n    isEnabled: PropTypes.bool,\n    isPreview: PropTypes.bool,\n    onAddProduct: PropTypes.func,\n    onViewContextChange: PropTypes.func,\n    onVisibilityChange: PropTypes.func,\n    packageButtons: PropTypes.arrayOf(PropTypes.object),\n    showViewAsControls: PropTypes.bool,\n    translation: PropTypes.shape({\n      lang: PropTypes.string\n    })\n  }\n\n  static defaultProps = {\n    showViewAsControls: true\n  }\n\n  onViewContextChange = (event, isChecked) => {\n    if (typeof this.props.onViewContextChange === \"function\") {\n      this.props.onViewContextChange(event, isChecked ? \"administrator\" : \"customer\");\n    }\n  }\n\n  renderViewControls() {\n    if (this.props.showViewAsControls) {\n      return (\n        <FlatButton\n          label=\"Private\"\n          i18nKeyLabel=\"app.private\"\n          i18nKeyToggleOnLabel=\"app.public\"\n          toggleOnLabel=\"Public\"\n          icon=\"fa fa-eye-slash\"\n          onIcon=\"fa fa-eye\"\n          toggle={true}\n          value=\"public\"\n          onValue=\"private\"\n          toggleOn={this.isVisible === \"public\"}\n          onToggle={this.handleVisibilityChange}\n        />\n      );\n    }\n\n    return null;\n  }\n\n  renderVisibilitySwitch() {\n    if (this.props.hasCreateProductAccess) {\n      return (\n        <Switch\n          i18nKeyLabel=\"app.editMode\"\n          i18nKeyOnLabel=\"app.editMode\"\n          label={\"Edit Mode\"}\n          onLabel={\"Edit Mode\"}\n          checked={!this.props.isPreview}\n          onChange={this.onViewContextChange}\n        />\n      );\n    }\n\n    return null;\n  }\n\n  renderAdminButton() {\n    return (\n      <FlatButton\n        onClick={() => {\n          Reaction.showActionView({\n            i18nKeyTitle: \"dashboard.coreTitle\",\n            title: \"Dashboard\",\n            template: \"dashboardPackages\"\n          });\n        }}\n      >\n      <Icon style={{ fontSize: 24 }} icon=\"icon icon-reaction-logo\" />\n    </FlatButton>\n    );\n  }\n\n  renderAddButton() {\n    if (this.props.hasCreateProductAccess) {\n      return (\n        <FlatButton\n          i18nKeyTooltip=\"app.shortcut.addProductLabel\"\n          icon={\"fa fa-plus\"}\n          tooltip={\"Add Product\"}\n          onClick={this.props.onAddProduct}\n        />\n      );\n    }\n\n    return null;\n  }\n\n  renderPackageButons() {\n    if (Array.isArray(this.props.packageButtons)) {\n      return this.props.packageButtons.map((packageButton, index) => {\n        return (\n          <FlatButton {...packageButton} key={index} />\n        );\n      });\n    }\n\n    return null;\n  }\n\n  renderCustomControls() {\n    if (this.props.dashboardHeaderTemplate && this.props.hasCreateProductAccess) {\n      if (this.props.isEnabled) {\n        return [\n          <VerticalDivider key=\"customControlsVerticaldivider\" />,\n          <Blaze key=\"customControls\" template={this.props.dashboardHeaderTemplate} />\n        ];\n      }\n      return [\n        <Blaze key=\"customControls\" template={this.props.dashboardHeaderTemplate} />\n      ];\n    }\n\n    return null;\n  }\n\n  render() {\n    return (\n      <Toolbar>\n        <ToolbarGroup firstChild={true}>\n          {this.renderVisibilitySwitch()}\n        </ToolbarGroup>\n        <ToolbarGroup lastChild={true}>\n          {this.renderAddButton()}\n          {this.renderPackageButons()}\n          {this.renderCustomControls()}\n          <VerticalDivider />\n          {this.renderAdminButton()}\n          {/* this.renderMoreOptionsButton() */}\n        </ToolbarGroup>\n      </Toolbar>\n    );\n  }\n}\n\nexport default Translatable()(PublishControls);\n","import React from \"react\";\nimport { StyleRoot } from \"radium\";\nimport { composeWithTracker } from \"/lib/api/compose\";\nimport { Reaction } from \"/client/api\";\nimport { TranslationProvider, AdminContextProvider } from \"/imports/plugins/core/ui/client/providers\";\nimport { Loading } from \"/imports/plugins/core/ui/client/components\";\n\n\nfunction handleActionViewBack() {\n  Reaction.popActionView();\n}\n\nfunction handleActionViewDetailBack() {\n  Reaction.popActionViewDetail();\n}\n\nfunction handleActionViewClose() {\n  Reaction.hideActionView();\n}\n\nfunction handleActionViewDetailClose() {\n  Reaction.hideActionViewDetail();\n}\n\nfunction composer(props, onData) {\n  const shortcuts = Reaction.Apps({ provides: \"shortcut\", enabled: true });\n  const items = [];\n\n  if (_.isArray(shortcuts)) {\n    for (const shortcut of shortcuts) {\n      if (!shortcut.container) {\n        items.push({\n          type: \"link\",\n          href: Reaction.Router.pathFor(shortcut.name),\n          className: Reaction.Router.isActiveClassName(shortcut.name),\n          icon: shortcut.icon,\n          tooltip: shortcut.label || \"\",\n          i18nKeyTooltip: shortcut.i18nKeyLabel,\n          tooltipPosition: \"left middle\"\n        });\n      }\n    }\n  }\n\n  items.push({ type: \"seperator\" });\n\n  items.push({\n    icon: \"plus\",\n    tooltip: \"Create Content\",\n    i18nKeyTooltip: \"app.createContent\",\n    tooltipPosition: \"left middle\"\n  });\n\n\n  onData(null, {\n    isAdminArea: true,\n    actionView: Reaction.getActionView(),\n    detailView: Reaction.getActionViewDetail(),\n    data: props.data,\n    buttons: items,\n    isActionViewAtRootView: Reaction.isActionViewAtRootView(),\n    isDetailViewAtRootView: Reaction.isActionViewDetailAtRootView(),\n\n    actionViewIsOpen: Reaction.isActionViewOpen(),\n    detailViewIsOpen: Reaction.isActionViewDetailOpen(),\n\n    // Callbacks\n    handleActionViewBack,\n    handleActionViewDetailBack,\n    handleActionViewClose,\n    handleActionViewDetailClose\n  });\n}\n\nexport default function ActionViewContainer(Comp) {\n  function CompositeComponent(props) {\n    return (\n      <TranslationProvider>\n        <AdminContextProvider>\n          <StyleRoot>\n            <Comp {...props} />\n          </StyleRoot>\n        </AdminContextProvider>\n      </TranslationProvider>\n    );\n  }\n\n  return composeWithTracker(composer, Loading)(CompositeComponent);\n}\n","export { default as PackageListContainer } from \"./packageListContainer\";\nexport { default as ActionViewContainer } from \"./actionViewContainer\";\nexport { default as ToolbarContainer } from \"./toolbarContainer\";\n","import React from \"react\";\nimport { composeWithTracker } from \"/lib/api/compose\";\nimport { Reaction } from \"/client/api\";\nimport { Loading } from \"/imports/plugins/core/ui/client/components\";\nimport { TranslationProvider } from \"/imports/plugins/core/ui/client/providers\";\n\n/**\n * handleShowPackage - Push package into action view navigation stack\n * @param  {SyntheticEvent} event Original event\n * @param  {Object} app Package data\n * @return {undefined} No return value\n */\nfunction handleShowPackage(event, app) {\n  Reaction.pushActionView(app);\n}\n\nfunction composer(props, onData) {\n  const audience = Roles.getRolesForUser(Meteor.userId(), Reaction.getShopId());\n  const settings = Reaction.Apps({ provides: \"settings\", enabled: true, audience }) || [];\n\n  const dashboard = Reaction.Apps({ provides: \"dashboard\", enabled: true, audience })\n    .filter((d) => typeof Template[d.template] !== \"undefined\") || [];\n\n  onData(null, {\n    // packages,\n    groupedPackages: {\n      actions: {\n        title: \"Actions\",\n        i18nKeyTitle: \"admin.dashboard.packageGroupActionsLabel\",\n        packages: dashboard\n      },\n      settings: {\n        title: \"Settings\",\n        i18nKeyTitle: \"admin.dashboard.packageGroupSettingsLabel\",\n        packages: settings\n      }\n    },\n\n    // Callbacks\n    handleShowPackage\n  });\n}\n\nexport default function PackageListContainer(Comp) {\n  function CompositeComponent(props) {\n    return (\n      <TranslationProvider>\n        <Comp {...props} />\n      </TranslationProvider>\n    );\n  }\n\n  return composeWithTracker(composer, Loading)(CompositeComponent);\n}\n","import React from \"react\";\nimport { Meteor } from \"meteor/meteor\";\nimport { composeWithTracker } from \"/lib/api/compose\";\nimport { Reaction, i18next } from \"/client/api\";\nimport { Tags } from \"/lib/collections\";\nimport { TranslationProvider, AdminContextProvider } from \"/imports/plugins/core/ui/client/providers\";\nimport { isRevisionControlEnabled } from \"/imports/plugins/core/revisions/lib/api\";\n\nconst handleAddProduct = () => {\n  Reaction.setUserPreferences(\"reaction-dashboard\", \"viewAs\", \"administrator\");\n  Meteor.call(\"products/createProduct\", (error, productId) => {\n    if (Meteor.isClient) {\n      let currentTag;\n      let currentTagId;\n\n      if (error) {\n        throw new Meteor.Error(\"createProduct error\", error);\n      } else if (productId) {\n        currentTagId = Session.get(\"currentTag\");\n        currentTag = Tags.findOne(currentTagId);\n        if (currentTag) {\n          Meteor.call(\"products/updateProductTags\", productId, currentTag.name, currentTagId);\n        }\n        // go to new product\n        Reaction.Router.go(\"product\", {\n          handle: productId\n        });\n      }\n    }\n  });\n};\n\nconst handleViewContextChange = (event, value) => {\n  Reaction.setUserPreferences(\"reaction-dashboard\", \"viewAs\", value);\n\n  if (Reaction.isPreview() === true) {\n    // Save last action view state\n    const saveActionViewState = Reaction.getActionView();\n    Reaction.setUserPreferences(\"reaction-dashboard\", \"savedActionViewState\", saveActionViewState);\n\n    // hideActionView during isPreview === true\n    Reaction.hideActionView();\n  } else {\n    // // Reload previous actionView, if saved. Otherwise, don't show.\n    // const savedActionViewState = Reaction.getUserPreferences(\"reaction-dashboard\", \"savedActionViewState\");\n    //\n    // if (savedActionViewState) {\n    //   Reaction.showActionView(savedActionViewState);\n    // }\n  }\n};\n\nfunction composer(props, onData) {\n  // Reactive data sources\n  const routeName = Reaction.Router.getRouteName();\n\n  // Standard variables\n  const packageButtons = [];\n\n  if (routeName !== \"dashboard\" && props.showPackageShortcuts) {\n    const registryItems = Reaction.Apps({ provides: \"settings\", container: \"dashboard\" });\n\n    for (const item of registryItems) {\n      if (Reaction.hasPermission(item.route, Meteor.userId())) {\n        let icon = item.icon;\n\n        if (!item.icon && item.provides === \"settings\") {\n          icon = \"gear\";\n        }\n\n        packageButtons.push({\n          href: item.route,\n          icon: icon,\n          tooltip: i18next.t(item.i18nKeyLabel, item.i18n),\n          tooltipPosition: \"left middle\",\n          onClick() {\n            Reaction.showActionView(item);\n          }\n        });\n      }\n    }\n  }\n\n  onData(null, {\n    packageButtons,\n    dashboardHeaderTemplate: props.data.dashboardHeader,\n    isPreview: Reaction.isPreview(),\n    isEnabled: isRevisionControlEnabled(),\n    isActionViewAtRootView: Reaction.isActionViewAtRootView(),\n    actionViewIsOpen: Reaction.isActionViewOpen(),\n    hasCreateProductAccess: Reaction.hasPermission(\"createProduct\", Meteor.userId(), Reaction.shopId),\n\n    // Callbacks\n    onAddProduct: handleAddProduct,\n    onViewContextChange: handleViewContextChange\n  });\n}\n\nexport default function ToolbarContainer(Comp) {\n  function CompositeComponent(props) {\n    return (\n      <TranslationProvider>\n        <AdminContextProvider>\n          <Comp {...props} />\n        </AdminContextProvider>\n      </TranslationProvider>\n    );\n  }\n\n  return composeWithTracker(composer, null)(CompositeComponent);\n}\n","import \"./templates/import/import.html\";\nimport \"./templates/import/import.js\";\n\nimport \"./templates/packages/grid/grid.html\";\nimport \"./templates/packages/grid/grid.js\";\nimport \"./templates/packages/grid/package.html\";\nimport \"./templates/packages/grid/package.js\";\nimport \"./templates/packages/packages.html\";\nimport \"./templates/packages/packages.js\";\n\nimport \"./templates/settings/settings.html\";\nimport \"./templates/settings/settings.js\";\n\nimport \"./templates/shop/settings/settings.html\";\nimport \"./templates/shop/settings/settings.js\";\n\nimport \"./templates/dashboard.html\";\nimport \"./templates/dashboard.js\";\n","import Drop from \"tether-drop\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Blaze } from \"meteor/blaze\";\nimport { Template } from \"meteor/templating\";\nimport { Reaction, i18next } from \"/client/api\";\nimport { Packages } from \"/lib/collections\";\nimport ToolbarContainer from \"/imports/plugins/core/dashboard/client/containers/toolbarContainer\";\nimport Toolbar from \"/imports/plugins/core/dashboard/client/components/toolbar\";\nimport { ActionViewContainer } from \"/imports/plugins/core/dashboard/client/containers\";\nimport { ActionView } from \"/imports/plugins/core/dashboard/client/components\";\n\nTemplate.coreAdminLayout.onRendered(function () {\n  $(\"body\").addClass(\"admin\");\n});\n\nTemplate.coreAdminLayout.onDestroyed(() => {\n  $(\"body\").removeClass(\"admin\");\n});\n\nTemplate.coreAdminLayout.helpers({\n  PublishContainerComponent() {\n    return {\n      component: ToolbarContainer(Toolbar),\n      data: Template.currentData()\n    };\n  },\n  ActionViewComponent() {\n    return {\n      component: ActionViewContainer(ActionView),\n      data: Template.currentData()\n    };\n  },\n  shortcutButtons() {\n    const instance = Template.instance();\n    const shortcuts = Reaction.Apps({ provides: \"shortcut\", enabled: true });\n    const items = [];\n\n    if (_.isArray(shortcuts)) {\n      for (const shortcut of shortcuts) {\n        if (!shortcut.container) {\n          items.push({\n            type: \"link\",\n            href: Reaction.Router.pathFor(shortcut.name),\n            className: Reaction.Router.isActiveClassName(shortcut.name),\n            icon: shortcut.icon,\n            tooltip: shortcut.label || \"\",\n            i18nKeyTooltip: shortcut.i18nKeyLabel,\n            tooltipPosition: \"left middle\"\n          });\n        }\n      }\n    }\n\n    items.push({ type: \"seperator\" });\n\n    items.push({\n      icon: \"plus\",\n      tooltip: \"Create Content\",\n      i18nKeyTooltip: \"app.createContent\",\n      tooltipPosition: \"left middle\",\n      onClick(event) {\n        if (!instance.dropInstance) {\n          instance.dropInstance = new Drop({\n            target: event.currentTarget,\n            content: \"\",\n            constrainToWindow: true,\n            classes: \"drop-theme-arrows\",\n            position: \"right center\"\n          });\n\n          Blaze.renderWithData(Template.createContentMenu, {}, instance.dropInstance.content);\n        }\n\n        instance.dropInstance.open();\n      }\n    });\n\n    return items;\n  },\n\n  isSeperator(props) {\n    if (props.type === \"seperator\") {\n      return true;\n    }\n    return false;\n  },\n\n  packageButtons() {\n    const routeName = Reaction.Router.getRouteName();\n\n    if (routeName !== \"dashboard\") {\n      const registryItems = Reaction.Apps({ provides: \"settings\", container: routeName });\n      const buttons = [];\n\n      for (const item of registryItems) {\n        if (Reaction.hasPermission(item.route, Meteor.userId())) {\n          let icon = item.icon;\n\n          if (!item.icon && item.provides === \"settings\") {\n            icon = \"gear\";\n          }\n\n          buttons.push({\n            href: item.route,\n            icon: icon,\n            tooltip: i18next.t(item.i18nKeyLabel, item.i18n),\n            tooltipPosition: \"left middle\",\n            onClick() {\n              Reaction.showActionView(item);\n            }\n          });\n        }\n      }\n\n      return buttons;\n    }\n    return [];\n  },\n\n  control: function () {\n    return Reaction.getActionView();\n  },\n\n  adminControlsClassname: function () {\n    if (Reaction.isActionViewOpen()) {\n      return \"show-settings\";\n    }\n    return \"\";\n  },\n\n  /**\n   * thisApp\n   * @return {Object} Registry entry for item\n   */\n  thisApp() {\n    const reactionApp = Packages.findOne({\n      \"registry.provides\": \"settings\",\n      \"registry.route\": Reaction.Router.getRouteName()\n    }, {\n      enabled: 1,\n      registry: 1,\n      name: 1,\n      route: 1\n    });\n\n    if (reactionApp) {\n      const settingsData = _.find(reactionApp.registry, function (item) {\n        return item.route === Reaction.Router.getRouteName() && item.provides === \"settings\";\n      });\n\n      return settingsData;\n    }\n    return reactionApp;\n  }\n});\n","/**\n * inlineAlert helpers\n */\n\nTemplate.inlineAlert.onCreated(function () {\n  this.isFirstRender = true;\n  return this.isFirstRender;\n});\n\nTemplate.inlineAlert.onRendered(function () {\n  const alert = this.data;\n  const $node = $(this.firstNode);\n\n  Meteor.defer(function () {\n    Alerts.collection_.update(alert._id, {\n      $set: {\n        seen: true\n      }\n    });\n  });\n\n  $node.removeClass(\"hide\").hide().fadeIn(alert.options.fadeIn, function () {\n    if (alert.options.autoHide) {\n      Meteor.setTimeout(function () {\n        $node.fadeOut(alert.options.fadeOut, function () {\n          return Alerts.collection_.remove(alert._id);\n        });\n      }, alert.options.autoHide);\n    }\n  });\n});\n\nTemplate.inlineAlerts.helpers({\n  alerts: function (alertPlacement, alertId) {\n    let id = alertId;\n    let placement = alertPlacement;\n    if (!placement) {\n      placement = \"\";\n    }\n    if (!id) {\n      id = \"\";\n    }\n    return Alerts.collection_.find({\n      \"options.placement\": placement,\n      \"options.id\": id\n    });\n  }\n});\n\nTemplate.inlineAlert.events({\n  \"click button.close\": function () {\n    return Alerts.collection_.remove(this._id);\n  }\n});\n","import { i18next } from \"/client/api\";\nimport { Mongo } from \"meteor/mongo\";\n\n/*\n * Forked and modifed from https://github.com/asktomsk/bootstrap-alerts/\n */\nAlerts = {\n\n  /*\n  Default options. Can be overridden for application\n   */\n  defaultOptions: {\n\n    /*\n    Button with cross icon to hide (close) alert\n     */\n    dismissable: true,\n\n    /*\n    CSS classes to be appended on each alert DIV (use space for separator)\n     */\n    classes: \"\",\n\n    /*\n    Hide alert after delay in ms or false to infinity\n     */\n    autoHide: false,\n\n    /*\n    Time in ms before alert fully appears\n     */\n    fadeIn: 200,\n\n    /*\n    If autoHide enabled then fadeOut is time in ms before alert disappears\n     */\n    fadeOut: 3000,\n\n    /*\n    Amount of alerts to be displayed\n     */\n    alertsLimit: 3,\n\n    /*\n    Allows use HTML in messages\n     */\n    html: false,\n\n    /*\n     * define placement to only show where matches\n     * use: {{inlineAlerts placement=\"cart\"}}\n     * Alerts.add \"message\",\"danger\", placement:\"cart\"\n     */\n    placement: \"\",\n\n    /*\n    Translation key for i18n (translations collection)\n     */\n    i18nKey: \"\",\n\n    /*\n    unique id (for multiple message placements)\n     */\n    id: \"\"\n  },\n\n  /*\n  Add an alert\n\n  @param message (String) Text to display.\n  @param mode (String) One of bootstrap alerts types: success, info, warning, danger\n  @param options (Object) Options if required to override some of default ones.\n  See Alerts.defaultOptions for all values.\n   */\n  add: function (alertMessage, mode, alertOptions) {\n    let a;\n    let message = alertMessage;\n    let options = alertOptions;\n    // check options to see if we have translation\n    if (options && options.i18nKey && options.i18nKey !== i18next.t(options.i18nKey)) {\n      message = i18next.t(options.i18nKey);\n    }\n    // get default options\n    options = _.defaults(alertOptions || {}, Alerts.defaultOptions);\n\n    if (options.type) {\n      a = Alerts.collection_.findOne({\n        \"options.type\": options.type\n      });\n      if (a) {\n        Alerts.collection_.update(a._id, {\n          $set: {\n            message: message,\n            mode: mode,\n            options: options\n          }\n        });\n        return;\n      }\n    }\n\n    const count = Alerts.collection_.find({}).count();\n    if (count >= options.alertsLimit) {\n      Alerts.collection_.find({}, {\n        sort: {\n          created: -1\n        },\n        skip: options.alertsLimit - 1\n      }).forEach(function (row) {\n        Alerts.collection_.remove(row._id);\n      });\n    }\n    Alerts.collection_.insert({\n      message: message,\n      mode: mode,\n      options: options,\n      seen: false,\n      created: +new Date()\n    });\n  },\n\n  /*\n  Call this function before loading a new page to clear errors from previous page\n  Best way is using Router filtering feature to call this function\n   */\n  removeSeen: function () {\n    Alerts.collection_.remove({\n      \"seen\": true,\n      \"options.sticky\": {\n        $ne: true\n      }\n    });\n  },\n\n  /*\n  If you provide a `type` option when adding an alert, you can call this function\n  to later remove that alert.\n   */\n  removeType: function (type) {\n    Alerts.collection_.remove({\n      \"options.type\": type\n    });\n  },\n  collection_: new Mongo.Collection(null)\n};\n\nexport default Alerts;\n","import _ from \"lodash\";\nimport { Meteor } from \"meteor/meteor\";\nimport swal from \"sweetalert2\";\nimport \"sweetalert2/dist/sweetalert2.css\";\n\n// Extends Bootstaps alerts and add more alert types\nMeteor.startup(function () {\n  sAlert.config({\n    effect: \"stackslide\",\n    position: \"bottom-left\",\n    timeout: 5000,\n    html: false,\n    onRouteClose: true,\n    stack: true,\n    // or you can pass an object:\n    // stack: {\n    //     spacing: 10 // in px\n    //     limit: 3 // when fourth alert appears all previous ones are cleared\n    // }\n    offset: 0, // in px - will be added to first alert (bottom or top - depends of the position in config)\n    beep: false\n    // examples:\n    // beep: '/beep.mp3'  // or you can pass an object:\n    // beep: {\n    //     info: '/beep-info.mp3',\n    //     error: '/beep-error.mp3',\n    //     success: '/beep-success.mp3',\n    //     warning: '/beep-warning.mp3'\n    // }\n    // onClose: _.noop //\n    // examples:\n    // onClose: function() {\n    //     /* Code here will be executed once the alert closes. */\n    // }\n  });\n});\n\nObject.assign(Alerts, {\n\n  inline(alertMessage, type, alertOptions) {\n    // Convert error to danger, for inlineAlerts\n    const mode = type === \"error\" ? \"danger\" : type;\n    return this.add(alertMessage, mode, alertOptions);\n  },\n\n  /**\n   * Show a popup alert\n   * @example\n   * // Simple\n   * Alerts.alert(\"title\", \"message\", {}, callbackFunction);\n   * // - OR, for more control -\n   * Alerts.alert({\n   * \ttitle: \"Title\",\n   * \ttext: \"Message Text\",\n   * \ttype: \"success|info|warning|error|\"\n   * }, callbackFunction);\n   *\n   * @param  {String|Object} titleOrOptions Pass a string or an object containing options\n   * @param  {[type]}   messageOrCallback [description]\n   * @param  {[type]}   options           [description]\n   * @param  {Function} callback          [description]\n   * @return {[type]}                     [description]\n   */\n  alert(titleOrOptions, messageOrCallback, options, callback) {\n    if (_.isObject(titleOrOptions)) {\n      return swal({\n        type: \"info\",\n        ...titleOrOptions\n      }).then((isConfirm) => {\n        if (isConfirm === true && typeof messageOrCallback === \"function\") {\n          messageOrCallback(isConfirm, false);\n        }\n      }, dismiss => {\n        if (dismiss === \"cancel\" || dismiss === \"esc\" || dismiss === \"overlay\") {\n          messageOrCallback(false, dismiss);\n        }\n      }).catch(function (err) {\n        if (err === \"cancel\" || err === \"overlay\" || err === \"timer\") {\n          return undefined; // Silence error\n        }\n        throw err;\n      });\n    }\n\n    const title = titleOrOptions;\n    const message = messageOrCallback;\n\n    return swal({\n      title,\n      text: message,\n      type: \"info\",\n      ...options\n    }).then((isConfirm) => {\n      if (isConfirm === true && typeof callback === \"function\") {\n        callback(isConfirm);\n      }\n    }).catch(function (err) {\n      if (err === \"cancel\" || err === \"overlay\" || err === \"timer\") {\n        return undefined; // Silence error\n      }\n      throw err;\n    });\n  },\n\n  toast(message, type, options) {\n    switch (type) {\n      case \"error\":\n      case \"warning\":\n      case \"success\":\n      case \"info\":\n        return sAlert[type](message, options);\n      default:\n        return sAlert.success(message, options);\n    }\n  }\n});\n","import { Reaction } from \"/client/api\";\nimport { Tags } from \"/lib/collections\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Session } from \"meteor/session\";\nimport { Template } from \"meteor/templating\";\n\nTemplate.createContentMenu.helpers({\n  buttonProps(item) {\n    return {\n      label: item.label,\n      i18nKeyLabel: item.i18nKeyLabel,\n      status: \"default\",\n      onClick() {\n        // TODO: Move this to somewhere better, like, core or product package\n        if (item.route === \"/products/createProduct\") {\n          Meteor.call(\"products/createProduct\", (error, productId) => {\n            if (Meteor.isClient) {\n              let currentTag;\n              let currentTagId;\n\n              if (error) {\n                throw new Meteor.Error(\"createProduct error\", error);\n              } else if (productId) {\n                currentTagId = Session.get(\"currentTag\");\n                currentTag = Tags.findOne(currentTagId);\n                if (currentTag) {\n                  Meteor.call(\"products/updateProductTags\", productId, currentTag.name, currentTagId);\n                }\n                // go to new product\n                Reaction.Router.go(\"product\", {\n                  handle: productId\n                });\n              }\n            }\n          });\n        }\n      }\n    };\n  },\n\n  items() {\n    const apps = Reaction.Apps({ provides: \"shortcut\", container: \"addItem\" }) || [];\n    return apps;\n  }\n});\n","import { Reaction } from \"/client/api\";\nimport { Tags } from \"/lib/collections\";\n\n/**\n * layoutHeader events\n */\nTemplate.layoutHeader.events({\n  \"click .navbar-accounts .dropdown-toggle\": function () {\n    return setTimeout(function () {\n      return $(\"#login-email\").focus();\n    }, 100);\n  },\n  \"click .header-tag, click .navbar-brand\": function () {\n    return $(\".dashboard-navbar-packages ul li\").removeClass(\"active\");\n  }\n});\n\nTemplate.layoutHeader.helpers({\n  TagNav() {\n    return ReactionUI.TagNav.Components.TagNav;\n  },\n\n  coreNavProps() {\n    const instance = Template.instance();\n    return {\n      onMenuButtonClick() {\n        instance.toggleMenuCallback();\n      }\n    };\n  },\n\n  tagNavProps() {\n    const instance = Template.instance();\n\n    const tags = Tags.find({\n      isTopLevel: true\n    }, {\n      sort: {\n        position: 1\n      }\n    }).fetch();\n\n    return {\n      name: \"coreHeaderNavigation\",\n      editable: Reaction.hasAdminAccess(),\n      tags: tags,\n      onToggleMenu(callback) {\n        // Register the callback\n        instance.toggleMenuCallback = callback;\n      }\n    };\n  }\n});\n","import { Template } from \"meteor/templating\";\n\nTemplate.notFound.onCreated(function () {\n  document.getElementsByTagName(\"head\")[0].insertAdjacentHTML(\"beforeend\", \"<meta name='prerender-status-code' content='404'>\");\n  // todo report not found source\n});\n","import { Template } from \"meteor/templating\";\n\nTemplate.unauthorized.onCreated(function () {\n  document.getElementsByTagName(\"head\")[0].insertAdjacentHTML(\"beforeend\", \"<meta name='prerender-status-code' content='403'>\");\n  // todo report not found source\n});\n","import { Meteor } from \"meteor/meteor\";\nimport { Tracker } from \"meteor/tracker\";\nimport { Reaction, Router } from \"/client/api\";\nimport { Packages, Shops } from \"/lib/collections\";\n\n/**\n * getRouteLayout\n * Gets layout combo based on current route context\n * @param  {Object} context - route context\n * @returns {Object|null} The layout hash\n */\nfunction getRouteLayout(context) {\n  const pkg = Packages.findOne({ \"registry.name\": context.route.name, \"enabled\": true });\n\n  if (pkg) {\n    const registryRoute = pkg.registry.find((x) => {\n      return x.name === context.route.name;\n    });\n\n    if (registryRoute) {\n      // set a default layout if none is given\n      if (!registryRoute.layout) {\n        registryRoute.layout = Session.get(\"DEFAULT_LAYOUT\") || \"coreLayout\";\n      }\n\n      const shop = Shops.findOne(Reaction.getShopId());\n      const currentLayout = shop.layout.find((x) => {\n        if (x.layout === registryRoute.layout && x.workflow === registryRoute.workflow && x.enabled === true) {\n          return true;\n        }\n      });\n\n      return currentLayout;\n    }\n  }\n\n  return null;\n}\n\n/**\n * addBodyClasses\n * Adds body classes to help themes distinguish pages and components based on the current route name and layout theme\n * @param  {Object} context - route context\n * @returns {undefined}\n */\nfunction addBodyClasses(context) {\n  let classes;\n\n  if (context.route.name === undefined) {\n    classes = [\n      \"app-not-found\"\n    ];\n  } else {\n    classes = [\n      // push clean route-name\n      \"app-\" + context.route.name.replace(/[\\/_]/i, \"-\")\n    ];\n  }\n\n  // find the layout combo for this route\n  const currentLayout = getRouteLayout(context);\n\n  // add theme class for route layout or default\n  if (currentLayout && currentLayout.theme) {\n    classes.push(currentLayout.theme);\n  } else {\n    classes.push(\"default\");\n  }\n\n  classes = classes.join(\" \");\n\n  $(\"body\").removeClass(Session.get(\"BODY_CLASS\")).addClass(classes);\n\n  // save for removal on next enter\n  Session.set(\"BODY_CLASS\", classes);\n}\n\nRouter.Hooks.onEnter(addBodyClasses);\n\nMeteor.startup(() => {\n  Tracker.autorun(() => {\n    const subscription = Reaction.Subscriptions.Shops;\n    if (subscription.ready()) {\n      const shop = Shops.findOne({});\n\n      if (shop) {\n        if (shop.theme) {\n          $(\"#reactionLayoutStyles\").text(shop.theme.styles || \"\");\n        } else {\n          $(\"#reactionLayoutStyles\").text(\"\");\n        }\n      }\n    }\n  });\n});\n","import React, { Component } from \"react\";\nimport Blaze from \"meteor/gadicc:blaze-react-component\";\n\nclass CartDrawer extends Component {\n  render() {\n    return (\n      <Blaze template=\"cartDrawer\" className=\"reaction-cart-drawer\" />\n    );\n  }\n}\n\nexport default CartDrawer;\n","import React, { Component, PropTypes } from \"react\";\nimport Blaze from \"meteor/gadicc:blaze-react-component\";\n\nclass Content extends Component {\n  static propTypes = {\n    template: PropTypes.string\n  }\n\n  render() {\n    return (\n      <div>\n        <Blaze template={this.props.template} />\n      </div>\n    );\n  }\n}\n\nexport default Content;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport Header from \"./header\";\nimport CartDrawer from \"./cartDrawer\";\nimport { Content } from \"./\";\n\n\nclass CoreLayout extends Component {\n  static propTypes = {\n    actionViewIsOpen: PropTypes.bool,\n    data: PropTypes.object,\n    structure: PropTypes.object\n  }\n\n  render() {\n    const pageClassName = classnames({\n      \"page\": true,\n      \"show-settings\": this.props.actionViewIsOpen\n    });\n\n    return (\n      <div className={pageClassName} id=\"reactionAppContainer\">\n        <Header template={this.props.structure.layoutHeader} />\n        <CartDrawer />\n        <Content template={this.props.structure.template} />\n      </div>\n    );\n  }\n}\n\nexport default CoreLayout;\n","import React, { Component, PropTypes } from \"react\";\nimport Blaze from \"meteor/gadicc:blaze-react-component\";\n\nclass Header extends Component {\n  static propTypes = {\n    template: PropTypes.string\n  }\n\n  render() {\n    if (this.props.template) {\n      return (\n        <Blaze template={this.props.template} className=\"reaction-navigation-header\" />\n      );\n    }\n\n    return null;\n  }\n}\n\nexport default Header;\n","export { default as CoreLayout } from \"./coreLayout\";\nexport { default as QuickMemu } from \"./quickMenu\";\nexport { default as Header } from \"./header\";\nexport { default as CartDrawer } from \"./cartDrawer\";\nexport { default as Content } from \"./content\";\nexport { default as PrintLayout } from \"./printLayout\";\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Blaze from \"meteor/gadicc:blaze-react-component\";\n\nclass PrintLayout extends Component {\n  static propTypes = {\n    structure: PropTypes.object\n  }\n\n  render() {\n    return (\n      <Blaze template={this.props.structure.template} className=\"reaction-print-layout\" />\n    );\n  }\n}\n\nexport default PrintLayout;\n","import React, { Component, PropTypes } from \"react\";\nimport { Button } from \"/imports/plugins/core/ui/client/components\";\n\nclass QuickMenu extends Component {\n  static propTypes = {\n    buttons: PropTypes.array\n  }\n\n  renderButtons() {\n    if (Array.isArray(this.props.buttons)) {\n      return this.props.buttons.map((buttonProps, index) => {\n        if (buttonProps.type === \"seperator\") {\n          return (\n            <div className=\"rui separator padding xs\" key={index}>\n              <hr />\n            </div>\n          );\n        }\n\n        const { type, ...otherButtonProps } = buttonProps;\n\n        return (\n          <Button\n            key={index}\n            tagName={type === \"link\" ? \"a\" : \"button\"}\n            {...otherButtonProps}\n          />\n        );\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"rui toolbar toolbar-vertical admin-controls-menu\">\n        <nav className=\"rui toolbar-group admin-controls-quicklinks\">\n          {this.renderButtons()}\n        </nav>\n      </div>\n\n    );\n  }\n}\n\nexport default QuickMenu;\n","import \"./templates/layout/admin/admin.html\";\nimport \"./templates/layout/admin/admin.js\";\nimport \"./templates/layout/alerts/alerts.html\";\nimport \"./templates/layout/alerts/alerts.js\";\nimport \"./templates/layout/alerts/inlineAlerts.js\";\nimport \"./templates/layout/alerts/reactionAlerts.js\";\nimport \"./templates/layout/createContentMenu/createContentMenu.html\";\nimport \"./templates/layout/createContentMenu/createContentMenu.js\";\nimport \"./templates/layout/footer/footer.html\";\nimport \"./templates/layout/header/brand.html\";\nimport \"./templates/layout/header/button.html\";\nimport \"./templates/layout/header/header.html\";\nimport \"./templates/layout/header/header.js\";\nimport \"./templates/layout/header/tags.html\";\nimport \"./templates/layout/notFound/notFound.html\";\nimport \"./templates/layout/notFound/notFound.js\";\nimport \"./templates/layout/notice/unauthorized.html\";\nimport \"./templates/layout/notice/unauthorized.js\";\nimport \"./templates/layout/layout.html\";\n\nimport \"./templates/theme/theme.html\";\nimport \"./templates/theme/theme.js\";\n\n\nimport CoreLayout from \"./components/coreLayout\";\nimport PrintLayout from \"./components/printLayout\";\nimport { registerComponent } from \"../lib/components\";\n\n\nregisterComponent({\n  name: \"coreLayout\", // lowercased to match the legacy blaze \"coreLayout\"\n  component: CoreLayout\n});\n\n\nregisterComponent({\n  name: \"printLayout\", // lowercased to match the legacy blaze \"printLayout\"\n  component: PrintLayout\n});\n","import ReactDOM from \"react-dom\";\nimport { Blaze } from \"meteor/blaze\";\nimport { ReactiveVar } from \"meteor/reactive-var\";\nimport { Template } from \"meteor/templating\";\nimport BlazeComponent from \"meteor/gadicc:blaze-react-component\";\nimport PropTypes from \"prop-types\";\n\nclass BlazeLayout extends BlazeComponent {\n  static propTypes = {\n    blazeLayout: PropTypes.any\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.blazeTemplate !== this.props.blazeTemplate) {\n      Blaze.remove(this._blazeView);\n      this.renderBlazeView();\n    }\n  }\n\n  renderBlazeView() {\n    this._blazeData = new ReactiveVar(_.omit(this.props, \"blazeTemplate\"));\n\n    let template;\n    const tArg = this.props.blazeTemplate;\n\n    if (typeof tArg === \"string\") {\n      template = Template[tArg];\n      if (!template) {\n        throw new Error(`No Template[\"${tArg}\"] exists.  If this template `\n          + \"originates in your app, make sure you have the `templating` \"\n          + \"package installed (and not, for e.g. `static-html`)\");\n      }\n    } else if (tArg instanceof Blaze.Template) {\n      template = tArg;\n    } else {\n      throw new Error(\"Invalid blazeTemplate= argument specified.  Expected \"\n        + \"the string name of an existing Template, or the template \"\n        + \"itself, instead got ''\" + typeof tArg + \": \"\n        + JSON.stringify(tArg));\n    }\n\n    this._blazeView = Blaze.renderWithData(\n      template,\n      () => this._blazeData.get(),\n      ReactDOM.findDOMNode(this._blazeRef)\n    );\n  }\n\n  shouldComponentUpdate(nextProps) {\n    // Never call render() for props except template again; Blaze will do what's necessary.\n    return nextProps.blazeTemplate !== this.props.blazeTemplate;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this._blazeData.set(_.omit(nextProps, \"blazeTemplate\"));\n  }\n}\n\nexport default BlazeLayout;\n","import Immutable from \"immutable\";\n\nlet registeredComponents = Immutable.Map();\n\nexport function registerComponent(componentInfo) {\n  registeredComponents = registeredComponents.set(\n    componentInfo.name,\n    componentInfo\n  );\n}\n\nexport function getComponent(name) {\n  const componentInfo = registeredComponents.get(name);\n  return componentInfo && componentInfo.component || null;\n}\n\nexport function getAllComponents() {\n  return registeredComponents.toObject();\n}\n","export { default as ReactionLayout } from \"./reactionLayout\";\n","import React, { Component, PropTypes } from \"react\";\nimport Radium from \"radium\";\nimport { composeWithTracker } from \"/lib/api/compose\";\nimport { Reaction } from \"/client/api\";\nimport classnames from \"classnames\";\nimport { getComponent } from \"/imports/plugins/core/layout/lib/components\";\nimport { Templates } from \"/lib/collections\";\nimport { Loading } from \"/imports/plugins/core/ui/client/components\";\n\nclass ReactionLayout extends Component {\n\n  get layout() {\n    return this.props.layout;\n  }\n\n  checkElementPermissions(block) {\n    let permissions;\n    const hasAdminAccess = Reaction.hasAdminAccess();\n\n    if (hasAdminAccess === false) {\n      permissions = block.audience || this.props.defaultAudience;\n    } else {\n      permissions = block.permissions || this.props.defaultPermissions;\n    }\n\n    return Reaction.hasPermission(permissions || []);\n  }\n\n  renderLayout(children) {\n    if (!Array.isArray(children)) {\n      return null;\n    }\n\n    const elements = children.map((block, index) => {\n      let childElements;\n\n      if (Array.isArray(block.children)) {\n        childElements = block.children.map((child, childIndex) => {\n          if (child.type === \"block\") {\n            return this.renderLayout([child]);\n          }\n\n          if (this.checkElementPermissions(child)) {\n            let component = child.component;\n\n            if (typeof child.component === \"string\") {\n              component = getComponent(child.component);\n            }\n\n            return React.createElement(component, {\n              key: childIndex,\n              ...(child.props || {}),\n              ...this.props.layoutProps\n            });\n          }\n\n          return null;\n        });\n      }\n\n\n      if (this.checkElementPermissions(block)) {\n        return React.createElement(block.element || \"div\", {\n          key: index,\n          // className: classnames(`rui col-xs-${block.columns || 12}`, block.className),\n          className: classnames({\n            rui: true,\n            item: true,\n            [block.size || \"full\"]: true,\n            align: typeof block.align === \"string\",\n            [block.align || \"start\"]: true,\n            justify: typeof block.align === \"string\",\n            [block.justify || \"start\"]: true,\n            axis: true, // typeof block.axis === \"string\",\n            horizontal: block.axis === \"horizontal\",\n            vertical: block.axis !== \"horizontal\"\n          }, block.className),\n          style: block.style,\n          children: childElements\n        });\n      }\n\n      return null;\n    });\n\n    return elements;\n  }\n\n  render() {\n    return (\n        <div className=\"rui layout-base items flex\">\n          {this.renderLayout(this.layout)}\n        </div>\n    );\n  }\n}\n\nReactionLayout.propTypes = {\n  defaultAudience: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string)\n  ]),\n  defaultPermissions: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string)\n  ]),\n  layout: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  layoutProps: PropTypes.object\n};\n\nfunction composer(props, onData) {\n  const sub = Meteor.subscribe(\"Templates\");\n\n  if (sub.ready()) {\n    const templateInfo = Templates.findOne({\n      name: props.layoutName\n    });\n\n    if (templateInfo) {\n      const templateData = templateInfo.template;\n\n      onData(null, {\n        defaultPermissions: [\"admin\"],\n        defaultAudience: [\"guest\", \"anonymous\"],\n        layout: templateData\n      });\n    }\n  }\n}\n\nexport default composeWithTracker(composer, Loading)(Radium(ReactionLayout));\n","import moment from \"moment\";\nimport { Accounts } from \"/lib/collections\";\nimport { Template } from \"meteor/templating\";\n\n/**\n * orderDetail helpers\n *\n * order state tracking, user profile helpers\n *\n * @returns {undefined} user profile details on orders\n */\nTemplate.orderDetail.onCreated(function () {\n  this.subscribe(\"UserProfile\", this.userId);\n});\n\nTemplate.orderDetail.helpers({\n  userProfile: function () {\n    const instance = Template.instance();\n    if (instance.subscriptionsReady()) {\n      if (typeof this.userId === \"string\") {\n        const userProfile = Accounts.findOne(this.userId);\n        if (!userProfile) {\n          return {};\n        }\n        return userProfile.profile;\n      }\n    }\n  },\n  orderAge: function () {\n    return moment(this.createdAt).fromNow();\n  },\n  shipmentTracking: function () {\n    return this.shipping.shipmentMethod.tracking;\n  }\n});\n","import { Template } from \"meteor/templating\";\nimport { Media } from \"/lib/collections\";\n\n/**\n * ordersListItems helpers\n *\n */\nTemplate.ordersListItems.helpers({\n  media: function () {\n    const variantImage = Media.findOne({\n      \"metadata.productId\": this.productId,\n      \"metadata.variantId\": this.variants._id\n    });\n    // variant image\n    if (variantImage) {\n      return variantImage;\n    }\n    // find a default image\n    const productImage = Media.findOne({\n      \"metadata.productId\": this.productId\n    });\n    if (productImage) {\n      return productImage;\n    }\n    return false;\n  },\n\n  items() {\n    const { order } = Template.instance().data;\n    const combinedItems = [];\n\n\n    if (order) {\n      // Lopp through all items in the order. The items are split into indivital items\n      for (const orderItem of order.items) {\n        // Find an exising item in the combinedItems array\n        const foundItem = combinedItems.find((combinedItem) => {\n          // If and item variant exists, then we return true\n          if (combinedItem.variants) {\n            return combinedItem.variants._id === orderItem.variants._id;\n          }\n\n          return false;\n        });\n\n        // Increment the quantity count for the duplicate product variants\n        if (foundItem) {\n          foundItem.quantity++;\n        } else {\n          // Otherwise push the unique item into the combinedItems array\n          combinedItems.push(orderItem);\n        }\n      }\n\n      return combinedItems;\n    }\n\n    return false;\n  }\n});\n","import moment from \"moment\";\nimport { Template } from \"meteor/templating\";\nimport { Orders, Shops } from \"/lib/collections\";\n\n/**\n * dashboardOrdersList helpers\n *\n */\nTemplate.dashboardOrdersList.helpers({\n  orderStatus() {\n    if (this.workflow.status === \"coreOrderCompleted\") {\n      return true;\n    }\n  },\n  orders(data) {\n    if (data.hash.data) {\n      return data.hash.data;\n    }\n    return Orders.find({}, {\n      sort: {\n        createdAt: -1\n      },\n      limit: 25\n    });\n  },\n  orderAge() {\n    return moment(this.createdAt).fromNow();\n  },\n  shipmentTracking() {\n    return this.shipping[0].shipmentMethod.tracking;\n  },\n  shopName() {\n    const shop = Shops.findOne(this.shopId);\n    return shop !== null ? shop.name : void 0;\n  }\n});\n","import { Template } from \"meteor/templating\";\nimport { Router } from \"/client/api\";\nimport { Orders } from \"/lib/collections\";\nimport { ReactiveDict } from \"meteor/reactive-dict\";\n\n/**\n* completedPDFLayout\n* inheritsHelpersFrom dashboardOrdersList\n* Uses the browser print function.\n*/\nTemplate.completedPDFLayout.onCreated(function () {\n  this.state = new ReactiveDict();\n  this.state.setDefault({\n    order: {}\n  });\n\n  const currentRoute = Router.current();\n\n  this.autorun(() => {\n    this.subscribe(\"Orders\");\n\n    const order = Orders.findOne({\n      _id: currentRoute.params.id\n    });\n\n    this.state.set({\n      order\n    });\n  });\n});\n\n\nTemplate.completedPDFLayout.helpers({\n  order() {\n    return Template.instance().state.get(\"order\");\n  },\n  billing() {\n    const order = Template.instance().state.get(\"order\");\n    if (order) {\n      return order.billing[0];\n    }\n\n    return null;\n  }\n});\n","import { Template } from \"meteor/templating\";\n\n/**\n * ordersListSummary helpers\n *\n * @returns paymentInvoice\n */\nTemplate.ordersListSummary.helpers({\n  invoice() {\n    return this.invoice;\n  }\n});\n","import moment from \"moment\";\nimport { Template } from \"meteor/templating\";\nimport { Accounts } from \"/lib/collections\";\n\n/**\n* pageOrderDetail helpers\n*\n*/\nTemplate.pageOrderDetail.helpers({\n  userProfile: function () {\n    if (typeof this.userId === \"string\") {\n      const userProfile = Accounts.findOne(this.userId);\n      return userProfile.profile;\n    }\n  },\n  orderAge: function () {\n    return moment(this.createdAt).fromNow();\n  },\n  shipmentTracking: function () {\n    return this.shipping.shipmentMethod.tracking;\n  },\n  paymentMethod: function () {\n    return this.payment.paymentMethod[0].processor;\n  }\n});\n","import { Meteor } from \"meteor/meteor\";\nimport { Template } from \"meteor/templating\";\nimport { Orders } from \"/lib/collections\";\n\n/**\n * orderPage helpers\n *\n */\n\nTemplate.orderPage.helpers({\n  getNote: function () {\n    let latestNote;\n    if (this.notes) {\n      latestNote = this.notes.length - 1;\n      return this.notes[latestNote].content;\n    }\n  }\n});\n\n/**\n * orderPage events\n *\n */\n\nTemplate.orderPage.events({\n  \"click .save-label-pdf\": function () {},\n  \"click .btn-add-note\": function (event, template) {\n    const date = new Date();\n    const content = template.find(\"textarea[name=note]\").value;\n    const note = {\n      content: content,\n      userId: Meteor.userId(),\n      updatedAt: date\n    };\n    if (this.notes) {\n      if (note.content && note.content !== this.notes[this.notes.length - 1].content) {\n        Orders.update(this._id, {\n          $addToSet: {\n            notes: note\n          }\n        });\n      }\n    } else if (note.content) {\n      Orders.update(this._id, {\n        $addToSet: {\n          notes: note\n        }\n      });\n    }\n  }\n});\n","import accounting from \"accounting-js\";\nimport _ from \"lodash\";\nimport { Meteor } from \"meteor/meteor\";\nimport $ from \"jquery\";\nimport { Template } from \"meteor/templating\";\nimport { ReactiveVar } from \"meteor/reactive-var\";\nimport { i18next, Logger, formatNumber, Reaction } from \"/client/api\";\nimport { NumericInput } from \"/imports/plugins/core/ui/client/components\";\nimport { Orders, Shops, Packages } from \"/lib/collections\";\nimport { ButtonSelect } from \"../../../../ui/client/components/button\";\nimport DiscountList from \"/imports/plugins/core/discounts/client/components/list\";\nimport InvoiceContainer from \"../../containers/invoiceContainer.js\";\nimport LineItemsContainer from \"../../containers/lineItemsContainer.js\";\nimport TotalActionsContainer from \"../../containers/totalActionsContainer.js\";\n\n\n// helper to return the order payment object\n// the first credit paymentMethod on the order\n// returns entire payment method\nfunction orderCreditMethod(order) {\n  return order.billing.filter(value => value.paymentMethod.method ===  \"credit\")[0];\n}\n\n//\n// core order shipping invoice templates\n//\nTemplate.coreOrderShippingInvoice.onCreated(function () {\n  this.state = new ReactiveDict();\n  this.refunds = new ReactiveVar([]);\n  this.refundAmount = new ReactiveVar(0.00);\n  this.state.setDefault({\n    isCapturing: false,\n    isRefunding: false,\n    isFetching: true\n  });\n\n  this.autorun(() => {\n    const currentData = Template.currentData();\n    const order = Orders.findOne(currentData.orderId);\n    const shop = Shops.findOne({});\n\n    this.state.set(\"order\", order);\n    this.state.set(\"currency\", shop.currencies[shop.currency]);\n\n    if (order) {\n      Meteor.call(\"orders/refunds/list\", order, (error, result) => {\n        if (error) Logger.warn(error);\n        this.refunds.set(result);\n        this.state.set(\"isFetching\", false);\n      });\n    }\n  });\n});\n\nTemplate.coreOrderShippingInvoice.helpers({\n  isCapturing() {\n    const instance = Template.instance();\n    if (instance.state.get(\"isCapturing\")) {\n      instance.$(\":input\").attr(\"disabled\", true);\n      instance.$(\"#btn-capture-payment\").text(\"Capturing\");\n      return true;\n    }\n    return false;\n  },\n  isRefunding() {\n    const instance = Template.instance();\n    if (instance.state.get(\"isRefunding\")) {\n      instance.$(\"#btn-refund-payment\").text(i18next.t(\"order.refunding\"));\n      return true;\n    }\n    return false;\n  },\n  isFetching() {\n    const instance = Template.instance();\n    if (instance.state.get(\"isFetching\")) {\n      return true;\n    }\n    return false;\n  },\n  DiscountList() {\n    return DiscountList;\n  },\n  InvoiceContainer() {\n    return InvoiceContainer;\n  },\n  buttonSelectComponent() {\n    return {\n      component: ButtonSelect,\n      buttons: [\n        {\n          name: \"Approve\",\n          i18nKeyLabel: \"order.approveInvoice\",\n          active: true,\n          status: \"info\",\n          eventAction: \"approveInvoice\",\n          bgColor: \"bg-info\",\n          buttonType: \"submit\"\n        }, {\n          name: \"Cancel\",\n          i18nKeyLabel: \"order.cancelInvoice\",\n          active: false,\n          status: \"danger\",\n          eventAction: \"cancelOrder\",\n          bgColor: \"bg-danger\",\n          buttonType: \"button\"\n        }\n      ]\n    };\n  },\n  LineItemsContainer() {\n    return LineItemsContainer;\n  },\n  TotalActionsContainer() {\n    return TotalActionsContainer;\n  },\n  orderId() {\n    const instance = Template.instance();\n    const state = instance.state;\n    const order = state.get(\"order\");\n    return order._id;\n  }\n});\n\n/**\n * coreOrderAdjustments events\n */\nTemplate.coreOrderShippingInvoice.events({\n  /**\n   * Click Start Cancel Order\n   * @param {Event} event - Event Object\n   * @param {Template} instance - Blaze Template\n   * @return {void}\n   */\n  \"click [data-event-action=cancelOrder]\": (event, instance) => {\n    event.preventDefault();\n    const order = instance.state.get(\"order\");\n    const invoiceTotal = order.billing[0].invoice.total;\n    const currencySymbol = instance.state.get(\"currency\").symbol;\n\n    Meteor.subscribe(\"Packages\");\n    const packageId = order.billing[0].paymentMethod.paymentPackageId;\n    const settingsKey = order.billing[0].paymentMethod.paymentSettingsKey;\n    // check if payment provider supports de-authorize\n    const checkSupportedMethods = Packages.findOne({\n      _id: packageId,\n      shopId: Reaction.getShopId()\n    }).settings[settingsKey].support;\n\n    const orderStatus = order.billing[0].paymentMethod.status;\n    const orderMode = order.billing[0].paymentMethod.mode;\n\n    let alertText;\n    if (_.includes(checkSupportedMethods, \"de-authorize\") ||\n      (orderStatus === \"completed\" && orderMode === \"capture\")) {\n      alertText = i18next.t(\"order.applyRefundDuringCancelOrder\", { currencySymbol, invoiceTotal });\n    }\n\n    Alerts.alert({\n      title: i18next.t(\"order.cancelOrder\"),\n      text: alertText,\n      type: \"warning\",\n      showCancelButton: true,\n      showCloseButton: true,\n      confirmButtonColor: \"#98afbc\",\n      cancelButtonColor: \"#98afbc\",\n      confirmButtonText: i18next.t(\"order.cancelOrderNoRestock\"),\n      cancelButtonText: i18next.t(\"order.cancelOrderThenRestock\")\n    }, (isConfirm, cancel)=> {\n      let returnToStock;\n      if (isConfirm) {\n        returnToStock = false;\n        return Meteor.call(\"orders/cancelOrder\", order, returnToStock, err => {\n          if (err) {\n            $(\".alert\").removeClass(\"hidden\").text(err.message);\n          }\n        });\n      }\n      if (cancel === \"cancel\") {\n        returnToStock = true;\n        return Meteor.call(\"orders/cancelOrder\", order, returnToStock, err => {\n          if (err) {\n            $(\".alert\").removeClass(\"hidden\").text(err.message);\n          }\n        });\n      }\n    });\n  },\n  /**\n   * Submit form\n   * @param  {Event} event - Event object\n   * @param  {Template} instance - Blaze Template\n   * @return {void}\n   */\n  \"submit form[name=capture]\": (event, instance) => {\n    event.preventDefault();\n    const state = instance.state;\n    const order = state.get(\"order\");\n\n    const paymentMethod = orderCreditMethod(order);\n    const orderTotal = accounting.toFixed(\n      paymentMethod.invoice.subtotal\n      + paymentMethod.invoice.shipping\n      + paymentMethod.invoice.taxes\n      , 2);\n\n    const discount = state.get(\"field-discount\") || order.discount;\n    // TODO: review Discount cannot be greater than original total price\n    // logic is probably not valid any more. Discounts aren't valid below 0 order.\n    if (discount > orderTotal) {\n      Alerts.inline(\"Discount cannot be greater than original total price\", \"error\", {\n        placement: \"coreOrderShippingInvoice\",\n        i18nKey: \"order.invalidDiscount\",\n        autoHide: 10000\n      });\n    } else if (orderTotal === accounting.toFixed(discount, 2)) {\n      Alerts.alert({\n        title: i18next.t(\"order.fullDiscountWarning\"),\n        showCancelButton: true,\n        confirmButtonText: i18next.t(\"order.applyDiscount\")\n      }, (isConfirm) => {\n        if (isConfirm) {\n          Meteor.call(\"orders/approvePayment\", order, (error) => {\n            if (error) {\n              Logger.warn(error);\n            }\n          });\n        }\n      });\n    } else {\n      Meteor.call(\"orders/approvePayment\", order, (error) => {\n        if (error) {\n          Logger.warn(error);\n          if (error.error === \"orders/approvePayment.discount-amount\") {\n            Alerts.inline(\"Discount cannot be greater than original total price\", \"error\", {\n              placement: \"coreOrderShippingInvoice\",\n              i18nKey: \"order.invalidDiscount\",\n              autoHide: 10000\n            });\n          }\n        }\n      });\n    }\n  },\n\n  /**\n   * Submit form\n   * @param  {Event} event - Event object\n   * @param  {Template} instance - Blaze Template\n   * @return {void}\n   */\n  \"click [data-event-action=applyRefund]\": (event, instance) => {\n    event.preventDefault();\n\n    const { state } = Template.instance();\n    const currencySymbol = state.get(\"currency\").symbol;\n    const order = instance.state.get(\"order\");\n    const paymentMethod = orderCreditMethod(order).paymentMethod;\n    const orderTotal = paymentMethod.amount;\n    const discounts = paymentMethod.discounts;\n    const refund = state.get(\"field-refund\") || 0;\n    const refunds = Template.instance().refunds.get();\n    let refundTotal = 0;\n    _.each(refunds, function (item) {\n      refundTotal += parseFloat(item.amount);\n    });\n\n    let adjustedTotal;\n\n    // TODO extract Stripe specific fullfilment payment handling out of core.\n    // Stripe counts discounts as refunds, so we need to re-add the discount to not \"double discount\" in the adjustedTotal\n    if (paymentMethod.processor === \"Stripe\") {\n      adjustedTotal = accounting.toFixed(orderTotal + discounts - refundTotal, 2);\n    } else {\n      adjustedTotal = accounting.toFixed(orderTotal - refundTotal, 2);\n    }\n\n    if (refund > adjustedTotal) {\n      Alerts.inline(\"Refund(s) total cannot be greater than adjusted total\", \"error\", {\n        placement: \"coreOrderRefund\",\n        i18nKey: \"order.invalidRefund\",\n        autoHide: 10000\n      });\n    } else {\n      Alerts.alert({\n        title: i18next.t(\"order.applyRefundToThisOrder\", { refund: refund, currencySymbol: currencySymbol }),\n        showCancelButton: true,\n        confirmButtonText: i18next.t(\"order.applyRefund\")\n      }, (isConfirm) => {\n        if (isConfirm) {\n          state.set(\"isRefunding\", true);\n          Meteor.call(\"orders/refunds/create\", order._id, paymentMethod, refund, (error, result) => {\n            if (error) {\n              Alerts.alert(error.reason);\n            }\n            if (result) {\n              Alerts.toast(i18next.t(\"mail.alerts.emailSent\"), \"success\");\n            }\n            $(\"#btn-refund-payment\").text(i18next.t(\"order.applyRefund\"));\n            state.set(\"field-refund\", 0);\n            state.set(\"isRefunding\", false);\n          });\n        }\n      });\n    }\n  },\n\n  \"click [data-event-action=makeAdjustments]\": (event, instance) => {\n    event.preventDefault();\n    Meteor.call(\"orders/makeAdjustmentsToInvoice\", instance.state.get(\"order\"));\n  },\n\n  \"click [data-event-action=capturePayment]\": (event, instance) => {\n    event.preventDefault();\n\n    instance.state.set(\"isCapturing\", true);\n\n    const order = instance.state.get(\"order\");\n    Meteor.call(\"orders/capturePayments\", order._id);\n\n    if (order.workflow.status === \"new\") {\n      Meteor.call(\"workflow/pushOrderWorkflow\", \"coreOrderWorkflow\", \"processing\", order);\n\n      Reaction.Router.setQueryParams({\n        filter: \"processing\",\n        _id: order._id\n      });\n    }\n  },\n\n  \"change input[name=refund_amount], keyup input[name=refund_amount]\": (event, instance) => {\n    instance.refundAmount.set(accounting.unformat(event.target.value));\n  }\n});\n\n\n/**\n * coreOrderShippingInvoice helpers\n */\nTemplate.coreOrderShippingInvoice.helpers({\n  NumericInput() {\n    return NumericInput;\n  },\n\n  numericInputProps(fieldName, value = 0, enabled = true) {\n    const { state } = Template.instance();\n    const order = state.get(\"order\");\n    const paymentMethod = orderCreditMethod(order);\n    const status = paymentMethod.status;\n    const isApprovedAmount = (status === \"approved\" || status === \"completed\");\n\n    return {\n      component: NumericInput,\n      numericType: \"currency\",\n      value: value,\n      disabled: !enabled,\n      isEditing: !isApprovedAmount, // Dont allow editing if its approved\n      format: state.get(\"currency\"),\n      classNames: {\n        input: { amount: true },\n        text: {\n          \"text-success\": status === \"completed\"\n        }\n      },\n      onChange(event, data) {\n        state.set(`field-${fieldName}`, data.numberValue);\n      }\n    };\n  },\n\n  refundInputProps() {\n    const { state } = Template.instance();\n    const order = state.get(\"order\");\n    const paymentMethod = orderCreditMethod(order).paymentMethod;\n    const refunds = Template.instance().refunds.get();\n\n    let refundTotal = 0;\n    _.each(refunds, function (item) {\n      refundTotal += parseFloat(item.amount);\n    });\n    const adjustedTotal = paymentMethod.amount - refundTotal;\n\n    return {\n      component: NumericInput,\n      numericType: \"currency\",\n      value: state.get(\"field-refund\") || 0,\n      maxValue: adjustedTotal,\n      format: state.get(\"currency\"),\n      classNames: {\n        input: { amount: true }\n      },\n      onChange(event, data) {\n        state.set(\"field-refund\", data.numberValue);\n      }\n    };\n  },\n\n  refundAmount() {\n    return Template.instance().refundAmount;\n  },\n\n  invoice() {\n    const instance = Template.instance();\n    const order = instance.state.get(\"order\");\n\n    const invoice = Object.assign({}, order.billing[0].invoice, {\n      totalItems: _.sumBy(order.items, (o) => o.quantity)\n    });\n    return invoice;\n  },\n\n  money(amount) {\n    return formatNumber(amount);\n  },\n\n  disabled() {\n    const instance = Template.instance();\n    const order = instance.state.get(\"order\");\n    const status = orderCreditMethod(order).paymentMethod.status;\n\n    if (status === \"approved\" || status === \"completed\") {\n      return \"disabled\";\n    }\n\n    return \"\";\n  },\n\n  paymentPendingApproval() {\n    const instance = Template.instance();\n    const order = instance.state.get(\"order\");\n    const status = orderCreditMethod(order).paymentMethod.status;\n\n    return status === \"created\" || status === \"adjustments\" || status === \"error\";\n  },\n\n  canMakeAdjustments() {\n    const instance = Template.instance();\n    const order = instance.state.get(\"order\");\n    const status = orderCreditMethod(order).paymentMethod.status;\n\n    if (status === \"approved\" || status === \"completed\") {\n      return false;\n    }\n    return true;\n  },\n\n  showAfterPaymentCaptured() {\n    const instance = Template.instance();\n    const order = instance.state.get(\"order\");\n    const orderStatus = orderCreditMethod(order).paymentMethod.status;\n    return orderStatus === \"completed\";\n  },\n\n  paymentApproved() {\n    const instance = Template.instance();\n    const order = instance.state.get(\"order\");\n\n    return order.billing[0].paymentMethod.status === \"approved\";\n  },\n\n  paymentCaptured() {\n    const instance = Template.instance();\n    const order = instance.state.get(\"order\");\n    const orderStatus = orderCreditMethod(order).paymentMethod.status;\n    const orderMode = orderCreditMethod(order).paymentMethod.mode;\n    return orderStatus === \"completed\" || (orderStatus === \"refunded\" && orderMode === \"capture\");\n  },\n\n  refundTransactions() {\n    const instance = Template.instance();\n    const order = instance.state.get(\"order\");\n    const transactions = orderCreditMethod(order).paymentMethod.transactions;\n\n    return _.filter(transactions, (transaction) => {\n      return transaction.type === \"refund\";\n    });\n  },\n\n  refunds() {\n    const refunds = Template.instance().refunds.get();\n    if (_.isArray(refunds)) {\n      return refunds.reverse();\n    }\n\n    return refunds;\n  },\n\n  /**\n   * Get the total after all refunds\n   * @return {Number} the amount after all refunds\n   */\n  adjustedTotal() {\n    const instance = Template.instance();\n    const order = instance.state.get(\"order\");\n    const paymentMethod = orderCreditMethod(order).paymentMethod;\n    const discounts = orderCreditMethod(order).invoice.discounts;\n    const refunds = Template.instance().refunds.get();\n    let refundTotal = 0;\n\n    _.each(refunds, function (item) {\n      refundTotal += parseFloat(item.amount);\n    });\n\n    if (paymentMethod.processor === \"Stripe\") {\n      return Math.abs(paymentMethod.amount + discounts - refundTotal);\n    }\n    return Math.abs(paymentMethod.amount - refundTotal);\n  },\n\n  capturedDisabled() {\n    const isLoading = Template.instance().state.get(\"isCapturing\");\n    if (isLoading) {\n      return \"disabled\";\n    }\n    return null;\n  },\n\n  refundSubmitDisabled() {\n    const amount = Template.instance().state.get(\"field-refund\") || 0;\n    const isLoading = Template.instance().state.get(\"isRefunding\");\n    if (amount === 0 || isLoading) {\n      return \"disabled\";\n    }\n\n    return null;\n  },\n\n  /**\n   * Order\n   * @summary find a single order using the order id spplied with the template\n   * data context\n   * @return {Object} A single order\n   */\n  order() {\n    const instance = Template.instance();\n    const order = instance.state.get(\"order\");\n\n    return order;\n  },\n\n  shipment() {\n    const instance = Template.instance();\n    const order = instance.state.get(\"order\");\n\n    const shipment = _.filter(order.shipping, { _id: currentData.fulfillment._id })[0];\n\n    return shipment;\n  },\n\n  discounts() {\n    const enabledPaymentsArr = [];\n    const apps = Reaction.Apps({\n      provides: \"paymentMethod\",\n      enabled: true\n    });\n    for (app of apps) {\n      if (app.enabled === true) enabledPaymentsArr.push(app);\n    }\n    let discount = false;\n\n    for (enabled of enabledPaymentsArr) {\n      if (enabled.packageName === \"discount-codes\") {\n        discount = true;\n        break;\n      }\n    }\n    return discount;\n  },\n\n  items() {\n    const instance = Template.instance();\n    const order = instance.state.get(\"order\");\n    const currentData = Template.currentData();\n    const shipment = currentData.fulfillment;\n\n    // returns order items with shipping detail\n    const returnItems = _.map(order.items, (item) => {\n      const shipping = shipment.shipmentMethod;\n      return _.extend(item, { shipping });\n    });\n\n    let items;\n\n\n    // if avalara tax has been enabled it adds a \"taxDetail\" field for every item\n    if (order.taxes !== undefined) {\n      const taxes = order.taxes.slice(0, -1);\n\n      items = _.map(returnItems, (item) => {\n        const taxDetail = _.find(taxes, {\n          lineNumber: item._id\n        });\n        return _.extend(item, { taxDetail });\n      });\n    } else {\n      items = returnItems;\n    }\n    return items;\n  }\n});\n","import { Template } from \"meteor/templating\";\nimport OrderSummaryContainer from \"../../containers/orderSummaryContainer\";\n\nTemplate.coreOrderShippingSummary.helpers({\n  orderSummary() {\n    return {\n      component: OrderSummaryContainer,\n      ...Template.currentData()\n    };\n  }\n});\n","import _ from \"lodash\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Tracker } from \"meteor/tracker\";\nimport { Template } from \"meteor/templating\";\nimport { i18next, Reaction } from \"/client/api\";\nimport { Orders } from \"/lib/collections\";\n\nTemplate.coreOrderShippingTracking.onCreated(() => {\n  const template = Template.instance();\n  const currentData = Template.currentData();\n\n  template.orderDep = new Tracker.Dependency;\n  template.showTrackingEditForm = ReactiveVar(false);\n\n  function getOrder(orderId, shipmentId) {\n    template.orderDep.depend();\n    return Orders.findOne({\n      \"_id\": orderId,\n      \"shipping._id\": shipmentId\n    });\n  }\n\n  Tracker.autorun(() => {\n    template.order = getOrder(currentData.orderId, currentData.fulfillment._id);\n  });\n});\n\n/**\n * coreShipmentShipped events\n *\n */\nTemplate.coreOrderShippingTracking.events({\n  \"click [data-event-action=refresh-shipping]\": function () {\n    const instance = Template.instance();\n    instance.$(\"#btn-processing\").removeClass(\"hidden\");\n    const orderId = Template.instance().order._id;\n    Meteor.call(\"shipping/status/refresh\", orderId, (result) => {\n      if (result && result.error) {\n        instance.$(\"#btn-processing\").addClass(\"hidden\");\n        Alerts.toast(i18next.t(\"orderShipping.labelError\", { err: result.error }), \"error\", { timeout: 7000 });\n      }\n    });\n  },\n  \"click [data-event-action=shipmentShipped]\": function () {\n    const template = Template.instance();\n    Meteor.call(\"orders/shipmentShipped\", template.order, template.order.shipping[0], (err) => {\n      if (err) {\n        Alerts.toast(i18next.t(\"mail.alerts.cantSendEmail\"), \"error\");\n      } else {\n        Alerts.toast(i18next.t(\"mail.alerts.emailSent\"), \"success\");\n      }\n    });\n\n    // send notification to order owner\n    const userId = template.order.userId;\n    const type = \"orderShipped\";\n    const prefix = Reaction.getShopPrefix();\n    const url = `${prefix}/notifications`;\n    const sms = true;\n    Meteor.call(\"notification/send\", userId, type, url, sms);\n\n    // Meteor.call(\"workflow/pushOrderShipmentWorkflow\", \"coreOrderShipmentWorkflow\", \"orderShipped\", this._id);\n  },\n\n  \"click [data-event-action=resendNotification]\": function () {\n    const template = Template.instance();\n    Meteor.call(\"orders/sendNotification\", template.order, \"shipped\", (err) => {\n      if (err) {\n        Alerts.toast(i18next.t(\"mail.alerts.cantSendEmail\"), \"error\");\n      } else {\n        Alerts.toast(i18next.t(\"mail.alerts.emailSent\"), \"success\");\n      }\n    });\n  },\n\n  \"click [data-event-action=shipmentPacked]\": () => {\n    const template = Template.instance();\n\n    Meteor.call(\"orders/shipmentPacked\", template.order, template.order.shipping[0], true);\n  },\n\n  \"submit form[name=addTrackingForm]\": (event, template) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const currentData = Template.currentData();\n    const order = template.order;\n    const shipment = currentData.fulfillment;\n    const tracking = event.target.trackingNumber.value;\n\n    Meteor.call(\"orders/updateShipmentTracking\", order, shipment, tracking,\n      (error) => {\n        if (!error) {\n          template.orderDep.changed();\n          template.showTrackingEditForm.set(false);\n        }\n      });\n  },\n  \"click [data-event-action=editTracking]\": (event, template) => {\n    template.showTrackingEditForm.set(true);\n  }\n});\n\nTemplate.coreOrderShippingTracking.helpers({\n  printableLabels() {\n    const { shippingLabelUrl, customsLabelUrl } = Template.instance().order.shipping[0];\n    if (shippingLabelUrl || customsLabelUrl) {\n      return { shippingLabelUrl, customsLabelUrl };\n    }\n\n    return false;\n  },\n  isShipped() {\n    const currentData = Template.currentData();\n    const order = Template.instance().order;\n\n    const shippedItems = _.every(currentData.fulfillment.items, (shipmentItem) => {\n      const fullItem = _.find(order.items, (orderItem) => {\n        if (orderItem._id === shipmentItem._id) {\n          return true;\n        }\n      });\n\n      return !_.includes(fullItem.workflow.workflow, \"coreOrderItemWorkflow/shipped\");\n    });\n\n    return shippedItems;\n  },\n\n  isNotCanceled() {\n    const currentData = Template.currentData();\n    const order = Template.instance().order;\n\n    const canceledItems = _.every(currentData.fulfillment.items, (shipmentItem) => {\n      const fullItem = _.find(order.items, (orderItem) => {\n        if (orderItem._id === shipmentItem._id) {\n          return true;\n        }\n      });\n\n      return fullItem.workflow.status !== \"coreOrderItemWorkflow/canceled\";\n    });\n\n    return canceledItems;\n  },\n\n  isCompleted() {\n    const currentData = Template.currentData();\n    const order = Template.instance().order;\n\n    const completedItems = _.every(currentData.fulfillment.items, (shipmentItem) => {\n      const fullItem = _.find(order.items, (orderItem) => {\n        if (orderItem._id === shipmentItem._id) {\n          return true;\n        }\n      });\n\n      return _.includes(fullItem.workflow.workflow, \"coreOrderItemWorkflow/completed\");\n    });\n\n    return completedItems;\n  },\n\n  editTracking() {\n    // TODO move to a method where we loop package settings\n    // to determine if this feature is enabled.\n    // somewhere in here is where I wish this was converted to React!\n    const { settings } = Reaction.getPackageSettings(\"reaction-shipping-rates\");\n    // TODO: future proof by not using flatRates, but rather look for editable:true\n    if (settings && settings.flatRates.enabled === true) {\n      const template = Template.instance();\n      const shipment = template.order.shipping[0];\n      const editing = template.showTrackingEditForm.get();\n      let view = false;\n      if (editing === true || !shipment.tracking && editing === false) {\n        view = true;\n      }\n      // TODO modularize tracking more, editable to settings\n      if (view && shipment.shipmentMethod.carrier === \"Flat Rate\") {\n        return true;\n      }\n    }\n    return false;\n  },\n  order() {\n    return Template.instance().order;\n  },\n  shipment() {\n    return Template.instance().order.shipping[0];\n  },\n  shipmentReady() {\n    const order = Template.instance().order;\n    const shipment = order.shipping[0];\n\n    return shipment.packed && shipment.tracking;\n  }\n});\n","import { Template } from \"meteor/templating\";\nimport { Reaction } from \"/client/api\";\nimport { Orders } from \"/lib/collections\";\n\n/**\n * coreOrderWorkflowHelpers\n */\nTemplate.coreOrderWorkflow.helpers({\n  /**\n   * orderFulfillmentData\n   * @summary Creates an Object with order id and a fulfillment object\n   * @param  {String} orderId - An order id\n   * @param  {Object} fulfillment - An order fulfillment. e.g. a shipment\n   * @return {Object} An object witht the order id and fulfillment\n   */\n  orderFulfillmentData(orderId, fulfillment) {\n    return {\n      orderId: orderId,\n      fulfillment: fulfillment\n    };\n  },\n\n  /**\n   * baseOrder\n   * @todo may be unnecessary\n   * @return {Object} contents of Template.currentData(), non-reactive\n   */\n  baseOrder() {\n    return Template.currentData();\n  },\n\n  /**\n   * order\n   * @return {Object|Boolean} An order or false\n   */\n  order() {\n    const id = this.order._id || Reaction.Router.getQueryParam(\"_id\");\n    if (id) {\n      return Orders.findOne(id);\n    }\n    return false;\n  },\n\n  /**\n   * fulfillmentNumber\n   * @param  {Number} index - A number\n   * @return {Number} index + 1\n   */\n  fulfillmentNumber(index) {\n    return index + 1;\n  },\n\n  /**\n   * isCompleted\n   * @todo may need to be refactored\n   * @return {String|Boolean} order completion status or false\n   */\n  isCompleted() {\n    const order = Template.parentData(1);\n    if (this.status === true) {\n      return order.workflow.status;\n    }\n    return false;\n  },\n\n  /**\n   * isPending\n   * @todo may need to be refactored\n   * @return {String|Boolean} status or false\n   */\n  isPending() {\n    if (this.status === this.template) {\n      return this.status;\n    }\n    return false;\n  }\n});\n","import _ from \"lodash\";\nimport accounting from \"accounting-js\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Template } from \"meteor/templating\";\nimport { Reaction, i18next } from \"/client/api\";\nimport { Orders, Shops } from \"/lib/collections\";\nimport OrdersActionContainer from \"../containers/ordersActionContainer\";\nimport {\n  PACKAGE_NAME,\n  ORDER_LIST_FILTERS_PREFERENCE_NAME,\n  ORDER_LIST_SELECTED_ORDER_PREFERENCE_NAME,\n  DEFAULT_FILTER_NAME,\n  orderFilters\n} from \"../../lib/constants\";\n\nconst OrderHelper =  {\n  makeQuery(filter) {\n    let query = {};\n\n    switch (filter) {\n      // New orders\n      case \"new\":\n        query = {\n          \"workflow.status\": \"new\"\n        };\n        break;\n\n      // Orders that have yet to be captured & shipped\n      case \"processing\":\n        query = {\n          \"workflow.status\": \"coreOrderWorkflow/processing\"\n        };\n        break;\n\n      // Orders that have been shipped, based on if the items have been shipped\n      case \"shipped\":\n        query = {\n          \"items.workflow.status\": \"coreOrderItemWorkflow/shipped\"\n        };\n        break;\n\n      // Orders that are complete, including all items with complete status\n      case \"completed\":\n        query = {\n          \"workflow.status\": {\n            $in: [\"coreOrderWorkflow/completed\", \"coreOrderWorkflow/canceled\"]\n          },\n          \"items.workflow.status\": {\n            $in: [\"coreOrderItemWorkflow/completed\", \"coreOrderItemWorkflow/canceled\"]\n          }\n        };\n        break;\n\n      // Orders that have been captured, but not yet shipped\n      case \"captured\":\n        query = {\n          \"billing.paymentMethod.status\": \"completed\",\n          \"shipping.shipped\": false\n        };\n        break;\n\n      case \"canceled\":\n        query = {\n          \"workflow.status\": \"coreOrderWorkflow/canceled\"\n        };\n        break;\n\n      // Orders that have been refunded partially or fully\n      case \"refunded\":\n        query = {\n          \"billing.paymentMethod.status\": \"captured\",\n          \"shipping.shipped\": true\n        };\n        break;\n      default:\n    }\n\n    return query;\n  }\n};\n\nTemplate.orders.onCreated(function () {\n  this.state = new ReactiveDict();\n  this.orderLimits = new ReactiveDict();\n  this.state.setDefault({\n    orders: []\n  });\n  this.orderLimits.setDefault({\n    new: 10,\n    processing: 10,\n    completed: 10\n  });\n  this.state.set(\"count\", 0);\n\n  const filterName = this.data && this.data.filter && this.data.filter.name || \"new\";\n  Reaction.setUserPreferences(PACKAGE_NAME, ORDER_LIST_FILTERS_PREFERENCE_NAME, filterName);\n\n  this.autorun(() => {\n    const filter = Reaction.getUserPreferences(PACKAGE_NAME, ORDER_LIST_FILTERS_PREFERENCE_NAME, DEFAULT_FILTER_NAME);\n    const limit = this.orderLimits.get(filter);\n    const query = OrderHelper.makeQuery(filter);\n    this.subscription = this.subscribe(\"PaginatedOrders\", filter, limit);\n\n    if (this.subscription.ready()) {\n      const orders = Orders.find(query, { limit: limit }).fetch();\n      this.state.set(\"orders\", orders);\n    }\n  });\n\n  // Watch for updates to shop collection\n  this.autorun(() => {\n    const shop = Shops.findOne({});\n\n    // Update currency information, this is passed to child components containing\n    // Numeric inputs\n    this.state.set(\"currency\", shop.currencies[shop.currency]);\n  });\n});\n\n/**\n * orders helpers\n */\nTemplate.orders.helpers({\n  orderSubscription() {\n    return Template.instance().subscription.ready();\n  },\n  FilterComponent() {\n    const orderFilter = Reaction.getUserPreferences(PACKAGE_NAME, ORDER_LIST_FILTERS_PREFERENCE_NAME, DEFAULT_FILTER_NAME);\n    return {\n      component: OrdersActionContainer,\n      limit: Template.instance().orderLimits.get(orderFilter),\n      onActionClick(filter) {\n        Reaction.setUserPreferences(PACKAGE_NAME, ORDER_LIST_FILTERS_PREFERENCE_NAME, filter.name);\n        Reaction.setUserPreferences(PACKAGE_NAME, ORDER_LIST_SELECTED_ORDER_PREFERENCE_NAME, null);\n      }\n    };\n  },\n  itemProps(order) {\n    return {\n      order,\n      currencyFormat: Template.instance().state.get(\"currency\")\n    };\n  },\n\n  orders() {\n    return Template.instance().state.get(\"orders\") || false;\n  },\n\n  hasMoreOrders() {\n    const filter = Reaction.getUserPreferences(PACKAGE_NAME, ORDER_LIST_FILTERS_PREFERENCE_NAME, DEFAULT_FILTER_NAME);\n    const instance = Template.instance();\n\n    if (filter === \"new\") {\n      instance.state.set(\"count\", Counts.get(\"newOrder-count\"));\n    } else if (filter === \"processing\") {\n      instance.state.set(\"count\", Counts.get(\"processingOrder-count\"));\n    } else if (filter === \"completed\") {\n      instance.state.set(\"count\", Counts.get(\"completedOrder-count\"));\n    }\n\n    return instance.state.get(\"count\") > instance.orderLimits.get(filter);\n  },\n\n  currentFilterLabel() {\n    const foundFilter = _.find(orderFilters, (filter) => {\n      return filter.name === Reaction.Router.getQueryParam(\"filter\");\n    });\n\n    if (foundFilter) {\n      return foundFilter.label;\n    }\n\n    return \"\";\n  },\n  activeClassname(orderId) {\n    if (Reaction.Router.getQueryParam(\"_id\") === orderId) {\n      return \"panel-info\";\n    }\n    return \"panel-default\";\n  }\n});\n\n/**\n * orders events\n */\nTemplate.orders.events({\n  \"click .show-more-orders\": function (event, instance) {\n    event.preventDefault();\n    const filter = Reaction.getUserPreferences(PACKAGE_NAME, ORDER_LIST_FILTERS_PREFERENCE_NAME, DEFAULT_FILTER_NAME);\n    let limit = instance.orderLimits.get(filter);\n    limit += 10;\n    instance.orderLimits.set(filter, limit);\n  }\n});\n\nTemplate.ordersListItem.helpers({\n  order() {\n    return Template.currentData().order;\n  },\n  activeClassname(orderId) {\n    // const Reaction.setUserPreferences(PACKAGE_NAME, ORDER_LIST_FILTERS_PREFERENCE_NAME, filter.name)\n    const selectedOrderId = Reaction.getUserPreferences(PACKAGE_NAME, ORDER_LIST_SELECTED_ORDER_PREFERENCE_NAME);\n\n    if (selectedOrderId === orderId) {\n      return \"active\";\n    }\n    return \"\";\n  },\n\n  orderIsNew(order) {\n    return order.workflow.status === \"new\";\n  }\n});\n\nTemplate.ordersListItem.events({\n  \"click [data-event-action=selectOrder]\": function (event) {\n    event.preventDefault();\n    const instance = Template.instance();\n\n    // Set selected order in user preference\n    Reaction.setUserPreferences(PACKAGE_NAME, ORDER_LIST_SELECTED_ORDER_PREFERENCE_NAME, instance.data.order._id);\n\n    // Show the action view - detail view\n    Reaction.setActionViewDetail({\n      label: \"Order Details\",\n      i18nKeyLabel: \"orderWorkflow.orderDetails\",\n      data: {\n        order: instance.data.order\n      },\n      props: {\n        size: \"large\"\n      },\n      template: \"coreOrderWorkflow\"\n    });\n  },\n  \"click [data-event-action=startProcessingOrder]\": function (event) {\n    event.preventDefault();\n    const instance = Template.instance();\n    const isActionViewOpen = Reaction.isActionViewOpen();\n    const { order } = instance.data;\n\n\n    if (order.workflow.status === \"new\") {\n      Meteor.call(\"workflow/pushOrderWorkflow\", \"coreOrderWorkflow\", \"processing\", order);\n\n      // send notification to order owner\n      const userId = order.userId;\n      const type = \"orderAccepted\";\n      const prefix = Reaction.getShopPrefix();\n      const url = `${prefix}/notifications`;\n      const sms = true;\n      Meteor.call(\"notification/send\", userId, type, url, sms);\n    }\n\n    Reaction.setUserPreferences(PACKAGE_NAME, ORDER_LIST_FILTERS_PREFERENCE_NAME, \"processing\");\n\n    // toggle detail views\n    if (isActionViewOpen === false) {\n      Reaction.showActionView({\n        label: \"Order Details\",\n        i18nKeyLabel: \"orderWorkflow.orderDetails\",\n        data: { order },\n        props: {\n          size: \"large\"\n        },\n        template: \"coreOrderWorkflow\"\n      });\n    }\n  }\n});\n\n/**\n * orderStatusDetail\n *\n * order state tracking\n *\n * @returns orderStatusDetails\n */\n\nTemplate.orderStatusDetail.helpers({\n  // helper to format currency\n  formatAmount(value) {\n    let amount = value || \"\";\n    if (typeof value === \"number\") {\n      amount = accounting.toFixed(value, 2);\n    }\n    return amount;\n  },\n  // order age helper\n  orderAge: function () {\n    return moment(this.createdAt).fromNow();\n  },\n\n  shipmentMethod: function () {\n    return this.shipping[0].shipmentMethod;\n  },\n\n  shipmentTracking: function () {\n    if (this.shipping[0].tracking) {\n      return this.shipping[0].tracking;\n    }\n    return \"\";\n  },\n\n  shipmentStatus() {\n    const self = this;\n    const shipment = this.shipping[0];\n\n    // check first if it was delivered\n    if (shipment.delivered) {\n      return {\n        delivered: true,\n        shipped: true,\n        status: \"success\",\n        label: i18next.t(\"orderShipping.delivered\")\n      };\n    }\n\n    const shipped = _.every(shipment.items, (shipmentItem) => {\n      for (const fullItem of self.items) {\n        if (fullItem._id === shipmentItem._id) {\n          if (fullItem.workflow) {\n            if (_.isArray(fullItem.workflow.workflow)) {\n              return _.includes(fullItem.workflow.workflow, \"coreOrderItemWorkflow/completed\");\n            }\n          }\n        }\n      }\n    });\n\n    const canceled = _.every(shipment.items, (shipmentItem) => {\n      for (const fullItem of self.items) {\n        if (fullItem._id === shipmentItem._id) {\n          if (fullItem.workflow) {\n            return fullItem.workflow.status === \"coreOrderItemWorkflow/canceled\";\n          }\n        }\n      }\n    });\n\n    if (shipped) {\n      return {\n        delivered: false,\n        shipped: true,\n        status: \"success\",\n        label: i18next.t(\"orderShipping.shipped\")\n      };\n    }\n\n    if (canceled) {\n      return {\n        delivered: false,\n        shipped: false,\n        status: \"danger\",\n        label: i18next.t(\"order.canceledLabel\")\n      };\n    }\n\n    return {\n      delivered: false,\n      shipped: false,\n      status: \"info\",\n      label: i18next.t(\"orderShipping.notShipped\")\n    };\n  }\n});\n","import React, { Component, PropTypes } from \"react\";\nimport { formatPriceString } from \"/client/api\";\nimport { Translation } from \"/imports/plugins/core/ui/client/components\";\nimport DiscountList from \"/imports/plugins/core/discounts/client/components/list\";\n\nclass Invoice extends Component {\n  static propTypes = {\n    canMakeAdjustments: PropTypes.bool,\n    collection: PropTypes.string,\n    dateFormat: PropTypes.func,\n    discounts: PropTypes.bool,\n    handleClick: PropTypes.func,\n    invoice: PropTypes.object,\n    isFetching: PropTypes.bool,\n    isOpen: PropTypes.bool,\n    orderId: PropTypes.string,\n    paymentCaptured: PropTypes.bool,\n    refunds: PropTypes.array\n  }\n\n  renderDiscountForm() {\n    const { isOpen, orderId, collection } = this.props;\n\n    return (\n      <div>\n        {isOpen &&\n          <div>\n            <hr/>\n              <DiscountList\n                id={orderId}\n                collection={collection}\n                validatedInput={true}\n              />\n            <hr/>\n          </div>\n        }\n      </div>\n    );\n  }\n\n  renderRefundsInfo() {\n    const { isFetching, refunds, dateFormat } = this.props;\n\n    return (\n      <div>\n        {isFetching &&\n          <div className=\"form-group order-summary-form-group\">\n            <strong>Loading Refunds</strong>\n            <div className=\"invoice-details\">\n              <i className=\"fa fa-spinner fa-spin\" />\n            </div>\n          </div>\n        }\n\n        {refunds && refunds.map((refund) => (\n          <div className=\"order-summary-form-group text-danger\" key={refund.created} style={{ marginBottom: 15 }}>\n            <strong>Refunded on: {dateFormat(refund.created, \"MM/D/YYYY\")}</strong>\n            <div className=\"invoice-details\"><strong>{formatPriceString(refund.amount)}</strong></div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  renderTotal() {\n    const { invoice } = this.props;\n\n    return (\n      <div className=\"order-summary-form-group\">\n        <hr/>\n        <strong>TOTAL</strong>\n        <div className=\"invoice-details\">\n          <strong>{formatPriceString(invoice.total)}</strong>\n        </div>\n      </div>\n    );\n  }\n\n  renderConditionalDisplay() {\n    const { canMakeAdjustments, paymentCaptured } = this.props;\n\n    return (\n      <div>\n        {canMakeAdjustments ?\n          <div> {this.renderTotal()} </div> :\n          <span>\n            {paymentCaptured ?\n              <div>\n                {this.renderRefundsInfo()}\n              </div>\n              :\n              <div> {this.renderTotal()} </div>\n            }\n          </span>\n        }\n      </div>\n    );\n  }\n\n  render() {\n    const { invoice, discounts, handleClick } = this.props;\n\n    return (\n      <div>\n        <div className=\"order-summary-form-group\">\n          <strong>Quantity Total</strong>\n          <div className=\"invoice-details\">\n            {invoice.totalItems}\n          </div>\n        </div>\n\n        <div className=\"order-summary-form-group\">\n          <strong><Translation defaultValue=\"Subtotal\" i18nKey=\"cartSubTotals.subtotal\"/></strong>\n          <div className=\"invoice-details\">\n            {formatPriceString(invoice.subtotal)}\n          </div>\n        </div>\n\n        <div className=\"order-summary-form-group\">\n          <strong><Translation defaultValue=\"Shipping\" i18nKey=\"cartSubTotals.shipping\"/></strong>\n          <div className=\"invoice-details\">\n            {formatPriceString(invoice.shipping)}\n          </div>\n        </div>\n\n        <div className=\"order-summary-form-group\">\n          <strong><Translation defaultValue=\"Tax\" i18nKey=\"cartSubTotals.tax\"/></strong>\n          <div className=\"invoice-details\">\n            {formatPriceString(invoice.taxes)}\n          </div>\n        </div>\n\n        {discounts &&\n          <div>\n            <div className=\"order-summary-form-group\">\n              <strong><Translation defaultValue=\"Discount\" i18nKey=\"cartSubTotals.discount\"/></strong>\n              <div className=\"invoice-details\">\n                <i className=\"fa fa-tag fa-lg\" style={{ marginRight: 2 }}/>\n                <a className=\"btn-link\" onClick={handleClick}>Add Discount</a>\n              </div>\n            </div>\n            {this.renderDiscountForm()}\n          </div>\n        }\n        {this.renderConditionalDisplay()}\n      </div>\n    );\n  }\n}\n\nexport default Invoice;\n","import React, { Component, PropTypes } from \"react\";\nimport { formatPriceString } from \"/client/api\";\nimport { Translation } from \"/imports/plugins/core/ui/client/components\";\n\nclass LineItems extends Component {\n\n  static propTypes = {\n    displayMedia: PropTypes.func,\n    handleClick: PropTypes.func,\n    isExpanded: PropTypes.func,\n    onClose: PropTypes.func,\n    uniqueItems: PropTypes.array\n  }\n\n  calculateTotal(price, shipping, taxes) {\n    return formatPriceString(price + shipping + taxes);\n  }\n\n  renderLineItem(uniqueItem, quantity) {\n    const { handleClick, displayMedia } = this.props;\n\n    return (\n      <div className=\"order-items\">\n        <div\n          className=\"invoice order-item form-group order-summary-form-group\"\n          onClick={() => handleClick(uniqueItem._id)}\n          style={{ height: 70 }}\n        >\n\n          <div className=\"order-item-media\" style={{ marginLeft: 15 }}>\n            { !displayMedia(uniqueItem) ?\n              <img src= \"/resources/placeholder.gif\" /> :\n              <img\n                src={displayMedia(uniqueItem).url()}\n              />\n            }\n          </div>\n\n          <div className=\"order-item-details\">\n            <div className=\"order-detail-title\">\n            {uniqueItem.title} <br/><small>{uniqueItem.variants.title}</small>\n            </div>\n          </div>\n\n          <div className=\"order-detail-quantity\">\n           {quantity || uniqueItem.quantity}\n          </div>\n\n          <div className=\"order-detail-price\">\n            <div className=\"invoice-details\" style={{ marginRight: 15 }}>\n              <strong>{formatPriceString(uniqueItem.variants.price)}</strong>\n            </div>\n          </div>\n\n      </div>\n    </div>\n    );\n  }\n\n  renderLineItemInvoice(uniqueItem) {\n    return (\n      <div>\n        <div className=\"order-summary-form-group\">\n          <strong><Translation defaultValue=\"Subtotal\" i18nKey=\"cartSubTotals.subtotal\"/></strong>\n          <div className=\"invoice-details\">\n            {formatPriceString(uniqueItem.variants.price)}\n          </div>\n        </div>\n\n        <div className=\"order-summary-form-group\">\n          <strong><Translation defaultValue=\"Shipping\" i18nKey=\"cartSubTotals.shipping\"/></strong>\n          <div className=\"invoice-details\">\n            {formatPriceString(uniqueItem.shipping.rate)}\n          </div>\n        </div>\n\n        <div className=\"order-summary-form-group\">\n          <strong>Item tax</strong>\n          <div className=\"invoice-details\">\n            {uniqueItem.taxDetail ? formatPriceString(uniqueItem.taxDetail.tax / uniqueItem.quantity) : formatPriceString(0)}\n          </div>\n        </div>\n\n        <div className=\"order-summary-form-group\">\n          <strong>Tax code</strong>\n          <div className=\"invoice-details\">\n            {uniqueItem.taxDetail ? uniqueItem.taxDetail.taxCode : uniqueItem.variants.taxCode}\n          </div>\n        </div>\n\n        <div className=\"order-summary-form-group\">\n          <strong>TOTAL</strong>\n          <div className=\"invoice-details\">\n            {uniqueItem.taxDetail ?\n              <strong>\n                {this.calculateTotal(uniqueItem.variants.price, uniqueItem.shipping.rate, uniqueItem.taxDetail.tax)}\n              </strong> :\n               <strong>\n                {this.calculateTotal(uniqueItem.variants.price, uniqueItem.shipping.rate, 0)}\n              </strong>\n            }\n          </div>\n        </div>\n        <br/>\n      </div>\n    );\n  }\n\n  render() {\n    const { uniqueItems, isExpanded, onClose } = this.props;\n    return (\n      <div>\n        {uniqueItems.map((uniqueItem) => {\n          if (!isExpanded(uniqueItem._id)) {\n            return (\n              <div key={uniqueItem._id}> { this.renderLineItem(uniqueItem) } </div>\n            );\n          }\n\n          return (\n            <div className=\"roll-up-invoice-list\" key={uniqueItem._id}>\n              <div className=\"roll-up-content\">\n\n                <div style={{ float: \"right\" }}>\n                  <button className=\"rui btn btn-default flat icon-only\" onClick={() => onClose(uniqueItem._id)}>\n                    <i\n                      className=\"rui font-icon fa-lg fa fa-times\"\n                    />\n                  </button>\n                </div>\n\n                <br/><br/>\n\n                {[...Array(uniqueItem.quantity)].map((v, i) =>\n                  <div key={i}>\n                    { this.renderLineItem(uniqueItem, 1) }\n                    { this.renderLineItemInvoice(uniqueItem) }\n                  </div>\n                )}\n\n              </div>\n          </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default LineItems;\n","import React, { Component, PropTypes } from \"react\";\nimport Radium from \"radium\";\nimport { TabList, TabItem } from \"/imports/plugins/core/ui/client/components\";\n\nconst styles = {\n  list: {\n    display: \"flex\",\n    height: 100\n  },\n  item: {\n    display: \"flex\",\n    flex: \"1 1 auto\",\n    width: \"33%\",\n    height: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  title: {\n    fontSize: 24,\n    display: \"block\"\n  },\n  stat: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n};\n\nclass OrderActions extends Component {\n  static propTypes = {\n    filters: PropTypes.arrayOf(PropTypes.object),\n    onActionClick: PropTypes.func,\n    selectedIndex: PropTypes.number\n  }\n\n  handleActionClick = (event, value) => {\n    if (typeof this.props.onActionClick === \"function\") {\n      this.props.onActionClick(value);\n    }\n  }\n\n  renderAction() {\n    if (Array.isArray(this.props.filters)) {\n      return this.props.filters.map((filter, index) => {\n        return (\n          <TabItem\n            className=\"admin\"\n            key={index}\n            style={styles.item}\n            onClick={this.handleActionClick}\n            value={filter}\n          >\n            <div style={styles.stat}>\n              <strong style={styles.title}>{filter.count}</strong>\n              <span>{filter.label}</span>\n            </div>\n          </TabItem>\n        );\n      });\n    }\n\n    return null;\n  }\n\n  render() {\n    return (\n      <TabList style={styles.list} className=\"admin\" selectedTab={this.props.selectedIndex}>\n        {this.renderAction()}\n      </TabList>\n    );\n  }\n}\n\nexport default Radium(OrderActions);\n","import React, { Component, PropTypes } from \"react\";\n\nclass OrderSummary extends Component {\n  static propTypes = {\n    dateFormat: PropTypes.func,\n    order: PropTypes.object,\n    printableLabels: PropTypes.func,\n    profileShippingAddress: PropTypes.object,\n    shipmentStatus: PropTypes.func,\n    tracking: PropTypes.func\n  }\n\n  render() {\n    const { dateFormat, tracking, order, shipmentStatus, profileShippingAddress, printableLabels } = this.props;\n\n    return (\n      <div>\n        <div className=\"order-summary-form-group bg-info\" style={{ lineHeight: 3, marginTop: -15, marginRight: -15, marginLeft: -15 }}>\n          <strong style={{ marginLeft: 15 }}>{profileShippingAddress.fullName}</strong> , {profileShippingAddress.country}\n          <div className=\"invoice-details\" style={{ marginRight: 15 }}>\n            <strong>ID </strong>{order._id}\n          </div>\n        </div>\n\n        <div className=\"roll-up-invoice-list\">\n          <div className=\"roll-up-content\">\n            <div style={{ marginBottom: 4 }}>\n              <span className={`badge badge-${shipmentStatus().status}`}>{shipmentStatus().label}</span>\n            </div>\n\n            <div className=\"order-summary-form-group\">\n              <strong data-i18n=\"order.created\">Created</strong>\n              <div className=\"invoice-details\">\n                {dateFormat(order.createdAt, \"MM/D/YYYY\")}\n              </div>\n            </div>\n\n            <div className=\"order-summary-form-group\">\n              <strong data-i18n=\"order.processor\">Processor</strong>\n              <div className=\"invoice-details\">\n                {order.billing[0].paymentMethod.processor}\n              </div>\n            </div>\n\n            <div className=\"order-summary-form-group\">\n              <strong data-i18n=\"order.payment\">Payment</strong>\n              <div className=\"invoice-details\">\n                {order.billing[0].paymentMethod.storedCard} ({order.billing[0].invoice.total})\n              </div>\n            </div>\n\n            <div className=\"order-summary-form-group\">\n              <strong data-i18n=\"order.transaction\">Transaction</strong>\n              <div className=\"invoice-details\">\n                {order.billing[0].paymentMethod.transactionId}\n              </div>\n            </div>\n\n            <div className=\"order-summary-form-group\">\n              <strong data-i18n=\"orderShipping.carrier\">Carrier</strong>\n              <div className=\"invoice-details\">\n                {order.shipping[0].shipmentMethod.carrier} - {order.shipping[0].shipmentMethod.label}\n              </div>\n            </div>\n\n            <div className=\"order-summary-form-group\">\n              <strong data-i18n=\"orderShipping.tracking\">Tracking</strong>\n              <div className=\"invoice-details\">\n                {tracking()}\n              </div>\n            </div>\n\n            {printableLabels() &&\n              <div className=\"order-summary-form-group\">\n                <strong data-i18n=\"orderShipping.printLabels\">Labels</strong>\n                {printableLabels().shippingLabelUrl ?\n                  <a className=\"invoice-details\" href={printableLabels().shippingLabelUrl} target=\"_blank\">\n                    <span data-i18n=\"orderShipping.printShippingLabel\">Print Shipping</span>\n                  </a> :\n                  <a className=\"invoice-details\" href={printableLabels().customsLabelUrl} target=\"_blank\">\n                    <span data-i18n=\"orderShipping.printCustomsLabel\">Print Customs</span>\n                  </a>\n                }\n              </div>\n            }\n          </div>\n        </div>\n\n        <br/>\n        <div className=\"order-summary-form-group\">\n          <strong data-i18n=\"orderShipping.shipTo\">Ship to</strong>\n          <div className=\"invoice-details\">\n            <strong>Phone: </strong>{profileShippingAddress.phone}\n          </div>\n        </div>\n\n        <div style={{ marginTop: 4 }}>\n          <span>{profileShippingAddress.fullName}</span>\n          <br/><span>{profileShippingAddress.address1}</span>\n          {profileShippingAddress.address2 && <span><br/>{profileShippingAddress.address2}</span>}\n          <br/><span>{profileShippingAddress.city}, {profileShippingAddress.region}, {profileShippingAddress.country} {profileShippingAddress.postal}</span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default OrderSummary;\n","import React, { Component, PropTypes } from \"react\";\nimport { formatPriceString } from \"/client/api\";\n\nclass TotalActions extends Component {\n\n  static propTypes = {\n    adjustedTotal: PropTypes.number,\n    invoice: PropTypes.object,\n    isAdjusted: PropTypes.func\n  }\n\n  renderCapturedTotal() {\n    const { invoice } = this.props;\n\n    return (\n      <div className=\"order-summary-form-group bg-success\" style={{ lineHeight: 3, marginRight: -15, marginLeft: -15 }}>\n        <span style={{ marginLeft: 15 }}>\n          <strong className=\"text-success\">CAPTURED TOTAL</strong>\n        </span>\n\n        <div className=\"invoice-details\" style={{ marginRight: 15 }}>\n          <strong>{formatPriceString(invoice.total)}</strong>\n        </div>\n      </div>\n    );\n  }\n\n  renderAdjustedTotal() {\n    const { adjustedTotal } = this.props;\n\n    return (\n      <div className=\"order-summary-form-group bg-danger\" style={{ marginTop: 2, lineHeight: 3, marginRight: -15, marginLeft: -15 }}>\n        <span className=\"text-danger\" style={{ marginLeft: 15 }}>\n          <strong>ADJUSTED TOTAL</strong>\n        </span>\n\n        <div className=\"invoice-details\" style={{ marginRight: 15 }}>\n          <strong>{formatPriceString(adjustedTotal)}</strong>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const { isAdjusted } = this.props;\n\n    return (\n      <div>\n        {this.renderCapturedTotal()}\n        {isAdjusted() && this.renderAdjustedTotal()}\n      </div>\n    );\n  }\n}\n\nexport default TotalActions;\n","import React, { Component, PropTypes } from \"react\";\nimport moment from \"moment\";\nimport { composeWithTracker } from \"/lib/api/compose\";\nimport { Loading } from \"/imports/plugins/core/ui/client/components\";\nimport { TranslationProvider } from \"/imports/plugins/core/ui/client/providers\";\nimport Invoice from \"../components/invoice.js\";\n\nclass InvoiceContainer extends Component {\n  static propTypes = {\n    canMakeAdjustments: PropTypes.bool,\n    collection: PropTypes.string,\n    discounts: PropTypes.bool,\n    invoice: PropTypes.object,\n    isFetching: PropTypes.bool,\n    orderId: PropTypes.string,\n    paymentCaptured: PropTypes.bool,\n    refunds: PropTypes.array\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.dateFormat = this.dateFormat.bind(this);\n  }\n\n  dateFormat = (context, block) => {\n    const f = block || \"MMM DD, YYYY hh:mm:ss A\";\n    return moment(context).format(f);\n  }\n\n  handleClick = (event) => {\n    event.preventDefault();\n    this.setState({\n      isOpen: true\n    });\n  }\n\n  render() {\n    const {\n      canMakeAdjustments, paymentCaptured,\n      discounts, invoice, orderId, refunds,\n      isFetching, collection\n    } = this.props;\n\n    return (\n      <TranslationProvider>\n        <Invoice\n          canMakeAdjustments={canMakeAdjustments}\n          paymentCaptured={paymentCaptured}\n          isOpen={this.state.isOpen}\n          discounts={discounts}\n          handleClick={this.handleClick}\n          invoice={invoice}\n          orderId={orderId}\n          refunds={refunds}\n          dateFormat={this.dateFormat}\n          isFetching={isFetching}\n          collection={collection}\n        />\n      </TranslationProvider>\n    );\n  }\n}\n\nconst composer = (props, onData) => {\n  onData(null, {\n    canMakeAdjustments: props.canMakeAdjustments,\n    paymentCaptured: props.paymentCaptured,\n    discounts: props.discounts,\n    invoice: props.invoice,\n    orderId: props.orderId,\n    refunds: props.refunds,\n    isFetching: props.isFetching,\n    collection: props.collection\n  });\n};\n\nexport default composeWithTracker(composer, Loading)(InvoiceContainer);\n","import React, { Component, PropTypes } from \"react\";\nimport { Meteor } from \"meteor/meteor\";\nimport { composeWithTracker } from \"/lib/api/compose\";\nimport { Media } from \"/lib/collections\";\nimport { Loading } from \"/imports/plugins/core/ui/client/components\";\nimport { TranslationProvider } from \"/imports/plugins/core/ui/client/providers\";\nimport LineItems from \"../components/lineItems.js\";\n\nclass LineItemsContainer extends Component {\n  static propTypes = {\n    invoice: PropTypes.object,\n    uniqueItems: PropTypes.array\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isClosed: false\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.isExpanded = this.isExpanded.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleDisplayMedia = this.handleDisplayMedia.bind(this);\n  }\n\n  isExpanded = (itemId) => {\n    if (this.state[`item_${itemId}`]) {\n      return true;\n    }\n    return false;\n  }\n\n  handleClose = (itemId) => {\n    this.setState({\n      [`item_${itemId}`]: false\n    });\n  }\n\n  handleClick = (itemId) => {\n    this.setState({\n      [`item_${itemId}`]: true\n    });\n  }\n\n  /**\n   * Media - find media based on a product/variant\n   * @param  {Object} item object containing a product and variant id\n   * @return {Object|false} An object contianing the media or false\n   */\n  handleDisplayMedia = (item) => {\n    const variantId = item.variants._id;\n    const productId = item.productId;\n\n    const variantImage = Media.findOne({\n      \"metadata.variantId\": variantId,\n      \"metadata.productId\": productId\n    });\n\n    if (variantImage) {\n      return variantImage;\n    }\n\n    const defaultImage = Media.findOne({\n      \"metadata.productId\": productId,\n      \"metadata.priority\": 0\n    });\n\n    if (defaultImage) {\n      return defaultImage;\n    }\n    return false;\n  }\n\n  render() {\n    const { invoice, uniqueItems } = this.props;\n    return (\n      <TranslationProvider>\n        <LineItems\n          onClose={this.handleClose}\n          invoice={invoice}\n          isClosed={this.state.isClosed}\n          isExpanded={this.isExpanded}\n          displayMedia={this.handleDisplayMedia}\n          handleClick={this.handleClick}\n          uniqueItems={uniqueItems}\n        />\n      </TranslationProvider>\n    );\n  }\n}\n\nconst composer = (props, onData) => {\n  const subscription = Meteor.subscribe(\"Media\");\n  if (subscription.ready()) {\n    onData(null, {\n      uniqueItems: props.items,\n      invoice: props.invoice\n    });\n  }\n};\n\nexport default composeWithTracker(composer, Loading)(LineItemsContainer);\n","import React, { Component, PropTypes } from \"react\";\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport { Meteor } from \"meteor/meteor\";\nimport { composeWithTracker } from \"/lib/api/compose\";\nimport { Orders } from \"/lib/collections\";\nimport { i18next } from \"/client/api\";\nimport OrderSummary from \"../components/orderSummary\";\n\nclass OrderSummaryContainer extends Component {\n  static propTypes = {\n    order: PropTypes.object\n  }\n\n  constructor(props) {\n    super(props);\n    this.dateFormat = this.dateFormat.bind(this);\n    this.tracking = this.tracking.bind(this);\n    this.shipmentStatus = this.shipmentStatus.bind(this);\n  }\n\n  dateFormat = (context, block) => {\n    const f = block || \"MMM DD, YYYY hh:mm:ss A\";\n    return moment(context).format(f);\n  }\n\n  tracking = () => {\n    if (this.props.order.shipping[0].tracking) {\n      return this.props.order.shipping[0].tracking;\n    }\n    return i18next.t(\"orderShipping.noTracking\");\n  }\n\n  shipmentStatus = () => {\n    const order = this.props.order;\n    const shipment = order.shipping[0];\n\n    if (shipment.delivered) {\n      return {\n        delivered: true,\n        shipped: true,\n        status: \"success\",\n        label: i18next.t(\"orderShipping.delivered\")\n      };\n    }\n\n    const shipped = _.every(shipment.items, (shipmentItem) => {\n      for (const fullItem of order.items) {\n        if (fullItem._id === shipmentItem._id) {\n          if (fullItem.workflow) {\n            if (_.isArray(fullItem.workflow.workflow)) {\n              return _.includes(fullItem.workflow.workflow, \"coreOrderItemWorkflow/completed\");\n            }\n          }\n        }\n      }\n    });\n\n    const canceled = _.every(shipment.items, (shipmentItem) => {\n      for (const fullItem of order.items) {\n        if (fullItem._id === shipmentItem._id) {\n          if (fullItem.workflow) {\n            return fullItem.workflow.status === \"coreOrderItemWorkflow/canceled\";\n          }\n        }\n      }\n    });\n\n    if (shipped) {\n      return {\n        delivered: false,\n        shipped: true,\n        status: \"success\",\n        label: i18next.t(\"orderShipping.shipped\")\n      };\n    }\n\n    if (canceled) {\n      return {\n        delivered: false,\n        shipped: false,\n        status: \"danger\",\n        label: i18next.t(\"order.canceledLabel\")\n      };\n    }\n\n    return {\n      delivered: false,\n      shipped: false,\n      status: \"info\",\n      label: i18next.t(\"orderShipping.notShipped\")\n    };\n  }\n\n  printableLabels = () => {\n    const { shippingLabelUrl, customsLabelUrl } = this.props.order.shipping[0];\n    if (shippingLabelUrl || customsLabelUrl) {\n      return { shippingLabelUrl, customsLabelUrl };\n    }\n\n    return false;\n  }\n\n  render() {\n    return (\n      <div>\n        <OrderSummary\n          {...this.props}\n          dateFormat={this.dateFormat}\n          tracking={this.tracking}\n          shipmentStatus={this.shipmentStatus}\n          printableLabels={this.printableLabels}\n        />\n      </div>\n    );\n  }\n}\n\nconst composer = (props, onData) => {\n  const orderSub = Meteor.subscribe(\"Orders\");\n\n  if (orderSub.ready()) {\n    // Find current order\n    const order = Orders.findOne({\n      \"_id\": props.orderId,\n      \"shipping._id\": props.fulfillment._id\n    });\n\n    const profileShippingAddress = order.shipping[0].address;\n\n    if (order.workflow) {\n      if (order.workflow.status === \"coreOrderCreated\") {\n        order.workflow.status = \"coreOrderCreated\";\n        Meteor.call(\"workflow/pushOrderWorkflow\", \"coreOrderWorkflow\", \"coreOrderCreated\", order);\n      }\n    }\n\n    onData(null, {\n      order: order,\n      profileShippingAddress: profileShippingAddress\n    });\n  }\n};\n\nexport default composeWithTracker(composer, null)(OrderSummaryContainer);\n","import React from \"react\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Reaction, i18next } from \"/client/api\";\nimport { composeWithTracker } from \"/lib/api/compose\";\nimport OrderActions from \"../components/orderActions\";\nimport * as Constants from \"../../lib/constants\";\n\nfunction handleActionClick(filter) {\n  Reaction.pushActionView({\n    provides: \"dashboard\",\n    template: \"orders\",\n    data: {\n      filter\n    }\n  });\n}\n\nfunction composer(props, onData) {\n  const selectedFilterName = Reaction.getUserPreferences(Constants.PACKAGE_NAME, Constants.ORDER_LIST_FILTERS_PREFERENCE_NAME);\n  let selectedIndex;\n\n  Meteor.subscribe(\"PaginatedOrders\", selectedFilterName, (props.limit || 0));\n\n  const filters = Constants.orderFilters.map((filter, index) => {\n    if (filter.name === selectedFilterName) {\n      selectedIndex = index;\n    }\n\n    filter.label = i18next.t(`order.filter.${filter.name}`, { defaultValue: filter.label });\n    filter.i18nKeyLabel = `order.filter.${filter.name}`;\n\n    if (filter.name === \"new\") {\n      filter.count = Counts.get(\"newOrder-count\");\n    } else if (filter.name === \"processing\") {\n      filter.count = Counts.get(\"processingOrder-count\");\n    } else if (filter.name === \"completed\") {\n      filter.count = Counts.get(\"completedOrder-count\");\n    }\n\n    return filter;\n  });\n\n  onData(null, {\n    filters,\n    selectedIndex,\n\n    onActionClick: props.onActionClick || handleActionClick\n  });\n}\n\nfunction OrdersActionContainer(props) {\n  return (\n    <OrderActions {...props} />\n  );\n}\n\nexport default composeWithTracker(composer, null)(OrdersActionContainer);\n","import React, { Component, PropTypes } from \"react\";\nimport { composeWithTracker } from \"/lib/api/compose\";\nimport TotalActions from \"../components/totalActions\";\nimport { Loading } from \"/imports/plugins/core/ui/client/components\";\n\nclass TotalActionsContaner extends Component {\n\n  static propTypes = {\n    adjustedTotal: PropTypes.number,\n    invoice: PropTypes.object,\n    paymentCaptured: PropTypes.bool\n  }\n\n  constructor(props) {\n    super(props);\n    this.isAdjusted = this.isAdjusted.bind(this);\n  }\n\n  isAdjusted = () => {\n    const { adjustedTotal, invoice } = this.props;\n\n    if (invoice.total === adjustedTotal) {\n      return false;\n    }\n    return true;\n  }\n\n  render() {\n    const  { paymentCaptured, adjustedTotal, invoice } =  this.props;\n    return (\n      <div>\n        <TotalActions\n          isAdjusted={this.isAdjusted}\n          paymentCaptured={paymentCaptured}\n          adjustedTotal={adjustedTotal}\n          invoice={invoice}\n        />\n      </div>\n    );\n  }\n}\n\nconst composer = (props, onData) => {\n  onData(null, {\n    paymentCaptured: props.paymentCaptured,\n    adjustedTotal: props.adjustedTotal,\n    invoice: props.invoice\n  });\n};\n\nexport default composeWithTracker(composer, Loading)(TotalActionsContaner);\n","import { registerComponent } from \"/imports/plugins/core/layout/lib/components\";\n\nimport \"./templates/details/detail.html\";\nimport \"./templates/details/detail.js\";\n\nimport \"./templates/list/items.html\";\nimport \"./templates/list/items.js\";\nimport \"./templates/list/ordersList.html\";\nimport \"./templates/list/ordersList.js\";\nimport \"./templates/list/pdf.html\";\nimport \"./templates/list/pdf.js\";\nimport \"./templates/list/summary.html\";\nimport \"./templates/list/summary.js\";\n\nimport \"./templates/orderPage/details.html\";\nimport \"./templates/orderPage/details.js\";\nimport \"./templates/orderPage/orderPage.html\";\nimport \"./templates/orderPage/orderPage.js\";\n\nimport \"./templates/social/orderSocial.html\";\n\nimport \"./templates/workflow/orderCompleted.html\";\nimport \"./templates/workflow/orderSummary.html\";\nimport \"./templates/workflow/shippingInvoice.html\";\nimport \"./templates/workflow/shippingInvoice.js\";\nimport \"./templates/workflow/shippingSummary.html\";\nimport \"./templates/workflow/shippingSummary.js\";\nimport \"./templates/workflow/shippingTracking.html\";\nimport \"./templates/workflow/shippingTracking.js\";\nimport \"./templates/workflow/workflow.html\";\nimport \"./templates/workflow/workflow.js\";\n\nimport \"./templates/orders.html\";\nimport \"./templates/orders.js\";\n\nimport OrdersActionContainer from \"./containers/ordersActionContainer\";\n\n// Register PDP components and some others\nregisterComponent({\n  name: \"orders_ActionDashboard\",\n  component: OrdersActionContainer\n});\n","/**\n * Package name\n * @type {String}\n */\nexport const PACKAGE_NAME = \"reaction-orders\";\n\n/**\n * Preference name for orderList filters when using using Reaction.[get|set]UserPreferences()\n * @type {String}\n */\nexport const ORDER_LIST_FILTERS_PREFERENCE_NAME = \"orderListFilters\";\n\n/**\n * Preference name for selected order _id when using Reaction.[get|set]UserPreferences()\n * @type {String}\n */\nexport const ORDER_LIST_SELECTED_ORDER_PREFERENCE_NAME = \"orderListSelectedOrder\";\n\n/**\n * Default filter name\n * @type {String}\n */\nexport const DEFAULT_FILTER_NAME = \"new\";\n\n\n/**\n * Order filters\n * @type {String}\n */\nexport const orderFilters = [{\n  name: \"new\",\n  label: \"New\"\n}, {\n  name: \"processing\",\n  label: \"Processing\"\n}, {\n  name: \"completed\",\n  label: \"Completed\"\n}];\n","import \"./methods.js\";\nimport \"./payment.html\";\n","import { Template } from \"meteor/templating\";\nimport { Reaction } from \"/client/api\";\nimport \"./methods.html\";\n\nTemplate.corePaymentMethods.helpers({\n  enabledPayments\n});\n\nTemplate.corePaymentMethods.onCreated(function () {\n  const payments = enabledPayments();\n  const paymentsEnabled = payments.length;\n  // If no payments enabled, show payments settings dashboard\n  if (!paymentsEnabled) {\n    openActionView();\n  }\n});\n\nTemplate.corePaymentMethods.events({\n  \"click [data-event-action=configure-payment-methods]\"(event) {\n    event.preventDefault();\n    openActionView();\n  }\n});\n\nfunction enabledPayments() {\n  const enabledPaymentsArr = [];\n  const apps = Reaction.Apps({\n    provides: \"paymentMethod\",\n    enabled: true\n  });\n  for (app of apps) {\n    if (app.enabled === true) enabledPaymentsArr.push(app);\n  }\n  return enabledPaymentsArr;\n}\n\nfunction openActionView() {\n  const dashboardRegistryEntry = Reaction.Apps({ name: \"reaction-dashboard\", provides: \"shortcut\" });\n  const paymentRegistryEntry = Reaction.Apps({ name: \"reaction-payments\", provides: \"settings\" });\n\n  Reaction.showActionView([\n    dashboardRegistryEntry[0],\n    paymentRegistryEntry[0]\n  ]);\n}\n","import \"./payment\";\n","import \"./settings.html\";\nimport \"./settings.js\";\n","import { Template } from \"meteor/templating\";\nimport { Reaction, i18next } from \"/client/api\";\nimport { Shops } from \"/lib/collections\";\n\nTemplate.paymentSettings.helpers({\n  checked(enabled) {\n    if (enabled === true) {\n      return \"checked\";\n    }\n    return \"\";\n  },\n  shown(enabled) {\n    if (enabled !== true) {\n      return \"hidden\";\n    }\n    return \"\";\n  },\n  paymentMethodOptions() {\n    const paymentMethods = Reaction.Apps({ provides: \"paymentMethod\" });\n    const options = [{\n      label: i18next.t(\"app.auto\"),\n      value: \"none\"\n    }];\n\n    if (paymentMethods && _.isArray(paymentMethods)) {\n      for (const method of paymentMethods) {\n        if (method.enabled === true) {\n          options.push({\n            label: i18next.t(method.i18nKeyLabel),\n            value: method.settingsKey\n          });\n        }\n      }\n    }\n    return options;\n  },\n  shop() {\n    return Shops.findOne(Reaction.getShopId());\n  }\n});\n\n// toggle payment methods visibility\nTemplate.paymentSettings.events({\n  \"change input[name=enabled]\": (event) => {\n    event.preventDefault();\n    const settingsKey = event.target.getAttribute(\"data-key\");\n    const packageId = event.target.getAttribute(\"data-id\");\n    const fields = [{\n      property: \"enabled\",\n      value: event.target.checked\n    }];\n    // update package registry\n    if (packageId) {\n      Meteor.call(\"registry/update\", packageId, settingsKey, fields);\n      Meteor.call(\"shop/togglePackage\", packageId, !event.target.checked);\n    }\n  }\n});\n\nAutoForm.hooks({\n  shopEditPaymentMethodsForm: {\n    onSuccess: function () {\n      return Alerts.toast(i18next.t(\"shopSettings.shopPaymentMethodsSaved\"),\n        \"success\");\n    },\n    onError: function (operation, error) {\n      return Alerts.toast(\n        `${i18next.t(\"shopSettings.shopPaymentMethodsFailed\")} ${error}`, \"error\"\n      );\n    }\n  }\n});\n","import \"./checkout\";\nimport \"./settings\";\n","import _ from \"lodash\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Template } from \"meteor/templating\";\nimport { Reaction } from \"/client/api\";\nimport { Cart } from \"/lib/collections\";\n\n// cartShippingQuotes\n// returns multiple methods\nfunction cartShippingQuotes(currentCart) {\n  const cart = currentCart || Cart.findOne();\n  const shipmentQuotes = [];\n\n  if (cart) {\n    if (cart.shipping) {\n      for (const shipping of cart.shipping) {\n        if (shipping.shipmentQuotes) {\n          for (quote of shipping.shipmentQuotes) {\n            shipmentQuotes.push(quote);\n          }\n        }\n      }\n    }\n  }\n  return shipmentQuotes;\n}\n// cartShipmentMethods to get current shipment method\n// this returns multiple methods, if more than one carrier\n// has been chosen\nfunction cartShipmentMethods(currentCart) {\n  const cart = currentCart || Cart.findOne();\n  const shipmentMethods = [];\n\n  if (cart) {\n    if (cart.shipping) {\n      for (const shipping of cart.shipping) {\n        if (shipping.shipmentMethod) {\n          shipmentMethods.push(shipping.shipmentMethod);\n        }\n      }\n    }\n  }\n  return shipmentMethods;\n}\n\nfunction enabledShipping() {\n  const enabledShippingArr = [];\n  const apps = Reaction.Apps({\n    provides: \"shippingSettings\",\n    enabled: true\n  });\n  for (app of apps) {\n    if (app.enabled === true) enabledShippingArr.push(app);\n  }\n  return enabledShippingArr;\n}\n\n// ensure new quotes are\nTemplate.coreCheckoutShipping.onCreated(function () {\n  this.autorun(() => {\n    this.subscribe(\"Shipping\");\n  });\n\n  const enabled = enabledShipping();\n  const isEnabled = enabled.length;\n  const shippingOpts = {\n    provides: \"settings\",\n    name: \"settings/shipping\",\n    template: \"shippingSettings\"\n  };\n\n  // If shipping not set, show shipping settings dashboard\n  if (!isEnabled) {\n    Reaction.showActionView(shippingOpts);\n  }\n});\n\nTemplate.coreCheckoutShipping.helpers({\n  // retrieves current rates and updates shipping rates\n  // in the users cart collection (historical, and prevents repeated rate lookup)\n  shipmentQuotes: function () {\n    const instance = Template.instance();\n    if (instance.subscriptionsReady()) {\n      const cart = Cart.findOne();\n      return cartShippingQuotes(cart);\n    }\n  },\n  // helper to display currently selected shipmentMethod\n  isSelected: function () {\n    const self = this;\n    const shipmentMethods = cartShipmentMethods();\n\n    for (method of shipmentMethods) {\n      // if there is already a selected method, set active\n      if (_.isEqual(self.method, method)) {\n        return \"active\";\n      }\n    }\n    return null;\n  },\n\n  isReady() {\n    const instance = Template.instance();\n    const isReady = instance.subscriptionsReady();\n\n    if (Reaction.Subscriptions.Cart.ready()) {\n      if (isReady) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n});\n\n//\n// Set and store cart shipmentMethod\n// this copies from shipmentMethods (retrieved rates)\n// to shipmentMethod (selected rate)\n//\nTemplate.coreCheckoutShipping.events({\n  \"click .list-group-item\": function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    const self = this;\n    const cart = Cart.findOne();\n\n    try {\n      Meteor.call(\"cart/setShipmentMethod\", cart._id, self.method);\n    } catch (error) {\n      throw new Meteor.Error(error,\n        \"Cannot change methods while processing.\");\n    }\n  },\n  \"click [data-event-action=configure-shipping]\"(event) {\n    event.preventDefault();\n\n    const dashboardRegistryEntry = Reaction.Apps({ name: \"reaction-dashboard\", provides: \"shortcut\" });\n    const shippingRegistryEntry = Reaction.Apps({ name: \"reaction-shipping\", provides: \"settings\" });\n\n    Reaction.showActionView([\n      dashboardRegistryEntry[0],\n      shippingRegistryEntry[0]\n    ]);\n  }\n});\n","import { Template } from \"meteor/templating\";\n/*\n * Template shippinges Helpers\n */\nTemplate.shippingSettings.onCreated(function () {\n  this.autorun(() => {\n    this.subscribe(\"Shipping\");\n  });\n});\n\nTemplate.shippingSettings.helpers({\n  checked(enabled) {\n    if (enabled === true) {\n      return \"checked\";\n    }\n    return \"\";\n  },\n  shown(enabled) {\n    if (enabled !== true) {\n      return \"hidden\";\n    }\n    return \"\";\n  }\n});\n\n// toggle shipping methods visibility\n// also toggles shipping method settings\nTemplate.shippingSettings.events({\n  /**\n   * shippingSettings settings update enabled status for shipping service on change\n   * @param  {event} event    jQuery Event\n   * @return {void}\n   */\n  \"change input.checkbox-switch.shipping-settings[name=enabled]\": (event) => {\n    event.preventDefault();\n    const settingsKey = event.target.getAttribute(\"data-key\");\n    const packageId = event.target.getAttribute(\"data-id\");\n    const fields = [{\n      property: \"enabled\",\n      value: event.target.checked\n    }];\n    // save shipping registry updates\n    if (packageId) {\n      // update package registry\n      Meteor.call(\"registry/update\", packageId, settingsKey, fields);\n      // also update shipping provider status\n      Meteor.call(\"shipping/provider/toggle\", packageId, settingsKey);\n    }\n  }\n});\n","import \"./checkout/shipping.html\";\nimport \"./checkout/shipping.js\";\n\nimport \"./settings/shipping.html\";\nimport \"./settings/shipping.js\";\n","import \"./templates\";\n","import _ from \"lodash\";\nimport Tooltip from \"tether-tooltip\";\nimport { Template }  from \"meteor/templating\";\nimport { i18next, i18nextDep } from \"/client/api\";\nimport { Icon } from \"/imports/plugins/core/ui/client/components\";\n\nTemplate.button.onRendered(function () {\n  const buttonElement = this.$(\"button, a\")[0];\n\n  this.createTooltip = () => {\n    if (this.data.tooltip) {\n      if (this.tooltip) {\n        this.tooltip.destroy();\n      }\n      this.tooltip = new Tooltip({\n        target: buttonElement,\n        position: this.data.tooltipPosition || \"top left\",\n        content: i18next.t(this.data.i18nKeyTooltip, this.data.tooltip) || this.data.tooltip\n      });\n    }\n  };\n\n  this.autorun(() => {\n    i18nextDep.depend();\n    this.createTooltip();\n  });\n});\n\n/* eslint no-unused-vars: 1 */\n//\n// TODO review Template.button helpers for unused elementProps\n//\nTemplate.button.helpers({\n  iconComponent() {\n    return Icon;\n  },\n\n  elementProps() {\n    const data = Template.currentData();\n    const {\n      // Remove unneeded attributes\n      className, status, type, href,\n\n      // Pull out invalid HTML attributes / unuesed attributes\n      /* eslint-disable */\n      title, label, i18nKeyTitle, i18nKeyLabel, i18nKeyTooltip,\n      tooltip,  icon, toggle, onIcon, toggleOn, onClick,\n      /* eslint-enable */\n\n      // Get the rest of the properties and put them in attrs\n      // these will most likely be HTML attributes\n      ...attrs\n    } = data;\n\n    return {\n      buttonAttributes: {\n        ...attrs, // Spread the attrs into this object\n        // Then override any props from attrs with some better defaults\n        class: `rui button btn btn-${status} ${className}`,\n        href: href,\n        type: () => {\n          if (!href) {\n            return type || \"button\";\n          }\n        }\n      }\n    };\n  },\n  element() {\n    const data = Template.currentData();\n    if (data.type === \"link\") {\n      return \"uiLinkElement\";\n    }\n    return \"uiButtonElement\";\n  },\n  i18nKeyTitle() {\n    const data = Template.instance().data;\n    return data.itemKeyTitle || data.i18nKeyLabel;\n  },\n  title() {\n    const data = Template.instance().data;\n    return data.title || data.label;\n  },\n  toggleOn() {\n    const instance = Template.instance();\n    const toggleOn = instance.data.toggleOn;\n\n    if (toggleOn) {\n      if (_.isFunction(toggleOn)) {\n        return toggleOn(instance.data);\n      }\n\n      return toggleOn;\n    }\n  }\n});\n\nTemplate.button.events({\n  \"click .rui.button\"(event, instance) {\n    if (instance.data.onClick) {\n      instance.data.onClick(event);\n    }\n  }\n});\n","import React, { Component, PropTypes } from \"react\";\nimport createFragment from \"react-addons-create-fragment\";\nimport classnames from \"classnames/dedupe\";\nimport Icon from \"../icon/icon.jsx\";\nimport { Tooltip, Translation } from \"../\";\n\nclass Button extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tooltipOpen: false\n    };\n\n    this.handleButtonMouseOver = this.handleButtonMouseOver.bind(this);\n    this.handleButtonMouseOut = this.handleButtonMouseOut.bind(this);\n  }\n\n  get isTooltipOpen() {\n    return this.state.tooltipOpen;\n  }\n\n  handleButtonMouseOver() {\n    this.setState({\n      tooltipOpen: this.props.tooltip ? true : false\n    });\n  }\n\n  handleButtonMouseOut() {\n    this.setState({\n      tooltipOpen: false\n    });\n  }\n\n  handleClick = (event) => {\n    if (this.props.tagName === \"a\") {\n      event.preventDefault();\n    }\n\n    // If this is a toogle button, and has a onToggle callback function\n    if (this.props.toggle && this.props.onToggle) {\n      if (this.props.toggleOn) {\n        // If toggleOn is true, return the toggleOn value, or true\n        this.props.onToggle(event, this.props.onValue || true);\n      } else {\n        // Otherwise return the value prop, or false\n        this.props.onToggle(event, this.props.value || false);\n      }\n    } else if (this.props.onClick) {\n      this.props.onClick(event, this.props.value);\n    }\n  }\n\n  renderOnStateIcon() {\n    if (this.props.onIcon) {\n      return (\n        <Icon icon={this.props.onIcon} />\n      );\n    }\n    return null;\n  }\n\n  renderNormalStateIcon() {\n    if (this.props.icon) {\n      return (\n        <Icon icon={this.props.icon} />\n      );\n    }\n    return null;\n  }\n\n  renderIcon() {\n    if (this.props.toggle) {\n      if (this.props.toggleOn) {\n        return this.renderOnStateIcon();\n      }\n    }\n\n    return this.renderNormalStateIcon();\n  }\n\n  renderTooltipContent() {\n    if (this.isTooltipOpen && this.props.disabled === false) {\n      if (typeof this.props.tooltip === \"string\") {\n        return (\n          <Translation defaultValue={this.props.tooltip} i18nKey={this.props.i18nKeyTooltip} />\n        );\n      }\n\n      return (\n        <div>\n          {this.props.tooltip}\n        </div>\n      );\n    }\n\n    return null;\n  }\n\n  renderLabel() {\n    if (this.props.label) {\n      if (this.props.toggle) {\n        if (this.props.toggleOn && this.props.toggleOnLabel) {\n          return (\n            <Translation\n              defaultValue={this.props.toggleOnLabel}\n              i18nKey={this.props.i18nKeyToggleOnLabel}\n            />\n          );\n        }\n      }\n\n      return (\n        <Translation\n          defaultValue={this.props.label}\n          i18nKey={this.props.i18nKeyLabel}\n        />\n      );\n    }\n\n    return null;\n  }\n\n  render() {\n    const {\n      active, status, toggleOn, primary, bezelStyle, className, containerStyle,\n\n      // Destructure these vars as they aren't valid as attributes on the HTML element button\n      iconAfter, label, i18nKeyTitle, i18nKeyLabel, i18nKeyTooltip, // eslint-disable-line no-unused-vars\n      tooltip, icon, toggle, onIcon, eventAction, buttonType, // eslint-disable-line no-unused-vars\n      toggleOnLabel, i18nKeyToggleOnLabel, tagName, onClick, onToggle, onValue, tooltipPosition, // eslint-disable-line no-unused-vars\n\n      // Get the rest of the properties and put them in attrs\n      // these will most likely be HTML attributes\n      ...attrs\n    } = this.props;\n\n    const classes = classnames({\n      \"rui\": true,\n      \"btn\": true,\n      \"btn-default\": !primary &&  (status === null || status === undefined || status === \"default\"),\n      \"active\": active || toggleOn,\n      \"btn-success\": status === \"success\",\n      \"btn-danger\": status === \"danger\",\n      \"btn-info\": status === \"info\",\n      \"btn-warning\": status === \"warning\",\n      \"btn-link\": status === \"link\",\n      \"btn-cta\": status === \"cta\",\n      \"btn-primary\": primary === true || status === \"primary\",\n      [bezelStyle || \"flat\"]: true\n    }, className);\n\n    const extraProps = {};\n\n    if (tagName === \"a\") {\n      extraProps.href = \"#\";\n    }\n\n    const buttonProps = Object.assign({\n      \"className\": classes,\n      \"data-event-action\": eventAction,\n      \"onMouseOut\": this.handleButtonMouseOut,\n      \"onMouseOver\": this.handleButtonMouseOver,\n      \"onClick\": this.handleClick,\n      \"type\": buttonType || \"button\"\n    }, attrs, extraProps);\n\n\n    // Create a react fragment for all the button children\n    let buttonChildren;\n\n    if (iconAfter) {\n      buttonChildren = createFragment({\n        label: this.renderLabel(),\n        icon: this.renderIcon(),\n        children: this.props.children\n      });\n    } else {\n      buttonChildren = createFragment({\n        icon: this.renderIcon(),\n        label: this.renderLabel(),\n        children: this.props.children\n      });\n    }\n\n    // Button with tooltip gets some special treatment\n    if (tooltip) {\n      return React.createElement(tagName, buttonProps,\n        <span className=\"rui btn-tooltip\" style={{ display: \"inline-flex\", ...containerStyle }}>\n          <Tooltip tooltipContent={this.renderTooltipContent()}>\n            {buttonChildren}\n          </Tooltip>\n        </span>\n      );\n    }\n\n    // Add a wrapped container with styles for standard button\n    if (containerStyle) {\n      buttonChildren = (\n        <div style={containerStyle}>\n          {buttonChildren}\n        </div>\n      );\n    }\n\n    // Normal button, without tooltip\n    return React.createElement(tagName, buttonProps, buttonChildren);\n  }\n}\n\nButton.propTypes = {\n  active: PropTypes.bool,\n  bezelStyle: PropTypes.oneOf([\"flat\", \"solid\", \"outline\"]),\n  buttonType: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  containerStyle: PropTypes.object,\n  disabled: PropTypes.bool,\n  eventAction: PropTypes.string,\n  i18nKeyLabel: PropTypes.string,\n  i18nKeyTitle: PropTypes.string,\n  i18nKeyToggleOnLabel: PropTypes.string,\n  i18nKeyTooltip: PropTypes.string,\n  icon: PropTypes.string,\n  iconAfter: PropTypes.bool,\n  label: PropTypes.string,\n  onClick: PropTypes.func,\n  onIcon: PropTypes.string,\n  onToggle: PropTypes.func,\n  onValue: PropTypes.any,\n  primary: PropTypes.bool,\n  status: PropTypes.string,\n  tagName: PropTypes.string,\n  title: PropTypes.string,\n  toggle: PropTypes.bool,\n  toggleOn: PropTypes.bool,\n  toggleOnLabel: PropTypes.string,\n  tooltip: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.node]),\n  tooltipPosition: PropTypes.string,\n  value: PropTypes.any\n};\n\nButton.defaultProps = {\n  active: false,\n  disabled: false,\n  iconAfter: false,\n  tagName: \"button\",\n  toggle: false,\n  bezelStyle: \"flat\"\n};\n\nexport default Button;\n","import React, { Component, PropTypes } from \"react\";\nimport classnames from \"classnames\";\nimport Button from \"./button.jsx\";\nimport { Translation } from \"/imports/plugins/core/ui/client/components\";\n\nclass ButtonSelect extends Component {\n  static PropTypes = {\n    buttons: PropTypes.array,\n    currentButton: PropTypes.node,\n    defaultButton: PropTypes.object,\n    defaultNonActiveButtons: PropTypes.array,\n    nonActiveButtons: PropTypes.array\n  }\n\n  state = {\n    toggle: \"hidden\",\n    currentButton: {},\n    buttons: [],\n    activeButton: \"\",\n    nonActiveButtons: [],\n    defaultBgClassNames: \"\",\n    toggleIcon: classnames({ \"fa\": true, \"fa-chevron-down\": true, \"text-center\": true, \"fa-icon\": true }),\n    toggleClassNames: classnames({ \"button-dropdown\": true, \"hidden\": true })\n  }\n\n  componentWillMount() {\n    this.handleDefaultState();\n  }\n\n  handleDefaultState = () => {\n    const props = this.props;\n    let defaultButton = props.buttons.filter(button => {\n      if (button.active === true) {\n        return button;\n      }\n    });\n    defaultButton = defaultButton[0];\n\n    const defaultBgClassNames = classnames({ \"button-select\": true, [defaultButton.bgColor]: true });\n\n    const defaultNonActiveButtons = props.buttons.filter(button => {\n      if (button.active === false || button.active === undefined) {\n        return button;\n      }\n    });\n    const currentButton = (\n      <Button\n        eventAction={defaultButton.eventAction}\n        status={defaultButton.status}\n        bezelStyle=\"solid\"\n        label={defaultButton.name}\n        i18nKeyLabel={defaultButton.i18nKeyLabel}\n        buttonType={defaultButton.buttonType}\n      />\n    );\n\n    return this.setState({\n      currentButton,\n      defaultBgClassNames,\n      buttons: props.buttons,\n      nonActiveButtons: defaultNonActiveButtons\n    });\n  }\n\n  filterButtons = () => {\n    const { activeButton, buttons } = this.state;\n\n    const nonActiveButtons = buttons.filter(button => {\n      if (button.name !== activeButton) {\n        return button;\n      }\n    });\n    return this.setState({ nonActiveButtons });\n  }\n\n  handleToggle = () => {\n    const { toggle } = this.state;\n    let className;\n\n    if (toggle === \"hidden\") {\n      className = classnames({ \"button-dropdown\": true, \"hidden\": false });\n      return this.setState({ toggle: \"show\",\n        toggleClassNames: className,\n        toggleIcon: classnames({ \"fa\": true, \"fa-chevron-up\": true, \"text-center\": true, \"fa-icon\": true })\n      });\n    }\n\n    className = classnames({ \"button-dropdown\": true, \"hidden\": true });\n    return this.setState({ toggle: \"hidden\",\n      toggleClassNames: className,\n      toggleIcon: classnames({ \"fa\": true, \"fa-chevron-down\": true, \"text-center\": true, \"fa-icon\": true })\n    });\n  }\n\n  handleButtonChange = (button) => {\n    const currentButton = (\n      <Button\n        eventAction={button.eventAction}\n        status={button.status}\n        bezelStyle=\"solid\"\n        label={button.name}\n        i18nKeyLabel={button.i18nKeyLabel}\n        buttonType={button.buttonType}\n      />\n    );\n\n    this.handleToggle();\n\n    return this.setState({\n      currentButton: currentButton,\n      defaultBgClassNames: classnames({ \"button-select\": true, [button.bgColor]: true }),\n      activeButton: button.name\n    }, () => {\n      this.filterButtons();\n    });\n  }\n\n  render() {\n    const { toggleClassNames, nonActiveButtons, defaultBgClassNames, toggleIcon, currentButton } = this.state;\n    return (\n      <div className={defaultBgClassNames}>\n        <div className=\"button-group\">\n          {currentButton}\n          <div className=\"button-toggle\" onClick={this.handleToggle}>\n            <i className={toggleIcon} aria-hidden=\"true\" />\n          </div>\n        </div>\n        <div className={toggleClassNames}>\n          {nonActiveButtons.map((button, key) => {\n            return (\n              <button\n                className=\"btn button-item\" key={key}\n                type=\"button\"\n                onClick={() => this.handleButtonChange(button)}\n              >\n                <Translation defaultValue={button.name} i18nKey={button.i18nKeyLabel} />\n              </button>);\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ButtonSelect;\n","import React from \"react\";\nimport IconButton from \"./iconButton\";\n\n/**\n * Edit button is a special type of Icon Button that is toggable by default\n * and presents a pencil ( or edit icon ) in its of state, and a check ( or success icon)\n * when it is on.\n *\n * Use this button in places where you need a pre-styled button for toggling editing\n * states of components.\n *\n * @param {Object} props Props passed into component\n * @returns {IconButton} Retruns an IconButton component with pre-configured icons for editing\n */\nconst EditButton = (props) => {\n  return (\n    <IconButton\n      icon=\"fa fa-pencil\"\n      onIcon=\"fa fa-check\"\n      toggle={true}\n      primary={true}\n      bezelStyle=\"solid\"\n      kind=\"round\"\n      {...props}\n    />\n  );\n};\n\nexport default EditButton;\n","/* eslint no-unused-vars: 1 */\n\nimport React, { Component } from \"react\";\nimport classnames from \"classnames\";\nimport Button from \"./button.jsx\";\n\nclass FlatButton extends Component {\n  static defaultProps = {\n    bezelStyle: \"flat\"\n  }\n  render() {\n    const {\n      icon,\n      onIcon,\n      ...otherProps\n    } = this.props;\n\n    const buttonClassName = classnames({\n      rui: true,\n      button: true\n    });\n\n    let iconClassName;\n    let onIconClassName;\n\n    if (icon) {\n      iconClassName = classnames({\n        [icon]: true\n      });\n    }\n\n    if (onIcon) {\n      onIconClassName = classnames({\n        [onIcon]: true\n      });\n    }\n\n    return (\n      <Button\n        className={buttonClassName}\n        icon={iconClassName}\n        onIcon={onIconClassName}\n        {...otherProps}\n      />\n    );\n  }\n}\n\nFlatButton.propTypes = Object.assign({}, Button.propTypes);\n\nexport default FlatButton;\n","import React, { PropTypes } from \"react\";\nimport { Icon } from \"../icon\";\n\n/**\n * Handle is a special type of button used for drag handles.\n * It uses the fa-bars icon by default, and does not have click or hover states\n *\n * Use this button in places where you need a pre-styled button for drag handles\n *\n * @param {Object} props Props passed into component\n * @returns {node} component with pre-configured icon for dragging\n */\nconst Handle = (props) => {\n  const handle = (\n    <div className=\"rui drag-handle btn btn-drag-handle\">\n      <Icon\n        icon=\"fa fa-bars\"\n        {...props}\n      />\n    </div>\n  );\n\n  if (props.connectDragSource) {\n    return props.connectDragSource(handle);\n  }\n\n  return handle;\n};\n\nHandle.propTypes = {\n  connectDragSource: PropTypes.func\n};\n\nexport default Handle;\n","import React, { Component } from \"react\";\nimport classnames from \"classnames\";\nimport Button from \"./button.jsx\";\n\nclass IconButton extends Component {\n  static defaultProps = {\n    bezelStyle: \"solid\"\n  }\n\n  render() {\n    const {\n      icon,\n      onIcon,\n      ...otherProps\n    } = this.props;\n\n\n    // this.props.buttonKind === 'flat'\n    // default should be default, flat is new css that makes the bakcground tarnsparent\n    let buttonClassName;\n\n    if (this.props.kind === \"flat\") {\n      buttonClassName = classnames({\n        \"icon\": true,\n        \"icon-only\": true\n      });\n    } else {\n      buttonClassName = classnames({\n        \"icon-only\": true,\n        \"variant-edit\": true\n      });\n    }\n\n    const iconClassName = classnames({\n      \"fa-lg\": true,\n      [icon]: true\n    });\n\n    let onIconClassName;\n\n    if (onIcon) {\n      onIconClassName = classnames({\n        \"fa-lg\": true,\n        [onIcon]: true\n      });\n    }\n\n    return (\n      <Button\n        className={buttonClassName}\n        icon={iconClassName}\n        onIcon={onIconClassName}\n        containerStyle={{ display: \"flex\", width: \"100%\", justifyContent: \"center\" }}\n        {...otherProps}\n      />\n    );\n  }\n}\n\nIconButton.propTypes = Object.assign({}, Button.propTypes);\n\nexport default IconButton;\n","export { default as Button } from \"./button.jsx\";\nexport { default as IconButton } from \"./iconButton\";\nexport { default as EditButton } from \"./editButton\";\nexport { default as VisibilityButton } from \"./visibilityButton\";\nexport { default as Handle } from \"./handle\";\nexport { default as ButtonSelect } from \"./buttonSelect\";\n","import React from \"react\";\nimport IconButton from \"./iconButton\";\n\n/**\n * Visibility button is a special type of Icon Button that is toggable by default\n * and presents a eye icon in its on state, and a eye-slash icon when it is off.\n *\n * Use this button in places where you need a pre-styled button for toggling visibility\n * states of components.\n *\n * @param {Object} props Props passed into component\n * @returns {IconButton} Retruns an IconButton component with pre-configured icons for visibility\n */\nconst VisibilityButton = (props) => {\n  return (\n    <IconButton\n      icon=\"fa fa-eye-slash\"\n      onIcon=\"fa fa-eye\"\n      bezelStyle=\"solid\"\n      primary={true}\n      toggle={true}\n      {...props}\n    />\n  );\n};\n\nexport default VisibilityButton;\n","import React, { Children, Component, PropTypes } from \"react\";\nimport classnames from \"classnames\";\n\nclass Card extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      expanded: props.expanded\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      expanded: nextProps.expanded\n    });\n  }\n\n  handleExpanderClick = (event) => {\n    this.setState({\n      expanded: !this.state.expanded\n    }, () => {\n      if (typeof this.props.onExpand === \"function\") {\n        this.props.onExpand(event, this, this.props.name, this.state.expanded);\n      }\n    });\n  }\n\n  render() {\n    const elements = Children.map(this.props.children, (child) => {\n      const newProps = {};\n\n      if (child.props.actAsExpander) {\n        newProps.actAsExpander = true;\n        newProps.onClick = this.handleExpanderClick;\n      }\n\n      if (child.props.expandable || child.props.actAsExpander) {\n        newProps.expanded = this.state.expanded;\n      }\n\n      return React.cloneElement(child, newProps);\n    });\n\n    const baseClassName = classnames({\n      \"panel\": true,\n      \"panel-default\": true,\n      \"panel-active\": this.state.expanded,\n      \"closed\": this.state.expanded === false\n    });\n\n    return (\n      <div className={baseClassName} style={this.props.style}>\n        {elements}\n      </div>\n    );\n  }\n}\n\nCard.defaultProps = {\n  expandable: false,\n  expanded: true\n};\n\nCard.propTypes = {\n  children: PropTypes.node,\n  expandable: PropTypes.bool,\n  expanded: PropTypes.bool,\n  name: PropTypes.string,\n  onExpand: PropTypes.func,\n  style: PropTypes.object\n};\n\nexport default Card;\n","import React, { Component, PropTypes } from \"react\";\nimport { VelocityTransitionGroup } from \"velocity-react\";\nimport Radium from \"radium\";\nimport classnames from \"classnames\";\n\nconst styles = {\n  noPadding: {\n    padding: 0\n  }\n};\n\nclass CardBody extends Component {\n  static defaultProps = {\n    expandable: false,\n    expanded: true\n  };\n\n  static propTypes = {\n    children: PropTypes.node,\n    expanded: PropTypes.bool,\n    padded: PropTypes.bool\n  };\n\n  renderCard() {\n    if (this.props.expanded) {\n      const baseClassName = classnames({\n        \"rui\": true,\n        \"panel-body\": true,\n        \"no-padding\": this.props.padded === false\n      });\n\n      return (\n        <div\n          className={baseClassName}\n          style={[\n            this.props.padded === false ? styles.noPadding : void 0\n          ]}\n        >\n          {this.props.children}\n        </div>\n      );\n    }\n\n    return null;\n  }\n\n  render() {\n    return (\n      <VelocityTransitionGroup\n        enter={{ animation: \"slideDown\" }}\n        leave={{ animation: \"slideUp\" }}\n      >\n        {this.renderCard()}\n      </VelocityTransitionGroup>\n    );\n  }\n}\n\nexport default Radium(CardBody);\n","import React, { Component, PropTypes } from \"react\";\n\nclass CardGroup extends Component {\n  render() {\n    return (\n      <div className=\"panel-group\">\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nCardGroup.propTypes = {\n  children: PropTypes.node\n};\n\nexport default CardGroup;\n","import React, { Component, PropTypes } from \"react\";\nimport classnames from \"classnames\";\nimport CardTitle from \"./cardTitle\";\nimport IconButton from \"../button/iconButton\";\nimport Icon from \"../icon/icon\";\nimport Switch from \"../switch/switch\";\n\nclass CardHeader extends Component {\n  static defaultProps = {\n    actAsExpander: false,\n    expandable: false\n  };\n\n  static propTypes = {\n    actAsExpander: PropTypes.bool,\n    children: PropTypes.node,\n    expandOnSwitchOn: PropTypes.bool,\n    expanded: PropTypes.bool,\n    i18nKeyTitle: PropTypes.string,\n    icon: PropTypes.string,\n    imageView: PropTypes.node,\n    onClick: PropTypes.func,\n    onSwitchChange: PropTypes.func,\n    showSwitch: PropTypes.bool,\n    switchName: PropTypes.string,\n    switchOn: PropTypes.bool,\n    title: PropTypes.string\n  };\n\n  handleClick = (event) => {\n    event.preventDefault();\n\n    if (typeof this.props.onClick === \"function\") {\n      this.props.onClick(event);\n    }\n  }\n\n  handleSwitchChange = (event, isChecked, name) => {\n    if (this.props.expandOnSwitchOn && this.props.actAsExpander && this.props.expanded === false && isChecked === true) {\n      this.handleClick(event);\n    }\n\n    if (typeof this.props.onSwitchChange === \"function\") {\n      this.props.onSwitchChange(event, isChecked, name);\n    }\n  }\n\n  renderTitle() {\n    if (this.props.title) {\n      return (\n        <CardTitle\n          i18nKeyTitle={this.props.i18nKeyTitle}\n          title={this.props.title}\n        />\n      );\n    }\n    return null;\n  }\n\n  renderImage() {\n    if (this.props.icon) {\n      return (\n        <div className=\"image\">\n          <Icon icon={this.props.icon} />\n        </div>\n      );\n    }\n\n    if (this.props.imageView) {\n      return (\n        <div className=\"image\">\n          {this.props.imageView}\n        </div>\n      );\n    }\n\n    return null;\n  }\n\n  renderDisclsoureArrow() {\n    const expanderClassName = classnames({\n      rui: true,\n      expander: true,\n      open: this.props.expanded\n    });\n\n    return (\n      <div className={expanderClassName}>\n        <IconButton\n          icon=\"fa fa-angle-down\"\n          bezelStyle=\"outline\"\n          style={{ borderColor: \"#dddddd\" }}\n          onClick={this.handleClick}\n        />\n      </div>\n    );\n  }\n\n  renderChildren() {\n    if (this.props.showSwitch) {\n      return (\n        <Switch\n          checked={this.props.switchOn}\n          name={this.props.switchName}\n          onChange={this.handleSwitchChange}\n        />\n      );\n    }\n\n    return this.props.children;\n  }\n\n  render() {\n    const baseClassName = classnames({\n      \"rui\": true,\n      \"panel-heading\": true,\n      \"card-header\": true,\n      \"expandable\": this.props.actAsExpander\n    });\n\n    if (this.props.actAsExpander) {\n      return (\n        <div className={baseClassName}>\n          <div className=\"content-view\" onClick={this.handleClick}>\n            {this.renderImage()}\n            {this.renderTitle()}\n          </div>\n          <div className=\"action-view\">\n            {this.renderChildren()}\n          </div>\n          {this.renderDisclsoureArrow()}\n        </div>\n      );\n    }\n\n    return (\n      <div className={baseClassName}>\n        <div className=\"content-view\">\n          {this.renderTitle()}\n        </div>\n        <div className=\"action-view\">\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CardHeader;\n","import React, { Component, PropTypes } from \"react\";\nimport { Translation } from \"../translation\";\n\nclass CardTitle extends Component {\n\n  render() {\n    const { element, ...props } = this.props;\n\n    if (element) {\n      return React.cloneElement(element, props);\n    }\n\n    return (\n      <h3 className=\"panel-title\">\n        <Translation defaultValue={this.props.title} i18nKey={this.props.i18nKeyTitle} />\n        {this.props.children}\n      </h3>\n    );\n  }\n}\n\nCardTitle.propTypes = {\n  children: PropTypes.node,\n  element: PropTypes.node,\n  i18nKeyTitle: PropTypes.string,\n  title: PropTypes.string\n};\n\nexport default CardTitle;\n","import React, { Component, PropTypes } from \"react\";\n\nclass CardToobar extends Component {\n  static propTypes = {\n    children: PropTypes.node\n  }\n\n  render() {\n    return (\n      <div className=\"rui card-toolbar\">\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nexport default CardToobar;\n","/**\n* @typedef CardProps\n* @type Object\n* @property {[Object]} controls Reaction UI Button or other control props\n* @property {function} onContentClick y The Y\n*/\n\nTemplate.card.events({\n  \"click .content\"(event, instance) {\n    if (instance.data.onContentClick) {\n      instance.data.onContentClick(event);\n    }\n  }\n});\n","export { default as Card } from \"./card\";\nexport { default as CardHeader } from \"./cardHeader\";\nexport { default as CardTitle } from \"./cardTitle\";\nexport { default as CardBody } from \"./cardBody\";\nexport { default as CardGroup } from \"./cardGroup\";\nexport { default as CardToolbar } from \"./cardToolbar\";\nexport { default as SettingsCard } from \"./settingsCard\";\n","/**\n * Settings Card is a composite component to standardize the\n * creation settings cards (panels) in the dashboard.\n */\n\nimport React, { Component, PropTypes } from \"react\";\nimport Blaze from \"meteor/gadicc:blaze-react-component\";\nimport { Reaction } from \"/client/api\";\nimport { composeWithTracker } from \"/lib/api/compose\";\nimport { Card, CardHeader, CardBody } from \"/imports/plugins/core/ui/client/components\";\n\nclass SettingsCard extends Component {\n  static defaultProps = {\n    showSwitch: true\n  }\n\n  static propTypes = {\n    children: PropTypes.node,\n    enabled: PropTypes.bool,\n    expanded: PropTypes.bool,\n    i18nKeyTitle: PropTypes.string,\n    icon: PropTypes.string,\n    name: PropTypes.string,\n    onExpand: PropTypes.func,\n    onSwitchChange: PropTypes.func,\n    packageName: PropTypes.string,\n    padded: PropTypes.bool,\n    preferences: PropTypes.object,\n    saveOpenStateToPreferences: PropTypes.bool,\n    showSwitch: PropTypes.bool,\n    template: PropTypes.any,\n    title: PropTypes.string\n  }\n\n  handleSwitchChange = (event, isChecked) => {\n    if (typeof this.props.onSwitchChange === \"function\") {\n      this.props.onSwitchChange(event, isChecked, this.props.name, this);\n    }\n  }\n\n  handleExpand = (event, card, name, isExpanded) => {\n    if (this.props.onExpand) {\n      this.props.onExpand(event, card, name, isExpanded);\n    }\n\n    if (this.props.packageName && this.props.saveOpenStateToPreferences) {\n      Reaction.updateUserPreferences(this.props.packageName, \"settingsCards\", {\n        [this.props.name]: isExpanded\n      });\n    }\n  }\n\n  get isExpanded() {\n    if (this.props.packageName && this.props.saveOpenStateToPreferences) {\n      return this.props.preferences[this.props.name];\n    }\n\n    return this.props.expanded;\n  }\n\n  renderCardBody() {\n    if (this.props.template) {\n      return (\n        <Blaze template={this.props.template} />\n      );\n    }\n\n    return this.props.children;\n  }\n\n  render() {\n    return (\n      <Card\n        expandable={true}\n        onExpand={this.handleExpand}\n        expanded={this.isExpanded}\n        name={this.props.name}\n      >\n        <CardHeader\n          i18nKeyTitle={this.props.i18nKeyTitle}\n          icon={this.props.icon}\n          title={this.props.title}\n          showSwitch={this.props.showSwitch}\n          actAsExpander={true}\n          switchOn={this.props.enabled}\n          switchName={this.props.name}\n          expandOnSwitchOn={true}\n          onSwitchChange={this.handleSwitchChange}\n        />\n        <CardBody expandable={true} padded={this.props.padded}>\n          {this.renderCardBody()}\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nfunction composer(props, onData) {\n  if (props.packageName && props.saveOpenStateToPreferences) {\n    const preferences = Reaction.getUserPreferences(props.packageName, \"settingsCards\", {});\n\n    onData(null, {\n      preferences\n    });\n  } else {\n    onData(null, {});\n  }\n}\n\nconst decoratedComponent = composeWithTracker(composer)(SettingsCard);\n\nexport default decoratedComponent;\n","import React from \"react\";\nimport classnames from \"classnames\";\nconst accounting = require(\"accounting-js\");\n\nfunction setCaretPosition(ctrl, pos) {\n  if (ctrl.setSelectionRange) {\n    ctrl.focus();\n    ctrl.setSelectionRange(pos, pos);\n  } else if (ctrl.createTextRange) {\n    const range = ctrl.createTextRange();\n\n    range.collapse(true);\n    range.moveEnd(\"character\", pos);\n    range.moveStart(\"character\", pos);\n    range.select();\n  }\n}\n\nclass NumericInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // Set default state\n    this.state = {\n      value: this.props.value\n    };\n\n    // Bind event handlers\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  /**\n   * update state when component receives props\n   * @param  {Object} nextProps new props\n   * @return {undefined}\n   */\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      value: nextProps.value\n    });\n  }\n\n  get moneyFormat() {\n    const moneyFormat = this.props.format || {};\n    // precision is mis-represented in accounting.js. Precision in this case is actually scale\n    // so we add the property for precision based on scale.\n    moneyFormat.precision = moneyFormat.scale !== undefined ? moneyFormat.scale : 2;\n\n    return moneyFormat;\n  }\n\n  get displayValue() {\n    const value = this.state.value;\n\n    if (typeof value === \"number\") {\n      if (this.props.format && this.props.format.scale === 0) {\n        return this.format(value * 100);\n      }\n      return this.format(value);\n    }\n\n    return 0;\n  }\n\n  get scale() {\n    const parts = this.state.value.split(\".\");\n\n    if (parts.length === 2) {\n      return parts[1].length;\n    }\n\n    return 0;\n  }\n\n  /**\n   * format a numeric string\n   * @param  {String} value Value to format\n   * @param  {Object} format Object containing settings for formatting value\n   * @return {String} Foramtted numeric string\n   */\n  format(value, format) {\n    const moneyFormat = format || this.moneyFormat;\n\n\n    // value * (10 ^ (2 - moneyFormat.scale))\n\n    // console.log(moneyFormat, value, value * Math.pow(10, 2 - moneyFormat.precision));\n    const decimal = moneyFormat.decimal || undefined;\n    const unformatedValue = this.unformat(value, decimal);\n\n    return accounting.formatMoney(unformatedValue, moneyFormat);\n  }\n\n  /**\n   * unformat numeric string\n   * @param  {String} value String value to unformat\n   * @param  {String} decimal String representing the decimal place\n   * @return {String} unformatted numeric string\n   */\n  unformat(value, decimal) {\n    return accounting.unformat(value, decimal);\n  }\n\n  /**\n   * Handle change event from text input\n   * @param  {SytheticEvent} event Change event\n   * @return {undefined}\n   */\n  handleChange(event) {\n    const input = event.currentTarget;\n    const value = event.currentTarget.value;\n    let numberValue = this.unformat(value);\n\n    if (this.props.format.scale === 0) {\n      numberValue = numberValue / 100;\n    }\n\n    this.setState({\n      value: numberValue,\n      caretPosition: input.selectionStart\n    }, () => {\n      setCaretPosition(input, Math.max(this.state.caretPosition, 0));\n\n      if (this.props.onChange) {\n        this.props.onChange(event, { value, numberValue });\n      }\n    });\n  }\n\n  /**\n   * render\n   * @return {ReactElement} markup\n   */\n  render() {\n    const { classNames } = this.props;\n\n\n    if (this.props.isEditing === false) {\n      const textValueClassName = classnames({\n        rui: true,\n        text: true,\n        ...(classNames.text || {})\n      });\n\n      return (\n        <span className={textValueClassName}>\n          {this.displayValue}\n        </span>\n      );\n    }\n\n    const fieldClassName = classnames({\n      \"form-control\": true, // eslint-disable-line: quote-props\n      ...(classNames.input || {})\n    });\n\n    return (\n      <div className=\"rui control numeric-input\">\n        <input\n          className={fieldClassName}\n          disabled={this.props.disabled}\n          onChange={this.handleChange}\n          value={this.displayValue}\n        />\n      </div>\n    );\n  }\n}\n\nNumericInput.displayName = \"Numeric Input\";\n\nNumericInput.defaultProps = {\n  disabled: false,\n  isEditing: true,\n  classNames: {}\n};\n\nNumericInput.propTypes = {\n  classNames: React.PropTypes.shape({}),\n  disabled: React.PropTypes.bool,\n  format: React.PropTypes.shape({\n    scale: React.PropTypes.number\n  }),\n  isEditing: React.PropTypes.bool,\n  onChange: React.PropTypes.func,\n  value: React.PropTypes.number\n};\n\nexport default NumericInput;\n","import { templateClassName } from \"/imports/plugins/core/ui/client/helpers/helpers\";\n\n/**\n * Select - onCreated\n */\nTemplate.select.onCreated(function () {\n  this.state = new ReactiveDict();\n});\n\n/**\n * Select - events\n */\nTemplate.select.events({\n  \"change select, change input\"(event, template) {\n    if (template.data.onSelect) {\n      template.data.onSelect(event.target.value, event);\n    }\n  }\n});\n\n/**\n * Select - helpers\n */\nTemplate.select.helpers({\n  template() {\n    const type = Template.currentData().type;\n    if (type === \"radios\" || type === \"radio\") {\n      return \"selectAsRadioButtons\";\n    } else if (type === \"checkboxes\" || type === \"checkbox\") {\n      return \"selectAsCheckboxes\";\n    }\n\n    return \"selectAsDropdown\";\n  }\n});\n\n/**\n * Select (As a set of radio buttons) - helpers\n */\nTemplate.selectAsRadioButtons.helpers({\n  itemListClassName() {\n    return templateClassName(Template.instance(), {\n      rui: true,\n      items: true,\n      flex: true,\n      quarter: true\n    }, \"itemList\");\n  },\n\n  itemClassName() {\n    return templateClassName(Template.instance(), {\n      rui: true,\n      item: true\n    }, \"item\");\n  },\n\n  labelClassName() {\n    return templateClassName(Template.instance(), undefined, \"label\");\n  },\n\n  inputClassName() {\n    return templateClassName(Template.instance(), undefined, \"input\");\n  },\n\n  templateData(option) {\n    const instance = Template.instance();\n    const data = instance.data;\n\n    return {\n      selected: data.selected === option[data.key || \"_id\"],\n      option\n    };\n  },\n  /**\n   * checked attribute helper\n   * @param  {Object} option Option object\n   * @return {String|undefined} returns \"chekced\" if selected, undefined otherwise\n   */\n  checked(option) {\n    const data = Template.currentData();\n\n    if (data.selected === option[data.key || \"_id\"]) {\n      return \"checked\";\n    }\n  }\n});\n\n/**\n * Select (As a set of checkboxes) - helpers\n */\nTemplate.selectAsCheckboxes.helpers({\n  /**\n   * checked attribute helper\n   * @param  {Object} option Option object\n   * @return {String|undefined} returns \"chekced\" if selected, undefined otherwise\n   */\n  checked(option) {\n    const data = Template.currentData();\n\n    if (data.selected === option[data.key || \"_id\"]) {\n      return \"checked\";\n    }\n  }\n});\n","import React, { Component } from \"react\";\nimport MultiSelect from \"../multiselect/multiselect\";\n\nclass Select extends Component {\n  render() {\n    return (\n      <MultiSelect\n        multi={false}\n        clearable={false}\n        {...this.props}\n      />\n    );\n  }\n}\n\nexport default Select;\n","export { default as TagList } from \"./tags.jsx\";\nexport { default as TagItem } from \"./tag.jsx\";\n","import React, { Component, PropTypes } from \"react\";\nimport classnames from \"classnames\";\nimport Autosuggest from \"react-autosuggest\";\nimport Velocity from \"velocity-animate\";\nimport \"velocity-animate/velocity.ui\";\nimport { Router } from \"/client/api\";\nimport { i18next } from \"/client/api\";\nimport { Button, Handle } from \"/imports/plugins/core/ui/client/components\";\nimport { SortableItem } from \"../../containers\";\n\n\nclass Tag extends Component {\n  displayName: \"Tag\";\n\n  componentWillReceiveProps(nextProps) {\n    if (this._updated && this._saved && this.refs.autoSuggestInput) {\n      const input = this.refs.autoSuggestInput.input;\n\n      Velocity.RunSequence([\n        { e: input, p: { backgroundColor: \"#e2f2e2\" }, o: { duration: 200 } },\n        { e: input, p: { backgroundColor: \"#fff\" }, o: { duration: 100 } }\n      ]);\n\n      this._updated = false;\n    }\n\n    if ((nextProps.tag.name !== this.props.tag.name)) {\n      this._updated = true;\n    }\n  }\n\n  get tag() {\n    return this.props.tag || {\n      name: \"\"\n    };\n  }\n\n  get inputPlaceholder() {\n    return i18next.t(this.props.i18nKeyInputPlaceholder || \"tags.tagName\", {\n      defaultValue: this.props.inputPlaceholder || \"Tag Name\"\n    });\n  }\n\n  getSuggestionValue(suggestion) {\n    return suggestion.label;\n  }\n\n  saveTag(event) {\n    if (this.props.onTagSave) {\n      this.props.onTagSave(event, this.props.tag);\n    }\n  }\n\n  /**\n   * Handle tag form submit events and pass them up the component chain\n   * @param  {Event} event Event object\n   * @return {void} no return value\n   */\n  handleTagFormSubmit = (event) => {\n    event.preventDefault();\n    this._saved = true;\n    this.saveTag(event);\n  };\n\n  /**\n   * Handle tag remove events and pass them up the component chain\n   * @param  {Event} event Event object\n   * @return {void} no return value\n   */\n  handleTagRemove = () => {\n    if (this.props.onTagRemove) {\n      this.props.onTagRemove(this.props.tag);\n    }\n  };\n\n  /**\n   * Handle tag update events and pass them up the component chain\n   * @param  {Event} event Event object\n   * @return {void} no return value\n   */\n  handleTagUpdate = (event) => {\n    if (this.props.onTagUpdate && event.keyCode === 13) {\n      this._saved = true;\n      this.props.onTagUpdate(this.props.tag._id, event.target.value);\n    }\n  };\n\n  handleTagKeyDown = (event) => {\n    if (event.keyCode === 13) {\n      this._saved = true;\n      this.saveTag(event);\n    }\n  }\n\n  /**\n   * Handle tag mouse out events and pass them up the component chain\n   * @param  {Event} event Event object\n   * @return {void} no return value\n   */\n  handleTagMouseOut = (event) => {\n    // event.preventDefault();\n    if (this.props.onTagMouseOut) {\n      this.props.onTagMouseOut(event, this.props.tag);\n    }\n  };\n\n  /**\n   * Handle tag mouse over events and pass them up the component chain\n   * @param  {Event} event Event object\n   * @return {void} no return value\n   */\n  handleTagMouseOver = (event) => {\n    if (this.props.onTagMouseOver) {\n      this.props.onTagMouseOver(event, this.props.tag);\n    }\n  };\n\n  /**\n   * Handle tag inout blur events and pass them up the component chain\n   * @param  {Event} event Event object\n   * @return {void} no return value\n   */\n  handleTagInputBlur = (event) => {\n    if (this.props.onTagInputBlur) {\n      this._saved = true;\n      this.props.onTagInputBlur(event, this.props.tag);\n    }\n  };\n\n  handleInputChange = (event, { newValue }) => {\n    if (this.props.onTagUpdate) {\n      const updatedTag = Object.assign({}, { ...this.props.tag }, {\n        name: newValue\n      });\n      this.props.onTagUpdate(event, updatedTag);\n    }\n  }\n\n  handleSuggestionsUpdateRequested = (suggestion) => {\n    if (this.props.onGetSuggestions) {\n      this.props.onGetSuggestions(suggestion);\n    }\n  }\n\n  handleSuggestionsClearRequested = () => {\n    if (this.props.onClearSuggestions) {\n      this.props.onClearSuggestions();\n    }\n  }\n\n  /**\n   * Render a simple tag for display purposes only\n   * @return {JSX} simple tag\n   */\n  renderTag() {\n    const url = Router.pathFor(\"tag\", {\n      hash: {\n        slug: this.props.tag.slug\n      }\n    });\n\n    const baseClassName = classnames({\n      \"rui\": true,\n      \"tag\": true,\n      \"link\": true,\n      \"full-width\": this.props.fullWidth\n    });\n\n    return (\n      <a\n        className={baseClassName}\n        href={url}\n        onMouseOut={this.handleTagMouseOut}\n        onMouseOver={this.handleTagMouseOver}\n      >\n        {this.props.tag.name}\n      </a>\n    );\n  }\n\n  /**\n   * Render an admin editable tag\n   * @return {JSX} editable tag\n   */\n  renderEditableTag() {\n    const baseClassName = classnames({\n      \"rui\": true,\n      \"tag\": true,\n      \"edit\": true,\n      \"full-width\": this.props.fullWidth\n    });\n\n    return (\n      this.props.connectDropTarget(\n        <div\n          className={baseClassName}\n          data-id={this.props.tag._id}\n        >\n          <form onSubmit={this.handleTagFormSubmit}>\n            <Handle connectDragSource={this.props.connectDragSource} />\n            {this.renderAutosuggestInput()}\n            <Button icon=\"times-circle\" onClick={this.handleTagRemove} status=\"danger\" />\n          </form>\n        </div>\n      )\n    );\n  }\n\n  /**\n   * Render a tag creation form\n   * @return {JSX} blank tag for creating new tags\n   */\n  renderBlankEditableTag() {\n    const baseClassName = classnames({\n      \"rui\": true,\n      \"tag\": true,\n      \"edit\": true,\n      \"create\": true,\n      \"full-width\": this.props.fullWidth\n    });\n\n    return (\n      <div className={baseClassName}>\n        <form onSubmit={this.handleTagFormSubmit}>\n          <Button icon=\"tag\" />\n          {this.renderAutosuggestInput()}\n          <Button icon=\"plus\" />\n        </form>\n      </div>\n    );\n  }\n\n  renderSuggestion(suggestion) {\n    return (\n      <span>{suggestion.label}</span>\n    );\n  }\n\n  renderAutosuggestInput() {\n    return (\n      <Autosuggest\n        getSuggestionValue={this.getSuggestionValue}\n        inputProps={{\n          placeholder: this.inputPlaceholder,\n          value: this.props.tag.name,\n          onKeyDown(event) {\n            // 9 == Tab key\n            // 13 == Enter Key\n            if (event.keyCode === 9 || event.keyCode === 13) {\n              // this.handleUpdate\n              // options.onUpdateCallback && options.onUpdateCallback();\n            }\n          },\n          onBlur: this.handleTagInputBlur,\n          onChange: this.handleInputChange\n        }}\n        onSuggestionsClearRequested={this.handleSuggestionsClearRequested}\n        onSuggestionsFetchRequested={this.handleSuggestionsUpdateRequested}\n        ref=\"autoSuggestInput\"\n        renderSuggestion={this.renderSuggestion}\n        suggestions={this.props.suggestions}\n      />\n    );\n  }\n\n  /**\n   * Render component\n   * @return {JSX} tag component\n   */\n  render() {\n    if (this.props.editable) {\n      return this.renderEditableTag();\n    } else if (this.props.blank) {\n      return this.renderBlankEditableTag();\n    }\n\n    return this.renderTag();\n  }\n}\n\nTag.propTypes = {\n  blank: PropTypes.bool,\n  connectDragSource: PropTypes.func,\n  connectDropTarget: PropTypes.func,\n  editable: PropTypes.bool,\n  fullWidth: PropTypes.bool,\n  i18nKeyInputPlaceholder: PropTypes.string,\n  index: PropTypes.number,\n  inputPlaceholder: PropTypes.string,\n  onClearSuggestions: PropTypes.func,\n  onGetSuggestions: PropTypes.func,\n  onTagInputBlur: PropTypes.func,\n  onTagMouseOut: PropTypes.func,\n  onTagMouseOver: PropTypes.func,\n  onTagRemove: PropTypes.func,\n  onTagSave: PropTypes.func,\n  onTagUpdate: PropTypes.func,\n  parentTag: PropTypes.object,\n  suggestions: PropTypes.arrayOf(PropTypes.object),\n  tag: PropTypes.object\n};\n\nexport default SortableItem(\"tag\", Tag);\n","import { Reaction, Router } from \"/client/api\";\nimport { Tags } from \"/lib/collections\";\nimport { i18next } from \"/client/api\";\nimport classnames from \"classnames\";\nimport Autosuggest from \"react-autosuggest\";\nimport { ReactiveDict } from \"meteor/reactive-dict\";\nimport React from \"react\";\n\nfunction createAutosuggestInput(templateInstance, options) {\n  return {\n    component: Autosuggest,\n    suggestions: templateInstance.state.get(\"suggestions\"),\n    getSuggestionValue: getSuggestionValue,\n    renderSuggestion: renderSuggestion,\n    onSuggestionsFetchRequested({ value }) {\n      templateInstance.state.set(\"suggestions\", getSuggestions(value));\n    },\n    onSuggestionsClearRequested() {\n      templateInstance.state.set(\"suggestions\", []);\n    },\n    inputProps: {\n      placeholder: i18next.t(options.i18nPlaceholderKey, { defaultValue: options.i18nPlaceholderValue }),\n      value: templateInstance.state.get(\"inputValue\"),\n      onKeyDown(event) {\n        // 9 == Tab key\n        // 13 == Enter Key\n        if (event.keyCode === 9 || event.keyCode === 13) {\n          options.onUpdateCallback && options.onUpdateCallback();\n        }\n      },\n      onBlur: () => {\n        options.onUpdateCallback && options.onUpdateCallback();\n      },\n      onChange(event, { newValue }) {\n        templateInstance.state.set(\"suggestion\", getSuggestions(newValue));\n        templateInstance.state.set(\"inputValue\", newValue);\n      }\n    }\n  };\n}\n\nfunction getSuggestions(term) {\n  const datums = [];\n  const slug = Reaction.getSlug(term);\n  Tags.find({\n    slug: new RegExp(slug, \"i\")\n  }).forEach(function (tag) {\n    return datums.push({\n      label: tag.name\n    });\n  });\n\n  return datums;\n}\n\nfunction getSuggestionValue(suggestion) {\n  return suggestion.label;\n}\n\nfunction renderSuggestion(suggestion) {\n  return React.createElement(\"span\", null, suggestion.label);\n}\n\nTemplate.tagItem.helpers({\n  tagBlankProps() {\n    const instance = Template.instance();\n    return {\n      onTagCreate: instance.data.onTagCreate\n    };\n  },\n\n  tagEditableProps(tag) {\n    const instance = Template.instance();\n\n    return {\n      tag,\n      controls: _.map(instance.data.controls, (control) => {\n        return {\n          ...control,\n          toggleOn() {\n            if (control.toggleOn) {\n              if (_.isFunction(control.toggleOn)) {\n                return control.toggleOn(tag);\n              }\n\n              return control.toggleOn;\n            }\n            return undefined;\n          },\n          onClick(event) {\n            // Call the original onClick and add the current tag\n            control.onClick(event, tag);\n          }\n        };\n      }),\n      className: instance.data.className,\n      isSelected: instance.data.isSelected,\n      selectable: instance.data.selectable,\n      onTagRemove: instance.data.onTagRemove,\n      onTagSelect: instance.data.onTagSelect,\n      onTagUpdate: instance.data.onTagUpdate\n    };\n  }\n});\n\nTemplate.tagEditable.onCreated(function () {\n  this.state = new ReactiveDict();\n  this.state.setDefault({\n    oldValue: this.data.tag.name,\n    inputValue: this.data.tag.name,\n    suggestions: []\n  });\n\n  this.submitInput = () => {\n    const value = this.state.get(\"inputValue\").trim();\n\n    if (this.data.onTagCreate && _.isEmpty(value) === false) {\n      this.data.onTagCreate(value);\n    }\n\n    this.state.set(\"inputValue\", \"\");\n  };\n\n  this.updateTag = () => {\n    const inputValue = this.state.get(\"inputValue\");\n    if (this.state.equals(\"oldValue\", inputValue) === false) {\n      const value = inputValue.trim();\n\n      if (this.data.onTagUpdate && _.isEmpty(value) === false) {\n        this.data.onTagUpdate(this.data.tag._id, value);\n        this.state.set(\"oldValue\", inputValue);\n      }\n    }\n  };\n});\n\nTemplate.tagEditable.helpers({\n  AutosuggestInput() {\n    const instance = Template.instance();\n\n    return createAutosuggestInput(instance, {\n      i18nPlaceholderKey: \"tags.updateTag\",\n      i18nPlaceholderValue: \"Update Tag\",\n      onUpdateCallback: instance.updateTag\n    });\n  },\n\n  className() {\n    const instance = Template.instance();\n\n    return classnames(instance.data.className, {\n      selected: instance.data.classes\n    });\n  },\n\n  handleTagSelect() {\n    const instance = Template.instance();\n    return () => {\n      // Pass the tag back up to the parent component\n      if (instance.data.onTagSelect) {\n        instance.data.onTagSelect(instance.data.tag);\n      }\n    };\n  },\n  handleTagRemove() {\n    const instance = Template.instance();\n    return () => {\n      // Pass the tag back up to the parent component\n      if (instance.data.onTagRemove) {\n        instance.data.onTagRemove(instance.data.tag);\n      }\n    };\n  }\n});\n\nTemplate.tagBlank.onCreated(function () {\n  this.state = new ReactiveDict();\n  this.state.setDefault({\n    inputValue: \"\",\n    suggestions: []\n  });\n\n  this.submitInput = () => {\n    const value = this.state.get(\"inputValue\").trim();\n\n    if (this.data.onTagCreate && _.isEmpty(value) === false) {\n      this.data.onTagCreate(value);\n    }\n\n    this.state.set(\"inputValue\", \"\");\n  };\n});\n\nTemplate.tagBlank.helpers({\n  AutosuggestInput() {\n    const instance = Template.instance();\n\n    return createAutosuggestInput(instance, {\n      i18nPlaceholderKey: \"tags.addTag\",\n      i18nPlaceholderValue: \"Add Tag\",\n      onUpdateCallback: instance.submitInput\n    });\n  }\n});\n\nTemplate.tagLink.events({\n  \"click a\"(event, templateInstance) {\n    event.preventDefault();\n    const slug = templateInstance.data.tag && templateInstance.data.tag.slug;\n    Router.go(\"tag\", { slug });\n  }\n});\n","import Sortable from \"sortablejs\";\n\nTemplate.tagList.onCreated(function () {\n  this.moveItem = (array, fromIndex, toIndex) => {\n    array.splice(toIndex, 0, array.splice(fromIndex, 1)[0]);\n\n    return array;\n  };\n});\n\nTemplate.tagList.onRendered(() => {\n  const instance = Template.instance();\n  const list = instance.$(\".rui.tags\")[0];\n\n  instance._sortable = Sortable.create(list, {\n    group: \"tags\",\n    draggable: \".rui.item.draggable\",\n    // filter: \".rui.tag.edit.create\",\n    onSort(event) {\n      const tagIds = instance.data.tags.map(item => {\n        if (item) {\n          return item._id;\n        }\n      });\n\n      const newTagsOrder = instance.moveItem(tagIds, event.oldIndex, event.newIndex);\n\n      if (newTagsOrder) {\n        if (instance.data.onTagSort) {\n          instance.data.onTagSort(newTagsOrder, instance.data.parentTag);\n        }\n      }\n    },\n\n    // On add from another list\n    onAdd(event) {\n      const toListId = event.to.dataset.id;\n      const movedTagId = event.item.dataset.id;\n      const tagIds = instance.data.tags.map(item => {\n        if (item) {\n          return item._id;\n        }\n      });\n\n      if (instance.data.onTagDragAdd) {\n        instance.data.onTagDragAdd(movedTagId, toListId, event.newIndex, tagIds);\n      }\n    },\n\n    // Tag removed from list becuase it was dragged to a different list\n    onRemove(event) {\n      const movedTagId = event.item.dataset.id;\n\n      if (instance.data.onTagRemove) {\n        const foundTag = _.find(instance.data.tags, (tag) => {\n          return tag._id === movedTagId;\n        });\n\n        instance.data.onTagRemove(foundTag, instance.data.parentTag);\n      }\n    }\n  });\n});\n\nTemplate.tagList.helpers({\n  isEditing() {\n    return Template.instance().data.isEditing;\n  },\n\n  tagProps(tag) {\n    const instance = Template.instance();\n    let isSelected = false;\n    if (instance.data.selectedTag && tag) {\n      isSelected = instance.data.selectedTag._id === tag._id;\n    }\n\n    return {\n      tag,\n      isEditing: instance.data.isEditing,\n      selectable: instance.data.selectable,\n      controls: instance.data.controls,\n      isSelected,\n      onTagSelect: instance.data.onTagSelect,\n      onTagRemove(tagToRemove) {\n        // Pass the tag back up to the parent component for removal\n        // -- include the parent tag\n        if (instance.data.onTagCreate) {\n          instance.data.onTagRemove(tagToRemove, instance.data.parentTag);\n        }\n      },\n      onTagUpdate(tagId, tagName) {\n        // Pass the tagId and tagName back up to the parent component for updating\n        if (instance.data.onTagUpdate) {\n          instance.data.onTagUpdate(tagId, tagName);\n        }\n      }\n    };\n  },\n\n  /**\n   * Arguments (Props) to pass into the blank tag for creating new tags\n   * @return {Object} An object containing props\n   */\n  tagBlankProps() {\n    const instance = Template.instance();\n    return {\n      blank: true,\n      onTagCreate(tagName) {\n        if (instance.data.onTagCreate) {\n          instance.data.onTagCreate(tagName, instance.data.parentTag);\n        }\n      }\n    };\n  }\n});\n","import React, { Component, PropTypes } from \"react\";\nimport { PropTypes as ReactionPropTypes } from \"/lib/api\";\nimport { TagItem } from \"./\";\nimport classnames from \"classnames\";\n\nclass Tags extends Component {\n  displayName = \"Tag List (Tags)\";\n\n  handleNewTagSave = (event, tag) => {\n    event.preventDefault();\n    if (this.props.onNewTagSave) {\n      this.props.onNewTagSave(tag, this.props.parentTag);\n    }\n  };\n\n  handleNewTagUpdate = (event, tag) => {\n    if (this.props.onNewTagUpdate) {\n      this.props.onNewTagUpdate(tag, this.props.parentTag);\n    }\n  }\n\n  handleTagSave = (event, tag) => {\n    if (this.props.onTagSave) {\n      this.props.onTagSave(tag, this.props.parentTag);\n    }\n  };\n\n  handleTagRemove = (tag) => {\n    if (this.props.onTagRemove) {\n      this.props.onTagRemove(tag, this.props.parentTag);\n    }\n  };\n\n  /**\n   * Handle tag mouse out events and pass them up the component chain\n   * @param  {Event} event Event object\n   * @param  {Tag} tag Reaction.Schemas.Tag - a tag object\n   * @return {void} no return value\n   */\n  handleTagMouseOut = (event, tag) => {\n    if (this.props.onTagMouseOut) {\n      this.props.onTagMouseOut(event, tag, this.props.parentTag);\n    }\n  };\n\n  /**\n   * Handle tag mouse over events and pass them up the component chain\n   * @param  {Event} event Event object\n   * @param  {Tag} tag Reaction.Schemas.Tag - a tag object\n   * @return {void} no return value\n   */\n  handleTagMouseOver = (event, tag) => {\n    if (this.props.onTagMouseOver) {\n      this.props.onTagMouseOver(event, tag, this.props.parentTag);\n    }\n  };\n\n\n  handleTagUpdate = (event, tag) => {\n    if (this.props.onTagUpdate) {\n      this.props.onTagUpdate(tag, this.props.parentTag);\n    }\n  };\n\n  renderTags() {\n    if (_.isArray(this.props.tags)) {\n      const tags = this.props.tags.map((tag, index) => {\n        return (\n          <TagItem\n            {...this.props.tagProps}\n            data-id={tag._id}\n            editable={this.props.editable}\n            index={index}\n            key={index}\n            onClearSuggestions={this.props.onClearSuggestions}\n            onGetSuggestions={this.props.onGetSuggestions}\n            onMove={this.props.onMoveTag}\n            onTagInputBlur={this.handleTagSave}\n            onTagMouseOut={this.handleTagMouseOut}\n            onTagMouseOver={this.handleTagMouseOver}\n            onTagRemove={this.handleTagRemove}\n            onTagSave={this.handleTagSave}\n            onTagUpdate={this.handleTagUpdate}\n            suggestions={this.props.suggestions}\n            tag={tag}\n          />\n        );\n      });\n\n      // Render an blank tag for creating new tags\n      if (this.props.editable && this.props.enableNewTagForm) {\n        tags.push(\n          <TagItem\n            {...this.props.tagProps}\n            blank={true}\n            key=\"newTagForm\"\n            onClearSuggestions={this.props.onClearSuggestions}\n            onGetSuggestions={this.props.onGetSuggestions}\n            onTagInputBlur={this.handleNewTagSave}\n            onTagSave={this.handleNewTagSave}\n            onTagUpdate={this.handleNewTagUpdate}\n            suggestions={this.props.suggestions}\n            tag={this.props.newTag}\n          />\n        );\n      }\n\n      return tags;\n    }\n\n    return null;\n  }\n\n  render() {\n    const classes = classnames({\n      rui: true,\n      tags: true,\n      edit: this.props.editable\n    });\n\n    return (\n      <div\n        className={classes}\n        data-id={this.props.parentTag._id}\n        ref=\"tags\"\n      >\n        {this.renderTags()}\n      </div>\n    );\n  }\n}\n\n// Default Props\nTags.defaultProps = {\n  parentTag: {}\n};\n\n// Prop Types\nTags.propTypes = {\n  editable: PropTypes.bool,\n  enableNewTagForm: PropTypes.bool,\n  newTag: PropTypes.object,\n  onClearSuggestions: PropTypes.func,\n  onGetSuggestions: PropTypes.func,\n  onMoveTag: PropTypes.func,\n  onNewTagSave: PropTypes.func,\n  onNewTagUpdate: PropTypes.func,\n  onTagMouseOut: PropTypes.func,\n  onTagMouseOver: PropTypes.func,\n  onTagRemove: PropTypes.func,\n  onTagSave: PropTypes.func,\n  onTagSort: PropTypes.func,\n  onTagUpdate: PropTypes.func,\n  parentTag: ReactionPropTypes.Tag,\n  showBookmark: PropTypes.bool,\n  suggestions: PropTypes.arrayOf(PropTypes.object),\n  tagProps: PropTypes.object,\n  tags: ReactionPropTypes.arrayOfTags\n};\n\n// Export\nexport default Tags;\n","import React, { Component, PropTypes } from \"react\";\nimport classnames from \"classnames\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { Translation } from \"../translation\";\nimport { i18next } from \"/client/api\";\n\nclass TextField extends Component {\n  /**\n   * Getter: value\n   * @return {String} value for text input\n   */\n  get value() {\n    return this.props.value || \"\";\n  }\n\n  /**\n   * onValueChange\n   * @summary set the state when the value of the input is changed\n   * @param  {Event} event Event object\n   * @return {void}\n   */\n  onChange = (event) => {\n    if (this.props.onChange) {\n      this.props.onChange(event, event.target.value, this.props.name);\n    }\n  }\n\n  /**\n   * onBlur\n   * @summary set the state when the value of the input is changed\n   * @param  {Event} event Event object\n   * @return {void}\n   */\n  onBlur = (event) => {\n    if (this.props.onBlur) {\n      this.props.onBlur(event, event.target.value, this.props.name);\n    }\n  }\n\n  /**\n   * onKeyDown\n   * @summary set the state when the value of the input is changed\n   * @param  {Event} event Event object\n   * @return {void}\n   */\n  onKeyDown = (event) => {\n    if (this.props.onKeyDown) {\n      this.props.onKeyDown(event, this.props.name);\n    }\n\n    if (this.props.onReturnKeyDown && event.keyCode === 13) {\n      this.props.onReturnKeyDown(event, event.target.value, this.props.name);\n    }\n  }\n\n  /**\n   * Render a multiline input (textarea)\n   * @return {JSX} jsx\n   */\n  renderMultilineInput() {\n    const placeholder = i18next.t(this.props.i18nKeyPlaceholder, {\n      defaultValue: this.props.placeholder\n    });\n\n    return (\n      <TextareaAutosize\n        className=\"{this.props.name}-edit-input\"\n        onBlur={this.onBlur}\n        onChange={this.onChange}\n        placeholder={placeholder}\n        ref=\"input\"\n        value={this.value}\n        style={this.props.style}\n        disabled={this.props.disabled}\n      />\n    );\n  }\n\n  /**\n   * Render a singleline input\n   * @return {JSX} jsx\n   */\n  renderSingleLineInput() {\n    const inputClassName = classnames({\n      [`${this.props.name || \"text\"}-edit-input`]: true\n    }, this.props.className);\n\n    const placeholder = i18next.t(this.props.i18nKeyPlaceholder, {\n      defaultValue: this.props.placeholder\n    });\n\n    return (\n      <input\n        className={inputClassName}\n        name={this.props.name}\n        onBlur={this.onBlur}\n        onChange={this.onChange}\n        onKeyDown={this.onKeyDown}\n        placeholder={placeholder}\n        ref=\"input\"\n        type={this.props.type || \"text\"}\n        value={this.value}\n        style={this.props.style}\n        disabled={this.props.disabled}\n      />\n    );\n  }\n\n  /**\n   * Render either a multiline (textarea) or singleline (input)\n   * @return {JSX} jsx template\n   */\n  renderField() {\n    if (this.props.multiline === true) {\n      return this.renderMultilineInput();\n    }\n\n    return this.renderSingleLineInput();\n  }\n\n  renderLabel() {\n    if (this.props.label) {\n      return (\n        <label>\n          <Translation defaultValue={this.props.label} i18nKey={this.props.i18nKeyLabel} />\n        </label>\n      );\n    }\n\n    return null;\n  }\n\n  renderHelpText() {\n    if (this.props.helpText) {\n      return (\n        <span className=\"help-block\">\n          <Translation defaultValue={this.props.helpText} i18nKey={this.props.i18nKeyHelpText} />\n        </span>\n      );\n    }\n\n    return null;\n  }\n\n  /**\n   * Render Component\n   * @return {JSX} component\n   */\n  render() {\n    const classes = classnames({\n      // Base\n      \"rui\": true,\n      \"textfield\": true,\n      \"form-group\": true,\n\n      // Alignment\n      \"center\": this.props.align === \"center\",\n      \"left\": this.props.align === \"left\",\n      \"right\": this.props.align === \"right\"\n    });\n\n    return (\n      <div className={classes}>\n        {this.renderLabel()}\n        {this.renderField()}\n        {this.renderHelpText()}\n        <span className=\"product-detail-message\" id=\"{{field}}-message\" />\n      </div>\n    );\n  }\n}\n\nTextField.defaultProps = {\n\n};\n\nTextField.propTypes = {\n  align: PropTypes.oneOf([\"left\", \"center\", \"right\", \"justify\"]),\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  helpText: PropTypes.string,\n  i18nKeyHelpText: PropTypes.string,\n  i18nKeyLabel: PropTypes.string,\n  i18nKeyPlaceholder: PropTypes.string,\n  label: PropTypes.string,\n  multiline: PropTypes.bool,\n  name: PropTypes.string,\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onReturnKeyDown: PropTypes.func,\n  placeholder: PropTypes.string,\n  style: PropTypes.object,\n  type: PropTypes.string,\n  value: PropTypes.any\n};\n\nexport default TextField;\n","/**\n * uploadHandler method\n */\n\nfunction uploadHandler(event, instance) {\n  const files = [];\n\n  FS.Utility.eachFile(event, (file) => {\n    files.push(new FS.File(file));\n  });\n\n  if (instance.data.onUpload) {\n    instance.data.onUpload(files, event);\n  }\n\n  return files;\n}\n\nTemplate.upload.helpers({\n  uploadButtonProps() {\n    const instance = Template.instance();\n    return {\n      className: \"btn-block\",\n      label: instance.data.label || \"Drop file to upload\",\n      i18nLabel: instance.data.i18nLabel || \"productDetail.dropFiles\",\n      onClick() {\n        instance.$(\"input[name=files]\").click();\n      }\n    };\n  }\n});\n\nTemplate.upload.events({\n  \"click #btn-upload\": function () {\n    return $(\"#files\").click();\n  },\n  \"change input[name=files]\": uploadHandler,\n  \"dropped .js-dropzone\": uploadHandler\n});\n","import React, { Component, PropTypes } from \"react\";\nimport classnames from \"classnames\";\nimport { Translation } from \"../translation\";\n\nclass Alert extends Component {\n\n  componentDidMount() {\n    if (this.props.alert) {\n      const {\n        options\n      } = this.props.alert;\n\n      if (this.props.onAlertSeen) {\n        this.props.onAlertSeen(this.props.alert);\n      }\n\n      if (this.props.alert && this.props.alert.options && this.props.alert.options.autoHide) {\n        setTimeout(() => {\n          if (this.props.onAlertRemove) {\n            this.props.onAlertRemove(this.props.alert);\n          }\n        }, options.autoHide);\n      }\n    }\n  }\n\n  render() {\n    // If we have an alert object, most likely form the global alert system,\n    // then display a standard alert\n    if (this.props.alert) {\n      const {\n        message,\n        mode,\n        options\n      } = this.props.alert;\n\n      const alertClassName = classnames({\n        alert: true,\n        [`alert-${mode || \"info\"}`]: true\n      });\n\n      return (\n        <div className={alertClassName}>\n          <Translation defaultValue={message} i18nKey={options.i18nKey} />\n          {this.props.children}\n        </div>\n      );\n    }\n\n    // Otherwise, it's up to the user to provide the content via props\n\n    const alertClassName = classnames({\n      alert: true,\n      [`alert-${this.props.mode || \"info\"}`]: true\n    });\n\n    return (\n      <div className={alertClassName}>\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nAlert.propTypes = {\n  alert: PropTypes.object,\n  children: PropTypes.node,\n  mode: PropTypes.oneOf([\"info\", \"warning\", \"danger\", \"success\"]),\n  onAlertRemove: PropTypes.func,\n  onAlertSeen: PropTypes.func\n};\n\nexport default Alert;\n","import React, { Component, PropTypes } from \"react\";\nimport Alert from \"./alert\";\n\nclass Alerts extends Component {\n  renderAlerts() {\n    if (Array.isArray(this.props.alerts)) {\n      return this.props.alerts.map((alert, index) => {\n        return (\n          <Alert\n            alert={alert}\n            key={index}\n            onAlertRemove={this.props.onAlertRemove}\n            onAlertSeen={this.props.onAlertSeen}\n          />\n        );\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"alert-container\">\n        {this.renderAlerts()}\n      </div>\n    );\n  }\n}\n\nAlerts.propTypes = {\n  alerts: PropTypes.arrayOf(PropTypes.object),\n  onAlertRemove: PropTypes.func,\n  onAlertSeen: PropTypes.func\n};\n\nexport default Alerts;\n","export { default as Alerts } from \"./alerts\";\nexport { default as Alert } from \"./alert\";\n","import React, { Component, PropTypes } from \"react\";\nimport classnames from \"classnames\";\n\nclass ButtonGroup extends Component {\n  render() {\n    const baseClassName = classnames({\n      \"rui\": true,\n      \"btn-group\": true\n    });\n\n    return (\n      <div className={baseClassName}>\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nButtonGroup.propTypes = {\n  children: PropTypes.node\n};\n\nexport default ButtonGroup;\n","import React, { Component, PropTypes } from \"react\";\nimport classnames from \"classnames\";\n\nclass ButtonToolbar extends Component {\n  render() {\n    const baseClassName = classnames({\n      \"rui\": true,\n      \"btn-toolbar\": true\n    });\n\n    return (\n      <div className={baseClassName}>\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nButtonToolbar.propTypes = {\n  children: PropTypes.node\n};\n\nexport default ButtonToolbar;\n","export { default as ButtonGroup } from \"./buttonGroup\";\nexport { default as ButtonToolbar } from \"./buttonToolbar\";\n","import React, { Component, PropTypes } from \"react\";\nimport { Translation } from \"/imports/plugins/core/ui/client/components\";\n\nclass Checkbox extends Component {\n  handleChange = (event) => {\n    if (this.props.onChange) {\n      const isInputChecked = !this.props.checked;\n      this.props.onChange(event, isInputChecked, this.props.name);\n    }\n  }\n\n  render() {\n    return (\n      <label>\n        <input\n          checked={this.props.checked}\n          onChange={this.handleChange}\n          ref=\"checkbox\"\n          type=\"checkbox\"\n        />\n        <Translation defaultValue={this.props.label} i18nKey={this.props.i18nKeyLabel} />\n      </label>\n    );\n  }\n}\n\nCheckbox.defaultProps = {\n  checked: false\n};\n\nCheckbox.propTypes = {\n  checked: PropTypes.bool,\n  i18nKeyLabel: PropTypes.string,\n  label: PropTypes.string,\n  name: PropTypes.string,\n  onChange: PropTypes.func\n};\n\nexport default Checkbox;\n","export { default as Checkbox } from \"./checkbox\";\n","import React, { Component, PropTypes } from \"react\";\nimport classnames from \"classnames\";\nimport { Translation } from \"../\";\n\nclass Divider extends Component {\n  renderLabel() {\n    return (\n      <Translation defaultValue={this.props.label} />\n    );\n  }\n\n  render() {\n    const { label, i18nKeyLabel } = this.props;\n    const classes = classnames({\n      rui: true,\n      separator: true,\n      divider: true,\n      labeled: label || i18nKeyLabel\n    });\n\n    if (label) {\n      return (\n        <div className={classes}>\n          <hr />\n          <span className=\"label\">\n            <Translation defaultValue={label} i18nKey={i18nKeyLabel}/>\n          </span>\n          <hr />\n        </div>\n      );\n    }\n\n    return (\n      <div className={classes}>\n        <hr />\n      </div>\n    );\n  }\n}\n\nDivider.propTypes = {\n  i18nKeyLabel: PropTypes.string,\n  label: PropTypes.string\n};\n\nexport default Divider;\n","import React from \"react\";\n\nexport default function VerticalDivider() {\n  return (\n    <div\n      style={{\n        height: \"20px\",\n        width: 1,\n        backgroundColor: \"#E6E6E6\",\n        margin: \"0 10px\"\n      }}\n    />\n  );\n}\n","import React, { Component, PropTypes } from \"react\";\nimport { map, update, set, at, isEqual } from \"lodash\";\nimport classnames from \"classnames\";\nimport { toCamelCase } from \"/lib/api\";\nimport { Switch, Button, TextField, Select, FormActions } from \"../\";\n\nclass Form extends Component {\n  static defaultProps = {\n    autoSave: false\n  }\n\n  static propTypes = {\n    autoSave: PropTypes.bool,\n    doc: PropTypes.object,\n    docPath: PropTypes.string,\n    fields: PropTypes.object,\n    hideFields: PropTypes.arrayOf(PropTypes.string),\n    name: PropTypes.string,\n    onSubmit: PropTypes.func,\n    schema: PropTypes.object\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      doc: props.doc,\n      schema: this.validationSchema(),\n      isValid: undefined\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (isEqual(nextProps.doc, this.props.doc) === false) {\n      this.setState({\n        doc: nextProps.doc,\n        schema: this.validationSchema()\n      });\n    }\n  }\n\n\n  validationSchema() {\n    const { docPath } = this.props;\n\n    if (docPath) {\n      const objectKeys = this.objectKeys[docPath + \".\"];\n      if (Array.isArray(objectKeys)) {\n        // Use the objectKeys from parent fieldset to generate\n        // actual form fields\n        const fieldNames = objectKeys.map((fieldName) => {\n          return `${docPath}.${fieldName}`;\n        });\n\n        return this.props.schema.pick(fieldNames).newContext();\n      }\n    }\n\n    return this.props.schema.namedContext();\n  }\n\n  get objectKeys() {\n    return this.props.schema._objectKeys;\n  }\n\n  get schema() {\n    return this.props.schema._schema;\n  }\n\n  valueForField(fieldName) {\n    const picked = at(this.state.doc, fieldName);\n\n    if (Array.isArray(picked) && picked.length) {\n      return picked[0];\n    }\n\n    return undefined;\n  }\n\n  validate() {\n    const { docPath } = this.props;\n\n    // Create a smaller document in order to validate without extra fields\n    const docToValidate = set(\n      {},\n      docPath,\n      at(this.state.doc, this.props.docPath)[0]\n    );\n\n    // Clean any fields not in schame to avoid needless validation errors\n    const cleanedObject = this.state.schema._simpleSchema.clean(docToValidate);\n\n    // Finally validate the document\n    this.setState({\n      isValid: this.state.schema.validate(cleanedObject)\n    });\n  }\n\n  isFieldHidden(fieldName) {\n    if (Array.isArray(this.props.hideFields) && this.props.hideFields.indexOf(fieldName) >= 0) {\n      return true;\n    }\n\n    return false;\n  }\n\n  handleChange = (event, value, name) => {\n    const newdoc = update(this.state.doc, name, () => {\n      return value;\n    });\n\n    this.setState({\n      doc: newdoc\n    }, () => {\n      this.validate();\n    });\n\n    if (this.props.autoSave === true) {\n      this.handleSubmit(event);\n    }\n  }\n\n  handleSelectChange = (value, name) => {\n    this.handleChange(new Event(\"onSelect\"), value, name);\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    this.validate();\n\n    if (this.props.onSubmit) {\n      this.props.onSubmit(event, {\n        doc: this.state.doc,\n        isValid: this.state.isValid\n      }, this.props.name);\n    }\n  }\n\n  renderFormField(field) {\n    const sharedProps = {\n      i18nKeyLabel: `settings.${toCamelCase(field.name)}`,\n      key: field.name,\n      label: field.label,\n      name: field.name\n    };\n\n    let fieldElement;\n    let helpText;\n\n    switch (field.type) {\n      case \"boolean\":\n        fieldElement = (\n          <Switch\n            {...sharedProps}\n            onChange={this.handleChange}\n            checked={this.valueForField(field.name)}\n          />\n        );\n        break;\n      case \"string\":\n        fieldElement = (\n          <TextField\n            {...sharedProps}\n            onChange={this.handleChange}\n            value={this.valueForField(field.name)}\n          />\n        );\n        break;\n      case \"select\":\n        fieldElement = (\n          <Select\n            {...sharedProps}\n            onChange={this.handleSelectChange}\n            options={field.options}\n            value={this.valueForField(field.name)}\n          />\n        );\n        break;\n      default:\n        return null;\n    }\n\n    let fieldHasError = false;\n\n    if (this.state.isValid === false) {\n      this.state.schema._invalidKeys\n        .filter((v) => v.name === field.name)\n        .map((validationError) => {\n          const message = this.state.schema.keyErrorMessage(validationError.name);\n          fieldHasError = true;\n\n          helpText = (\n            <div className=\"help-block\">\n              {message}\n            </div>\n          );\n        });\n    }\n\n    const formGroupClassName = classnames({\n      \"rui\": true,\n      \"form-group\": true,\n      \"has-error\": fieldHasError\n    });\n\n    return (\n      <div key={`${sharedProps.key}-group`} className={formGroupClassName}>\n        {fieldElement}\n        {helpText}\n      </div>\n    );\n  }\n\n  renderField(field, additionalFieldProps) {\n    const { fieldName } = field;\n\n    if (this.isFieldHidden(fieldName) === false) {\n      const fieldSchema = this.schema[fieldName];\n      const fieldProps = {\n        ...fieldSchema,\n        name: fieldName,\n        type: typeof fieldSchema.type(),\n        ...additionalFieldProps\n      };\n\n      return this.renderFormField(fieldProps);\n    }\n\n    return null;\n  }\n\n  renderWithSchema() {\n    const { docPath } = this.props;\n\n    if (this.props.schema) {\n      // Render form with a specific docPath\n      if (docPath) {\n        return map(this.schema, (field, key) => { // eslint-disable-line consistent-return\n          if (key.endsWith(docPath)) {\n            const objectKeys = this.objectKeys[docPath + \".\"];\n            if (Array.isArray(objectKeys)) {\n              // Use the objectKeys from parent fieldset to generate\n              // actual form fields\n              return objectKeys.map((fieldName) => {\n                const fullFieldName = docPath ? `${docPath}.${fieldName}` : fieldName;\n                return this.renderField({ fieldName: fullFieldName });\n              });\n            }\n\n            return this.renderField({ fieldName: key });\n          }\n        });\n      }\n\n      // Render form by only using desired fields from schema\n      if (this.props.fields) {\n        return map(this.props.fields, (fieldData, key) => { // eslint-disable-line consistent-return\n          const fieldSchema = this.schema[key];\n          if (fieldSchema) {\n            return this.renderField({ fieldName: key }, fieldData);\n          }\n        });\n      }\n\n      // Render all fields if none of the options are set above\n      return map(this.schema, (field, key) => { // eslint-disable-line consistent-return\n        return this.renderField({ fieldName: key });\n      });\n    }\n\n    return null;\n  }\n\n  renderFormActions() {\n    if (this.props.autoSave === false) {\n      return (\n        <FormActions>\n          <Button\n            label={\"Save Changes\"}\n            bezelStyle={\"solid\"}\n            primary={true}\n            type=\"submit\"\n          />\n        </FormActions>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        {this.renderWithSchema()}\n        {this.renderFormActions()}\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component, PropTypes } from \"react\";\n\nclass FormActions extends Component {\n  static propTypes = {\n    children: PropTypes.node\n  }\n\n  render() {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"flex-end\"\n        }}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nexport default FormActions;\n","export { default as Form } from \"./form\";\nexport { default as FormActions } from \"./formActions\";\n","import React, { Component, PropTypes } from \"react\";\nimport classnames from \"classnames/dedupe\";\n\nclass Icon extends Component {\n  render() {\n    const { icon } = this.props;\n    let classes;\n\n    if (icon) {\n      if (icon.indexOf(\"icon-\") === 0 || icon.indexOf(\"fa\") >= 0) {\n        classes = icon;\n      } else {\n        classes = classnames({\n          fa: true,\n          [`fa-${icon}`]: true\n        });\n      }\n    }\n\n    classes = classnames({\n      \"rui\": true,\n      \"font-icon\": true\n    }, classes, this.props.className);\n\n    return (\n      <i style={this.props.style} className={classes} />\n    );\n  }\n}\n\nIcon.propTypes = {\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  icon: PropTypes.string.isRequired,\n  style: PropTypes.object\n};\n\nexport default Icon;\n","export { default as Icon } from \"./icon\";\n","import React from \"react\";\n\nclass Item extends React.Component {\n  render() {\n    return (\n      <div className=\"rui item\">\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nItem.displayName = \"Item\";\n\nItem.propTypes = {\n  children: React.PropTypes.node\n};\n\nexport default Item;\n","import React from \"react\";\n\nclass Items extends React.Component {\n  render() {\n    return (\n      <div className=\"rui items\">\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nItems.displayName = \"Items\";\n\nItems.propTypes = {\n  children: React.PropTypes.node\n};\n\nexport default Items;\n","export { default as List } from \"./list\";\nexport { default as ListItem } from \"./listItem\";\n","import React, { Component, PropTypes } from \"react\";\nimport classnames from \"classnames\";\n\nclass List extends Component {\n  static propTypes = {\n    children: PropTypes.node,\n    isAdmin: PropTypes.bool\n  }\n\n  render() {\n    const listClassName = classnames({\n      \"rui\": true,\n      \"admin\": this.props.isAdmin,\n      \"list-group\": true\n    });\n\n    return (\n      <div className={listClassName}>\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nexport default List;\n","import React, { Component, PropTypes } from \"react\";\nimport classnames from \"classnames\";\nimport { Icon, Switch, Translation } from \"/imports/plugins/core/ui/client/components\";\n\nclass ListItem extends Component {\n  static propTypes = {\n    actionType: PropTypes.oneOf([\"arrow\", \"switch\"]),\n    children: PropTypes.node,\n    i18nKeyLabel: PropTypes.string,\n    icon: PropTypes.string,\n    isAdmin: PropTypes.bool,\n    label: PropTypes.string,\n    onClick: PropTypes.func,\n    onSwitchChange: PropTypes.func,\n    switchName: PropTypes.string,\n    switchOn: PropTypes.bool,\n    value: PropTypes.any\n  }\n\n  handleClick = (event) => {\n    if (this.props.actionType === \"switch\") {\n      const isChecked = typeof this.props.switchOn === \"boolean\" ? !this.props.switchOn : true;\n      this.handleSwitchChange(event, isChecked, this.props.switchName);\n    } else if (typeof this.props.onClick === \"function\") {\n      this.props.onClick(event, this.data);\n    }\n  }\n\n  handleSwitchChange = (event, isChecked, name) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (typeof this.props.onSwitchChange === \"function\") {\n      this.props.onSwitchChange(event, isChecked, name);\n    }\n  }\n\n  get data() {\n    return this.props.value;\n  }\n\n  renderIcon() {\n    const iconClassName = classnames({\n      \"rui\": true,\n      \"admin\": this.props.isAdmin,\n      \"list-item-icon\": true\n    });\n\n    if (this.props.icon) {\n      return (\n        <div className={iconClassName}>\n          <Icon icon={this.data.icon} />\n        </div>\n      );\n    }\n\n    return null;\n  }\n\n  renderAction() {\n    const actionClassName = classnames({\n      \"rui\": true,\n      \"admin\": this.props.isAdmin,\n      \"list-item-action\": true\n    });\n\n    if (this.props.actionType === \"switch\") {\n      return (\n        <div className={actionClassName}>\n          <Switch\n            checked={this.props.switchOn}\n            name={this.props.switchName}\n            onChange={this.handleSwitchChange}\n          />\n        </div>\n      );\n    }\n\n    if (this.props.actionType) {\n      return (\n        <div className={actionClassName}>\n          <Icon icon=\"fa fa-angle-right\" />\n        </div>\n      );\n    }\n\n    return null;\n  }\n\n  renderContent() {\n    let content;\n    const contentClassName = classnames({\n      \"rui\": true,\n      \"admin\": this.props.isAdmin,\n      \"list-item-content\": true\n    });\n\n    if (this.props.label) {\n      content = (\n        <Translation\n          defaultValue={this.props.label}\n          i18nKey={this.props.i18nKeyLabel}\n        />\n      );\n    } else {\n      content = this.props.children;\n    }\n\n    return (\n      <div className={contentClassName}>\n        {content}\n      </div>\n    );\n  }\n\n  renderSubItems() {\n    if (typeof this.props.label !== \"undefined\" && this.props.children) {\n      const listItemClassName = classnames({\n        \"rui\": true,\n        \"admin\": this.props.isAdmin,\n        \"list-group-item-sub-item\": true\n      });\n\n      return (\n        <div className={listItemClassName}>\n          {this.props.children}\n        </div>\n      );\n    }\n\n    return null;\n  }\n\n  render() {\n    const listItemClassName = classnames({\n      \"rui\": true,\n      \"admin\": this.props.isAdmin,\n      \"list-group-item\": true\n    });\n\n    return (\n      <div className={listItemClassName} onClick={this.handleClick}>\n        {this.renderIcon()}\n        {this.renderContent()}\n        {this.renderAction()}\n        {this.renderSubItems()}\n      </div>\n    );\n  }\n}\n\nexport default ListItem;\n","import React, { Component } from \"react\";\nimport CircularProgress from \"../progress/circularProgress\";\n\nclass Loading extends Component {\n  render() {\n    return (\n      <div className=\"spinner-container spinner-container-lg\">\n        <CircularProgress indeterminate={true} />\n      </div>\n    );\n  }\n}\n\nexport default Loading;\n","export { default as MediaGallery } from \"./mediaGallery\";\nexport { default as MediaItem } from \"./media\";\n","import React, { Component, PropTypes } from \"react\";\nimport { IconButton } from \"../\";\nimport { SortableItem } from \"../../containers\";\n\n\nclass MediaItem extends Component {\n\n  handleMouseEnter = (event) => {\n    if (this.props.onMouseEnter) {\n      this.props.onMouseEnter(event, this.props.source);\n    }\n  }\n\n  handleMouseLeave = (event) => {\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave(event, this.props.source);\n    }\n  }\n\n  handleRemoveMedia = (event) => {\n    event.stopPropagation();\n\n    if (this.props.onRemoveMedia) {\n      this.props.onRemoveMedia(this.props.source);\n    }\n  }\n\n  renderRevision() {\n    if (this.props.revision) {\n      if (this.props.revision.changeType === \"remove\") {\n        return (\n          <IconButton icon=\"fa fa-eraser\" />\n        );\n      }\n      return (\n        <IconButton icon=\"fa fa-pencil-square-o\" />\n      );\n    }\n    return undefined;\n  }\n\n  renderControls() {\n    if (this.props.editable) {\n      // If we have a pending remove, don't show the remove button\n      if (!this.props.revision || this.props.revision.changeType !== \"remove\") {\n        return (\n          <div className=\"rui badge-container\">\n            <IconButton\n              icon=\"fa fa-times\"\n              onClick={this.handleRemoveMedia}\n            />\n            {this.renderRevision()}\n          </div>\n        );\n      }\n      return (\n          <div className=\"rui badge-container\">\n            {this.renderRevision()}\n          </div>\n      );\n    }\n    return null;\n  }\n\n  get defaultSource() {\n    return this.props.defaultSource || \"/resources/placeholder.gif\";\n  }\n\n  get source() {\n    if (typeof this.props.source === \"object\" && this.props.source) {\n      return this.props.source.url() || this.defaultSource;\n    }\n\n    return this.props.source || this.defaultSource;\n  }\n\n  renderImage() {\n    const image = (\n      <img\n        alt=\"\"\n        className=\"img-responsive\"\n        src={this.source}\n      />\n    );\n\n    return image;\n  }\n\n  render() {\n    const mediaElement = (\n      <div\n        className=\"gallery-image\"\n        onMouseEnter={this.handleMouseEnter}\n        onMouseLeave={this.handleMouseLeave}\n      >\n        {this.renderImage()}\n        {this.renderControls()}\n      </div>\n    );\n\n    if (this.props.editable) {\n      return this.props.connectDragSource(\n        this.props.connectDropTarget(\n          mediaElement\n        )\n      );\n    }\n\n    return mediaElement;\n  }\n}\n\nMediaItem.propTypes = {\n  connectDragSource: PropTypes.func,\n  connectDropTarget: PropTypes.func,\n  defaultSource: PropTypes.string,\n  editable: PropTypes.bool,\n  isFeatured: PropTypes.bool,\n  mediaHeight: PropTypes.number,\n  mediaWidth: PropTypes.number,\n  metadata: PropTypes.object,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  onRemoveMedia: PropTypes.func,\n  revision: PropTypes.object,\n  source: PropTypes.oneOfType([PropTypes.string, PropTypes.object])\n};\n\nexport default SortableItem(\"media\", MediaItem);\n","import React, { Component, PropTypes } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport Measure from \"react-measure\";\nimport MediaItem from \"./media\";\n\nclass MediaGallery extends Component {\n  state = {\n    dimensions: {\n      width: -1,\n      height: -1\n    }\n  };\n\n  get hasMedia() {\n    return Array.isArray(this.props.media) && this.props.media.length > 0;\n  }\n\n  get allowFeaturedMediaHover() {\n    if (this.props.allowFeaturedMediaHover && this.props.featuredMedia) {\n      return true;\n    }\n\n    return false;\n  }\n\n  get featuredMedia() {\n    return this.props.featuredMedia || this.props.media[0];\n  }\n\n  handleDropClick = () => {\n    this.refs.dropzone.open();\n  }\n\n  renderAddItem() {\n    if (this.props.editable) {\n      return (\n        <div\n          className=\"gallery-image add\"\n          onClick={this.handleDropClick}\n        >\n          <img\n            alt=\"\"\n            className=\"img-responsive\"\n            src={\"/resources/placeholder.gif\"}\n          />\n          <div className=\"rui badge-container\">\n            <i className=\"fa fa-plus fa-2x\" />\n          </div>\n        </div>\n      );\n    }\n\n    return null;\n  }\n\n  renderFeaturedMedia() {\n    const { width, height } = this.state.dimensions;\n\n    if (this.hasMedia) {\n      return this.props.media.map((media, index) => {\n        if (index === 0) {\n          return (\n            <Measure\n              key={index}\n              onMeasure={(dimensions) => {\n                this.setState({ dimensions });\n              }}\n            >\n              <MediaItem\n                editable={this.props.editable}\n                index={index}\n                key={index}\n                revision={this.featuredMedia.revision}\n                metadata={this.featuredMedia.metadata}\n                onMouseEnter={this.props.onMouseEnterMedia}\n                onMove={this.props.onMoveMedia}\n                onRemoveMedia={this.props.onRemoveMedia}\n                source={this.featuredMedia}\n                mediaHeight={height}\n                mediaWidth={width}\n                isFeatured={true}\n                {...this.props}\n              />\n            </Measure>\n          );\n        }\n      });\n    }\n\n    return (\n      <MediaItem />\n    );\n  }\n\n  renderMediaThumbnails() {\n    if (this.hasMedia) {\n      return this.props.media.map((media, index) => {\n        return (\n          <MediaItem\n            editable={this.props.editable}\n            index={index}\n            key={index}\n            revision={media.revision}\n            metadata={media.metadata}\n            onMouseEnter={this.props.onMouseEnterMedia}\n            onMove={this.props.onMoveMedia}\n            onRemoveMedia={this.props.onRemoveMedia}\n            source={media}\n          />\n        );\n      });\n    }\n    return null;\n  }\n\n  renderMediaGalleryUploader() {\n    const containerWidth = this.props.mediaGalleryWidth;\n    let featured = this.renderAddItem();\n    let gallery;\n\n    // Only render media only if there is any\n    if (this.hasMedia) {\n      featured = this.renderFeaturedMedia();\n      gallery = this.renderMediaThumbnails();\n    }\n\n    return (\n      <div className=\"rui media-gallery\">\n        <Dropzone\n          className=\"rui gallery-drop-pane\"\n          disableClick={true}\n          multiple={true}\n          onDrop={this.props.onDrop}\n          ref=\"dropzone\"\n        >\n          <div className=\"rui gallery\">\n            <div className=\"featuredImage\" style={{ height: containerWidth + \"px\" }}>\n              {featured}\n            </div>\n            <div className=\"rui gallery-thumbnails\">\n              {gallery}\n              {this.renderAddItem()}\n            </div>\n          </div>\n        </Dropzone>\n      </div>\n    );\n  }\n\n  renderMediaGallery() {\n    const containerWidth = this.props.mediaGalleryWidth;\n\n    return (\n      <div className=\"rui media-gallery\">\n        <div className=\"rui gallery\">\n          <div className=\"featuredImage\" style={{ height: containerWidth + \"px\" }}>\n            {this.renderFeaturedMedia()}\n          </div>\n          <div className=\"rui gallery-thumbnails\">\n            {this.renderMediaThumbnails()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    if (this.props.editable) {\n      return this.renderMediaGalleryUploader();\n    }\n\n    return this.renderMediaGallery();\n  }\n}\n\nMediaGallery.propTypes = {\n  allowFeaturedMediaHover: PropTypes.bool,\n  editable: PropTypes.bool,\n  featuredMedia: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  media: PropTypes.arrayOf(PropTypes.object),\n  mediaGalleryHeight: PropTypes.number,\n  mediaGalleryWidth: PropTypes.number,\n  onDrop: PropTypes.func,\n  onMouseEnterMedia: PropTypes.func,\n  onMouseLeaveMedia: PropTypes.func,\n  onMoveMedia: PropTypes.func,\n  onRemoveMedia: PropTypes.func\n};\n\nexport default MediaGallery;\n","import React, { Children, Component, PropTypes } from \"react\";\nimport {\n  Button,\n  Menu,\n  Popover\n} from \"../\";\n\nclass DropDownMenu extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      label: undefined\n    };\n  }\n\n  handleMenuItemChange = (event, value, menuItem) => {\n    this.setState({\n      label: menuItem.props.label || value\n    });\n\n    if (this.props.onChange) {\n      this.props.onChange(event, value);\n    }\n  }\n\n  get label() {\n    let label = this.state.label;\n    Children.forEach(this.props.children, (element) => {\n      if (element.props.value === this.props.value) {\n        label = element.props.label;\n      }\n    });\n\n    if (!label) {\n      const children = Children.toArray(this.props.children);\n      if (children.length) {\n        return children[0].props.label;\n      }\n    }\n\n    return label;\n  }\n\n  render() {\n    return (\n      <Popover\n        buttonElement={\n          this.props.buttonElement ||\n          <Button\n            icon=\"fa fa-chevron-down\"\n            iconAfter={true}\n            label={this.label}\n          />\n        }\n      >\n        <Menu value={this.props.value} onChange={this.handleMenuItemChange}>\n          {this.props.children}\n        </Menu>\n      </Popover>\n    );\n  }\n}\n\nDropDownMenu.propTypes = {\n  buttonElement: PropTypes.node,\n  children: PropTypes.node,\n  isEnabled: PropTypes.bool,\n  onChange: PropTypes.func,\n  onPublishClick: PropTypes.func,\n  revisions: PropTypes.arrayOf(PropTypes.object),\n  translation: PropTypes.shape({\n    lang: PropTypes.string\n  }),\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.number])\n};\n\nexport default DropDownMenu;\n","export { default as Menu } from \"./menu\";\nexport { default as MenuItem } from \"./menuItem\";\nexport { default as DropDownMenu } from \"./dropDownMenu\";\n","import React, { Children, Component, PropTypes } from \"react\";\n\nclass Menu extends Component {\n  handleChange = (event, value, menuItem) => {\n    if (this.props.onChange) {\n      this.props.onChange(event, value, menuItem);\n    }\n  }\n\n  renderMenuItems() {\n    if (this.props.children) {\n      return Children.map(this.props.children, (element) => {\n        const newChild = React.cloneElement(element, {\n          onClick: this.handleChange,\n          active: element.props.value === this.props.value\n        });\n\n        return (\n          <li>{newChild}</li>\n        );\n      });\n    }\n  }\n\n  render() {\n    return (\n      <ul className=\"rui menu dropdown-menu\">\n        {this.renderMenuItems()}\n      </ul>\n    );\n  }\n}\n\nMenu.propTypes = {\n  attachment: PropTypes.string,\n  children: PropTypes.node,\n  onChange: PropTypes.func,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.number])\n};\n\nMenu.defaultProps = {\n  attachment: \"top\"\n};\n\nexport default Menu;\n","import React, { Component, PropTypes } from \"react\";\nimport classnames from \"classnames/dedupe\";\nimport Icon from \"../icon/icon.jsx\";\nimport { Translation } from \"../\";\n\nclass MenuItem extends Component {\n\n  handleClick = (event) => {\n    event.preventDefault();\n    if (this.props.onClick && this.props.disabled === false) {\n      this.props.onClick(event, this.props.value, this);\n    }\n  }\n\n  renderIcon() {\n    if (this.props.icon) {\n      return (\n        <Icon icon={this.props.icon} />\n      );\n    }\n    return null;\n  }\n\n  renderLabel() {\n    if (this.props.label) {\n      return (\n        <Translation\n          defaultValue={this.props.label}\n          i18nKey={this.props.i18nKeyLabel}\n        />\n      );\n    }\n\n    return null;\n  }\n\n  render() {\n    const baseClassName = classnames({\n      \"rui\": true,\n      \"menu-item\": true,\n      \"active\": this.props.active,\n      \"disabled\": this.props.disabled === true\n    }, this.props.className);\n\n    return (\n      <a\n        className={baseClassName}\n        href=\"#\"\n        data-event-action={this.props.eventAction}\n        onClick={this.handleClick}\n        role=\"button\"\n      >\n        {this.renderIcon()}\n        {this.renderLabel()}\n      </a>\n    );\n  }\n}\n\nMenuItem.propTypes = {\n  active: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  disabled: PropTypes.bool,\n  eventAction: PropTypes.string,\n  i18nKeyLabel: PropTypes.string,\n  i18nKeySelectedLabel: PropTypes.string,\n  icon: PropTypes.string,\n  label: PropTypes.string,\n  onClick: PropTypes.func,\n  selectionLabel: PropTypes.string,\n  value: PropTypes.any\n};\n\nMenuItem.defaultProps = {\n  active: false,\n  disabled: false\n};\n\nexport default MenuItem;\n","export { default as Metadata } from \"./metadata\";\nexport { default as Metafield } from \"./metafield\";\n","import React, { Component, PropTypes } from \"react\";\nimport Metafield from \"./metafield\";\n\nclass Metadata extends Component {\n  /**\n   * Handle form submit\n   * @param  {Event} event Event object\n   * @return {void} no return value\n   */\n  handleSubmit = (event) => {\n    event.preventDefault();\n  }\n\n  handleMetaChange = (event, metafield, index) => {\n    if (this.props.onMetaChange) {\n      this.props.onMetaChange(event, metafield, index);\n    }\n  }\n\n  handleMetaSave = (event, metafield, index) => {\n    if (this.props.onMetaSave) {\n      this.props.onMetaSave(event, metafield, index);\n    }\n  }\n\n  handleMetaRemove = (event, metafield, index) => {\n    if (this.props.onMetaRemove) {\n      this.props.onMetaRemove(event, metafield, index);\n    }\n  }\n\n  /**\n   * Render user readable metadata\n   * @return {JSX} metadata\n   */\n  renderMetadata() {\n    if (this.props.metafields) {\n      return this.props.metafields.map((metadata, index) => {\n        return (\n          <div className=\"rui meta-item\" key={index}>\n            <div className=\"rui meta-key\">{metadata.key}</div>\n            <div className=\"rui meta-value\">{metadata.value}</div>\n          </div>\n        );\n      });\n    }\n\n    return null;\n  }\n\n  /**\n   * Render a metadata form\n   * @return {JSX} metadata forms for each row of metadata\n   */\n  renderMetadataForm() {\n    if (this.props.metafields) {\n      return this.props.metafields.map((metadata, index) => {\n        return (\n          <Metafield\n            index={index}\n            key={index}\n            metafield={metadata}\n            onBlur={this.handleMetaSave}\n            onChange={this.handleMetaChange}\n            onRemove={this.handleMetaRemove}\n          />\n        );\n      });\n    }\n\n    return null;\n  }\n\n  renderMetadataCreateForm() {\n    return (\n      <Metafield\n        blank={true}\n        metafield={this.props.newMetafield}\n        onBlur={this.handleMetaSave}\n        onChange={this.handleMetaChange}\n        ref=\"newMetadataFields\"\n      />\n    );\n  }\n\n  /**\n   * render\n   * @return {JSX} component\n   */\n  render() {\n    // Admin editable metadata\n    if (this.props.editable) {\n      return (\n        <div className=\"rui list-group product-detail-edit product-attributes\">\n          {this.renderMetadataForm()}\n          {this.renderMetadataCreateForm()}\n        </div>\n      );\n    }\n\n    // User readable metadata\n    return (\n      <div className=\"rui metadata\">\n        {this.renderMetadata()}\n      </div>\n    );\n  }\n}\n\nMetadata.defaultProps = {\n  editable: true\n};\n\n// Prop Types\nMetadata.propTypes = {\n  editable: PropTypes.bool,\n  metafields: PropTypes.arrayOf(PropTypes.object),\n  newMetafield: PropTypes.object,\n  onMetaChange: PropTypes.func,\n  onMetaRemove: PropTypes.func,\n  onMetaSave: PropTypes.func\n};\n\nexport default Metadata;\n","import React, { Component, PropTypes } from \"react\";\nimport Velocity from \"velocity-animate\";\nimport \"velocity-animate/velocity.ui\";\nimport { TextField, Button } from \"../\";\n\nclass Metafield extends Component {\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.metafield.key !== this.props.metafield.key) {\n      const input = this.refs.keyInput.refs.input;\n\n      Velocity.RunSequence([\n        { e: input, p: { backgroundColor: \"#e2f2e2\" }, o: { duration: 200 } },\n        { e: input, p: { backgroundColor: \"#fff\" }, o: { duration: 100 } }\n      ]);\n    }\n\n    if (nextProps.metafield.value !== this.props.metafield.value) {\n      const input = this.refs.valueInput.refs.input;\n\n      Velocity.RunSequence([\n        { e: input, p: { backgroundColor: \"#e2f2e2\" }, o: { duration: 200 } },\n        { e: input, p: { backgroundColor: \"#fff\" }, o: { duration: 100 } }\n      ]);\n    }\n  }\n\n  get detailNamePlaceholder() {\n    return this.props.detailNamePlaceholder || \"Detail Name\";\n  }\n\n  get i18nKeyDetailName() {\n    return this.props.i18nKeyDetailName || \"productDetailEdit.detailName\";\n  }\n\n  get detailInfoPlaceholder() {\n    return this.props.detailInfoPlaceholder || \"Detail Information\";\n  }\n\n  get i18nKeyDetailInformation() {\n    return this.props.i18nKeyDetailInfo || \"productDetail.detailsInfo\";\n  }\n\n  /**\n   * Handle form submit\n   * @param  {Event} event Event object\n   * @return {void} no return value\n   */\n  handleSubmit = (event) => {\n    event.preventDefault();\n  }\n\n  handleChange = (event) => {\n    if (this.props.onChange) {\n      const newMetadata = {\n        key: this.refs.keyInput.refs.input.value,\n        value: this.refs.valueInput.refs.input.value\n      };\n\n      this.props.onChange(event, newMetadata, this.props.index);\n    }\n  }\n\n  handleBlur = (event) => {\n    if (this.props.onBlur) {\n      const newMetadata = {\n        key: this.refs.keyInput.refs.input.value,\n        value: this.refs.valueInput.refs.input.value\n      };\n\n      if (newMetadata.key && newMetadata.value) {\n        this.props.onBlur(event, newMetadata, this.props.index);\n      }\n    }\n  }\n\n  handleRemove = (event) => {\n    if (this.props.onRemove) {\n      this.props.onRemove(event, this.props.metafield, this.props.index);\n    }\n  }\n\n  renderActionButton() {\n    if (this.props.blank === true) {\n      return (\n        <Button icon=\"plus\" onClick={this.handleSubmit} type=\"submit\" />\n      );\n    }\n    return (\n      <Button icon=\"times-circle\" onClick={this.handleRemove} type=\"button\" />\n    );\n  }\n\n  /**\n   * Render a metadata form\n   * @return {JSX} metadata forms for each row of metadata\n   */\n  render() {\n    if (this.props.metafield) {\n      return (\n        <div className=\"rui list-group-item metafield-list-item\">\n          <form className=\"form form-inline\" onSubmit={this.handleSubmit}>\n            <TextField\n              className=\"metafield-key-input\"\n              i18nKeyPlaceholder={this.i18nKeyDetailName}\n              name=\"key\"\n              onBlur={this.handleBlur}\n              onChange={this.handleChange}\n              onReturnKeyDown={this.handleBlur}\n              placeholder={this.detailNamePlaceholder}\n              ref=\"keyInput\"\n              value={this.props.metafield.key}\n            />\n            <TextField\n              className=\"metafield-value-input\"\n              i18nKeyPlaceholder={this.i18nKeyDetailInformation}\n              name=\"value\"\n              onBlur={this.handleBlur}\n              onChange={this.handleChange}\n              onReturnKeyDown={this.handleBlur}\n              placeholder={this.detailInfoPlaceholder}\n              ref=\"valueInput\"\n              value={this.props.metafield.value}\n            />\n            {this.renderActionButton()}\n          </form>\n        </div>\n      );\n    }\n    return null;\n  }\n}\n\nMetafield.defaultProps = {\n  editable: true\n};\n\n// Prop Types\nMetafield.propTypes = {\n  blank: PropTypes.bool,\n  detailInfoPlaceholder: PropTypes.func,\n  detailNamePlaceholder: PropTypes.func,\n  i18nKeyDetailInfo: PropTypes.func,\n  i18nKeyDetailName: PropTypes.func,\n  index: PropTypes.number,\n  metafield: PropTypes.object,\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func,\n  onRemove: PropTypes.func\n};\n\nexport default Metafield;\n","export { default as Overlay } from \"./overlay\";\n","import React, { Component, PropTypes } from \"react\";\nimport { VelocityTransitionGroup } from \"velocity-react\";\nimport Radium from \"radium\";\nimport classnames from \"classnames\";\n\nconst styles = {\n  base: {\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\",\n    backgroundColor: \"rgba(0, 0, 0, 0.7)\",\n    zIndex: 1040,\n    padding: 0\n  }\n};\n\nclass Overlay extends Component {\n  static defaultProps = {\n    isVisible: true\n  };\n\n  static propTypes = {\n    children: PropTypes.node,\n    isVisible: PropTypes.bool,\n    onClick: PropTypes.func\n  };\n\n  state = {\n    enterAnimation: {\n      animation: { opacity: 1 },\n      duration: 200\n    },\n    leaveAnimation: {\n      animation: { opacity: 0 },\n      duration: 200\n    }\n  }\n\n  renderOverlay() {\n    if (this.props.isVisible) {\n      const baseClassName = classnames({\n        rui: true\n      });\n\n      return (\n        <div\n          className={baseClassName}\n          style={styles.base}\n          onClick={this.props.onClick}\n        />\n      );\n    }\n\n    return null;\n  }\n\n  render() {\n    return (\n      <VelocityTransitionGroup\n        enter={this.state.enterAnimation}\n        leave={this.state.leaveAnimation}\n      >\n        {this.renderOverlay()}\n      </VelocityTransitionGroup>\n    );\n  }\n}\n\nexport default Radium(Overlay);\n","import React, { Component, PropTypes } from \"react\";\nimport classnames from \"classnames\";\nimport Select from \"react-select\";\nimport { Translation } from \"../translation\";\nimport { i18next } from \"/client/api\";\n\nclass MultiSelect extends Component {\n  static defaultProps = {\n    multi: true,\n    simpleValue: true\n  }\n\n  static propTypes = {\n    i18nKeyLabel: PropTypes.string,\n    i18nKeyPlaceholder: PropTypes.string,\n    label: PropTypes.string,\n    name: PropTypes.string,\n    onChange: PropTypes.func,\n    options: PropTypes.array,\n    placeholder: PropTypes.string,\n    value: PropTypes.oneOfType([PropTypes.array, PropTypes.string])\n  }\n\n  renderLabel() {\n    if (this.props.label) {\n      return (\n        <label>\n          <Translation defaultValue={this.props.label} i18nKey={this.props.i18nKeyLabel} />\n        </label>\n      );\n    }\n\n    return null;\n  }\n\n  handleChange = (value) => {\n    if (typeof this.props.onChange === \"function\") {\n      this.props.onChange(value, this.props.name);\n    }\n  }\n\n  render() {\n    const {\n      label, i18nKeyLabel, // eslint-disable-line no-unused-vars\n      placeholder, i18nKeyPlaceholder,\n      ...selectProps\n    } = this.props;\n\n    const classes = classnames({\n      // Base\n      \"rui\": true,\n      \"multiselect\": true,\n      \"form-group\": true\n    });\n\n    const translatedPlaceholder = i18next.t(i18nKeyPlaceholder, { defaultValue: placeholder });\n\n    return (\n      <div className={classes}>\n        {this.renderLabel()}\n        <Select\n          {...selectProps}\n          placeholder={translatedPlaceholder}\n          onChange={this.handleChange}\n        />\n      </div>\n    );\n  }\n}\n\nexport default MultiSelect;\n","import React, { Component, PropTypes } from \"react\";\nimport classnames from \"classnames\";\nimport TetherComponent from \"react-tether\";\nimport PopoverContent from \"./popoverContent\";\nimport { Button, ButtonGroup } from \"/imports/plugins/core/ui/client/components/\";\n\nclass Popover extends Component {\n  state = {\n    isOpen: false\n  }\n\n  /**\n   * attachment\n   * @description Return the attachment for the tooltip or the default\n   * @return {String} attachment\n   */\n  get attachment() {\n    return this.props.attachment || Tooltip.defaultProps.attachment;\n  }\n\n  handleDisplayButtonClick = (event, value) => {\n    if (this.props.onDisplayButtonClick) {\n      this.props.onDisplayButtonClick(event, value);\n    }\n  }\n\n  handleOpen = () => {\n    this.setState({\n      isOpen: true\n    });\n  }\n\n  handleClickOutside = () => {\n    this.setState({\n      isOpen: false\n    });\n  }\n\n  renderPopoverChildren() {\n    if (this.state.isOpen) {\n      return  (\n        <PopoverContent\n          children={this.props.children}\n          onClickOutside={this.handleClickOutside}\n        />\n      );\n    }\n    return null;\n  }\n\n  renderButtons() {\n    if (this.props.showDropdownButton) {\n      return (\n        <ButtonGroup>\n          {this.props.buttonElement}\n          <Button\n            key=\"dropdown-button\"\n            icon=\"fa fa-chevron-down\"\n            onClick={this.handleOpen}\n            status={this.props.buttonElement.props.status}\n          />\n        </ButtonGroup>\n      );\n    }\n\n    return React.cloneElement(this.props.buttonElement, {\n      onClick: this.handleOpen\n    });\n  }\n\n  render() {\n    return (\n      <TetherComponent\n        attachment={this.attachment}\n        classPrefix=\"popover\"\n        className={classnames({\n          \"rui\": true,\n          \"popover-element\": true,\n          \"popover-open\": true,\n          \"popover-theme-arrows\": this.props.showArrow || false\n        })}\n        constraints={[{\n          to: \"scrollParent\",\n          attachment: \"together\"\n        }]}\n        targetAttachment={this.props.targetAttachment}\n      >\n        {this.renderButtons()}\n        {this.renderPopoverChildren()}\n      </TetherComponent>\n    );\n  }\n}\n\nPopover.propTypes = {\n  attachment: PropTypes.string,\n  buttonElement: PropTypes.node,\n  children: PropTypes.node,\n  onDisplayButtonClick: PropTypes.func,\n  showArrow: PropTypes.bool,\n  showDropdownButton: PropTypes.bool,\n  targetAttachment: PropTypes.string,\n  tooltipContent: PropTypes.node\n};\n\nPopover.defaultProps = {\n  attachment: \"bottom left\",\n  showArrow: false,\n  targetAttachment: \"top left\"\n};\n\n\nexport default Popover;\n","import React, { Component, PropTypes } from \"react\";\nimport onclickOutside from \"react-onclickoutside\";\n\nclass PopoverContent extends Component {\n  handleClickOutside(event) {\n    if (this.props.onClickOutside) {\n      this.props.onClickOutside(event);\n    }\n  }\n\n  render() {\n    return  (\n      <div className=\"rui popover-content\">\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nPopoverContent.propTypes = {\n  children: PropTypes.node,\n  onClickOutside: PropTypes.func\n};\n\nexport default onclickOutside(PopoverContent);\n","import React, { Component, PropTypes } from \"react\";\n\nclass CircularProgress extends Component {\n  renderInderterminateProgress() {\n    return (\n      <div className=\"spinner\" />\n    );\n  }\n\n  render() {\n    if (this.props.indeterminate === true) {\n      return this.renderInderterminateProgress();\n    }\n\n    return null;\n  }\n}\n\nCircularProgress.propTypes = {\n  indeterminate: PropTypes.bool\n};\n\nCircularProgress.defaultProps = {\n  indeterminate: true\n};\n\nexport default CircularProgress;\n","/**\n * Implementing No UI Slider\n * https://www.npmjs.com/package/react-nouislider\n */\nimport React, { Component, PropTypes } from \"react\";\nimport Nouislider from \"react-nouislider\";\n\nclass Slider extends Component {\n  render() {\n    return (\n      <Nouislider\n        range={this.props.range}\n        start={this.props.start}\n        tooltips={this.props.tooltips}\n        connect={this.props.connect}\n        step={this.props.step}\n        orientation={this.props.orientation}\n        margin={this.props.margin}\n        padding={this.props.padding}\n        onChange={this.props.onChange}\n        onSlide={this.props.onSlide}\n      />\n    );\n  }\n}\n\nSlider.propTypes = {\n  connect: PropTypes.oneOfType([PropTypes.array, PropTypes.bool]),\n  margin: PropTypes.number,\n  onChange: PropTypes.func,\n  onSlide: PropTypes.func,\n  orientation: PropTypes.string,\n  padding: PropTypes.number,\n  range: PropTypes.object,\n  start: PropTypes.arrayOf(PropTypes.number),\n  step: PropTypes.number,\n  tooltips: PropTypes.oneOfType([PropTypes.array, PropTypes.bool])\n};\n\nSlider.defaultProps = {\n  range: {\n    min: 0,\n    max: 100\n  },\n  start: [0, 100],\n  step: 5,\n  orientation: \"horizontal\",\n  tooltips: true,\n  margin: 0,\n  padding: 0\n};\n\nexport default Slider;\n","export { default as Switch } from \"./switch\";\n","import React, { Component, PropTypes } from \"react\";\nimport classnames from \"classnames\";\nimport { Translation } from \"/imports/plugins/core/ui/client/components\";\n\nclass Switch extends Component {\n  static defaultProps = {\n    checked: false\n  }\n\n  static propTypes = {\n    checked: PropTypes.bool,\n    i18nKeyLabel: PropTypes.string,\n    i18nKeyOnLabel: PropTypes.string,\n    label: PropTypes.string,\n    name: PropTypes.string,\n    onChange: PropTypes.func,\n    onLabel: PropTypes.string\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      checked: false\n    };\n  }\n\n  handleChange = (event) => {\n    if (this.props.onChange) {\n      const isInputChecked = !this.props.checked;\n      this.props.onChange(event, isInputChecked, this.props.name);\n    }\n  }\n\n  renderLabel() {\n    let labelElement;\n\n    if (this.props.checked === false && this.props.label) {\n      labelElement = (\n        <Translation defaultValue={this.props.label} i18nKey={this.props.i18nKeyLabel} />\n      );\n    } else if (this.props.checked === true && this.props.onLabel) {\n      labelElement = (\n        <Translation defaultValue={this.props.onLabel} i18nKey={this.props.i18nKeyOnLabel} />\n      );\n    } else if (this.props.label) {\n      labelElement = (\n        <Translation defaultValue={this.props.label} i18nKey={this.props.i18nKeyLabel} />\n      );\n    }\n\n    if (labelElement) {\n      return (\n        <div className=\"control-label\">\n          {labelElement}\n        </div>\n      );\n    }\n\n    return null;\n  }\n\n  checkboxRef = (ref) => {\n    this._checkbox = ref;\n  }\n\n  render() {\n    const baseClassName = classnames({\n      rui: true,\n      switch: true\n    });\n\n    const switchControlClassName = classnames({\n      \"switch-control\": true,\n      \"active\": this.props.checked\n    });\n\n    return (\n      <label className={baseClassName}>\n        <input\n          checked={this.props.checked}\n          onChange={this.handleChange}\n          ref={this.checkboxRef}\n          type=\"checkbox\"\n        />\n        <div className={switchControlClassName} />\n        {this.renderLabel()}\n      </label>\n    );\n  }\n}\n\nexport default Switch;\n","import React, { Component, PropTypes } from \"react\";\nimport { TacoTable } from \"react-taco-table\";\n\nclass SortableTable extends Component {\n  render() {\n    const {\n      data,\n      columns\n    } = this.props;\n\n    return (\n      <TacoTable\n        className=\"table sortable-table\"\n        columns={columns}\n        data={data}\n      />\n    );\n  }\n}\n\nSortableTable.propTypes = {\n  columns: PropTypes.array,\n  data: PropTypes.array\n};\n\nexport default SortableTable;\n","export { default as TabList } from \"./tabList\";\nexport { default as TabItem } from \"./tabItem\";\n","import React, { Component, PropTypes } from \"react\";\nimport classnames from \"classnames/dedupe\";\n\nclass TabItem extends Component {\n  static propTypes = {\n    active: PropTypes.bool,\n    children: PropTypes.node,\n    className: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    href: PropTypes.string,\n    index: PropTypes.number,\n    onClick: PropTypes.func,\n    value: PropTypes.any\n  }\n\n  handleClick = (event) => {\n    if (typeof this.props.onClick === \"function\") {\n      event.preventDefault();\n      this.props.onClick(event, this.props.value, this.props.index);\n    }\n  }\n\n  render() {\n    const {\n      active,\n      className,\n      // Remove props that cannot be added to DOM elements\n      onClick, value, href, index, // eslint-disable-line no-unused-vars\n\n      // All other props pass on through\n      ...otherProps\n    } = this.props;\n\n    const baseClassName = classnames({\n      rui: true,\n      tab: true,\n      active\n    }, className);\n\n    return (\n      <li {...otherProps} className={baseClassName} role=\"presentation\">\n        <a onClick={this.handleClick} href={href} style={{ width: \"100%\", height: \"100%\" }}>\n          {this.props.children}\n        </a>\n      </li>\n    );\n  }\n}\n\nexport default TabItem;\n","import React, { Children, Component, PropTypes } from \"react\";\nimport classnames from \"classnames/dedupe\";\n\nclass TabList extends Component {\n  static propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    selectedTab: PropTypes.oneOfType([PropTypes.any])\n  }\n\n  render() {\n    const { className, selectedTab, ...otherProps } = this.props;\n\n    const baseClassName = classnames({\n      \"rui\": true,\n      \"tab-list\": true,\n      \"nav\": true,\n      \"nav-pills\": true\n    }, className);\n\n    const elements = Children.map(this.props.children, (child, index) => {\n      const newProps = {\n        index,\n        active: false\n      };\n\n      if (selectedTab === child.props.value || selectedTab === index) {\n        newProps.active = true;\n      }\n\n      return React.cloneElement(child, newProps);\n    });\n\n    return (\n      <ul {...otherProps} className={baseClassName} role=\"tabList\">\n        {elements}\n      </ul>\n    );\n  }\n}\n\nexport default TabList;\n","export { default as Toolbar } from \"./toolbar\";\nexport { default as ToolbarGroup } from \"./toolbarGroup\";\nexport { default as ToolbarText } from \"./toolbarText\";\n","import React, { Component, PropTypes } from \"react\";\n\nclass Toolbar extends Component {\n  render() {\n    return (\n      <nav className=\"rui toolbar navbar-inverse\">\n        {this.props.children}\n      </nav>\n    );\n  }\n}\n\nToolbar.propTypes = {\n  attachment: PropTypes.string,\n  children: PropTypes.node\n};\n\nToolbar.defaultProps = {\n  attachment: \"top\"\n};\n\nexport default Toolbar;\n","import React, { PropTypes } from \"react\";\nimport classnames from \"classnames\";\n\n/**\n * Toobar Text\n * @param {Object} props component props\n * @return {node} react element node\n */\nconst ToolbarGroup = (props) => {\n  const baseClassName = classnames({\n    \"rui\": true,\n    \"toolbar-group\": true,\n    \"left\": props.firstChild,\n    \"right\": props.lastChild\n  }, props.className);\n\n  return (\n    <div className={baseClassName}>{props.children}</div>\n  );\n};\n\nToolbarGroup.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  firstChild: PropTypes.bool,\n  lastChild: PropTypes.bool\n};\n\nexport default ToolbarGroup;\n","import React, { PropTypes } from \"react\";\nimport classnames from \"classnames\";\n\n/**\n * Toobar Text\n * @param {Object} props component props\n * @return {node} react element node\n */\nconst ToolbarText = (props) => {\n  const baseClassName = classnames({\n    \"navbar-text\": true\n  }, props.className);\n\n  return (\n    <div className={baseClassName}>{props.children}</div>\n  );\n};\n\nToolbarText.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.oneOfType([PropTypes.object, PropTypes.string])\n};\n\nexport default ToolbarText;\n","import React, { Component, PropTypes } from \"react\";\nimport TetherComponent from \"react-tether\";\nimport classnames from \"classnames\";\n\nclass Tooltip extends Component {\n\n  /**\n   * attachment\n   * @description Return the attachment for the tooltip or the default\n   * @return {String} attachment\n   */\n  get attachment() {\n    return this.props.attachment || Tooltip.defaultProps.attachment;\n  }\n\n  renderTooltip() {\n    if (this.props.tooltipContent) {\n      return (\n        <div className=\"tooltip-content\">\n          {this.props.tooltipContent}\n        </div>\n      );\n    }\n\n    return null;\n  }\n\n  render() {\n    return (\n      <TetherComponent\n        attachment={this.attachment}\n        classPrefix=\"tooltip\"\n        className={classnames({\n          \"tooltip-element\": true,\n          \"tooltip-open\": true,\n          \"tooltip-theme-arrows\": true\n        })}\n        constraints={[{\n          to: \"scrollParent\",\n          attachment: \"together\"\n        }]}\n      >\n        <div>\n          {this.props.children}\n        </div>\n        {this.renderTooltip()}\n      </TetherComponent>\n    );\n  }\n}\n\nTooltip.propTypes = {\n  attachment: PropTypes.string,\n  children: PropTypes.node,\n  tooltipContent: PropTypes.node\n};\n\nTooltip.defaultProps = {\n  attachment: \"bottom center\"\n};\n\nexport default Tooltip;\n","import React, { Component, PropTypes, Children } from \"react\"; // eslint-disable-line\nimport { formatPriceString } from \"/client/api\";\n\nclass Currency extends Component {\n  render() {\n    const amount = formatPriceString(this.props.amount || this.props.priceRange, this.props.editable);\n\n    return (\n      <span itemProp=\"price\">{amount}</span>\n    );\n  }\n}\n\nCurrency.propTypes = {\n  amount: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  editable: PropTypes.bool,\n  priceRange: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n};\n\nexport default Currency;\n","export { default as Translation } from \"./translation\";\nexport { default as Currency } from \"./currency\";\n","import { camelCase } from \"lodash\";\nimport React, { Component, PropTypes } from \"react\";\nimport { i18next } from \"/client/api\";\n\nclass Translation extends Component {\n  render() {\n    const i18nKey = this.props.i18nKey || camelCase(this.props.defaultValue);\n\n    const translation = i18next.t(i18nKey, {\n      defaultValue: this.props.defaultValue\n    });\n\n    return (\n      <span>{translation}</span>\n    );\n  }\n}\n\nTranslation.propTypes = {\n  defaultValue: PropTypes.string,\n  i18nKey: PropTypes.string\n};\n\nexport default Translation;\n","// export ButtonGroup from \"./buttonGroup/buttonGroup\";\n\nexport { Alerts, Alert } from \"./alerts\";\nexport { default as Icon } from \"./icon/icon\";\nexport { default as CircularProgress } from \"./progress/circularProgress\";\nexport { default as Divider } from \"./divider/divider\";\nexport { default as VerticalDivider } from \"./divider/verticalDivider\";\nexport { default as Items } from \"./items/items\";\nexport { default as Item } from \"./items/item\";\nexport { default as TextField } from \"./textfield/textfield\";\nexport { default as NumericInput } from \"./numericInput/numericInput\";\nexport { Button, IconButton, EditButton, VisibilityButton, Handle, ButtonSelect } from \"./button\";\nexport { Translation, Currency } from \"./translation\";\nexport { default as Tooltip } from \"./tooltip/tooltip\";\nexport { Metadata, Metafield } from \"./metadata\";\nexport { TagList, TagItem } from \"./tags\";\nexport * from \"./cards\";\nexport { MediaGallery, MediaItem } from \"./media\";\nexport { default as FlatButton } from \"./button/flatButton\";\nexport { default as SortableTable } from \"./table/table\";\nexport { Checkbox } from \"./checkbox\";\nexport { default as Loading } from \"./loading/loading\";\nexport * from \"./forms\";\nexport * from \"./toolbar\";\nexport { default as Popover } from \"./popover/popover\";\nexport * from \"./menu\";\nexport * from \"./buttonGroup\";\nexport { Switch } from \"./switch\";\nexport { List, ListItem } from \"./list\";\nexport { default as Slider } from \"./slider/slider\";\nexport { default as MultiSelect } from \"./multiselect/multiselect\";\nexport { Overlay } from \"./modal\";\nexport * from \"./tabs\";\nexport { default as Select } from \"./select/select.react\";\n","import { i18next, Router } from \"/client/api\";\nimport { Themes } from \"/lib/collections\";\n\nTemplate.uiDashboard.onCreated(function () {\n  this.state = new ReactiveDict();\n  this.state.setDefault({\n    themes: []\n  });\n\n  this.autorun(() => {\n    this.subscribe(\"Themes\");\n    const themes = Themes.find({}).fetch();\n    this.state.set(\"themes\", themes);\n  });\n});\n\nTemplate.uiDashboard.helpers({\n  themeCardProps(theme) {\n    return {\n      onContentClick() {\n        Router.go(\"dashboard/uiThemeDetails\", {\n          id: theme.name\n        });\n      },\n      controls: [\n        {\n          icon: \"check-square fa-fw\"\n        },\n        {\n          icon: \"files-o fa-fw\",\n          onClick() {\n            Alerts.alert({\n              title: i18next.t(\"reactionUI.duplicateTheme\", \"Duplicate Theme\"),\n              showCancelButton: true,\n              confirmButtonText: \"Duplicate\"\n            }, () => {\n              Meteor.call(\"ui/duplicateTheme\", theme.name, (error) => {\n                if (error) {\n                  const alertDescription = i18next.t(\"reactionUI.duplicateThemeError\", {\n                    defaultValue: \"Couldn't duplicate theme\"\n                  });\n                  Alerts.toast(alertDescription, \"error\");\n                }\n              });\n            });\n          }\n        }\n      ]\n    };\n  },\n\n  themes() {\n    return Template.instance().state.get(\"themes\");\n  }\n});\n","import { Reaction, Router, i18next } from \"/client/api\";\nimport { Themes } from \"/lib/collections\";\n\nTemplate.uiThemeDetails.onCreated(function () {\n  this.state = new ReactiveDict();\n  this.state.setDefault({\n    selectedComponent: null,\n    theme: {}\n  });\n\n  this.subscribe(\"Themes\");\n\n  this.autorun(() => {\n    const selectedComponent = Router.getQueryParam(\"component\");\n    this.state.set(\"selectedComponent\", selectedComponent);\n\n    if (selectedComponent) {\n      Reaction.showActionView({\n        label: i18next.t(\"reactionUI.editTheme\", \"Edit Theme\"),\n        props: {\n          size: \"large\"\n        },\n        template: \"uiThemeEditor\"\n      });\n    }\n  });\n\n  this.autorun(() => {\n    this.theme = Themes.findOne({ name: \"base\" });\n    this.state.set(\"theme\", this.theme);\n  });\n});\n\nTemplate.uiThemeDetails.onRendered(function () {\n\n});\n\nTemplate.uiThemeDetails.helpers({\n  activeClassName(componentName) {\n    if (Template.instance().state.equals(\"selectedComponent\", componentName)) {\n      return \"active\";\n    }\n    return \"\";\n  },\n\n  components() {\n    const instance = Template.instance();\n    const theme = instance.state.get(\"theme\");\n    let components = [];\n\n    if (theme) {\n      components = theme.components.map((component) => {\n        return {\n          label: i18next.t(`reactionUI.components.${component.name}`, {\n            defaultValue: component.label\n          }),\n          name: component.name\n        };\n      });\n    }\n\n    return components;\n  },\n\n  publishTheme() {\n    const instance = Template.instance();\n    return () => {\n      const theme = instance.state.get(\"theme\") || {};\n      Meteor.call(\"ui/publishTheme\", theme, (error) => {\n        if (error) {\n          const alertDescription = i18next.t(\"reactionUI.publishThemeError\", {\n            defaultValue: `Couldn't publish theme ${theme.name}`,\n            themeName: theme.name\n          });\n          Alerts.toast(alertDescription, \"error\");\n        }\n      });\n    };\n  }\n});\n\nTemplate.uiThemeDetails.events({\n  \"click [data-event-action=editComponentTheme]\"(event) {\n    Router.setQueryParams({\n      component: event.currentTarget.dataset.component\n    });\n  }\n\n});\n","import { Router } from \"/client/api\";\nimport { Themes } from \"/lib/collections\";\n\nTemplate.uiThemeEditor.onCreated(function () {\n  this.state = new ReactiveDict();\n  this.state.setDefault({\n    selectors: [],\n    annotations: {},\n    selectedComponent: null,\n    styles: {},\n    theme: {}\n  });\n\n  this.subscribe(\"Themes\");\n\n  this.findComponentByName = (name) => {\n    const theme = this.state.get(\"theme\");\n    if (theme) {\n      return _.find(theme.components, (component) => {\n        return component.name === name;\n      });\n    }\n  };\n\n  this.selectThemeComponent = (name) => {\n    this.state.set(\"selectedComponent\", name);\n  };\n\n  this.autorun(() => {\n    const componentName = Router.getQueryParam(\"component\");\n    const component = this.findComponentByName(componentName);\n\n    this.state.set(\"selectedComponent\", component);\n    if (component) {\n      // Get a freestyle-like object from raw css\n      Meteor.call(\"ui/cssToObject\", component.styles, (error, result) => {\n        this.state.set(\"styles\", result);\n      });\n\n      const annotations = {};\n\n      for (const annotation of component.annotations) {\n        if (annotation.rule) {\n          annotations[annotation.rule] = annotation;\n        }\n      }\n\n      this.state.set(\"annotations\", annotations);\n    }\n  });\n\n  this.previewTheme = (theme) => {\n    let output = \"\";\n    for (const component of theme.components) {\n      output += component.styles;\n    }\n    $(\"#reactionLayoutStyles\").text(output);\n  };\n\n  this.autorun(() => {\n    const theme = Themes.findOne({ name: \"base\" });\n    this.state.set(\"theme\", theme);\n\n    if (theme) {\n      this.previewTheme(theme);\n    }\n  });\n});\n\n\nTemplate.uiThemeEditor.helpers({\n  component() {\n    const instance = Template.instance();\n    const theme = instance.state.get(\"theme\");\n    const selectedComponent = instance.state.get(\"selectedComponent\");\n    if (theme) {\n      return selectedComponent;\n    }\n  },\n\n  styles() {\n    const instance = Template.instance();\n    const stylesObject = instance.state.get(\"styles\");\n    const annotations = instance.state.get(\"annotations\") || {};\n\n    const stylesArray = _.map(stylesObject, (declarations, selector) => {\n      return {\n        selector,\n        annotation: annotations[selector] || {\n          label: selector\n        },\n        declarations: _.map(declarations, (value, property) => {\n          return {\n            property,\n            value\n          };\n        })\n      };\n    });\n    return stylesArray;\n  },\n\n  updateStyles() {\n    return () => {\n    };\n  },\n\n  componentSelectProps() {\n    const instance = Template.instance();\n    let options = [];\n    const theme = instance.state.get(\"theme\");\n\n    if (theme) {\n      options = theme.components.map((component) => {\n        return {\n          label: component.label || component.name,\n          value: component.name\n        };\n      });\n    }\n\n    return {\n      options,\n      onSelect(value) {\n        instance.selectThemeComponent(value);\n      }\n    };\n  }\n});\n\nTemplate.uiThemeEditor.events({\n  \"mouseover [data-rule]\"(event) {\n    const selector = event.currentTarget.dataset.selector;\n\n    $(selector).css({\n      boxShadow: \"0 0 5px 2px #00dcdd\"\n    });\n  },\n\n  \"mouseout [data-rule]\"(event) {\n    const selector = event.currentTarget.dataset.selector;\n    $(selector).css({\n      boxShadow: \"none\"\n    });\n  },\n\n\n  \"input input\"(event, instance) {\n    const selector = $(event.target).closest(\"[data-selector]\").attr(\"data-selector\");\n    const property = event.target.name;\n    const value = event.target.value;\n    const theme = instance.state.get(\"theme\");\n    const component = instance.state.get(\"selectedComponent\");\n    const styles = instance.state.get(\"styles\");\n\n    styles[selector][property] = value;\n\n    // Update style value\n    const data = {\n      theme,\n      component,\n      styles\n    };\n\n    Meteor.call(\"ui/updateStyles\", data, (error) => {\n      if (error) {\n        Alerts.toast(`Couldn't update theme ${theme.name}`);\n      }\n    });\n  }\n});\n","import React, { Component, PropTypes } from \"react\";\nimport { composeWithTracker } from \"/lib/api/compose\";\nimport { Alerts } from \"../components\";\nimport { default as ReactionAlerts } from \"/imports/plugins/core/layout/client/templates/layout/alerts/inlineAlerts\";\n\nclass AlertContainer extends Component {\n  handleAlertRemove(alert) {\n    ReactionAlerts.collection_.remove(alert._id);\n  }\n\n  handleAlertSeen(alert) {\n    ReactionAlerts.collection_.update(alert._id, {\n      $set: {\n        seen: true\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"alert-container\">\n        <Alerts\n          onAlertRemove={this.handleAlertRemove}\n          onAlertSeen={this.handleAlertSeen}\n          {...this.props}\n        />\n      </div>\n    );\n  }\n}\n\nfunction composer(props, onData) {\n  const alerts = ReactionAlerts.collection_.find({\n    \"options.placement\": props.placement || \"\",\n    \"options.id\": props.id || \"\"\n  }).fetch();\n\n  onData(null, {\n    alerts: alerts\n  });\n}\n\nAlertContainer.propTypes = {\n  id: PropTypes.string,\n  placement: PropTypes.string\n};\n\nexport default composeWithTracker(composer)(AlertContainer);\n","import React, { Children, Component, PropTypes } from \"react\";\nimport { Reaction } from \"/client/api\";\nimport { EditButton, VisibilityButton, Translation } from \"/imports/plugins/core/ui/client/components\";\nimport { composeWithTracker } from \"/lib/api/compose\";\n\nconst styles = {\n  editContainerItem: {\n    display: \"flex\",\n    marginLeft: 5\n  }\n};\n\nclass EditContainer extends Component {\n\n  handleEditButtonClick = (event) => {\n    const props = this.props;\n\n    if (this.props.onEditButtonClick) {\n      const returnValue = this.props.onEditButtonClick(event, props);\n\n      if (returnValue === false) {\n        return returnValue;\n      }\n    }\n\n    Reaction.showActionView({\n      label: props.label,\n      i18nKeyLabel: props.i18nKeyLabel,\n      template: props.editView,\n      data: {\n        data: props.data,\n        viewProps: {\n          field: props.field\n        }\n      }\n    });\n\n    Reaction.state.set(\"edit/focus\", props.field);\n\n    return true;\n  }\n\n  handleVisibilityButtonClick = (event) => {\n    const props = this.props;\n\n    if (this.props.onVisibilityButtonClick) {\n      const returnValue = this.props.onVisibilityButtonClick(event, props);\n\n      if (returnValue === false) {\n        return returnValue;\n      }\n    }\n\n    return true;\n  }\n\n  renderVisibilityButton() {\n    if (this.props.showsVisibilityButton) {\n      return (\n        <span className=\"edit-container-item\" style={styles.editContainerItem}>\n          <VisibilityButton\n            onClick={this.handleVisibilityButtonClick}\n            toggleOn={this.props.data.isVisible}\n          />\n        </span>\n      );\n    }\n\n    return null;\n  }\n\n  renderEditButton() {\n    let status;\n    let tooltip;\n    let hasChange = false;\n\n    if (this.props.data.__draft && this.props.field) {\n      const draft = this.props.data.__draft;\n\n      if (Array.isArray(draft.diff)) {\n        for (const diff of draft.diff) {\n          let hasChangedField = false;\n\n          if (Array.isArray(this.props.field)) {\n            if (this.props.field.indexOf(diff.path[0]) >= 0) {\n              hasChangedField = true;\n            }\n          } else if (typeof this.props.field === \"string\" && this.props.field === diff.path[0]) {\n            hasChangedField = true;\n          }\n\n          if (hasChangedField) {\n            status = \"warning\";\n\n            tooltip = (\n              <span>\n                <Translation defaultValue=\"Unpublished Changes\" i18nKey=\"revisions.unpublishedChanges\" />\n              </span>\n            );\n\n            hasChange = true;\n          }\n        }\n      }\n    } else if (this.props.data.__draft) {\n      status = \"warning\";\n\n      tooltip = (\n        <span>\n          <Translation defaultValue=\"Unpublished Changes\" i18nKey=\"revisions.unpublishedChanges\" />\n        </span>\n      );\n    }\n\n    if (this.props.autoHideEditButton && hasChange === false) {\n      return null;\n    }\n\n    return (\n      <span className=\"edit-container-item\" style={styles.editContainerItem}>\n        <EditButton\n          onClick={this.handleEditButtonClick}\n          status={status}\n          tooltip={tooltip}\n        />\n      </span>\n    );\n  }\n\n  render() {\n    // Display edit button if the permissions allow it.\n    if (this.props.hasPermission) {\n      // If children were passed as props to this component,\n      // copy the children and inject the edit buttons\n      if (this.props.children) {\n        return React.cloneElement(this.props.children, {\n          visibilityButton: this.renderVisibilityButton(),\n          editButton: this.renderEditButton()\n        });\n      }\n\n      // Otherwise, render a container for the edit buttons\n      return (\n        <span className=\"rui edit-container\">\n          {this.renderVisibilityButton()}\n          {this.renderEditButton()}\n        </span>\n      );\n    }\n\n    // If permissions don't allow the edit buttons to be shown and there are\n    // no child elements, then cancel rendering.\n    if (!this.props.children) {\n      return null;\n    }\n\n    // If permissions don't allow the edit buttons to be shown and there are\n    // child elements, render them normally\n    return (\n      Children.only(this.props.children)\n    );\n  }\n}\n\nEditContainer.propTypes = {\n  autoHideEditButton: PropTypes.bool,\n  children: PropTypes.node,\n  data: PropTypes.object,\n  field: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  hasPermission: PropTypes.bool,\n  onEditButtonClick: PropTypes.func,\n  onVisibilityButtonClick: PropTypes.func,\n  showsVisibilityButton: PropTypes.bool\n};\n\nfunction composer(props, onData) {\n  let hasPermission;\n  const viewAs = Reaction.getUserPreferences(\"reaction-dashboard\", \"viewAs\", \"administrator\");\n\n  if (props.disabled === true || viewAs === \"customer\") {\n    hasPermission = false;\n  } else {\n    hasPermission = Reaction.hasPermission(props.permissions);\n  }\n\n  onData(null, {\n    hasPermission\n  });\n}\n\nexport default composeWithTracker(composer)(EditContainer);\n","export { default as EditContainer } from \"./editContainer\";\nexport { default as TagListContainer } from \"./tagListContainer\";\nexport { default as AlertContainer } from \"./alertContainer\";\nexport { default as SortableItem } from \"./sortableItem\";\nexport { default as MediaGalleryContainer } from \"./mediaGalleryContainer\";\n","import React, { Component, PropTypes } from \"react\";\nimport Measure from \"react-measure\";\nimport update from \"react/lib/update\";\nimport { composeWithTracker } from \"/lib/api/compose\";\nimport { MediaGallery } from \"../components\";\nimport { Reaction } from \"/client/api\";\nimport { ReactionProduct } from \"/lib/api\";\nimport { Media, Revisions } from \"/lib/collections\";\n\nfunction uploadHandler(files) {\n  // TODO: It would be cool to move this logic to common ValidatedMethod, but\n  // I can't find a way to do this, because of browser's `FileList` collection\n  // and it `Blob`s which is our event.target.files.\n  // There is a way to do this: http://stackoverflow.com/a/24003932. but it's too\n  // tricky\n  const productId = ReactionProduct.selectedProductId();\n  const variant = ReactionProduct.selectedVariant();\n  if (typeof variant !== \"object\") {\n    return Alerts.add(\"Please, create new Variant first.\", \"danger\", {\n      autoHide: true\n    });\n  }\n  const variantId = variant._id;\n  const shopId = ReactionProduct.selectedProduct().shopId || Reaction.getShopId();\n  const userId = Meteor.userId();\n  let count = Media.find({\n    \"metadata.variantId\": variantId\n  }).count();\n  // TODO: we need to mark the first variant images somehow for productGrid.\n  // But how do we know that this is the first, not second or other variant?\n  // Question is open. For now if product has more than 1 top variant, everyone\n  // will have a chance to be displayed\n  const toGrid = variant.ancestors.length === 1;\n\n  for (const file of files) {\n    const fileObj = new FS.File(file);\n\n    fileObj.metadata = {\n      ownerId: userId,\n      productId: productId,\n      variantId: variantId,\n      shopId: shopId,\n      priority: count,\n      toGrid: +toGrid // we need number\n    };\n\n    Media.insert(fileObj);\n    count++;\n  }\n\n  return true;\n}\n\nclass MediaGalleryContainer extends Component {\n  // Load first image as featuredImage\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      featuredMedia: props.media[0],\n      dimensions: {\n        width: -1,\n        height: -1\n      }\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      featuredMedia: nextProps.media[0],\n      media: nextProps.media\n    });\n  }\n\n  handleDrop = (files) => {\n    uploadHandler(files);\n  }\n\n  handleRemoveMedia = (media) => {\n    const imageUrl = media.url();\n    const mediaId = media._id;\n\n    Alerts.alert({\n      title: \"Remove Media?\",\n      type: \"warning\",\n      showCancelButton: true,\n      imageUrl,\n      imageHeight: 150\n    }, (isConfirm) => {\n      if (isConfirm) {\n        Media.remove({ _id: mediaId }, (error) => {\n          if (error) {\n            Alerts.toast(error.reason, \"warning\", {\n              autoHide: 10000\n            });\n          }\n\n          // updateImagePriorities();\n        });\n      }\n      // show media as removed (since it will not disappear until changes are published\n    });\n  }\n\n  get allowFeaturedMediaHover() {\n    if (this.state.featuredMedia) {\n      return true;\n    }\n    return false;\n  }\n\n  get media() {\n    return (this.state && this.state.media) || this.props.media;\n  }\n\n  handleMouseEnterMedia = (event, media) => {\n    this.setState({\n      featuredMedia: media\n    });\n  }\n\n  handleMouseLeaveMedia = () => {\n    this.setState({\n      featuredMedia: undefined\n    });\n  }\n\n  handleMoveMedia = (dragIndex, hoverIndex) => {\n    const media = this.props.media[dragIndex];\n\n    // Apply new sort order to variant list\n    const newMediaOrder = update(this.props.media, {\n      $splice: [\n        [dragIndex, 1],\n        [hoverIndex, 0, media]\n      ]\n    });\n\n    // Set local state so the component does't have to wait for a round-trip\n    // to the server to get the updated list of variants\n    this.setState({\n      media: newMediaOrder\n    });\n\n    // Save the updated positions\n    Meteor.defer(() => {\n      newMediaOrder.forEach((mediaItem, index) => {\n        Media.update(mediaItem._id, {\n          $set: {\n            \"metadata.priority\": index\n          }\n        });\n      });\n    });\n  }\n\n  render() {\n    const { width, height } = this.state.dimensions;\n\n    return (\n      <Measure\n        onMeasure={(dimensions) => {\n          this.setState({ dimensions });\n        }}\n      >\n        <MediaGallery\n          allowFeaturedMediaHover={this.allowFeaturedMediaHover}\n          featuredMedia={this.state.featuredMedia}\n          onDrop={this.handleDrop}\n          onMouseEnterMedia={this.handleMouseEnterMedia}\n          onMouseLeaveMedia={this.handleMouseLeaveMedia}\n          onMoveMedia={this.handleMoveMedia}\n          onRemoveMedia={this.handleRemoveMedia}\n          {...this.props}\n          media={this.media}\n          mediaGalleryHeight={height}\n          mediaGalleryWidth={width}\n        />\n      </Measure>\n    );\n  }\n}\n\nfunction fetchMediaRevisions() {\n  const productId = ReactionProduct.selectedProductId();\n  const mediaRevisions = Revisions.find({\n    \"parentDocument\": productId,\n    \"documentType\": \"image\",\n    \"workflow.status\": {\n      $nin: [\"revision/published\"]\n    }\n  }).fetch();\n  return mediaRevisions;\n}\n\n// resort the media in\nfunction sortMedia(media) {\n  const sortedMedia = _.sortBy(media, function (m) { return m.metadata.priority;});\n  return sortedMedia;\n}\n\n// Search through revisions and if we find one for the image, stick it on the object\nfunction appendRevisionsToMedia(props, media) {\n  if (!Reaction.hasPermission(props.permission || [\"createProduct\"])) {\n    return media;\n  }\n  const mediaRevisions = fetchMediaRevisions();\n  const newMedia = [];\n  for (const image of media) {\n    image.revision = undefined;\n    for (const revision of mediaRevisions) {\n      if (revision.documentId === image._id) {\n        image.revision = revision;\n        image.metadata.priority = revision.documentData.priority;\n      }\n    }\n    newMedia.push(image);\n  }\n  return sortMedia(newMedia);\n}\n\nfunction composer(props, onData) {\n  let media;\n  let editable;\n  const viewAs = Reaction.getUserPreferences(\"reaction-dashboard\", \"viewAs\", \"administrator\");\n\n  if (!props.media) {\n    // Fetch media based on props\n  } else {\n    media = appendRevisionsToMedia(props, props.media);\n  }\n\n  if (viewAs === \"customer\") {\n    editable = false;\n  } else {\n    editable = Reaction.hasPermission(props.permission || [\"createProduct\"]);\n  }\n\n  onData(null, {\n    editable,\n    media\n  });\n}\n\nMediaGalleryContainer.propTypes = {\n  editable: PropTypes.bool,\n  id: PropTypes.string,\n  media: PropTypes.arrayOf(PropTypes.object),\n  placement: PropTypes.string\n};\n\nexport default composeWithTracker(composer)(MediaGalleryContainer);\n","import React, { PropTypes } from \"react\";\nimport { DragSource, DropTarget } from \"react-dnd\";\n\nconst cardSource = {\n  beginDrag(props) {\n    return {\n      index: props.index\n    };\n  }\n};\n\n/**\n * Specifies the props to inject into your component.\n * @param {DragSourceConnector} connect An onject containing functions to assign roles to a component's DOM nodes\n * @param {DragSourceMonitor} monitor An object containing functions that return information about drag state\n * @return {Object} Props for drag source\n */\nfunction collectDropSource(connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    connectDragPreview: connect.dragPreview(),\n    isDragging: monitor.isDragging()\n  };\n}\n\nfunction collectDropTarget(connect) {\n  return {\n    connectDropTarget: connect.dropTarget()\n  };\n}\n\nconst cardTarget = {\n  hover(props, monitor) {\n    const dragIndex = monitor.getItem().index;\n    const hoverIndex = props.index;\n\n    // Don't replace items with themselves\n    if (dragIndex === hoverIndex) {\n      return;\n    }\n\n    // Time to actually perform the action\n    props.onMove(dragIndex, hoverIndex);\n\n    // Note: we're mutating the monitor item here!\n    // Generally it's better to avoid mutations,\n    // but it's good here for the sake of performance\n    // to avoid expensive index searches.\n    monitor.getItem().index = hoverIndex;\n  }\n};\n\nexport default function ComposeSortableItem(itemType, SortableItemComponent) {\n  const SortableItem = (props) => {\n    return <SortableItemComponent {...props} />;\n  };\n\n  SortableItem.contextTypes = {\n    dragDropManager: PropTypes.object.isRequired\n  };\n\n  SortableItem.propTypes = {\n    // Injected by React DnD:\n    connectDragPreview: PropTypes.func.isRequired,\n    connectDragSource: PropTypes.func.isRequired,\n    connectDropTarget: PropTypes.func.isRequired,\n    isDragging: PropTypes.bool.isRequired\n  };\n\n  let decoratedComponent = SortableItem;\n  decoratedComponent = DragSource(itemType, cardSource, collectDropSource)(decoratedComponent);\n  decoratedComponent = DropTarget(itemType, cardTarget, collectDropTarget)(decoratedComponent);\n\n  return decoratedComponent;\n}\n","import React, { Component, PropTypes } from \"react\";\nimport debounce from \"lodash/debounce\";\nimport update from \"react/lib/update\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Reaction, i18next } from \"/client/api\";\nimport { composeWithTracker } from \"/lib/api/compose\";\nimport { TagList } from \"../components/tags\";\nimport { Tags } from \"/lib/collections\";\nimport { getTagIds } from \"/lib/selectors/tags\";\nimport { DragDropProvider } from \"/imports/plugins/core/ui/client/providers\";\n\n\nfunction updateSuggestions(term, { excludeTags }) {\n  const slug = Reaction.getSlug(term);\n\n  const selector = {\n    slug: new RegExp(slug, \"i\")\n  };\n\n  if (Array.isArray(excludeTags)) {\n    selector._id = {\n      $nin: excludeTags\n    };\n  }\n\n  const tags = Tags.find(selector).map((tag) => {\n    return {\n      label: tag.name\n    };\n  });\n\n  return tags;\n}\n\nclass TagListContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tagIds: props.tagIds || [],\n      tagsByKey: props.tagsByKey || {},\n      newTag: {\n        name: \"\"\n      },\n      suggestions: []\n    };\n\n    this.debounceUpdateTagOrder = debounce(() => {\n      Meteor.call(\n        \"products/updateProductField\",\n        this.props.product._id,\n        \"hashtags\",\n        this.state.tagIds\n      );\n    }, 500);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      tagIds: nextProps.tagIds || [],\n      tagsByKey: nextProps.tagsByKey || {}\n    });\n  }\n\n  get productId() {\n    if (this.props.product) {\n      return this.props.product._id;\n    }\n    return null;\n  }\n\n  canSaveTag(tag) {\n    // Blank tags cannot be saved\n    if (typeof tag.name === \"string\" && tag.name.trim().length === 0) {\n      return false;\n    }\n\n    // If the tag does not have an id, then allow the save\n    if (!tag._id) {\n      return true;\n    }\n\n    // Get the original tag from the props\n    // Tags from props are not mutated, and come from an outside source\n    const originalTag = this.props.tagsByKey[tag._id];\n\n    if (originalTag && originalTag.name !== tag.name) {\n      return true;\n    }\n\n    return false;\n  }\n\n  handleNewTagSave = (tag) => {\n    if (this.productId && this.canSaveTag(tag)) {\n      Meteor.call(\"products/updateProductTags\", this.productId, tag.name, null, (error) => {\n        if (error) {\n          return Alerts.toast(i18next.t(\"productDetail.tagExists\"), \"error\");\n        }\n\n        this.setState({\n          newTag: {\n            name: \"\"\n          },\n          suggestions: []\n        });\n\n        return true;\n      });\n    }\n  }\n\n  handleNewTagUpdate = (tag) => {\n    this.setState({\n      newTag: tag\n    });\n  }\n\n  handleTagSave = (tag) => {\n    if (this.productId && this.canSaveTag(tag)) {\n      Meteor.call(\"products/updateProductTags\", this.productId, tag.name, tag._id, (error) => {\n        if (error) {\n          return Alerts.toast(i18next.t(\"productDetail.tagExists\"), \"error\");\n        }\n\n        this.setState({\n          suggestions: []\n        });\n\n        return true;\n      });\n    }\n  }\n\n  handleTagRemove = (tag) => {\n    if (this.productId) {\n      Meteor.call(\"products/removeProductTag\", this.productId, tag._id, (error) => {\n        if (error) {\n          Alerts.toast(i18next.t(\"productDetail.tagInUse\"), \"error\");\n        }\n      });\n    }\n  }\n\n  handleTagUpdate = (tag) => {\n    const newState = update(this.state, {\n      tagsByKey: {\n        [tag._id]: {\n          $set: tag\n        }\n      }\n    });\n\n    this.setState(newState);\n  }\n\n  handleMoveTag = (dragIndex, hoverIndex) => {\n    const tag = this.state.tagIds[dragIndex];\n\n    // Apply new sort order to variant list\n    const newState = update(this.state, {\n      tagIds: {\n        $splice: [\n          [dragIndex, 1],\n          [hoverIndex, 0, tag]\n        ]\n      }\n    });\n\n    // Set local state so the component does't have to wait for a round-trip\n    // to the server to get the updated list of variants\n    this.setState(newState, () => {\n      // Save the updated positions\n      if (this.props.product) {\n        this.debounceUpdateTagOrder();\n      }\n    });\n  }\n\n  handleGetSuggestions = (suggestionUpdateRequest) => {\n    const suggestions = updateSuggestions(\n      suggestionUpdateRequest.value,\n      { excludeTags: this.state.tagIds }\n    );\n\n    this.setState({\n      suggestions: suggestions\n    });\n  }\n\n  handleClearSuggestions = () => {\n    this.setState({\n      suggestions: []\n    });\n  }\n\n  get tags() {\n    if (this.props.editable) {\n      return this.state.tagIds.map((tagId) => this.state.tagsByKey[tagId]);\n    }\n\n    return this.props.tagsAsArray;\n  }\n\n  render() {\n    return (\n      <DragDropProvider>\n        <TagList\n          newTag={this.state.newTag}\n          onClick={this.handleEditButtonClick}\n          onClearSuggestions={this.handleClearSuggestions}\n          onGetSuggestions={this.handleGetSuggestions}\n          onMoveTag={this.handleMoveTag}\n          onNewTagSave={this.handleNewTagSave}\n          onNewTagUpdate={this.handleNewTagUpdate}\n          onTagRemove={this.handleTagRemove}\n          onTagSave={this.handleTagSave}\n          onTagUpdate={this.handleTagUpdate}\n          suggestions={this.state.suggestions}\n          tags={this.tags}\n          tooltip=\"Unpublished changes\"\n          {...this.props}\n        />\n      </DragDropProvider>\n    );\n  }\n}\n\nTagListContainer.propTypes = {\n  children: PropTypes.node,\n  editable: PropTypes.bool,\n  hasPermission: PropTypes.bool,\n  product: PropTypes.object,\n  tagIds: PropTypes.arrayOf(PropTypes.string),\n  tagsAsArray: PropTypes.arrayOf(PropTypes.object),\n  tagsByKey: PropTypes.object\n};\n\nfunction composer(props, onData) {\n  let tags = props.tags;\n\n  if (props.product) {\n    if (_.isArray(props.product.hashtags)) {\n      tags = _.map(props.product.hashtags, function (id) {\n        return Tags.findOne(id);\n      });\n    }\n  }\n\n  let isEditable = props.editable;\n\n  if (typeof isEditable !== \"boolean\") {\n    isEditable = Reaction.hasPermission(props.permissions);\n  }\n\n  const tagsByKey = {};\n\n  if (Array.isArray(tags)) {\n    for (const tag of tags) {\n      tagsByKey[tag._id] = tag;\n    }\n  }\n\n  onData(null, {\n    isProductTags: props.product !== undefined,\n    tagIds: getTagIds({ tags }),\n    tagsByKey,\n    tagsAsArray: tags,\n    editable: isEditable\n  });\n}\n\nlet decoratedComponent = TagListContainer;\ndecoratedComponent = composeWithTracker(composer)(decoratedComponent);\n\nexport default decoratedComponent;\n","import classnames from \"classnames\";\n\nexport const templateClassName = (templateInstance, defaults, key) => {\n  const classNameData = templateInstance.data.classNames || {};\n  const classNameOverrides = classNameData[key];\n\n  if (_.isString(classNameOverrides)) {\n    return classnames(defaults, classNameOverrides);\n  }\n\n  return classnames({\n    ...defaults || {},\n    ...classNameOverrides\n  });\n};\n","// http://react-in-meteor.readthedocs.org/en/latest/react-template-helper/\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport _ from \"lodash\";\n\n// Empty template; logic in `onRendered` below\nTemplate.React = new Template(\"Template.React\", function () {\n  return [];\n});\n\n\nTemplate.React.onRendered(function () {\n  const parentTemplate = parentTemplateName();\n  const container = this.firstNode.parentNode;\n  this.container = container;\n\n  this.autorun(() => {\n    const data = Blaze.getData();\n\n    const comp = data && data.component;\n    if (!comp) {\n      throw new Error(\n        \"In template \" + parentTemplate + \", call to `{{> React ... }}` missing \" +\n          \"`component` argument.\");\n    }\n\n    const props = _.omit(data, \"component\");\n    ReactDOM.render(React.createElement(comp, props), container);\n  });\n});\n\nTemplate.React.onDestroyed(function () {\n  if (this.container) {\n    ReactDOM.unmountComponentAtNode(this.container);\n  }\n});\n\n// Gets the name of the template inside of which this instance of `{{> React ...}}`\n// is being used. Used to print more explicit error messages\nfunction parentTemplateName() {\n  let view = Blaze.getView();\n  if (!view || view.name !== \"Template.React\") {\n    throw new Error(\"Unexpected: called outside of Template.React\");\n  }\n  // find the first parent view which is a template or body\n  view = view.parentView;\n  while (view) {\n    const m = view.name.match(/^Template\\.(.*)/);\n    // check `view.name.match(/^Template\\./)` because iron-router (and\n    // maybe other packages) create a view named \"yield\" that has the\n    // `template` property set\n    if (view.template && view.name && m) {\n      return m[1];\n    } else if (view.name === \"body\") {\n      return \"<body>\";\n    }\n\n    view = view.parentView;\n  }\n\n  // not sure when this could happen\n  return \"<unknown>\";\n}\n","import React, { PropTypes } from \"react\";\n\nexport default function Admin() {\n  return (Component) => {\n    const AdminComponent = (props, context) => {\n      const { adminContext } = context;\n\n      return <Component adminContext={adminContext} {...props} />;\n    };\n\n    AdminComponent.contextTypes = {\n      adminContext: PropTypes.object.isRequired\n    };\n\n    return AdminComponent;\n  };\n}\n","import React, { Component, PropTypes, Children } from \"react\"; // eslint-disable-line\nimport { composeWithTracker } from \"/lib/api/compose\";\n\nclass AdminContextProvider extends Component {\n  static childContextTypes = {\n    adminContext: PropTypes.object.isRequired\n  };\n\n  static propTypes = {\n    adminContext: PropTypes.object.isRequired,\n    children: PropTypes.node\n  };\n\n  getChildContext() {\n    const { adminContext } = this.props;\n    return { adminContext };\n  }\n\n  render() {\n    // `Children.only` enables us not to add a <div /> for nothing\n    return Children.only(this.props.children);\n  }\n}\n\nfunction composer(props, onData) {\n  onData(null, {\n    adminContext: {\n      isAdminArea: true,\n      adminClassName: {\n        admin: true\n      }\n    }\n  });\n}\n\n\nexport default composeWithTracker(composer)(AdminContextProvider);\n","import React, { Component, PropTypes, Children } from \"react\"; // eslint-disable-line\nimport { DragDropManager } from \"dnd-core\";\nimport HTML5Backend from \"react-dnd-html5-backend\";\n\nconst defaultManager = new DragDropManager(HTML5Backend);\n\n// /**\n//  * This is singleton used to initialize only once dnd in our app.\n//  * If you initialized dnd and then try to initialize another dnd\n//  * context the app will break.\n//  * Here is more info: https://github.com/gaearon/react-dnd/issues/186\n//  *\n//  * The solution is to call Dnd context from this singleton this way\n//  * all dnd contexts in the app are the same.\n//  */\n// export default function getDndContext() {\n//   if (defaultManager) return defaultManager;\n//\n//   defaultManager = new DragDropManager(HTML5Backend);\n//\n//   return defaultManager;\n// }\n\nclass DragDropProvider extends Component {\n  getChildContext() {\n    return {\n      dragDropManager: defaultManager\n    };\n  }\n\n  render() {\n    // `Children.only` enables us not to add a <div /> for nothing\n    return Children.only(this.props.children);\n  }\n}\n\nDragDropProvider.childContextTypes = {\n  dragDropManager: PropTypes.object.isRequired\n};\n\nDragDropProvider.propTypes = {\n  children: PropTypes.node\n};\n\nexport default DragDropProvider;\n","export { default as Admin } from \"./admin\";\nexport { default as AdminContextProvider } from \"./adminContextProvider\";\nexport { default as Translatable } from \"./translatable\";\nexport { default as TranslationProvider } from \"./translationProvider\";\nexport { default as DragDropProvider } from \"./dragDropProvider\";\n","import React, { PropTypes } from \"react\";\n\nexport default function Translatable() {\n  return (Component) => {\n    const TranslatableComponent = (props, context) => {\n      const { translations } = context;\n\n      return <Component translations={translations} {...props} />;\n    };\n\n    TranslatableComponent.contextTypes = {\n      translations: PropTypes.object.isRequired\n    };\n\n    return TranslatableComponent;\n  };\n}\n","import React, { Component, PropTypes, Children } from \"react\"; // eslint-disable-line\nimport { composeWithTracker } from \"/lib/api/compose\";\nimport { i18nextDep } from \"/client/api\";\n\nclass TranslationProvider extends Component {\n  getChildContext() {\n    const { translations } = this.props;\n    return { translations };\n  }\n  render() {\n    // `Children.only` enables us not to add a <div /> for nothing\n    return Children.only(this.props.children);\n  }\n}\n\nTranslationProvider.childContextTypes = {\n  translations: PropTypes.object.isRequired\n};\n\nTranslationProvider.propTypes = {\n  children: PropTypes.node,\n  translations: PropTypes.object.isRequired\n};\n\nfunction composer(props, onData) {\n  i18nextDep.depend();\n\n  onData(null, {\n    translations: {\n      language: Session.get(\"language\")\n    }\n  });\n}\n\n\nexport default composeWithTracker(composer)(TranslationProvider);\n","export * from \"./helpers/helpers\";\nimport \"./helpers/react-template-helper\";\n\nimport \"./templates/dashboard/dashboard.html\";\nimport \"./templates/dashboard/dashboard.js\";\nimport \"./templates/themeDetails/themeDetails.html\";\nimport \"./templates/themeDetails/themeDetails.js\";\nimport \"./templates/themeEditor/themeEditor.html\";\nimport \"./templates/themeEditor/themeEditor.js\";\n\n// Import blaze components\nimport \"./components/button/button.html\";\nimport \"./components/button/button.js\";\n\nimport \"./components/cards/cardGroup.html\";\nimport \"./components/cards/cards.html\";\nimport \"./components/cards/cards.js\";\n\nimport \"./components/numericInput/numericInput.html\";\nimport \"./components/numericInput/numericInput.js\";\n\nimport \"./components/select/select.html\";\nimport \"./components/select/select.js\";\n\nimport \"./components/tags/tagItem.html\";\nimport \"./components/tags/tagItem.js\";\nimport \"./components/tags/tagList.html\";\nimport \"./components/tags/tagList.js\";\n\nimport \"./components/textfield/textfield.html\";\n\nimport \"./components/upload/upload.html\";\nimport \"./components/upload/upload.js\";\n\n// Safe css import for npm package\nimport \"nouislider-algolia-fork/src/nouislider.css\";\nimport \"nouislider-algolia-fork/src/nouislider.pips.css\";\nimport \"nouislider-algolia-fork/src/nouislider.tooltips.css\";\n","import { Reaction, Router } from \"/client/api\";\nimport { Media, Shops } from \"/lib/collections\";\n\nTemplate.coreNavigationBrand.helpers({\n  logo() {\n    const shop = Shops.findOne(Reaction.getShopId());\n\n    if (_.isArray(shop.brandAssets)) {\n      const brandAsset = _.find(shop.brandAssets, (asset) => asset.type === \"navbarBrandImage\");\n      return Media.findOne(brandAsset.mediaId);\n    }\n\n    return false;\n  }\n});\n\nTemplate.coreNavigationBrand.events({\n  \"click a.brand\"(event) {\n    event.preventDefault();\n    Router.go(\"/\");\n  }\n});\n","import { Shops } from \"/lib/collections\";\nimport { Session } from \"meteor/session\";\nimport { Template } from \"meteor/templating\";\n\n/**\n * i18nChooser helpers\n */\n\nTemplate.CoreNavigationLanguage.helpers({\n  languages: function () {\n    const languages = [];\n    const shop = Shops.findOne();\n    if (typeof shop === \"object\" && shop.languages) {\n      for (const language of shop.languages) {\n        if (language.enabled === true) {\n          language.translation = \"languages.\" + language.label.toLowerCase();\n          languages.push(language);\n        }\n      }\n      return languages;\n    }\n  },\n  active: function () {\n    if (Session.equals(\"language\", this.i18n)) {\n      return \"active\";\n    }\n  }\n});\n\n/**\n * i18nChooser events\n */\n\nTemplate.CoreNavigationLanguage.events({\n  \"click .i18n-language\": function (event) {\n    event.preventDefault();\n    return Session.set(\"language\", this.i18n);\n  }\n});\n","import { FlatButton } from \"/imports/plugins/core/ui/client/components\";\nimport { NotificationContainer } from \"/imports/plugins/included/notifications/client/containers\";\nimport { Reaction } from \"/client/api\";\nimport { Tags } from \"/lib/collections\";\nimport CartPanel from \"../../../../checkout/client/templates/cartPanel/container/cartPanelContainer\";\n\n\nTemplate.CoreNavigationBar.onCreated(function () {\n  this.state = new ReactiveDict();\n  const searchPackage = Reaction.Apps({ provides: \"ui-search\" });\n  if (searchPackage.length) {\n    this.state.set(\"searchEnabled\", true);\n    this.state.set(\"searchTemplate\", searchPackage[0].template);\n  } else {\n    this.state.set(\"searchEnabled\", false);\n  }\n});\n\n/**\n * layoutHeader events\n */\nTemplate.CoreNavigationBar.events({\n  \"click .navbar-accounts .dropdown-toggle\": function () {\n    return setTimeout(function () {\n      return $(\"#login-email\").focus();\n    }, 100);\n  },\n  \"click .header-tag, click .navbar-brand\": function () {\n    return $(\".dashboard-navbar-packages ul li\").removeClass(\"active\");\n  },\n  \"click .search\": function () {\n    const instance = Template.instance();\n    const searchTemplateName = instance.state.get(\"searchTemplate\");\n    const searchTemplate = Template[searchTemplateName];\n    Blaze.renderWithData(searchTemplate, {\n    }, $(\"html\").get(0));\n    $(\"body\").css(\"overflow\", \"hidden\");\n    $(\"#search-input\").focus();\n  },\n  \"click .notification-icon\": function () {\n    $(\"body\").css(\"overflow\", \"hidden\");\n    $(\"#notify-dropdown\").focus();\n  }\n});\n\nTemplate.CoreNavigationBar.helpers({\n  isSearchEnabled() {\n    const instance = Template.instance();\n    return instance.state.get(\"searchEnabled\");\n  },\n\n  searchTemplate() {\n    const instance = Template.instance();\n    if (instance.state.get(\"searchEnabled\")) {\n      return instance.state.get(\"searchTemplate\");\n    }\n  },\n\n  IconButtonComponent() {\n    return {\n      component: FlatButton,\n      icon: \"fa fa-search\",\n      kind: \"flat\"\n    };\n  },\n  notificationButtonComponent() {\n    return {\n      component: NotificationContainer\n    };\n  },\n  onMenuButtonClick() {\n    const instance = Template.instance();\n    return () => {\n      if (instance.toggleMenuCallback) {\n        instance.toggleMenuCallback();\n      }\n    };\n  },\n\n  tagNavProps() {\n    const instance = Template.instance();\n    const tags = Tags.find({\n      isTopLevel: true\n    }, {\n      sort: {\n        position: 1\n      }\n    }).fetch();\n\n    return {\n      name: \"coreHeaderNavigation\",\n      editable: Reaction.hasAdminAccess(),\n      isEditing: true,\n      tags: tags,\n      onToggleMenu(callback) {\n        // Register the callback\n        instance.toggleMenuCallback = callback;\n      }\n    };\n  },\n  cartPanel() {\n    return CartPanel;\n  }\n});\n","import \"./components/brand/brand.html\";\nimport \"./components/brand/brand.js\";\n\nimport \"./components/i18n/i18n.html\";\nimport \"./components/i18n/i18n.js\";\n\nimport \"./components/navbar/navbar.html\";\nimport \"./components/navbar/navbar.js\";\n","import { TagHelpers } from \"/imports/plugins/core/ui-tagnav/client/helpers\";\n\nTemplate.tagGroup.onRendered(() => {\n\n});\n\nTemplate.tagGroup.helpers({\n  className() {\n    const instance = Template.instance();\n    if (instance.data.blank) {\n      return \"create\";\n    }\n  },\n\n  tagGroupProps(groupTag) {\n    const instance = Template.instance();\n\n    return {\n      tag: groupTag,\n      isEditing: instance.data.isEditing,\n      onTagRemove(tag) {\n        instance.data.onTagRemove(tag, instance.data.parentTag);\n      },\n      onTagUpdate: instance.data.onTagUpdate\n    };\n  },\n\n  tagListProps(groupTag) {\n    const instance = Template.instance();\n\n    return {\n      parentTag: groupTag,\n      tags: TagHelpers.subTags(groupTag),\n      isEditing: instance.data.isEditing,\n      onTagCreate(tagName) {\n        if (instance.data.onTagCreate) {\n          instance.data.onTagCreate(tagName, instance.data.groupTag);\n        }\n      },\n      onTagRemove(tag) {\n        instance.data.onTagRemove(tag, instance.data.groupTag);\n      },\n      onTagSort(newTagsOrder) {\n        instance.data.onTagSort(newTagsOrder, instance.data.groupTag);\n      },\n      onTagDragAdd: instance.data.onTagDragAdd,\n      onTagUpdate: instance.data.onTagUpdate\n    };\n  }\n});\n","import Sortable from \"sortablejs\";\nimport { Template } from \"meteor/templating\";\nimport { ReactiveDict } from \"meteor/reactive-dict\";\nimport { Reaction } from \"/client/api\";\nimport { TagHelpers } from \"/imports/plugins/core/ui-tagnav/client/helpers\";\nimport { IconButton, Overlay } from \"/imports/plugins/core/ui/client/components\";\n\nconst NavbarStates = {\n  Orientation: \"stateNavbarOrientation\",\n  Position: \"stateNavbarPosition\",\n  Anchor: \"stateNavbarAnchor\",\n  Visible: \"stateNavbarVisible\"\n};\n\nconst NavbarOrientation = {\n  Vertical: \"vertical\",\n  Horizontal: \"horizontal\"\n};\n\nconst NavbarVisibility = {\n  Shown: \"shown\",\n  Hidden: \"hidden\"\n};\n\nconst NavbarPosition = {\n  Static: \"static\",\n  Fixed: \"fixed\"\n};\n\nconst NavbarAnchor = {\n  Top: \"top\",\n  Right: \"right\",\n  Bottom: \"bottom\",\n  Left: \"left\",\n  None: \"inline\"\n};\n\nconst TagNavHelpers = {\n  onTagCreate(tagName, parentTag) {\n    TagHelpers.createTag(tagName, undefined, parentTag);\n  },\n  onTagRemove(tag, parentTag) {\n    TagHelpers.removeTag(tag, parentTag);\n  },\n  onTagSort(tagIds, parentTag) {\n    TagHelpers.sortTags(tagIds, parentTag);\n  },\n  onTagDragAdd(movedTagId, toListId, toIndex, ofList) {\n    TagHelpers.moveTagToNewParent(movedTagId, toListId, toIndex, ofList);\n  },\n  onTagUpdate(tagId, tagName) {\n    TagHelpers.updateTag(tagId, tagName);\n  },\n  isMobile() {\n    return window.matchMedia(\"(max-width: 991px)\").matches;\n  },\n  tagById(tagId, tags) {\n    return _.find(tags, (tag) => tag._id === tagId);\n  },\n  hasSubTags(tagId, tags) {\n    const foundTag = this.tagById(tagId, tags);\n\n    if (foundTag) {\n      if (_.isArray(foundTag.relatedTagIds) && foundTag.relatedTagIds.length) {\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\nTemplate.tagNav.onCreated(function () {\n  this.state = new ReactiveDict();\n  this.state.setDefault({\n    attachedBodyListener: false,\n    isEditing: false,\n    selectedTag: null,\n    [NavbarStates.Visible]: false\n  });\n\n  this.moveItem = (array, fromIndex, toIndex) => {\n    array.splice(toIndex, 0, array.splice(fromIndex, 1)[0]);\n    return array;\n  };\n\n  this.toggleNavbarVisibility = () => {\n    const isVisible = this.state.get(NavbarStates.Visible);\n    this.state.set(NavbarStates.Visible, !isVisible);\n  };\n\n  this.closeNavbar = () => {\n    this.state.set(NavbarStates.Visible, false);\n  };\n\n  this.data.onToggleMenu(this.toggleNavbarVisibility);\n\n  if (this.data.name) {\n    document.body.addEventListener(`${this.data.name}_toggleMenuVisibility`, this.toggleNavbarVisibility);\n  }\n\n  this.attachBodyListener = () => {\n    document.body.addEventListener(\"mouseover\", this.closeDropdown);\n    this.state.set(\"attachedBodyListener\", true);\n  };\n\n  this.detachhBodyListener = () => {\n    document.body.removeEventListener(\"mouseover\", this.closeDropdown);\n    this.state.set(\"attachedBodyListener\", false);\n  };\n\n  this.closeDropdown = (event) => {\n    if ($(event.target).closest(\".navbar-item\").length === 0) {\n      this.closeDropdownTimeout = setTimeout(() => {\n        this.state.set(\"selectedTag\", null);\n        this.detachhBodyListener();\n      }, 500);\n    } else {\n      if (this.closeDropdownTimeout) {\n        clearTimeout(this.closeDropdownTimeout);\n      }\n    }\n  };\n\n  this.state.set(NavbarStates.Visibility, NavbarVisibility.Hidden);\n\n\n  this.onWindowResize = () => {\n    if (window.matchMedia(\"(max-width: 991px)\").matches) {\n      this.state.set(NavbarStates.Orientation, NavbarOrientation.Vertical);\n      this.state.set(NavbarStates.Position, NavbarPosition.Fixed);\n      this.state.set(NavbarStates.Anchor, NavbarAnchor.Left);\n    } else {\n      this.state.set(NavbarStates.Orientation, NavbarOrientation.Horizontal);\n      this.state.set(NavbarStates.Position, NavbarPosition.Static);\n      this.state.set(NavbarStates.Anchor, NavbarAnchor.None);\n      this.state.set(NavbarStates.Visible, false);\n    }\n  };\n});\n\nTemplate.tagNav.onRendered(() => {\n  const instance = Template.instance();\n  const list = instance.$(\".navbar-items\")[0];\n\n  $(window).on(\"resize\", instance.onWindowResize).trigger(\"resize\");\n\n  instance._sortable = Sortable.create(list, {\n    group: \"tags\",\n    handle: \".js-tagNav-item\",\n    onSort(event) {\n      const tagIds = instance.data.tags.map(item => {\n        if (item) {\n          return item._id;\n        }\n        return null;\n      });\n\n      const newTagsOrder = instance.moveItem(tagIds, event.oldIndex, event.newIndex);\n\n      if (newTagsOrder) {\n        TagNavHelpers.onTagSort(newTagsOrder, instance.data.parentTag);\n      }\n    },\n\n    // On add from another list\n    onAdd(event) {\n      const toListId = event.to.dataset.id;\n      const movedTagId = event.item.dataset.id;\n      const tagIds = instance.data.tags.map(item => {\n        if (item) {\n          return item._id;\n        }\n        return null;\n      });\n\n      TagNavHelpers.onTagDragAdd(movedTagId, toListId, event.newIndex, tagIds);\n    },\n\n    // Tag removed from list becuase it was dragged to a different list\n    onRemove(event) {\n      const movedTagId = event.item.dataset.id;\n      const foundTag = _.find(instance.data.tags, (tag) => {\n        return tag._id === movedTagId;\n      });\n\n      TagNavHelpers.onTagRemove(foundTag, instance.data.parentTag);\n    }\n  });\n});\n\nTemplate.tagNav.onDestroyed(function () {\n  // $(window).off(\"resize\", this.onWindowResize);\n});\n\n\nTemplate.tagNav.helpers({\n  EditButton() {\n    const instance = Template.instance();\n    const state = instance.state;\n    const isEditing = state.equals(\"isEditing\", true);\n\n    return {\n      component: IconButton,\n      bezelStyle: \"solid\",\n      primary: true,\n      icon: \"fa fa-pencil\",\n      onIcon: \"fa fa-check\",\n      toggle: true,\n      toggleOn: isEditing,\n      onClick() {\n        state.set(\"isEditing\", !isEditing);\n      }\n    };\n  },\n\n  OverlayComponent() {\n    const instance = Template.instance();\n    const isVisible = instance.state.get(NavbarStates.Visible);\n\n    return {\n      component: Overlay,\n      isVisible,\n      onClick() {\n        instance.closeNavbar();\n      }\n    };\n  },\n\n  navbarOrientation() {\n    return Template.instance().state.get(NavbarStates.Orientation);\n  },\n\n  navbarPosition() {\n    return Template.instance().state.get(NavbarStates.Position);\n  },\n\n  navbarAnchor() {\n    return Template.instance().state.get(NavbarStates.Anchor);\n  },\n\n  navbarVisibility() {\n    const isVisible = Template.instance().state.equals(NavbarStates.Visible, true);\n\n    if (isVisible) {\n      return \"open\";\n    }\n    return \"closed\";\n  },\n\n  navbarSelectedClassName(tag) {\n    const selectedTag = Template.instance().state.get(\"selectedTag\");\n\n    if (selectedTag) {\n      if (selectedTag._id === tag._id) {\n        return \"selected\";\n      }\n    }\n    return \"\";\n  },\n\n  hasDropdownClassName(tag) {\n    if (_.isArray(tag.relatedTagIds)) {\n      return \"has-dropdown\";\n    }\n    return null;\n  },\n\n  isEditing() {\n    return Template.instance().state.equals(\"isEditing\", true);\n  },\n\n  canEdit() {\n    return Template.instance().data.editable && Reaction.isPreview() === false;\n  },\n\n  handleMenuClose() {\n    const instance = Template.instance();\n\n    return () => {\n      instance.toggleNavbarVisibility();\n    };\n  },\n\n  tagTreeProps(parentTag) {\n    const instance = Template.instance();\n\n    return {\n      parentTag,\n      subTagGroups: TagHelpers.subTags(parentTag),\n      isEditing: instance.state.equals(\"isEditing\", true),\n      ...TagNavHelpers\n    };\n  },\n  tagProps(tag) {\n    const instance = Template.instance();\n    let isSelected = false;\n    if (instance.data.selectedTag && tag) {\n      isSelected = instance.data.selectedTag._id === tag._id;\n    }\n\n    return {\n      tag,\n      isEditing: instance.state.equals(\"isEditing\", true),\n      selectable: true,\n      isSelected,\n      className: \"js-tagNav-item\",\n      onTagSelect(selectedTag) {\n        if (JSON.stringify(selectedTag) === JSON.stringify(instance.state.get(\"selectedTag\"))) {\n          instance.state.set(\"selectedTag\", null);\n        } else {\n          instance.state.set(\"selectedTag\", selectedTag);\n        }\n      },\n      ...TagNavHelpers\n    };\n  },\n  blankTagProps() {\n    const instance = Template.instance();\n\n    return {\n      isEditing: instance.state.equals(\"isEditing\", true),\n      blank: true,\n      onTagCreate: TagNavHelpers.onTagCreate\n    };\n  }\n});\n\n\nTemplate.tagNav.events({\n  \"click .navbar-item .rui.tag.link\"(event, instance) {\n    if (TagNavHelpers.isMobile()) {\n      const tagId = event.target.dataset.id;\n      const tags = instance.data.tags;\n      const selectedTag = instance.state.get(\"selectedTag\");\n      const hasSubTags = TagNavHelpers.hasSubTags(tagId, tags);\n\n      if (hasSubTags === false) {\n        // click close button to make navbar left disappear\n        instance.closeNavbar();\n      } else {\n        event.preventDefault();\n      }\n\n      if (selectedTag && selectedTag._id === tagId) {\n        instance.state.set(\"selectedTag\", null);\n      } else if (hasSubTags) {\n        instance.state.set(\"selectedTag\", TagNavHelpers.tagById(tagId, tags));\n      }\n    }\n  },\n\n  \"click [data-event-action=close-tagnav-overlay]\"(event, instance) {\n    instance.closeNavbar();\n  },\n\n  \"mouseover .navbar-item, focus .navbar-item\"(event, instance) {\n    const tagId = event.currentTarget.dataset.id;\n    const tags = instance.data.tags;\n\n    if (TagNavHelpers.isMobile()) {\n      return;\n    }\n\n    // While in edit mode, don't trigger the hover hide/show menu\n    if (instance.state.equals(\"isEditing\", false)) {\n      // User mode\n      // Don't show dropdown if there are no subtags\n      if (TagNavHelpers.hasSubTags(tagId, tags) === false) {\n        instance.state.set(\"selectedTag\", null);\n        return;\n      }\n\n      // Otherwise, show the menu\n      // And Attach an event listener to the document body\n      // This will check to see if the dropdown should be closed if the user\n      // leaves the tag nav bar\n      instance.attachBodyListener();\n      instance.state.set(\"selectedTag\", TagNavHelpers.tagById(tagId, tags));\n    }\n  }\n});\n","import Sortable from \"sortablejs\";\nimport { TagHelpers } from \"/imports/plugins/core/ui-tagnav/client/helpers\";\n\nTemplate.tagTree.onRendered(() => {\n  const instance = Template.instance();\n  const list = instance.$(\".content\")[0];\n\n  instance._sortable = Sortable.create(list, {\n    group: \"tagGroup\",\n    handle: \".js-drag-handle\",\n    draggable: \".rui.grouptag\",\n    onSort(event) {\n      const tagIds = instance.data.subTagGroups.map(item => {\n        if (item) {\n          return item._id;\n        }\n      });\n\n      const newTagsOrder = TagHelpers.moveItem(tagIds, event.oldIndex, event.newIndex);\n\n      if (newTagsOrder) {\n        if (instance.data.onTagSort) {\n          instance.data.onTagSort(newTagsOrder, instance.data.parentTag);\n        }\n      }\n    },\n\n    // On add from another list\n    onAdd(event) {\n      const toListId = event.to.dataset.id;\n      const movedTagId = event.item.dataset.id;\n      const tagIds = instance.data.subTagGroups.map(item => {\n        if (item) {\n          return item._id;\n        }\n      });\n\n      if (instance.data.onTagDragAdd) {\n        instance.data.onTagDragAdd(movedTagId, toListId, event.newIndex, tagIds);\n      }\n    },\n\n    // Tag removed from list becuase it was dragged to a different list\n    onRemove(event) {\n      const movedTagId = event.item.dataset.id;\n\n      if (instance.data.onTagRemove) {\n        const foundTag = _.find(instance.data.subTagGroups, (tag) => {\n          return tag._id === movedTagId;\n        });\n\n        instance.data.onTagRemove(foundTag, instance.data.parentTag);\n      }\n    }\n  });\n});\n\nTemplate.tagTree.helpers({\n  isEditing() {\n    return Template.instance().data.isEditing;\n  },\n\n  tagGroupProps(groupTag) {\n    const instance = Template.instance();\n\n    return {\n      groupTag,\n      parentTag: instance.data.parentTag,\n      isEditing: instance.data.isEditing,\n      onTagCreate: instance.data.onTagCreate,\n      onTagDragAdd: instance.data.onTagDragAdd,\n      onTagRemove: instance.data.onTagRemove,\n      onTagSort: instance.data.onTagSort,\n      onTagUpdate: instance.data.onTagUpdate\n    };\n  },\n  newTagGroupProps(parentTag) {\n    const instance = Template.instance();\n\n    return {\n      blank: true,\n      onTagCreate(newGroupName) {\n        if (instance.data.onTagCreate) {\n          instance.data.onTagCreate(newGroupName, parentTag);\n        }\n      }\n    };\n  }\n});\n\n\nTemplate.tagTreeNewGroup.helpers({\n  props() {\n    const instance = Template.instance();\n\n    return {\n      blank: true,\n      onTagCreate: instance.data.onTagCreate\n    };\n  }\n});\n","export { TagHelpers } from \"./tags\";\n","import { Tags } from \"/lib/collections\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Session } from \"meteor/session\";\nimport { Template } from \"meteor/templating\";\n\n/**\n * Reaction TagNav shared helpers\n * @type {Object}\n */\nexport const TagHelpers = {\n  moveItem(oldArray, fromIndex, toIndex) {\n    const newArray = [...oldArray];\n    newArray.splice(toIndex, 0, newArray.splice(fromIndex, 1)[0]);\n    return newArray;\n  },\n\n  subTags(parentTag) {\n    if (_.isArray(parentTag.relatedTagIds)) {\n      const tags = Tags.find({\n        isTopLevel: false,\n        _id: {\n          $in: parentTag.relatedTagIds\n        }\n      }).fetch();\n\n      const subTags = parentTag.relatedTagIds.map((tagId) => {\n        return _.find(tags, (tagObject) => {\n          return tagObject._id === tagId;\n        });\n      });\n\n      return subTags;\n    }\n\n    return false;\n  },\n\n  currentTag() {\n    return Session.get(\"currentTag\");\n  },\n\n  getTags() {\n    let tags = [];\n\n    tags = Tags.find({\n      isTopLevel: true\n    }, {\n      sort: {\n        position: 1\n      }\n    }).fetch();\n    /*\n    if (this.tagIds) {\n      for (let relatedTagId of this.tagIds) {\n        if (!_.find(tags, {\n          _id: relatedTagId\n        })) {\n          tags.push(Tags.findOne(relatedTagId));\n        }\n      }\n    }*/\n\n    if (this.tag) {\n      Session.set(\"currentTag\", this.tag._id);\n    } else {\n      Session.set(\"currentTag\", \"\");\n    }\n\n    return tags;\n    // there are cases where\n    // we'll have no tags, and sort will error\n    // so we check length for safety\n    // if (tags) {\n    //   tags.sort(function (a, b) {\n    //     return a.position - b.position;\n    //   });\n    //   return tags;\n    // }\n  },\n\n  createTag(tagName, tagId, parentTag) {\n    let parentTagId;\n\n    if (parentTag) {\n      parentTagId = parentTag._id;\n    }\n\n    Meteor.call(\"shop/updateHeaderTags\", tagName, null, parentTagId,\n      function (error) {\n        if (error) {\n          Alerts.toast(i18next.t(\"productDetail.tagExists\"), \"error\");\n        }\n      });\n  },\n\n  updateTag(tagId, tagName, parentTagId) {\n    Meteor.call(\"shop/updateHeaderTags\", tagName, tagId, parentTagId,\n      function (error) {\n        if (error) {\n          Alerts.toast(i18next.t(\"productDetail.tagExists\"), \"error\");\n        }\n      });\n  },\n\n  /* eslint no-unused-vars: 0 */\n  //\n  //   TODO review toIndex, ofList variable implementation in tags.js moveTagToNewParent\n  //\n  moveTagToNewParent(movedTagId, toListId, toIndex, ofList) {\n    if (movedTagId) {\n      if (toListId) {\n        const result = Tags.update(toListId,\n          {\n            $addToSet: {\n              relatedTagIds: movedTagId\n            }\n          }\n        );\n\n        return result;\n      }\n\n      const result = Tags.update(movedTagId,\n        {\n          $set: {\n            isTopLevel: true\n          }\n        }\n      );\n\n      return result;\n    }\n    return 0;\n  },\n\n  sortTags(tagIds, parentTag) {\n    if (_.isArray(tagIds)) {\n      if (_.isEmpty(parentTag)) {\n        // Top level tags\n        for (const tagId of tagIds) {\n          Tags.update(tagId, {\n            $set: {\n              position: tagIds.indexOf(tagId)\n            }\n          });\n        }\n      } else {\n        // Sub tags\n        Tags.update(parentTag._id, {\n          $set: {\n            relatedTagIds: _.compact(tagIds)\n          }\n        });\n      }\n    }\n  },\n\n  removeTag(tag, parentTag) {\n    if (_.isEmpty(parentTag) === false) {\n      Tags.update(parentTag._id,\n        {\n          $pullAll: {\n            relatedTagIds: [tag._id]\n          }\n        }\n      );\n    } else if (tag.isTopLevel === true) {\n      Tags.update(tag._id,\n        {\n          $set: {\n            isTopLevel: false\n          }\n        }\n      );\n    }\n  }\n};\n\nTemplate.registerHelper(\"reactionSubTags\", TagHelpers.subTags);\n","import \"./components/tagGroup/tagGroup.html\";\nimport \"./components/tagGroup/tagGroup.js\";\n\nimport \"./components/tagNav/tagNav.html\";\nimport \"./components/tagNav/tagNav.js\";\n\nimport \"./components/tagTree/tagTree.html\";\nimport \"./components/tagTree/tagTree.js\";\n","Template.catalogSettings.helpers({\n  checked(enabled) {\n    if (enabled === true) {\n      return \"checked\";\n    }\n    return \"\";\n  },\n  shown(enabled) {\n    if (enabled !== true) {\n      return \"hidden\";\n    }\n    return \"\";\n  }\n});\n\nTemplate.catalogSettings.events({\n  /**\n   * settings update enabled status for services on change\n   * @param  {event} event    jQuery Event\n   * @return {void}\n   */\n  \"change input[name=enabled]\": (event) => {\n    const settingsKey = event.target.getAttribute(\"data-key\");\n    const packageId = event.target.getAttribute(\"data-id\");\n    const fields = [{\n      property: \"enabled\",\n      value: event.target.checked\n    }];\n\n    Meteor.call(\"registry/update\", packageId, settingsKey, fields);\n    Meteor.call(\"shop/togglePackage\", packageId, !event.target.checked);\n  }\n});\n","import \"./templates/settings.html\";\nimport \"./templates/settings.js\";\n","import EmailLogs from \"../containers/emailLogs\";\nimport EmailConfig from \"../containers/emailConfig\";\n\n\nTemplate.emailSettings.helpers({\n  EmailConfig() {\n    return {\n      component: EmailConfig\n    };\n  },\n  EmailLogs() {\n    return {\n      component: EmailLogs\n    };\n  }\n});\n","export { default as logs } from \"./logs\";\nexport { default as settings } from \"./settings\";\n","import { i18next } from \"/client/api\";\n\nexport default {\n  /**\n   * Restart a failed or cancelled email job\n   * @param {Object} email - the email job object\n   * @return {null} triggers an alert\n   */\n  resend(email) {\n    Meteor.call(\"emails/retryFailed\", email._id, (err) => {\n      if (err) {\n        return Alerts.toast(i18next.t(\"app.error\", { error: err.reason }), \"error\");\n      }\n      return Alerts.toast(i18next.t(\"mail.alerts.resendSuccess\", { email: email.data.to }), \"success\");\n    });\n  }\n};\n","import Alert from \"sweetalert2\";\nimport { i18next } from \"/client/api\";\n\nexport default {\n  /**\n   * Save email settings\n   * @param {Object} settings - object of mail provider settings\n   * @param {Function} callback - optional callback\n   * @return {Boolean} returns true if all fields provided and update method called\n   */\n  saveSettings(settings, callback) {\n    const { service, host, port, user, password } = settings;\n\n    if (!service) {\n      Alert(i18next.t(\"app.error\"), i18next.t(\"mail.alerts.missingService\"), \"error\");\n      return callback();\n    }\n\n    if (service !== \"custom\" && (!user || !password)) {\n      Alert(i18next.t(\"app.error\"), i18next.t(\"mail.alerts.userPassRequired\", { service }), \"error\");\n      return callback();\n    }\n\n    if (service === \"custom\" && (!host || !port || !user || !password)) {\n      Alert(i18next.t(\"app.error\"), i18next.t(\"mail.alerts.allFieldsRequired\"), \"error\");\n      return callback();\n    }\n\n    // make sure port is a Number\n    settings.port = Number(settings.port);\n\n    if (isNaN(settings.port)) {\n      Alert(i18next.t(\"app.error\"), i18next.t(\"mail.alerts.portNaN\"), \"error\");\n      return callback();\n    }\n\n    const save = () => {\n      Meteor.call(\"email/saveSettings\", settings, (err) => {\n        if (err) {\n          return Alert(i18next.t(\"app.error\"),\n            i18next.t(\"mail.alerts.saveFailed\", { error: err.reason }),\n            \"error\");\n        }\n        return Alert({\n          title: i18next.t(\"app.success\"),\n          text: i18next.t(\"mail.alerts.saveSuccess\"),\n          type: \"success\",\n          timer: 1700\n        }).catch(() => null);\n      });\n    };\n\n    // check if the settings work first\n    Meteor.call(\"email/verifySettings\", settings, (error) => {\n      callback();\n      // if the connection fails\n      if (error) {\n        Alert({\n          title: i18next.t(\"mail.alerts.connectionFailed\"),\n          text: i18next.t(\"mail.alerts.saveAnyway\"),\n          type: \"warning\",\n          showCancelButton: true,\n          cancelButtonText: i18next.t(\"app.cancel\"),\n          confirmButtonColor: \"#DD6B55\",\n          confirmButtonText: i18next.t(\"app.save\")\n        }).then(() => save()).catch(() => true);\n      } else {\n        save();\n      }\n    });\n\n    return true;\n  }\n};\n","import React, { Component, PropTypes } from \"react\";\nimport \"./emailConfig.css\";\nimport { Card, CardHeader, CardBody, CardGroup, Icon, Translation } from \"/imports/plugins/core/ui/client/components\";\nimport EmailSettings from \"../containers/emailSettings\";\n\n\nclass EmailConfig extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showPassword: false,\n      showSettings: false\n    };\n\n    this.togglePassword = this.togglePassword.bind(this);\n    this.toggleSettings = this.toggleSettings.bind(this);\n  }\n\n\n  togglePassword() {\n    this.setState({\n      showPassword: !this.state.showPassword\n    });\n  }\n\n  toggleSettings() {\n    this.setState({\n      showSettings: !this.state.showSettings\n    });\n  }\n\n  renderSettingsDisplay() {\n    const { settings, status } = this.props;\n    const { service, host, port, user, password } = settings;\n    const { showPassword } = this.state;\n\n    const NotSet = () => <span data-i18n=\"admin.settings.fieldNotSet\">Not set</span>;\n\n    return (\n      <div>\n        <div className=\"pull-right\">\n          <a onClick={this.toggleSettings}><Icon icon=\"gear\"/></a>\n        </div>\n        <div className=\"email-config-status\">\n          <strong data-i18n=\"admin.settings.status\">Status</strong>: {status ?\n              <i className={`fa fa-circle ${status}`} />\n            : <i className={\"fa fa-refresh fa-spin\"} />}\n        </div>\n        <div>\n          <strong data-i18n=\"admin.settings.service\">Service</strong>: {service || <NotSet/>}\n        </div>\n        <div className=\"truncate\">\n          <strong data-i18n=\"admin.settings.host\">Host</strong>: {host || <NotSet/>}\n        </div>\n        <div>\n          <strong data-i18n=\"admin.settings.port\">Port</strong>: {port || <NotSet/>}\n        </div>\n        <div className=\"truncate\">\n          <strong data-i18n=\"admin.settings.user\">User</strong>: {user || <NotSet/>}\n        </div>\n        <div>\n          <strong data-i18n=\"admin.settings.password\">Password</strong>:&nbsp;&nbsp;\n          {password ?\n            <span>\n              {showPassword ? password : \"********\"}\n              <a onClick={this.togglePassword}>\n                <span style={{ marginLeft: \"1rem\" }}>\n                  <em>{showPassword ?\n                      <span data-i18n=\"admin.settings.passwordHide\">Hide</span>\n                    : <span data-i18n=\"admin.settings.passwordShow\">Show</span>}\n                  </em>\n                </span>\n              </a>\n            </span>\n            : <NotSet/>}\n        </div>\n      </div>\n    );\n  }\n\n  renderSettingsUpdate() {\n    const { showSettings } = this.state;\n\n    if (showSettings === true) {\n      return (\n        <div>\n          <hr />\n          <h4>\n            <Translation\n              defaultValue={\"Edit Settings\"}\n              i18nKey={\"admin.settings.editSettings\"}\n            />\n          </h4>\n          <EmailSettings showSettings={showSettings} />\n        </div>\n      );\n    }\n\n    return null;\n  }\n\n  render() {\n    return (\n      <CardGroup>\n        <Card\n          expanded={true}\n        >\n          <CardHeader\n            actAsExpander={true}\n            i18nKeyTitle=\"admin.settings.mailProvider\"\n            title=\"Mail Provider\"\n          />\n          <CardBody expandable={true}>\n            {this.renderSettingsDisplay()}\n            {this.renderSettingsUpdate()}\n          </CardBody>\n        </Card>\n      </CardGroup>\n    );\n  }\n}\n\nEmailConfig.propTypes = {\n  settings: PropTypes.shape({\n    host: PropTypes.string,\n    password: PropTypes.string,\n    port: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string\n    ]),\n    service: PropTypes.string,\n    user: PropTypes.string\n  }),\n  status: PropTypes.string\n};\n\nexport default EmailConfig;\n","import React, { Component, PropTypes } from \"react\";\nimport { Card, CardHeader, CardBody, CardGroup, Loading } from \"/imports/plugins/core/ui/client/components\";\nimport MeteorGriddle from \"/imports/plugins/core/ui-grid/client/griddle\";\nimport EmailTableColumn from \"./emailTableColumn\";\nimport { Jobs } from \"/lib/collections\";\nimport { i18next } from \"/client/api\";\nimport \"./emailConfig.css\";\n\n\nclass EmailLogs extends Component {\n  renderEmailsTable() {\n    const filteredFields = [\"data.to\", \"updated\", \"data.subject\", \"status\"];\n    const filteredFieldsColumns = [\"data.to\", \"updated\", \"data.subject\", \"status\"];\n    const noDataMessage = i18next.t(\"admin.logs.noEmails\");\n\n    // helper adds a class to every grid row\n    const customRowMetaData = {\n      bodyCssClassName: () =>  {\n        return \"email-grid-row\";\n      }\n    };\n\n    // add i18n handling to headers\n    const customColumnMetadata = [];\n    filteredFields.forEach(function (field) {\n      const columnMeta = {\n        columnName: field,\n        displayName: i18next.t(`admin.logs.headers.${field}`),\n        customComponent: EmailTableColumn\n      };\n      customColumnMetadata.push(columnMeta);\n    });\n\n\n    return (\n      <MeteorGriddle\n        publication=\"Emails\"\n        collection={Jobs}\n        matchingResultsCount=\"emails-count\"\n        showFilter={true}\n        useGriddleStyles={false}\n        rowMetadata={customRowMetaData}\n        filteredFields={filteredFields}\n        columns={filteredFieldsColumns}\n        noDataMessage={noDataMessage}\n        columnMetadata={customColumnMetadata}\n        externalLoadingComponent={Loading}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <CardGroup>\n        <Card\n          expanded={true}\n        >\n          <CardHeader\n            actAsExpander={true}\n            i18nKeyTitle=\"admin.logs.headers.emailLogs\"\n            title=\"Email Logs\"\n          />\n          <CardBody expandable={true}>\n            {this.renderEmailsTable()}\n          </CardBody>\n        </Card>\n      </CardGroup>\n    );\n  }\n}\n\nEmailLogs.propTypes = {\n  emails: PropTypes.arrayOf(PropTypes.shape({\n    _id: PropTypes.string.isRequired,\n    created: PropTypes.instanceOf(Date).isRequired,\n    data: PropTypes.shape({\n      to: PropTypes.string.isRequired,\n      subject: PropTypes.string.isRequired\n    }),\n    status: PropTypes.string.isRequired\n  })),\n  limit: PropTypes.string\n};\n\nexport default EmailLogs;\n","import React, { Component, PropTypes } from \"react\";\nimport { Button, Select, TextField } from \"/imports/plugins/core/ui/client/components\";\n\nclass EmailSettings extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      settings: props.settings,\n      isSaving: false\n    };\n\n    this.handleStateChange = this.handleStateChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n  }\n\n  handleStateChange(e) {\n    const { settings } = this.state;\n    settings[e.target.name] = e.target.value;\n    this.setState({ settings });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const { saveSettings } = this.props;\n    const { settings } = this.state;\n    this.setState({ isSaving: true });\n    saveSettings(settings, () => this.setState({ isSaving: false }));\n  }\n\n  handleSelect(e) {\n    const { settings } = this.state;\n    settings.service = e;\n    this.setState({ settings });\n  }\n\n  render() {\n    const { providers } = this.props;\n    const { settings, isSaving } = this.state;\n\n    const emailProviders = providers.map((name) => (\n      { label: name, value: name }\n    ));\n\n    emailProviders.unshift({ label: \"Custom\", value: \"custom\" });\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <Select\n          clearable={false}\n          label=\"Service\"\n          i18nKeyLabel=\"admin.settings.providerName\"\n          placeholder=\"Select a Service\"\n          i18nKeyPlaceholder=\"mail.settings.selectService\"\n          name=\"service\"\n          onChange={this.handleSelect}\n          options={emailProviders}\n          value={settings.service || \"\"}\n        />\n        {settings.service === \"custom\" &&\n          <div>\n            <TextField\n              label=\"Host\"\n              i18nKeyLabel=\"mail.settings.host\"\n              type=\"text\"\n              name=\"host\"\n              value={settings.host}\n              onChange={this.handleStateChange}\n            />\n          <TextField\n            label=\"Port\"\n            i18nKeyLabel=\"mail.settings.port\"\n            type=\"text\"\n            name=\"port\"\n            value={settings.port}\n            onChange={this.handleStateChange}\n          />\n          </div>\n        }\n        <TextField\n          label=\"User\"\n          i18nKeyLabel=\"mail.settings.user\"\n          type=\"text\"\n          name=\"user\"\n          value={settings.user}\n          onChange={this.handleStateChange}\n        />\n        <TextField\n          label=\"Password\"\n          i18nKeyLabel=\"mail.settings.password\"\n          type=\"password\"\n          name=\"password\"\n          value={settings.password}\n          onChange={this.handleStateChange}\n        />\n        <Button\n          primary={true}\n          bezelStyle=\"solid\"\n          className=\"pull-right\"\n          type=\"submit\"\n          disabled={isSaving}\n        >\n          {isSaving ?\n              <i className=\"fa fa-refresh fa-spin\"/>\n            : <span data-i18n=\"app.save\">Save</span>}\n        </Button>\n      </form>\n    );\n  }\n}\n\nEmailSettings.propTypes = {\n  providers: PropTypes.arrayOf(PropTypes.string).isRequired,\n  saveSettings: PropTypes.func.isRequired,\n  settings: PropTypes.shape({\n    service: PropTypes.string,\n    host: PropTypes.string,\n    port: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    user: PropTypes.string,\n    password: PropTypes.string\n  })\n};\n\nexport default EmailSettings;\n","import React, { Component, PropTypes } from \"react\";\nimport moment from \"moment\";\nimport { Icon } from \"/imports/plugins/core/ui/client/components\";\nimport { i18next } from \"/client/api\";\n\nclass EmailTableColumn extends Component {\n  static propTypes = {\n    data: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.instanceOf(Date)\n    ]),\n    metadata: PropTypes.object,\n    rowData: PropTypes.object\n  }\n\n  handleAction = () => {\n    const emailId = this.props.rowData._id;\n    const emailAddress = this.props.rowData.data.to;\n\n    Meteor.call(\"emails/retryFailed\", emailId, (err) => {\n      if (err) {\n        return Alerts.toast(i18next.t(\"app.error\", { error: err.reason }), \"error\");\n      }\n      return Alerts.toast(i18next.t(\"mail.alerts.resendSuccess\", { email: emailAddress }), \"success\");\n    });\n  }\n\n  render() {\n    const renderColumn = this.props.metadata.columnName;\n\n    if (renderColumn === \"status\") {\n      if (this.props.data === \"completed\") {\n        return (\n          <span>\n            <Icon icon=\"fa fa-circle\" className=\"pull-left valid\" />\n          </span>\n        );\n      }\n      return (\n        <span>\n          <Icon icon=\"fa fa-circle\" className=\"pull-left error\" />\n          <span onClick={this.handleAction} title={this.props.data}>\n            <Icon icon=\"fa fa-share\" className=\"pull-right\" />\n          </span>\n        </span>\n      );\n    }\n    if (renderColumn === \"updated\") {\n      const createdDate = moment(this.props.data).format(\"LLL\");\n      return (\n        <span>{createdDate}</span>\n      );\n    }\n    return (\n      <span>{this.props.data}</span>\n    );\n  }\n}\n\nexport default EmailTableColumn;\n","import { useDeps } from \"react-simple-di\";\nimport getServiceConfig from \"nodemailer-wellknown\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Reaction } from \"/client/api\";\nimport { Loading } from \"/imports/plugins/core/ui/client/components\";\nimport actions from \"../actions\";\nimport EmailConfig from \"../components/emailConfig\";\nimport { composeWithTracker, merge } from \"/lib/api/compose\";\n\nconst composer = ({}, onData) => {\n  if (Meteor.subscribe(\"Packages\").ready()) {\n    const shopSettings = Reaction.getShopSettings();\n    const settings = shopSettings.mail || {};\n\n    if (settings.service && settings.service !== \"custom\") {\n      const config = getServiceConfig(settings.service);\n\n      // show localhost for test providers like Maildev that have no host\n      settings.host = config.host || \"localhost\";\n      settings.port = config.port;\n    }\n\n    const { service, host, port, user, password } = settings;\n\n    // if all settings exist, check if they work\n    if (service && host && port && user && password) {\n      Meteor.call(\"email/verifySettings\", (error) => {\n        if (error) {\n          return onData(null, { settings, status: \"error\", error: error.reason });\n        }\n        return onData(null, { settings, status: \"valid\", error: null });\n      });\n    } else {\n      onData(null, { settings, status: \"error\", error: null });\n    }\n  }\n};\n\nconst depsMapper = () => ({\n  toggleSettings: actions.settings.toggleSettings\n});\n\nexport default merge(\n  composeWithTracker(composer, Loading),\n  useDeps(depsMapper)\n)(EmailConfig);\n","import { useDeps } from \"react-simple-di\";\nimport { Meteor } from \"meteor/meteor\";\nimport actions from \"../actions\";\nimport EmailLogs from \"../components/emailLogs\";\nimport { Loading } from \"/imports/plugins/core/ui/client/components\";\nimport { Jobs } from \"/lib/collections\";\nimport { composeWithTracker, merge } from \"/lib/api/compose\";\n\nconst composer = ({}, onData) => {\n  if (Meteor.subscribe(\"Emails\").ready()) {\n    const emails = Jobs.find().fetch();\n    onData(null, { emails });\n  }\n};\n\nconst depsMapper = () => ({\n  resend: actions.logs.resend\n});\n\nexport default merge(\n  composeWithTracker(composer, Loading),\n  useDeps(depsMapper)\n)(EmailLogs);\n","import { useDeps } from \"react-simple-di\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Reaction } from \"/client/api\";\nimport { Loading } from \"/imports/plugins/core/ui/client/components\";\nimport actions from \"../actions\";\nimport EmailSettings from \"../components/emailSettings\";\nimport { composeWithTracker, merge } from \"/lib/api/compose\";\n\nconst providers = Object.keys(require(\"nodemailer-wellknown/services.json\"));\n\nconst composer = ({}, onData) => {\n  if (Meteor.subscribe(\"Packages\").ready()) {\n    const settings = Reaction.getShopSettings().mail || {};\n\n    const { service, host, port, user, password } = settings;\n\n    if (host && port && user && password && !service) {\n      settings.service = \"custom\";\n    }\n\n    onData(null, { providers, settings });\n  }\n};\n\nconst depsMapper = () => ({\n  saveSettings: actions.settings.saveSettings\n});\n\nexport default merge(\n  composeWithTracker(composer, Loading),\n  useDeps(depsMapper)\n)(EmailSettings);\n","import \"./templates/email.html\";\nimport \"./templates/email.js\";\n","import SearchContainer from \"../containers/settingsContainer.js\";\n\nTemplate.revisionControlSettings.helpers({\n  SearchContainerComponent() {\n    return {\n      component: SearchContainer\n    };\n  }\n});\n","import React, { Component, PropTypes } from \"react\";\nimport {\n  Button,\n  FlatButton,\n  IconButton,\n  Divider,\n  DropDownMenu,\n  MenuItem,\n  ToolbarGroup,\n  Switch,\n  Icon\n} from \"/imports/plugins/core/ui/client/components\";\nimport SimpleDiff from \"./simpleDiff\";\nimport { Translatable } from \"/imports/plugins/core/ui/client/providers\";\n\n/** TMP **/\nimport { Reaction } from \"/client/api\";\n\nclass PublishControls extends Component {\n  static propTypes = {\n    documentIds: PropTypes.arrayOf(PropTypes.string),\n    documents: PropTypes.arrayOf(PropTypes.object),\n    isEnabled: PropTypes.bool,\n    isPreview: PropTypes.bool,\n    onAction: PropTypes.func,\n    onAddProduct: PropTypes.func,\n    onPublishClick: PropTypes.func,\n    onViewContextChange: PropTypes.func,\n    onVisibilityChange: PropTypes.func,\n    revisions: PropTypes.arrayOf(PropTypes.object),\n    showViewAsControls: PropTypes.bool,\n    translation: PropTypes.shape({\n      lang: PropTypes.string\n    })\n  }\n\n  static defaultProps = {\n    showViewAsControls: true\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showDiffs: false\n    };\n\n    this.handleToggleShowChanges = this.handleToggleShowChanges.bind(this);\n    this.handlePublishClick = this.handlePublishClick.bind(this);\n  }\n\n  handleToggleShowChanges() {\n    this.setState({\n      showDiffs: !this.state.showDiffs\n    });\n  }\n\n  handlePublishClick() {\n    if (this.props.onPublishClick) {\n      this.props.onPublishClick(this.props.revisions);\n    }\n  }\n\n  handleVisibilityChange = (event, value) => {\n    if (this.props.onVisibilityChange) {\n      let isDocumentVisible = false;\n\n      if (value === \"public\") {\n        isDocumentVisible = true;\n      }\n\n      this.props.onVisibilityChange(event, isDocumentVisible, this.props.documentIds);\n    }\n  }\n\n  handleAction = (event, value) => {\n    if (this.props.onAction) {\n      this.props.onAction(event, value, this.props.documentIds);\n    }\n  }\n\n  onViewContextChange = (event, isChecked) => {\n    if (typeof this.props.onViewContextChange === \"function\") {\n      this.props.onViewContextChange(event, isChecked ? \"customer\" : \"administrator\");\n    }\n  }\n\n  get showChangesButtonLabel() {\n    if (!this.showDiffs) {\n      return \"Show Changes\";\n    }\n\n    return \"Hide Changes\";\n  }\n\n  get showChangesButtoni18nKeyLabel() {\n    if (!this.showDiffs) {\n      return \"app.showChanges\";\n    }\n\n    return \"app.hideChanges\";\n  }\n\n  get revisionIds() {\n    if (this.hasRevisions) {\n      return this.props.revisions.map(revision => revision._id);\n    }\n    return false;\n  }\n\n  get hasRevisions() {\n    return Array.isArray(this.props.revisions) && this.props.revisions.length;\n  }\n\n  get diffs() {\n    return this.props.revisions;\n  }\n\n  get showDiffs() {\n    return this.diffs && this.state.showDiffs;\n  }\n\n  get isVisible() {\n    if (Array.isArray(this.props.revisions) && this.props.revisions.length) {\n      const primaryRevision = this.props.revisions[0];\n\n      if (primaryRevision.documentData.isVisible) {\n        return \"public\";\n      }\n    } else if (Array.isArray(this.props.documents) && this.props.documents.length) {\n      const primaryDocument = this.props.documents[0];\n\n      if (primaryDocument.isVisible) {\n        return \"public\";\n      }\n    }\n\n    return \"private\";\n  }\n\n  /**\n   * Getter hasChanges\n   * @return {Boolean} one or more revision has changes\n   */\n  get hasChanges() {\n    // Verify we even have any revision at all\n    if (this.hasRevisions) {\n      // Loop through all revisions to determine if they have changes\n      const diffHasActualChanges = this.props.revisions.map((revision) => {\n        // We probably do have chnages to publish\n        // Note: Sometimes \"updatedAt\" will cause false positives, but just incase, lets\n        // enable the publish button anyway.\n        if (Array.isArray(revision.diff) && revision.diff.length || revision.documentType !== \"product\") {\n          return true;\n        }\n\n        // If all else fails, we will disable the button\n        return false;\n      });\n\n      // If even one revision has changes we should enable the publish button\n      return diffHasActualChanges.some((element) => {\n        return element === true;\n      });\n    }\n\n    // No revisions, no publishing\n    return false;\n  }\n\n  renderChanges() {\n    if (this.showDiffs) {\n      const diffs = this.props.revisions.map((revision) => {\n        return <SimpleDiff diff={revision.diff} key={revision._id} />;\n      });\n\n      return (\n        <div>\n          {diffs}\n        </div>\n      );\n    }\n    return null;\n  }\n\n  renderDeletionStatus() {\n    if (this.hasChanges) {\n      if (this.props.revisions[0].documentData.isDeleted) {\n        return (\n          <Button\n            label=\"Archived\"\n            onClick={this.handleRestore}\n            status=\"danger\"\n            i18nKeyLabel=\"app.archived\"\n          />\n        );\n      }\n    }\n\n    return null;\n  }\n\n  renderPublishButton() {\n    const buttonProps = {};\n\n    if (Array.isArray(this.props.documentIds) && this.props.documentIds.length > 1) {\n      buttonProps.label = \"Publish All\";\n      buttonProps.i18nKeyLabel = \"toolbar.publishAll\";\n    }\n\n    return (\n      <Button\n        bezelStyle=\"outline\"\n        disabled={this.hasChanges === false}\n        label=\"Publish\"\n        onClick={this.handlePublishClick}\n        status=\"success\"\n        tooltip={\"This product has changes that need to be published before they are visible to your customers.\"}\n        i18nKeyLabel=\"productDetailEdit.publish\"\n        {...buttonProps}\n      />\n    );\n  }\n\n  renderMoreOptionsButton() {\n    return (\n      <DropDownMenu\n        buttonElement={<IconButton icon={\"fa fa-ellipsis-v\"}/>}\n        handleMenuItemChange={this.handleAction}\n      >\n        <MenuItem label=\"Administrator\" value=\"administrator\" />\n        <MenuItem label=\"Customer\" value=\"customer\" />\n        <Divider />\n        <MenuItem\n          i18nKeyLabel=\"app.public\"\n          icon=\"fa fa-unlock\"\n          label=\"Public\"\n          selectLabel=\"Public\"\n          value=\"public\"\n        />\n        <MenuItem\n          i18nKeyLabel=\"app.private\"\n          label=\"Private\"\n          icon=\"fa fa-lock\"\n          selectLabel=\"Public\"\n          value=\"private\"\n        />\n        <Divider />\n        <MenuItem\n          disabled={this.hasChanges === false}\n          i18nKeyLabel=\"revisions.discardChanges\"\n          icon=\"fa fa-undo\"\n          label=\"Discard Changes\"\n          value=\"discard\"\n        />\n        <Divider />\n        <MenuItem\n          i18nKeyLabel=\"app.archive\"\n          icon=\"fa fa-trash-o\"\n          label=\"Archive\"\n          value=\"archive\"\n        />\n      </DropDownMenu>\n    );\n  }\n\n  renderViewControls() {\n    if (this.props.showViewAsControls) {\n      let tooltip = \"Private\";\n      let i18nKeyTooltip = \"app.private\";\n\n      if (this.isVisible === \"public\") {\n        tooltip = \"Public\";\n        i18nKeyTooltip = \"app.public\";\n      }\n\n      return (\n        <FlatButton\n          i18nKeyTooltip={i18nKeyTooltip}\n          icon=\"fa fa-eye-slash\"\n          onIcon=\"fa fa-eye\"\n          toggle={true}\n          tooltip={tooltip}\n          value=\"public\"\n          onValue=\"private\"\n          toggleOn={this.isVisible === \"public\"}\n          onToggle={this.handleVisibilityChange}\n        />\n      );\n    }\n\n    return null;\n  }\n\n  renderUndoButton() {\n    return (\n      <FlatButton\n        disabled={this.hasChanges === false}\n        tooltip=\"Discard Changes\"\n        i18nKeyTooltip=\"revisions.discardChanges\"\n        icon={\"fa fa-undo\"}\n        value=\"discard\"\n        onClick={this.handleAction}\n      />\n    );\n  }\n\n  renderArchiveButton() {\n    return (\n      <FlatButton\n        tooltip=\"Archive\"\n        i18nKeyTooltip=\"app.archive\"\n        icon={\"fa fa-archive\"}\n        value=\"archive\"\n        onClick={this.handleAction}\n      />\n    );\n  }\n\n  renderSettingsButton() {\n    return (\n      <FlatButton\n        icon={\"fa fa-cog\"}\n        value=\"settings\"\n        onClick={this.handleAction}\n      />\n    );\n  }\n\n  renderVisibilitySwitch() {\n    return (\n      <Switch\n        i18nKeyLabel={\"admin.dashboard.preview\"}\n        label={\"Preview\"}\n        checked={this.props.isPreview}\n        onChange={this.onViewContextChange}\n      />\n    );\n  }\n\n  renderAdminButton() {\n    return (\n      <FlatButton\n        onClick={() => {\n          Reaction.showActionView({\n            i18nKeyTite: \"dashboard.coreTitle\",\n            title: \"Dashboard\",\n            template: \"dashboardPackages\"\n          });\n        }}\n      >\n        <Icon style={{ fontSize: 24 }} icon=\"icon icon-reaction-logo\" />\n      </FlatButton>\n    );\n  }\n\n  renderAddButton() {\n    return (\n      <FlatButton\n        i18nKeyTooltip={\"app.shortcut.addProduct\"}\n        icon={\"fa fa-plus\"}\n        tooltip={\"Add Product\"}\n        onClick={this.props.onAddProduct}\n      />\n    );\n  }\n\n  render() {\n    if (this.props.isEnabled) {\n      return (\n        <ToolbarGroup lastChild={true}>\n          {this.renderDeletionStatus()}\n          {this.renderUndoButton()}\n          {this.renderArchiveButton()}\n          {this.renderViewControls()}\n          {this.renderPublishButton()}\n          {/* this.renderMoreOptionsButton() */}\n        </ToolbarGroup>\n      );\n    }\n\n    return null;\n  }\n}\n\nexport default Translatable()(PublishControls);\n","import React, { Component, PropTypes } from \"react\";\nimport { Translation } from \"/imports/plugins/core/ui/client/components\";\n\n\nclass RevisionControlSettings extends Component {\n  get settings() {\n    return this.props.settings;\n  }\n\n  render() {\n    let message;\n\n    if (this.settings.general.enabled) {\n      message = (\n        <Translation\n          defaultValue=\"Revision controls is enabled\"\n          i18nKey=\"revisions.isEnabled\"\n        />\n      );\n    } else {\n      message = (\n        <Translation\n          defaultValue=\"Revision controls is disabled\"\n          i18nKey=\"revisions.isDisabled\"\n        />\n    );\n    }\n\n    return (\n      <div className=\"rui publish-controls\">\n        <p className=\"help-text\">{message}</p>\n      </div>\n    );\n  }\n}\n\nRevisionControlSettings.propTypes = {\n  checked: PropTypes.bool,\n  label: PropTypes.string,\n  onUpdateSettings: PropTypes.func,\n  settings: PropTypes.object\n};\n\nexport default RevisionControlSettings;\n","import React, { Component, PropTypes } from \"react\";\n\nclass SimpleDiff extends Component {\n\n  renderDiff() {\n    const diff = this.props.diff;\n\n    return diff.map((change, index) => {\n      const rightHandSide = change.rhs && change.rhs.toString();\n      const leftHandSide = change.lhs && change.lhs.toString();\n\n      switch (change.kind) {\n        // Array change\n        case \"A\":\n          return (\n            <tr className=\"success\" key={index}>\n              <td><i className=\"fa fa-plus\" /></td>\n              <td style={{ whiteSpace: \"normal\" }}>{leftHandSide}</td>\n              <td style={{ whiteSpace: \"normal\" }}>{rightHandSide}</td>\n            </tr>\n          );\n\n        // Added property / element\n        case \"N\":\n          return (\n            <tr className=\"success\" key={index}>\n              <td><i className=\"fa fa-plus\" /></td>\n              <td style={{ whiteSpace: \"normal\" }}>{leftHandSide}</td>\n              <td style={{ whiteSpace: \"normal\" }}>{rightHandSide}</td>\n            </tr>\n          );\n\n        // Edited property or element\n        case \"E\":\n          return (\n            <tr className=\"warning\" key={index}>\n              <td><i className=\"fa fa-pencil\" /></td>\n              <td style={{ whiteSpace: \"normal\" }}>{leftHandSide}</td>\n              <td style={{ whiteSpace: \"normal\" }}>{rightHandSide}</td>\n            </tr>\n          );\n\n        // Removed property / element\n        case \"D\":\n          return (\n            <tr className=\"danger\" key={index}>\n              <td><i className=\"fa fa-times\" /></td>\n              <td style={{ whiteSpace: \"normal\" }}>{leftHandSide}</td>\n              <td style={{ whiteSpace: \"normal\" }}>{rightHandSide}</td>\n            </tr>\n          );\n        default:\n          return null;\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <table className=\"table table-bordered\">\n          <thead>\n            <tr>\n              <th />\n              <th>{\"Current\"}</th>\n              <th>{\"Change\"}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.renderDiff()}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nSimpleDiff.defaultProps = {\n  diff: []\n};\n\nSimpleDiff.propTypes = {\n  diff: PropTypes.arrayOf(PropTypes.object)\n};\n\nexport default SimpleDiff;\n","import React, { Component, PropTypes } from \"react\";\nimport { composeWithTracker } from \"/lib/api/compose\";\nimport PublishControls from \"../components/publishControls\";\nimport { Revisions } from \"/lib/collections\";\nimport { Meteor } from \"meteor/meteor\";\nimport TranslationProvider from \"/imports/plugins/core/ui/client/providers/translationProvider\";\nimport { isRevisionControlEnabled } from \"../../lib/api\";\nimport { Reaction, i18next } from \"/client/api\";\n\n/*\n * PublishContainer is a container component connected to Meteor data source.\n */\nclass PublishContainer extends Component {\n  handlePublishClick = (revisions) => {\n    if (Array.isArray(revisions)) {\n      let documentIds = revisions.map((revision) => {\n        if (revision.parentDocument && revision.documentType !== \"product\") {\n          return revision.parentDocument;\n        }\n        return revision.documentId;\n      });\n\n      const documentIdsSet = new Set(documentIds); // ensures they are unique\n      documentIds = Array.from(documentIdsSet);\n      Meteor.call(\"revisions/publish\", documentIds, (error, result) => {\n        if (result && result.status === \"success\") {\n          const message = i18next.t(\"revisions.changedPublished\", {\n            defaultValue: \"Changes published successfully\"\n          });\n\n          Alerts.toast(message, \"success\");\n\n          if (this.props.onPublishSuccess) {\n            this.props.onPublishSuccess(result);\n          }\n        } else {\n          const message = i18next.t(\"revisions.noChangesPublished\", {\n            defaultValue: \"There are no changes to publish\"\n          });\n\n          Alerts.toast(message, \"warning\");\n        }\n      });\n    }\n  }\n\n  handlePublishActions = (event, action, documentIds) => {\n    switch (action) {\n      case \"archive\":\n        if (this.props.onAction) {\n          this.props.onAction(event, action, this.props.documentIds);\n        }\n        break;\n      case \"discard\":\n        Meteor.call(\"revisions/discard\", documentIds, (error, result) => {\n          if (result === true) {\n            const message = i18next.t(\"revisions.changesDiscarded\", {\n              defaultValue: \"Changes discarded successfully\"\n            });\n\n            Alerts.toast(message, \"success\");\n          } else {\n            const message = i18next.t(\"revisions.noChangesDiscarded\", {\n              defaultValue: \"There are no changes to discard\"\n            });\n\n            Alerts.toast(message, \"warning\");\n          }\n        });\n        break;\n      default:\n    }\n  }\n\n  render() {\n    return (\n      <TranslationProvider>\n        <PublishControls\n          documentIds={this.props.documentIds}\n          documents={this.props.documents}\n          isEnabled={this.props.isEnabled}\n          onPublishClick={this.handlePublishClick}\n          onAction={this.handlePublishActions}\n          onVisibilityChange={this.props.onVisibilityChange}\n          revisions={this.props.revisions}\n          isPreview={this.props.isPreview}\n        />\n      </TranslationProvider>\n    );\n  }\n}\n\nPublishContainer.propTypes = {\n  documentIds: PropTypes.arrayOf(PropTypes.string),\n  documents: PropTypes.arrayOf(PropTypes.object),\n  isEnabled: PropTypes.bool,\n  isPreview: PropTypes.bool,\n  onAction: PropTypes.func,\n  onPublishSuccess: PropTypes.func,\n  onVisibilityChange: PropTypes.func,\n  revisions: PropTypes.arrayOf(PropTypes.object)\n};\n\nfunction composer(props, onData) {\n  const viewAs = Reaction.getUserPreferences(\"reaction-dashboard\", \"viewAs\", \"administrator\");\n\n  if (Array.isArray(props.documentIds) && props.documentIds.length) {\n    const subscription = Meteor.subscribe(\"Revisions\", props.documentIds);\n\n    if (subscription.ready()) {\n      const revisions = Revisions.find({\n        \"$or\": [\n          {\n            documentId: {\n              $in: props.documentIds\n            }\n          },\n          {\n            \"documentData.ancestors\": {\n              $in: props.documentIds\n            }\n          },\n          {\n            parentDocument: {\n              $in: props.documentIds\n            }\n          }\n        ],\n        \"workflow.status\": {\n          $nin: [\n            \"revision/published\"\n          ]\n        }\n      }).fetch();\n\n      onData(null, {\n        isEnabled: isRevisionControlEnabled(),\n        documentIds: props.documentIds,\n        documents: props.documents,\n        revisions,\n        isPreview: viewAs === \"customer\" ? true : false\n      });\n\n      return;\n    }\n  }\n\n  onData(null, {\n    isEnabled: isRevisionControlEnabled(),\n    isPreview: viewAs === \"customer\" ? true : false\n  });\n}\n\nexport default composeWithTracker(composer, null)(PublishContainer);\n","import React, { Component, PropTypes } from \"react\";\nimport { composeWithTracker } from \"/lib/api/compose\";\nimport SettingsComponent from \"../components/settings\";\nimport { Packages } from \"/lib/collections\";\nimport { Meteor } from \"meteor/meteor\";\nimport TranslationProvider from \"/imports/plugins/core/ui/client/providers/translationProvider\";\n\n\nclass RevisionSettingsContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      settings: this.props.packageInfo.settings\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      settings: nextProps.packageInfo.settings\n    });\n  }\n\n  get settings() {\n    return this.state.settings;\n  }\n\n  handleUpdateSettings = (settings) => {\n    this.setState({ settings }, () => {\n      Meteor.call(\"revisions/settings/update\", settings);\n    });\n  }\n\n  /**\n   * Publish container is a stateless container component connected to Meteor data source.\n   * @param  {Object} props Component props\n   * @return {PropTypes.node} react node\n   */\n  render() {\n    // console.log(this.props.packageInfo);\n    return (\n      <div>\n        <TranslationProvider>\n          <SettingsComponent\n            onUpdateSettings={this.handleUpdateSettings}\n            settings={this.settings}\n          />\n        </TranslationProvider>\n      </div>\n    );\n  }\n}\n\nRevisionSettingsContainer.propTypes = {\n  packageInfo: PropTypes.object\n};\n\nexport function handlePublishClick(revisions) {\n  if (Array.isArray(revisions)) {\n    const documentIds = revisions.map((revision) => {\n      return revision.documentId;\n    });\n    Meteor.call(\"revisions/publish\", documentIds);\n  }\n}\n\nfunction composer(props, onData) {\n  const packageInfo = Packages.findOne({\n    name: \"reaction-revisions\"\n  });\n\n  onData(null, {\n    packageInfo\n  });\n}\n\nexport default composeWithTracker(composer)(RevisionSettingsContainer);\n","import \"./templates/settings.html\";\nimport \"./templates/settings.js\";\n","export * from \"./revisions\";\n","import { Packages } from \"/lib/collections\";\n\nexport function getPackageSettings() {\n  const packageInfo = Packages.findOne({\n    name: \"reaction-revisions\"\n  });\n\n  if (packageInfo && packageInfo.enabled && packageInfo.settings) {\n    return packageInfo.settings;\n  }\n\n  return null;\n}\n\nexport function isRevisionControlEnabled() {\n  const settings = getPackageSettings();\n\n  if (settings && settings.general && typeof settings.general.enabled === \"boolean\") {\n    return settings.general.enabled;\n  }\n\n  return false;\n}\n\nexport const RevisionApi = {\n  isRevisionControlEnabled,\n  getPackageSettings\n};\n","import { Template } from \"meteor/templating\";\nimport { ReactiveDict } from \"meteor/reactive-dict\";\nimport { AutoForm } from \"meteor/aldeed:autoform\";\nimport { Shops } from \"/lib/collections\";\nimport { Countries } from \"/client/collections\";\nimport { Taxes, TaxCodes } from \"../../lib/collections\";\nimport { i18next } from \"/client/api\";\nimport { Taxes as TaxSchema } from \"../../lib/collections/schemas\";\nimport MeteorGriddle from \"/imports/plugins/core/ui-grid/client/griddle\";\nimport { IconButton, Loading } from \"/imports/plugins/core/ui/client/components\";\n\n/* eslint no-shadow: [\"error\", { \"allow\": [\"options\"] }] */\n/* eslint no-unused-vars: [\"error\", { \"argsIgnorePattern\": \"[oO]ptions\" }] */\n\nTemplate.customTaxRates.onCreated(function () {\n  this.autorun(() => {\n    this.subscribe(\"Taxes\");\n  });\n\n  this.state = new ReactiveDict();\n  this.state.setDefault({\n    isEditing: false,\n    editingId: null\n  });\n});\n\nTemplate.customTaxRates.helpers({\n  editButton() {\n    const instance = Template.instance();\n    const state = instance.state;\n    const isEditing = state.equals(\"isEditing\", true);\n    let editingId = state.get(\"editingId\");\n    // toggle edit state\n    if (!isEditing) {\n      editingId = null;\n    }\n    // return icon\n    return {\n      component: IconButton,\n      icon: \"fa fa-plus\",\n      onIcon: \"fa fa-pencil\",\n      toggle: true,\n      toggleOn: isEditing,\n      style: {\n        position: \"relative\",\n        top: \"-25px\",\n        right: \"8px\"\n      },\n      onClick() {\n        // remove active rows from grid\n        $(\".tax-grid-row\").removeClass(\"active\");\n        return state.set({\n          isEditing: !isEditing,\n          editingId: editingId\n        });\n      }\n    };\n  },\n  taxGrid() {\n    const filteredFields = [\"taxCode\", \"rate\", \"country\", \"region\", \"postal\"];\n    const noDataMessage = i18next.t(\"admin.taxSettings.noCustomTaxRatesFound\");\n    const instance = Template.instance();\n\n    //\n    // helper to get and select row from griddle\n    // into blaze for to select tax row for editing\n    //\n    function editRow(options) {\n      const currentId = instance.state.get(\"editingId\");\n      // isEditing is tax rate object\n      instance.state.set(\"isEditing\", options.props.data);\n      instance.state.set(\"editingId\", options.props.data._id);\n      // toggle edit mode clicking on same row\n      if (currentId === options.props.data._id) {\n        instance.state.set(\"isEditing\", null);\n        instance.state.set(\"editingId\", null);\n      }\n    }\n\n    //\n    // helper adds a class to every grid row\n    //\n    const customRowMetaData = {\n      bodyCssClassName: () =>  {\n        return \"tax-grid-row\";\n      }\n    };\n\n    // add i18n handling to headers\n    const customColumnMetadata = [];\n    filteredFields.forEach(function (field) {\n      const columnMeta = {\n        columnName: field,\n        displayName: i18next.t(`admin.taxGrid.${field}`)\n      };\n      customColumnMetadata.push(columnMeta);\n    });\n\n    // return tax Grid\n    return {\n      component: MeteorGriddle,\n      publication: \"Taxes\",\n      collection: Taxes,\n      matchingResultsCount: \"taxes-count\",\n      showFilter: true,\n      useGriddleStyles: false,\n      rowMetadata: customRowMetaData,\n      filteredFields: filteredFields,\n      columns: filteredFields,\n      noDataMessage: noDataMessage,\n      onRowClick: editRow,\n      columnMetadata: customColumnMetadata,\n      externalLoadingComponent: Loading\n    };\n  },\n\n  instance() {\n    const instance = Template.instance();\n    return instance;\n  },\n  // schema for forms\n  taxSchema() {\n    return TaxSchema;\n  },\n  // list of countries for tax input\n  countryOptions: function () {\n    return Countries.find().fetch();\n  },\n  statesForCountry: function () {\n    const shop = Shops.findOne();\n    const selectedCountry = AutoForm.getFieldValue(\"country\");\n    if (!selectedCountry) {\n      return false;\n    }\n    if ((shop !== null ? shop.locales.countries[selectedCountry].states : void 0) === null) {\n      return false;\n    }\n    options = [];\n    if (shop && typeof shop.locales.countries[selectedCountry].states === \"object\") {\n      for (const state in shop.locales.countries[selectedCountry].states) {\n        if ({}.hasOwnProperty.call(shop.locales.countries[selectedCountry].states, state)) {\n          const locale = shop.locales.countries[selectedCountry].states[state];\n          options.push({\n            label: locale.name,\n            value: state\n          });\n        }\n      }\n    }\n    return options;\n  },\n  taxRate() {\n    const shop = Shops.findOne();\n    const instance = Template.instance();\n    const id = instance.state.get(\"editingId\");\n    const tax = Taxes.findOne(id) || {};\n    // enforce a default country that makes sense.\n    if (!tax.country) {\n      if (shop && typeof shop.addressBook === \"object\") {\n        tax.country = shop.addressBook[0].country;\n      }\n    }\n    return tax;\n  },\n  taxCodes() {\n    const instance = Template.instance();\n    if (instance.subscriptionsReady()) {\n      const taxCodes = TaxCodes.find().fetch();\n      const options = [{\n        label: i18next.t(\"admin.taxSettings.taxable\"),\n        value: \"RC_TAX\"\n      }, {\n        label: i18next.t(\"admin.taxSettings.nottaxable\"),\n        value: \"RC_NOTAX\"\n      }];\n\n      for (const taxCode of taxCodes) {\n        options.push({\n          label: i18next.t(taxCode.label),\n          value: taxCode.id\n        });\n      }\n      return options;\n    }\n    return [];\n  }\n});\n\n//\n// on submit lets clear the form state\n//\nTemplate.customTaxRates.events({\n  \"submit #customTaxRates-update-form\": function () {\n    const instance = Template.instance();\n    instance.state.set({\n      isEditing: false,\n      editingId: null\n    });\n  },\n  \"submit #customTaxRates-insert-form\": function () {\n    const instance = Template.instance();\n    instance.state.set({\n      isEditing: true,\n      editingId: null\n    });\n  },\n  \"click .cancel, .tax-grid-row .active\": function () {\n    instance = Template.instance();\n    // remove active rows from grid\n    instance.state.set({\n      isEditing: false,\n      editingId: null\n    });\n    // ugly hack\n    $(\".tax-grid-row\").removeClass(\"active\");\n  },\n  \"click .delete\": function () {\n    const confirmTitle = i18next.t(\"admin.taxSettings.confirmRateDelete\");\n    const confirmButtonText = i18next.t(\"app.delete\");\n    const instance = Template.instance();\n    const id = instance.state.get(\"editingId\");\n    // confirm delete\n    Alerts.alert({\n      title: confirmTitle,\n      type: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: confirmButtonText\n    }, (isConfirm) => {\n      if (isConfirm) {\n        if (id) {\n          Meteor.call(\"taxes/deleteRate\", id);\n          instance.state.set({\n            isEditing: false,\n            editingId: null\n          });\n        }\n      }\n    });\n  },\n  \"click .tax-grid-row\": function (event) {\n    // toggle all rows off, then add our active row\n    $(\".tax-grid-row\").removeClass(\"active\");\n    Template.instance().$(event.currentTarget).addClass(\"active\");\n  }\n});\n\n//\n// Hooks for update and insert forms\n//\nAutoForm.hooks({\n  \"customTaxRates-update-form\": {\n    onSuccess: function () {\n      return Alerts.toast(i18next.t(\"admin.taxSettings.shopCustomTaxRatesSaved\"),\n        \"success\");\n    },\n    onError: function (operation, error) {\n      return Alerts.toast(\n        `${i18next.t(\"admin.taxSettings.shopCustomTaxRatesFailed\")} ${error}`, \"error\"\n      );\n    }\n  },\n  \"customTaxRates-insert-form\": {\n    onSuccess: function () {\n      return Alerts.toast(i18next.t(\"admin.taxSettings.shopCustomTaxRatesSaved\"), \"success\");\n    },\n    onError: function (operation, error) {\n      return Alerts.toast(\n        `${i18next.t(\"admin.taxSettings.shopCustomTaxRatesFailed\")} ${error}`, \"error\"\n      );\n    }\n  }\n});\n","import { Template } from \"meteor/templating\";\nimport { TaxCodes } from \"../../lib/collections\";\nimport { i18next } from \"/client/api\";\n\n/*\n * Template taxes Helpers\n */\nTemplate.taxSettings.onCreated(function () {\n  this.autorun(() => {\n    this.subscribe(\"TaxCodes\");\n  });\n});\n\nTemplate.taxSettings.helpers({\n  checked(enabled) {\n    if (enabled === true) {\n      return \"checked\";\n    }\n    return \"\";\n  },\n  shown(enabled) {\n    if (enabled !== true) {\n      return \"hidden\";\n    }\n    return \"\";\n  },\n  // prepare and return taxCodes\n  // for default shop value\n  //\n  taxCodes() {\n    const instance = Template.instance();\n    if (instance.subscriptionsReady()) {\n      const taxCodes = TaxCodes.find().fetch();\n      const options = [{\n        label: i18next.t(\"app.auto\"),\n        value: \"none\"\n      }];\n\n      for (const taxCode of taxCodes) {\n        options.push({\n          label: i18next.t(taxCode.label),\n          value: taxCode.id\n        });\n      }\n      return options;\n    }\n    return undefined;\n  }\n});\n\nTemplate.taxSettings.events({\n  /**\n   * taxSettings settings update enabled status for tax service on change\n   * @param  {event} event    jQuery Event\n   * @return {void}\n   */\n  \"change input[name=enabled]\": (event) => {\n    const settingsKey = event.target.getAttribute(\"data-key\");\n    const packageId = event.target.getAttribute(\"data-id\");\n    const fields = [{\n      property: \"enabled\",\n      value: event.target.checked\n    }];\n    // save tax registry updates\n    Meteor.call(\"registry/update\", packageId, settingsKey, fields);\n  },\n\n  /**\n   * taxSettings settings show/hide secret key for a tax service\n   * @param  {event} event    jQuery Event\n   * @return {void}\n   */\n  \"click [data-event-action=showSecret]\": (event) => {\n    const button = Template.instance().$(event.currentTarget);\n    const input = button.closest(\".form-group\").find(\"input[name=secret]\");\n\n    if (input.attr(\"type\") === \"password\") {\n      input.attr(\"type\", \"text\");\n      button.html(\"Hide\");\n    } else {\n      input.attr(\"type\", \"password\");\n      button.html(\"Show\");\n    }\n  }\n});\n","import \"./settings/custom.html\";\nimport \"./settings/custom.js\";\nimport \"./settings/settings.html\";\nimport \"./settings/settings.js\";\n","import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\nimport { PackageConfig } from \"/lib/collections/schemas/registry\";\nimport { Taxes } from \"./taxes\";\n\n/**\n* TaxPackageConfig Schema\n*/\n\nexport const TaxPackageConfig = new SimpleSchema([\n  PackageConfig, {\n    \"settings.defaultTaxCode\": {\n      type: String,\n      optional: true\n    },\n    \"settings.taxIncluded\": {\n      type: Boolean,\n      defaultValue: false\n    },\n    \"settings.taxShipping\": {\n      type: Boolean,\n      defaultValue: false\n    },\n    \"settings.rates\": {\n      type: Object,\n      optional: true\n    },\n    \"settings.rates.enabled\": {\n      type: Boolean,\n      optional: true,\n      defaultValue: false\n    },\n    \"settings.rates.taxes\": {\n      type: [Taxes],\n      optional: true\n    }\n  }\n]);\n","export * from \"./taxrates\";\nexport * from \"./taxes\";\nexport * from \"./taxcodes\";\nexport * from \"./config\";\n","import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\n\n/**\n* TaxCodes Schema\n*/\n\nexport const TaxCodes = new SimpleSchema({\n  id: {\n    type: String,\n    label: \"Tax Id\",\n    unique: true\n  },\n  shopId: {\n    type: String\n  },\n  taxCode: {\n    type: String,\n    label: \"Tax Code\"\n  },\n  taxCodeProvider: {\n    type: String,\n    label: \"Tax Code Provider\"\n  },\n  ssuta: {\n    type: Boolean,\n    label: \"Streamlined Sales Tax\",\n    optional: true,\n    defaultValue: false\n  },\n  title: {\n    type: String,\n    optional: true\n  },\n  label: {\n    type: String,\n    optional: true\n  },\n  parent: {\n    type: String,\n    optional: true\n  },\n  children: {\n    type: [Object],\n    optional: true,\n    blackbox: true\n  }\n});\n","import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\nimport { shopIdAutoValue } from \"/lib/collections/schemas/helpers\";\n\n/**\n* Taxes Schema\n*/\n\nexport const Taxes = new SimpleSchema({\n  \"shopId\": {\n    type: String,\n    autoValue: shopIdAutoValue,\n    index: 1,\n    label: \"Taxes shopId\"\n  },\n  \"taxCode\": {\n    type: String,\n    label: \"Tax Identifier\",\n    defaultValue: \"RC_TAX\",\n    index: 1\n  },\n  \"cartMethod\": {\n    label: \"Calculation Method\",\n    type: String,\n    allowedValues: [\"unit\", \"row\", \"total\"],\n    defaultValue: \"total\"\n  },\n  \"taxLocale\": {\n    label: \"Taxation Location\",\n    type: String,\n    allowedValues: [\"shipping\", \"billing\", \"origination\", \"destination\"],\n    defaultValue: \"destination\"\n  },\n  \"taxShipping\": {\n    label: \"Tax Shipping\",\n    type: Boolean,\n    defaultValue: false\n  },\n  \"taxIncluded\": {\n    label: \"Taxes included in product prices\",\n    type: Boolean,\n    defaultValue: false,\n    optional: true\n  },\n  \"discountsIncluded\": {\n    label: \"Tax before discounts\",\n    type: Boolean,\n    defaultValue: false,\n    optional: true\n  },\n  \"region\": {\n    label: \"State/Province/Region\",\n    type: String,\n    optional: true,\n    index: 1\n  },\n  \"postal\": {\n    label: \"ZIP/Postal Code\",\n    type: String,\n    optional: true,\n    index: 1\n  },\n  \"country\": {\n    type: String,\n    label: \"Country\",\n    optional: true,\n    index: 1\n  },\n  \"isCommercial\": {\n    label: \"Commercial address.\",\n    type: Boolean,\n    optional: true\n  },\n  \"rate\": {\n    type: Number,\n    decimal: true\n  },\n  \"method\": {\n    type: Array,\n    optional: true,\n    label: \"Tax Methods\"\n  },\n  \"method.$\": {\n    type: Object\n  },\n  \"method.$.plugin\": {\n    type: String,\n    label: \"Plugin\",\n    defaultValue: \"Custom\",\n    optional: true\n  },\n  \"method.$.enabled\": {\n    type: Boolean,\n    label: \"Enabled\",\n    defaultValue: true,\n    optional: true\n  }\n});\n","import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\n\n/**\n* TaxRates Schema\n*/\n\nexport const TaxRates = new SimpleSchema({\n  country: {\n    type: String\n  },\n  county: {\n    type: String,\n    optional: true\n  },\n  postal: {\n    type: String,\n    optional: true\n  },\n  rate: {\n    type: Number,\n    decimal: true\n  }\n});\n","import { Mongo } from \"meteor/mongo\";\nimport * as Schemas from \"./schemas\";\n\n/**\n* ReactionCore Collections TaxCodes\n*/\n\n/**\n* Taxes Collection\n*/\nexport const Taxes = new Mongo.Collection(\"Taxes\");\n\nTaxes.attachSchema(Schemas.Taxes);\n\n\n/**\n* TaxCodes Collection\n*/\nexport const TaxCodes = new Mongo.Collection(\"TaxCodes\");\n\nTaxCodes.attachSchema(Schemas.TaxCodes);\n","export * from \"./collections\";\n","import MeteorGriddle from \"/imports/plugins/core/ui-grid/client/griddle\";\nimport { Loading } from \"/imports/plugins/core/ui/client/components\";\nimport { Meteor } from \"meteor/meteor\";\nimport { AutoForm } from \"meteor/aldeed:autoform\";\nimport { Blaze } from \"meteor/blaze\";\nimport { ReactiveDict } from \"meteor/reactive-dict\";\nimport { Template } from \"meteor/templating\";\nimport { EmailTemplates } from \"../../lib/collections/schemas\";\nimport { i18next } from \"/client/api\";\nimport { Templates } from \"/lib/collections\";\n\n\n/*\n * template templateSettings onCreated\n */\nTemplate.templateSettings.onCreated(function () {\n  // Subscribe to Templates collections\n  this.autorun(() => {\n    this.subscribe(\"Templates\");\n  });\n\n  // Initiate State\n  this.state = new ReactiveDict();\n  this.state.setDefault({\n    isEditing: false,\n    editingId: null\n  });\n});\n\n\n/*\n * template templateSettings helpers\n */\nTemplate.templateSettings.helpers({\n  templateGrid() {\n    const filteredFields = [\"title\", \"type\", \"language\"];\n    const noDataMessage = i18next.t(\"templateGrid.noTemplatesFound\");\n    const instance = Template.instance();\n\n    //\n    // helper to get and select row from griddle\n    // into blaze to get correct template to edit\n    //\n    function editRow(options) {\n      const currentId = instance.state.get(\"editingId\");\n\n      // isEditing is current template\n      instance.state.set(\"isEditing\", options.props.data);\n      instance.state.set(\"editingId\", options.props.data._id);\n      // toggle edit mode clicking on same row\n      if (currentId === options.props.data._id) {\n        instance.state.set(\"isEditing\", null);\n        instance.state.set(\"editingId\", null);\n      }\n    }\n\n    // helper adds a class to every grid row\n    const customRowMetaData = {\n      bodyCssClassName: () =>  {\n        return \"template-grid-row\";\n      }\n    };\n\n    // add i18n handling to headers\n    const customColumnMetadata = [];\n    filteredFields.forEach(function (field) {\n      const columnMeta = {\n        columnName: field,\n        displayName: i18next.t(`templateGrid.columns.${field}`)\n      };\n      customColumnMetadata.push(columnMeta);\n    });\n\n    // return template Grid\n    return {\n      component: MeteorGriddle,\n      publication: \"Templates\",\n      collection: Templates,\n      matchingResultsCount: \"templates-count\",\n      showFilter: true,\n      useGriddleStyles: false,\n      rowMetadata: customRowMetaData,\n      filteredFields: filteredFields,\n      columns: filteredFields,\n      noDataMessage: noDataMessage,\n      onRowClick: editRow,\n      columnMetadata: customColumnMetadata,\n      externalLoadingComponent: Loading\n    };\n  },\n\n  instance() {\n    const instance = Template.instance();\n    return instance;\n  },\n\n  template() {\n    const instance = Template.instance();\n    const id = instance.state.get(\"editingId\");\n    const template = Templates.findOne(id) || {};\n    return template;\n  },\n\n  typeEmail() {\n    const instance = Template.instance();\n    const id = instance.state.get(\"editingId\");\n    const template = Templates.findOne(id) || {};\n    if (template.type === \"email\") {\n      return true;\n    }\n    return false;\n  },\n\n  emailTemplateSchema() {\n    return EmailTemplates;\n  }\n});\n\n\n/*\n * template templateSettings events\n */\nTemplate.templateSettings.events({\n  \"click .template-grid-row\": function (event) {\n    // toggle all rows off, then add our active row\n    $(\".template-grid-row\").removeClass(\"active\");\n    Template.instance().$(event.currentTarget).addClass(\"active\");\n  },\n  \"submit #email-template-edit-form\": function () {\n    const instance = Template.instance();\n    instance.state.set({\n      isEditing: false,\n      editingId: null\n    });\n  },\n  \"click .cancel, .template-grid-row .active\": function () {\n    instance = Template.instance();\n    // remove active rows from grid\n    instance.state.set({\n      isEditing: false,\n      editingId: null\n    });\n    // ugly hack\n    $(\".template-grid-row\").removeClass(\"active\");\n  }\n});\n\n\nAutoForm.hooks({\n  \"email-template-edit-form\": {\n    onSubmit: function (insertDoc) {\n      this.event.preventDefault();\n\n      const templateId = this.docId;\n\n      Meteor.call(\"templates/email/update\", templateId, insertDoc, (error, result) => {\n        if (error) {\n          Alerts.toast(i18next.t(\"templateUpdateForm.alerts.failedToUpdate\", { err: error.message }), \"error\");\n          this.done(new Error(\"Failed to update template: \", error));\n          return false;\n        }\n        if (result) {\n          Alerts.toast(i18next.t(\"templateUpdateForm.alerts.templateUpdated\", \"Template successfully updated\"), \"success\");\n          this.done();\n        }\n      });\n    }\n  }\n});\n\n\nBlaze.TemplateInstance.prototype.parentTemplate = function (levels = 1) {\n  let view = Blaze.currentView;\n  let numLevel = levels;\n  while (view) {\n    if (view.name.substring(0, 9) === \"Template.\" && !numLevel--) {\n      return view.templateInstance();\n    }\n    view = view.parentView;\n  }\n};\n","import \"./templates/settings.html\";\nimport \"./templates/settings.js\";\n","import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\nimport { Templates } from \"/lib/collections\";\nimport { shopIdAutoValue } from \"/lib/collections/schemas/helpers\";\n\n/**\n * EmailTemplates Schema\n*/\n\nexport const EmailTemplates = new SimpleSchema({\n  shopId: {\n    type: String,\n    index: 1,\n    autoValue: shopIdAutoValue,\n    label: \"Template ShopId\"\n  },\n  name: {\n    type: String,\n    optional: true\n  },\n  priority: {\n    type: Number,\n    optional: true,\n    defaultValue: 1\n  },\n  enabled: {\n    type: Boolean,\n    defaultValue: true\n  },\n  route: {\n    type: String,\n    optional: true\n  },\n  audience: {\n    type: [String],\n    optional: true\n  },\n  type: {\n    type: String,\n    defaultValue: \"email\",\n    optional: true\n  },\n  provides: {\n    type: String,\n    defaultValue: \"template\"\n  },\n  block: {\n    type: String,\n    optional: true\n  },\n  defaultData: {\n    type: Object,\n    blackbox: true,\n    optional: true\n  },\n  template: {\n    type: String,\n    optional: true\n  },\n  parser: {\n    type: String,\n    optional: true\n  },\n  language: {\n    type: String,\n    optional: true,\n    defaultValue: \"en\"\n  },\n  source: {\n    type: String,\n    optional: true\n  },\n  title: {\n    type: String,\n    optional: true\n  },\n  subject: {\n    type: String,\n    optional: true\n  }\n});\n\nTemplates.attachSchema(EmailTemplates, { selector: { type: \"email\" } });\n","export * from \"./emailtemplates\";\n","import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\nimport { PackageConfig } from \"/lib/collections/schemas/registry\";\nimport { Discounts } from \"./discounts\";\n\n/**\n* DiscountsPackageConfig Schema\n*/\n\nexport const DiscountsPackageConfig = new SimpleSchema([\n  PackageConfig, {\n    \"settings.rates\": {\n      type: Object,\n      optional: true\n    },\n    \"settings.rates.enabled\": {\n      type: Boolean,\n      optional: true,\n      defaultValue: false\n    },\n    \"settings.rates.discounts\": {\n      type: [Discounts],\n      optional: true\n    }\n  }\n]);\n","import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\nimport { shopIdAutoValue } from \"/lib/collections/schemas/helpers\";\n\n// The Discounts Schema validates using multiple schemas\n// be sure to use `{ selector: { discountMethod: \"code\" } }`\n// to indicate which schema to apply in all updates\n\n/*\n* Discounts Tranaction History Schema\n*/\nexport const Transactions = new SimpleSchema({\n  cartId: {\n    type: String,\n    index: 1\n  },\n  userId: {\n    type: String,\n    index: 1\n  },\n  appliedAt: {\n    type: Date,\n    optional: true\n  }\n});\n\n/*\n* Discounts Schema\n*/\n\nexport const Discounts = new SimpleSchema({\n  \"shopId\": {\n    type: String,\n    autoValue: shopIdAutoValue,\n    index: 1,\n    label: \"Discounts shopId\"\n  },\n  \"label\": {\n    type: String,\n    optional: true\n  },\n  \"description\": {\n    type: String,\n    optional: true\n  },\n  \"discountMethod\": {\n    label: \"Discount Method Type\",\n    type: String,\n    index: 1,\n    allowedValues: [\"code\", \"rate\"]\n  },\n  // discount is allowed to be string or number.\n  // it's a formula value (could be shipping code)\n  \"discount\": {\n    type: String,\n    optional: true\n  },\n  \"transactions\": {\n    type: [Transactions],\n    optional: true\n  },\n  \"calculation\": {\n    type: Object,\n    optional: true,\n    label: \"Calculation\"\n  },\n  \"calculation.method\": {\n    type: String,\n    index: 1,\n    defaultValue: \"discount\",\n    allowedValues: [\"credit\", \"discount\", \"sale\", \"shipping\"]\n  },\n  \"conditions\": {\n    type: Object,\n    optional: true,\n    label: \"Conditions\"\n  },\n  \"conditions.order\": {\n    type: Object\n  },\n  \"conditions.order.min\": {\n    type: Number,\n    label: \"Mininum\",\n    decimal: true,\n    defaultValue: 0.00\n  },\n  \"conditions.order.max\": {\n    type: Number,\n    label: \"Maximum\",\n    decimal: true,\n    optional: true\n  },\n  \"conditions.order.startDate\": {\n    type: Date,\n    label: \"Start\",\n    optional: true\n  },\n  \"conditions.order.endDate\": {\n    type: Date,\n    label: \"End\",\n    optional: true\n  },\n  \"conditions.enabled\": {\n    type: Boolean,\n    label: \"Enabled\",\n    defaultValue: true,\n    optional: true\n  },\n  \"conditions.audience\": {\n    type: [String],\n    optional: true,\n    label: \"Audience\"\n  },\n  \"conditions.permissions\": {\n    type: [String],\n    optional: true,\n    label: \"Permissions\"\n  },\n  \"conditions.products\": {\n    type: [String],\n    optional: true,\n    label: \"Products\"\n  },\n  \"conditions.tags\": {\n    type: [String],\n    optional: true,\n    label: \"Tags\"\n  }\n});\n","export * from \"./discounts\";\nexport * from \"./config\";\n","import React, { Component, PropTypes } from \"react\";\nimport debounce from \"lodash/debounce\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Translation } from \"/imports/plugins/core/ui/client/components\";\n\nexport default class DiscountForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      discount: this.props.discount,\n      validationMessage: null,\n      validatedInput: this.props.validatedInput || false,\n      attempts: 0,\n      discountApplied: false\n    };\n    // debounce helper so to wait on user input\n    this.debounceDiscounts = debounce(() => {\n      this.setState({ validationMessage: \"\" });\n      const { discount } = this.state;\n      // handle discount code validation messages after attempt to apply\n      Meteor.call(\"discounts/codes/apply\", this.props.id, discount, this.props.collection, (error, result) => {\n        if (typeof result === \"object\") {\n          this.setState({ validationMessage: result });\n        } else if (result !== 1) {\n            // if validationMessage isn't an object with i18n\n            // we will display an elliptical that's not\n            // actually done here though, just bit of foolery\n          this.timerId = Meteor.setTimeout(function () {\n            this.setState({ validationMessage: \"...\" });\n          }.bind(this), 2000);\n        }\n      });\n    }, 800);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) Meteor.clearInterval(this.timerId);\n  }\n\n  // handle apply\n  renderApplied() {\n    return (\n      <a onClick={this.handleClick}>\n        <Translation defaultValue=\"Discount submitted.\" i18nKey=\"discounts.submitted\"/>\n      </a>\n    );\n  }\n\n  // handle keydown and change events\n  handleChange(event) {\n    const { attempts } = this.state;\n    // ensure we don't submit on enter\n    if (event.keyCode === 13) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    // clear input if user hits escape key\n    if (event.keyCode === 27) {\n      return this.setState({ discount: \"\", validatedInput: false, attempts: 0, discountApplied: false, validationMessage: null });\n    }\n    this.setState({\n      discount: event.target.value,\n      attempts: attempts + 1\n    });\n    // TODO: this.debounce doesn't always need to exec we should add some logic to determine based on attempts or some other\n    // cleverness if now is a good time to apply the code.\n    this.debounceDiscounts();\n  }\n\n  // handle display or not\n  handleClick(event) {\n    event.preventDefault();\n    this.setState({ validatedInput: true });\n  }\n\n  // loader button\n  loader() {\n    const { attempts, discount, validationMessage } = this.state;\n    let loader;\n    if (validationMessage && validationMessage.i18nKeyLabel && attempts > 3) {\n      loader = <Translation defaultValue={validationMessage.i18nKeyLabel} i18nKey={validationMessage.i18nKey}/>;\n    } else if (validationMessage) {\n      loader = <i className=\"fa fa-ellipsis-h fa-fw\"/>;\n    } else {\n      if (discount && discount.length >= 10 && attempts >= 12) {\n        loader = <i className=\"fa fa-stop-circle fa-fw\"/>;\n      } else if (discount && discount.length >= 2 && attempts >= 2) {\n        loader = <i className=\"fa fa-circle-o-notch fa-spin fa-fw\"/>;\n      } else {\n        loader = <i className=\"fa fa-search fa-fw\"/>;\n      }\n    }\n\n    return loader;\n  }\n\n  // render discount form\n  renderDiscountForm() {\n    return (\n      <form>\n        <label htmlFor=\"discount-url\">\n          <Translation defaultValue=\"Discount Code\" i18nKey=\"discounts.discountLabel\"/>\n        </label>\n        <div className=\"input-group\">\n          <input\n            autoFocus\n            onChange={this.handleChange}\n            onKeyDown={this.handleChange}\n            className=\"form-control\"\n            id=\"discount-input\"\n            aria-describedby=\"discount-input-addon\"\n          />\n          <span className=\"input-group-addon\" id=\"discount-input-addon\">\n            {this.loader()}\n          </span>\n        </div>\n      </form>\n    );\n  }\n  // have a code link\n  renderDiscountLink() {\n    return (\n      <a onClick={this.handleClick}>\n        <Translation defaultValue=\"Have a code? Enter it here.\" i18nKey=\"discounts.enterItHere\"/>\n      </a>\n    );\n  }\n\n  // render discount code input form\n  render() {\n    const { discountApplied, validatedInput } = this.state;\n    if (discountApplied === true && validatedInput === true) {\n      return this.renderApplied();\n    } else if (validatedInput === true) {\n      return this.renderDiscountForm();\n    }\n    return this.renderDiscountLink();\n  }\n}\n\nDiscountForm.propTypes = {\n  collection: PropTypes.string,\n  discount: PropTypes.string,\n  id: PropTypes.string,\n  validatedInput: PropTypes.bool\n};\n","import React, { Component, PropTypes } from \"react\";\nimport { Translation, IconButton } from \"/imports/plugins/core/ui/client/components\";\nimport DiscountForm from \"./form\";\nimport { composeWithTracker } from \"/lib/api/compose\";\nimport { Reaction } from \"/client/api\";\n\nclass DiscountList extends Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  // handle remove click\n  handleClick(event, codeId) {\n    return Meteor.call(\"discounts/codes/remove\", this.props.id, codeId, this.props.collection);\n  }\n  // list items\n  renderList() {\n    const listItems = this.props.listItems.map((listItem) => {\n      return this.renderItem(listItem.id, listItem.code);\n    });\n\n    return (\n      <div className=\"rui list-group\">{listItems}</div>\n    );\n  }\n  // render item\n  renderItem(_id, code) {\n    let TrashCan;\n\n    if (this.props.collection !== \"Orders\") {\n      TrashCan =\n        <a className=\"pull-right\">\n          <IconButton icon=\"fa fa-remove\" onClick={(e) => this.handleClick(e, _id)}/>\n        </a>;\n    }\n    return (\n      <div className=\"rui list-group-item\" key={_id}>\n        <span>\n          {code}&nbsp;\n          <Translation defaultValue=\"code\" i18nKey={\"discounts.code\"} />&nbsp;\n          <Translation defaultValue=\"Discount applied\" i18nKey={\"discounts.applied\"} />\n        </span>\n        {TrashCan}\n      </div>\n    );\n  }\n\n  // load form input view\n  renderNoneFound() {\n    return (\n      <DiscountForm id={this.props.id} collection={this.props.collection} validatedInput={this.props.validatedInput} />\n    );\n  }\n\n  // render list view\n  render() {\n    const { listItems } = this.props;\n    return (listItems.length >= 1) ? this.renderList() : this.renderNoneFound();\n  }\n}\n\nDiscountList.propTypes = {\n  collection: PropTypes.string,\n  id: PropTypes.string,\n  listItems: PropTypes.array,\n  validatedInput: PropTypes.bool\n};\n\nfunction composer(props, onData) {\n  const currentCart = Reaction.Collections[props.collection].findOne({\n    _id: props.id\n  });\n\n  const listItems = [];\n  for (const billing of currentCart.billing) {\n    if (billing.paymentMethod && billing.paymentMethod.processor === \"code\") {\n      listItems.push({\n        id: billing._id,\n        code: billing.paymentMethod.code,\n        discount: billing.paymentMethod.amount\n      });\n    }\n  }\n\n  onData(null, {\n    collection: props.collection,\n    validatedInput: props.validatedInput,\n    id: props.id,\n    listItems: listItems\n  });\n}\n\n// export default composeWithTracker(composer)(DiscountList)\nconst options = {\n  propsToWatch: [\"billing\"]\n};\n\nlet discountListComponent = DiscountList;\ndiscountListComponent = composeWithTracker(composer, options)(discountListComponent);\n\nexport default discountListComponent;\n","\n/**\n * Route Hook Methods\n */\nconst Hooks = {\n  _hooks: {\n    onEnter: {},\n    onExit: {}\n  },\n\n  _addHook(type, routeName, callback) {\n    if (typeof this._hooks[type][routeName] === \"undefined\") {\n      this._hooks[type][routeName] = [];\n    }\n    this._hooks[type][routeName].push(callback);\n  },\n\n  enter(callback) {\n    if (Array.isArray(callback)) {\n      callback.forEach((cb) => {\n        this.onEnter(cb);\n      });\n    } else {\n      this.onEnter(callback);\n    }\n  },\n\n  leave(callback) {\n    if (Array.isArray(callback)) {\n      callback.forEach((cb) => {\n        this.onExit(cb);\n      });\n    } else {\n      return this.onExit(callback);\n    }\n  },\n\n  onEnter(routeName, callback) {\n    // global onEnter callback\n    if (arguments.length === 1 && typeof arguments[0] === \"function\") {\n      const cb = routeName;\n      return this._addHook(\"onEnter\", \"GLOBAL\", cb);\n    }\n    // route-specific onEnter callback\n    return this._addHook(\"onEnter\", routeName, callback);\n  },\n\n  onExit(routeName, callback) {\n    // global onExit callback\n    if (arguments.length === 1 && typeof arguments[0] === \"function\") {\n      const cb = routeName;\n      return this._addHook(\"onExit\", \"GLOBAL\", cb);\n    }\n    // route-specific onExit callback\n    return this._addHook(\"onExit\", routeName, callback);\n  },\n\n  get(type, name) {\n    const group = this._hooks[type] || {};\n    const callbacks = group[name];\n    return (typeof callbacks !== \"undefined\" && !!callbacks.length) ? callbacks : [];\n  },\n\n  run(type, name, constant) {\n    const callbacks = this.get(type, name);\n    if (typeof callbacks !== \"undefined\" && !!callbacks.length) {\n      return callbacks.forEach((callback) => {\n        return callback(constant);\n      });\n    }\n    return null;\n  }\n};\n\nexport default Hooks;\n","export { default as Router } from \"./router\";\n","import React from \"react\";\nimport { Route } from \"react-router\";\nimport createBrowserHistory from \"history/createBrowserHistory\";\nimport createMemoryHistory from \"history/createMemoryHistory\";\nimport pathToRegexp from \"path-to-regexp\";\nimport queryParse from \"query-parse\";\nimport Immutable from \"immutable\";\nimport { Meteor } from \"meteor/meteor\";\nimport Blaze from \"meteor/gadicc:blaze-react-component\";\nimport { Tracker } from \"meteor/tracker\";\nimport { Packages, Shops } from \"/lib/collections\";\nimport { getComponent } from \"/imports/plugins/core/layout/lib/components\";\nimport BlazeLayout from \"/imports/plugins/core/layout/lib/blazeLayout\";\nimport Hooks from \"./hooks\";\n\n\nexport let history;\n\n// Private vars\n// const currentRoute = new ReactiveVar({});\nlet currentRoute = Immutable.Map();\nconst routerReadyDependency = new Tracker.Dependency;\nconst routerChangeDependency = new Tracker.Dependency;\n\n// Create history object depending on if this is client or server\nif (Meteor.isClient) {\n  history = createBrowserHistory();\n} else {\n  history = createMemoryHistory();\n}\n\n// Base router class (static)\nclass Router {\n  static history = history\n  static Hooks = Hooks\n  static routes = []\n  static _routes = Router.routes // for legacy\n  static _initialized = false;\n\n  static ready() {\n    routerReadyDependency.depend();\n    return Router._initialized;\n  }\n\n  static triggerRouterReady() {\n    routerReadyDependency.changed();\n  }\n\n  static get triggers() {\n    return Hooks;\n  }\n\n  static current() {\n    return currentRoute.toJS();\n  }\n\n  static setCurrentRoute(routeData) {\n    currentRoute = Immutable.Map(routeData);\n    routerChangeDependency.changed();\n  }\n\n  static getRouteName() {\n    const current = Router.current();\n\n    return current.options && current.options.name || \"\";\n  }\n\n  static getParam(name) {\n    routerChangeDependency.depend();\n    const current = Router.current();\n\n    return current.params && current.params[name] || undefined;\n  }\n\n  static getQueryParam(name) {\n    routerChangeDependency.depend();\n    const current = Router.current();\n\n    return current.query && current.query[name] || undefined;\n  }\n\n  static watchPathChange() {\n    routerChangeDependency.depend();\n  }\n}\n\n/**\n * pathFor\n * @summary get current router path\n * @param {String} path - path to fetch\n * @param {Object} options - url params\n * @return {String} returns current router path\n */\nRouter.pathFor = (path, options = {}) => {\n  // const params = options.hash || {};\n  // const query = params.query ? Router._qs.parse(params.query) : {};\n  // // prevent undefined param error\n  // for (const i in params) {\n  //   if (params[i] === null || params[i] === undefined) {\n  //     params[i] = \"/\";\n  //   }\n  // }\n  // return Router.path(path, params, query);\n\n  const foundPath = Router.routes.find((pathObject) => {\n    // console.log(pathObject.options.name, path);\n    if (pathObject.options.name === path) {\n      return true;\n    }\n    return false;\n  });\n\n  if (foundPath) {\n    // Pull the hash out of options\n    //\n    // This is becuase of Spacebars that we have hash.\n    // Spacebars takes all params passed into a template tag and places\n    // them into the options.hash object. This will also include any `query` params\n    const hash = options && options.hash || {};\n\n    // Create an executable function based on the route regex\n    const toPath = pathToRegexp.compile(foundPath.route);\n\n    // Compile the regex path with the params from the hash\n    const compiledPath = toPath(hash);\n\n    // Convert the query object to a string\n    // e.g. { a: \"one\", b: \"two\"} => \"a=one&b=two\"\n    const queryString = queryParse.toString(hash.query);\n\n    // Return the compiled path + query string if we have one\n    if (typeof queryString === \"string\" && queryString.length) {\n      return `${compiledPath}?${queryString}`;\n    }\n\n    // Return only the compiled path\n    return compiledPath;\n  }\n\n  return \"/\";\n};\n\n\nRouter.go = (path, params, query) => {\n  let actualPath;\n\n  if (typeof path === \"string\" && path.startsWith(\"/\")) {\n    actualPath = path;\n  } else {\n    actualPath = Router.pathFor(path, {\n      hash: {\n        ...params,\n        query\n      }\n    });\n  }\n\n  if (window) {\n    history.push(actualPath);\n  }\n};\n\nRouter.replace = (path, params, query) => {\n  const actualPath = Router.pathFor(path, {\n    hash: {\n      ...params,\n      query\n    }\n  });\n\n  if (window) {\n    history.replace(actualPath);\n  }\n};\n\nRouter.reload = () => {\n  const current = Router.current();\n\n  if (window) {\n    history.replace(current.route.fullPath || \"/\");\n  }\n};\n\n/**\n * isActive\n * @summary general helper to return \"active\" when on current path\n * @example {{active \"name\"}}\n * @param {String} routeName - route name as defined in registry\n * @return {String} return \"active\" or null\n */\nRouter.isActiveClassName = (routeName) => {\n  const current = Router.current();\n  const group = current.route.group;\n  const path = current.route.path;\n  let prefix;\n\n  if (group && group.prefix) {\n    prefix = current.route.group.prefix;\n  } else {\n    prefix = \"\";\n  }\n\n  if (typeof path === \"string\") {\n    const routeDef = path.replace(prefix + \"/\", \"\");\n    return routeDef === routeName ? \"active\" : \"\";\n  }\n\n  return \"\";\n};\n\n/**\n * hasRoutePermission\n * check if user has route permissions\n * @param  {Object} route - route context\n * @return {Boolean} returns `true` if route is autoriized, `false` otherwise\n */\nfunction hasRoutePermission(route) {\n  const routeName = route.name;\n\n  if (routeName === \"index\" || routeName === \"not-found\") {\n    return true;\n  } else if (Router.Reaction.hasPermission(routeName, Meteor.userId())) {\n    return true;\n  }\n\n  return false;\n}\n\n\n/**\n * getRouteName\n * assemble route name to be standard\n * prefix/package name + registry name or route\n * @param  {String} packageName  [package name]\n * @param  {Object} registryItem [registry object]\n * @return {String}              [route name]\n */\nfunction getRegistryRouteName(packageName, registryItem) {\n  let routeName;\n  if (packageName && registryItem) {\n    if (registryItem.name) {\n      routeName = registryItem.name;\n    } else if (registryItem.template) {\n      routeName = `${packageName}/${registryItem.template}`;\n    } else {\n      routeName = packageName;\n    }\n    // dont include params in the name\n    routeName = routeName.split(\":\")[0];\n    return routeName;\n  }\n  return null;\n}\n\n/**\n * selectLayout\n * @param {Object} layout - element of shops.layout array\n * @param {Object} setLayout - layout\n * @param {Object} setWorkflow - workflow\n * @returns {Object} layout - return object of template definitions for Blaze Layout\n */\nfunction selectLayout(layout, setLayout, setWorkflow) {\n  const currentLayout = setLayout || Session.get(\"DEFAULT_LAYOUT\") || \"coreLayout\";\n  const currentWorkflow = setWorkflow || Session.get(\"DEFAULT_WORKFLOW\") || \"coreWorkflow\";\n  if (layout.layout === currentLayout && layout.workflow === currentWorkflow && layout.enabled === true) {\n    return layout;\n  }\n  return null;\n}\n\n/**\n * ReactionLayout\n * sets and returns reaction layout structure\n * @param {Object} options - this router context\n * @param {String} options.layout - string of shop.layout.layout (defaults to coreLayout)\n * @param {String} options.workflow - string of shop.layout.workflow (defaults to coreLayout)\n * @returns {Object} layout - return object of template definitions for Blaze Layout\n */\nexport function ReactionLayout(options = {}) {\n  // Find a workflow layout to render\n  // Get the current shop data\n  const shop = Shops.findOne(Router.Reaction.getShopId());\n\n  // get the layout & workflow from options if they exist\n  // Otherwise get them from the Session. this is set in `/client/config/defaults`\n  // Otherwise, default to hard-coded values\n  const layoutName = options.layout || Session.get(\"DEFAULT_LAYOUT\") || \"coreLayout\";\n  const workflowName = options.workflow || Session.get(\"DEFAULT_WORKFLOW\") || \"coreWorkflow\";\n\n  // Layout object used to render\n  // Defaults provided for reference\n  let layoutStructure = {\n    template: \"\",\n    layoutHeader: \"\",\n    layoutFooter: \"\",\n    notFound: \"notFound\",\n    dashboardHeader: \"\",\n    dashboardControls: \"\",\n    dashboardHeaderControls: \"\",\n    adminControlsFooter: \"\"\n  };\n\n  // Find a registered layout using the layoutName and workflowName\n  if (shop) {\n    const sortedLayout = shop.layout.sort((prev, next) => prev.priority - next.priority);\n    const foundLayout = sortedLayout.find((x) => selectLayout(x, layoutName, workflowName));\n\n    if (foundLayout && foundLayout.structure) {\n      layoutStructure = {\n        ...foundLayout.structure\n      };\n    }\n  }\n\n  // If the original options did not include a workflow, but did have a template,\n  // then we override the template from the layout with the one provided by the options.\n  //\n  // Why is this? We always need a workflow to render the entire layout of the app.\n  // The default layout has a default template that may not be the one we want to render.\n  // Some routes, such as `/account/profile` do no have a workflow, but define a template.\n  // Without the logic below, it would end up rendering the homepage instead of the profile\n  // page.\n  // const optionsHasWorkflow = typeof options.workflow === \"string\";\n  const optionsHasTemplate = typeof options.template === \"string\";\n\n  if (optionsHasTemplate) {\n    layoutStructure.template = options.template;\n  }\n\n  // If there is no Blaze Template (Template[]) or React Component (getComponent)\n  // Then use the notFound template instead\n  if (!Template[layoutStructure.template] && !getComponent(layoutStructure.template)) {\n    return (\n      <Blaze template={layoutStructure.notFound} />\n    );\n  }\n\n  // Render the layout\n  return {\n    structure: layoutStructure,\n    component: (props) => { // eslint-disable-line react/no-multi-comp, react/display-name\n      const route = Router.current().route;\n      const structure = {\n        ...layoutStructure\n      };\n\n      // If the current route is unauthorized, and is not the \"not-found\" route,\n      // then override the template to use the default unauthroized template\n      if (hasRoutePermission(route) === false && route.name !== \"not-found\") {\n        structure.template = \"unauthorized\";\n      }\n\n      if (getComponent(layoutName)) {\n        return React.createElement(getComponent(layoutName), {\n          ...props,\n          structure: structure\n        });\n      } else if (Template[layoutName]) {\n        return (\n          <BlazeLayout\n            {...structure}\n            blazeTemplate={layoutName}\n          />\n        );\n      }\n\n      return <Blaze template={structure.notFound} />;\n    }\n  };\n}\n\n/**\n * initPackageRoutes\n * registers route and template when registry item has\n * registryItem.route && registryItem.template\n * @param {Object} options - options and context for route creation\n * @returns {undefined} returns undefined\n */\nRouter.initPackageRoutes = (options) => {\n  Router.Reaction = options.reactionContext;\n  Router.routes = [];\n\n  const pkgs = Packages.find().fetch();\n  const prefix = Router.Reaction.getShopPrefix();\n  const reactRouterRoutes = [];\n\n  // prefixing isnt necessary if we only have one shop\n  // but we need to bypass the current\n  // subscription to determine this.\n  const shopSub = Meteor.subscribe(\"shopsCount\");\n  if (shopSub.ready()) {\n    // using tmeasday:publish-counts\n    const shopCount = Counts.get(\"shops-count\");\n\n    // Index layout\n    const indexLayout = ReactionLayout(options.indexRoute);\n    const indexRoute = {\n      route: \"/\",\n      name: \"index\",\n      options: {\n        name: \"index\",\n        ...options.indexRoute,\n        component: indexLayout.component,\n        structure: indexLayout.structure\n      }\n    };\n\n    reactRouterRoutes.push(\n      <Route\n        exact={true}\n        key=\"index\"\n        path=\"/\"\n        render={indexLayout.component}\n      />\n    );\n\n    const notFoundLayout = ReactionLayout({ template: \"notFound\" });\n    const notFoundRoute = {\n      route: \"/not-found\",\n      name: \"not-found\",\n      options: {\n        name: \"not-found\",\n        ...notFoundLayout.indexRoute,\n        component: notFoundLayout.component,\n        structure: notFoundLayout.structure\n      }\n    };\n\n    reactRouterRoutes.push(\n      <Route\n        key=\"not-found\"\n        path=\"/not-found\"\n        render={notFoundLayout.component}\n      />\n    );\n\n    Router.routes.push(indexRoute);\n    Router.routes.push(notFoundRoute);\n\n    // get package registry route configurations\n    for (const pkg of pkgs) {\n      const newRoutes = [];\n      // pkg registry\n      if (pkg.registry && pkg.enabled) {\n        const registry = Array.from(pkg.registry);\n        for (const registryItem of registry) {\n          // registryItems\n          if (registryItem.route) {\n            const {\n              meta,\n              route,\n              template,\n              layout,\n              workflow\n            } = registryItem;\n\n            // get registry route name\n            const name = getRegistryRouteName(pkg.name, registryItem);\n\n            // define new route\n            // we could allow the options to be passed in the registry if we need to be more flexible\n            const reactionLayout = ReactionLayout({ template, workflow, layout });\n            const newRouteConfig = {\n              route,\n              name,\n              options: {\n                meta,\n                name,\n                template,\n                layout,\n                triggersEnter: Router.Hooks.get(\"onEnter\", name),\n                triggersExit: Router.Hooks.get(\"onExit\", name),\n                component: reactionLayout.component,\n                structure: reactionLayout.structure\n              }\n            };\n\n            // push new routes\n            newRoutes.push(newRouteConfig);\n          } // end registryItems\n        } // end package.registry\n\n        //\n        // add group and routes to routing table\n        //\n        const uniqRoutes = new Set(newRoutes);\n        let index = 0;\n        for (const route of uniqRoutes) {\n          // allow overriding of prefix in route definitions\n          // define an \"absolute\" url by excluding \"/\"\n          route.group = {};\n\n          if (route.route.substring(0, 1) !== \"/\") {\n            route.route = \"/\" + route.route;\n            route.group.prefix = \"\";\n          } else if (shopCount <= 1) {\n            route.group.prefix = \"\";\n          } else {\n            route.group.prefix = prefix;\n            route.route = `${prefix}${route.route}`;\n          }\n\n          // Add the route to the routing table\n          reactRouterRoutes.push(\n            <Route\n              key={`${pkg.name}-${route.name}-${index++}`}\n              path={route.route}\n              exact={true}\n              render={route.options.component}\n            />\n          );\n\n          Router.routes.push(route);\n        }\n      }\n    } // end package loop\n\n    Router._initialized = true;\n    Router.reactComponents = reactRouterRoutes;\n    Router._routes = Router.routes;\n\n    routerReadyDependency.changed();\n  }\n};\n\n\nexport default Router;\n","import React, { Component, PropTypes } from \"react\";\nimport classnames from \"classnames\";\nimport { Reaction, Router } from \"/client/api\";\nimport { composeWithTracker } from \"/lib/api/compose\";\nimport { Loading } from \"/imports/plugins/core/ui/client/components\";\nimport ToolbarContainer from \"/imports/plugins/core/dashboard/client/containers/toolbarContainer\";\nimport Toolbar from \"/imports/plugins/core/dashboard/client/components/toolbar\";\nimport { ActionViewContainer } from \"/imports/plugins/core/dashboard/client/containers\";\nimport { ActionView } from \"/imports/plugins/core/dashboard/client/components\";\n\nconst ConnectedToolbarComponent = ToolbarContainer(Toolbar);\nconst ConnectedAdminViewComponent = ActionViewContainer(ActionView);\n\nconst styles = {\n  customerApp: {\n    width: \"100%\"\n  },\n  adminApp: {\n    width: \"100%\",\n    height: \"100vh\",\n    display: \"flex\",\n    overflow: \"hidden\"\n  },\n  adminContentContainer: {\n    flex: \"1 1 auto\",\n    height: \"100vh\"\n  },\n  adminContainer: {\n    display: \"flex\",\n    flex: \"1 1 auto\"\n  },\n  scrollableContainer: {\n    overflow: \"auto\"\n  }\n};\n\nclass App extends Component {\n  static propTypes = {\n    children: PropTypes.node,\n    currentRoute: PropTypes.object.isRequired,\n    hasDashboardAccess: PropTypes.bool,\n    isActionViewOpen: PropTypes.bool\n  }\n\n  get isAdminApp() {\n    return this.props.hasDashboardAccess;\n  }\n\n  renderAdminApp() {\n    const pageClassName = classnames({\n      \"admin\": true,\n      \"page\": true,\n      \"show-settings\": this.props.isActionViewOpen\n    });\n\n    const currentRoute = this.props.currentRoute;\n    const routeOptions = currentRoute.route && currentRoute.route.options || {};\n    const routeData = routeOptions && currentRoute.route.options.structure || {};\n\n    return (\n      <div\n        style={styles.adminApp}\n      >\n        <div className={pageClassName} id=\"reactionAppContainer\" style={styles.adminContentContainer}>\n          <div className=\"reaction-toolbar\">\n            <ConnectedToolbarComponent data={routeData} />\n          </div>\n          <div style={styles.scrollableContainer}>\n            {this.props.children}\n          </div>\n        </div>\n        {this.props.hasDashboardAccess && <ConnectedAdminViewComponent />}\n      </div>\n    );\n  }\n\n  render() {\n    const pageClassName = classnames({\n      \"admin\": true,\n      \"show-settings\": this.props.isActionViewOpen\n    });\n\n    const currentRoute = this.props.currentRoute;\n    const layout = currentRoute.route.options.layout;\n\n    if (this.isAdminApp && layout !== \"printLayout\") {\n      return this.renderAdminApp();\n    }\n\n    return (\n      <div\n        className={pageClassName}\n        style={styles.customerApp}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nfunction composer(props, onData) {\n  onData(null, {\n    isActionViewOpen: Reaction.isActionViewOpen(),\n    hasDashboardAccess: Reaction.hasDashboardAccess(),\n    currentRoute: Router.current()\n  });\n}\n\nexport default composeWithTracker(composer, Loading)(App);\n","import React, { Component, PropTypes } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { matchPath } from \"react-router\";\nimport { Router as ReactRouter } from \"react-router-dom\";\nimport { Reaction } from \"/client/api\";\nimport pathToRegexp from \"path-to-regexp\";\nimport { isEqual } from \"lodash\";\nimport queryParse from \"query-parse\";\nimport { Session } from \"meteor/session\";\nimport { Tracker } from \"meteor/tracker\";\nimport App from \"/imports/plugins/core/router/client/app\";\nimport { Router } from \"../lib\";\nimport { MetaData } from \"/lib/api/router/metadata\";\nimport { TranslationProvider } from \"/imports/plugins/core/ui/client/providers\";\n\nconst history = Router.history;\n\nclass BrowserRouter extends Component {\n  static propTypes = {\n    children: PropTypes.node,\n    history: PropTypes.object,\n    store: PropTypes.object\n  }\n\n  static contextTypes = {\n    store: PropTypes.object\n  }\n\n  componentWillMount() {\n    this.unsubscribeFromHistory = history.listen(this.handleLocationChange);\n    this.handleLocationChange(history.location);\n  }\n\n  componentWillUnmount() {\n    if (this.unsubscribeFromHistory) this.unsubscribeFromHistory();\n  }\n\n  handleLocationChange = location => {\n    // Find all matching paths\n    const foundPaths = Router.routes.filter((pathObject) => {\n      return matchPath(location.pathname, {\n        path: pathObject.route,\n        exact: true\n      });\n    });\n\n    // If no matching pathis, redirect to the not found page\n    if (foundPaths.length === 0 && location.pathname !== \"not-found\") {\n      Router.replace(\"not-found\");\n      return undefined;\n    }\n\n    // If we have a found path, take the first match\n    const foundPath = foundPaths.length && foundPaths[0];\n    const params = {};\n\n    // Process the params from the found path definiton\n    if (foundPath) {\n      const keys = [];\n      const re = pathToRegexp(foundPath.route, keys); // Create parser with route regex\n      const values = re.exec(location.pathname); // Process values\n\n      // Create params object\n      keys.forEach((key, index) => {\n        params[key.name] = values[index + 1];\n      });\n    }\n\n    // Get serach (query) string from current location\n    let search = location.search;\n\n    // Remove the ? if it exists at the beginning\n    if (typeof search === \"string\" && search.startsWith(\"?\")) {\n      search = search.substr(1);\n    }\n\n    // Create objext of all necessary data for the current route\n    const routeData = {\n      route: {\n        ...foundPath,\n        name: foundPath.name,\n        path: location.pathname,\n        fullPath: `${location.pathname}${location.search}`\n      },\n      params,\n      query: queryParse.toObject(search), // Parse query string into object\n      payload: location\n    };\n\n    // Get the previousroute, which is the currentRoute just before it changes\n    const previousRoute = Router.current();\n\n    // If it seems like we've moved to a differen route, then run the onExit\n    // hooks for the previousRoute\n    const routesAreSame = isEqual(previousRoute.route, routeData.route);\n    const paramsAreSame = isEqual(previousRoute.params, routeData.params);\n    const queryParamsAreSame = isEqual(previousRoute.query, routeData.query);\n\n    const routesDiffer = routesAreSame && paramsAreSame && queryParamsAreSame;\n\n    if (routesDiffer === false) {\n      // Run on enter hooks\n      Router.Hooks.run(\"onExit\", \"GLOBAL\", routeData);\n      Router.Hooks.run(\"onExit\", previousRoute.name, previousRoute);\n\n      // Set current route reactive-var\n      Router.setCurrentRoute(routeData);\n\n      // Run on enter hooks for the new route\n      Router.Hooks.run(\"onEnter\", \"GLOBAL\", routeData);\n      Router.Hooks.run(\"onEnter\", routeData.name, routeData);\n    }\n  }\n\n  render() {\n    return (\n      <ReactRouter {...this.props} />\n    );\n  }\n}\n\nexport function getRootNode() {\n  let rootNode = document.getElementById(\"react-root\");\n\n  if (rootNode) {\n    return rootNode;\n  }\n  const rootNodeHtml = \"<div id='react-root'></div>\";\n  const body = document.getElementsByTagName(\"body\")[0];\n\n  body.insertAdjacentHTML(\"beforeend\", rootNodeHtml);\n  rootNode = document.getElementById(\"react-root\");\n\n  return rootNode;\n}\n\nexport function initBrowserRouter() {\n  Router.initPackageRoutes({\n    reactionContext: Reaction,\n    indexRoute: Session.get(\"INDEX_OPTIONS\") || {}\n  });\n\n  Router.Hooks.onEnter(MetaData.init);\n\n  Tracker.autorun(() => {\n    if (Router.ready()) {\n      ReactDOM.render((\n        <BrowserRouter history={history}>\n          <TranslationProvider>\n            <App children={Router.reactComponents} />\n          </TranslationProvider>\n        </BrowserRouter>\n      ), getRootNode());\n    }\n  });\n}\n\nexport default BrowserRouter;\n","import \"./startup\";\n","import { Meteor } from \"meteor/meteor\";\nimport { Tracker } from \"meteor/tracker\";\nimport { Reaction } from \"/client/api\";\nimport { initBrowserRouter } from \"./browserRouter\";\nimport { Router } from \"../lib\";\n\nMeteor.startup(function () {\n  Tracker.autorun(function () {\n    // initialize client routing\n    if (Reaction.Subscriptions.Packages.ready() && Reaction.Subscriptions.Shops.ready()) {\n      initBrowserRouter();\n    }\n  });\n\n  //\n  // we need to sometimes force\n  // router reload on login to get\n  // the entire layout to rerender\n  // we only do this when the routes table\n  // has already been generated (existing user)\n  //\n  Accounts.onLogin(() => {\n    if (Meteor.loggingIn() === false && Router._routes.length > 0) {\n      initBrowserRouter();\n    }\n  });\n});\n","import React, { Component, PropTypes } from \"react\";\nimport {\n  CardGroup,\n  CardToolbar,\n  FlatButton,\n  Form,\n  List,\n  ListItem,\n  SettingsCard\n} from \"/imports/plugins/core/ui/client/components\";\n\nimport { Shop as ShopSchema } from \"/lib/collections/schemas/shops\";\n\nconst PACKAGE_NAME = \"reaction-i18n\";\n\nclass LocalizationSettings extends Component {\n  static propTypes = {\n    currencies: PropTypes.array,\n    currencyOptions: PropTypes.array,\n    enabledLanguages: PropTypes.array,\n    languages: PropTypes.array,\n    onEnableAllCurrencies: PropTypes.func,\n    onEnableAllLanguages: PropTypes.func,\n    onUpdateCurrencyConfiguration: PropTypes.func,\n    onUpdateLanguageConfiguration: PropTypes.func,\n    onUpdateLocalization: PropTypes.func,\n    shop: PropTypes.object, // Shop data\n    timezoneOptions: PropTypes.array,\n    uomOptions: PropTypes.array\n  }\n\n  renderCurrencies() {\n    return this.props.currencies.map((currency, key) => {\n      return (\n        <ListItem\n          actionType={\"switch\"}\n          key={key}\n          label={currency.label}\n          switchOn={currency.enabled}\n          switchName={currency.name}\n          onSwitchChange={this.props.onUpdateCurrencyConfiguration}\n        />\n      );\n    });\n  }\n\n  renderLanguages() {\n    return this.props.languages.map((language, key) => {\n      return (\n        <ListItem\n          actionType={\"switch\"}\n          key={key}\n          label={language.label}\n          switchOn={language.enabled}\n          switchName={language.value}\n          onSwitchChange={this.props.onUpdateLanguageConfiguration}\n        />\n      );\n    });\n  }\n\n  handleSubmit = (event, formData) => {\n    if (typeof this.props.onUpdateLocalization === \"function\") {\n      this.props.onUpdateLocalization(formData.doc);\n    }\n  }\n\n  handleAllOn = (event, name) => {\n    if (name === \"language\") {\n      if (typeof this.props.onEnableAllLanguages === \"function\") {\n        this.props.onEnableAllLanguages(true);\n      }\n    } else if (name === \"currency\") {\n      if (typeof this.props.onEnableAllCurrencies === \"function\") {\n        this.props.onEnableAllCurrencies(true);\n      }\n    }\n  }\n\n  handleAllOff = (event, name) => {\n    if (name === \"language\") {\n      if (typeof this.props.onEnableAllLanguages === \"function\") {\n        this.props.onEnableAllLanguages(false);\n      }\n    } else if (name === \"currency\") {\n      if (typeof this.props.onEnableAllCurrencies === \"function\") {\n        this.props.onEnableAllCurrencies(false);\n      }\n    }\n  }\n\n  renderListControls(name) {\n    return (\n      <CardToolbar>\n        <FlatButton\n          i18nKeyLabel={\"all.allOn\"}\n          label=\"All On\"\n          value={name}\n          onClick={this.handleAllOn}\n        />\n        { \"|\" }\n        <FlatButton\n          i18nKeyLabel={\"all.allOff\"}\n          label=\"All Off\"\n          value={name}\n          onClick={this.handleAllOff}\n        />\n      </CardToolbar>\n    );\n  }\n\n  render() {\n    return (\n      <CardGroup>\n        <SettingsCard\n          i18nKeyTitle=\"i18nSettings.localization\"\n          name=\"localization\"\n          packageName={PACKAGE_NAME}\n          saveOpenStateToPreferences={true}\n          showSwitch={false}\n          title=\"Shop Localization\"\n        >\n          <Form\n            autoSave={true}\n            schema={ShopSchema}\n            doc={this.props.shop}\n            fields={{\n              timezone: {\n                type: \"select\",\n                options: this.props.timezoneOptions\n              },\n              currency: {\n                type: \"select\",\n                options: this.props.currencyOptions\n              },\n              baseUOM: {\n                type: \"select\",\n                options: this.props.uomOptions\n              },\n              language: {\n                type: \"select\",\n                options: this.props.enabledLanguages\n              }\n            }}\n            name=\"localization\"\n            onSubmit={this.handleSubmit}\n          />\n        </SettingsCard>\n        <SettingsCard\n          i18nKeyTitle=\"admin.i18nSettings.enabledLanguages\"\n          name=\"languages\"\n          padded={false}\n          packageName={PACKAGE_NAME}\n          saveOpenStateToPreferences={true}\n          showSwitch={false}\n          title=\"Languages\"\n        >\n          {this.renderListControls(\"language\")}\n          <List>\n            {this.renderLanguages()}\n          </List>\n        </SettingsCard>\n        <SettingsCard\n          i18nKeyTitle=\"i18nSettings.enabledCurrencies\"\n          padded={false}\n          packageName={PACKAGE_NAME}\n          name=\"currencies\"\n          saveOpenStateToPreferences={true}\n          showSwitch={false}\n          title=\"Currencies\"\n        >\n          {this.renderListControls(\"currency\")}\n          <List>\n            {this.renderCurrencies()}\n          </List>\n        </SettingsCard>\n      </CardGroup>\n    );\n  }\n}\n\nexport default LocalizationSettings;\n","import React, { Component } from \"react\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Reaction, i18next } from \"/client/api\";\nimport { composeWithTracker } from \"/lib/api/compose\";\nimport { Countries } from \"/client/collections\";\nimport { Shops } from \"/lib/collections\";\nimport LocalizationSettings from \"../components/localizationSettings\";\n\nclass LocalizationSettingsContainer extends Component {\n  static propTypes = LocalizationSettings.propTypes\n\n  handleUpdateLanguageConfiguration = (event, isChecked, name) => {\n    const language = this.props.languages.find((l) => l.value === name);\n\n    if (language) {\n      Meteor.call(\"shop/updateLanguageConfiguration\", language.value, isChecked);\n    }\n  }\n\n  handleUpdateCurrencyConfiguration = (event, isChecked, name) => {\n    Meteor.call(\"shop/updateCurrencyConfiguration\", name, isChecked);\n  }\n\n  handleSubmit = (doc) => {\n    Shops.update({\n      _id: doc._id\n    }, {\n      $set: {\n        timezone: doc.timezone,\n        currency: doc.currency,\n        baseUOM: doc.baseUOM,\n        language: doc.language\n      }\n    });\n  }\n\n  handleEnableAllLanguages = (isEnabled) => {\n    Meteor.call(\"shop/updateLanguageConfiguration\", \"all\", isEnabled);\n  }\n\n  handleEnableAllCurrencies = (isEnabled) => {\n    Meteor.call(\"shop/updateCurrencyConfiguration\", \"all\", isEnabled);\n  }\n\n  render() {\n    return (\n      <LocalizationSettings\n        {...this.props}\n        onEnableAllCurrencies={this.handleEnableAllCurrencies}\n        onEnableAllLanguages={this.handleEnableAllLanguages}\n        onUpdateCurrencyConfiguration={this.handleUpdateCurrencyConfiguration}\n        onUpdateLanguageConfiguration={this.handleUpdateLanguageConfiguration}\n        onUpdateLocalization={this.handleSubmit}\n      />\n    );\n  }\n}\n\nfunction composer(props, onData) {\n  const languages = [];\n  const shop = Shops.findOne();\n  const countries = Countries.find().fetch();\n  const preferences = Reaction.getUserPreferences(\"reaction-i18n\", \"settingsCards\", {});\n\n  if (typeof shop === \"object\" && shop.languages) {\n    for (const language of shop.languages) {\n      const i18nKey = \"languages.\" + language.label.toLowerCase();\n      languages.push({\n        label: language.label,\n        value: language.i18n,\n        enabled: (language.i18n === shop.language || language.enabled),\n        i18nKey: i18nKey\n      });\n    }\n  }\n\n  const currencies = shop.currencies;\n  const currencyList = [];\n  const currencyOptions = [];\n  for (const currency in currencies) {\n    if ({}.hasOwnProperty.call(currencies, currency)) {\n      if (currency === \"updatedAt\") {\n        continue;\n      }\n\n      const structure = currencies[currency];\n      const label = currency + \"  |  \" + structure.symbol + \"  |  \" +\n        structure.format;\n\n      currencyList.push({\n        name: currency,\n        label,\n        enabled: (structure.enabled || currency === shop.currency)\n      });\n\n      if (structure.enabled || currency === shop.currency) {\n        currencyOptions.push({\n          label,\n          value: currency\n        });\n      }\n    }\n  }\n\n\n  const unitsOfMeasure = Shops.findOne().unitsOfMeasure;\n  const uomOptions = [];\n  for (const measure of unitsOfMeasure) {\n    uomOptions.push({\n      label: i18next.t(`uom.${measure.uom}`, { defaultValue: measure.uom }),\n      value: measure.uom\n    });\n  }\n\n  const label = i18next.t(\"app.timezoneOptions\", \"Choose timezone\");\n  const timezoneOptions = [{\n    value: \"\",\n    label: label\n  }];\n  const timezones = moment.tz.names();\n  for (const timezone of timezones) {\n    timezoneOptions.push({\n      value: timezone,\n      label: timezone\n    });\n  }\n\n  onData(null, {\n    preferences,\n    shop,\n    languages,\n    currencies: currencyList,\n    enabledLanguages: languages.filter(language => (language.enabled || language.value === shop.language)),\n    countryOptions: countries,\n    currencyOptions,\n    uomOptions,\n    timezoneOptions\n  });\n}\n\nconst decoratedComponent = composeWithTracker(composer)(LocalizationSettingsContainer);\n\nexport default decoratedComponent;\n","import LocalizationSettingsContainer from \"./containers/localizationSettingsContainer\";\nimport { registerComponent } from \"/imports/plugins/core/layout/lib/components\";\n\nregisterComponent({\n  name: \"i18nSettings\",\n  component: LocalizationSettingsContainer\n});\n","/*\nForked from https://github.com/meteor-utilities/Meteor-Griddle\n */\nimport React from \"react\";\nimport _ from \"lodash\";\nimport Griddle from \"griddle-react\";\nimport { Counts } from \"meteor/tmeasday:publish-counts\";\nimport { ReactMeteorData } from \"meteor/react-meteor-data\";\n\n/* eslint react/prop-types:0, react/jsx-sort-props:0, react/forbid-prop-types: 0, \"react/prefer-es6-class\": [1, \"never\"] */\n\nconst MeteorGriddle = React.createClass({\n  propTypes: {\n    collection: React.PropTypes.object, // the collection to display\n    filteredFields: React.PropTypes.array, // an array of fields to search through when filtering\n    matchingResultsCount: React.PropTypes.string, // the name of the matching results counter\n    publication: React.PropTypes.string, // the publication that will provide the data\n    subsManager: React.PropTypes.object, // subsManager sub\n    transform: React.PropTypes.func // external function to filter result source\n  },\n  mixins: [ReactMeteorData],\n\n  getDefaultProps() {\n    return { useExternal: false, externalFilterDebounceWait: 300, externalResultsPerPage: 10, query: {} };\n  },\n\n  getInitialState() {\n    return {\n      currentPage: 0,\n      maxPages: 0,\n      externalResultsPerPage: this.props.externalResultsPerPage,\n      externalSortColumn: this.props.externalSortColumn,\n      externalSortAscending: this.props.externalSortAscending,\n      query: {}\n    };\n  },\n\n  componentWillMount() {\n    this.applyQuery = _.debounce((query) => {\n      this.setState({ query });\n    }, this.props.externalFilterDebounceWait);\n  },\n\n  getMeteorData() {\n    // Get a count of the number of items matching the current filter. If no filter is set it will return the total number\n    // of items in the collection.\n    const matchingResults = Counts.get(this.props.matchingResultsCount);\n\n    const options = {};\n    let skip;\n    if (this.props.useExternal) {\n      options.limit = this.state.externalResultsPerPage;\n      if (!_.isEmpty(this.state.query) && !!matchingResults) {\n        // if necessary, limit the cursor to number of matching results to avoid displaying results from other publications\n        options.limit = _.min([options.limit, matchingResults]);\n      }\n      options.sort = {\n        [this.state.externalSortColumn]: (this.state.externalSortAscending\n          ? 1\n          : -1)\n      };\n      skip = this.state.currentPage * this.state.externalResultsPerPage;\n    }\n\n    let pubHandle;\n\n    if (this.props.subsManager) {\n      pubHandle = this.props.subsManager.subscribe(this.props.publication, this.state.query, _.extend({\n        skip: skip\n      }, options));\n    } else {\n      pubHandle = Meteor.subscribe(this.props.publication, this.state.query, _.extend({\n        skip: skip\n      }, options));\n    }\n\n    // optional transform of collection for grid results\n    let results = this.props.collection.find(this.state.query, options).fetch();\n    if (this.props.transform) {\n      results = this.props.transform(results);\n    }\n\n    return {\n      loading: !pubHandle.ready(),\n      results: results,\n      matchingResults: matchingResults\n    };\n  },\n\n  resetQuery() {\n    this.setState({ query: {} });\n  },\n\n  // what page is currently viewed\n  setPage(index) {\n    this.setState({ currentPage: index });\n  },\n\n  // this changes whether data is sorted in ascending or descending order\n  changeSort(sort, sortAscending) {\n    this.setState({ externalSortColumn: sort, externalSortAscending: sortAscending });\n  },\n\n  setFilter(filter) {\n    if (filter) {\n      const filteredFields = this.props.filteredFields || this.props.columns;\n      const orArray = filteredFields.map((field) => {\n        const filterItem = {};\n        filterItem[field] = {\n          $regex: filter,\n          $options: \"i\"\n        };\n        return filterItem;\n      });\n      this.applyQuery({ $or: orArray });\n    } else {\n      this.resetQuery();\n    }\n  },\n\n  // this method handles determining the page size\n  setPageSize(size) {\n    this.setState({ externalResultsPerPage: size });\n  },\n\n  render() {\n    // figure out how many pages we have based on the number of total results matching the cursor\n    const maxPages = Math.ceil(this.data.matchingResults / this.state.externalResultsPerPage);\n\n    // The Griddle externalIsLoading property is managed internally to line up with the subscription ready state, so we're\n    // removing this property if it's passed in.\n    const allProps = this.props;\n    delete allProps.externalIsLoading;\n\n    return (<Griddle\n      {...allProps}\n      tableClassName=\"table\"\n      results={this.data.results}\n      columnMetadata={this.props.columnMetadata}\n      externalSetPage={this.setPage}\n      externalChangeSort={this.changeSort}\n      externalSetFilter={this.setFilter}\n      externalSetPageSize={this.setPageSize}\n      externalMaxPage={maxPages}\n      externalCurrentPage={this.state.currentPage}\n      resultsPerPage={this.state.externalResultsPerPage}\n      externalSortColumn={this.state.externalSortColumn}\n      externalSortAscending={this.state.externalSortAscending}\n      externalIsLoading={this.data.loading}\n            />);\n  }\n});\n\nexport default MeteorGriddle;\n","import \"./griddle.js\";\n","import { ExampleSettingsFormContainer } from \"../containers\";\nimport { Template } from \"meteor/templating\";\nimport \"./example.html\";\n\nTemplate.exampleSettings.helpers({\n  ExampleSettings() {\n    return {\n      component: ExampleSettingsFormContainer\n    };\n  }\n});\n","import React, { Component, PropTypes } from \"react\";\nimport _ from \"lodash\";\nimport { TextField, Translation, Checkbox } from \"/imports/plugins/core/ui/client/components\";\n\nclass ExampleSettingsForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      settings: {\n        apiKey: props.settings.apiKey,\n        support: props.settings.support\n      },\n      checkbox: {\n        \"Authorize\": _.includes(props.settings.support, \"Authorize\"),\n        \"De-authorize\": _.includes(props.settings.support, \"De-authorize\"),\n        \"Capture\": _.includes(props.settings.support, \"Capture\"),\n        \"Refund\": _.includes(props.settings.support, \"Refund\")\n      }\n    };\n  }\n\n  handleStateChange = (e) => {\n    const { settings } = this.state;\n    settings[e.target.name] = e.target.value;\n    this.setState({ settings });\n  }\n\n  handleCheckBox = (event, isInputChecked, name) => {\n    const { checkbox, settings } = this.state;\n    checkbox[name] = isInputChecked;\n    this.setState({ checkbox });\n    if (!_.includes(settings.support, name) && isInputChecked) {\n      settings.support.push(name);\n      return this.setState({ settings });\n    }\n    const index = settings.support.indexOf(name);\n    settings.support.splice(index, 1);\n    return this.setState({ settings });\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    return this.props.onSubmit(this.state.settings);\n  }\n\n\n  render() {\n    const { settings } = this.props;\n    const setting = this.state.settings;\n\n    return (\n      <div>\n        { !settings.apiKey &&\n          <div className=\"alert alert-info\">\n            <Translation defaultValue=\"Example Credentials\" i18nKey=\"admin.paymentSettings.exampleCredentials\"/>\n          </div>\n        }\n\n        <form onSubmit={this.handleSubmit}>\n          <TextField\n            label=\"API Key\"\n            name=\"apiKey\"\n            type=\"text\"\n            onChange={this.handleStateChange}\n            value={setting.apiKey}\n          />\n\n          <label className=\"control-label\">\n            <Translation defaultValue=\"Payment provider supported methods\" i18nKey=\"reaction-payments.paymentSettings.supportedMethodsLabel\"/>\n          </label>\n          <br/>\n\n          <div>\n            <Checkbox\n              label=\"Authorize\"\n              onChange={this.handleCheckBox}\n              name=\"Authorize\"\n              checked={this.state.checkbox.Authorize}\n            />\n          </div>\n\n          <div>\n            <Checkbox\n              label=\"De-authorize\"\n              onChange={this.handleCheckBox}\n              name=\"De-authorize\"\n              checked={this.state.checkbox[\"De-authorize\"]}\n            />\n          </div>\n\n          <div>\n            <Checkbox\n              label=\"Capture\"\n              onChange={this.handleCheckBox}\n              name=\"Capture\"\n              checked={this.state.checkbox.Capture}\n            />\n          </div>\n\n          <div>\n            <Checkbox\n              label=\"Refund\"\n              onChange={this.handleCheckBox}\n              name=\"Refund\"\n              checked={this.state.checkbox.Refund}\n            />\n          </div>\n\n\n          <button className=\"btn btn-primary pull-right\" type=\"submit\">\n            <Translation defaultValue=\"Save Changes\" i18nKey=\"app.saveChanges\"/>\n          </button>\n        </form>\n\n      </div>\n    );\n  }\n}\n\nExampleSettingsForm.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  settings: PropTypes.object\n};\n\nexport default ExampleSettingsForm;\n","export { default as ExampleSettingsForm } from \"./exampleSettingsForm.js\";\n","import React, { Component, PropTypes } from \"react\";\nimport { Meteor } from \"meteor/meteor\";\nimport { composeWithTracker } from \"/lib/api/compose\";\nimport { Packages } from \"/lib/collections\";\nimport { Loading } from \"/imports/plugins/core/ui/client/components\";\nimport { TranslationProvider } from \"/imports/plugins/core/ui/client/providers\";\nimport { Reaction, i18next } from \"/client/api\";\nimport { ExampleSettingsForm } from \"../components\";\n\nclass ExampleSettingsFormContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      apiKey: \"278302390293\"\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.saveUpdate = this.saveUpdate.bind(this);\n  }\n\n  handleChange(e) {\n    e.preventDefault();\n    this.setState({ apiKey: e.target.value });\n  }\n\n  handleSubmit(settings) {\n    // e.preventDefault();\n\n    const packageId = this.props.packageData._id;\n    const settingsKey = this.props.packageData.registry[0].settingsKey;\n\n    const fields = [{\n      property: \"apiKey\",\n      value: settings.apiKey\n    }, {\n      property: \"support\",\n      value: settings.support\n    }];\n\n    this.saveUpdate(fields, packageId, settingsKey);\n  }\n\n  saveUpdate(fields, id, settingsKey) {\n    Meteor.call(\"registry/update\", id, settingsKey, fields, (err) => {\n      if (err) {\n        return Alerts.toast(i18next.t(\"admin.settings.saveFailed\"), \"error\");\n      }\n      return Alerts.toast(i18next.t(\"admin.settings.saveSuccess\"), \"success\");\n    });\n  }\n\n  render() {\n    const settingsKey = this.props.packageData.registry[0].settingsKey;\n    return (\n      <TranslationProvider>\n        <ExampleSettingsForm\n          onChange={this.handleChange}\n          onSubmit={this.handleSubmit}\n          settings={this.props.packageData.settings[settingsKey]}\n        />\n      </TranslationProvider>\n    );\n  }\n}\n\nExampleSettingsFormContainer.propTypes = {\n  packageData: PropTypes.object\n};\n\nconst composer = ({}, onData) => {\n  const subscription = Meteor.subscribe(\"Packages\");\n  if (subscription.ready()) {\n    const packageData = Packages.findOne({\n      name: \"example-paymentmethod\",\n      shopId: Reaction.getShopId()\n    });\n    onData(null, { packageData });\n  }\n};\n\nexport default composeWithTracker(composer, Loading)(ExampleSettingsFormContainer);\n","export { default as ExampleSettingsFormContainer } from \"./exampleSettingsFormContainer\";\n","/* eslint camelcase: 0 */\nimport { Meteor } from \"meteor/meteor\";\nimport { Template } from \"meteor/templating\";\nimport { Reaction } from \"/client/api\";\nimport { Cart, Shops, Packages } from \"/lib/collections\";\nimport { Example } from \"../../lib/api\";\nimport { ExamplePayment } from \"../../lib/collections/schemas\";\n\nimport \"./example.html\";\n\nlet submitting = false;\n\nfunction uiEnd(template, buttonText) {\n  template.$(\":input\").removeAttr(\"disabled\");\n  template.$(\"#btn-complete-order\").text(buttonText);\n  return template.$(\"#btn-processing\").addClass(\"hidden\");\n}\n\nfunction paymentAlert(errorMessage) {\n  return $(\".alert\").removeClass(\"hidden\").text(errorMessage);\n}\n\nfunction hidePaymentAlert() {\n  return $(\".alert\").addClass(\"hidden\").text(\"\");\n}\n\nfunction handleExampleSubmitError(error) {\n  const serverError = error !== null ? error.message : void 0;\n  if (serverError) {\n    return paymentAlert(\"Oops! \" + serverError);\n  } else if (error) {\n    return paymentAlert(\"Oops! \" + error, null, 4);\n  }\n}\n\n\nTemplate.examplePaymentForm.helpers({\n  ExamplePayment() {\n    return ExamplePayment;\n  }\n});\n\nAutoForm.addHooks(\"example-payment-form\", {\n  onSubmit: function (doc) {\n    submitting = true;\n    const template = this.template;\n    hidePaymentAlert();\n    const form = {\n      name: doc.payerName,\n      number: doc.cardNumber,\n      expireMonth: doc.expireMonth,\n      expireYear: doc.expireYear,\n      cvv2: doc.cvv,\n      type: Reaction.getCardType(doc.cardNumber)\n    };\n    const storedCard = form.type.charAt(0).toUpperCase() + form.type.slice(1) + \" \" + doc.cardNumber.slice(-4);\n    Meteor.subscribe(\"Packages\");\n    const packageData = Packages.findOne({\n      name: \"example-paymentmethod\",\n      shopId: Reaction.getShopId()\n    });\n    Example.authorize(form, {\n      total: Cart.findOne().cartTotal(),\n      currency: Shops.findOne().currency\n    }, function (error, transaction) {\n      submitting = false;\n      let paymentMethod;\n      if (error) {\n        handleExampleSubmitError(error);\n        uiEnd(template, \"Resubmit payment\");\n      } else {\n        if (transaction.saved === true) {\n          submitting = false;\n          paymentMethod = {\n            processor: \"Example\",\n            paymentPackageId: packageData._id,\n            paymentSettingsKey: packageData.registry[0].settingsKey,\n            storedCard: storedCard,\n            method: \"credit\",\n            transactionId: transaction.transactionId,\n            currency: transaction.currency,\n            amount: transaction.amount,\n            status: transaction.status,\n            mode: \"authorize\",\n            createdAt: new Date(),\n            transactions: []\n          };\n          paymentMethod.transactions.push(transaction.response);\n          Meteor.call(\"cart/submitPayment\", paymentMethod);\n        } else {\n          handleExampleSubmitError(transaction.error);\n          uiEnd(template, \"Resubmit payment\");\n        }\n      }\n    });\n    return false;\n  },\n  beginSubmit: function () {\n    this.template.$(\":input\").attr(\"disabled\", true);\n    this.template.$(\"#btn-complete-order\").text(\"Submitting \");\n    return this.template.$(\"#btn-processing\").removeClass(\"hidden\");\n  },\n  endSubmit: function () {\n    if (!submitting) {\n      return uiEnd(this.template, \"Complete your order\");\n    }\n  }\n});\n","import \"./checkout/example\";\nimport \"./settings/templates/example\";\n","import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\nimport { PackageConfig } from \"/lib/collections/schemas/registry\";\n\nexport const ExamplePackageConfig = new SimpleSchema([\n  PackageConfig, {\n    \"settings.mode\": {\n      type: Boolean,\n      defaultValue: true\n    },\n    \"settings.apiKey\": {\n      type: String,\n      label: \"API Key\",\n      optional: true\n    }\n  }\n]);\n\nexport const ExamplePayment = new SimpleSchema({\n  payerName: {\n    type: String,\n    label: \"Cardholder name\"\n  },\n  cardNumber: {\n    type: String,\n    min: 13,\n    max: 16,\n    label: \"Card number\"\n  },\n  expireMonth: {\n    type: String,\n    max: 2,\n    label: \"Expiration month\"\n  },\n  expireYear: {\n    type: String,\n    max: 4,\n    label: \"Expiration year\"\n  },\n  cvv: {\n    type: String,\n    max: 4,\n    label: \"CVV\"\n  }\n});\n","export * from \"./example\";\n","import { Packages } from \"/lib/collections\";\n\nexport const Example = {\n  accountOptions: function () {\n    const settings = Packages.findOne({\n      name: \"reaction-paymentmethod\"\n    }).settings;\n    if (!settings.apiKey) {\n      throw new Meteor.Error(\"403\", \"Invalid Credentials\");\n    }\n    return settings.apiKey;\n  },\n\n  authorize: function (cardInfo, paymentInfo, callback) {\n    Meteor.call(\"exampleSubmit\", \"authorize\", cardInfo, paymentInfo, callback);\n  }\n};\n","export { Example } from \"./example\";\n","import { i18next } from \"/client/api\";\nimport * as Collections from \"/lib/collections\";\nimport { Session } from \"meteor/session\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Template } from \"meteor/templating\";\n\nTemplate.addressBookAdd.helpers({\n  thisAddress: function () {\n    const thisAddress = {};\n    // admin should receive his account\n    const account = Collections.Accounts.findOne({\n      userId: Meteor.userId()\n    });\n    if (account) {\n      if (account.profile) {\n        if (account.profile.name) {\n          thisAddress.fullName = account.profile.name;\n        }\n        // if this will be the first address we set defaults here and not display\n        // them inside form\n        if (account.profile.addressBook) {\n          if (account.profile.addressBook.length === 0) {\n            thisAddress.isShippingDefault = true;\n            thisAddress.isBillingDefault = true;\n          }\n        }\n      }\n    }\n\n    if (Session.get(\"address\")) {\n      thisAddress.postal = Session.get(\"address\").zipcode;\n      thisAddress.country = Session.get(\"address\").countryCode;\n      thisAddress.city = Session.get(\"address\").city;\n      thisAddress.region = Session.get(\"address\").state;\n    }\n\n    return thisAddress;\n  },\n\n  hasAddressBookEntries: function () {\n    const account = Collections.Accounts.findOne({\n      userId: Meteor.userId()\n    });\n    if (account) {\n      if (account.profile) {\n        if (account.profile.addressBook) {\n          return account.profile.addressBook.length > 0;\n        }\n      }\n    }\n\n    return false;\n  }\n});\n\n\nexport function setValidatedAddress(res) {\n  if (res.validatedAddress.city) {\n    const city = $(\"input[name='city']\");\n    city.val(res.validatedAddress.city);\n  }\n  if (res.validatedAddress.postal) {\n    const postal = $(\"input[name='postal']\");\n    postal.val(res.validatedAddress.postal);\n  }\n  if (res.validatedAddress.address1) {\n    const address1 = $(\"input[name='address1']\");\n    address1.val(res.validatedAddress.address1);\n  }\n\n  if (res.validatedAddress.address2) {\n    const address2 = $(\"input[name='address2']\");\n    address2.val(res.validatedAddress.address2);\n  }\n  if (res.validatedAddress.country) {\n    const country = $(\"select[name='country']\");\n    country.val(res.validatedAddress.country);\n  }\n\n  if (res.validatedAddress.region) {\n    const region = $(\"select[name='region']\");\n    region.val(res.validatedAddress.region);\n  }\n}\n\n/**\n * addressBookAddForm form handling\n * @description gets accountId and calls addressBookAdd method\n * @fires \"accounts/addressBookAdd\" method\n */\nAutoForm.hooks({\n  addressBookAddForm: {\n    onSubmit: function (insertDoc) {\n      const that = this;\n      this.event.preventDefault();\n      const addressBook = $(this.template.firstNode).closest(\".address-book\");\n\n      Meteor.call(\"accounts/validateAddress\", insertDoc, function (err, res) {\n        if (res.validated) {\n          Meteor.call(\"accounts/addressBookAdd\", insertDoc, function (error, result) {\n            if (error) {\n              Alerts.toast(i18next.t(\"addressBookAdd.failedToAddAddress\", { err: error.message }), \"error\");\n              that.done(new Error(\"Failed to add address: \", error));\n              return false;\n            }\n            if (result) {\n              that.done();\n              addressBook.trigger($.Event(\"showMainView\"));\n              return true;\n            }\n          });\n        } else {\n          if (res.validatedAddress) {\n            setValidatedAddress(res);\n            Alerts.inline(\"Made changes to your address based upon validation. Please ensure this is correct\", \"warning\", {\n              placement: \"addressBookAdd\",\n              i18nKey: \"addressBookAdd.validatedAddress\"\n            });\n          }\n          if (res.formErrors) {\n            for (const error of res.formErrors) {\n              Alerts.inline(error.details, \"error\", {\n                placement: \"addressBookAdd\"\n              });\n            }\n          }\n          that.done(\"Validation failed\"); // renable Save and Continue button\n        }\n      });\n    }\n  }\n});\n","import { i18next } from \"/client/api\";\nimport { Meteor } from \"meteor/meteor\";\nimport { setValidatedAddress } from \"../add/add\";\n\n/*\n * update address book (cart) form handling\n * onSubmit we need to add accountId which is not in context\n */\n\nAutoForm.hooks({\n  addressBookEditForm: {\n    onSubmit: function (insertDoc) {\n      const that = this;\n      this.event.preventDefault();\n      const addressBook = $(this.template.firstNode).closest(\".address-book\");\n\n      Meteor.call(\"accounts/validateAddress\", insertDoc, function (err, res) {\n        if (res.validated) {\n          Meteor.call(\"accounts/addressBookUpdate\", insertDoc, (error, result) => {\n            if (error) {\n              Alerts.toast(i18next.t(\"addressBookEdit.somethingWentWrong\", { err: error.message }), \"error\");\n              this.done(new Error(error));\n              return false;\n            }\n            if (result) {\n              that.done();\n\n              // Show the grid\n              addressBook.trigger($.Event(\"showMainView\"));\n            }\n          });\n        } else {\n          if (res.validatedAddress) {\n            setValidatedAddress(res);\n            Alerts.inline(\"Made changes to your address based upon validation. Please ensure this is correct\", \"warning\", {\n              placement: \"addressBookEdit\",\n              i18nKey: \"addressBookAdd.validatedAddress\"\n            });\n          }\n          if (res.formErrors) {\n            for (const error of res.formErrors) {\n              Alerts.inline(error.details, \"error\", {\n                placement: \"addressBookEdit\"\n              });\n            }\n          }\n          that.done(\"Validation failed\"); // renable Save and Continue button\n        }\n      });\n    }\n  }\n});\n","import { Session } from \"meteor/session\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Countries } from \"/client/collections\";\nimport * as Collections from \"/lib/collections\";\nimport { Template } from \"meteor/templating\";\n\nTemplate.addressBookForm.helpers({\n\n  /*\n   * TODO: update for i18n\n   */\n  countryOptions: function () {\n    return Countries.find().fetch();\n  },\n  statesForCountry: function () {\n    let locale;\n    const shop = Collections.Shops.findOne();\n    const selectedCountry = Session.get(\"addressBookCountry\") || AutoForm.getFieldValue(\"country\");\n    if (!selectedCountry) {\n      return false;\n    }\n    if ((shop !== null ? shop.locales.countries[selectedCountry].states : void 0) === null) {\n      return false;\n    }\n    options = [];\n    const ref = shop !== null ? shop.locales.countries[selectedCountry].states : void 0;\n    for (const state in ref) {\n      if ({}.hasOwnProperty.call(ref, state)) {\n        locale = ref[state];\n        options.push({\n          label: locale.name,\n          value: state\n        });\n      }\n    }\n    return options;\n  },\n\n  /*\n   *  Defaults billing/shipping when 1st new address.\n   */\n  isBillingDefault: function () {\n    return typeof this.address === \"object\" ? this.address.isBillingDefault : true;\n  },\n  isShippingDefault: function () {\n    return typeof this.address === \"object\" ? this.address.isShippingDefault : true;\n  },\n  hasAddressBookEntries: function () {\n    const account = Collections.Accounts.findOne({\n      userId: Meteor.userId()\n    });\n    if (account) {\n      if (account.profile) {\n        if (account.profile.addressBook) {\n          return account.profile.addressBook.length > 0;\n        }\n      }\n    }\n\n    return false;\n  }\n});\n\nTemplate.addressBookForm.events({\n  \"change [name='country']\": function () {\n    return Session.set(\"addressBookCountry\", AutoForm.getFieldValue(\"country\"));\n  }\n});\n","import * as Collections from \"/lib/collections\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Template } from \"meteor/templating\";\n\n/*\n * handles display of addressBook grid\n */\nTemplate.addressBookGrid.helpers({\n  selectedBilling: function () {\n    const cart = Collections.Cart.findOne({\n      userId: Meteor.userId()\n    });\n\n    if (cart) {\n      if (cart.billing) {\n        if (cart.billing[0].address) {\n          if (this._id === cart.billing[0].address._id) {\n            return \"active\";\n          }\n        }\n      } else { // if this is a first checkout review, we need to push default\n        // billing address to cart\n        if (this.isBillingDefault) {\n          Meteor.call(\"cart/setPaymentAddress\", cart._id, this);\n          // return \"active\";\n        }\n      }\n    }\n  },\n\n  selectedShipping: function () {\n    const cart = Collections.Cart.findOne({\n      userId: Meteor.userId()\n    });\n\n    if (cart) {\n      if (cart.shipping) {\n        if (cart.shipping[0].address) {\n          if (this._id === cart.shipping[0].address._id) {\n            return \"active\";\n          }\n        }\n      } else { // if this is a first checkout review, we need to push default\n        // shipping address to cart\n        if (this.isShippingDefault) {\n          Meteor.call(\"cart/setShipmentAddress\", cart._id, this);\n          // return \"active\";\n        }\n      }\n    }\n  },\n  account: function () {\n    return Collections.Accounts.findOne({\n      userId: Meteor.userId()\n    });\n  }\n});\n\n/*\n * events\n */\n\nTemplate.addressBookGrid.events({\n  \"click [data-event-action=selectShippingAddress]\": function () {\n  // update address(make it default) only if wasn't already\n    if (!this.isShippingDefault) {\n      return Meteor.call(\"accounts/addressBookUpdate\", this, null,\n        \"isShippingDefault\");\n    }\n  },\n  \"click [data-event-action=selectBillingAddress]\": function () {\n    // update address(make it default) only if wasn't already\n    if (!this.isBillingDefault) {\n      return Meteor.call(\"accounts/addressBookUpdate\", this, null,\n        \"isBillingDefault\");\n    }\n  }\n});\n","import { Meteor } from \"meteor/meteor\";\nimport { ReactiveVar } from \"meteor/reactive-var\";\nimport { i18next } from \"/client/api\";\nimport * as Collections from \"/lib/collections\";\nimport { Template } from \"meteor/templating\";\n\n/*\n * Template.checkoutAddressBook\n * template determines which view should be used:\n * addAddress (edit or add)\n * addressBookView (view)\n */\n\nTemplate.addressBook.onCreated(function () {\n  this.currentViewTemplate = ReactiveVar(\"addressBookAdd\");\n  this.templateData = ReactiveVar({});\n\n  this.autorun(() => {\n    this.subscribe(\"Accounts\", Meteor.userId());\n\n    const account = Collections.Accounts.findOne({\n      userId: Meteor.userId()\n    });\n\n    if (account) {\n      if (account.profile) {\n        if (account.profile.addressBook) {\n          if (account.profile.addressBook.length === 0) {\n            this.currentViewTemplate.set(\"addressBookAdd\");\n          } else {\n            this.currentViewTemplate.set(\"addressBookGrid\");\n          }\n        }\n      }\n    }\n  });\n});\n\n// Template.addressBook.onRendered(function () {\n//   let view = this.$(\"[blaze-view=\"addressBook\"]\").get(0);\n// });\n\nTemplate.addressBook.helpers({\n  account: function () {\n    const account = Collections.Accounts.findOne({\n      userId: Meteor.userId()\n    });\n    return account;\n  },\n\n  data: function () {\n    return Template.instance().templateData.get();\n  },\n\n  currentView: function () {\n    return Template.instance().currentViewTemplate.get();\n  },\n\n  selectedAddress: function () {\n    return Template.instance.templateData.get();\n  }\n});\n\nTemplate.addressBook.events({\n\n  // **************************************************************************\n  //\n  //\n  \"click [data-event-action=addNewAddress]\": function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    Template.instance().currentViewTemplate.set(\"addressBookAdd\");\n  },\n\n  // **************************************************************************\n  // Edit an address\n  //\n  \"click [data-event-action=editAddress]\": function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    Template.instance().templateData.set({\n      address: this\n    });\n\n    Template.instance().currentViewTemplate.set(\"addressBookEdit\");\n  },\n\n  // **************************************************************************\n  // Remove the address from the address book\n  //\n  \"click [data-event-action=removeAddress]\": function (event, template) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    Meteor.call(\"accounts/addressBookRemove\", this._id, (error, result) => {\n      if (error) {\n        Alerts.toast(i18next.t(\"addressBookGrid.cantRemoveThisAddress\", { err: error.message }), \"error\");\n      }\n      if (result) {\n        const account = Collections.Accounts.findOne({\n          userId: Meteor.userId()\n        });\n        if (account) {\n          if (account.profile) {\n            if (account.profile.addressBook.length === 0) {\n              template.currentViewTemplate.set(\"addressBookAdd\");\n            }\n          }\n        }\n      }\n    });\n  },\n\n  \"click [data-event-action=cancelAddressEdit], form submit, showMainView\": function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    Template.instance().currentViewTemplate.set(\"addressBookGrid\");\n  }\n});\n","import _ from \"lodash\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Template } from \"meteor/templating\";\nimport { Reaction, i18next } from \"/client/api\";\nimport { ServiceConfigHelper } from \"../../helpers/util\";\n\n/**\n * Accounts helpers\n */\nTemplate.accountsDashboard.onCreated(function () {\n  this.autorun(() => {\n    this.subscribe(\"ShopMembers\");\n  });\n});\n\nTemplate.accountsDashboard.helpers({\n  /**\n   * isShopMember\n   * @param {Object} member member object\n   * @return {Boolean} True if the memnber is an administrator\n   */\n  isShopMember() {\n    return _.includes([\"dashboard\", \"admin\", \"owner\"], this.role);\n  },\n\n  /**\n   * isShopGuest\n   * @param {Object} member member object\n   * @return {Boolean} True if the member is a guest\n   */\n  isShopGuest() {\n    return !_.includes([\"dashboard\", \"admin\", \"owner\"], this.role);\n  },\n  /**\n   * members\n   * @return {Boolean} True array of adminsitrative members\n   */\n  members() {\n    if (Reaction.hasPermission(\"reaction-accounts\")) {\n      const shopId = Reaction.getShopId();\n      const instance = Template.instance();\n      if (instance.subscriptionsReady()) {\n        const shopUsers = Meteor.users.find();\n\n        return shopUsers.map(user => {\n          const member = {};\n\n          member.userId = user._id;\n\n          if (user.emails && user.emails.length) {\n            // this is some kind of denormalization. It is helpful to have both\n            // of this string and array. Array goes to avatar, string goes to\n            // template\n            member.emails = user.emails;\n            member.email = user.emails[0].address;\n          }\n          // member.user = user;\n          member.username = user.username;\n          member.isAdmin = Roles.userIsInRole(user._id, \"admin\", shopId);\n          member.roles = user.roles;\n          member.services = user.services;\n\n          if (Roles.userIsInRole(member.userId, \"owner\", shopId)) {\n            member.role = \"owner\";\n          } else if (Roles.userIsInRole(member.userId, \"admin\", shopId)) {\n            member.role = \"admin\";\n          } else if (Roles.userIsInRole(member.userId, \"dashboard\", shopId)) {\n            member.role = \"dashboard\";\n          } else if (Roles.userIsInRole(member.userId, \"guest\", shopId)) {\n            member.role = \"guest\";\n          }\n\n          return member;\n        });\n      }\n    }\n  }\n});\n\n/**\n * Account Settings Helpers\n */\nTemplate.accountsSettings.onCreated(function () {\n  this.subscribe(\"ServiceConfiguration\", Meteor.userId());\n});\n\n/**\n * Account Settings Helpers\n */\nTemplate.accountsSettings.helpers({\n\n  /**\n   * services\n   * @return {Array} available services\n   */\n  services() {\n    const serviceHelper = new ServiceConfigHelper();\n    const configurations = ServiceConfiguration.configurations.find().fetch();\n\n    const services = serviceHelper.services((item) => {\n      const matchingConfigurations = _.filter(configurations, {\n        service: item.name\n      });\n      if (matchingConfigurations.length) {\n        return matchingConfigurations[0];\n      }\n    });\n\n    return services;\n  },\n\n  /**\n   * Template helper to add a hidden class if the condition is false\n   * @param  {Boolean} enabled Service enabled\n   * @return {String}          \"hidden\" or \"\"\n   */\n  shown(enabled) {\n    return enabled !== true ? \"hidden\" : \"\";\n  },\n\n  /**\n   * Return checked classname if true\n   * @param  {Boolean} enabled Boolean value true/false\n   * @return {String}          \"checked\" or \"\"\n   */\n  checked(enabled) {\n    return enabled === true ? \"checked\" : \"\";\n  },\n\n  /**\n   * Returns a value from the supplied service object with a field name\n   * @param  {String} fieldName name of field to retrive the value for.\n   * @param  {Object} service   Service object to find the value in.\n   * @return {String}           A value or blank string if nothing is found.\n   */\n  valueForField(fieldName, service) {\n    return service[fieldName] || \"\";\n  }\n});\n\nTemplate.accountsSettings.events({\n\n  /**\n   * Account settings form submit\n   * @param  {event} event    jQuery event\n   * @return {void}\n   */\n  \"submit form\": (event) => {\n    event.preventDefault();\n\n    const service = event.target.service.value;\n    const serviceHelper = new ServiceConfigHelper();\n    const fields = serviceHelper.configFieldsForService(service);\n    // todo remove this after i18next 2 will be installed\n    // let niceName = serviceHelper.capitalizedServiceName(service);\n\n    for (const field of fields) {\n      field.value = event.target[field.property].value;\n    }\n\n    Meteor.call(\"accounts/updateServiceConfiguration\", service, fields, (error) => {\n      if (!error) {\n        Alerts.toast(i18next.t(\n          \"accountsUI.updatedServiceConfiguration\",\n          { service: i18next.t(`social.${service}`) }\n        ));\n      }\n    });\n  },\n\n  /**\n   * Account settings update enabled status for login service on change\n   * @param  {event} event    jQuery Event\n   * @return {void}\n   */\n  \"change input[name=enabled]\": (event) => {\n    const service = event.target.value;\n    const fields = [{\n      property: \"enabled\",\n      value: event.target.checked\n    }];\n\n    Meteor.call(\"accounts/updateServiceConfiguration\", service, fields);\n  },\n\n  /**\n   * Account settings show/hide secret key for a service\n   * @param  {event} event    jQuery Event\n   * @return {void}\n   */\n  \"click [data-event-action=showSecret]\": (event) => {\n    const button = Template.instance().$(event.currentTarget);\n    const input = button.closest(\".form-group\").find(\"input[name=secret]\");\n\n    if (input.attr(\"type\") === \"password\") {\n      input.attr(\"type\", \"text\");\n      button.html(\"Hide\");\n    } else {\n      input.attr(\"type\", \"password\");\n      button.html(\"Show\");\n    }\n  }\n});\n","import { Reaction, Logger } from \"/client/api\";\nimport { Tags } from \"/lib/collections\";\nimport { Session } from \"meteor/session\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Template } from \"meteor/templating\";\n\nTemplate.loginDropdown.events({\n\n  /**\n   * Submit sign up form\n   * @param  {Event} event - jQuery Event\n   * @param  {Template} template - Blaze Template\n   * @return {void}\n   */\n  \"click .dropdown-menu\": (event) => {\n    return event.stopPropagation();\n  },\n\n  /**\n   * Submit sign up form\n   * @param  {Event} event - jQuery Event\n   * @param  {Template} template - Blaze Template\n   * @return {void}\n   */\n  \"click #logout\": (event, template) => {\n    event.preventDefault();\n    template.$(\".dropdown-toggle\").dropdown(\"toggle\");\n    // Meteor.logoutOtherClients();\n    Meteor.logout((error) => {\n      if (error) {\n        Logger.warn(\"Failed to logout.\", error);\n      }\n    });\n  },\n\n  /**\n   * Submit sign up form\n   * @param  {Event} event - jQuery Event\n   * @param  {Template} template - Blaze Template\n   * @return {void}\n   */\n  \"click .user-accounts-dropdown-apps a\": function (event, template) {\n    if (this.name === \"createProduct\") {\n      event.preventDefault();\n      event.stopPropagation();\n\n      Meteor.call(\"products/createProduct\", (error, productId) => {\n        let currentTag;\n        let currentTagId;\n\n        if (error) {\n          throw new Meteor.Error(\"createProduct error\", error);\n        } else if (productId) {\n          currentTagId = Session.get(\"currentTag\");\n          currentTag = Tags.findOne(currentTagId);\n          if (currentTag) {\n            Meteor.call(\"products/updateProductTags\", productId, currentTag.name, currentTagId);\n          }\n          Reaction.Router.go(\"product\", {\n            handle: productId\n          });\n        }\n      });\n    } else if (this.name !== \"account/profile\") {\n      event.preventDefault();\n      /** TMP **/\n      Reaction.showActionView(this);\n    } else if (this.route || this.name) {\n      const route = this.name || this.route;\n      Reaction.Router.go(route);\n    }\n    template.$(\".dropdown-toggle\").dropdown(\"toggle\");\n  }\n});\n\nTemplate.accountsDropdownApps.helpers({\n  reactionAppsOptions() {\n    // get shortcuts with audience permissions based on user roles\n    const roles = Roles.getRolesForUser(Meteor.userId(), Reaction.getShopId());\n\n    return {\n      provides: \"shortcut\",\n      enabled: true,\n      audience: roles\n    };\n  }\n});\n","import { Meteor } from \"meteor/meteor\";\nimport { Template } from \"meteor/templating\";\nimport { i18next } from \"/client/api\";\nimport { LoginFormSharedHelpers } from \"/client/modules/accounts/helpers\";\n\nTemplate.loginFormResetPasswordView.events({\n\n  /**\n   * Submit the password reset form\n   * @param {Event} event - jQuery Event\n   * @param {Object} template - Blaze Template\n   * @return {void}\n   */\n  \"submit form\": (event, template) => {\n    event.preventDefault();\n\n    const emailAddress = template.$(\".login-input-email\").val().trim();\n    const validatedEmail = LoginFormValidation.email(emailAddress);\n    const templateInstance = Template.instance();\n    const errors = {};\n\n    templateInstance.formMessages.set({});\n\n    if (validatedEmail !== true) {\n      errors.email = validatedEmail;\n    }\n\n    if ($.isEmptyObject(errors) === false) {\n      templateInstance.formMessages.set({\n        errors: errors\n      });\n      // prevent password reset\n      // return;\n    }\n\n    Meteor.call(\"accounts/sendResetPasswordEmail\", { email: emailAddress }, (error) => {\n      // Show some message confirming result\n      if (error) {\n        templateInstance.formMessages.set({\n          alerts: [error]\n        });\n      } else {\n        templateInstance.formMessages.set({\n          info: [{\n            reason: i18next.t(\"accountsUI.info.passwordResetSend\") || \"Password reset mail sent.\"\n          }]\n        });\n      }\n    });\n  }\n\n});\n\n/**\n * loginFormResetPasswordView\n *\n */\nTemplate.loginFormResetPasswordView.onCreated(() => {\n  const template = Template.instance();\n\n  template.uniqueId = Random.id();\n  template.formMessages = new ReactiveVar({});\n});\n\n\nTemplate.loginFormResetPasswordView.helpers(LoginFormSharedHelpers);\n","import { Meteor } from \"meteor/meteor\";\nimport { Template } from \"meteor/templating\";\n\n/**\n * Inline login form for instance where guest login is needed.\n */\nTemplate.loginInline.events({\n\n  /**\n   * Continue as guest.\n   * @param  {Event} event - jQuery Event\n   * @return {void}\n   */\n  \"click .continue-guest\": (event) => {\n    event.preventDefault();\n    Meteor.call(\"workflow/pushCartWorkflow\", \"coreCartWorkflow\", \"checkoutLogin\");\n  }\n});\n","import { Meteor } from \"meteor/meteor\";\nimport { Template } from \"meteor/templating\";\n\n// ============================================================================\n// Login form\n//\n//\n\n// XXX from http://epeli.github.com/underscore.string/lib/underscore.string.js\nfunction capitalize(str) {\n  const finalString = str === null ? \"\" : String(str);\n  return finalString.charAt(0).toUpperCase() + finalString.slice(1);\n}\n\n\n// ----------------------------------------------------------------------------\n// Login Form helpers\n//\n\nTemplate.loginForm.helpers({\n\n  /**\n   * Login form current view\n   * @return {String} Name of the template to use as the current view.\n   */\n  loginFormCurrentView() {\n    return Template.instance().loginFormCurrentView.get();\n  },\n\n  /**\n   * Login form data\n   * @return {Object} Object containing data for the current login form view.\n   */\n  loginFormData() {\n    return {\n      credentials: Template.instance().credentials\n    };\n  },\n\n  /**\n   * Unique id to use on form elements\n   * @return {String} String of the unique ID for the current template\n   */\n  uniqueId() {\n    return Template.instance().uniqueId;\n  }\n\n});\n\n/**\n * Login form onCreated\n */\nTemplate.loginForm.onCreated(function () {\n  const template = Template.instance();\n  const currentData = Template.currentData();\n  let startView = \"loginFormSignInView\";\n\n  if (currentData) {\n    if (currentData.startView) {\n      startView = currentData.startView;\n    }\n  }\n\n  template.loginFormCurrentView = new ReactiveVar(startView);\n  template.uniqueId = Random.id();\n  template.credentials = {};\n});\n\n/**\n * Login Form events\n * These events are shared across all login form views and subviews\n */\nTemplate.loginForm.events({\n\n  /**\n   * Event: Show sign in view\n   * @param  {Event}    event    jQuery Event\n   * @param  {Template} template Blaze Template instance\n   * @return {void}\n   */\n  \"click [data-event-action=signIn]\": function (event, template) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    template.credentials = {\n      email: template.$(\".login-input-email\").val(),\n      password: template.$(\".login-input-password\").val()\n    };\n\n    template.loginFormCurrentView.set(\"loginFormSignInView\");\n  },\n\n  /**\n   * Event: Show the sign up (register) view\n   * @param  {Event}    event    jQuery Event\n   * @param  {Template} template Blaze Template instance\n   * @return {void}\n   */\n  \"click [data-event-action=signUp]\": (event, template) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    template.credentials = {\n      email: template.$(\".login-input-email\").val(),\n      password: template.$(\".login-input-password\").val()\n    };\n\n    template.loginFormCurrentView.set(\"loginFormSignUpView\");\n  },\n\n  /**\n   * Event: Show the password reset view\n   * @param  {Event}    event    jQuery Event\n   * @param  {Template} template Blaze Template instance\n   * @return {void}\n   */\n  \"click [data-event-action=forgotPassword]\": (event, template) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    template.credentials = {\n      email: template.$(\".login-input-email\").val(),\n      password: template.$(\".login-input-password\").val()\n    };\n\n    template.loginFormCurrentView.set(\"loginFormResetPasswordView\");\n  }\n});\n\n/**\n * Service sign in button helpers\n */\nTemplate.loginFormServiceButton.events({\n\n  /**\n   * Event: Click (click on the service button to sign in / sign up)\n   * @param  {Event}    event    jQuery Event\n   * @param  {Template} template Blaze Template instance\n   * @return {void}\n   */\n  \"click button\": (event, template) => {\n    let serviceName = template.data.name;\n\n    // Get proper service name\n    if (serviceName === \"meteor-developer\") {\n      serviceName = \"MeteorDeveloperAccount\";\n    } else {\n      serviceName = capitalize(serviceName);\n    }\n\n    const loginWithService = Meteor[\"loginWith\" + serviceName];\n    const options = {}; // use default scope unless specified\n\n    loginWithService(options, () => {\n      // TODO: add error message for failed login attempt\n    });\n  }\n});\n","import _ from \"lodash\";\nimport { Reaction } from \"/client/api\";\nimport { Packages, Shops } from \"/lib/collections\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Template } from \"meteor/templating\";\n\nconst getPermissionMap = (permissions) => {\n  const permissionMap = {};\n  _.each(permissions, function (existing) {\n    permissionMap[existing.permission] = existing.label;\n  });\n  return permissionMap;\n};\n\n/**\n * shopMember helpers\n * permissions / roles controls\n * we use userInRole instead of Reaction intentionally\n * to check each users permissions\n */\nTemplate.member.events({\n  \"click [data-event-action=showMemberSettings]\": function () {\n    $(\".customerUsageType input\").val(\"\"); // form reset\n    $(\".customerUsageType\").addClass(\"hide\"); // form reset\n    Reaction.setActionViewDetail({\n      label: \"Permissions\",\n      i18nKeyLabel: \"admin.settings.permissionsSettingsLabel\",\n      data: this,\n      template: \"memberSettings\"\n    });\n  }\n});\n\nTemplate.memberSettings.helpers({\n  isOwnerDisabled: function () {\n    if (Meteor.userId() === this.userId) {\n      if (Roles.userIsInRole(this.userId, \"owner\", this.shopId)) {\n        return true;\n      }\n    }\n  },\n  userId: function () {\n    return Meteor.userId();\n  },\n  hasPermissionChecked: function (permission, userId) {\n    if (userId && Roles.userIsInRole(userId, permission, this.shopId || Roles.userIsInRole(userId, permission,\n        Roles.GLOBAL_GROUP))) {\n      return \"checked\";\n    }\n  },\n  groupsForUser: function (groupUserId) {\n    const userId = groupUserId || this.userId || Template.parentData(1).userId;\n    return Roles.getGroupsForUser(userId);\n  },\n  shopLabel: function (thisShopId) {\n    const shopId = thisShopId || Template.currentData();\n    const shop = Shops.findOne({\n      _id: shopId\n    });\n    if (shop && shop.name) {\n      return shop.name || \"Default Shop\";\n    }\n  },\n  permissionGroups: function (thisShopId) {\n    const permissionGroups = [];\n    const shopId = thisShopId || Template.currentData();\n    const packages = Packages.find({\n      shopId: shopId\n    });\n\n    packages.forEach(function (pkg) {\n      const permissions = [];\n      if (pkg.registry && pkg.enabled) {\n        for (const registryItem of pkg.registry) {\n          // Skip entires with missing routes\n          if (!registryItem.route) {\n            continue;\n          }\n\n          // Get all permissions, add them to an array\n          if (registryItem.permissions) {\n            for (const permission of registryItem.permissions) {\n              // check needed because of non-object perms in the permissions array (e.g \"admin\", \"owner\")\n              if (typeof permission === \"object\") {\n                permission.shopId = shopId;\n                permissions.push(permission);\n              }\n            }\n          }\n\n          // Also create an object map of those same permissions as above\n          const permissionMap = getPermissionMap(permissions);\n          if (!permissionMap[registryItem.route]) {\n            permissions.push({\n              shopId: pkg.shopId,\n              permission: registryItem.name || pkg.name + \"/\" + registryItem.template, // launchdock-connect/connectDashboard\n              icon: registryItem.icon,\n              label: registryItem.label || registryItem.provides || registryItem.route\n            });\n          }\n        }\n        // TODO review this, hardcoded WIP\n        const label = pkg.name.replace(\"reaction\", \"\").replace(/(-.)/g, function (x) {\n          return \" \" + x[1].toUpperCase();\n        });\n\n        return permissionGroups.push({\n          shopId: pkg.shopId,\n          icon: pkg.icon,\n          name: pkg.name,\n          label: label,\n          permissions: _.uniq(permissions)\n        });\n      }\n    });\n\n    return permissionGroups;\n  },\n\n  hasManyPermissions: function (permissions) {\n    return Boolean(permissions.length);\n  },\n  /**\n   * showAvalaraTaxSettings\n   * @return {Boolean} True if avalara is enabled. Defaults to false if not found\n   */\n  showAvalaraTaxSettings() {\n    const avalara = Packages.findOne({\n      name: \"taxes-avalara\",\n      shopId: Reaction.getShopId()\n    });\n\n    return _.get(avalara, \"settings.avalara.enabled\", false);\n  }\n});\n\n/**\n * shopMember events\n *\n */\nTemplate.memberSettings.events({\n  \"change [data-event-action=toggleMemberPermission]\": function (event, template) {\n    const self = this;\n    const permissions = [];\n    const member = template.data;\n    if (!this.shopId) {\n      throw new Meteor.Error(\"Shop is required\");\n    }\n    if (self.name) {\n      permissions.push(self.name);\n      for (const pkgPermissions of self.permissions) {\n        permissions.push(pkgPermissions.permission);\n      }\n    } else {\n      permissions.push(self.permission);\n    }\n    if (Template.instance().$(event.currentTarget).is(\":checked\")) {\n      Meteor.call(\"accounts/addUserPermissions\", member.userId, permissions, this.shopId);\n    } else {\n      Meteor.call(\"accounts/removeUserPermissions\", member.userId, permissions, this.shopId);\n    }\n  },\n  \"click [data-event-action=resetMemberPermission]\": function (event, template) {\n    const $icon = Template.instance().$(event.currentTarget);\n    if (confirm($icon.data(\"confirm\"))) { // eslint-disable-line no-alert\n      const results = [];\n      for (const role of template.data.roles) {\n        results.push(Meteor.call(\"accounts/setUserPermissions\", this.userId, [\"guest\", \"account/profile\"], role));\n      }\n      return results;\n    }\n  }\n});\n","import { Reaction, i18next } from \"/client/api\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Template } from \"meteor/templating\";\n\n/**\n * memberForm events\n *\n */\nTemplate.memberForm.events({\n  \"submit form\": function (event, template) {\n    event.preventDefault();\n\n    const newMemberEmail = template.$('input[name=\"email\"]').val();\n    const newMemberName = template.$('input[name=\"name\"]').val();\n\n    return Meteor.call(\"accounts/inviteShopMember\", Reaction.getShopId(),\n      newMemberEmail, newMemberName, function (error, result) {\n        if (error) {\n          let message;\n          if (error.reason === \"Unable to send invitation email.\") {\n            message = i18next.t(\"accountsUI.error.unableToSendInvitationEmail\");\n          } else if (error.reason !== \"\") {\n            message = error;\n          } else {\n            message = `${i18next.t(\"accountsUI.error.errorSendingEmail\")\n              } ${error}`;\n          }\n          Alerts.toast(message, \"error\", {\n            html: true,\n            timeout: 10000\n          });\n          return false;\n        }\n        if (result) {\n          Alerts.toast(i18next.t(\"accountsUI.info.invitationSent\",\n            \"Invitation sent.\"), \"success\");\n\n          template.$(\"input[type=text], input[type=email]\").val(\"\");\n          $(\".settings-account-list\").show();\n\n          return true;\n        }\n      }\n    );\n  }\n});\n","import { Meteor } from \"meteor/meteor\";\nimport { Template } from \"meteor/templating\";\nimport { Reaction } from \"/client/api\";\nimport * as Collections from \"/lib/collections\";\n\n/**\n * onCreated: Account Profile View\n */\nTemplate.accountProfile.onCreated(() => {\n  const template = Template.instance();\n\n  template.userHasPassword = ReactiveVar(false);\n\n  Meteor.call(\"accounts/currentUserHasPassword\", (error, result) => {\n    template.userHasPassword.set(result);\n  });\n  // hide actionView if open, doesn't relate to profile page\n  Reaction.hideActionView();\n});\n\n/**\n * Helpers: Account Profile View\n */\nTemplate.accountProfile.helpers({\n\n  /**\n   * User has password\n   * @return {Boolean} return true if the current user has a password, false otherwise\n   */\n  userHasPassword() {\n    return Template.instance().userHasPassword.get();\n  },\n\n  /**\n   * User's order history\n   * @return {Array|null} an array of available orders for the user\n   */\n  userOrders() {\n    const orderSub = Meteor.subscribe(\"AccountOrders\", Meteor.userId());\n    if (orderSub.ready()) {\n      return Collections.Orders.find({\n        userId: Meteor.userId()\n      }, {\n        sort: {\n          createdAt: -1\n        },\n        limit: 25\n      });\n    }\n  },\n\n  /**\n   * User's account profile\n   * @return {Object} account profile\n   */\n  account() {\n    return Collections.Accounts.findOne();\n  },\n\n  /**\n   * Returns the address book default view\n   * @return {String} \"addressBookGrid\" || \"addressBookAdd\"\n   */\n  addressBookView: function () {\n    const account = Collections.Accounts.findOne();\n    if (account.profile) {\n      return \"addressBookGrid\";\n    }\n    return \"addressBookAdd\";\n  }\n});\n","import { LoginFormSharedHelpers } from \"/client/modules/accounts/helpers\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Template } from \"meteor/templating\";\n\n/**\n * onCreated: Login form sign in view\n */\nTemplate.loginFormSignInView.onCreated(() => {\n  const template = Template.instance();\n\n  template.uniqueId = Random.id();\n  template.formMessages = new ReactiveVar({});\n});\n\n/**\n * Helpers: Login form sign in view\n */\nTemplate.loginFormSignInView.helpers(LoginFormSharedHelpers);\n\n/**\n * Events: Login form sign in view\n */\nTemplate.loginFormSignInView.events({\n\n  /**\n   * Submit sign in form\n   * @param  {Event} event - jQuery Event\n   * @param  {Template} template - Blaze Template\n   * @return {void}\n   */\n  \"submit form\": (event, template) => {\n    event.preventDefault();\n\n    const usernameInput = template.$(\".login-input-email\");\n    const passwordInput = template.$(\".login-input-password\");\n\n    const username = usernameInput.val().trim();\n    const password = passwordInput.val().trim();\n\n    const validatedEmail = LoginFormValidation.email(username);\n    const validatedPassword = LoginFormValidation.password(password, { validationLevel: \"exists\" });\n\n    const templateInstance = Template.instance();\n    const errors = {};\n\n    templateInstance.formMessages.set({});\n\n    if (validatedEmail !== true) {\n      errors.email = validatedEmail;\n    }\n\n    if (validatedPassword !== true) {\n      errors.password = validatedPassword;\n    }\n\n    if ($.isEmptyObject(errors) === false) {\n      templateInstance.formMessages.set({\n        errors: errors\n      });\n\n      // prevent password reset\n      return;\n    }\n\n    Meteor.loginWithPassword(username, password, (error) => {\n      if (error) {\n        // Show some error messages above the form fields\n        templateInstance.formMessages.set({\n          alerts: [error]\n        });\n      } else {\n        // Close dropdown or navigate to page\n      }\n    });\n  }\n});\n","import { LoginFormSharedHelpers } from \"/client/modules/accounts/helpers\";\nimport { Template } from \"meteor/templating\";\n\n/**\n * onCreated: Login form sign up view\n */\nTemplate.loginFormSignUpView.onCreated(() => {\n  const template = Template.instance();\n\n  template.uniqueId = Random.id();\n  template.formMessages = new ReactiveVar({});\n  template.type = \"signUp\";\n});\n\n/**\n * Helpers: Login form sign up view\n */\nTemplate.loginFormSignUpView.helpers(LoginFormSharedHelpers);\n\n/**\n * Events: Login form sign up view\n */\nTemplate.loginFormSignUpView.events({\n  /**\n   * Submit sign up form\n   * @param  {Event} event - jQuery Event\n   * @param  {Template} template - Blaze Template\n   * @return {void}\n   */\n  \"submit form\": function (event, template) {\n    event.preventDefault();\n\n    // var usernameInput = template.$(\".login-input--username\");\n    const emailInput = template.$(\".login-input-email\");\n    const passwordInput = template.$(\".login-input-password\");\n\n    const email = emailInput.val().trim();\n    const password = passwordInput.val().trim();\n\n    const validatedEmail = LoginFormValidation.email(email);\n    const validatedPassword = LoginFormValidation.password(password);\n\n    const templateInstance = Template.instance();\n    const errors = {};\n\n    templateInstance.formMessages.set({});\n\n    if (validatedEmail !== true) {\n      errors.email = validatedEmail;\n    }\n\n    if (validatedPassword !== true) {\n      errors.password = validatedPassword;\n    }\n\n    if ($.isEmptyObject(errors) === false) {\n      templateInstance.formMessages.set({\n        errors: errors\n      });\n      // prevent signup\n      return;\n    }\n\n    const newUserData = {\n      // username: username,\n      email: email,\n      password: password\n    };\n\n    Accounts.createUser(newUserData, function (error) {\n      if (error) {\n        // Show some error message\n        templateInstance.formMessages.set({\n          alerts: [error]\n        });\n      } else {\n        // Close dropdown or navigate to page\n      }\n    });\n  }\n});\n","import { Accounts } from \"meteor/accounts-base\";\nimport { Template } from \"meteor/templating\";\nimport { i18next } from \"/client/api\";\nimport { LoginFormSharedHelpers } from \"/client/modules/accounts/helpers\";\n\n/**\n * Accounts Event: onResetPasswordLink When a user uses a password reset link\n */\nAccounts.onResetPasswordLink((token, done) => {\n  Blaze.renderWithData(Template.loginFormUpdatePasswordOverlay, {\n    token: token,\n    callback: done\n  }, $(\"body\").get(0));\n});\n\n/**\n * Accounts Event: onEnrollmentLink When a user uses an enrollment link\n */\nAccounts.onEnrollmentLink((token, done) => {\n  Blaze.renderWithData(Template.loginFormUpdatePasswordOverlay, {\n    token: token,\n    callback: done\n  }, $(\"body\").get(0));\n});\n\n/**\n * Accounts Event: onEmailVerificationLink When a user uses an verification link\n */\nAccounts.onEmailVerificationLink(function (token, done) {\n  Accounts.verifyEmail(token);\n  done();\n});\n\n// ----------------------------------------------------------------------------\n\n/**\n * onCreated: Login Form Update Password Overlay\n */\nTemplate.loginFormUpdatePasswordOverlay.onCreated(() => {\n  const template = Template.instance();\n\n  template.uniqueId = Random.id();\n  template.formMessages = new ReactiveVar({});\n});\n\n/**\n * Helpers: Login Form Update Password Overlay\n */\nTemplate.loginFormUpdatePasswordOverlay.helpers(LoginFormSharedHelpers);\n\n/**\n * Events: Login Form Update Password Overlay\n */\nTemplate.loginFormUpdatePasswordOverlay.events({\n\n  /**\n   * Close modal\n   * @param  {Event} event - jQuery Event\n   * @param  {Template} template - Blaze Template\n   * @return {void}\n   */\n  \"click .close, click .cancel\": (event, template) => {\n    Blaze.remove(template.view);\n  },\n\n  /**\n   * Submit form within modal - onSubmit reset password if validation is successful\n   * @param  {Event} event - jQuery Event\n   * @param  {Template} template - Blaze Template\n   * @return {void}\n   */\n  \"submit form\": (event, template) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const passwordInput = template.$(\".login-input--password\");\n    const password = passwordInput.val().trim();\n    const validatedPassword = LoginFormValidation.password(password);\n\n    const templateInstance = Template.instance();\n    const errors = {};\n\n    templateInstance.formMessages.set({});\n\n    if (validatedPassword !== true) {\n      errors.password = validatedPassword;\n    }\n\n    if ($.isEmptyObject(errors) === false) {\n      templateInstance.formMessages.set({\n        errors: errors\n      });\n      // prevent password update\n      return;\n    }\n\n    Accounts.resetPassword(template.data.token, password, (error) => {\n      if (error) {\n        // Show some error message\n        templateInstance.formMessages.set({\n          alerts: [error]\n        });\n      } else {\n        // Close dropdown or navigate to page\n        template.data.callback();\n\n        Blaze.remove(template.view);\n      }\n    });\n  }\n});\n\n// ----------------------------------------------------------------------------\n\n/**\n * onCreated: Login Form Change Password\n */\nTemplate.loginFormChangePassword.onCreated(() => {\n  const template = Template.instance();\n\n  template.uniqueId = Random.id();\n  template.formMessages = new ReactiveVar({});\n});\n\n/**\n * Helpers: Login Form Change Password\n */\nTemplate.loginFormChangePassword.helpers(LoginFormSharedHelpers);\n\n/**\n * Events: Login Form Change Password\n */\nTemplate.loginFormChangePassword.events({\n\n  /**\n   * Submit form for password update\n   * @param  {Event} event - jQuery Event\n   * @param  {Template} template - Blaze Template\n   * @return {void}\n   */\n  \"submit form\": function (event, template) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const oldPasswordInput = template.$(\".login-input--oldPassword\");\n    const passwordInput = template.$(\".login-input--password\");\n\n    const oldPassword = oldPasswordInput.val().trim();\n    const password = passwordInput.val().trim();\n\n    // We only check if it exists, just incase we\"ve change the password strength and want the\n    // user to have an oppurtinity to update to a stronger password\n    const validatedOldPassword = LoginFormValidation.password(password, { validationLevel: \"exists\" });\n    const validatedPassword = LoginFormValidation.password(password);\n\n    const templateInstance = Template.instance();\n    const errors = {};\n\n    templateInstance.formMessages.set({});\n\n\n    if (validatedOldPassword !== true) {\n      errors.oldPassword = validatedOldPassword;\n    }\n\n    if (validatedPassword !== true) {\n      errors.password = validatedPassword;\n    }\n\n    if ($.isEmptyObject(errors) === false) {\n      templateInstance.formMessages.set({\n        errors: errors\n      });\n      // prevent password update\n      return;\n    }\n\n    Accounts.changePassword(oldPassword, password, (error) => {\n      if (error) {\n        // Show some error message\n        templateInstance.formMessages.set({\n          alerts: [error]\n        });\n      } else {\n        // // Close dropdown or navigate to page\n        templateInstance.formMessages.set({\n          info: [{\n            reason: i18next.t(\"accountsUI.info.passwordChanged\")\n          }]\n        });\n      }\n    });\n  }\n});\n","import _ from \"lodash\";\nimport { ServiceConfigHelper } from \"./util\";\nimport { Template } from \"meteor/templating\";\n\nexport const LoginFormSharedHelpers = {\n\n  messages: function () {\n    return Template.instance().formMessages.get();\n  },\n\n  hasError(error) {\n    // True here means the field is valid\n    // We're checking if theres some other message to display\n    if (error !== true && typeof error !== \"undefined\") {\n      return \"has-error has-feedback\";\n    }\n\n    return false;\n  },\n\n  formErrors() {\n    return Template.instance().formErrors.get();\n  },\n\n  uniqueId: function () {\n    return Template.instance().uniqueId;\n  },\n\n  services() {\n    const serviceHelper = new ServiceConfigHelper();\n    return serviceHelper.services();\n  },\n\n  shouldShowSeperator() {\n    const serviceHelper = new ServiceConfigHelper();\n    const services = serviceHelper.services();\n    const enabledServices = _.filter(services, {\n      enabled: true\n    });\n\n    return !!Package[\"accounts-password\"] && enabledServices.length > 0;\n  },\n\n  hasPasswordService() {\n    return !!Package[\"accounts-password\"];\n  }\n};\n","export { LoginFormSharedHelpers } from \"./helpers\";\nexport { ServiceConfigHelper } from \"./util\";\n","import { Reaction, i18next, i18nextDep } from \"/client/api\";\nimport * as Collections from \"/lib/collections\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Template } from \"meteor/templating\";\n\nTemplate.registerHelper(\"getGravatar\", function (currentUser, size) {\n  const options = {\n    secure: true,\n    size: size,\n    default: \"identicon\"\n  };\n  const user = currentUser || Accounts.user();\n  if (!user) return false;\n  const account = Collections.Accounts.findOne(user._id);\n  // first we check picture exists. Picture has higher priority to display\n  if (account && account.profile && account.profile.picture) {\n    return account.profile.picture;\n  }\n  if (user.emails && user.emails.length === 1) {\n    const email = user.emails[0].address;\n    return Gravatar.imageUrl(email, options);\n  }\n});\n\n/**\n * registerHelper displayName\n */\nTemplate.registerHelper(\"displayName\", function (displayUser) {\n  i18nextDep.depend();\n\n  const user = displayUser || Accounts.user();\n  if (user) {\n    if (user.profile && user.profile.name) {\n      return user.profile.name;\n    } else if (user.username) {\n      return user.username;\n    }\n\n    // todo: previous check was user.services !== \"anonymous\", \"resume\". Is this\n    // new check covers previous check?\n    if (Roles.userIsInRole(user._id || user.userId, \"account/profile\",\n      Reaction.getShopId())) {\n      return i18next.t(\"accountsUI.guest\", { defaultValue: \"Guest\" });\n    }\n  }\n});\n\n/**\n * registerHelper fName\n */\n\nTemplate.registerHelper(\"fName\", function (displayUser) {\n  const user = displayUser || Meteor.user();\n  if (user && user.profile && user.profile.name) {\n    return user.profile.name.split(\" \")[0];\n  } else if (user && user.username) {\n    return user.username.name.split(\" \")[0];\n  }\n  if (user && user.services) {\n    const username = (function () {\n      switch (false) {\n        case !user.services.twitter:\n          return user.services.twitter.first_name;\n        case !user.services.google:\n          return user.services.google.given_name;\n        case !user.services.facebook:\n          return user.services.facebook.first_name;\n        case !user.services.instagram:\n          return user.services.instagram.first_name;\n        case !user.services.pinterest:\n          return user.services.pinterest.first_name;\n        default:\n          return i18next.t(\"accountsUI.guest\", { defaultValue: \"Guest\" });\n      }\n    })();\n    return username;\n  }\n  return i18next.t(\"accountsUI.signIn\", { defaultValue: \"Sign in\" });\n});\n","import _ from \"lodash\";\n\nfunction capitalize(str) {\n  const finalString = str === null ? \"\" : String(str);\n  return finalString.charAt(0).toUpperCase() + str.slice(1);\n}\n\nconst providers = {\n  Facebook: {},\n  Google: {},\n  Twitter: {}\n};\n\nproviders.Facebook.fields = function () {\n  return [\n    { property: \"appId\", label: \"App ID\" },\n    { property: \"secret\", label: \"App Secret\" }\n  ];\n};\n\nproviders.Google.fields = function () {\n  return [\n    { property: \"clientId\", label: \"Client ID\" },\n    { property: \"secret\", label: \"Client secret\" }\n  ];\n};\n\nproviders.Twitter.fields = function () {\n  return [\n    { property: \"consumerKey\", label: \"API key\" },\n    { property: \"secret\", label: \"API secret\" }\n  ];\n};\n\nexport class ServiceConfigHelper {\n\n  availableServices() {\n    const services = Package[\"accounts-oauth\"] ? Accounts.oauth.serviceNames() : [];\n    services.sort();\n\n    return services;\n  }\n\n  capitalizedServiceName(name) {\n    if (name === \"meteor-developer\") {\n      return \"MeteorDeveloperAccount\";\n    }\n\n    return capitalize(name);\n  }\n\n  configFieldsForService(name) {\n    const capitalizedName = this.capitalizedServiceName(name);\n    const template = providers[capitalizedName];\n\n    if (template) {\n      const fields = template.fields();\n\n      return _.map(fields, (field) => {\n        if (!field.type) {\n          field.type = field.property === \"secret\" ? \"password\" : \"text\";\n        }\n\n        return _.extend(field, {\n          type: field.type\n        });\n      });\n    }\n\n    return [];\n  }\n\n  services(extendEach) {\n    const availableServices = this.availableServices();\n    const configurations = ServiceConfiguration.configurations.find().fetch();\n\n    return _.map(availableServices, (name) => {\n      const matchingConfigurations = _.filter(configurations, { service: name });\n      let service = {\n        name,\n        label: this.capitalizedServiceName(name),\n        fields: this.configFieldsForService(name)\n      };\n\n      if (matchingConfigurations.length) {\n        service = _.extend(service, matchingConfigurations[0]);\n      }\n\n      if (_.isFunction(extendEach)) {\n        service = _.extend(service, extendEach(service) || {});\n      }\n\n      return service;\n    });\n  }\n}\n","import { Meteor } from \"meteor/meteor\";\nimport { Reaction } from \"/client/api\";\nimport { Cart, Shops } from \"/lib/collections\";\n\nTemplate.currencySelect.helpers({\n  currencies() {\n    const currencies = [];\n    if (Reaction.Subscriptions.Shops.ready() && Meteor.user()) {\n      const shop = Shops.findOne(Reaction.getShopId(), {\n        fields: {\n          currencies: 1,\n          currency: 1\n        }\n      });\n      Reaction.Locale.get();\n      if (Match.test(shop, Object) && shop.currencies) {\n        for (const currencyName in shop.currencies) {\n          if (shop.currencies[currencyName].enabled === true) {\n            const currency = { currency: currencyName };\n            const localStorageCurrency = localStorage.getItem(\"currency\");\n            // only one currency will be \"active\". Either the one\n            // matching the localStorageCurrency if exists or else\n            //  the one matching shop currency\n            if (localStorageCurrency) {\n              if (localStorageCurrency === currency.currency) {\n                currency.class = \"active\";\n              }\n            } else if (shop.currency === currency.currency) {\n              currency.class = \"active\";\n            }\n            currency.symbol = shop.currencies[currencyName].symbol;\n            currencies.push(currency);\n          }\n        }\n        if (currencies.length > 1) {\n          return currencies;\n        }\n      }\n    }\n    if (currencies.length > 1) {\n      return currencies;\n    }\n  },\n\n  currentCurrency() {\n    if (Reaction.Subscriptions.Shops.ready() && Meteor.user()) {\n      const shop = Shops.findOne(Reaction.getShopId(), {\n        fields: {\n          currencies: 1,\n          currency: 1\n        }\n      });\n      if (Match.test(shop, Object) && shop.currency) {\n        const localStorageCurrency = localStorage.getItem(\"currency\");\n        if (localStorageCurrency) {\n          return localStorageCurrency + \" \" + shop.currencies[localStorageCurrency].symbol;\n        }\n        const locale = Reaction.Locale.get();\n        if (locale && locale.currency && locale.currency.enabled) {\n          return locale.locale.currency + \" \" + locale.currency.symbol;\n        }\n        return shop.currency + \" \" + shop.currencies[shop.currency].symbol;\n      }\n    }\n    return \"USD $\";\n  }\n});\n\nTemplate.currencySelect.events({\n  \"click .currency\"(event) {\n    event.preventDefault();\n    //\n    // this is a sanctioned use of Meteor.user.update\n    // and only possible because we allow it in the\n    // UserProfile and ShopMembers publications.\n    //\n    Meteor.users.update(Meteor.userId(), { $set: { \"profile.currency\": this.currency } });\n    localStorage.setItem(\"currency\", this.currency);\n\n    const cart = Cart.findOne({ userId: Meteor.userId() });\n\n    // Attach changed currency to this users cart\n    Meteor.call(\"cart/setUserCurrency\", cart._id, this.currency);\n  }\n});\n","import { Reaction } from \"/client/api\";\nimport { Shops } from \"/lib/collections\";\n/**\n * i18nChooser helpers\n */\n\nTemplate.i18nChooser.helpers({\n  languages() {\n    const languages = [];\n    if (Reaction.Subscriptions.Shops.ready() && Meteor.user()) {\n      const shop = Shops.findOne();\n      if (typeof shop === \"object\" && shop.languages) {\n        for (const language of shop.languages) {\n          if (language.enabled === true) {\n            language.translation = \"languages.\" + language.label.toLowerCase();\n            // appending a helper to let us know this\n            // language is currently selected\n            const profile = Meteor.user().profile;\n            if (profile && profile.lang) {\n              if (profile.lang === language.i18n) {\n                language.class = \"active\";\n              }\n            } else if (shop.language === language.i18n) {\n              // we don't have a profile language\n              // use the shop default\n              language.class = \"active\";\n            }\n            languages.push(language);\n          }\n        }\n        if (languages.length > 1) {\n          return languages;\n        }\n      }\n    }\n    if (languages.length > 1) {\n      return languages;\n    }\n  }\n});\n\n/**\n * i18nChooser events\n */\n\nTemplate.i18nChooser.events({\n  \"click .i18n-language\"(event) {\n    event.preventDefault();\n    //\n    // this is a sanctioned use of Meteor.user.update\n    // and only possible because we allow it in the\n    // UserProfile and ShopMembers publications.\n    //\n    Meteor.users.update(Meteor.userId(), { $set: { \"profile.lang\": this.i18n } });\n  }\n});\n","import accounting from \"accounting-js\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Reaction, Logger } from \"/client/api\";\nimport { Shops } from \"/lib/collections\";\nimport { currencyDep } from \"./main\";\n\n/**\n * findCurrency\n * private function for returning localStorage currency\n * @param   {Object}  defaultCurrency    The default currency\n * @param {Boolean} useDefaultShopCurrency - flag for displaying shop's currency in Admin view of PDP\n * @return  {Object}  localStorageCurrency The localStorage currency\n */\nfunction findCurrency(defaultCurrency, useDefaultShopCurrency) {\n  const shop = Shops.findOne(Reaction.getShopId(), {\n    fields: {\n      currencies: 1,\n      currency: 1\n    }\n  });\n  const localStorageCurrencyName = localStorage.getItem(\"currency\");\n  if (typeof shop === \"object\" && shop.currencies && localStorageCurrencyName) {\n    let localStorageCurrency = {};\n    if (shop.currencies[localStorageCurrencyName]) {\n      if (useDefaultShopCurrency) {\n        localStorageCurrency = shop.currencies[shop.currency];\n        localStorageCurrency.exchangeRate = 1;\n      } else {\n        localStorageCurrency = shop.currencies[localStorageCurrencyName];\n        localStorageCurrency.exchangeRate = shop.currencies[localStorageCurrencyName].rate;\n      }\n    }\n    return localStorageCurrency;\n  }\n  return defaultCurrency;\n}\n\n/**\n * formatPriceString\n * @summary return shop /locale specific formatted price\n * also accepts a range formatted with \" - \"\n * @param {String} formatPrice - currentPrice or \"xx.xx - xx.xx\" formatted String\n * @param {Boolean} useDefaultShopCurrency - flag for displaying shop's currency in Admin view of PDP\n * @return {String} returns locale formatted and exchange rate converted values\n */\nexport function formatPriceString(formatPrice, useDefaultShopCurrency) {\n  let defaultShopCurrency = useDefaultShopCurrency;\n\n  // in case useDefaultShopCurrency is a Spacebars.kw we have this check\n  if (typeof useDefaultShopCurrency === \"object\" || !useDefaultShopCurrency) {\n    defaultShopCurrency = false;\n  }\n\n  currencyDep.depend();\n  const locale = Reaction.Locale.get();\n\n  if (typeof locale !== \"object\" || typeof locale.currency !== \"object\") {\n    // locale not yet loaded, so we don\"t need to return anything.\n    return false;\n  }\n\n  if (typeof formatPrice !== \"string\" && typeof formatPrice !== \"number\") {\n    return false;\n  }\n\n  // uses the localStorage currency instead of locale\n  const userCurrency = findCurrency(locale.currency, defaultShopCurrency);\n\n  // for the cases then we have only one price. It is a number.\n  const currentPrice = formatPrice.toString();\n  let price = 0;\n  const prices = ~currentPrice.indexOf(\" - \") ?\n    currentPrice.split(\" - \") : [currentPrice];\n\n  // basic \"for\" is faster then \"for ...of\" for arrays. We need more speed here\n  const len = prices.length;\n  for (let i = 0; i < len; i++) {\n    const originalPrice = prices[i];\n    try {\n      // we know the locale, but we don\"t know exchange rate. In that case we\n      // should return to default shop currency\n      if (typeof userCurrency.rate !== \"number\") {\n        throw new Meteor.Error(\"exchangeRateUndefined\");\n      }\n      prices[i] *= userCurrency.rate;\n\n      price = _formatPrice(price, originalPrice, prices[i],\n        currentPrice, userCurrency, i, len);\n    } catch (error) {\n      Logger.debug(\"currency error, fallback to shop currency\");\n      price = _formatPrice(price, originalPrice, prices[i],\n        currentPrice, locale.shopCurrency, i, len);\n    }\n  }\n  return price;\n}\n\nexport function formatNumber(currentPrice) {\n  const locale = Reaction.Locale.get();\n  let price = currentPrice;\n  const format = Object.assign({}, locale.currency, {\n    format: \"%v\"\n  });\n  const shopFormat = Object.assign({}, locale.shopCurrency, {\n    format: \"%v\"\n  });\n\n  if (typeof locale.currency === \"object\" && locale.currency.rate) {\n    price = currentPrice * locale.currency.rate;\n    return accounting.formatMoney(price, format);\n  }\n\n  Logger.debug(\"currency error, fallback to shop currency\");\n  return accounting.formatMoney(currentPrice, shopFormat);\n}\n\n/**\n * _formatPrice\n * private function for formatting locale currency\n * @private\n * @param  {Number} price         price\n * @param  {Number} originalPrice originalPrice\n * @param  {Number} actualPrice   actualPrice\n * @param  {Number} currentPrice  currentPrice\n * @param  {Number} currency      currency\n * @param  {Number} pos           position\n * @param  {Number} len           length\n * @return {Number}               formatted price\n */\nfunction _formatPrice(price, originalPrice, actualPrice, currentPrice, currency,\n  pos, len) {\n  // this checking for locale.shopCurrency mostly\n  if (typeof currency !== \"object\") {\n    return false;\n  }\n\n  let adjustedPrice = actualPrice;\n  let formattedPrice;\n\n  // Precision is mis-used in accounting js. Scale is the propery term for number\n  // of decimal places. Let's adjust it here so accounting.js does not break.\n  if (currency.scale !== undefined) {\n    currency.precision = currency.scale;\n  }\n\n  // If there are no decimal places, in the case of the Japanese Yen, we adjust it here.\n  if (currency.scale === 0) {\n    adjustedPrice = actualPrice * 100;\n  }\n\n  // @param {string} currency.where: If it presents - in situation then two\n  // prices in string, currency sign will be placed just outside the right price.\n  // For now it should be manually added to fixtures shop data.\n  if (typeof currency.where === \"string\" && currency.where === \"right\" &&\n    len > 1 && pos === 0) {\n    const modifiedCurrency = Object.assign({}, currency, {\n      symbol: \"\"\n    });\n    formattedPrice = accounting.formatMoney(adjustedPrice, modifiedCurrency);\n  } else {\n    // accounting api: http://openexchangerates.github.io/accounting.js/\n    formattedPrice = accounting.formatMoney(adjustedPrice, currency);\n  }\n\n  return price === 0 ? currentPrice.replace(originalPrice, formattedPrice) : price.replace(originalPrice, formattedPrice);\n}\n","import { Template } from \"meteor/templating\";\nimport { Reaction, Logger, i18next } from \"/client/api\";\nimport { Shops } from \"/lib/collections\";\nimport { localeDep, i18nextDep } from  \"./main\";\nimport { formatPriceString } from \"./currency\";\n\n/**\n * i18n\n * see: http://i18next.com/\n * pass the translation key as the first argument\n * and the default message as the second argument\n * @param {String} i18nKey - i18nKey\n * @param {String} i18nMessage - message text\n * @example {{i18n \"accountsTemplate.error\" \"Invalid Email\"}}\n * @return {String} returns i18n translated message\n */\nTemplate.registerHelper(\"i18n\", function (i18nKey, i18nMessage) {\n  if (!i18nKey || typeof i18nMessage !== \"string\") {\n    Logger.warn(\"i18n key string required to translate\", i18nKey, i18nMessage);\n    return \"\";\n  }\n  check(i18nKey, String);\n  check(i18nMessage, String);\n\n  i18nextDep.depend();\n\n  // returning translated key\n  return i18next.t(i18nKey, { defaultValue: i18nMessage });\n});\n\n/**\n * currencySymbol\n * @summary return shop /locale specific currency format (ie: $)\n * @returns {String} return current locale currency symbol\n */\nTemplate.registerHelper(\"currencySymbol\", function () {\n  const locale = Reaction.Locale.get();\n  const localStorageCurrency = localStorage.getItem(\"currency\");\n  if (localStorageCurrency) {\n    const shop = Shops.findOne();\n    if (Match.test(shop, Object) && shop.currencies) {\n      return shop.currencies[localStorageCurrency].symbol;\n    }\n  }\n  return locale.currency.symbol;\n});\n\n/**\n * formatPrice\n * @summary return shop /locale specific formatted price\n * also accepts a range formatted with \" - \"\n * @param {String} currentPrice - currentPrice or \"xx.xx - xx.xx\" formatted String\n * @param {Boolean} useDefaultShopCurrency - flag for displaying shop's currency in Admin view of PDP\n * @return {String} returns locale formatted and exchange rate converted values\n */\nTemplate.registerHelper(\"formatPrice\", function (formatPrice, useDefaultShopCurrency) {\n  localeDep.depend();\n  return formatPriceString(formatPrice, useDefaultShopCurrency);\n});\n","import i18next, { getBrowserLanguage, i18nextDep, localeDep, currencyDep } from \"./main\";\nexport * from \"./currency\";\n\nexport {\n  i18next,\n  getBrowserLanguage,\n  i18nextDep,\n  localeDep,\n  currencyDep\n};\n","import _ from \"lodash\";\nimport i18nextBrowserLanguageDetector from \"i18next-browser-languagedetector\";\nimport i18nextLocalStorageCache from \"i18next-localstorage-cache\";\nimport i18nextSprintfPostProcessor from \"i18next-sprintf-postprocessor\";\nimport i18nextJquery from \"jquery-i18next\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Tracker } from \"meteor/tracker\";\nimport { Reaction } from \"/client/api\";\nimport { Shops, Translations } from \"/lib/collections\";\nimport * as Schemas from \"/lib/collections/schemas\";\nimport i18next, { packageNamespaces, getLabelsFor, getMessagesFor, i18nextDep, currencyDep } from \"./main\";\nimport { mergeDeep } from \"/lib/api\";\n\n//\n// setup options for i18nextBrowserLanguageDetector\n// note: this isn't fully operational yet\n// language is set by user currently\n// progress toward detecting language\n// should focus around i18nextBrowserLanguageDetector\n//\nconst options = {\n  // order and from where user language should be detected\n  order: [\"querystring\", \"cookie\", \"localStorage\", \"navigator\", \"htmlTag\"],\n\n  // keys or params to lookup language from\n  lookupQuerystring: \"lng\",\n  lookupCookie: \"i18next\",\n  lookupLocalStorage: \"i18nextLng\",\n\n  // cache user language on\n  caches: [\"localStorage\", \"cookie\"],\n  // optional htmlTag with lang attribute, the default is:\n  htmlTag: document.documentElement\n};\n\nMeteor.startup(() => {\n  // use tracker autorun to detect language changes\n  // this only runs on initial page loaded\n  // and when user.profile.lang updates\n  Tracker.autorun(function () {\n    if (Reaction.Subscriptions.Shops.ready() && Meteor.user()) {\n      const shop = Shops.findOne(Reaction.getShopId());\n      let language = shop.language;\n      if (Meteor.user() && Meteor.user().profile && Meteor.user().profile.lang) {\n        language = Meteor.user().profile.lang;\n      }\n      //\n      // subscribe to user + shop Translations\n      //\n      return Meteor.subscribe(\"Translations\", language, () => {\n        // fetch reaction translations\n        const translations = Translations.find({}, {\n          fields: {\n            _id: 0\n          }\n        }).fetch();\n\n        //\n        // reduce and merge translations\n        // into i18next resource format\n        //\n        let resources = {};\n        translations.forEach(function (translation) {\n          const resource = {};\n          resource[translation.i18n] = translation.translation;\n          resources = mergeDeep(resources, resource);\n        });\n\n        //\n        // initialize i18next\n        //\n        i18next\n          .use(i18nextBrowserLanguageDetector)\n          .use(i18nextLocalStorageCache)\n          .use(i18nextSprintfPostProcessor)\n          .init({\n            detection: options,\n            debug: false,\n            ns: packageNamespaces, // translation namespace for every package\n            defaultNS: \"core\", // reaction \"core\" is the default namespace\n            fallbackNS: packageNamespaces,\n            lng: language, // user session language\n            fallbackLng: shop ? shop.language : null, // Shop language\n            resources: resources\n          }, () => {\n            // someday this should work\n            // see: https://github.com/aldeed/meteor-simple-schema/issues/494\n            for (const schema in _.omit(Schemas, \"__esModule\")) {\n              if ({}.hasOwnProperty.call(Schemas, schema)) {\n                const ss = Schemas[schema];\n                ss.labels(getLabelsFor(ss, schema));\n                ss.messages(getMessagesFor(ss, schema));\n              }\n            }\n\n            i18nextDep.changed();\n\n            // global first time init event finds and replaces\n            // data-i18n attributes in html/template source.\n            $elements = $(\"[data-i18n]\").localize();\n\n            // apply language direction to html\n            if (i18next.dir(language) === \"rtl\") {\n              return $(\"html\").addClass(\"rtl\");\n            }\n            return $(\"html\").removeClass(\"rtl\");\n          });\n      }); // return\n    }\n  });\n\n  // use tracker autorun to detect currency changes\n  // this only runs on initial page loaded\n  // and when user.profile.currency updates\n  // althought it is also triggered when profile updates ( meaning .lang )\n  Tracker.autorun(function () {\n    const user = Meteor.user();\n    if (Reaction.Subscriptions.Shops.ready() && user) {\n      if (user.profile && user.profile.currency) {\n        const localStorageCurrency = localStorage.getItem(\"currency\");\n        if (localStorageCurrency !== user.profile.currency) {\n          localStorage.setItem(\"currency\", user.profile.currency);\n        }\n        currencyDep.changed();\n      }\n    }\n  });\n  //\n  // init i18nextJquery\n  //\n  i18nextJquery.init(i18next, $, {\n    tName: \"t\", // --> appends $.t = i18next.t\n    i18nName: \"i18n\", // --> appends $.i18n = i18next\n    handleName: \"localize\", // --> appends $(selector).localize(opts);\n    selectorAttr: \"data-i18n\", // selector for translating elements\n    targetAttr: \"data-i18n-target\", // element attribute to grab target element to translate (if diffrent then itself)\n    parseDefaultValueFromContent: true // parses default values from content ele.val or ele.text\n  });\n\n  // global onRendered event finds and replaces\n  // data-i18n attributes in html/template source.\n  // uses methods from i18nextJquery\n  Template.onRendered(function () {\n    this.autorun((function () {\n      return function () {\n        i18nextDep.depend();\n        $elements = $(\"[data-i18n]\").localize();\n      };\n    })(this));\n  });\n});\n","import i18next from \"i18next\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Tracker } from \"meteor/tracker\";\nimport { SimpleSchema } from \"meteor/aldeed:simple-schema\";\nimport { Reaction } from \"/client/api\";\nimport { Shops, Packages } from \"/lib/collections\";\n\n//\n// Reaction i18n Translations, RTL and Currency Exchange Support\n//\n\n/**\n * getBrowserLanguage\n * @summary detects device default language\n * @return {String} language code\n */\nexport function getBrowserLanguage() {\n  if (typeof navigator.languages !== \"undefined\") {\n    if (~navigator.languages[0].indexOf(\"-\")) {\n      return navigator.languages[0].split(\"-\")[0];\n    } else if (~navigator.languages[0].indexOf(\"_\")) {\n      return navigator.languages[0].split(\"_\")[0];\n    }\n    return navigator.languages[0];\n  }\n  return navigator.language || navigator.browserLanguage;\n}\n\n/**\n * getLabelsFor\n * get Labels for simple.schema keys\n * @param  {Object} schema - schema\n * @param  {String} name - name\n * @return {Object} return schema label object\n */\nexport function getLabelsFor(schema, name) {\n  const labels = {};\n  // loop through all the rendered form fields and generate i18n keys\n  for (const fieldName of schema._schemaKeys) {\n    const i18nKey = name.charAt(0).toLowerCase() + name.slice(1) + \".\" +\n      fieldName\n      .split(\".$\").join(\"\");\n    // translate autoform label\n    const t = i18next.t(i18nKey);\n    if (new RegExp(\"string\").test(t) !== true && t !== i18nKey) {\n      if (t) {\n        labels[fieldName] = t;\n      }\n    }\n  }\n  return labels;\n}\n\n/**\n * getMessagesFor\n * get i18n messages for autoform messages\n * currently using a globalMessage namespace only*\n * (1) Use schema-specific message for specific key\n * (2) Use schema-specific message for generic key\n * (3) Use schema-specific message for type\n * @todo implement messaging hierarchy from simple-schema\n * @return {Object} returns i18n translated message for schema labels\n */\nexport function getMessagesFor() {\n  const messages = {};\n  for (const message in SimpleSchema._globalMessages) {\n    if ({}.hasOwnProperty.call(SimpleSchema._globalMessages, message)) {\n      const i18nKey = `globalMessages.${message}`;\n      const t = i18next.t(i18nKey);\n      if (new RegExp(\"string\").test(t) !== true && t !== i18nKey) {\n        messages[message] = t;\n      }\n    }\n  }\n  return messages;\n}\n\n/**\n *  set language and autorun on change of language\n *  initialize i18n and load data resources for the current language and fallback \"EN\"\n *\n */\nexport const i18nextDep = new Tracker.Dependency();\nexport const localeDep = new Tracker.Dependency();\nexport const currencyDep = new Tracker.Dependency();\nexport const packageNamespaces = [];\n\nMeteor.startup(() => {\n  Tracker.autorun(function (c) {\n    // setting local and active packageNamespaces\n    // packageNamespaces are used to determine i18n namespace\n    if (Reaction.Subscriptions.Shops.ready()) {\n      // every package gets a namespace, fetch them and export\n      const packages = Packages.find({}, {\n        fields: {\n          name: 1\n        }\n      }).fetch();\n      for (const pkg of packages) {\n        packageNamespaces.push(pkg.name);\n      }\n\n      // use i18n detected language to getLocale info\n      Meteor.call(\"shop/getLocale\", (error, result) => {\n        if (result) {\n          const locale = result;\n          locale.language = getBrowserLanguage();\n          moment.locale(locale.language);\n          // flag in case the locale currency isn't enabled\n          locale.currencyEnabled = locale.currency.enabled;\n          const user = Meteor.user();\n          if (user && user.profile && user.profile.currency) {\n            localStorage.setItem(\"currency\", user.profile.currency);\n          } else {\n            const localStorageCurrency = localStorage.getItem(\"currency\");\n            if (!localStorageCurrency) {\n              if (locale.currencyEnabled) {\n                // in case of multiple locale currencies\n                const primaryCurrency = locale.locale.currency.split(\",\")[0];\n                localStorage.setItem(\"currency\", primaryCurrency);\n              } else {\n                const shop = Shops.findOne(Reaction.getShopId(), {\n                  fields: {\n                    currency: 1\n                  }\n                });\n                localStorage.setItem(\"currency\", shop.currency);\n              }\n            }\n          }\n          Reaction.Locale.set(locale);\n          localeDep.changed();\n\n          // Stop the tracker\n          c.stop();\n        }\n      });\n    }\n  });\n});\n\nexport default i18next;\n","import _ from \"lodash\";\nimport { Reaction } from \"/client/api\";\nimport { Packages } from \"/lib/collections\";\nimport { Template } from \"meteor/templating\";\n\n/**\n *\n * reactionApps\n *   provides=\"<where matching registry provides is this >\"\n *   enabled=true <false for disabled packages>\n *   context= true filter templates to current route\n *   returns matching package registry objects\n *   @example {{#each reactionApps provides=\"settings\" name=packageName container=container}}\n *   @example {{#each reactionApps provides=\"userAccountDropdown\" enabled=true}}\n *   @example\n *     {{#each reactionApps provides=\"social\" name=\"reaction-social\"}}\n *         {{> Template.dynamic template=template data=customSocialSettings }}\n *     {{/each}}\n *\n *   @typedef optionHash\n *   @type {object}\n *   @property {string} name - name of a package.\n *   @property {string} provides -purpose of this package as identified to the registry\n *   @property {string} container - filter registry entries for matching container.\n *   @property {string} shopId - filter to only display results matching shopId, not returned\n *   @property {string} template - filter registry entries for matching template\n *   @type {optionHash}\n *\n *  @return {optionHash} returns an array of filtered, structure reactionApps\n *  [{\n *  \tenabled: true\n *   label: \"Stripe\"\n *   name: \"reaction-stripe\"\n *   packageId: \"QqkGsQCDRhg2LSn8J\"\n *   priority: 1\n *   provides: \"paymentMethod\"\n *   template: \"stripePaymentForm\"\n *   etc: \"additional properties as defined in Packages.registry\"\n *   ...\n *  }]\n */\n\nexport function Apps(optionHash) {\n  const filter = {};\n  const registryFilter = {};\n  let key;\n  const reactionApps = [];\n  let options = {};\n\n  // allow for object or option.hash\n  if (optionHash) {\n    if (optionHash.hash) {\n      options = optionHash.hash;\n    } else {\n      options = optionHash;\n    }\n  }\n\n  // you could provide a shopId in optionHash\n  if (!options.shopId) {\n    options.shopId = Reaction.getShopId();\n  }\n\n  // remove audience permissions for owner (still needed here for older/legacy calls)\n  if (Reaction.hasOwnerAccess() && options.audience) {\n    delete options.audience;\n  }\n\n  //\n  // build filter to only get matching registry elements\n  //\n  for (key in options) {\n    if ({}.hasOwnProperty.call(options, key)) {\n      const value = options[key];\n      if (value) {\n        if (!(key === \"enabled\" || key === \"name\" || key === \"shopId\")) {\n          filter[\"registry.\" + key] = Array.isArray(options[key]) ? { $in: value } : value;\n          registryFilter[key] = value;\n        } else {\n          // perhaps not the best way to check but lets admin see all packages\n          if (!Reaction.hasOwnerAccess()) {\n            if (key !== \"shopId\") {\n              registryFilter[key] = value;\n            }\n          }\n          filter[key] = value;\n        }\n      }\n    }\n  }\n\n  delete filter[\"registry.audience\"]; // Temporarily remove \"audience\" key (see comment below)\n\n  // TODO: Review fix for filter on Packages.find(filter)\n  // The current \"filter\" setup uses \"audience\" field which is not present in the registry array in most (if not all) docs\n  // in the Packages coll.\n  // For now, the audience checks (after the Package.find call) filters out the registry items based on permissions. But\n  // part of the filtering should have been handled by the Package.find call, if the \"audience\" filter works as it should.\n  Packages.find(filter).forEach((app) => {\n    const matchingRegistry = _.filter(app.registry, function (item) {\n      const itemFilter = _.cloneDeep(registryFilter);\n\n      // check audience permissions only if they exist as part of optionHash and are part of the registry item\n      // ideally all routes should use it, safe for backwards compatibility though\n      // owner bypasses permissions\n      if (!Reaction.hasOwnerAccess() && item.permissions && registryFilter.audience) {\n        let hasAccess;\n\n        for (const permission of registryFilter.audience) {\n          // This checks that the registry item contains a permissions matches with the user's permission for the shop\n          const hasPermissionToRegistryItem = item.permissions.indexOf(permission) > -1;\n          // This checks that the user's permission set have the right value that is on the registry item\n          const hasRoleAccessForShop = Roles.userIsInRole(Meteor.userId(), permission, Reaction.getShopId());\n\n          // both checks must pass for access to be granted\n          if (hasPermissionToRegistryItem && hasRoleAccessForShop) {\n            hasAccess = true;\n            break;\n          }\n        }\n\n        if (!hasAccess) {\n          return false;\n        }\n\n        // safe to clean up now, and isMatch can ignore audience\n        delete itemFilter.audience;\n      }\n\n      return _.isMatch(item, itemFilter);\n    });\n\n    for (const registry of matchingRegistry) {\n      reactionApps.push(registry);\n    }\n  });\n\n  // Sort apps by priority (registry.priority)\n  const sortedApps = reactionApps.sort((a, b) => a.priority - b.priority).slice();\n\n  return sortedApps;\n}\n\n// Register global template helper\nTemplate.registerHelper(\"reactionApps\", (optionHash) => {\n  return Reaction.Apps(optionHash);\n});\n","import { Session } from \"meteor/session\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Roles } from \"meteor/alanning:roles\";\n\n// Reaction Globals\n//\n// These should all be removed. PR's happily accepted.\n//\n/* eslint \"no-extend-native\": [2, {\"exceptions\": [\"String\"]}] */\n/* eslint \"no-alert\": 0 */\n\n/**\n * toggleSession\n * quick and easy snippet for toggling sessions\n * @param {String} sessionVariable - string name, see http://docs.meteor.com/#/basic/session\n * @param {String} positiveState - optional, if is is positiveState, set opposite\n * @return {Object} return session value\n */\nexport function toggleSession(sessionVariable, positiveState) {\n  const session = Session.get(sessionVariable);\n  const positive = positiveState || true;\n  if (_.isEqual(positive, session)) {\n    Session.set(sessionVariable, false);\n  } else {\n    Session.set(sessionVariable, positive);\n  }\n  return Session.get(sessionVariable);\n}\n\n\n/**\n * getCardTypes\n * @summary determine the card type and return label\n * @todo needs i18n conversion?\n * @param {String} cardNumber - a credit card number\n * @return {String} card label, ie: visa\n */\nexport function getCardType(cardNumber) {\n  let re = new RegExp(\"^4\");\n  if (cardNumber.match(re) !== null) {\n    return \"visa\";\n  }\n  re = new RegExp(\"^(34|37)\");\n  if (cardNumber.match(re) !== null) {\n    return \"amex\";\n  }\n  re = new RegExp(\"^5[1-5]\");\n  if (cardNumber.match(re) !== null) {\n    return \"mastercard\";\n  }\n  re = new RegExp(\"^6011\");\n  if (cardNumber.match(re) !== null) {\n    return \"discover\";\n  }\n  return \"\";\n}\n\n/**\n * getGuestLoginState\n * @summary determines if a guest checkout is enabled and the login state for users\n * @return {Boolean} true if authenticated user\n */\nexport function getGuestLoginState() {\n  if (Meteor.userId() === \"string\" && this.getShopId() && this.allowGuestCheckout()) {\n    const isGuestFlow = Session.equals(\"guestCheckoutFlow\", true);\n    const isGuest = Roles.userIsInRole(Meteor.userId(), \"guest\", this.getShopId());\n    const isAnonymous = Roles.userIsInRole(Meteor.userId(), \"anonymous\", this.getShopId());\n    if (!isGuestFlow && !isGuest && isAnonymous) {\n      return false;\n    } else if (!isGuestFlow && isGuest && !isAnonymous) {\n      return true;\n    }\n  } else if (Session.equals(\"guestCheckoutFlow\", true) && _.pluck(Meteor.user()\n      .emails, \"address\")) {\n    return true;\n  }\n  return false;\n}\n","import _ from \"lodash\";\nimport Logger from \"/client/modules/logger\";\nimport { Reaction } from \"../\";\nimport * as Collections from \"/lib/collections\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Template } from \"meteor/templating\";\n\n/**\n * reactionTemplate helper\n * use the reactionTemplate helper when you are using templates defined\n * as workflow templates in the package registery.Layout\n * use \"collection\" on the layout to indicate a workflow source\n *\n * @summary reactionTemplate provides templates as defined in ReactionRegistry.Layout\n * @param {Object} options - workflow defaults to \"coreLayout/coreWorkflow\"\n * @returns {Array} returns an array with labels, templates that match workflow\n */\nTemplate.registerHelper(\"reactionTemplate\", function (options) {\n  const shopId = options.hash.shopId || Reaction.getShopId();\n  // get shop info, defaults to current\n  const Shop = Collections.Shops.findOne(shopId);\n  const reactionTemplates = [];\n  // fetch collection from shop.layout configuration\n  let layout = _.find(Shop.layout, {\n    workflow: options.hash.workflow || \"coreWorkflow\"\n  });\n\n  let layoutConfigCollection;\n  let currentId;\n\n  // determine if workflow has a target\n  // collection defined. This is where we'll\n  // fetch/save workflow changes.\n  if (layout) {\n    layoutConfigCollection = layout.collection || \"Cart\";\n  } else {\n    Logger.error(\"Shop Layout Undefined\");\n    layoutConfigCollection = \"Cart\";\n  }\n\n  // if we've got an id, we'll use it with the layout's collection\n  // and get the current status of the workflowTargetCollection\n  if (Template.currentData() && Template.currentData()._id) {\n    currentId = Template.currentData()._id;\n  } else {\n    const currentCart = Collections.Cart.findOne({\n      userId: Meteor.userId()\n    });\n    currentId = currentCart && currentCart._id;\n  }\n  // we'll get current cart status by default, as the most common case\n  // TODO: expand query options\n  currentId = options.hash.id || currentId;\n\n  // The currentCollection must have workflow schema attached.\n  // layoutConfigCollection is the collection defined in Shops.workflow\n  const workflowTargetCollection = Collections[layoutConfigCollection];\n  const currentCollection = workflowTargetCollection.findOne(currentId);\n  const currentStatus = currentCollection.workflow.status;\n  const currentCollectionWorkflow = currentCollection.workflow.workflow;\n  const packages = Collections.Packages.find({\n    layout: {\n      $elemMatch: options.hash\n    },\n    shopId: shopId\n  });\n\n  //  we can have multiple packages contributing to the layout / workflow\n  packages.forEach(function (reactionPackage) {\n    const layoutWorkflows = _.filter(reactionPackage.layout, options.hash);\n    // check the packages for layout workflow templates\n    for (layout of layoutWorkflows) {\n      // audience is layout permissions\n      if (layout.audience === undefined) {\n        layout.audience = Shop.defaultRoles || \"owner\";\n      }\n\n      // check permissions so you don't have to on template.\n      if (Reaction.hasPermission(layout.audience)) {\n        // todo: review this hack to remove layout\n        // from the workflow\n        if (!layout.layout) {\n          // default is boolean false status\n          // true = we've completed this workflow\n          // false = pending (future) step\n          // <template> = in process (current) step.\n          layout.status = _.includes(currentCollectionWorkflow, layout.template);\n          // if the current template is already the current status\n          if (layout.template === currentStatus) {\n            layout.status = currentStatus;\n          }\n          // push to reactionTemplates\n          reactionTemplates.push(layout);\n        }\n      }\n    }\n  });\n  return reactionTemplates;\n});\n","import { Reaction } from \"../\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Template } from \"meteor/templating\";\n\n/*\n * Methods for the reaction permissions\n * helpers for roles, uses alanning:meteor-roles\n * see: http://alanning.github.io/meteor-roles/classes/Roles.html\n * use: {{hasPermission admin userId}}\n */\n\n/**\n * hasPermission template helper\n * @summary check current user hasPermission\n * @param  {String|Array} \"permissions\"\n * @param  {String} checkUserId - optional Meteor.userId, default to current\n * @return {Boolean}\n */\nTemplate.registerHelper(\"hasPermission\", function (permissions, options) {\n  // default to checking this.userId\n  let userId = Meteor.userId();\n  const shopId = Reaction.getShopId();\n  // we don't necessarily need to check here\n  // as these same checks and defaults are\n  // also performed in Reaction.hasPermission\n  if (typeof options === \"object\") {\n    if (options.hash.userId) {\n      userId = options.hash.userId;\n      return Reaction.hasPermission(permissions, userId, shopId);\n    }\n  }\n  return Reaction.hasPermission(permissions, userId, shopId);\n});\n\n/**\n * hasOwnerAccess template helper\n * @summary check if user has owner access\n * @return {Boolean} return true if owner\n */\nTemplate.registerHelper(\"hasOwnerAccess\", function () {\n  return Reaction.hasOwnerAccess();\n});\n\n/**\n * hasAdminAccess template helper\n * @summary check if user has admin access\n * @return {Boolean} return true if admin\n */\nTemplate.registerHelper(\"hasAdminAccess\", function () {\n  return Reaction.hasAdminAccess();\n});\n\n/**\n * hasDashboardAccess template helper\n * @summary check if user has dashboard access\n * @return {Boolean} return true if user has dashboard permission\n */\nTemplate.registerHelper(\"hasDashboardAccess\", function () {\n  return Reaction.hasDashboardAccess();\n});\n\n/**\n * allowGuestCheckout template helper\n * @summary check if guest users are allowed to checkout\n * @return {Boolean} return true if shop has guest checkout enabled\n */\nTemplate.registerHelper(\"allowGuestCheckout\", function () {\n  return Reaction.allowGuestCheckout();\n});\n","import * as tz from \"moment-timezone\";\nimport moment from \"moment\";\nimport \"moment/min/locales.min.js\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Template } from \"meteor/templating\";\nimport { i18next } from \"/client/api\";\nimport { Reaction } from \"../\";\nimport * as Collections from \"/lib/collections\";\nimport * as Schemas from \"/lib/collections/schemas\";\nimport { toCamelCase } from \"/lib/api\";\n\n/*\n *\n * Reaction Spacebars helpers\n * See: http://docs.meteor.com/#/full/template_registerhelper\n *\n */\n\nTemplate.registerHelper(\"Collections\", function () {\n  return Collections;\n});\n\nTemplate.registerHelper(\"Schemas\", function () {\n  return Schemas;\n});\n\n/**\n * currentUser\n * @summary overrides Meteor Package.blaze currentUser method\n * @return {[Boolean]} returns true/null if user has registered\n */\nif (Package.blaze) {\n  Package.blaze.Blaze.Template.registerHelper(\"currentUser\", function () {\n    if (typeof Reaction === \"object\") {\n      const shopId = Reaction.getShopId();\n      const user = Accounts.user();\n      if (!shopId || typeof user !== \"object\") return null;\n      // shoppers should always be guests\n      const isGuest = Roles.userIsInRole(user, \"guest\", shopId);\n      // but if a user has never logged in then they are anonymous\n      const isAnonymous = Roles.userIsInRole(user, \"anonymous\", shopId);\n\n      return isGuest && !isAnonymous ? user : null;\n    }\n    return null;\n  });\n}\n\n/**\n * registerHelper monthOptions\n * @summary formats moment.js months into an array for autoform selector\n * @return {Array} returns array of months [value:, label:]\n */\nTemplate.registerHelper(\"monthOptions\", function (showDefaultOption = true) {\n  const label = i18next.t(\"app.monthOptions\", \"Choose month\");\n  const localLocale = tz;\n\n  // adding cases where our lang w/o region\n  // isn't predefined in moment.\n  // because using defineLocale throws\n  // ugly deprecation warnings, we aren't doing:\n  //\n  // localLocale.defineLocale(\"zh\", {\n  //   parentLocale: \"zh-cn\"\n  // });\n  let lang = i18next.language;\n  if (lang === \"zh\") {\n    lang = \"zh-cn\";\n  }\n\n  localLocale.locale(lang);\n  const monthOptions = [];\n\n  if (showDefaultOption) {\n    monthOptions.push({\n      value: \"\",\n      label: label\n    });\n  }\n\n  const months = localLocale.months();\n  // parse into autoform array\n  for (const index in months) {\n    if ({}.hasOwnProperty.call(months, index)) {\n      const month = months[index];\n      const mnum = parseInt(index, 10) + 1;\n      monthOptions.push({\n        value: mnum,\n        label: `${mnum} | ${month}`\n      });\n    }\n  }\n\n  return monthOptions;\n});\n\n/**\n * yearOptions\n * @summary formats moment.js next 9 years into array for autoform selector\n * @return {Array} returns array of years [value:, label:]\n */\nTemplate.registerHelper(\"yearOptions\", function (showDefaultOption = true) {\n  const label = i18next.t(\"app.yearOptions\", \"Choose year\");\n  const yearOptions = [];\n\n  if (showDefaultOption) {\n    yearOptions.push({\n      value: \"\",\n      label: label\n    });\n  }\n\n  let year = new Date().getFullYear();\n  for (let i = 1; i < 9; i++) {\n    yearOptions.push({\n      value: year,\n      label: year\n    });\n    year++;\n  }\n  return yearOptions;\n});\n\n/**\n * timezoneOptions\n * @summary formats moment.js timezones into array for autoform selector\n * @return {Array} returns array of timezones [value:, label:]\n */\nTemplate.registerHelper(\"timezoneOptions\", function () {\n  const label = i18next.t(\"app.timezoneOptions\", \"Choose timezone\");\n  const timezoneOptions = [{\n    value: \"\",\n    label: label\n  }];\n  const timezones = moment.tz.names();\n  for (const timezone of timezones) {\n    timezoneOptions.push({\n      value: timezone,\n      label: timezone\n    });\n  }\n  return timezoneOptions;\n});\n\n\n/**\n * camelToSpace\n * @summary convert a camelcased string to spaces\n * @param {String} str - camelcased string\n * @return {String} returns space formatted string\n */\nTemplate.registerHelper(\"camelToSpace\", function (str) {\n  const downCamel = str.replace(/\\W+/g, \"-\").replace(/([a-z\\d])([A-Z])/g, \"$1 $2\");\n  return downCamel.toLowerCase();\n});\n\n/**\n * toLowerCase\n * @summary convert a string to lower case\n * @param {String} str - string\n * @return {String} returns lowercased string\n */\nTemplate.registerHelper(\"toLowerCase\", function (str) {\n  return str.toLowerCase();\n});\n\n/**\n * toUpperCase\n * @summary convert a string to upper case\n * @param {String} str - string\n * @return {String} returns uppercased string\n */\nTemplate.registerHelper(\"toUpperCase\", function (str) {\n  return str.toUpperCase();\n});\n\n/**\n * capitalize\n * @summary capitalize first character of string\n * @param {String} str - string\n * @return {String} returns string with first letter capitalized\n */\nTemplate.registerHelper(\"capitalize\", function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n});\n\n/**\n * toCamelCase\n * @summary camelCases a string\n * @param {String} str - string\n * @return {String|undefined} returns camelCased string\n */\nTemplate.registerHelper(\"toCamelCase\", function (str) {\n  return !!str && toCamelCase(str);\n});\n\n\n/**\n * siteName\n * @summary get the shop name\n * @return {String} returns site name\n */\nTemplate.registerHelper(\"siteName\", function () {\n  const shop = Collections.Shops.findOne();\n  return typeof shop === \"object\" && shop.name ? shop.name : \"\";\n});\n\n/*\n *  General helpers for template functionality\n */\n\n/**\n * condition\n * @summary conditional string comparison template helper\n * @example {{#if condition status \"eq\" ../value}}\n * @param {String} v1 - first variable to compare\n * @param {String} operator - eq,neq,ideq,or,lt,gt comparision operator\n * @param {String} v2 - second variable to compare\n * @return {Boolean} returns true/false\n */\nTemplate.registerHelper(\"condition\", function (v1, operator, v2) {\n  switch (operator) {\n    case \"==\":\n    case \"eq\":\n      return v1 === v2;\n    case \"!=\":\n    case \"neq\":\n      return v1 !== v2;\n    case \"===\":\n    case \"ideq\":\n      return v1 === v2;\n    case \"!==\":\n    case \"nideq\":\n      return v1 !== v2;\n    case \"&&\":\n    case \"and\":\n      return v1 && v2;\n    case \"||\":\n    case \"or\":\n      return v1 || v2;\n    case \"<\":\n    case \"lt\":\n      return v1 < v2;\n    case \"<=\":\n    case \"lte\":\n      return v1 <= v2;\n    case \">\":\n    case \"gt\":\n      return v1 > v2;\n    case \">=\":\n    case \"gte\":\n      return v1 >= v2;\n    default:\n      throw new Meteor.Error(`Undefined conditional operator ${operator}`);\n  }\n});\n\n/**\n * orElse\n * @summary if this is true, or else this\n * @param {String} v1 - variable one\n * @param {String} v2 - variable two\n * @return {String} returns v1 || v2\n */\nTemplate.registerHelper(\"orElse\", function (v1, v2) {\n  return v1 || v2;\n});\n\n/**\n * key_value\n * @summary template helper pushing object key/value into array\n * @param {Object} context - object to parse into key / value\n * @return {Array} returns array[key:,value:]\n */\nTemplate.registerHelper(\"key_value\", function (context) {\n  const result = [];\n  _.each(context, function (value, key) {\n    return result.push({\n      key: key,\n      value: value\n    });\n  });\n  return result;\n});\n\n/**\n * nl2br\n * @summary template helper nl2br - Converts new line (\\n\\r) to <br>\n * from http://phpjs.org/functions/nl2br:480\n * @param {String} text - text\n * @returns {String} returns formatted Spacebars.SafeString\n */\nTemplate.registerHelper(\"nl2br\", function (text) {\n  const nl2br = (text + \"\").replace(/([^>\\r\\n]?)(\\r\\n|\\n\\r|\\r|\\n)/g, \"$1\" +\n    \"<br>\" + \"$2\");\n  return new Spacebars.SafeString(nl2br);\n});\n\n/**\n * dateFormat\n * @description\n * format an ISO date using Moment.js\n * http://momentjs.com/\n * moment syntax example: moment(Date(\"2011-07-18T15:50:52\")).format(\"MMMM YYYY\")\n * @example {{dateFormat creation_date format=\"MMMM YYYY\"}}\n * @param {String} context - moment context\n * @param {String} block - hash of moment options, ie: format=\"\"\n * @return {Date} return formatted date\n */\nTemplate.registerHelper(\"dateFormat\", function (context, block) {\n  const f = block.hash.format || \"MMM DD, YYYY hh:mm:ss A\";\n  return moment(context).format(f);\n});\n\n/**\n * timeAgo\n * @description\n * accept an ISO date using Moment.js and return elapsed time from today\n * http://momentjs.com/\n * moment syntax example: moment(Date(\"2011-07-18T15:50:52\")).from(new Date())\n * @example {{timeAgo creation_date}}\n * @param {String} context - moment context\n * @return {Date} return formatted date\n */\nTemplate.registerHelper(\"timeAgo\", function (context) {\n  return moment(context).from(new Date());\n});\n\n\n/**\n * pluralize\n * @summary general helper for plurization of strings\n * @example {{plurize \"1 thing\"}}\n * @param {String} nCount - number, ie \"1 \"\n * @param {String} pString - plural string ie \" thing\"\n * @todo adapt to, and use i18next\n */\nTemplate.registerHelper(\"pluralize\", function (nCount, pString) {\n  if (nCount === 1) {\n    return \"1 \" + pString;\n  }\n  return nCount + \" \" + pString + \"s\";\n});\n","// client slugify only works when import minified version.\nimport \"transliteration/lib/browser/transliteration.min.js\";\n\n/**\n * getSlug - return a client slugified string using the \"slugify\"\n * global from the transliteration package\n * https://www.npmjs.com/package/transliteration\n * @param  {String} slugString - string to slugify\n * @return {String} slugified string\n */\nexport function getSlug(slugString) {\n  return slugString ? slugify(slugString) : \"\";\n}\n","import { Accounts } from \"meteor/accounts-base\";\nimport { Session } from \"meteor/session\";\n// import { amplify } from \"meteor/amplify\";\n\n/*\n * registerLoginHandler\n * method to create anonymous users\n */\n\nAccounts.loginWithAnonymous = function (anonymous, callback) {\n  // We need to be sure that every user will work inside a session. Sometimes\n  // session could be destroyed, for example, by clearing browser's cache. In\n  // that case we need to take care about creating new session before new\n  // user or anonymous will be created/logged in.\n  // The problem here - looks like where is no way to track localStorage:\n  // `amplify.store(\"Reaction.session\")` itself. That's why we need to use\n  // another way: `accounts` package uses `setTimeout` for monitoring connection\n  // Accounts.callLoginMethod will be called after clearing cache. We could\n  // latch on this computations by running extra check here.\n  if (typeof amplify.store(\"Reaction.session\") !== \"string\") {\n    const newSession = Random.id();\n    amplify.store(\"Reaction.session\", newSession);\n    Session.set(\"sessionId\", newSession);\n  }\n  Accounts.callLoginMethod({\n    methodArguments: [{\n      anonymous: true,\n      sessionId: Session.get(\"sessionId\")\n    }],\n    userCallback: callback\n  });\n};\n","import Core from \"./main\";\nimport * as Apps from \"./helpers/apps\";\nimport * as Globals from \"./helpers/globals\";\nimport * as Utils from \"./helpers/utils\";\nimport { Subscriptions } from \"./subscriptions\";\n\nimport Log from \"/client/modules/logger\";\nimport { Router } from \"/client/modules/router\";\n\nimport * as Collections from \"/lib/collections\";\nimport * as Schemas from \"/lib/collections/schemas\";\n\n\nexport const Reaction = Object.assign(\n  Core,\n  Apps,\n  Globals,\n  Utils,\n  { Subscriptions },\n  { Log },\n  { Router },\n  { Collections },\n  { Schemas }\n);\n","import { Meteor } from \"meteor/meteor\";\nimport { Tracker } from \"meteor/tracker\";\nimport Reaction from \"./main\";\n\n/**\n *  Startup Reaction\n *  Init Reaction client\n */\nMeteor.startup(function () {\n  // init the core\n  Reaction.init();\n  // initialize anonymous guest users\n  return Tracker.autorun(function () {\n    const userId = Meteor.userId();\n    // TODO: maybe `visibilityState` will be better here\n    let loggingIn;\n    let sessionId;\n    Tracker.nonreactive(function () {\n      loggingIn = Accounts.loggingIn();\n      sessionId = amplify.store(\"Reaction.session\");\n    });\n    if (!userId) {\n      if (!loggingIn || typeof sessionId !== \"string\") {\n        Accounts.loginWithAnonymous();\n      }\n    }\n  });\n});\n","import { Meteor } from \"meteor/meteor\";\nimport { Random } from \"meteor/random\";\nimport { Session } from \"meteor/session\";\nimport { Tracker } from \"meteor/tracker\";\nimport { SubsManager } from \"meteor/meteorhacks:subs-manager\";\n\nexport const Subscriptions = {};\n\n// Subscription Manager\n// See: https://github.com/kadirahq/subs-manager\nSubscriptions.Manager = new SubsManager();\n\nSubscriptions.Account = Subscriptions.Manager.subscribe(\"Accounts\", Meteor.userId());\n\n/*\n * Reaction.session\n * Create persistent sessions for users\n * The server returns only one record, so findOne will return that record\n * Stores into client session all data contained in server session\n * supports reactivity when server changes `newSession`\n * Stores the server session id into local storage / cookies\n *\n * Also localStorage session could be set from the client-side. This could\n * happen when user flush browser's cache, for example.\n * @see https://github.com/reactioncommerce/reaction/issues/609#issuecomment-166389252\n */\n\n/**\n * General Subscriptions\n */\nSubscriptions.Shops = Subscriptions.Manager.subscribe(\"Shops\");\n\nSubscriptions.Packages = Subscriptions.Manager.subscribe(\"Packages\");\n\nSubscriptions.Tags = Subscriptions.Manager.subscribe(\"Tags\");\n\nSubscriptions.Media = Subscriptions.Manager.subscribe(\"Media\");\n\n/**\n * Subscriptions that need to reload on new sessions\n */\nTracker.autorun(function () {\n  // we are trying to track both amplify and Session.get here, but the problem\n  // is - we can't track amplify. It just not tracked. So, to track amplify we\n  // are using dirty hack inside Accounts.loginWithAnonymous method.\n  const sessionId = amplify.store(\"Reaction.session\");\n  let newSession;\n  Tracker.nonreactive(() => {\n    newSession = Random.id();\n  });\n  if (typeof sessionId !== \"string\") {\n    amplify.store(\"Reaction.session\", newSession);\n    Session.set(\"sessionId\", newSession);\n  }\n  if (typeof Session.get(\"sessionId\") !== \"string\") {\n    Session.set(\"sessionId\", amplify.store(\"Reaction.session\"));\n  }\n  Subscriptions.Sessions = Meteor.subscribe(\"Sessions\", Session.get(\"sessionId\"));\n});\n\n// @see http://guide.meteor.com/data-loading.html#changing-arguments\nTracker.autorun(() => {\n  let sessionId;\n  // we really don't need to track the sessionId here\n  Tracker.nonreactive(() => {\n    sessionId = Session.get(\"sessionId\");\n  });\n  Subscriptions.Cart = Meteor.subscribe(\"Cart\", sessionId, Meteor.userId());\n  Subscriptions.UserProfile = Meteor.subscribe(\"UserProfile\", Meteor.userId());\n});\n","import _ from \"lodash\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Session } from \"meteor/session\";\nimport { check } from \"meteor/check\";\nimport { Tracker } from \"meteor/tracker\";\nimport { ReactiveVar } from \"meteor/reactive-var\";\nimport { ReactiveDict } from \"meteor/reactive-dict\";\nimport Logger from \"/client/modules/logger\";\nimport { Countries } from \"/client/collections\";\nimport { localeDep } from  \"/client/modules/i18n\";\nimport { Packages, Shops } from \"/lib/collections\";\nimport { Router } from \"/client/modules/router\";\n\n// Global, private state object for client side\n// This is placed outside the main object to make it a private variable.\n// access using `Reaction.state`\nconst reactionState = new ReactiveDict();\n\n/**\n * Reaction namespace\n * Global reaction shop permissions methods and shop initialization\n */\nexport default {\n  shopId: null,\n\n  Locale: new ReactiveVar({}),\n\n  init() {\n    // keep an eye out for shop change\n    return Tracker.autorun(() => {\n      let domain;\n      let shop;\n\n      if (this.Subscriptions.Shops.ready()) {\n        domain = Meteor.absoluteUrl().split(\"/\")[2].split(\":\")[0];\n        shop = Shops.findOne({\n          domains: domain\n        });\n\n        if (shop) {\n          this.shopId = shop._id;\n          this.shopName = shop.name;\n          // initialize local client Countries collection\n          if (!Countries.findOne()) {\n            createCountryCollection(shop.locales.countries);\n          }\n\n          const locale = this.Locale.get() || {};\n\n          // fix for https://github.com/reactioncommerce/reaction/issues/248\n          // we need to keep an eye for rates changes\n          if (typeof locale.locale === \"object\" &&\n            typeof locale.currency === \"object\" &&\n            typeof locale.locale.currency === \"string\") {\n            const localeCurrency = locale.locale.currency.split(\",\")[0];\n            if (typeof shop.currencies[localeCurrency] === \"object\") {\n              if (typeof shop.currencies[localeCurrency].rate === \"number\") {\n                locale.currency.rate = shop.currencies[localeCurrency].rate;\n                localeDep.changed();\n              }\n            }\n          }\n          // we are looking for a shopCurrency changes here\n          if (typeof locale.shopCurrency === \"object\") {\n            locale.shopCurrency = shop.currencies[shop.currency];\n            localeDep.changed();\n          }\n          return this;\n        }\n      }\n    });\n  },\n\n  // Return global \"reactionState\" Reactive Dict\n  get state() {\n    return reactionState;\n  },\n\n  /**\n   * hasPermission - client\n   * client permissions checks\n   * hasPermission exists on both the server and the client.\n   *\n   * @param {String | Array} checkPermissions -String or Array of permissions if empty, defaults to \"admin, owner\"\n   * @param {String} checkUserId - userId, defaults to Meteor.userId()\n   * @param {String} checkGroup group - default to shopId\n   * @return {Boolean} Boolean - true if has permission\n   */\n  hasPermission(checkPermissions, checkUserId, checkGroup) {\n    let group = this.getShopId();\n    let permissions = [\"owner\"];\n    let id = \"\";\n    const userId = checkUserId || this.userId || Meteor.userId();\n    //\n    // local roleCheck function\n    // is the bulk of the logic\n    // called out a userId is validated.\n    //\n    function roleCheck() {\n      // permissions can be either a string or an array\n      // we'll force it into an array and use that\n      if (checkPermissions === undefined) {\n        permissions = [\"owner\"];\n      } else if (typeof checkPermissions === \"string\") {\n        permissions = [checkPermissions];\n      } else {\n        permissions = checkPermissions;\n      }\n      // if the user has admin, owner permissions we'll always check if those roles are enough\n      permissions.push(\"owner\");\n      permissions = _.uniq(permissions);\n\n      //\n      // return if user has permissions in the group\n      //\n      if (Roles.userIsInRole(userId, permissions, group)) {\n        return true;\n      }\n      // global roles check\n      const sellerShopPermissions = Roles.getGroupsForUser(userId, \"admin\");\n      // we're looking for seller permissions.\n      if (sellerShopPermissions) {\n        // loop through shops roles and check permissions\n        for (const key in sellerShopPermissions) {\n          if (key) {\n            const shop = sellerShopPermissions[key];\n            if (Roles.userIsInRole(userId, permissions, shop)) {\n              return true;\n            }\n          }\n        }\n      }\n      // no specific permissions found returning false\n      return false;\n    }\n\n    //\n    // check if a user id has been found\n    // in line 156 setTimeout\n    //\n    function validateUserId() {\n      if (Meteor.userId()) {\n        Meteor.clearTimeout(id);\n        Router.reload();\n        return roleCheck();\n      }\n      return false;\n    }\n\n    //\n    // actual logic block to check permissions\n    // we'll bypass unecessary checks during\n    // a user logging, as we'll check again\n    // when everything is ready\n    //\n    if (Meteor.loggingIn() === false) {\n      //\n      // this userId check happens because when logout\n      // occurs it takes a few cycles for a new anonymous user\n      // to get created and during this time the user has no\n      // permission, not even guest permissions so we\n      // need to wait and reload the routes. This\n      // mainly affects the logout from dashboard pages\n      //\n      if (!userId) {\n        id = Meteor.setTimeout(validateUserId, 5000);\n      } else {\n        return roleCheck();\n      }\n\n      // default group to the shop or global if shop\n      // isn't defined for some reason.\n      if (checkGroup !== undefined && typeof checkGroup === \"string\") {\n        group = checkGroup;\n      }\n      if (!group) {\n        group = Roles.GLOBAL_GROUP;\n      }\n    }\n    // return false to be safe\n    return false;\n  },\n\n  hasOwnerAccess() {\n    const ownerPermissions = [\"owner\"];\n    return this.hasPermission(ownerPermissions);\n  },\n\n  hasAdminAccess() {\n    const adminPermissions = [\"owner\", \"admin\"];\n    return this.hasPermission(adminPermissions);\n  },\n\n  hasDashboardAccess() {\n    const dashboardPermissions = [\"owner\", \"admin\", \"dashboard\"];\n    return this.hasPermission(dashboardPermissions);\n  },\n\n  getUserPreferences(packageName, preference, defaultValue) {\n    const user = Meteor.user();\n\n    if (user) {\n      const profile = Meteor.user().profile;\n      if (profile && profile.preferences && profile.preferences[packageName] && profile.preferences[packageName][preference]) {\n        return profile.preferences[packageName][preference];\n      }\n    }\n\n    return defaultValue || undefined;\n  },\n\n  setUserPreferences(packageName, preference, value) {\n    if (Meteor.user()) {\n      return Meteor.users.update(Meteor.userId(), {\n        $set: {\n          [`profile.preferences.${packageName}.${preference}`]: value\n        }\n      });\n    }\n    return false;\n  },\n\n  updateUserPreferences(packageName, preference, values) {\n    const currentPreference = this.getUserPreferences(packageName, preference, {});\n    return this.setUserPreferences(packageName, preference, {\n      ...currentPreference,\n      ...values\n    });\n  },\n\n  getShopId() {\n    return this.shopId;\n  },\n\n  getShopName() {\n    return this.shopName;\n  },\n\n  getShopPrefix() {\n    return \"/\" + this.getSlug(this.getShopName().toLowerCase());\n  },\n\n  getShopSettings() {\n    const settings = Packages.findOne({\n      name: \"core\",\n      shopId: this.shopId\n    }) || {};\n    return settings.settings || {};\n  },\n\n  getShopCurrency() {\n    const shop = Shops.findOne({\n      _id: this.shopId\n    });\n\n    return shop && shop.currency || \"USD\";\n  },\n\n  isPreview() {\n    const viewAs = this.getUserPreferences(\"reaction-dashboard\", \"viewAs\", \"administrator\");\n\n    if (viewAs === \"customer\") {\n      return true;\n    }\n\n    return false;\n  },\n\n  getPackageSettings(name) {\n    return Packages.findOne({ name, shopId: this.getShopId() });\n  },\n\n  allowGuestCheckout() {\n    let allowGuest = false;\n    const settings = this.getShopSettings();\n    // we can disable in admin, let's check.\n    if (settings.public && settings.public.allowGuestCheckout) {\n      allowGuest = settings.public.allowGuestCheckout;\n    }\n    return allowGuest;\n  },\n\n  getSellerShopId() {\n    return Roles.getGroupsForUser(this.userId, \"admin\");\n  },\n\n  /**\n   * @description showActionView\n   *\n   * @param {String} viewData {label, template, data}\n   * @returns {String} Session \"admin/showActionView\"\n   */\n  showActionView(viewData) {\n    Session.set(\"admin/showActionView\", true);\n    this.setActionView(viewData);\n  },\n\n  isActionViewOpen() {\n    return Session.equals(\"admin/showActionView\", true);\n  },\n\n  isActionViewDetailOpen() {\n    return Session.equals(\"admin/showActionViewDetail\", true);\n  },\n\n\n  setActionView(viewData) {\n    if (viewData) {\n      let viewStack;\n\n      if (Array.isArray(viewData)) {\n        viewStack = viewData;\n      } else {\n        viewStack = [viewData];\n      }\n\n      Session.set(\"admin/actionView\", viewStack);\n    } else {\n      const registryItem = this.getRegistryForCurrentRoute(\n        \"settings\");\n\n      if (registryItem) {\n        this.setActionView(registryItem);\n      } else {\n        this.setActionView({\n          template: \"blankControls\"\n        });\n      }\n    }\n  },\n\n  pushActionView(viewData) {\n    Session.set(\"admin/showActionView\", true);\n\n    const actionViewStack = Session.get(\"admin/actionView\");\n\n    if (viewData) {\n      actionViewStack.push(viewData);\n      Session.set(\"admin/actionView\", actionViewStack);\n    } else {\n      const registryItem = this.getRegistryForCurrentRoute(\n        \"settings\");\n\n      if (registryItem) {\n        this.pushActionView(registryItem);\n      } else {\n        this.pushActionView({ template: \"blankControls\" });\n      }\n    }\n  },\n\n  isActionViewAtRootView() {\n    const actionViewStack = Session.get(\"admin/actionView\");\n\n    if (Array.isArray(actionViewStack) && actionViewStack.length === 1) {\n      return true;\n    }\n\n    return false;\n  },\n\n  popActionView() {\n    const actionViewStack = Session.get(\"admin/actionView\");\n    actionViewStack.pop();\n\n    Session.set(\"admin/actionView\", actionViewStack);\n\n    this.setActionViewDetail({}, { open: false });\n  },\n\n  setActionViewDetail(viewData, options = {}) {\n    const { open } = options;\n\n    Session.set(\"admin/showActionView\", true);\n    Session.set(\"admin/showActionViewDetail\", typeof open === \"boolean\" ? open : true);\n\n    if (viewData) {\n      Session.set(\"admin/detailView\", [viewData]);\n    }\n  },\n\n  pushActionViewDetail(viewData) {\n    Session.set(\"admin/showActionView\", true);\n    Session.set(\"admin/showActionViewDetail\", true);\n\n    const detailViewStack = Session.get(\"admin/detailView\");\n\n    if (viewData) {\n      detailViewStack.push(viewData);\n      Session.set(\"admin/detailView\", detailViewStack);\n    }\n  },\n\n  popActionViewDetail() {\n    const detailViewStack = Session.get(\"admin/detailView\");\n    detailViewStack.pop();\n\n    Session.set(\"admin/detailView\", detailViewStack);\n  },\n\n  isActionViewDetailAtRootView() {\n    const actionViewDetailStack = Session.get(\"admin/detailView\");\n\n    if (Array.isArray(actionViewDetailStack) && actionViewDetailStack.length === 1) {\n      return true;\n    }\n\n    return false;\n  },\n\n  getActionView() {\n    const actionViewStack = Session.get(\"admin/actionView\");\n\n    if (Array.isArray(actionViewStack) && actionViewStack.length) {\n      return actionViewStack.pop();\n    }\n\n    return {};\n  },\n\n  getActionViewDetail() {\n    const detailViewStack = Session.get(\"admin/detailView\");\n\n    if (Array.isArray(detailViewStack) && detailViewStack.length) {\n      return detailViewStack.pop();\n    }\n\n    return {};\n  },\n\n  hideActionView() {\n    Session.set(\"admin/showActionView\", false);\n    this.clearActionView();\n  },\n\n  hideActionViewDetail() {\n    Session.set(\"admin/showActionViewDetail\", false);\n    this.clearActionViewDetail();\n  },\n\n  clearActionView() {\n    Session.set(\"admin/actionView\", [{\n      label: \"\",\n      i18nKeyLabel: \"\"\n    }]);\n    Session.set(\"admin/detailView\", [{\n      label: \"\",\n      i18nKeyLabel: \"\"\n    }]);\n  },\n\n  clearActionViewDetail() {\n    Session.set(\"admin/detailView\", [{\n      label: \"\",\n      i18nKeyLabel: \"\"\n    }]);\n  },\n\n  getCurrentTag() {\n    if (this.Router.getRouteName() === \"tag\") {\n      return this.Router.current().params.slug;\n    }\n  },\n\n  getRegistryForCurrentRoute(provides = \"dashboard\") {\n    this.Router.watchPathChange();\n    const currentRouteName = this.Router.getRouteName();\n    const currentRoute = this.Router.current();\n    const template = currentRoute.route.options.template;\n    // find registry entries for routeName\n    const reactionApp = Packages.findOne({\n      \"registry.name\": currentRouteName,\n      \"registry.provides\": provides,\n      \"enabled\": true\n    }, {\n      enabled: 1,\n      registry: 1,\n      route: 1,\n      name: 1,\n      label: 1,\n      settings: 1\n    });\n\n    // valid application\n    if (reactionApp) {\n      const settingsData = _.find(reactionApp.registry, function (item) {\n        return item.provides === provides && item.template === template;\n      });\n      return settingsData;\n    }\n    Logger.debug(\"getRegistryForCurrentRoute not found\", template, provides);\n    return {};\n  }\n\n};\n\n/**\n * createCountryCollection\n * Create a client-side only collection of Countries for a dropdown form\n * properly sorted*\n * @param {Object} countries -  The countries array on the Shop collection\n * @returns {Array} countryOptions - Sorted array of countries\n */\nfunction createCountryCollection(countries) {\n  check(countries, Object);\n  const countryOptions = [];\n  for (const locale in countries) {\n    if ({}.hasOwnProperty.call(countries, locale)) {\n      const country = countries[locale];\n      countryOptions.push({\n        label: country.name,\n        value: locale\n      });\n    }\n  }\n  countryOptions.sort(function (a, b) {\n    if (a.label < b.label) {\n      return -1;\n    }\n    if (a.label > b.label) {\n      return 1;\n    }\n    return 0;\n  });\n\n  for (const country of countryOptions) {\n    Countries.insert(country);\n  }\n  return countryOptions;\n}\n","import { includes } from \"lodash\";\nimport bunyan from \"bunyan\";\nimport { Meteor } from \"meteor/meteor\";\n\n/*\n * configure bunyan logging module for reaction client\n * See: https://github.com/trentm/node-bunyan#levels\n * client we'll cofigure WARN as default\n */\nconst levels = [\"FATAL\", \"ERROR\", \"WARN\", \"INFO\", \"DEBUG\", \"TRACE\"];\n\n// set stdout log level\nlet level = Meteor.settings.public.REACTION_LOG_LEVEL || \"WARN\";\n\nlevel = level.toUpperCase();\n\nif (!includes(levels, level)) {\n  level = \"WARN\";\n}\n\nconst Logger = bunyan.createLogger({\n  name: \"reaction-client\",\n  level\n});\n\nexport default Logger;\n","import Router from \"./main\";\n\n//\n// pathFor\n// template helper to return path\n//\nTemplate.registerHelper(\"pathFor\", Router.pathFor);\n\n//\n// urlFor\n// template helper to return absolute + path\n//\nTemplate.registerHelper(\"urlFor\", (path, params) => {\n  return Meteor.absoluteUrl(Router.pathFor(path, params).substr(1));\n});\n\nTemplate.registerHelper(\"active\", Router.isActiveClassName);\n","export default from \"/imports/plugins/core/router/lib/hooks\";\n","export { default as Router } from \"/imports/plugins/core/router/lib/router\";\n","import { Router } from \"/imports/plugins/core/router/lib\";\n\nexport default Router;\n","/*\n * This is an example of a customized template.\n * This layout replaces the \"coreLayout\" template defined in the reactioncommerce:core package.\n * https://github.com/reactioncommerce/reaction-core/blob/master/client/templates/layout/layout.html\n * To use custom template in layout.html uncomment\n *\n *     Template.layout.replaces \"coreLayout\"\n */\n\n\n// Template.layout.replaces(\"coreLayout\");\n","import { Reaction } from \"/client/modules/core\";\nimport { Router } from \"/client/modules/router\";\n\n// Legacy globals\n// TODO: add deprecation warnings\nReactionCore = Reaction;\nReactionRouter = Router;\n\nexport {\n  Reaction,\n  Router\n};\n\nexport * from \"/client/modules/i18n\";\nexport { default as Logger } from \"/client/modules/logger\";\n","import { Mongo } from \"meteor/mongo\";\n\n/**\n * Client side collections\n */\n\nexport const Countries = new Mongo.Collection(null);\n","export * from \"./countries\";\nexport * from \"./taxEntitycodes\";\n","import { Mongo } from \"meteor/mongo\";\n\n/**\n * Client side collections\n */\nexport const TaxEntityCodes = new Mongo.Collection(null);\n","import { Session } from \"meteor/session\";\n\n/**\n * Misc. App. Configuration\n *\n * A place to put misc. package configurations\n */\n\n// override/set layout\nexport const DEFAULT_LAYOUT = \"coreLayout\";\n\n// override/set workflow\nexport const DEFAULT_WORKFLOW = \"coreWorkflow\";\n\n// Use this to override just the home Package\n// ie: {template: \"products\"}\nexport const INDEX_OPTIONS = {\n  workflow: \"coreProductGridWorkflow\"\n};\n\n// default load qty for product grid\nexport const ITEMS_INCREMENT = 24;\n\nSession.setDefault(\"DEFAULT_LAYOUT\", DEFAULT_LAYOUT);\nSession.setDefault(\"DEFAULT_WORKFLOW\", DEFAULT_WORKFLOW);\nSession.setDefault(\"INDEX_OPTIONS\", INDEX_OPTIONS);\nSession.setDefault(\"productScrollLimit\", ITEMS_INCREMENT);\n\n// autoform default template\nAutoForm.setDefaultTemplate(\"bootstrap3\");\n","\n/**\n * ***** DO NOT EDIT THIS FILE MANUALLY *****\n * This file is generated automatically by the Reaction\n * plugin loader and will be reset at each startup.\n */\n\nimport '/imports/plugins/core/accounts/client';\nimport '/imports/plugins/core/catalog/client';\nimport '/imports/plugins/core/checkout/client';\nimport '/imports/plugins/core/dashboard/client';\nimport '/imports/plugins/core/email/client';\nimport '/imports/plugins/core/i18n/client';\nimport '/imports/plugins/core/layout/client';\nimport '/imports/plugins/core/orders/client';\nimport '/imports/plugins/core/payments/client';\nimport '/imports/plugins/core/revisions/client';\nimport '/imports/plugins/core/router/client';\nimport '/imports/plugins/core/shipping/client';\nimport '/imports/plugins/core/taxes/client';\nimport '/imports/plugins/core/templates/client';\nimport '/imports/plugins/core/ui/client';\nimport '/imports/plugins/core/ui-grid/client';\nimport '/imports/plugins/core/ui-navbar/client';\nimport '/imports/plugins/core/ui-tagnav/client';\nimport '/imports/plugins/included/analytics/client';\nimport '/imports/plugins/included/default-theme/client';\nimport '/imports/plugins/included/discount-codes/client';\nimport '/imports/plugins/included/discount-rates/client';\nimport '/imports/plugins/included/inventory/client';\nimport '/imports/plugins/included/launchdock-connect/client';\nimport '/imports/plugins/included/notifications/client';\nimport '/imports/plugins/included/payments-authnet/client';\nimport '/imports/plugins/included/payments-braintree/client';\nimport '/imports/plugins/included/payments-paypal/client';\nimport '/imports/plugins/included/payments-stripe/client';\nimport '/imports/plugins/included/product-admin/client';\nimport '/imports/plugins/included/product-detail-simple/client';\nimport '/imports/plugins/included/product-variant/client';\nimport '/imports/plugins/included/search-mongo/client';\nimport '/imports/plugins/included/shipping-rates/client';\nimport '/imports/plugins/included/shippo/client';\nimport '/imports/plugins/included/sms/client';\nimport '/imports/plugins/included/social/client';\nimport '/imports/plugins/included/taxes-avalara/client';\nimport '/imports/plugins/included/taxes-taxcloud/client';\nimport '/imports/plugins/included/taxes-taxjar/client';\nimport '/imports/plugins/included/ui-search/client';\nimport '/imports/plugins/custom/payments-example/client';\n","import { DocHead } from \"meteor/kadira:dochead\";\nimport { ReactionProduct } from \"/lib/api\";\nimport { Shops } from \"/lib/collections\";\nimport { getShopId } from \"/lib/api\";\n\n/**\n * MetaData\n * populates title and meta tags for routes\n * init accepts Router.current() context\n */\nexport const MetaData = {\n  init(context) {\n    const params = context.params;\n    const product = ReactionProduct.selectedProduct();\n    const shop = Shops.findOne(getShopId());\n    const meta = [];\n    let title = \"\";\n    const keywords = [];\n\n    // case helper\n    const titleCase = (param) => {\n      return param.charAt(0).toUpperCase() + param.substring(1);\n    };\n\n    // populate meta from shop\n    if (shop) {\n      //\n      // shop defaults\n      //\n      if (shop && shop.description) {\n        DocHead.addMeta({\n          name: \"description\",\n          content: shop.description.substring(0, 160)\n        });\n      }\n      if (shop && shop.keywords) {\n        DocHead.addMeta({\n          name: \"keywords\",\n          content: shop.keywords.toString()\n        });\n      }\n\n      //\n      // set title defaults\n      //\n      MetaData.name = shop.name;\n      // product title default\n      if (params && params.handle) {\n        if (product && product.title) {\n          title = titleCase(product.title);\n        } else {\n          title = titleCase(params.handle);\n        }\n        // tag slugs\n      } else if (params && params.slug) {\n        title = titleCase(params.slug);\n        // fallback to route name\n      } else if (context.route && context.route.name) {\n        const route = context.route;\n        const routeName = route.name;\n        // default index to Shop Name\n        if (routeName === \"index\") {\n          title = titleCase(shop.name);\n          // check for meta in package route\n        } else if (route.options.meta && route.options.meta.title) {\n          title = titleCase(route.options.meta.title);\n        } else {\n          // default routes to route's name\n          title = titleCase(routeName);\n        }\n      }\n\n      //\n      //  product details\n      //\n      if (params && params.handle && product) {\n        // discard defaults\n        DocHead.removeDocHeadAddedTags();\n\n        if (product.description) {\n          DocHead.addMeta({\n            name: \"description\",\n            content: product.description.substring(0, 160)\n          });\n        }\n\n        if (product && product.metafields) {\n          for (const key of product.metafields) {\n            keywords.push(key.value);\n          }\n        }\n\n        if (keywords) {\n          DocHead.addMeta({\n            name: \"keywords\",\n            content: keywords.toString()\n          });\n        }\n      }\n\n      // set site defaults\n      DocHead.setTitle(title);\n      MetaData.title = title;\n      MetaData.meta = meta;\n      return meta;\n    } // end shop\n  } // end update\n};\n","import { Meteor } from \"meteor/meteor\";\n\nconst validationMethods = {\n  /**\n   * Username validation\n   * @summary Determins if a username meets the minimum requirement of 3 characters\n   * @param  {String} username Username to validate\n   * @return {Boolean|Object} true if valid, error object if invalid\n   */\n  username(username) {\n    check(username, Match.OptionalOrNull(String));\n\n    // Valid\n    if (username.length >= 3) {\n      return true;\n    }\n\n    // Invalid\n    return {\n      error: \"INVALID_USERNAME\",\n      reason: \"Username must be at least 3 characters long\",\n      i18nKeyReason: \"accountsUI.error.usernameMinLength\"\n    };\n  },\n\n  /**\n   * Email validation\n   * @summary Validates both required and optional email addresses.\n   * @param  {String} email Email address to validate\n   * @param  {Boolean} optional If set to true, validation will pass if email is blank\n   * @return {Boolean|Object} Returns true if valid; Returns an error object if invalid\n   */\n  email(email, optional) {\n    check(email, Match.OptionalOrNull(String));\n    check(optional, Match.OptionalOrNull(Boolean));\n\n    const processedEmail = email.trim();\n\n    // Valid\n    if (optional === true && processedEmail.length === 0) {\n      return true;\n    } else if (processedEmail.indexOf(\"@\") !== -1) {\n      return true;\n    }\n\n    // Invalid\n    return {\n      error: \"INVALID_EMAIL\",\n      reason: \"Email address is invalid\",\n      i18nKeyReason: \"accountsUI.error.invalidEmail\"\n    };\n  },\n\n  /**\n   * Password validation\n   * Passwords may be validated 2 ways.\n   * \"exists\" (options.validationLevel = \"exists\") - Password must not be blank. Thats is the only rule. Used to validate a sign in.\n   * undefined (options.validationLevel = undefined) - Password must meet the lenght and other criteria to validate. Used for validating a new sign up.\n   * @param  {String} password Password to validate\n   * @param  {Object} options Options to apply to the password validator\n   * @param  {String} options.validationLevel \"exists\" | undefined (default)\n   * @return {Boolean|[{error: String, reason: String}]} true if valid | Error object otherwise\n   */\n  password(password, options) {\n    check(password, Match.OptionalOrNull(String));\n    check(options, Match.OptionalOrNull(Object));\n\n    const passwordOptions = options || {};\n    const errors = [];\n\n    // Only check if a password has been entered at all.\n    // This is usefull for the login forms\n    if (passwordOptions.validationLevel === \"exists\") {\n      if (password.length > 0) {\n        return true;\n      }\n\n      errors.push({\n        error: \"INVALID_PASSWORD\",\n        reason: \"Password is required\",\n        i18nKeyReason: \"accountsUI.error.passwordRequired\"\n      });\n    } else {\n      // Validate the password on some rules\n      // This is useful for cases where a password needs to be created or updated.\n      if (password.length < 6) {\n        errors.push({\n          error: \"INVALID_PASSWORD\",\n          reason: \"Password must be at least 6 characters long.\",\n          i18nKeyReason: \"accountsUI.error.passwordMustBeAtLeast6CharactersLong\"\n        });\n      }\n    }\n\n    if (errors.length) {\n      return errors;\n    }\n\n    // Otherwise the password is valid\n    return true;\n  }\n};\n\n// Export object globally\nLoginFormValidation = validationMethods;\n\n// Register validation methods as meteor methods\nMeteor.methods({\n  \"accounts/validation/username\": validationMethods.username,\n  \"accounts/validation/email\": validationMethods.email,\n  \"accounts/validation/password\": validationMethods.password\n});\n\n","import { Products } from \"/lib/collections\";\nimport { applyProductRevision } from \"/lib/api/products\";\n\nexport default Catalog = {\n  /**\n   * setProduct\n   * @summary method to set default/parameterized product variant\n   * @param {String} currentProductId - set current productId\n   * @param {String} currentVariantId - set current variantId\n   * @return {undefined} return nothing, sets in session\n   */\n  setProduct(currentProductId, currentVariantId) {\n    let productId = currentProductId;\n    const variantId = currentVariantId;\n    if (!productId.match(/^[A-Za-z0-9]{17}$/)) {\n      const product = Products.findOne({\n        handle: productId.toLowerCase()\n      });\n      if (product) {\n        productId = product._id;\n      }\n    }\n    setCurrentProduct(productId);\n    setCurrentVariant(variantId);\n  },\n\n  /**\n   * getProductPriceRange\n   * @summary get price range of a product\n   * if no only one price available, return it\n   * otherwise return a string range\n   * @todo remove string return and replace with object\n   * @todo move all this methods this to export function after 1.3\n   * @param {String} [productId] - current product _id\n   * @return {Object} range, min, max\n   */\n  getProductPriceRange(productId) {\n    const product = applyProductRevision(Products.findOne(productId));\n    if (!product) {\n      return \"\";\n    }\n    const variants = this.getTopVariants(product._id);\n    // if we have variants we have a price range.\n    // this processing will default on the server\n    const visibileVariant = variants.filter(variant => variant.isVisible === true);\n\n    if (visibileVariant.length > 0) {\n      const variantPrices = [];\n      variants.forEach(variant => {\n        if (variant.isVisible === true) {\n          const range = this.getVariantPriceRange(variant._id);\n          if (typeof range === \"string\") {\n            const firstPrice = parseFloat(range.substr(0, range.indexOf(\" \")));\n            const lastPrice = parseFloat(range.substr(range.lastIndexOf(\" \") + 1));\n            variantPrices.push(firstPrice, lastPrice);\n          } else {\n            variantPrices.push(range);\n          }\n        } else {\n          variantPrices.push(0, 0);\n        }\n      });\n      const priceMin = _.min(variantPrices);\n      const priceMax = _.max(variantPrices);\n      let priceRange = `${priceMin} - ${priceMax}`;\n      // if we don't have a range\n      if (priceMin === priceMax) {\n        priceRange = priceMin.toString();\n      }\n      const priceObject = {\n        range: priceRange,\n        min: priceMin,\n        max: priceMax\n      };\n      return priceObject;\n    }\n    // if we have no variants subscribed to (client)\n    // we'll get the price object previously from the product\n    return product.price;\n  },\n\n  /**\n   * getVariantPriceRange\n   * @summary get price range of a variant if it has child options.\n   * if no child options, return main price value\n   * @todo remove string return and replace with object\n   * @param {String} [variantId] - current variant _Id\n   * @return {String} formatted price or price range\n   */\n  getVariantPriceRange(variantId) {\n    const children = this.getVariants(variantId);\n    const visibleChildren = children.filter(child => child.isVisible);\n\n    switch (visibleChildren.length) {\n      case 0:\n        const topVariant = applyProductRevision(Products.findOne(variantId));\n        // topVariant could be undefined when we removing last top variant\n        return topVariant && topVariant.price;\n      case 1:\n        return visibleChildren[0].price;\n      default:\n        let priceMin = Number.POSITIVE_INFINITY;\n        let priceMax = Number.NEGATIVE_INFINITY;\n\n        children.map(child => {\n          if (child.isVisible === true) {\n            if (child.price < priceMin) {\n              priceMin = child.price;\n            }\n            if (child.price > priceMax) {\n              priceMax = child.price;\n            }\n          }\n        });\n\n        if (priceMin === priceMax) {\n          // TODO check impact on i18n/formatPrice from moving return to string\n          return priceMin.toString();\n        }\n        return `${priceMin} - ${priceMax}`;\n    }\n  },\n\n  /**\n   * getVariantQuantity\n   * @description calculate a sum of descendants `inventoryQuantity`\n   * @param {Object} variant - top-level variant\n   * @return {Number} summary of options quantity\n   */\n  getVariantQuantity(variant) {\n    const options = this.getVariants(variant._id);\n    if (options && options.length) {\n      return options.reduce((sum, option) =>\n      sum + option.inventoryQuantity || 0, 0);\n    }\n    return variant.inventoryQuantity || 0;\n  },\n\n  /**\n   * @method getPublishedOrRevision\n   * @description return top product revision if available\n   * @param {Object} product product or variant document\n   * @return {Object} product document\n   */\n  getPublishedOrRevision(product) {\n    return applyProductRevision(product);\n  },\n\n  /**\n   * @method getVariants\n   * @description Get all parent variants\n   * @summary could be useful for products and for top level variants\n   * @param {String} [id] - product _id\n   * @param {String} [type] - type of variant\n   * @return {Array} Parent variants or empty array\n   */\n  getVariants(id, type) {\n    return Products.find({\n      ancestors: { $in: [id] },\n      type: type || \"variant\"\n    }).map(this.getPublishedOrRevision);\n  },\n\n  /**\n   * @method getTopVariants\n   * @description Get only product top level variants\n   * @param {String} [id] - product _id\n   * @return {Array} Product top level variants or empty array\n   */\n  getTopVariants(id) {\n    return Products.find({\n      ancestors: [id],\n      type: \"variant\"\n    }).map(this.getPublishedOrRevision);\n  }\n};\n","/**\n * Wrapper around react-komposer v2 to provide some backwars compatability\n * for features from v1.\n */\nimport { compose } from \"react-komposer\";\nimport React from \"react\";\nexport * from \"react-komposer\";\n\n/**\n * getTrackerLoader creates a Meteor Tracker to watch dep updates from\n * passed in reactiveMapper funtion\n * @param  {Function} reactiveMapper data fetching function to bind to a tracker\n * @return {Function} composed function\n */\nfunction getTrackerLoader(reactiveMapper) {\n  return (props, onData, env) => {\n    let trackerCleanup = null;\n    const handler = Tracker.nonreactive(() => {\n      return Tracker.autorun(() => {\n        // assign the custom clean-up function.\n        trackerCleanup = reactiveMapper(props, onData, env);\n      });\n    });\n\n    return () => {\n      if (typeof trackerCleanup === \"function\") trackerCleanup();\n      return handler.stop();\n    };\n  };\n}\n\n/**\n * Re-implementation of composeWithTracker from v1.x\n * @param {Function} reactiveMapper data fetching function to bind to a tracker\n * @param {React.Component} LoadingComponent react component for a custom loading screen\n * @return {Function} composed function\n */\nexport function composeWithTracker(reactiveMapper, LoadingComponent) {\n  const options = {};\n\n  if (typeof LoadingComponent === \"undefined\") {\n    options.loadingHandler = () => { // eslint-disable-line react/display-name\n      return (\n        <LoadingComponent />\n      );\n    };\n  }\n\n  return compose(getTrackerLoader(reactiveMapper), options);\n}\n","/*\n * Copy store data, copied from Meteor CollectionsFS\n * https://github.com/CollectionFS/Meteor-CollectionFS/blob/master/packages/file/fsFile-server.js#L225\n */\nfunction _copyStoreData(fileObj, storeName, sourceKey, callback) {\n  if (!fileObj.isMounted()) {\n    throw new Error(\"Cannot copy store data for a file that is not associated with a collection\");\n  }\n\n  const storage = fileObj.collection.storesLookup[storeName];\n  if (!storage) {\n    throw new Error(storeName + \" is not a valid store name\");\n  }\n\n  // We want to prevent beforeWrite and transformWrite from running, so\n  // we interact directly with the store.\n  const destinationKey = storage.adapter.fileKey(fileObj);\n  const readStream = storage.adapter.createReadStreamForFileKey(sourceKey);\n  const writeStream = storage.adapter.createWriteStreamForFileKey(destinationKey);\n\n  writeStream.once(\"stored\", function (result) {\n    callback(null, result.fileKey);\n  });\n\n  writeStream.once(\"error\", function (error) {\n    callback(error);\n  });\n\n  readStream.pipe(writeStream);\n}\nconst copyStoreData = Meteor.wrapAsync(_copyStoreData);\n\n/*\n * Modified from Meteor CollectionsFS\n * https://github.com/CollectionFS/Meteor-CollectionFS/blob/master/packages/file/fsFile-server.js#L126\n */\nexport function copyFile(fileObj, newMetaData) {\n  const self = fileObj;\n\n  if (!self.isMounted()) {\n    throw new Error(\"Cannot copy a file that is not associated with a collection\");\n  }\n\n  // Get the file record\n  const fileRecord = self.collection.files.findOne({ _id: self._id }, { transform: null }) || {};\n\n  if (newMetaData) {\n    const oldMetaData = fileRecord.metadata || {};\n\n    fileRecord.metadata = {\n      ...oldMetaData,\n      ...newMetaData\n    };\n  }\n\n  // Remove _id and copy keys from the file record\n  delete fileRecord._id;\n\n  // Insert directly; we don't have access to \"original\" in this case\n  const newId = self.collection.files.direct.insert(fileRecord);\n\n  const newFile = self.collection.findOne(newId);\n\n  // Copy underlying files in the stores\n  let mod;\n  let oldKey;\n  for (const name in newFile.copies) {\n    if (newFile.copies.hasOwnProperty(name)) {\n      oldKey = newFile.copies[name].key;\n      if (oldKey) {\n        // We need to ask the adapter for the true oldKey because\n        // right now gridfs does some extra stuff.\n        // TODO GridFS should probably set the full key object\n        // (with _id and filename) into `copies.key`\n        // so that copies.key can be passed directly to\n        // createReadStreamForFileKey\n        const sourceFileStorage = self.collection.storesLookup[name];\n        if (!sourceFileStorage) {\n          throw new Error(name + \" is not a valid store name\");\n        }\n        oldKey = sourceFileStorage.adapter.fileKey(self);\n        // delete so that new fileKey will be generated in copyStoreData\n        delete newFile.copies[name].key;\n        mod = mod || {};\n        mod[\"copies.\" + name + \".key\"] = copyStoreData(newFile, name, oldKey);\n      }\n    }\n  }\n  // Update keys in the filerecord\n  if (mod) {\n    self.collection.files.direct.update({\n      _id: newId\n    }, {\n      $set: mod\n    });\n  }\n\n  return newFile;\n}\n","import url from \"url\";\nimport { slugify } from \"transliteration\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Router } from \"/imports/plugins/core/router/lib\";\nimport { Shops } from \"/lib/collections\";\n\n/**\n * getShopId\n * @return {String} returns current shopId\n */\nexport function getShopId() {\n  const domain = url.parse(Meteor.absoluteUrl()).hostname;\n\n  const shop = Shops.find({ domains: { $in: [domain] } }, {\n    limit: 1\n  }).fetch()[0];\n\n  return !!shop ? shop._id : null;\n}\n\n\n/**\n * getShopName\n * @return {String} returns current shop name\n */\nexport function getShopName() {\n  const domain = url.parse(Meteor.absoluteUrl()).hostname;\n\n  const shop = Shops.find({ domains: { $in: [domain] } }, {\n    limit: 1\n  }).fetch()[0];\n\n  return !!shop ? shop.name : null;\n}\n\n/**\n * getShopPrefix\n * @param {String} leading - Default \"/\", prefix, the prefix with a leading shash\n * @return {String} returns shop url prefix\n */\nexport function getShopPrefix(leading = \"/\") {\n  return leading + getSlug(getShopName().toLowerCase());\n}\n\n/**\n * getAbsoluteUrl\n * @param {String} path - path to append to absolute Url, path should be prefixed with / if necessary\n * @return {String} returns absolute url (shop prefix + path)\n */\nexport function getAbsoluteUrl(path) {\n  const prefix = getShopPrefix(\"\");\n  return Meteor.absoluteUrl(`${prefix}${path}`);\n}\n\n/**\n * getCurrentTag\n * @return {String} returns current tag\n */\nexport function getCurrentTag() {\n  if (Router.getRouteName() === \"tag\") {\n    return Router.current().params.slug;\n  }\n  return null;\n}\n\n\n/**\n * getSlug - return a slugified string using \"slugify\" from transliteration\n * https://www.npmjs.com/package/transliteration\n * @param  {String} slugString - string to slugify\n * @return {String} slugified string\n */\nexport function getSlug(slugString) {\n  return slugString ? slugify(slugString) : \"\";\n}\n\n/**\n * toCamelCase helper for i18n\n * @summary special toCamelCase for converting a string to camelCase for use with i18n keys\n * @param {String} needscamels String to be camel cased.\n * @return {String} camelCased string\n */\nexport function toCamelCase(needscamels) {\n  let s;\n  s = needscamels.replace(/([^a-zA-Z0-9_\\- ])|^[_0-9]+/g, \"\").trim().toLowerCase();\n  s = s.replace(/([ -]+)([a-zA-Z0-9])/g, function (a, b, c) {\n    return c.toUpperCase();\n  });\n  s = s.replace(/([0-9]+)([a-zA-Z])/g, function (a, b, c) {\n    return b + c.toUpperCase();\n  });\n  return s;\n}\n\n/**\n * translateRegistry\n * @summary adds i18n strings to registry object\n * @param {Object} registry registry object\n * @param {Object} [app] complete package object\n * @return {Object} with updated registry\n */\nexport function translateRegistry(registry, app) {\n  let registryLabel = \"\";\n  let i18nKey = \"\";\n  // first we check the default place for a label\n  if (registry.label) {\n    registryLabel = toCamelCase(registry.label);\n    i18nKey = `admin.${registry.provides}.${registryLabel}`;\n    // and if we don\"t find it, we are trying to look at first\n    // registry entry\n  } else if (app && app.registry && app.registry.length &&\n    app.registry[0].label) {\n    registryLabel = toCamelCase(app.registry[0].label);\n    i18nKey = `admin.${app.registry[0].provides}.${registryLabel}`;\n  }\n  registry.i18nKeyLabel = `${i18nKey}Label`;\n  registry.i18nKeyDescription = `${i18nKey}Description`;\n  registry.i18nKeyPlaceholder = `${i18nKey}Placeholder`;\n  registry.i18nKeyTooltip = `${i18nKey}Tooltip`;\n  registry.i18nKeyTitle = `${i18nKey}Title`;\n  // return registry object with added i18n keys\n  return registry;\n}\n\n/**\n * Simple is object check.\n * @param {Object} item item to check if is an object\n * @returns {boolean} return true if object\n */\nexport function isObject(item) {\n  return (item && typeof item === \"object\" && !Array.isArray(item) && item !== null);\n}\n\n/**\n * Helper for Deep merge two objects.\n * @param {Object} target deep merge into this object\n * @param {Object} source merge this object\n * @returns {Object} return deep merged object\n */\nexport function mergeDeep(target, source) {\n  if (isObject(target) && isObject(source)) {\n    Object.keys(source).forEach(key => {\n      if (isObject(source[key])) {\n        if (!target[key]) Object.assign(target, { [key]: {} });\n        mergeDeep(target[key], source[key]);\n      } else {\n        Object.assign(target, { [key]: source[key] });\n      }\n    });\n  }\n  return target;\n}\n","export { default as Catalog } from \"./catalog\";\nexport { default as ReactionProduct } from \"./products\";\nexport { PropTypes } from \"./prop-types\";\nexport * from \"./helpers\";\nexport * from \"./files\";\n","import { Match } from \"meteor/check\";\n\n/**\n * Match.OptionalOrNull\n * See Meteor Match methods\n * @param {String} pattern - match pattern\n * @return {Boolean} matches - void, null, or pattern\n */\nMatch.OptionalOrNull = function (pattern) {\n  return Match.OneOf(void 0, null, pattern);\n};\n\n/**\n * Match.OrderHookOption\n * See Meteor Match methods\n * @return {Boolean} matches - void, null, or pattern\n */\nMatch.OrderHookOptions = function () {\n  return Match.OneOf(Object);\n};\n","import i18next from \"i18next\";\nimport orderBy from \"lodash/orderBy\";\nimport { Meteor } from \"meteor/meteor\";\nimport { ReactiveDict } from \"meteor/reactive-dict\";\nimport { Router } from \"/imports/plugins/core/router/lib\";\nimport { getCurrentTag, getShopName } from \"/lib/api\";\nimport { Products, Revisions } from \"/lib/collections\";\nimport Catalog from \"./catalog\";\nimport { MetaData } from \"/lib/api/router/metadata\";\n\n// ReactionProduct is only intended to be used on the client, but it's placed\n// in common code because of it is imported by the Products schema\n\n/**\n *  currentProduct\n *  @summary Reactive current product dependency, ensuring reactive products, without session\n *  @todo this is a messy class implementation, normalize it.\n *  @description\n *  products:\n\n */\nconst ReactionProduct = new ReactiveDict(\"currentProduct\");\n\nexport function applyProductRevision(product) {\n  if (product) {\n    if (product.__revisions && product.__revisions.length) {\n      const cleanProduct = Object.assign({}, product);\n      delete cleanProduct.__revisions;\n      let revisedProduct;\n      // check for product revisions and set that as the current product\n      for (const revision of product.__revisions) {\n        if (!revision.parentDocument) {\n          revisedProduct = product.__revisions[0].documentData;\n        }\n      }\n\n      // if there are no revision to product (image and/or tag only) just set the original product as the product\n      if (!revisedProduct) {\n        revisedProduct = cleanProduct;\n      }\n      return Object.assign({},\n        revisedProduct,\n        {\n          __published: cleanProduct,\n          __draft: product.__revisions[0]\n        }\n      );\n    }\n    return product;\n  }\n\n  return null;\n}\n\nReactionProduct.sortProducts = (products, tag) => {\n  let sorted = [];\n\n  sorted = orderBy(products,\n    // Sort by postion for tag\n    (product) => {\n      return product.positions && product.positions[tag] && product.positions[tag].position;\n    },\n    // Then by creation date for tag\n    (product) => {\n      return product.positions && product.positions[tag] && product.positions[tag].createdAt;\n    },\n    // Finally sort by creation date\n    \"createdAt\"\n  );\n\n  return sorted;\n};\n\n/**\n * setCurrentVariant\n * @param {String} variantId - set current variantId\n * @return {undefined}\n */\nReactionProduct.setCurrentVariant = (variantId) => {\n  if (variantId === null) {\n    ReactionProduct.set(\"variantId\", null);\n    ReactionProduct.set(\"variantId\", ReactionProduct.selectedVariantId());\n  }\n  if (!variantId) {\n    return;\n  }\n  const currentId = ReactionProduct.selectedVariantId();\n  if (currentId === variantId) {\n    return;\n  }\n  ReactionProduct.set(\"variantId\", variantId);\n};\n\n/**\n * ReactionProduct.setProduct\n * this will be deprecated in favor of template.instance data.\n *\n * @summary method to set default/parameterized product variant\n * @param {String} currentProductId - set current productId\n * @param {String} currentVariantId - set current variantId\n * @return {Object} product object\n */\nReactionProduct.setProduct = (currentProductId, currentVariantId) => {\n  let productId = currentProductId || Router.getParam(\"handle\");\n  let variantId = currentVariantId || Router.getParam(\"variantId\");\n\n  // Find the current product\n  const product = Products.findOne({\n    $or: [\n      { handle: productId.toLowerCase() }, // Try the handle (slug) lowercased\n      { handle: productId }, // Otherwise try the handle (slug) untouched\n      { _id: productId } // Last attempt, try the product id\n    ]\n  });\n\n  productId = product && product._id;\n\n  if (product) {\n    // set the default variant\n    // as the default.\n    if (!variantId) {\n      const variants = ReactionProduct.getTopVariants(productId);\n      variantId = Array.isArray(variants) && variants.length &&\n        variants[0]._id || null;\n    }\n    // set in our reactive dictionary\n    ReactionProduct.set(\"productId\", productId);\n    ReactionProduct.set(\"variantId\", variantId);\n  }\n\n  // Update the meta data when a product is selected\n  MetaData.init(Router.current());\n\n  return applyProductRevision(product);\n};\n\n/**\n * selectedProductId\n * @summary get the currently active/requested product\n * @return {String} currently selected product id\n */\nReactionProduct.selectedProductId = () => ReactionProduct.get(\"productId\");\n\n/**\n * selectedVariantId\n * @summary get the currently active/requested variant\n * @return {String} currently selected variant id\n */\nReactionProduct.selectedVariantId = () => {\n  let id = ReactionProduct.get(\"variantId\");\n  if (id !== null) {\n    return id;\n  }\n  const variants = ReactionProduct.getVariants();\n\n  if (!(variants.length > 0)) {\n    return [];\n  }\n\n  id = variants[0]._id;\n  // ReactionProduct.set(\"variantId\", id);\n  return id;\n};\n\n/**\n * selectedVariant\n * @summary get the currently active/requested variant object\n * @return {Object} currently selected variant object\n */\nReactionProduct.selectedVariant = function () {\n  const id = ReactionProduct.selectedVariantId();\n  if (typeof id === \"string\") {\n    return applyProductRevision(Products.findOne(id));\n  }\n  return [];\n};\n\n/**\n * selectedProduct\n * @summary get the currently active/requested product object\n * @return {Object|undefined} currently selected product cursor\n */\nReactionProduct.selectedProduct = function () {\n  const id = ReactionProduct.selectedProductId();\n  if (typeof id === \"string\") {\n    return applyProductRevision(Products.findOne(id));\n  }\n  return undefined;\n};\n\n/**\n * checkChildVariants\n * @summary return number of child variants for a parent\n * @param {String} parentVariantId - parentVariantId\n * @return {Number} count of childVariants for this parentVariantId\n */\nReactionProduct.checkChildVariants = function (parentVariantId) {\n  const childVariants = ReactionProduct.getVariants(parentVariantId);\n  return childVariants.length ? childVariants.length : 0;\n};\n\n/**\n * checkInventoryVariants\n * @summary return number of inventory variants for a parent\n * @param {String} parentVariantId - parentVariantId\n * @todo could be combined with checkChildVariants in one method\n * @todo inventoryVariants are deprecated. remove this.\n * @return {Number} count of inventory variants for this parentVariantId\n */\nReactionProduct.checkInventoryVariants = function (parentVariantId) {\n  const inventoryVariants = ReactionProduct.getVariants(parentVariantId, \"inventory\");\n  return inventoryVariants.length ? inventoryVariants.length : 0;\n};\n\n/**\n * getVariantPriceRange\n * @summary get price range of a variant if it has child options.\n * if no child options, return main price value\n * @todo remove string return and replace with object\n * @param {String} [id] - current variant _Id\n * @return {String} formatted price or price range\n */\nReactionProduct.getVariantPriceRange = id => Catalog.\n  getVariantPriceRange(id || ReactionProduct.selectedVariant()._id);\n\n/**\n * getProductPriceRange\n * @summary get price range of a product\n * if no only one price available, return it\n * otherwise return a string range\n * @todo remove string return and replace with object\n * @param {String} [id] - current product _id\n * @return {String} formatted price or price range\n */\nReactionProduct.getProductPriceRange = id => Catalog.\n  getProductPriceRange(id || ReactionProduct.selectedProductId());\n\n/**\n * getVariantQuantity\n * @description middleware method which calls the same named common method.\n * @todo maybe we could remove this after 1.3. But for now I like how it looks.\n * @param {Object} doc - variant object\n * @return {Number} summary of options quantity or top-level variant\n * inventoryQuantity\n */\nReactionProduct.getVariantQuantity = doc => Catalog.getVariantQuantity(doc);\n\n/**\n * @method getVariants\n * @description Get all parent variants\n * @summary could be useful for products and for top level variants\n * @param {String} [id] - product _id\n * @param {String} [type] - type of variant\n * @return {Array} Parent variants or empty array\n */\nReactionProduct.getVariants = (id, type) => {\n  return Catalog.getVariants(id || ReactionProduct.selectedProductId(), type);\n};\n\n/**\n * @method getTopVariants\n * @description Get only product top level variants\n * @param {String} [id] - product _id\n * @return {Array} Product top level variants or empty array\n */\nReactionProduct.getTopVariants = id => {\n  return Catalog.getTopVariants(id || ReactionProduct.selectedProductId());\n};\n\n/**\n * getTag\n * @summary This needed for naming `positions` object. Method could return `tag`\n * route name or shop name as default name.\n * @return {String} tag name or shop name\n */\nReactionProduct.getTag = () => {\n  return getCurrentTag() || getShopName().toLowerCase();\n};\n\n/**\n * getProductsByTag\n * @summary method to return tag specific product\n * @param {String} tag - tag string\n * @return {Object} - return products collection cursor filtered by tag\n */\nReactionProduct.getProductsByTag = function (tag) {\n  let hashtags;\n  let newRelatedTags;\n  let relatedTag;\n  let relatedTags;\n  const selector = {};\n\n  if (tag) {\n    hashtags = [];\n    relatedTags = [tag];\n    while (relatedTags.length) {\n      newRelatedTags = [];\n      for (relatedTag of relatedTags) {\n        if (hashtags.indexOf(relatedTag._id) === -1) {\n          hashtags.push(relatedTag._id);\n        }\n      }\n      relatedTags = newRelatedTags;\n    }\n    selector.hashtags = {\n      $in: hashtags\n    };\n  }\n  const cursor = Products.find(selector);\n  return cursor;\n};\n\n/**\n * publishProduct\n * @summary product publishing and alert\n * @param {Object} productOrArray - product Object\n * @returns {undefined} - returns nothing, and alerts, happen here\n */\nReactionProduct.publishProduct = function (productOrArray) {\n  const products = !_.isArray(productOrArray) ? [productOrArray] : productOrArray;\n  /* eslint no-loop-func: 1 */\n  //\n  // TODO review process for publishing arrays of product\n  //\n  for (const product of products) {\n    Meteor.call(\"products/publishProduct\", product._id, (error, result) => {  // eslint-disable-line no-loop-func\n      if (error) {\n        Alerts.add(error, \"danger\", {\n          placement: \"productGridItem\",\n          id: product._id\n        });\n        throw new Meteor.Error(\"error publishing product\", error);\n      }\n      const alertSettings = {\n        placement: \"productGridItem\",\n        id: product._id,\n        autoHide: true,\n        dismissable: false\n      };\n      if (result) {\n        Alerts.add(i18next.t(\"productDetail.publishProductVisible\", { product: product.title }), \"success\", alertSettings);\n      } else {\n        Alerts.add(i18next.t(\"productDetail.publishProductHidden\", { product: product.title }), \"warning\", alertSettings);\n      }\n    });\n  }\n};\n\n/**\n * publishProduct\n * @summary product publishing and alert\n * @param {Object} productOrArray - product Object\n * @returns {undefined} - returns nothing, and alerts, happen here\n */\nReactionProduct.toggleVisibility = function (productOrArray) {\n  const products = !_.isArray(productOrArray) ? [productOrArray] : productOrArray;\n  for (const product of products) {\n    Meteor.call(\"products/toggleVisibility\", product._id, (error, result) => { // eslint-disable-line no-loop-func\n      if (error) {\n        Alerts.add(error, \"danger\", {\n          placement: \"productGridItem\",\n          id: product._id\n        });\n        throw new Meteor.Error(\"error publishing product\", error);\n      }\n      const alertSettings = {\n        placement: \"productGridItem\",\n        id: product._id,\n        autoHide: true,\n        dismissable: false\n      };\n      if (result) {\n        Alerts.add(i18next.t(\"productDetail.publishProductVisible\", { product: product.title }), \"success\", alertSettings);\n      } else {\n        Alerts.add(i18next.t(\"productDetail.publishProductHidden\", { product: product.title }), \"warning\", alertSettings);\n      }\n    });\n  }\n};\n\n\n/**\n * cloneProduct\n * @summary product cloning and alert\n * @param {Object|Array} productOrArray - if this method calls from productGrid\n * it receives and array with product _id or _ids, but if it calls from PDP, when\n * it receive a `Object` with _id. It needed to determine the source of call.\n * @returns {undefined} - returns nothing, and alerts, happen here\n */\nReactionProduct.cloneProduct = function (productOrArray) {\n  const products = !Array.isArray(productOrArray) ? [productOrArray] : productOrArray;\n\n  return Meteor.call(\"products/cloneProduct\", products, function (error, result) {\n    if (error) {\n      Alerts.add(error, \"danger\", { placement: \"productGridItem\" });\n      throw new Meteor.Error(\"error cloning product\", error);\n    }\n    if (result) {\n      if (products.length === 1) {\n        Alerts.add(i18next.t(\"productDetail.clonedAlert\", { product: products[0].title }), \"success\", {\n          placement: \"productGridItem\",\n          id: products[0]._id,\n          autoHide: true,\n          dismissable: false\n        });\n      } else {\n        Alerts.add(i18next.t(\"productDetail.clonedAlert_plural\", { product: i18next.t(\"productDetail.theSelectedProducts\"), count: 0 }),\n          \"success\", {\n            placement: \"productGridItem\",\n            id: products[0]._id,\n            autoHide: true,\n            dismissable: false\n          }\n        );\n      }\n    }\n    // this statement allow us to redirect to a new clone PDP if clone action\n    // was fired within PDP, not within productGrid.\n    if (!Array.isArray(productOrArray)) {\n      Router.go(\"product\", {\n        handle: result[0]\n      });\n    }\n  });\n};\n\n/**\n * archiveProduct\n * @summary confirm to archive product\n * @param {Object} productOrArray - product Object\n * @returns {undefined} - returns nothing, and alerts, happen here\n */\nReactionProduct.archiveProduct = function (productOrArray) {\n  const products = !_.isArray(productOrArray) ? [productOrArray] : productOrArray;\n  const productIds = _.map(products, product => typeof product === \"string\" ? product : product._id);\n  let confirmTitle;\n  // we have to use so difficult logic with `length` check because of some\n  // languages, which have different phrase forms for each of cases.\n  // we are using i18next `plural` functionality here.\n  // @see: http://i18next.com/translate/pluralSimple\n  if (products.length === 1) {\n    confirmTitle = i18next.t(\"productDetailEdit.archiveThisProduct\");\n  } else {\n    confirmTitle = i18next.t(\"productDetailEdit.archiveSelectedProducts\");\n  }\n\n  Alerts.alert({\n    title: confirmTitle,\n    type: \"warning\",\n    showCancelButton: true,\n    confirmButtonText: \"Archive\"\n  }, (isConfirm) => {\n    if (isConfirm) {\n      Meteor.call(\"products/archiveProduct\", productIds, function (error, result) {\n        let title;\n        if (error) {\n          title = products.length === 1 ?\n            products[0].title || i18next.t(\"productDetail.archiveErrorTheProduct\") :\n            i18next.t(\"productDetail.theSelectedProducts\");\n          Alerts.toast(i18next.t(\"productDetail.productArchiveError\", { product: title }), \"error\");\n          throw new Meteor.Error(\"Error archiving \" + title, error);\n        }\n        if (result) {\n          Router.go(\"/\");\n          if (products.length === 1) {\n            title = products[0].title || i18next.t(\"productDetail.theProduct\");\n            Alerts.toast(i18next.t(\"productDetail.archivedAlert\", { product: title }), \"info\");\n          } else {\n            title = i18next.t(\"productDetail.theSelectedProducts\");\n            Alerts.toast(i18next.t(\"productDetail.archivedAlert_plural\", { product: title, count: 0 }), \"info\");\n          }\n        }\n      });\n    }\n  });\n};\n\nReactionProduct.isAncestorDeleted = function (product, includeSelf) {\n  const productIds = [\n    ...product.ancestors // Avoid mutations\n  ];\n\n  if (includeSelf) {\n    productIds.push(product._id);\n  }\n\n  // Verify there are no deleted ancestors,\n  // Variants cannot be restored if their parent product / variant is deleted\n  const archivedCount = Revisions.find({\n    \"documentId\": { $in: productIds },\n    \"documentData.isDeleted\": true,\n    \"workflow.status\": {\n      $nin: [\n        \"revision/published\"\n      ]\n    }\n  }).count();\n\n  if (archivedCount > 0) {\n    return true;\n  }\n\n  return false;\n};\n\nexport default ReactionProduct;\n","import _ from \"lodash\";\nimport * as Schemas from \"/lib/collections/schemas\";\n\nconst TagSchema = Schemas.Tag.newContext();\n\nexport const PropTypes = {};\n\n/**\n * React Component propType validator for a single Tag\n * @param  {Object} props An object containing all props passed into the component\n * @param  {String} propName Name of prop to validate\n * @return {Error|undefined} returns an error if validation us unseccessful\n */\nPropTypes.Tag = (props, propName) => {\n  check(props, Object);\n  check(propName, String);\n\n  if (_.isEmpty(props[propName]) === false) {\n    if (TagSchema.validate(props[propName]) === false) {\n      return new Error(\"Tag must be of type: Schemas.Tag\");\n    }\n  }\n};\n\n/**\n * React Component propType validator for an array of Tags\n * @param  {Object} props An object containing all props passed into the component\n * @param  {String} propName Name of prop to validate\n * @return {Error|undefined} returns an error if validation us unseccessful\n */\nPropTypes.arrayOfTags = (props, propName) => {\n  check(props, Object);\n  check(propName, String);\n\n  if (_.isEmpty(props[propName]) === false && _.isArray(props[propName])) {\n    const valid = _.every(props[propName], (tag) => {\n      return TagSchema.validate(tag);\n    });\n\n    if (valid === false) {\n      return new Error(\"Objects in array must be of type: Schemas.Tag\");\n    }\n  }\n};\n","import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\nimport { shopIdAutoValue } from \"./helpers\";\nimport { Address } from \"./address\";\nimport { Metafield } from \"./metafield\";\n\n/**\n * Accounts Schemas\n */\n\nconst TaxSettings = new SimpleSchema({\n  exemptionNo: {\n    type: String,\n    optional: true\n  },\n  customerUsageType: {\n    type: String,\n    optional: true\n  }\n});\n\nexport const Profile = new SimpleSchema({\n  addressBook: {\n    type: [Address],\n    optional: true\n  },\n  name: {\n    type: String,\n    optional: true\n  },\n  picture: {\n    type: String,\n    optional: true\n  }\n});\n\nexport const Email = new SimpleSchema({\n  provides: {\n    type: String,\n    defaultValue: \"default\",\n    optional: true\n  },\n  address: {\n    type: String,\n    regEx: SimpleSchema.RegEx.Email\n  },\n  verified: {\n    type: Boolean,\n    defaultValue: false,\n    optional: true\n  }\n});\n\n/**\n * Reaction Schemas Accounts\n */\n\nexport const Accounts = new SimpleSchema({\n  userId: {\n    type: String,\n    regEx: SimpleSchema.RegEx.Id,\n    index: 1,\n    label: \"Accounts ShopId\"\n  },\n  sessions: {\n    type: [String],\n    optional: true,\n    index: 1\n  },\n  shopId: {\n    type: String,\n    autoValue: shopIdAutoValue,\n    regEx: SimpleSchema.RegEx.Id,\n    index: 1\n  },\n  emails: {\n    type: [Email],\n    optional: true\n  },\n  acceptsMarketing: {\n    type: Boolean,\n    defaultValue: false,\n    optional: true\n  },\n  state: {\n    type: String,\n    defaultValue: \"new\",\n    optional: true\n  },\n  taxSettings: {\n    type: TaxSettings,\n    optional: true\n  },\n  note: {\n    type: String,\n    optional: true\n  },\n  profile: {\n    type: Profile,\n    optional: true\n  },\n  metafields: {\n    type: [Metafield],\n    optional: true\n  },\n  createdAt: {\n    type: Date,\n    autoValue() {\n      if (this.isInsert) {\n        return new Date;\n      } else if (this.isUpsert) {\n        return {\n          $setOnInsert: new Date\n        };\n      }\n    }\n  },\n  updatedAt: {\n    type: Date,\n    autoValue() {\n      if (this.isUpdate) {\n        return {\n          $set: new Date\n        };\n      } else if (this.isUpsert) {\n        return {\n          $setOnInsert: new Date\n        };\n      }\n    },\n    optional: true\n  }\n});\n","import { Random } from \"meteor/random\";\nimport { SimpleSchema } from \"meteor/aldeed:simple-schema\";\nimport { Metafield } from \"./metafield\";\n\n/**\n* Reaction Schemas Address\n*/\n\nexport const Address = new SimpleSchema({\n  _id: {\n    type: String,\n    defaultValue: Random.id(),\n    optional: true\n  },\n  fullName: {\n    type: String,\n    label: \"Full name\"\n  },\n  address1: {\n    label: \"Address 1\",\n    type: String\n  },\n  address2: {\n    label: \"Address 2\",\n    type: String,\n    optional: true\n  },\n  city: {\n    type: String,\n    label: \"City\"\n  },\n  company: {\n    type: String,\n    label: \"Company\",\n    optional: true\n  },\n  phone: {\n    type: String,\n    label: \"Phone\"\n  },\n  region: {\n    label: \"State/Province/Region\",\n    type: String\n  },\n  postal: {\n    label: \"ZIP/Postal Code\",\n    type: String\n  },\n  country: {\n    type: String,\n    label: \"Country\"\n  },\n  isCommercial: {\n    label: \"This is a commercial address.\",\n    type: Boolean\n  },\n  isBillingDefault: {\n    label: \"Make this your default billing address?\",\n    type: Boolean\n  },\n  isShippingDefault: {\n    label: \"Make this your default shipping address?\",\n    type: Boolean\n  },\n  metafields: {\n    type: [Metafield],\n    optional: true\n  }\n});\n","import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\nimport { Roles } from \"meteor/alanning:roles\";\nimport { getShopId } from \"/lib/api\";\nimport { PackageConfig } from \"./registry\";\nimport { shopIdAutoValue } from \"./helpers\";\n\nexport const AnalyticsEvents = new SimpleSchema({\n  \"eventType\": {\n    type: String\n  },\n  \"category\": {\n    type: String,\n    optional: true\n  },\n  \"action\": {\n    type: String,\n    optional: true\n  },\n  \"label\": {\n    type: String,\n    optional: true\n  },\n  \"value\": {\n    type: String,\n    optional: true\n  },\n  \"user\": {\n    type: Object,\n    optional: true\n  },\n  \"user.id\": {\n    type: String,\n    regEx: SimpleSchema.RegEx.Id,\n    optional: true,\n    autoValue: function () {\n      return Meteor.userId();\n    }\n  },\n  \"user.isAnonymous\": {\n    type: Boolean,\n    optional: true,\n    autoValue: function () {\n      return Roles.userIsInRole(Meteor.user(), \"anonymous\", getShopId());\n    }\n  },\n  \"shopId\": {\n    type: String,\n    regEx: SimpleSchema.RegEx.Id,\n    autoValue: shopIdAutoValue,\n    label: \"AnalyticsEvents shopId\"\n  },\n  \"createdAt\": {\n    type: Date,\n    autoValue: function () {\n      return new Date;\n    }\n  },\n  // Any additional data\n  \"data\": {\n    type: Object,\n    blackbox: true,\n    optional: true\n  }\n});\n\n/*\n *   Analytics\n *   api_key: \"UA-XXXXX-X\" (this is your tracking ID)\n */\n\nexport const ReactionAnalyticsPackageConfig = new SimpleSchema([\n  PackageConfig, {\n    \"settings.public.segmentio.enabled\": {\n      type: Boolean,\n      label: \"Enabled\"\n    },\n    \"settings.public.segmentio.api_key\": {\n      type: String,\n      label: \"Segment Write Key\",\n      optional: true\n    },\n    \"settings.public.googleAnalytics.enabled\": {\n      type: Boolean,\n      label: \"Enabled\"\n    },\n    \"settings.public.googleAnalytics.api_key\": {\n      type: String,\n      label: \"Google Analytics Tracking ID\",\n      optional: true\n    },\n    \"settings.public.mixpanel.enabled\": {\n      type: Boolean,\n      label: \"Enabled\"\n    },\n    \"settings.public.mixpanel.api_key\": {\n      type: String,\n      label: \"Mixpanel Token\",\n      optional: true\n    }\n  }\n]);\n","import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\n\nexport const Assets = new SimpleSchema({\n  type: {\n    type: String\n  },\n  name: {\n    type: String,\n    optional: true\n  },\n  /**\n   * namespace for i18n. This allows to load translation for custom plugins\n   */\n  ns: {\n    type: String,\n    optional: true\n  },\n  path: {\n    type: String,\n    optional: true\n  },\n  content: {\n    type: String,\n    optional: true\n  }\n});\n","import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\nimport { shopIdAutoValue } from \"./helpers\";\nimport { Payment } from \"./payments\";\nimport { ProductVariant } from \"./products\";\nimport { Shipment, ShippingParcel } from \"./shipping\";\nimport { Workflow } from \"./workflow\";\n\n/**\n * CartItem Schema\n */\n\nexport const CartItem = new SimpleSchema({\n  _id: {\n    type: String\n  },\n  productId: {\n    type: String,\n    index: 1\n  },\n  shopId: {\n    type: String,\n    autoValue: shopIdAutoValue,\n    index: 1,\n    label: \"Cart Item shopId\",\n    optional: true\n  },\n  quantity: {\n    label: \"Quantity\",\n    type: Number,\n    min: 0\n  },\n  variants: {\n    type: ProductVariant\n  },\n  title: {\n    type: String,\n    label: \"CartItem Title\"\n  },\n  type: {\n    label: \"Product Type\",\n    type: String,\n    optional: true\n  },\n  parcel: { // Currently the parcel is in the simple product schema, so we need to include it here as well. Maybe it should go in productvariant\n    type: ShippingParcel,\n    optional: true\n  },\n  cartItemId: { // Seems strange here but has to be here since we share schemas between cart and order\n    type: String,\n    optional: true\n  }\n});\n\n/**\n * CartItem Schema\n * used in check by inventory/addReserve method\n */\n\nexport const CartItems = new SimpleSchema({\n  items: {\n    type: [CartItem],\n    optional: true\n  }\n});\n\n/**\n * Cart Schema\n */\n\nexport const Cart = new SimpleSchema({\n  _id: { // required for check of users' carts\n    type: String,\n    optional: true\n  },\n  shopId: {\n    type: String,\n    autoValue: shopIdAutoValue,\n    index: 1,\n    label: \"Cart ShopId\"\n  },\n  userId: {\n    type: String,\n    unique: true,\n    autoValue: function () {\n      if (this.isInsert || this.isUpdate) {\n        if (!this.isFromTrustedCode) {\n          return this.userId;\n        }\n      } else {\n        this.unset();\n      }\n    }\n  },\n  sessionId: {\n    type: String,\n    index: 1\n  },\n  email: {\n    type: String,\n    optional: true,\n    index: 1,\n    regEx: SimpleSchema.RegEx.Email\n  },\n  items: {\n    type: [CartItem],\n    optional: true\n  },\n  shipping: {\n    type: [Shipment],\n    optional: true,\n    blackbox: true\n  },\n  billing: {\n    type: [Payment],\n    optional: true,\n    blackbox: true\n  },\n  tax: {\n    type: Number,\n    decimal: true,\n    optional: true\n  },\n  taxes: {\n    type: [Object],\n    optional: true,\n    blackbox: true\n  },\n  discount: {\n    type: Number,\n    decimal: true,\n    optional: true\n  },\n  workflow: {\n    type: Workflow,\n    optional: true\n  },\n  createdAt: {\n    type: Date,\n    autoValue: function () {\n      if (this.isInsert) {\n        return new Date;\n      } else if (this.isUpsert) {\n        return {\n          $setOnInsert: new Date\n        };\n      }\n    },\n    denyUpdate: true\n  },\n  updatedAt: {\n    type: Date,\n    autoValue: function () {\n      if (this.isUpdate) {\n        return {\n          $set: new Date\n        };\n      } else if (this.isUpsert) {\n        return {\n          $setOnInsert: new Date\n        };\n      }\n    },\n    optional: true\n  }\n});\n","import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\n\nexport const Emails = new SimpleSchema({\n  to: {\n    type: String\n  },\n\n  from: {\n    type: String\n  },\n\n  subject: {\n    type: String\n  },\n\n  text: {\n    type: String,\n    optional: true\n  },\n\n  html: {\n    type: String,\n    optional: true\n  },\n\n  userId: {\n    type: String,\n    optional: true\n  },\n\n  jobId: {\n    type: String,\n    index: true\n  },\n\n  type: {\n    type: String,\n    optional: true\n  },\n\n  status: {\n    type: String\n  },\n\n  createdAt: {\n    type: Date,\n    autoValue() {\n      if (this.isInsert) {\n        return new Date();\n      } else if (this.isUpsert) {\n        return {\n          $setOnInsert: new Date()\n        };\n      }\n      return this.unset();\n    }\n  },\n\n  updatedAt: {\n    type: Date,\n    autoValue() {\n      if (this.isUpdate) {\n        return new Date();\n      }\n      return this.unset();\n    },\n    denyInsert: true,\n    optional: true\n  }\n});\n","import { Meteor } from \"meteor/meteor\";\nimport { Random } from \"meteor/random\";\nimport { getShopId } from \"/lib/api\";\n\n/**\n * shopIdAutoValue\n * @summary used for schema injection autoValue\n * @example autoValue: shopIdAutoValue\n * @return {String} returns current shopId\n */\nexport function shopIdAutoValue() {\n  // we should always have a shopId\n  if (this.isSet && Meteor.isServer) {\n    return this.value;\n  } else if (Meteor.isServer && !this.isUpdate || Meteor.isClient && this.isInsert) {\n    return getShopId();\n  }\n  return this.unset();\n}\n\n/**\n * schemaIdAutoValue\n * @summary used for schema injection autoValue\n * @example autoValue: schemaIdAutoValue\n * @return {String} returns randomId\n */\nexport function schemaIdAutoValue() {\n  if (this.isSet && Meteor.isServer) {\n    return this.value;\n  } else if (Meteor.isServer && this.operator !== \"$pull\" ||\n    Meteor.isClient && this.isInsert) {\n    return Random.id();\n  }\n  return this.unset();\n}\n","export * from \"./accounts\";\nexport * from \"./address\";\nexport * from \"./analytics\";\nexport * from \"./assets\";\nexport * from \"./cart\";\nexport * from \"./emails\";\nexport * from \"./inventory\";\nexport * from \"./layouts\";\nexport * from \"./logs\";\nexport * from \"./metafield\";\nexport * from \"./notifications\";\nexport * from \"./orders\";\nexport * from \"./payments\";\nexport * from \"./products\";\nexport * from \"./registry\";\nexport * from \"./revisions\";\nexport * from \"./shipping\";\nexport * from \"./shops\";\nexport * from \"./sms\";\nexport * from \"./social\";\nexport * from \"./tags\";\nexport * from \"./templates\";\nexport * from \"./themes\";\nexport * from \"./translations\";\nexport * from \"./workflow\";\n","import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\nimport { shopIdAutoValue } from \"./helpers\";\nimport { Document, Notes } from \"./orders\";\nimport { Metafield } from \"./metafield\";\nimport { Workflow } from \"./workflow\";\n\nexport const Inventory = new SimpleSchema({\n  _id: {\n    type: String,\n    optional: true // inserted by mongo, we need it for schema validation\n  },\n  shopId: {\n    type: String,\n    autoValue: shopIdAutoValue,\n    index: 1,\n    label: \"Inventory ShopId\"\n  },\n  productId: {\n    type: String,\n    index: true\n  },\n  variantId: {\n    type: String,\n    index: true\n  },\n  orderItemId: {\n    type: String,\n    index: true,\n    optional: true\n  },\n  workflow: {\n    type: Workflow,\n    optional: true\n  },\n  sku: {\n    label: \"sku\",\n    type: String,\n    optional: true\n  },\n  metafields: {\n    type: [Metafield],\n    optional: true\n  },\n  documents: {\n    type: [Document],\n    optional: true\n  },\n  notes: {\n    type: [Notes],\n    optional: true\n  },\n  createdAt: {\n    type: Date,\n    optional: true, // schema validation failing in method with this required. should be considered temporary.\n    autoValue: function () {\n      if (this.isInsert || this.isUpdate && !this.isSet) {\n        return new Date;\n      }\n      this.unset();\n    }\n  },\n  updatedAt: {\n    type: Date,\n    autoValue: function () {\n      return new Date;\n    },\n    optional: true\n  }\n});\n","import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\n\n/**\n * @summary Layout Schema\n * Layout are used by the Shops and Packages schemas.\n * They are used to defin both the template layout on the site,\n * as well as the workflow components that will be used in each\n * layout block.\n *\n *  \"layout\": \"coreLayout\",\n *  \"workflow\": \"coreWorkflow\",\n *  \"theme\": \"default\",\n *  \"enabled\": true,\n *  \"structure\": {\n *   \"template\": \"products\",\n *   \"layoutHeader\": \"layoutHeader\",\n *   \"layoutFooter\": \"layoutFooter\",\n *   \"notFound\": \"notFound\",\n *   \"dashboardControls\": \"dashboardControls\",\n *   \"adminControlsFooter\": \"adminControlsFooter\"\n */\n\nexport const LayoutStructure = new SimpleSchema({\n  template: {\n    type: String,\n    optional: true,\n    index: true\n  },\n  layoutHeader: {\n    type: String,\n    optional: true,\n    index: true\n  },\n  layoutFooter: {\n    type: String,\n    optional: true,\n    index: true\n  },\n  notFound: {\n    type: String,\n    optional: true,\n    index: true\n  },\n  dashboardHeader: {\n    type: String,\n    optional: true,\n    index: true\n  },\n  dashboardControls: {\n    type: String,\n    optional: true,\n    index: true\n  },\n  dashboardHeaderControls: {\n    type: String,\n    optional: true,\n    index: true\n  },\n  adminControlsFooter: {\n    type: String,\n    optional: true,\n    index: true\n  }\n});\n\nexport const Layout = new SimpleSchema({\n  layout: {\n    type: String,\n    optional: true,\n    index: true\n  },\n  workflow: {\n    type: String,\n    optional: true\n  },\n  template: {\n    type: String,\n    optional: true\n  },\n  collection: {\n    type: String,\n    optional: true\n  },\n  theme: {\n    type: String,\n    optional: true\n  },\n  enabled: {\n    type: Boolean,\n    defaultValue: true\n  },\n  status: {\n    type: String,\n    optional: true\n  },\n  label: {\n    type: String,\n    optional: true\n  },\n  container: {\n    type: String,\n    optional: true\n  },\n  audience: {\n    type: [String],\n    optional: true\n  },\n  structure: {\n    type: LayoutStructure,\n    optional: true\n  },\n  priority: {\n    type: Number,\n    optional: true,\n    defaultValue: 999\n  },\n  position: {\n    type: Number,\n    optional: true,\n    defaultValue: 1\n  }\n});\n","import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\n\nexport const Logs = new SimpleSchema({\n\n  logType: {\n    type: String\n  },\n  shopId: {\n    type: String\n  },\n  level: {\n    type: String,\n    defaultValue: \"info\",\n    allowedValues: [\"trace\", \"debug\", \"info\", \"warn\", \"error\", \"fatal\"]\n  },\n  source: {\n    type: String,\n    defaultValue: \"server\",\n    allowedValues: [\"client\", \"server\"]\n  },\n  handled: {\n    type: Boolean,\n    defaultValue: false\n  },\n  data: {\n    type: Object,\n    blackbox: true\n  },\n  date: {\n    type: Date,\n    autoValue() { return new Date(); }\n  }\n});\n","import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\n\n/**\n * Metafield Schema\n */\n\nexport const Metafield = new SimpleSchema({\n  key: {\n    type: String,\n    max: 30,\n    optional: true\n  },\n  namespace: {\n    type: String,\n    max: 20,\n    optional: true\n  },\n  scope: {\n    type: String,\n    optional: true\n  },\n  value: {\n    type: String,\n    optional: true\n  },\n  valueType: {\n    type: String,\n    optional: true\n  },\n  description: {\n    type: String,\n    optional: true\n  }\n});\n","import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\n\n\nexport const Notification = new SimpleSchema({\n  message: {\n    type: String,\n    optional: false\n  },\n  /**\n   * Type              Message(This would be the corresponding message)\n   * ----------------| -----------------------------------------------\n   * orderCancelled  | \"Your order was canceled.\"\n   * forAdmin:       | \"You have a new order.\"\n   * newOrder:       | \"Your order is being processed.\"\n   * orderDelivered: | \"Your order has been delivered.\"\n   * orderAccepted:  | \"Your order has been accepted.\"\n   * orderShipped:   | \"Your order has been shipped.\"\n   */\n  type: {\n    type: String,\n    optional: false\n  },\n  url: {\n    type: String,\n    optional: false\n  },\n  to: {\n    type: String,\n    optional: false\n  },\n  hasDetails: {\n    type: Boolean,\n    optional: false\n  },\n  details: {\n    type: String,\n    optional: true\n  },\n  status: {\n    type: String,\n    optional: false,\n    defaultValue: \"unread\"\n  },\n  timeSent: {\n    type: Date,\n    optional: false,\n    autoValue: function () {\n      if (this.isInsert) {\n        return new Date();\n      } else if (this.isUpsert) {\n        return { $setOnInsert: new Date() };\n      }\n      this.unset();\n    }\n  }\n});\n","import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\nimport { Workflow } from \"./workflow\";\n\n/**\n * Order Document Schema\n */\n\nexport const Document = new SimpleSchema({\n  docId: {\n    type: String\n  },\n  docType: {\n    type: String,\n    optional: true\n  }\n});\n\n/**\n * Order History Schema\n */\n\nexport const History = new SimpleSchema({\n  event: {\n    type: String\n  },\n  value: {\n    type: String\n  },\n  userId: {\n    type: String\n  },\n  updatedAt: {\n    type: Date\n  }\n});\n\n/**\n * Order Notes Schema\n */\n\nexport const Notes = new SimpleSchema({\n  content: {\n    type: String\n  },\n  userId: {\n    type: String\n  },\n  updatedAt: {\n    type: Date\n  }\n});\n\n/**\n * OrderItems Schema\n * merges with Cart and Order to create Orders collection\n */\nexport const OrderItem = new SimpleSchema({\n  additionalField: {\n    type: String,\n    optional: true\n  },\n  workflow: {\n    type: Workflow,\n    optional: true\n  },\n  history: {\n    type: [History],\n    optional: true\n  },\n  documents: {\n    type: [Document],\n    optional: true\n  }\n});\n\n\n/**\n * OrderTransaction Schema\n * order transactions tie shipping, billing, and inventory transactions\n */\nexport const OrderTransaction = new SimpleSchema({\n  itemId: {\n    type: String,\n    optional: true\n  },\n  paymentId: {\n    type: String,\n    optional: true\n  },\n  shipmentId: {\n    type: String,\n    optional: true\n  },\n  inventoryId: {\n    type: String,\n    optional: true\n  },\n  createdAt: {\n    type: Date,\n    autoValue: function () {\n      if (this.isUpdate && !this.isSet) {\n        return new Date;\n      }\n      this.unset();\n    },\n    denyUpdate: true\n  }\n});\n\n/**\n * Order Schema\n */\nexport const Order = new SimpleSchema({\n  userId: {\n    type: String,\n    unique: false\n  },\n  cartId: {\n    type: String,\n    optional: true\n  },\n  history: {\n    type: [History],\n    optional: true\n  },\n  documents: {\n    type: [Document],\n    optional: true\n  },\n  notes: {\n    type: [Notes],\n    optional: true\n  },\n  items: {\n    type: [OrderItem],\n    optional: true\n  },\n  transactions: {\n    type: [OrderTransaction],\n    optional: true\n  }\n});\n","import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\nimport { schemaIdAutoValue } from \"./helpers\";\nimport { Address } from \"./address\";\nimport { Workflow } from \"./workflow\";\n\n/**\n * PaymentMethod Schema\n */\n\nexport const PaymentMethod = new SimpleSchema({\n  processor: {\n    type: String\n  },\n  paymentPackageId: {\n    type: String\n  },\n  paymentSettingsKey: {\n    type: String\n  },\n  storedCard: {\n    type: String,\n    optional: true\n  },\n  method: {\n    type: String,\n    allowedValues: [\"credit\", \"debit\", \"shipping-credit\"],\n    optional: true\n  },\n  transactionId: {\n    type: String\n  },\n  metadata: {\n    type: Object,\n    optional: true,\n    blackbox: true\n  },\n  workflow: {\n    type: Workflow,\n    optional: true\n  },\n  status: {\n    type: String\n  },\n  mode: {\n    type: String,\n    allowedValues: [\"authorize\", \"capture\", \"refund\", \"cancel\", \"void\"]\n  },\n  createdAt: {\n    type: Date,\n    autoValue: function () {\n      if (this.isInsert) {\n        return new Date;\n      } else if (this.isUpsert) {\n        return {\n          $setOnInsert: new Date\n        };\n      }\n    },\n    denyUpdate: true\n  },\n  updatedAt: {\n    type: Date,\n    optional: true\n  },\n  authorization: {\n    type: String,\n    optional: true\n  },\n  amount: {\n    type: Number,\n    decimal: true,\n    optional: true\n  },\n  currency: {\n    type: String,\n    optional: true\n  },\n  transactions: {\n    type: [Object],\n    optional: true,\n    blackbox: true\n  }\n});\n\n/**\n * Invoice Schema\n */\n\nexport const Invoice = new SimpleSchema({\n  transaction: {\n    type: String,\n    optional: true\n  },\n  shipping: {\n    type: Number,\n    decimal: true,\n    optional: true\n  },\n  taxes: {\n    type: Number,\n    decimal: true,\n    optional: true\n  },\n  subtotal: {\n    type: Number,\n    decimal: true\n  },\n  discounts: {\n    type: Number,\n    decimal: true,\n    optional: true\n  },\n  total: {\n    type: Number,\n    decimal: true\n  }\n});\n\n/**\n * Currency Schema\n */\n\nexport const Currency = new SimpleSchema({\n  userCurrency: {\n    type: String,\n    optional: true\n  },\n  exchangeRate: {\n    type: Number,\n    decimal: true,\n    optional: true\n  }\n});\n\n/**\n * Payment Schema\n */\n\nexport const Payment = new SimpleSchema({\n  _id: {\n    type: String,\n    label: \"Payment Id\",\n    autoValue: schemaIdAutoValue\n  },\n  address: {\n    type: Address,\n    optional: true\n  },\n  paymentMethod: {\n    type: PaymentMethod,\n    optional: true\n  },\n  invoice: {\n    type: Invoice,\n    optional: true\n  },\n  currency: {\n    type: Currency,\n    optional: true,\n    defaultValue: \"USD\"\n  }\n});\n\nexport const Refund = new SimpleSchema({\n  type: {\n    type: String\n  },\n  amount: {\n    type: Number,\n    decimal: true\n  },\n  created: {\n    type: Number\n  },\n  currency: {\n    type: String\n  },\n  raw: {\n    type: Object,\n    optional: true,\n    blackbox: true\n  }\n});\n","import { Meteor } from \"meteor/meteor\";\nimport { Random } from \"meteor/random\";\nimport { SimpleSchema } from \"meteor/aldeed:simple-schema\";\nimport { ReactionProduct, getSlug } from \"/lib/api\";\nimport { shopIdAutoValue } from \"./helpers\";\nimport { Metafield } from \"./metafield\";\nimport { ShippingParcel } from \"./shipping\";\nimport { Workflow } from \"./workflow\";\n\n\n/**\n * VariantMedia Schema\n */\nexport const VariantMedia = new SimpleSchema({\n  mediaId: {\n    type: String,\n    optional: true\n  },\n  priority: {\n    type: Number,\n    optional: true\n  },\n  metafields: {\n    type: [Metafield],\n    optional: true\n  },\n  updatedAt: {\n    type: Date,\n    optional: true\n  },\n  createdAt: {\n    type: Date,\n    autoValue: function () {\n      if (this.isInsert) {\n        return new Date;\n      } else if (this.isUpsert) {\n        return {\n          $setOnInsert: new Date\n        };\n      }\n    },\n    denyUpdate: true\n  }\n});\n\n/**\n * ProductPosition Schema\n */\nexport const ProductPosition = new SimpleSchema({\n  tag: {\n    type: String,\n    optional: true\n  },\n  position: {\n    type: Number,\n    optional: true\n  },\n  pinned: {\n    type: Boolean,\n    optional: true\n  },\n  weight: {\n    type: Number,\n    optional: true,\n    defaultValue: 0,\n    min: 0,\n    max: 3\n  },\n  updatedAt: {\n    type: Date\n  }\n});\n\n/**\n * ProductVariant Schema\n */\nexport const ProductVariant = new SimpleSchema({\n  _id: {\n    type: String,\n    label: \"Variant ID\"\n  },\n  ancestors: {\n    type: [String],\n    defaultValue: []\n  },\n  // since implementing of flattened model this property is used for keeping\n  // array index. This is needed for moving variants through list (drag'n'drop)\n  index: {\n    label: \"Variant position number in list\",\n    type: Number,\n    optional: true\n  },\n  isVisible: {\n    type: Boolean,\n    index: 1,\n    defaultValue: false\n  },\n  isDeleted: {\n    type: Boolean,\n    index: 1,\n    defaultValue: false\n  },\n  barcode: {\n    label: \"Barcode\",\n    type: String,\n    optional: true,\n    custom: function () {\n      if (Meteor.isClient) {\n        if (this.siblingField(\"type\").value === \"inventory\" && !this.value) {\n          return \"required\";\n        }\n      }\n    }\n  },\n  compareAtPrice: {\n    label: \"MSRP\",\n    type: Number,\n    optional: true,\n    decimal: true,\n    min: 0,\n    defaultValue: 0.00\n  },\n  fulfillmentService: {\n    label: \"Fulfillment service\",\n    type: String,\n    optional: true\n  },\n  weight: {\n    label: \"Weight\",\n    type: Number,\n    min: 0,\n    optional: true,\n    defaultValue: 0,\n    custom: function () {\n      if (Meteor.isClient) {\n        if (!(this.siblingField(\"type\").value === \"inventory\" || this.value ||\n          this.value === 0)) {\n          return \"required\";\n        }\n      }\n    }\n  },\n  length: {\n    label: \"Length\",\n    type: Number,\n    min: 0,\n    optional: true,\n    defaultValue: 0\n  },\n  width: {\n    label: \"Width\",\n    type: Number,\n    min: 0,\n    optional: true,\n    defaultValue: 0\n  },\n  height: {\n    label: \"Height\",\n    type: Number,\n    min: 0,\n    optional: true,\n    defaultValue: 0\n  },\n  inventoryManagement: {\n    type: Boolean,\n    label: \"Inventory Tracking\",\n    optional: true,\n    defaultValue: true,\n    custom: function () {\n      if (Meteor.isClient) {\n        if (!(this.siblingField(\"type\").value === \"inventory\" || this.value ||\n          this.value === false)) {\n          return \"required\";\n        }\n      }\n    }\n  },\n  // this represents an ability to sell item without keeping it on stock. In\n  // other words if it is disabled, then you can sell item even if it is not in\n  // stock.\n  inventoryPolicy: {\n    type: Boolean,\n    label: \"Deny when out of stock\",\n    optional: true,\n    defaultValue: false,\n    custom: function () {\n      if (Meteor.isClient) {\n        if (!(this.siblingField(\"type\").value === \"inventory\" || this.value ||\n          this.value === false)) {\n          return \"required\";\n        }\n      }\n    }\n  },\n  lowInventoryWarningThreshold: {\n    type: Number,\n    label: \"Warn at\",\n    min: 0,\n    optional: true,\n    defaultValue: 0\n  },\n  inventoryQuantity: {\n    type: Number,\n    label: \"Quantity\",\n    optional: true,\n    defaultValue: 0,\n    min: 0,\n    custom: function () {\n      if (Meteor.isClient) {\n        if (this.siblingField(\"type\").value !== \"inventory\") {\n          if (ReactionProduct.checkChildVariants(this.docId) === 0 && !this.value) {\n            return \"required\";\n          }\n        }\n      }\n    }\n  },\n  minOrderQuantity: {\n    label: \"Minimum order quantity\",\n    type: Number,\n    optional: true\n  },\n  // Denormalized field: Indicates when at least one of variants\n  // `inventoryQuantity` are lower then their `lowInventoryWarningThreshold`.\n  // This is some kind of marketing course.\n  isLowQuantity: {\n    label: \"Indicates that the product quantity is too low\",\n    type: Boolean,\n    optional: true\n  },\n  // Denormalized field: Indicates when all variants `inventoryQuantity` is zero\n  isSoldOut: {\n    label: \"Indicates when the product quantity is zero\",\n    type: Boolean,\n    optional: true\n  },\n  price: {\n    label: \"Price\",\n    type: Number,\n    decimal: true,\n    defaultValue: 0.00,\n    min: 0\n  },\n  shopId: {\n    type: String,\n    autoValue: shopIdAutoValue,\n    index: 1,\n    label: \"Variant ShopId\"\n  },\n  sku: {\n    label: \"SKU\",\n    type: String,\n    optional: true\n  },\n  type: {\n    label: \"Type\",\n    type: String,\n    defaultValue: \"variant\"\n  },\n  taxable: {\n    label: \"Taxable\",\n    type: Boolean,\n    defaultValue: true,\n    optional: true\n  },\n  taxCode: {\n    label: \"Tax Code\",\n    type: String,\n    defaultValue: \"0000\",\n    optional: true\n  },\n  taxDescription: {\n    type: String,\n    optional: true,\n    label: \"Tax Description\"\n  },\n  // Label for customers\n  title: {\n    label: \"Label\",\n    type: String,\n    defaultValue: \"\"\n  },\n  // Option internal name\n  optionTitle: {\n    label: \"Option\",\n    type: String,\n    optional: true,\n    defaultValue: \"Untitled Option\"\n  },\n  metafields: {\n    type: [Metafield],\n    optional: true\n  },\n  createdAt: {\n    label: \"Created at\",\n    type: Date,\n    optional: true\n  },\n  updatedAt: {\n    label: \"Updated at\",\n    type: Date,\n    optional: true\n  },\n  workflow: {\n    type: Workflow,\n    optional: true\n  },\n  originCountry: {\n    type: String,\n    optional: true\n  }\n});\n\nexport const PriceRange = new SimpleSchema({\n  range: {\n    type: String,\n    defaultValue: \"0.00\"\n  },\n  min: {\n    type: Number,\n    decimal: true,\n    defaultValue: 0,\n    optional: true\n  },\n  max: {\n    type: Number,\n    decimal: true,\n    defaultValue: 0,\n    optional: true\n  }\n});\n\n/**\n * Product Schema\n */\nexport const Product = new SimpleSchema({\n  _id: {\n    type: String,\n    label: \"Product Id\"\n  },\n  ancestors: {\n    type: [String],\n    defaultValue: []\n  },\n  shopId: {\n    type: String,\n    autoValue: shopIdAutoValue,\n    index: 1,\n    label: \"Product ShopId\"\n  },\n  title: {\n    type: String,\n    defaultValue: \"\",\n    label: \"Product Title\"\n  },\n  pageTitle: {\n    type: String,\n    optional: true\n  },\n  description: {\n    type: String,\n    optional: true\n  },\n  originCountry: {\n    type: String,\n    optional: true\n  },\n  type: {\n    label: \"Type\",\n    type: String,\n    defaultValue: \"simple\"\n  },\n  vendor: {\n    type: String,\n    optional: true\n  },\n  metafields: {\n    type: [Metafield],\n    optional: true\n  },\n  positions: {\n    type: Object, // ProductPosition\n    blackbox: true,\n    optional: true\n  },\n  // Denormalized field: object with range string, min and max\n  price: {\n    label: \"Price\",\n    type: PriceRange\n  },\n  // Denormalized field: Indicates when at least one of variants\n  // `inventoryQuantity` are lower then their `lowInventoryWarningThreshold`.\n  // This is some kind of marketing course.\n  isLowQuantity: {\n    label: \"Indicates that the product quantity is too low\",\n    type: Boolean,\n    optional: true\n  },\n  // Denormalized field: Indicates when all variants `inventoryQuantity` is zero\n  isSoldOut: {\n    label: \"Indicates when the product quantity is zero\",\n    type: Boolean,\n    optional: true\n  },\n  // Denormalized field. It is `true` if product not in stock, but customers\n  // anyway could order it.\n  isBackorder: {\n    label: \"Indicates when the seller has allowed the sale of product which\" +\n    \" is not in stock\",\n    type: Boolean,\n    optional: true\n  },\n  requiresShipping: {\n    label: \"Require a shipping address\",\n    type: Boolean,\n    defaultValue: true,\n    optional: true\n  },\n  parcel: {\n    type: ShippingParcel,\n    optional: true\n  },\n  hashtags: {\n    type: [String],\n    optional: true,\n    index: 1\n  },\n  twitterMsg: {\n    type: String,\n    optional: true,\n    max: 140\n  },\n  facebookMsg: {\n    type: String,\n    optional: true,\n    max: 255\n  },\n  googleplusMsg: {\n    type: String,\n    optional: true,\n    max: 255\n  },\n  pinterestMsg: {\n    type: String,\n    optional: true,\n    max: 255\n  },\n  metaDescription: {\n    type: String,\n    optional: true\n  },\n  handle: {\n    type: String,\n    optional: true,\n    index: 1,\n    autoValue: function () {\n      let slug = getSlug(this.value);\n\n      if (!slug && this.siblingField(\"title\").value) {\n        slug = getSlug(this.siblingField(\"title\").value);\n      } else if (!slug) {\n        slug = this.siblingField(\"_id\").value || Random.id();\n      }\n      if (this.isInsert) {\n        return slug;\n      } else if (this.isUpsert) {\n        return {\n          $setOnInsert: slug\n        };\n      }\n    }\n  },\n  isDeleted: {\n    type: Boolean,\n    index: 1,\n    defaultValue: false\n  },\n  isVisible: {\n    type: Boolean,\n    index: 1,\n    defaultValue: false\n  },\n  template: {\n    label: \"Template\",\n    type: String,\n    defaultValue: \"productDetailSimple\"\n  },\n  createdAt: {\n    type: Date,\n    autoValue: function () {\n      if (this.isInsert) {\n        return new Date;\n      } else if (this.isUpsert) {\n        return {\n          $setOnInsert: new Date\n        };\n      }\n    }\n  },\n  updatedAt: {\n    type: Date,\n    autoValue: function () {\n      return new Date;\n    },\n    optional: true\n  },\n  publishedAt: {\n    type: Date,\n    optional: true\n  },\n  publishedScope: {\n    type: String,\n    optional: true\n  },\n  workflow: {\n    type: Workflow,\n    optional: true\n  }\n});\n","import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\nimport { Layout } from \"./layouts\";\n\n/**\n * Permissions Schema\n */\n\nexport const Permissions = new SimpleSchema({\n  permission: {\n    type: String\n  },\n  label: {\n    type: String\n  }\n});\n\n/**\n * Permissions Registry\n * the registry entries in the Package registry\n */\n\nexport const Registry = new SimpleSchema({\n  provides: {\n    type: String,\n    index: true\n  },\n  route: {\n    type: String,\n    optional: true,\n    index: true\n  },\n  name: {\n    type: String,\n    label: \"Registry Name\",\n    index: true\n  },\n  template: {\n    type: String,\n    optional: true\n  },\n  workflow: {\n    type: String,\n    optional: true\n  },\n  layout: {\n    type: String,\n    optional: true\n  },\n  triggersEnter: {\n    label: \"Trigger on Entry\",\n    type: [String],\n    optional: true\n  },\n  triggersExit: {\n    label: \"Trigger on Exit\",\n    type: [String],\n    optional: true\n  },\n  options: {\n    label: \"Routing Options\",\n    type: Object,\n    optional: true\n  },\n  description: {\n    type: String,\n    optional: true\n  },\n  icon: {\n    type: String,\n    optional: true\n  },\n  label: {\n    type: String,\n    optional: true\n  },\n  container: {\n    type: String,\n    optional: true\n  },\n  priority: {\n    type: Number,\n    optional: true\n  },\n  enabled: {\n    type: Boolean,\n    optional: true\n  },\n  permissions: {\n    type: [Permissions],\n    optional: true\n  },\n  audience: {\n    type: [String],\n    optional: true,\n    label: \"Audience\"\n  },\n  meta: {\n    label: \"Meta\",\n    type: Object,\n    optional: true,\n    blackbox: true\n  }\n});\n\n\n/**\n * PackageConfig Schema\n */\nexport const PackageConfig = new SimpleSchema({\n  shopId: {\n    type: String,\n    index: 1,\n    // see: https://github.com/reactioncommerce/reaction/issues/646#issuecomment-169351842\n    // autoValue: shopIdAutoValue,\n    label: \"PackageConfig ShopId\",\n    optional: true\n  },\n  name: {\n    type: String,\n    index: 1\n  },\n  enabled: {\n    type: Boolean,\n    defaultValue: true\n  },\n  icon: {\n    type: String,\n    optional: true\n  },\n  settings: {\n    type: Object,\n    optional: true,\n    blackbox: true\n  },\n  registry: {\n    type: [Registry],\n    optional: true\n  },\n  layout: {\n    type: [Layout],\n    optional: true\n  }\n});\n\n/**\n * CorePackageConfig Schema\n * Core Reaction Settings\n */\n\nexport const CorePackageConfig = new SimpleSchema([\n  PackageConfig, {\n    \"settings.mail\": {\n      type: Object,\n      optional: true,\n      label: \"Mail Settings\"\n    },\n    \"settings.mail.user\": {\n      type: String,\n      label: \"Username\"\n    },\n    \"settings.mail.password\": {\n      type: String,\n      label: \"Password\"\n    },\n    \"settings.mail.host\": {\n      type: String,\n      label: \"Host\"\n    },\n    \"settings.mail.port\": {\n      type: String,\n      label: \"Port\"\n    },\n    \"settings.openexchangerates.appId\": {\n      type: String,\n      label: \"Open Exchange Rates App Id\"\n    },\n    \"settings.openexchangerates.refreshPeriod\": {\n      type: String,\n      label: \"Open Exchange Rates refresh period\",\n      defaultValue: \"every 1 hour\"\n    },\n    \"settings.google.clientId\": {\n      type: String,\n      label: \"Google Client Id\",\n      defaultValue: null\n    },\n    \"settings.google.apiKey\": {\n      type: String,\n      label: \"Google Api Key\",\n      defaultValue: null\n    },\n    \"settings.public\": {\n      type: Object,\n      optional: true\n    },\n    \"settings.public.allowGuestCheckout\": {\n      type: Boolean,\n      label: \"Allow Guest Checkout\"\n    },\n    \"settings.cart.cleanupDurationDays\": {\n      type: String,\n      label: \"Cleanup Schedule\",\n      defaultValue: \"older than 3 days\"\n    }\n  }\n]);\n","import { Workflow } from \"./workflow\";\n\n\nexport const Revisions = new SimpleSchema({\n  _id: {\n    type: String,\n    label: \"Revision Id\"\n  },\n\n  // status: {\n  //   type: String,\n  //   label: \"Revision Status\"\n  // },\n\n  workflow: {\n    type: Workflow,\n    optional: false\n  },\n\n  documentId: {\n    type: String,\n    label: \"Reference Document Id\"\n  },\n\n  documentType: {\n    type: String,\n    label: \"Document Type\",\n    defaultValue: \"product\",\n    allowedValues: [\"product\", \"image\", \"tag\"]\n  },\n\n  parentDocument: {\n    type: String,\n    optional: true\n  },\n\n  documentData: {\n    type: \"object\",\n    blackbox: true\n  },\n\n  changeType: {\n    type: String,\n    optional: true,\n    allowedValues: [\"insert\", \"update\", \"remove\"]\n  },\n\n  diff: {\n    type: [Object],\n    blackbox: true,\n    optional: true\n  },\n\n  createdAt: {\n    type: Date,\n    autoValue: function () {\n      if (this.isInsert) {\n        return new Date;\n      } else if (this.isUpsert) {\n        return {\n          $setOnInsert: new Date\n        };\n      }\n    }\n  },\n\n  updatedAt: {\n    type: Date,\n    autoValue: function () {\n      return new Date;\n    },\n    optional: true\n  },\n\n  publishAt: {\n    type: Date,\n    optional: true\n  }\n});\n","import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\nimport { shopIdAutoValue, schemaIdAutoValue } from \"./helpers\";\nimport { Address } from \"./address\";\nimport { Invoice } from \"./payments\";\nimport { PackageConfig } from \"./registry\";\nimport { Workflow } from \"./workflow\";\n\n/**\n * ShippoShippingMethod Schema\n * TODO move shippo related schema to shippo module\n * This will only exist in ShippingMethods Inside Cart/Order and not DB shipping Collection\n * as Shippo Methods are Dynamic.\n */\n\nexport const ShippoShippingMethod = new SimpleSchema({\n  serviceLevelToken: {\n    type: String,\n    optional: true\n  },\n  rateId: {\n    type: String,\n    optional: true\n  }\n});\n\n/**\n * ShippingMethod Schema\n */\n\nexport const ShippingMethod = new SimpleSchema({\n  \"_id\": {\n    type: String,\n    label: \"Shipment Method Id\",\n    autoValue: schemaIdAutoValue\n  },\n  \"name\": {\n    type: String,\n    label: \"Method Name\"\n  },\n  \"label\": {\n    type: String,\n    label: \"Public Label\"\n  },\n  \"group\": {\n    type: String,\n    label: \"Group\",\n    allowedValues: [\"Ground\", \"Priority\", \"One Day\", \"Free\"]\n  },\n  \"cost\": {\n    type: Number,\n    label: \"Cost\",\n    decimal: true,\n    optional: true\n  },\n  \"handling\": {\n    type: Number,\n    label: \"Handling\",\n    optional: true,\n    decimal: true,\n    defaultValue: 0,\n    min: 0\n  },\n  \"rate\": {\n    type: Number,\n    label: \"Rate\",\n    decimal: true,\n    min: 0\n  },\n  \"enabled\": {\n    type: Boolean,\n    label: \"Enabled\",\n    defaultValue: false\n  },\n  \"validRanges\": {\n    type: Array,\n    optional: true,\n    label: \"Matching Cart Ranges\"\n  },\n  \"validRanges.$\": {\n    type: Object,\n    optional: true\n  },\n  \"validRanges.$.begin\": {\n    type: Number,\n    decimal: true,\n    label: \"Begin\",\n    optional: true\n  },\n  \"validRanges.$.end\": {\n    type: Number,\n    decimal: true,\n    label: \"End\",\n    optional: true\n  },\n  \"validLocales\": {\n    type: Array,\n    optional: true,\n    label: \"Matching Locales\"\n  },\n  \"validLocales.$\": {\n    type: Object,\n    optional: true\n  },\n  \"validLocales.$.origination\": {\n    type: String,\n    label: \"From\",\n    optional: true\n  },\n  \"validLocales.$.destination\": {\n    type: String,\n    label: \"To\",\n    optional: true\n  },\n  \"validLocales.$.deliveryBegin\": {\n    type: Number,\n    label: \"Shipping Est.\",\n    optional: true\n  },\n  \"validLocales.$.deliveryEnd\": {\n    type: Number,\n    label: \"Delivery Est.\",\n    optional: true\n  },\n  \"carrier\": {     // kind of denormalizing, useful for having it in shipmentMethod( cart & order)\n    type: String,  // Alternatively we can make an extra Schema:ShipmentMethod, that inherits\n    optional: true // ShippingMethod and add the optional carrier field\n  },\n  \"settings\": {\n    type: ShippoShippingMethod,\n    optional: true\n  }\n});\n\n/**\n * ShipmentQuote Schema\n */\n\nexport const ShipmentQuote = new SimpleSchema({\n  carrier: {\n    type: String\n  },\n  method: {\n    type: ShippingMethod\n  },\n  rate: {\n    type: Number,\n    decimal: true,\n    defaultValue: \"0.00\"\n  }\n});\n\n// populate with order.items that are added to a shipment\nexport const ShipmentItem = new SimpleSchema({\n  _id: {\n    type: String,\n    label: \"Shipment Line Item\",\n    optional: true,\n    autoValue: schemaIdAutoValue\n  },\n  productId: {\n    type: String,\n    index: 1\n  },\n  shopId: {\n    type: String,\n    index: 1,\n    label: \"Shipment Item ShopId\",\n    optional: true\n  },\n  quantity: {\n    label: \"Quantity\",\n    type: Number,\n    min: 0\n  },\n  variantId: {\n    type: String\n  }\n});\n\n/**\n * ShippingParcel Schema\n */\n\nexport const ShippingParcel = new SimpleSchema({\n  containers: {\n    type: String,\n    optional: true\n  },\n  length: {\n    type: Number,\n    optional: true\n  },\n  width: {\n    type: Number,\n    optional: true\n  },\n  height: {\n    type: Number,\n    optional: true\n  },\n  weight: {\n    type: Number,\n    optional: true\n  }\n});\n\n/**\n * ShippoShipment Schema\n * Specific properties of Shipment for use with Shippo. We don't use\n */\n\nexport const ShippoShipment = new SimpleSchema({\n  transactionId: {\n    type: String,\n    optional: true\n  },\n  trackingStatusStatus: { // cause tracking_status.status\n    type: String,\n    optional: true\n  },\n  trackingStatusDate: {\n    type: String,\n    optional: true\n  }\n});\n\n\n/**\n * Shipment Schema\n * used for cart/order shipment tracking\n */\n\nexport const Shipment = new SimpleSchema({\n  _id: {\n    type: String,\n    label: \"Shipment Id\",\n    autoValue: schemaIdAutoValue\n  },\n  paymentId: {\n    type: String,\n    label: \"Payment Id\",\n    optional: true\n  },\n  address: {\n    type: Address,\n    optional: true\n  },\n  shipmentMethod: {\n    type: ShippingMethod,\n    optional: true\n  },\n  shipmentQuotes: {\n    type: [ShipmentQuote],\n    optional: true\n  },\n  tracking: {\n    type: String,\n    optional: true\n  },\n  parcel: {\n    type: ShippingParcel,\n    optional: true\n  },\n  items: {\n    type: [ShipmentItem],\n    optional: true\n  },\n  workflow: {\n    type: Workflow,\n    optional: true\n  },\n  packed: {\n    type: Boolean,\n    optional: true,\n    defaultValue: false\n  },\n  shipped: {\n    type: Boolean,\n    optional: true,\n    defaultValue: false\n  },\n  delivered: {\n    type: Boolean,\n    optional: true,\n    defaultValue: false\n  },\n  invoice: {\n    type: Invoice,\n    optional: true\n  },\n  transactions: {\n    type: [Object],\n    optional: true,\n    blackbox: true\n  }, // For printable Shipping label\n  shippingLabelUrl: {\n    type: String,\n    optional: true\n  }, // For Customs printable label\n  customsLabelUrl: {\n    type: String,\n    optional: true\n  }, // shippo specific properties\n  shippo: {\n    type: ShippoShipment,\n    optional: true\n  }\n});\n\n/**\n * ShippoShippingProvider Schema\n * Specific  properties for use with Shippo. We don't use\n * ShippingProvider service* fields because Shippo is on level\n * higher service than simple carrier's ,e.g Fedex api.\n */\n\nexport const ShippoShippingProvider = new SimpleSchema({\n  carrierAccountId: {\n    type: String,\n    optional: true\n  }\n});\n\n/**\n * ShippingProvider Schema\n */\n\nexport const ShippingProvider = new SimpleSchema({\n  _id: {\n    type: String,\n    label: \"Provider Id\",\n    optional: true,\n    autoValue: schemaIdAutoValue\n  },\n  name: {\n    type: String,\n    label: \"Service Code\",\n    optional: true\n  },\n  label: {\n    type: String,\n    label: \"Public Label\"\n  },\n  enabled: {\n    type: Boolean,\n    defaultValue: true\n  },\n  serviceAuth: {\n    type: String,\n    label: \"Auth\",\n    optional: true\n  },\n  serviceSecret: {\n    type: String,\n    label: \"Secret\",\n    optional: true\n  },\n  serviceUrl: {\n    type: String,\n    label: \"Service URL\",\n    optional: true\n  },\n  shippoProvider: {\n    type: ShippoShippingProvider,\n    optional: true\n  }\n});\n\n/**\n * Shipping Schema\n */\n\nexport const Shipping = new SimpleSchema({\n  _id: {\n    type: String,\n    label: \"Service Id\",\n    optional: true\n  },\n  shopId: {\n    type: String,\n    index: 1,\n    autoValue: shopIdAutoValue,\n    label: \"Shipping ShopId\"\n  },\n  name: {\n    type: String,\n    label: \"Service Name\",\n    optional: true,\n    index: 1\n  },\n  provider: {\n    type: ShippingProvider,\n    label: \"Shipping Provider\"\n  },\n  methods: {\n    type: [ShippingMethod],\n    optional: true,\n    label: \"Shipping Methods\"\n  },\n  shipmentQuotes: {\n    type: [ShipmentQuote],\n    optional: true,\n    label: \"Quoted Methods\"\n  }\n});\n\n/**\n * Shipping Package Schema\n */\nexport const ShippingPackageConfig = new SimpleSchema([\n  PackageConfig, {\n    \"settings.name\": {\n      type: String,\n      defaultValue: \"Flat Rate Service\"\n    }\n  }\n]);\n","import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\nimport { Email } from \"./accounts\";\nimport { Address } from \"./address\";\nimport { Layout } from \"./layouts\";\nimport { Metafield } from \"./metafield\";\n\n/**\n * CustomEmailSettings Schema\n */\nexport const CustomEmailSettings = new SimpleSchema({\n  service: {\n    type: String,\n    optional: true\n  },\n  username: {\n    type: String,\n    optional: true\n  },\n  password: {\n    type: String,\n    optional: true\n  },\n  host: {\n    type: String,\n    optional: true\n  },\n  port: {\n    type: Number,\n    optional: true\n  }\n});\n\n/**\n * Currency Schema\n */\nexport const Currency = new SimpleSchema({\n  symbol: {\n    type: String,\n    defaultValue: \"$\"\n  },\n  format: {\n    type: String,\n    defaultValue: \"%s%v\"\n  },\n  scale: {\n    type: Number,\n    defaultValue: 2,\n    optional: true\n  },\n  decimal: {\n    type: String,\n    defaultValue: \".\",\n    optional: true\n  },\n  thousand: {\n    type: String,\n    defaultValue: \",\",\n    optional: true\n  },\n  rate: {\n    type: Number,\n    optional: true\n  }\n});\n\n/**\n * Locale Schema\n */\nexport const Locale = new SimpleSchema({\n  continents: {\n    type: Object,\n    blackbox: true\n  },\n  countries: {\n    type: Object,\n    blackbox: true\n  }\n});\n\n/**\n * Languages Schema\n */\n\nexport const Languages = new SimpleSchema({\n  label: {\n    type: String\n  },\n  i18n: {\n    type: String\n  },\n  enabled: {\n    type: Boolean,\n    defaultValue: true\n  }\n});\n\n/**\n * ShopTheme Schema\n */\nexport const ShopTheme = new SimpleSchema({\n  themeId: {\n    type: String\n  },\n  styles: {\n    type: String,\n    optional: true\n  }\n});\n\n/**\n * Shop Theme Schema\n */\nexport const BrandAsset = new SimpleSchema({\n  mediaId: {\n    type: String,\n    optional: true\n  },\n  type: {\n    type: String,\n    optional: true\n  }\n});\n\n/**\n * Shop Schema\n */\nexport const Shop = new SimpleSchema({\n  \"_id\": {\n    type: String,\n    optional: true\n  },\n  \"status\": {\n    type: String,\n    defaultValue: \"active\"\n  },\n  \"name\": {\n    type: String,\n    index: 1\n  },\n  \"description\": {\n    type: String,\n    optional: true\n  },\n  \"keywords\": {\n    type: String,\n    optional: true\n  },\n  \"addressBook\": {\n    type: [Address],\n    optional: true\n  },\n  \"domains\": {\n    type: [String],\n    defaultValue: [\"localhost\"],\n    index: 1\n  },\n  \"emails\": {\n    type: [Email],\n    optional: true\n  },\n  \"defaultPaymentMethod\": {\n    label: \"Default Payment Method\",\n    type: String,\n    defaultValue: \"none\"\n  },\n  \"currency\": {\n    label: \"Base Currency\",\n    type: String,\n    defaultValue: \"USD\"\n  },\n  \"currencies\": {\n    type: Object, // Schemas.Currency\n    blackbox: true,\n    optional: true\n  },\n  \"locales\": {\n    type: Locale\n  },\n  \"language\": {\n    label: \"Base Language\",\n    type: String,\n    defaultValue: \"en\"\n  },\n  \"languages\": {\n    type: [Languages],\n    optional: true\n  },\n  \"public\": {\n    type: String,\n    optional: true\n  },\n  \"timezone\": {\n    label: \"Timezone\",\n    type: String,\n    defaultValue: \"US/Pacific\"\n  },\n  \"baseUOM\": {\n    type: String,\n    optional: true,\n    defaultValue: \"OZ\",\n    label: \"Base Unit of Measure\"\n  },\n  \"unitsOfMeasure\": {\n    type: [Object]\n  },\n  \"unitsOfMeasure.$.uom\": {\n    type: String,\n    defaultValue: \"OZ\"\n  },\n  \"unitsOfMeasure.$.label\": {\n    type: String,\n    defaultValue: \"Ounces\"\n  },\n  \"unitsOfMeasure.$.default\": {\n    type: Boolean,\n    defaultValue: false\n  },\n  \"metafields\": {\n    type: [Metafield],\n    optional: true\n  },\n  \"defaultVisitorRole\": {\n    type: [String],\n    defaultValue: [\"anonymous\", \"guest\", \"product\", \"tag\", \"index\", \"cart/checkout\", \"cart/completed\"]\n  },\n  \"defaultRoles\": {\n    type: [String],\n    defaultValue: [\"guest\", \"account/profile\", \"product\", \"tag\", \"index\", \"cart/checkout\", \"cart/completed\"]\n  },\n  \"layout\": {\n    type: [Layout],\n    optional: true\n  },\n  \"theme\": {\n    type: ShopTheme,\n    optional: true\n  },\n  \"brandAssets\": {\n    type: [BrandAsset],\n    optional: true\n  },\n  \"appVersion\": {\n    type: String,\n    optional: true\n  },\n  \"createdAt\": {\n    type: Date,\n    autoValue: function () {\n      if (this.isInsert) {\n        return new Date();\n      } else if (this.isUpsert) {\n        return {\n          $setOnInsert: new Date()\n        };\n      }\n      this.unset();\n    },\n    denyUpdate: true,\n    optional: true\n  },\n  \"updatedAt\": {\n    type: Date,\n    autoValue: function () {\n      if (this.isUpdate) {\n        return new Date;\n      }\n    },\n    optional: true\n  }\n});\n","import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\n\nexport const Sms  = new SimpleSchema({\n  apiKey: {\n    type: String,\n    optional: true\n  },\n  apiToken: {\n    type: String,\n    optional: true\n  },\n  shopId: {\n    type: String,\n    optional: true\n  },\n  smsPhone: {\n    type: String,\n    optional: true\n  },\n  smsProvider: {\n    type: String,\n    optional: true\n  }\n});\n","import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\nimport { PackageConfig } from \"./registry\";\n\n/*\n * Settings for Social Package\n */\nexport const SocialProvider = new SimpleSchema({\n  profilePage: {\n    type: String,\n    regEx: SimpleSchema.RegEx.Url,\n    label: \"Profile Page\",\n    optional: true\n  },\n  enabled: {\n    type: Boolean,\n    label: \"Enabled\",\n    defaultValue: false,\n    optional: true\n  }\n});\n\nexport const SocialPackageConfig = new SimpleSchema([\n  PackageConfig, {\n    \"settings.public\": {\n      type: Object,\n      optional: true\n    },\n    \"settings.public.apps\": {\n      type: Object,\n      label: \"Social Settings\",\n      optional: true\n    },\n    \"settings.public.apps.facebook\": {\n      type: SocialProvider,\n      optional: true\n    },\n    \"settings.public.apps.facebook.appId\": {\n      type: String,\n      regEx: /\\d+/,\n      label: \"App Id\",\n      optional: true\n    },\n    \"settings.public.apps.facebook.appSecret\": {\n      type: String,\n      regEx: /[\\da-z]+/,\n      label: \"App Secret\",\n      optional: true\n    },\n    \"settings.public.apps.twitter\": {\n      type: SocialProvider,\n      optional: true\n    },\n    \"settings.public.apps.twitter.username\": {\n      type: String,\n      label: \"Username\",\n      optional: true\n    },\n    \"settings.public.apps.pinterest\": {\n      type: SocialProvider,\n      optional: true\n    },\n    \"settings.public.apps.googleplus\": {\n      type: SocialProvider,\n      label: \"Google+\",\n      optional: true\n    }\n  }\n]);\n","import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\nimport { shopIdAutoValue } from \"./helpers\";\n\n/**\n * Tag Schema\n */\n\nexport const Tag = new SimpleSchema({\n  _id: {\n    type: String,\n    optional: true\n  },\n  name: {\n    type: String,\n    index: 1\n  },\n  slug: {\n    type: String\n  },\n  position: {\n    type: Number,\n    optional: true\n  },\n  relatedTagIds: {\n    type: [String],\n    optional: true,\n    index: 1\n  },\n  isDeleted: {\n    type: Boolean,\n    defaultValue: false\n  },\n  isTopLevel: {\n    type: Boolean\n  },\n  shopId: {\n    type: String,\n    index: 1,\n    autoValue: shopIdAutoValue,\n    label: \"Tag shopId\"\n  },\n  createdAt: {\n    type: Date,\n    autoValue: function () {\n      if (this.isInsert) {\n        return new Date;\n      } else if (this.isUpsert) {\n        return {\n          $setOnInsert: new Date\n        };\n      }\n    }\n  },\n  updatedAt: {\n    type: Date\n  }\n});\n","import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\nimport { shopIdAutoValue } from \"./helpers\";\n\nconst sharedFields = {\n  shopId: {\n    type: String,\n    index: 1,\n    autoValue: shopIdAutoValue,\n    label: \"Template ShopId\"\n  },\n  name: {\n    type: String\n  },\n  priority: {\n    type: Number,\n    optional: true,\n    defaultValue: 1\n  },\n  enabled: {\n    type: Boolean,\n    defaultValue: true\n  },\n  route: {\n    type: String,\n    optional: true\n  },\n  // permissions: {\n  //   type: [String],\n  //   optional: true\n  // },\n  // audience: {\n  //   type: [String],\n  //   optional: true\n  // },\n  type: {\n    type: String,\n    defaultValue: \"template\"\n  },\n\n  provides: {\n    type: String,\n    defaultValue: \"template\"\n  },\n  block: {\n    type: String,\n    optional: true\n  },\n  defaultData: {\n    type: Object,\n    blackbox: true,\n    optional: true\n  },\n  parser: {\n    type: String\n  },\n  language: {\n    type: String,\n    optional: true,\n    defaultValue: \"en\"\n  },\n  source: {\n    type: String,\n    optional: true\n  }\n};\n\nexport const ReactLayout = new SimpleSchema({\n  ...sharedFields,\n  templateFor: {\n    type: [String],\n    optional: true\n  },\n  template: {\n    type: [Object],\n    optional: true,\n    blackbox: true\n  }\n});\n\nexport const Template = new SimpleSchema({\n  ...sharedFields,\n  template: {\n    type: String,\n    optional: true\n  }\n});\n","import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\n\n/**\n * @summary Themes Schema\n * Schema for themes used in reaction-layout\n */\n\nexport const Themes = new SimpleSchema({\n  name: {\n    type: String,\n    index: true\n  },\n\n  author: {\n    type: String,\n    optional: true\n  },\n\n  layout: {\n    type: String,\n    optional: true,\n    defaultValue: \"coreLayout\"\n  },\n\n  url: {\n    type: String,\n    optional: true\n  },\n\n  components: {\n    type: [Object],\n    optional: true,\n    blackbox: true\n  }\n});\n","import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\nimport { shopIdAutoValue } from \"./helpers\";\n\n/*\n* translations schema\n* mostly just a blackbox for now\n* someday maybe we'll validate the entire schema\n* since ui editing for these values are likely\n*/\n\nexport const Translation = new SimpleSchema({\n  shopId: {\n    type: String,\n    index: 1,\n    autoValue: shopIdAutoValue,\n    label: \"Translation ShopId\"\n  },\n  language: {\n    type: String\n  },\n  i18n: {\n    type: String,\n    index: 1\n  },\n  ns: {\n    type: String,\n    label: \"Namespace\"\n  },\n  translation: {\n    type: Object,\n    blackbox: true\n  }\n});\n","import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\n\n/**\n * workflow schema for attaching to collection where\n * PackageWorkflow is controlling view flow\n * Shop defaultWorkflow is defined in Shop\n */\n\nexport const Workflow = new SimpleSchema({\n  status: {\n    type: String,\n    defaultValue: \"new\",\n    index: 1\n  },\n  workflow: {\n    type: [String],\n    optional: true\n  }\n});\n","import accounting from \"accounting-js\";\n\n/**\n * getSummary\n * @summary iterates over cart items with computations\n * @param {Array} items - cart.items array\n * @param {Array} prop - path to item property represented by array\n * @param {Array} [prop2] - path to another item property represented by array\n * @return {Number} - computations result\n */\nfunction getSummary(items, prop, prop2) {\n  try {\n    if (Array.isArray(items)) {\n      return items.reduce((sum, item) => {\n        if (prop2) {\n          // S + a * b, where b could be b1 or b2\n          return sum + item[prop[0]] * (prop2.length === 1 ? item[prop2[0]] :\n            item[prop2[0]][prop2[1]]);\n        }\n        // S + b, where b could be b1 or b2\n        return sum + (prop.length === 1 ? item[prop[0]] :\n          item[prop[0]][prop[1]]);\n      }, 0);\n    }\n  } catch (e) {\n    // If data not prepared we should send a number to avoid exception with\n    // `toFixed`. This could happens if user stuck on `completed` checkout stage\n    // by some reason.\n    return 0;\n  }\n  return 0;\n}\n\n/**\n * Reaction transform collections\n *\n * transform methods used to return cart calculated values\n * cartCount, cartSubTotal, cartShipping, cartTaxes, cartTotal\n * are calculated by a transformation on the collection\n * and are available to use in template as cart.xxx\n * in template: {{cart.cartCount}}\n * in code: Cart.findOne().cartTotal()\n */\nexport const cartTransform = {\n  cartCount() {\n    return getSummary(this.items, [\"quantity\"]);\n  },\n  cartShipping() {\n    // loop through the cart.shipping, sum shipments.\n    const rate = getSummary(this.shipping, [\"shipmentMethod\", \"rate\"]);\n    const handling = getSummary(this.shipping, [\"shipmentMethod\", \"handling\"]);\n    const shipping = handling + rate || 0;\n    return accounting.toFixed(shipping, 2);\n  },\n  cartSubTotal() {\n    const subTotal = getSummary(this.items, [\"quantity\"], [\"variants\", \"price\"]);\n    return accounting.toFixed(subTotal, 2);\n  },\n  cartTaxes() {\n    // taxes are calculated in a Cart.after.update hooks\n    // the tax value stored with the cart is the effective tax rate\n    // calculated by line items\n    // in the imports/core/taxes plugin\n    const tax = this.tax || 0;\n    const subTotal = parseFloat(this.cartSubTotal());\n    const taxTotal = subTotal * tax;\n    return accounting.toFixed(taxTotal, 2);\n  },\n  cartDiscounts() {\n    const discount = this.discount || 0;\n    return accounting.toFixed(discount, 2);\n  },\n  cartTotal() {\n    const subTotal = parseFloat(this.cartSubTotal());\n    const shipping = parseFloat(this.cartShipping());\n    const taxes = parseFloat(this.cartTaxes());\n    const discount = parseFloat(this.cartDiscounts());\n    const discountTotal = Math.max(0, subTotal - discount);\n    const total = discountTotal + shipping + taxes;\n    return accounting.toFixed(total, 2);\n  }\n};\n","import accounting from \"accounting-js\";\n\n\n// TODO: This is a duplicate of the cart transform with just the names changed.\n// This should be factored to be just one file for both\n\n/**\n * getSummary\n * @summary iterates over order items with computations\n * @param {Array} items - order.items array\n * @param {Array} prop - path to item property represented by array\n * @param {Array} [prop2] - path to another item property represented by array\n * @return {Number} - computations result\n */\nfunction getSummary(items, prop, prop2) {\n  try {\n    if (Array.isArray(items)) {\n      return items.reduce((sum, item) => {\n        if (prop2) {\n          // S + a * b, where b could be b1 or b2\n          return sum + item[prop[0]] * (prop2.length === 1 ? item[prop2[0]] :\n              item[prop2[0]][prop2[1]]);\n        }\n        // S + b, where b could be b1 or b2\n        return sum + (prop.length === 1 ? item[prop[0]] :\n            item[prop[0]][prop[1]]);\n      }, 0);\n    }\n  } catch (e) {\n    // If data not prepared we should send a number to avoid exception with\n    // `toFixed`. This could happens if user stuck on `completed` checkout stage\n    // by some reason.\n    return 0;\n  }\n  return 0;\n}\n\n/**\n * Reaction transform collections\n *\n * transform methods used to return order calculated values\n * orderCount, orderSubTotal, orderShipping, orderTaxes, orderTotal\n * are calculated by a transformation on the collection\n * and are available to use in template as order.xxx\n * in template: {{order.orderCount}}\n * in code: order.findOne().orderTotal()\n */\nexport const orderTransform = {\n  orderCount() {\n    return getSummary(this.items, [\"quantity\"]);\n  },\n  orderShipping() {\n    // loop through the order.shipping, sum shipments.\n    const rate = getSummary(this.shipping, [\"shipmentMethod\", \"rate\"]);\n    const handling = getSummary(this.shipping, [\"shipmentMethod\", \"handling\"]);\n    const shipping = handling + rate || 0;\n    return accounting.toFixed(shipping, 2);\n  },\n  orderSubTotal() {\n    const subTotal = getSummary(this.items, [\"quantity\"], [\"variants\", \"price\"]);\n    return accounting.toFixed(subTotal, 2);\n  },\n  orderTaxes() {\n    // taxes are calculated in a order.after.update hooks\n    // the tax value stored with the order is the effective tax rate\n    // calculated by line items\n    // in the imports/core/taxes plugin\n    const tax = this.tax || 0;\n    const subTotal = parseFloat(this.orderSubTotal());\n    const taxTotal = subTotal * tax;\n    return accounting.toFixed(taxTotal, 2);\n  },\n  orderDiscounts() {\n    const discount = this.discount || 0;\n    return accounting.toFixed(discount, 2);\n  },\n  orderTotal() {\n    const subTotal = parseFloat(this.orderSubTotal());\n    const shipping = parseFloat(this.orderShipping());\n    const taxes = parseFloat(this.orderTaxes());\n    const discount = parseFloat(this.orderDiscounts());\n    const discountTotal = Math.max(0, subTotal - discount);\n    const total = discountTotal + shipping + taxes;\n    return accounting.toFixed(total, 2);\n  },\n  itemCount() {\n    let count = 0;\n    if (Array.isArray(this.items)) {\n      for (const item of this.items) {\n        count += item.quantity;\n      }\n    }\n    return count;\n  }\n};\n\n","/**\n * core collectionsFS configurations\n */\nFS.HTTP.setBaseUrl(\"/assets\");\nFS.HTTP.setHeadersForGet([\n  [\"Cache-Control\", \"public, max-age=31536000\"]\n]);\n\n/**\n * Define CollectionFS collection\n * See: https://github.com/CollectionFS/Meteor-CollectionFS\n * chunkSize: 1024*1024*2; <- CFS default // 256k is default GridFS chunk size, but performs terribly\n */\n\nexport const Media = new FS.Collection(\"Media\", {\n  stores: [\n    new FS.Store.GridFS(\"image\", {\n      chunkSize: 1 * 1024 * 1024\n    }), new FS.Store.GridFS(\"large\", {\n      chunkSize: 1 * 1024 * 1024,\n      transformWrite: function (fileObj, readStream, writeStream) {\n        if (gm.isAvailable) {\n          gm(readStream, fileObj.name).resize(\"1000\", \"1000\").stream()\n            .pipe(writeStream);\n        } else {\n          readStream.pipe(writeStream);\n        }\n      }\n    }), new FS.Store.GridFS(\"medium\", {\n      chunkSize: 1 * 1024 * 1024,\n      transformWrite: function (fileObj, readStream, writeStream) {\n        if (gm.isAvailable) {\n          gm(readStream, fileObj.name).resize(\"600\", \"600\").stream().pipe(\n            writeStream);\n        } else {\n          readStream.pipe(writeStream);\n        }\n      }\n    }), new FS.Store.GridFS(\"small\", {\n      chunkSize: 1 * 1024 * 1024,\n      transformWrite: function (fileObj, readStream, writeStream) {\n        if (gm.isAvailable) {\n          gm(readStream).resize(\"235\", \"235\" + \"^\").gravity(\"Center\")\n            .extent(\"235\", \"235\").stream(\"PNG\").pipe(writeStream);\n        } else {\n          readStream.pipe(writeStream);\n        }\n      }\n    }), new FS.Store.GridFS(\"thumbnail\", {\n      chunkSize: 1 * 1024 * 1024,\n      transformWrite: function (fileObj, readStream, writeStream) {\n        if (gm.isAvailable) {\n          gm(readStream).resize(\"100\", \"100\" + \"^\").gravity(\"Center\")\n            .extent(\"100\", \"100\").stream(\"PNG\").pipe(writeStream);\n        } else {\n          readStream.pipe(writeStream);\n        }\n      }\n    })\n  ],\n  filter: {\n    allow: {\n      contentTypes: [\"image/*\"]\n    }\n  }\n});\n","import { Mongo } from \"meteor/mongo\";\nimport * as Schemas from \"./schemas\";\nimport { cartTransform } from \"./transform/cart\";\nimport { orderTransform } from \"./transform/order\";\n\n/**\n*\n* Reaction Core Collections\n*\n*/\n\n/**\n * Accounts Collection\n */\nexport const Accounts = new Mongo.Collection(\"Accounts\");\n\nAccounts.attachSchema(Schemas.Accounts);\n\n\n/*\n *  AnalyticsEvents Collection\n *  Store the Analytics Events in a Collection\n */\nexport const AnalyticsEvents = new Mongo.Collection(\"AnalyticsEvents\");\n\nAnalyticsEvents.attachSchema(Schemas.AnalyticsEvents);\n\n\n/**\n *  Assets Collection\n *  Store file asset paths or contents in a Collection\n */\nexport const Assets = new Mongo.Collection(\"Assets\");\n\nAssets.attachSchema(Schemas.Assets);\n\n\n/**\n* Cart Collection\n*/\nexport const Cart = new Mongo.Collection(\"Cart\", {\n  transform(cart) {\n    const newInstance = Object.create(cartTransform);\n    return _.extend(newInstance, cart);\n  }\n});\n\nCart.attachSchema(Schemas.Cart);\n\n\n/**\n* Emails Collection\n*/\nexport const Emails = new Mongo.Collection(\"Emails\");\n\nEmails.attachSchema(Schemas.Emails);\n\n\n/**\n* Inventory Collection\n*/\nexport const Inventory = new Mongo.Collection(\"Inventory\");\n\nInventory.attachSchema(Schemas.Inventory);\n\n\n/**\n* Orders Collection\n*/\nexport const Orders = new Mongo.Collection(\"Orders\", {\n  transform(order) {\n    const newInstance = Object.create(orderTransform);\n    return _.extend(newInstance, order);\n  }\n});\n\nOrders.attachSchema([\n  Schemas.Cart,\n  Schemas.Order,\n  Schemas.OrderItem\n]);\n\n\n/**\n* Packages Collection\n*/\nexport const Packages = new Mongo.Collection(\"Packages\");\n\nPackages.attachSchema(Schemas.PackageConfig);\n\n\n/**\n* Products Collection\n*/\nexport const Products = new Mongo.Collection(\"Products\");\n\nProducts.attachSchema(Schemas.Product, { selector: { type: \"simple\" } });\nProducts.attachSchema(Schemas.ProductVariant, { selector: { type: \"variant\" } });\n\n/**\n* Revisions Collection\n*/\nexport const Revisions = new Mongo.Collection(\"Revisions\");\n\nRevisions.attachSchema(Schemas.Revisions);\n\n/**\n* Shipping Collection\n*/\nexport const Shipping = new Mongo.Collection(\"Shipping\");\n\nShipping.attachSchema(Schemas.Shipping);\n\n\n/**\n* Shops Collection\n*/\nexport const Shops = new Mongo.Collection(\"Shops\");\n\nShops.attachSchema(Schemas.Shop);\n\n\n/**\n* Tags Collection\n*/\nexport const Tags = new Mongo.Collection(\"Tags\");\n\nTags.attachSchema(Schemas.Tag);\n\n\n/**\n* Templates Collection\n*/\nexport const Templates = new Mongo.Collection(\"Templates\");\n\nTemplates.attachSchema(Schemas.Templates, { selector: { type: \"template\" } });\nTemplates.attachSchema(Schemas.ReactLayout, { selector: { type: \"react\" } });\n\n/**\n* Themes Collection\n*/\nexport const Themes = new Mongo.Collection(\"Themes\");\n\nThemes.attachSchema(Schemas.Themes);\n\n\n/**\n* Translations Collection\n*/\nexport const Translations = new Mongo.Collection(\"Translations\");\n\nTranslations.attachSchema(Schemas.Translation);\n\n/**\n * Notifications Collection\n */\nexport const Notifications = new Mongo.Collection(\"Notifications\");\n\nNotifications.attachSchema(Schemas.Notification);\n\n\n/**\n * Sms Collection\n */\nexport const Sms = new Mongo.Collection(\"Sms\");\n\nSms.attachSchema(Schemas.Sms);\n\n\n/**\n * Logs Collection\n */\nexport const Logs = new Mongo.Collection(\"Logs\");\n\nLogs.attachSchema(Schemas.Logs);\n","export * from \"./collections\";\nexport * from \"./search\";\nexport { Media } from \"./collectionFS\";\nexport { Jobs } from \"./jobs\";\n","import { JobCollection } from \"meteor/vsivsi:job-collection\";\n\n/**\n * Jobs Collection\n */\nexport const Jobs = new JobCollection(\"Jobs\", {\n  noCollectionSuffix: true\n});\n","import { Mongo } from \"meteor/mongo\";\n\nexport const ProductSearch = new Mongo.Collection(\"ProductSearch\");\nexport const OrderSearch = new Mongo.Collection(\"OrderSearch\");\nexport const AccountSearch = new Mongo.Collection(\"AccountSearch\");\n","\n// Template literal for html strings.\nexport function html(strings) {\n  return strings.raw[0];\n}\n","export const getTagIds = (state) => {\n  if (Array.isArray(state.tags)) {\n    return state.tags.map(tag => tag._id);\n  }\n\n  return [];\n};\n","export const getVariantIds = (variants) => Array.isArray(variants) && variants.map(variant => variant._id);\n"]}