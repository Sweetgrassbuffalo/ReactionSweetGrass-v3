[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar check = Package.check.check;\nvar Match = Package.check.Match;\nvar _ = Package.underscore._;\nvar Mongo = Package.mongo.Mongo;\nvar DDP = Package['ddp-client'].DDP;\n\n/* Package-scope variables */\nvar DDPCommon;\n\n(function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// packages/dispatch_run-as-user/packages/dispatch_run-as-user.js                                             //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\n(function () {                                                                                                // 1\n                                                                                                              // 2\n/////////////////////////////////////////////////////////////////////////////////////////////////////////     // 3\n//                                                                                                     //     // 4\n// packages/dispatch:run-as-user/lib/pre.1.0.3.js                                                      //     // 5\n//                                                                                                     //     // 6\n/////////////////////////////////////////////////////////////////////////////////////////////////////////     // 7\n                                                                                                       //     // 8\n// This code will go away in later versions of Meteor, this is just a \"polyfill\"                       // 1   // 9\n// until the next release of Meteor maybe 1.0.3?                                                       // 2   // 10\n//                                                                                                     // 3   // 11\nif (typeof DDPCommon === 'undefined') {                                                                // 4   // 12\n  DDPCommon = {};                                                                                      // 5   // 13\n                                                                                                       // 6   // 14\n  DDPCommon.MethodInvocation = function (options) {                                                    // 7   // 15\n    var self = this;                                                                                   // 8   // 16\n                                                                                                       // 9   // 17\n    // true if we're running not the actual method, but a stub (that is,                               // 10  // 18\n    // if we're on a client (which may be a browser, or in the future a                                // 11  // 19\n    // server connecting to another server) and presently running a                                    // 12  // 20\n    // simulation of a server-side method for latency compensation                                     // 13  // 21\n    // purposes). not currently true except in a client such as a browser,                             // 14  // 22\n    // since there's usually no point in running stubs unless you have a                               // 15  // 23\n    // zero-latency connection to the user.                                                            // 16  // 24\n                                                                                                       // 17  // 25\n    /**                                                                                                // 18  // 26\n     * @summary Access inside a method invocation.  Boolean value, true if this invocation is a stub.  // 19  // 27\n     * @locus Anywhere                                                                                 // 20  // 28\n     * @name  isSimulation                                                                             // 21  // 29\n     * @memberOf MethodInvocation                                                                      // 22  // 30\n     * @instance                                                                                       // 23  // 31\n     * @type {Boolean}                                                                                 // 24  // 32\n     */                                                                                                // 25  // 33\n    this.isSimulation = options.isSimulation;                                                          // 26  // 34\n                                                                                                       // 27  // 35\n    // call this function to allow other method invocations (from the                                  // 28  // 36\n    // same client) to continue running without waiting for this one to                                // 29  // 37\n    // complete.                                                                                       // 30  // 38\n    this._unblock = options.unblock || function () {};                                                 // 31  // 39\n    this._calledUnblock = false;                                                                       // 32  // 40\n                                                                                                       // 33  // 41\n    // current user id                                                                                 // 34  // 42\n                                                                                                       // 35  // 43\n    /**                                                                                                // 36  // 44\n     * @summary The id of the user that made this method call, or `null` if no user was logged in.     // 37  // 45\n     * @locus Anywhere                                                                                 // 38  // 46\n     * @name  userId                                                                                   // 39  // 47\n     * @memberOf MethodInvocation                                                                      // 40  // 48\n     * @instance                                                                                       // 41  // 49\n     */                                                                                                // 42  // 50\n    this.userId = options.userId;                                                                      // 43  // 51\n                                                                                                       // 44  // 52\n    // sets current user id in all appropriate server contexts and                                     // 45  // 53\n    // reruns subscriptions                                                                            // 46  // 54\n    this._setUserId = options.setUserId || function () {};                                             // 47  // 55\n                                                                                                       // 48  // 56\n    // On the server, the connection this method call came in on.                                      // 49  // 57\n                                                                                                       // 50  // 58\n    /**                                                                                                // 51  // 59\n     * @summary Access inside a method invocation. The [connection](#meteor_onconnection) that this method was received on. `null` if the method is not associated with a connection, eg. a server initiated method call.\n     * @locus Server                                                                                   // 53  // 61\n     * @name  connection                                                                               // 54  // 62\n     * @memberOf MethodInvocation                                                                      // 55  // 63\n     * @instance                                                                                       // 56  // 64\n     */                                                                                                // 57  // 65\n    this.connection = options.connection;                                                              // 58  // 66\n                                                                                                       // 59  // 67\n    // The seed for randomStream value generation                                                      // 60  // 68\n    this.randomSeed = options.randomSeed;                                                              // 61  // 69\n                                                                                                       // 62  // 70\n    // This is set by RandomStream.get; and holds the random stream state                              // 63  // 71\n    this.randomStream = null;                                                                          // 64  // 72\n  };                                                                                                   // 65  // 73\n                                                                                                       // 66  // 74\n  _.extend(DDPCommon.MethodInvocation.prototype, {                                                     // 67  // 75\n    /**                                                                                                // 68  // 76\n     * @summary Call inside a method invocation.  Allow subsequent method from this client to begin running in a new fiber.\n     * @locus Server                                                                                   // 70  // 78\n     * @memberOf MethodInvocation                                                                      // 71  // 79\n     * @instance                                                                                       // 72  // 80\n     */                                                                                                // 73  // 81\n    unblock: function () {                                                                             // 74  // 82\n      var self = this;                                                                                 // 75  // 83\n      self._calledUnblock = true;                                                                      // 76  // 84\n      self._unblock();                                                                                 // 77  // 85\n    },                                                                                                 // 78  // 86\n                                                                                                       // 79  // 87\n    /**                                                                                                // 80  // 88\n     * @summary Set the logged in user.                                                                // 81  // 89\n     * @locus Server                                                                                   // 82  // 90\n     * @memberOf MethodInvocation                                                                      // 83  // 91\n     * @instance                                                                                       // 84  // 92\n     * @param {String | null} userId The value that should be returned by `userId` on this connection. // 85  // 93\n     */                                                                                                // 86  // 94\n    setUserId: function (userId) {                                                                     // 87  // 95\n      var self = this;                                                                                 // 88  // 96\n      if (self._calledUnblock)                                                                         // 89  // 97\n        throw new Error(\"Can't call setUserId in a method after calling unblock\");                     // 90  // 98\n      self.userId = userId;                                                                            // 91  // 99\n      // self._setUserId(userId);                                                                      // 92  // 100\n    }                                                                                                  // 93  // 101\n                                                                                                       // 94  // 102\n  });                                                                                                  // 95  // 103\n}                                                                                                      // 96  // 104\n                                                                                                       // 97  // 105\n/////////////////////////////////////////////////////////////////////////////////////////////////////////     // 106\n                                                                                                              // 107\n}).call(this);                                                                                                // 108\n                                                                                                              // 109\n                                                                                                              // 110\n                                                                                                              // 111\n                                                                                                              // 112\n                                                                                                              // 113\n                                                                                                              // 114\n(function () {                                                                                                // 115\n                                                                                                              // 116\n/////////////////////////////////////////////////////////////////////////////////////////////////////////     // 117\n//                                                                                                     //     // 118\n// packages/dispatch:run-as-user/lib/common.js                                                         //     // 119\n//                                                                                                     //     // 120\n/////////////////////////////////////////////////////////////////////////////////////////////////////////     // 121\n                                                                                                       //     // 122\n// This file adds the actual \"Meteor.runAsUser\" and \"Meteor.isRestricted\" api                          // 1   // 123\n//                                                                                                     // 2   // 124\n// It's done by using a DDP method invocation, setting a user id and a                                 // 3   // 125\n// \"isRestricted\" flag on it.                                                                          // 4   // 126\n//                                                                                                     // 5   // 127\n// If run inside of an existing DDP invocation a nested version will be created.                       // 6   // 128\n                                                                                                       // 7   // 129\nvar restrictedMode = new Meteor.EnvironmentVariable();                                                 // 8   // 130\n                                                                                                       // 9   // 131\n/**                                                                                                    // 10  // 132\n * Returns true if inside a runAsUser user scope                                                       // 11  // 133\n * @return {Boolean} True if in a runAsUser user scope                                                 // 12  // 134\n */                                                                                                    // 13  // 135\nMeteor.isRestricted = function () {                                                                    // 14  // 136\n  return !!restrictedMode.get();                                                                       // 15  // 137\n};                                                                                                     // 16  // 138\n                                                                                                       // 17  // 139\n/**                                                                                                    // 18  // 140\n * Run code restricted                                                                                 // 19  // 141\n * @param  {Function} f Code to run in restricted mode                                                 // 20  // 142\n * @return {Any}   Result of code running                                                              // 21  // 143\n */                                                                                                    // 22  // 144\nMeteor.runRestricted = function(f) {                                                                   // 23  // 145\n  if (Meteor.isRestricted()) {                                                                         // 24  // 146\n    return f();                                                                                        // 25  // 147\n  } else {                                                                                             // 26  // 148\n    return restrictedMode.withValue(true, f);                                                          // 27  // 149\n  }                                                                                                    // 28  // 150\n};                                                                                                     // 29  // 151\n                                                                                                       // 30  // 152\n/**                                                                                                    // 31  // 153\n * Run code unrestricted                                                                               // 32  // 154\n * @param  {Function} f Code to run in restricted mode                                                 // 33  // 155\n * @return {Any}   Result of code running                                                              // 34  // 156\n */                                                                                                    // 35  // 157\nMeteor.runUnrestricted = function(f) {                                                                 // 36  // 158\n  if (Meteor.isRestricted()) {                                                                         // 37  // 159\n    return restrictedMode.withValue(false, f);                                                         // 38  // 160\n  } else {                                                                                             // 39  // 161\n    f();                                                                                               // 40  // 162\n  }                                                                                                    // 41  // 163\n};                                                                                                     // 42  // 164\n                                                                                                       // 43  // 165\n/**                                                                                                    // 44  // 166\n * Run as a user                                                                                       // 45  // 167\n * @param  {String} userId The id of user to run as                                                    // 46  // 168\n * @param  {Function} f      Function to run as user                                                   // 47  // 169\n * @return {Any} Returns function result                                                               // 48  // 170\n */                                                                                                    // 49  // 171\nMeteor.runAsUser = function (userId, f) {                                                              // 50  // 172\n  var currentInvocation = DDP._CurrentInvocation.get();                                                // 51  // 173\n                                                                                                       // 52  // 174\n  // Create a new method invocation                                                                    // 53  // 175\n  var invocation = new DDPCommon.MethodInvocation(                                                     // 54  // 176\n    (currentInvocation) ? currentInvocation : {                                                        // 55  // 177\n      connection: null                                                                                 // 56  // 178\n    }                                                                                                  // 57  // 179\n  );                                                                                                   // 58  // 180\n                                                                                                       // 59  // 181\n  // Now run as user on this invocation                                                                // 60  // 182\n  invocation.setUserId(userId);                                                                        // 61  // 183\n                                                                                                       // 62  // 184\n  return DDP._CurrentInvocation.withValue(invocation, function () {                                    // 63  // 185\n    return f.apply(invocation, [userId]);                                                              // 64  // 186\n  });                                                                                                  // 65  // 187\n};                                                                                                     // 66  // 188\n                                                                                                       // 67  // 189\n/**                                                                                                    // 68  // 190\n * Run as restricted user                                                                              // 69  // 191\n * @param  {Function} f Function to run unrestricted                                                   // 70  // 192\n * @return {Any}   Returns function result                                                             // 71  // 193\n */                                                                                                    // 72  // 194\nMeteor.runAsRestrictedUser = function(userId, f) {                                                     // 73  // 195\n  return Meteor.runRestricted(function() {                                                             // 74  // 196\n    return Meteor.runAsUser(userId, f);                                                                // 75  // 197\n  });                                                                                                  // 76  // 198\n};                                                                                                     // 77  // 199\n                                                                                                       // 78  // 200\nvar adminMode = new Meteor.EnvironmentVariable();                                                      // 79  // 201\n                                                                                                       // 80  // 202\n/**                                                                                                    // 81  // 203\n * Check if code is running isside an invocation / method                                              // 82  // 204\n */                                                                                                    // 83  // 205\nMeteor.isAdmin = function() {                                                                          // 84  // 206\n  return !!adminMode.get();                                                                            // 85  // 207\n};                                                                                                     // 86  // 208\n                                                                                                       // 87  // 209\n/**                                                                                                    // 88  // 210\n * Make the function run outside invocation                                                            // 89  // 211\n */                                                                                                    // 90  // 212\nMeteor.runAsAdmin = function(f) {                                                                      // 91  // 213\n  if (Meteor.isAdmin()) {                                                                              // 92  // 214\n    return f();                                                                                        // 93  // 215\n  } else {                                                                                             // 94  // 216\n    return adminMode.withValue(false, f);                                                              // 95  // 217\n  }                                                                                                    // 96  // 218\n};                                                                                                     // 97  // 219\n                                                                                                       // 98  // 220\n/**                                                                                                    // 99  // 221\n * Make sure code runs outside an invocation on the                                                    // 100\n * server                                                                                              // 101\n */                                                                                                    // 102\nMeteor.runOutsideInvocation = function(f) {                                                            // 103\n  if (Meteor.isServer && DDP._CurrentInvocation.get()) {                                               // 104\n    DDP._CurrentInvocation.withValue(null, f);                                                         // 105\n  } else {                                                                                             // 106\n    f();                                                                                               // 107\n  }                                                                                                    // 108\n};                                                                                                     // 109\n                                                                                                       // 110\n/////////////////////////////////////////////////////////////////////////////////////////////////////////     // 233\n                                                                                                              // 234\n}).call(this);                                                                                                // 235\n                                                                                                              // 236\n                                                                                                              // 237\n                                                                                                              // 238\n                                                                                                              // 239\n                                                                                                              // 240\n                                                                                                              // 241\n(function () {                                                                                                // 242\n                                                                                                              // 243\n/////////////////////////////////////////////////////////////////////////////////////////////////////////     // 244\n//                                                                                                     //     // 245\n// packages/dispatch:run-as-user/lib/collection.overwrites.js                                          //     // 246\n//                                                                                                     //     // 247\n/////////////////////////////////////////////////////////////////////////////////////////////////////////     // 248\n                                                                                                       //     // 249\n// This file overwrites the default metoer Mongo.Collection modifiers: \"insert\",                       // 1   // 250\n// \"update\", \"remove\"                                                                                  // 2   // 251\n//                                                                                                     // 3   // 252\n// The new methods are checking if Meteor is in \"restricted\" mode to apply                             // 4   // 253\n// allow and deny rules if needed.                                                                     // 5   // 254\n//                                                                                                     // 6   // 255\n// This will allow us to run the modifiers inside of a \"Meteor.runAsUser\" with                         // 7   // 256\n// security checks.                                                                                    // 8   // 257\n_.each(['insert', 'update', 'remove'], function (method) {                                             // 9   // 258\n                                                                                                       // 10  // 259\n  var _super = Mongo.Collection.prototype[method];                                                     // 11  // 260\n                                                                                                       // 12  // 261\n  Mongo.Collection.prototype[method] = function ( /* arguments */ ) {                                  // 13  // 262\n    var self = this;                                                                                   // 14  // 263\n    var args = _.toArray(arguments);                                                                   // 15  // 264\n                                                                                                       // 16  // 265\n    // Check if this method is run in restricted mode and collection is                                // 17  // 266\n    // restricted.                                                                                     // 18  // 267\n    if (Meteor.isRestricted() && self._restricted) {                                                   // 19  // 268\n                                                                                                       // 20  // 269\n      var generatedId = null;                                                                          // 21  // 270\n      if (method === 'insert' && !_.has(args[0], '_id')) {                                             // 22  // 271\n        generatedId = self._makeNewID();                                                               // 23  // 272\n      }                                                                                                // 24  // 273\n                                                                                                       // 25  // 274\n      // short circuit if there is no way it will pass.                                                // 26  // 275\n      if (self._validators[method].allow.length === 0) {                                               // 27  // 276\n        throw new Meteor.Error(                                                                        // 28  // 277\n          403, 'Access denied. No allow validators set on restricted ' +                               // 29  // 278\n          'collection for method \\'' + method + '\\'.');                                                // 30  // 279\n      }                                                                                                // 31  // 280\n                                                                                                       // 32  // 281\n      var validatedMethodName =                                                                        // 33  // 282\n        '_validated' + method.charAt(0).toUpperCase() + method.slice(1);                               // 34  // 283\n      args.unshift(Meteor.userId());                                                                   // 35  // 284\n                                                                                                       // 36  // 285\n      if (method === 'insert') {                                                                       // 37  // 286\n        args.push(generatedId);                                                                        // 38  // 287\n                                                                                                       // 39  // 288\n        self[validatedMethodName].apply(self, args);                                                   // 40  // 289\n        // xxx: for now we return the id since self._validatedInsert doesn't                           // 41  // 290\n        // yet return the new id                                                                       // 42  // 291\n        return generatedId || args[0]._id;                                                             // 43  // 292\n                                                                                                       // 44  // 293\n      }                                                                                                // 45  // 294\n                                                                                                       // 46  // 295\n      return self[validatedMethodName].apply(self, args);                                              // 47  // 296\n                                                                                                       // 48  // 297\n    }                                                                                                  // 49  // 298\n                                                                                                       // 50  // 299\n    return _super.apply(self, args);                                                                   // 51  // 300\n  };                                                                                                   // 52  // 301\n                                                                                                       // 53  // 302\n});                                                                                                    // 54  // 303\n                                                                                                       // 55  // 304\n/////////////////////////////////////////////////////////////////////////////////////////////////////////     // 305\n                                                                                                              // 306\n}).call(this);                                                                                                // 307\n                                                                                                              // 308\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['dispatch:run-as-user'] = {};\n\n})();\n","servePath":"/packages/dispatch_run-as-user.js"}]