[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Blaze = Package.blaze.Blaze;\nvar UI = Package.blaze.UI;\nvar Handlebars = Package.blaze.Handlebars;\nvar Template = Package['templating-runtime'].Template;\nvar ReactiveVar = Package['reactive-var'].ReactiveVar;\nvar meteorInstall = Package.modules.meteorInstall;\nvar Buffer = Package.modules.Buffer;\nvar process = Package.modules.process;\nvar Symbol = Package['ecmascript-runtime'].Symbol;\nvar Map = Package['ecmascript-runtime'].Map;\nvar Set = Package['ecmascript-runtime'].Set;\nvar meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nvar Promise = Package.promise.Promise;\nvar HTML = Package.htmljs.HTML;\nvar Spacebars = Package.spacebars.Spacebars;\n\n/* Package-scope variables */\nvar blazeToReact, BlazeComponent;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"gadicc:blaze-react-component\":{\"blaze-react-component-client.js\":[\"babel-runtime/helpers/extends\",\"babel-runtime/helpers/typeof\",\"babel-runtime/helpers/classCallCheck\",\"babel-runtime/helpers/possibleConstructorReturn\",\"babel-runtime/helpers/inherits\",\"react\",\"react-dom\",\"meteor/blaze\",\"meteor/reactive-var\",\"meteor/templating\",function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                //\n// packages/gadicc_blaze-react-component/blaze-react-component-client.js                          //\n//                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                  //\nvar _extends2 = require(\"babel-runtime/helpers/extends\");                                         //\n                                                                                                  //\nvar _extends3 = _interopRequireDefault(_extends2);                                                //\n                                                                                                  //\nvar _typeof2 = require(\"babel-runtime/helpers/typeof\");                                           //\n                                                                                                  //\nvar _typeof3 = _interopRequireDefault(_typeof2);                                                  //\n                                                                                                  //\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");                           //\n                                                                                                  //\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);                                  //\n                                                                                                  //\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");     //\n                                                                                                  //\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);            //\n                                                                                                  //\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");                                       //\n                                                                                                  //\nvar _inherits3 = _interopRequireDefault(_inherits2);                                              //\n                                                                                                  //\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n                                                                                                  //\nmodule.export({                                                                                   // 1\n  blazeToReact: function () {                                                                     // 1\n    return blazeToReact;                                                                          // 1\n  }                                                                                               // 1\n});                                                                                               // 1\nvar React = void 0,                                                                               // 1\n    Component = void 0;                                                                           // 1\nmodule.importSync(\"react\", {                                                                      // 1\n  \"default\": function (v) {                                                                       // 1\n    React = v;                                                                                    // 1\n  },                                                                                              // 1\n  Component: function (v) {                                                                       // 1\n    Component = v;                                                                                // 1\n  }                                                                                               // 1\n}, 0);                                                                                            // 1\nvar ReactDOM = void 0;                                                                            // 1\nmodule.importSync(\"react-dom\", {                                                                  // 1\n  \"default\": function (v) {                                                                       // 1\n    ReactDOM = v;                                                                                 // 1\n  }                                                                                               // 1\n}, 1);                                                                                            // 1\nvar Blaze = void 0;                                                                               // 1\nmodule.importSync(\"meteor/blaze\", {                                                               // 1\n  Blaze: function (v) {                                                                           // 1\n    Blaze = v;                                                                                    // 1\n  }                                                                                               // 1\n}, 2);                                                                                            // 1\nvar ReactiveVar = void 0;                                                                         // 1\nmodule.importSync(\"meteor/reactive-var\", {                                                        // 1\n  ReactiveVar: function (v) {                                                                     // 1\n    ReactiveVar = v;                                                                              // 1\n  }                                                                                               // 1\n}, 3);                                                                                            // 1\nvar Template = void 0;                                                                            // 1\nmodule.importSync(\"meteor/templating\", {                                                          // 1\n  Template: function (v) {                                                                        // 1\n    Template = v;                                                                                 // 1\n  }                                                                                               // 1\n}, 4);                                                                                            // 1\n                                                                                                  //\nvar BlazeComponent = function (_Component) {                                                      //\n  (0, _inherits3.default)(BlazeComponent, _Component);                                            //\n                                                                                                  //\n  function BlazeComponent() {                                                                     //\n    (0, _classCallCheck3.default)(this, BlazeComponent);                                          //\n    return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));     //\n  }                                                                                               //\n                                                                                                  //\n  BlazeComponent.prototype.componentDidMount = function () {                                      //\n    function componentDidMount() {                                                                //\n      this.renderBlazeView();                                                                     // 10\n    }                                                                                             // 11\n                                                                                                  //\n    return componentDidMount;                                                                     //\n  }();                                                                                            //\n                                                                                                  //\n  BlazeComponent.prototype.componentDidUpdate = function () {                                     //\n    function componentDidUpdate(prevProps) {                                                      //\n      if (prevProps.template != this.props.template) {                                            // 14\n        Blaze.remove(this._blazeView);                                                            // 15\n        this.renderBlazeView();                                                                   // 16\n      }                                                                                           // 17\n    }                                                                                             // 18\n                                                                                                  //\n    return componentDidUpdate;                                                                    //\n  }();                                                                                            //\n                                                                                                  //\n  BlazeComponent.prototype.renderBlazeView = function () {                                        //\n    function renderBlazeView() {                                                                  //\n      var _this2 = this;                                                                          // 20\n                                                                                                  //\n      this._blazeData = new ReactiveVar(_.omit(this.props, 'template'));                          // 21\n      var template = void 0,                                                                      // 23\n          tArg = this.props.template;                                                             // 23\n                                                                                                  //\n      if (typeof tArg === 'string') {                                                             // 24\n        template = Template[tArg];                                                                // 25\n        if (!template) throw new Error(\"No Template[\\\"\" + tArg + \"\\\"] exists.  If this template \" + \"originates in your app, make sure you have the `templating` \" + \"package installed (and not, for e.g. `static-html`)\");\n      } else if (tArg instanceof Blaze.Template) {                                                // 30\n        template = tArg;                                                                          // 31\n      } else {                                                                                    // 32\n        throw new Error(\"Invalid template= argument specified.  Expected \" + \"the string name of an existing Template, or the template \" + \"itself, instead got ''\" + (typeof tArg === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(tArg)) + \": \" + JSON.stringify(tArg));\n      }                                                                                           // 37\n                                                                                                  //\n      this._blazeView = Blaze.renderWithData(template, function () {                              // 39\n        return _this2._blazeData.get();                                                           // 41\n      }, ReactDOM.findDOMNode(this._blazeRef));                                                   // 41\n    }                                                                                             // 44\n                                                                                                  //\n    return renderBlazeView;                                                                       //\n  }();                                                                                            //\n                                                                                                  //\n  BlazeComponent.prototype.shouldComponentUpdate = function () {                                  //\n    function shouldComponentUpdate(nextProps) {                                                   //\n      // Never call render() for props except template again; Blaze will do what's necessary.     // 47\n      return nextProps.template !== this.props.template;                                          // 48\n    }                                                                                             // 49\n                                                                                                  //\n    return shouldComponentUpdate;                                                                 //\n  }();                                                                                            //\n                                                                                                  //\n  BlazeComponent.prototype.componentWillReceiveProps = function () {                              //\n    function componentWillReceiveProps(nextProps) {                                               //\n      this._blazeData.set(_.omit(nextProps, 'template'));                                         // 52\n    }                                                                                             // 53\n                                                                                                  //\n    return componentWillReceiveProps;                                                             //\n  }();                                                                                            //\n                                                                                                  //\n  BlazeComponent.prototype.componentWillUnmount = function () {                                   //\n    function componentWillUnmount() {                                                             //\n      Blaze.remove(this._blazeView);                                                              // 56\n    }                                                                                             // 57\n                                                                                                  //\n    return componentWillUnmount;                                                                  //\n  }();                                                                                            //\n                                                                                                  //\n  BlazeComponent.prototype.render = function () {                                                 //\n    function render() {                                                                           //\n      var _this3 = this;                                                                          // 59\n                                                                                                  //\n      return React.createElement(\"span\", {                                                        // 60\n        className: this.props.className || '',                                                    // 60\n        ref: function (c) {                                                                       // 60\n          return _this3._blazeRef = c;                                                            // 60\n        }                                                                                         // 60\n      });                                                                                         // 60\n    }                                                                                             // 61\n                                                                                                  //\n    return render;                                                                                //\n  }();                                                                                            //\n                                                                                                  //\n  return BlazeComponent;                                                                          //\n}(Component);                                                                                     //\n                                                                                                  //\nmodule.runModuleSetters(blazeToReact = function (template) {                                      // 65\n  return function (props) {                                                                       // 66\n    return React.createElement(BlazeComponent, (0, _extends3.default)({}, props, {                // 66\n      template: template                                                                          // 66\n    }));                                                                                          // 66\n  };                                                                                              // 66\n});                                                                                               // 67\nmodule.export(\"default\", exports.default = BlazeComponent);                                       // 1\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]}}}},{\"extensions\":[\".js\",\".json\"]});\nvar exports = require(\"./node_modules/meteor/gadicc:blaze-react-component/blaze-react-component-client.js\");\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package['gadicc:blaze-react-component'] = exports, {\n  BlazeComponent: BlazeComponent,\n  blazeToReact: blazeToReact\n});\n\n})();\n","servePath":"/packages/gadicc_blaze-react-component.js","sourceMap":{"version":3,"sources":["/packages/gadicc:blaze-react-component/blaze-react-component-client.js"],"names":["module","export","blazeToReact","React","Component","importSync","v","ReactDOM","Blaze","ReactiveVar","Template","BlazeComponent","componentDidMount","renderBlazeView","componentDidUpdate","prevProps","template","props","remove","_blazeView","_blazeData","_","omit","tArg","Error","JSON","stringify","renderWithData","get","findDOMNode","_blazeRef","shouldComponentUpdate","nextProps","componentWillReceiveProps","set","componentWillUnmount","render","className","c","exports","default"],"mappings":"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","file":"/packages/gadicc_blaze-react-component.js","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Blaze } from 'meteor/blaze';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { Template } from 'meteor/templating';\n\nclass BlazeComponent extends Component {\n\n  componentDidMount() {\n    this.renderBlazeView();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.template != this.props.template) {\n      Blaze.remove(this._blazeView);\n      this.renderBlazeView();\n    }\n  }\n\n  renderBlazeView() {\n    this._blazeData = new ReactiveVar(_.omit(this.props, 'template'));\n\n    let template, tArg = this.props.template;\n    if (typeof tArg === 'string') {\n      template = Template[tArg];\n      if (!template)\n        throw new Error(`No Template[\"${tArg}\"] exists.  If this template `\n          + \"originates in your app, make sure you have the `templating` \"\n          + \"package installed (and not, for e.g. `static-html`)\");\n    } else if (tArg instanceof Blaze.Template) {\n      template = tArg;\n    } else {\n        throw new Error(\"Invalid template= argument specified.  Expected \"\n          + \"the string name of an existing Template, or the template \"\n          + \"itself, instead got ''\" + typeof tArg + \": \"\n          + JSON.stringify(tArg));\n    }\n\n    this._blazeView = Blaze.renderWithData(\n      template,\n      () => this._blazeData.get(),\n      ReactDOM.findDOMNode(this._blazeRef)\n    );\n  }\n\n  shouldComponentUpdate(nextProps) {\n    // Never call render() for props except template again; Blaze will do what's necessary.\n    return nextProps.template !== this.props.template;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this._blazeData.set(_.omit(nextProps, 'template'));\n  }\n\n  componentWillUnmount() {\n    Blaze.remove(this._blazeView);\n  }\n\n  render() {\n    return ( <span className={this.props.className || ''} ref={(c) => this._blazeRef = c} /> );\n  }\n\n}\n\nblazeToReact = function(template) {\n  return (props) => <BlazeComponent {...props} template={template} />;\n}\n\nexport { blazeToReact };\nexport default BlazeComponent;\n"]}}]