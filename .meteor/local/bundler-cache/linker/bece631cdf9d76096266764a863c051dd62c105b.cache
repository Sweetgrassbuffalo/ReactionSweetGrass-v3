[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Mongo = Package.mongo.Mongo;\nvar _ = Package.underscore._;\nvar LocalCollection = Package.minimongo.LocalCollection;\nvar Minimongo = Package.minimongo.Minimongo;\nvar Random = Package.random.Random;\nvar EJSON = Package.ejson.EJSON;\nvar meteorInstall = Package.modules.meteorInstall;\nvar Buffer = Package.modules.Buffer;\nvar process = Package.modules.process;\nvar Symbol = Package['ecmascript-runtime'].Symbol;\nvar Map = Package['ecmascript-runtime'].Map;\nvar Set = Package['ecmascript-runtime'].Set;\nvar meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nvar Promise = Package.promise.Promise;\n\n/* Package-scope variables */\nvar Security;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"ongoworks:security\":{\"lib\":{\"client\":{\"Security.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// packages/ongoworks_security/lib/client/Security.js                                               //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\n// We only stub on the client to prevent errors if putting in common code                           // 1\nSecurity = {                                                                                        // 3\n  // the starting point of the chain                                                                // 4\n  permit: function () {                                                                             // 5\n    function permit() {                                                                             // 5\n      return new Security.Rule();                                                                   // 6\n    }                                                                                               // 7\n                                                                                                    //\n    return permit;                                                                                  // 5\n  }(),                                                                                              // 5\n  can: function () {                                                                                // 8\n    function can() {                                                                                // 8\n      return new Security.Check();                                                                  // 9\n    }                                                                                               // 10\n                                                                                                    //\n    return can;                                                                                     // 8\n  }(),                                                                                              // 8\n  defineMethod: function () {                                                                       // 11\n    function securityDefineMethod(name) {                                                           // 11\n      // Check whether a rule with the given name already exists; can't overwrite                   // 12\n      if (Security.Rule.prototype[name]) {                                                          // 13\n        throw new Error('A security method with the name \"' + name + '\" has already been defined');\n      }                                                                                             // 15\n                                                                                                    //\n      Security.Rule.prototype[name] = function () {                                                 // 16\n        return this;                                                                                // 17\n      };                                                                                            // 18\n    }                                                                                               // 19\n                                                                                                    //\n    return securityDefineMethod;                                                                    // 11\n  }()                                                                                               // 11\n};                                                                                                  // 3\n                                                                                                    //\nMongo.Collection.prototype.permit = function () {                                                   // 22\n  return Security.permit().collections(this);                                                       // 23\n};                                                                                                  // 24\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Security.Rule.js\":[\"babel-runtime/helpers/classCallCheck\",function(require){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// packages/ongoworks_security/lib/client/Security.Rule.js                                          //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");                             //\n                                                                                                    //\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);                                    //\n                                                                                                    //\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }   //\n                                                                                                    //\n// We only stub on the client to prevent errors if putting in common code                           // 1\nSecurity.Rule = function () {                                                                       // 3\n  function _class(types) {                                                                          // 4\n    (0, _classCallCheck3.default)(this, _class);                                                    // 4\n  }                                                                                                 // 4\n                                                                                                    //\n  _class.prototype.collections = function () {                                                      // 3\n    function collections(_collections) {                                                            // 3\n      return this;                                                                                  // 7\n    }                                                                                               // 8\n                                                                                                    //\n    return collections;                                                                             // 3\n  }();                                                                                              // 3\n                                                                                                    //\n  _class.prototype.allowInClientCode = function () {                                                // 3\n    function allowInClientCode() {}                                                                 // 3\n                                                                                                    //\n    return allowInClientCode;                                                                       // 3\n  }();                                                                                              // 3\n                                                                                                    //\n  _class.prototype.allow = function () {                                                            // 3\n    function allow() {                                                                              // 3\n      return true;                                                                                  // 13\n    }                                                                                               // 14\n                                                                                                    //\n    return allow;                                                                                   // 3\n  }();                                                                                              // 3\n                                                                                                    //\n  return _class;                                                                                    // 3\n}();                                                                                                // 3\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"Security.Check.js\":[\"babel-runtime/helpers/classCallCheck\",function(require){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// packages/ongoworks_security/lib/client/Security.Check.js                                         //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");                             //\n                                                                                                    //\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);                                    //\n                                                                                                    //\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }   //\n                                                                                                    //\n// We only stub on the client to prevent errors if putting in common code                           // 1\nSecurity.Check = function () {                                                                      // 3\n  function _class() {                                                                               // 4\n    (0, _classCallCheck3.default)(this, _class);                                                    // 4\n  }                                                                                                 // 4\n                                                                                                    //\n  _class.prototype.for = function () {                                                              // 3\n    function _for() {                                                                               // 3\n      return this;                                                                                  // 7\n    }                                                                                               // 8\n                                                                                                    //\n    return _for;                                                                                    // 3\n  }();                                                                                              // 3\n                                                                                                    //\n  _class.prototype.insert = function () {                                                           // 3\n    function insert() {                                                                             // 3\n      return this;                                                                                  // 11\n    }                                                                                               // 12\n                                                                                                    //\n    return insert;                                                                                  // 3\n  }();                                                                                              // 3\n                                                                                                    //\n  _class.prototype.update = function () {                                                           // 3\n    function update() {                                                                             // 3\n      return this;                                                                                  // 15\n    }                                                                                               // 16\n                                                                                                    //\n    return update;                                                                                  // 3\n  }();                                                                                              // 3\n                                                                                                    //\n  _class.prototype.remove = function () {                                                           // 3\n    function remove() {                                                                             // 3\n      return this;                                                                                  // 19\n    }                                                                                               // 20\n                                                                                                    //\n    return remove;                                                                                  // 3\n  }();                                                                                              // 3\n                                                                                                    //\n  _class.prototype.read = function () {                                                             // 3\n    function read() {                                                                               // 3\n      return this;                                                                                  // 23\n    }                                                                                               // 24\n                                                                                                    //\n    return read;                                                                                    // 3\n  }();                                                                                              // 3\n                                                                                                    //\n  _class.prototype.download = function () {                                                         // 3\n    function download() {                                                                           // 3\n      return this;                                                                                  // 27\n    }                                                                                               // 28\n                                                                                                    //\n    return download;                                                                                // 3\n  }();                                                                                              // 3\n                                                                                                    //\n  _class.prototype.check = function () {                                                            // 3\n    function check() {                                                                              // 3\n      return true;                                                                                  // 31\n    }                                                                                               // 32\n                                                                                                    //\n    return check;                                                                                   // 3\n  }();                                                                                              // 3\n                                                                                                    //\n  _class.prototype.throw = function () {                                                            // 3\n    function _throw() {}                                                                            // 3\n                                                                                                    //\n    return _throw;                                                                                  // 3\n  }();                                                                                              // 3\n                                                                                                    //\n  return _class;                                                                                    // 3\n}();                                                                                                // 3\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]},\"builtInRules.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// packages/ongoworks_security/lib/builtInRules.js                                                  //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\n/*                                                                                                  // 1\n * This file defines built-in restriction methods                                                   //\n */ /*                                                                                              //\n     * No one                                                                                       //\n     */Security.defineMethod(\"never\", {                                                             //\n  fetch: [],                                                                                        // 10\n  transform: null,                                                                                  // 11\n  allow: function () {                                                                              // 12\n    return false;                                                                                   // 13\n  }                                                                                                 // 14\n}); /*                                                                                              // 9\n     * Logged In                                                                                    //\n     */                                                                                             //\nSecurity.defineMethod(\"ifLoggedIn\", {                                                               // 21\n  fetch: [],                                                                                        // 22\n  transform: null,                                                                                  // 23\n  allow: function (type, arg, userId) {                                                             // 24\n    return !!userId;                                                                                // 25\n  }                                                                                                 // 26\n}); /*                                                                                              // 21\n     * Specific User ID                                                                             //\n     */                                                                                             //\nSecurity.defineMethod(\"ifHasUserId\", {                                                              // 33\n  fetch: [],                                                                                        // 34\n  transform: null,                                                                                  // 35\n  allow: function (type, arg, userId) {                                                             // 36\n    return userId === arg;                                                                          // 37\n  }                                                                                                 // 38\n}); /*                                                                                              // 33\n     * Specific Roles                                                                               //\n     */ /*                                                                                          //\n         * alanning:roles support                                                                   //\n         */                                                                                         //\n                                                                                                    //\nif (Package && Package[\"alanning:roles\"]) {                                                         // 48\n  var Roles = Package[\"alanning:roles\"].Roles;                                                      // 50\n  Security.defineMethod(\"ifHasRole\", {                                                              // 52\n    fetch: [],                                                                                      // 53\n    transform: null,                                                                                // 54\n    allow: function (type, arg, userId) {                                                           // 55\n      if (!arg) throw new Error('ifHasRole security rule method requires an argument');             // 56\n                                                                                                    //\n      if (arg.role) {                                                                               // 57\n        return Roles.userIsInRole(userId, arg.role, arg.group);                                     // 58\n      } else {                                                                                      // 59\n        return Roles.userIsInRole(userId, arg);                                                     // 60\n      }                                                                                             // 61\n    }                                                                                               // 62\n  });                                                                                               // 52\n} /*                                                                                                // 65\n   * nicolaslopezj:roles support                                                                    //\n   * Note: doesn't support groups                                                                   //\n   */                                                                                               //\n                                                                                                    //\nif (Package && Package[\"nicolaslopezj:roles\"]) {                                                    // 71\n  var Roles = Package[\"nicolaslopezj:roles\"].Roles;                                                 // 73\n  Security.defineMethod(\"ifHasRole\", {                                                              // 75\n    fetch: [],                                                                                      // 76\n    transform: null,                                                                                // 77\n    allow: function (type, arg, userId) {                                                           // 78\n      if (!arg) throw new Error('ifHasRole security rule method requires an argument');             // 79\n      return Roles.userHasRole(userId, arg);                                                        // 80\n    }                                                                                               // 81\n  });                                                                                               // 75\n} /*                                                                                                // 84\n   * Specific Properties                                                                            //\n   */                                                                                               //\n                                                                                                    //\nSecurity.defineMethod(\"onlyProps\", {                                                                // 90\n  fetch: [],                                                                                        // 91\n  transform: null,                                                                                  // 92\n  allow: function (type, arg, userId, doc, fieldNames) {                                            // 93\n    if (!_.isArray(arg)) arg = [arg];                                                               // 94\n    fieldNames = fieldNames || _.keys(doc);                                                         // 96\n    return _.every(fieldNames, function (fieldName) {                                               // 98\n      return _.contains(arg, fieldName);                                                            // 99\n    });                                                                                             // 100\n  }                                                                                                 // 101\n});                                                                                                 // 90\nSecurity.defineMethod(\"exceptProps\", {                                                              // 104\n  fetch: [],                                                                                        // 105\n  transform: null,                                                                                  // 106\n  allow: function (type, arg, userId, doc, fieldNames) {                                            // 107\n    if (!_.isArray(arg)) arg = [arg];                                                               // 108\n    fieldNames = fieldNames || _.keys(doc);                                                         // 110\n    return !_.any(fieldNames, function (fieldName) {                                                // 112\n      return _.contains(arg, fieldName);                                                            // 113\n    });                                                                                             // 114\n  }                                                                                                 // 115\n});                                                                                                 // 104\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}}},{\"extensions\":[\".js\",\".json\"]});\nrequire(\"./node_modules/meteor/ongoworks:security/lib/client/Security.js\");\nrequire(\"./node_modules/meteor/ongoworks:security/lib/client/Security.Rule.js\");\nrequire(\"./node_modules/meteor/ongoworks:security/lib/client/Security.Check.js\");\nrequire(\"./node_modules/meteor/ongoworks:security/lib/builtInRules.js\");\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package['ongoworks:security'] = {}, {\n  Security: Security\n});\n\n})();\n","servePath":"/packages/ongoworks_security.js","sourceMap":{"version":3,"sources":["/packages/ongoworks:security/lib/client/Security.js","/packages/ongoworks:security/lib/client/Security.Rule.js","/packages/ongoworks:security/lib/client/Security.Check.js","/packages/ongoworks:security/lib/builtInRules.js"],"names":["Security","permit","Rule","can","Check","defineMethod","securityDefineMethod","name","prototype","Error","Mongo","Collection","collections","types","allowInClientCode","allow","for","insert","update","remove","read","download","check","throw","fetch","transform","type","arg","userId","Package","Roles","role","userIsInRole","group","userHasRole","doc","fieldNames","_","isArray","keys","every","fieldName","contains","any"],"mappings":"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","file":"/packages/ongoworks_security.js","sourcesContent":["// We only stub on the client to prevent errors if putting in common code\n\nSecurity = {\n  // the starting point of the chain\n  permit: function permit() {\n    return new Security.Rule();\n  },\n  can: function can() {\n    return new Security.Check();\n  },\n  defineMethod: function securityDefineMethod(name) {\n    // Check whether a rule with the given name already exists; can't overwrite\n    if (Security.Rule.prototype[name]) {\n      throw new Error('A security method with the name \"' + name + '\" has already been defined');\n    }\n    Security.Rule.prototype[name] = function () {\n      return this;\n    };\n  }\n};\n\nMongo.Collection.prototype.permit = function () {\n  return Security.permit().collections(this);\n};\n","// We only stub on the client to prevent errors if putting in common code\n\nSecurity.Rule = class {\n  constructor(types) {}\n\n  collections(collections) {\n    return this;\n  }\n\n  allowInClientCode() {}\n\n  allow() {\n    return true;\n  }\n}\n","// We only stub on the client to prevent errors if putting in common code\n\nSecurity.Check = class {\n  constructor() {}\n\n  for() {\n    return this;\n  }\n\n  insert() {\n    return this;\n  }\n\n  update() {\n    return this;\n  }\n\n  remove() {\n    return this;\n  }\n\n  read() {\n    return this;\n  }\n\n  download() {\n    return this;\n  }\n\n  check() {\n    return true;\n  }\n\n  throw() {}\n}\n","/*\n * This file defines built-in restriction methods\n */\n\n/*\n * No one\n */\n\nSecurity.defineMethod(\"never\", {\n  fetch: [],\n  transform: null,\n  allow() {\n    return false;\n  },\n});\n\n/*\n * Logged In\n */\n\nSecurity.defineMethod(\"ifLoggedIn\", {\n  fetch: [],\n  transform: null,\n  allow(type, arg, userId) {\n    return !!userId;\n  },\n});\n\n/*\n * Specific User ID\n */\n\nSecurity.defineMethod(\"ifHasUserId\", {\n  fetch: [],\n  transform: null,\n  allow(type, arg, userId) {\n    return userId === arg;\n  },\n});\n\n/*\n * Specific Roles\n */\n\n/*\n * alanning:roles support\n */\nif (Package && Package[\"alanning:roles\"]) {\n\n  var Roles = Package[\"alanning:roles\"].Roles;\n\n  Security.defineMethod(\"ifHasRole\", {\n    fetch: [],\n    transform: null,\n    allow(type, arg, userId) {\n      if (!arg) throw new Error('ifHasRole security rule method requires an argument');\n      if (arg.role) {\n        return Roles.userIsInRole(userId, arg.role, arg.group);\n      } else {\n        return Roles.userIsInRole(userId, arg);\n      }\n    },\n  });\n\n}\n\n/*\n * nicolaslopezj:roles support\n * Note: doesn't support groups\n */\nif (Package && Package[\"nicolaslopezj:roles\"]) {\n\n  var Roles = Package[\"nicolaslopezj:roles\"].Roles;\n\n  Security.defineMethod(\"ifHasRole\", {\n    fetch: [],\n    transform: null,\n    allow(type, arg, userId) {\n      if (!arg) throw new Error('ifHasRole security rule method requires an argument');\n      return Roles.userHasRole(userId, arg);\n    }\n  });\n\n}\n\n/*\n * Specific Properties\n */\n\nSecurity.defineMethod(\"onlyProps\", {\n  fetch: [],\n  transform: null,\n  allow(type, arg, userId, doc, fieldNames) {\n    if (!_.isArray(arg)) arg = [arg];\n\n    fieldNames = fieldNames || _.keys(doc);\n\n    return _.every(fieldNames, function (fieldName) {\n      return _.contains(arg, fieldName);\n    });\n  },\n});\n\nSecurity.defineMethod(\"exceptProps\", {\n  fetch: [],\n  transform: null,\n  allow(type, arg, userId, doc, fieldNames) {\n    if (!_.isArray(arg)) arg = [arg];\n\n    fieldNames = fieldNames || _.keys(doc);\n\n    return !_.any(fieldNames, function (fieldName) {\n      return _.contains(arg, fieldName);\n    });\n  },\n});\n"]}}]