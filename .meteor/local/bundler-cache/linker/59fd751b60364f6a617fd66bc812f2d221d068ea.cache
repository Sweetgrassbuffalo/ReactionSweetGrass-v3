[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar FS = Package['cfs:base-package'].FS;\nvar Blaze = Package.blaze.Blaze;\nvar UI = Package.blaze.UI;\nvar Handlebars = Package.blaze.Handlebars;\nvar Template = Package['templating-runtime'].Template;\nvar HTML = Package.htmljs.HTML;\nvar Spacebars = Package.spacebars.Spacebars;\n\n/* Package-scope variables */\nvar Helpers;\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                               //\n// packages/cfs_ui/packages/cfs_ui.js                                                                            //\n//                                                                                                               //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                 //\n(function () {                                                                                                   // 1\n                                                                                                                 // 2\n////////////////////////////////////////////////////////////////////////////////////////////////////////////     // 3\n//                                                                                                        //     // 4\n// packages/cfs:ui/template.ui.js                                                                         //     // 5\n//                                                                                                        //     // 6\n////////////////////////////////////////////////////////////////////////////////////////////////////////////     // 7\n                                                                                                          //     // 8\n                                                                                                          // 1   // 9\nTemplate.__checkName(\"_fs_DeleteButton\");                                                                 // 2   // 10\nTemplate[\"_fs_DeleteButton\"] = new Template(\"Template._fs_DeleteButton\", (function() {                    // 3   // 11\n  var view = this;                                                                                        // 4   // 12\n  return Blaze._TemplateWith(function() {                                                                 // 5   // 13\n    return {                                                                                              // 6   // 14\n      atts: Spacebars.call(view.lookup(\".\")),                                                             // 7   // 15\n      fileObj: Spacebars.call(view.lookup(\"..\")),                                                         // 8   // 16\n      contentBlock: Spacebars.call(view.templateContentBlock)                                             // 9   // 17\n    };                                                                                                    // 10  // 18\n  }, function() {                                                                                         // 11  // 19\n    return Spacebars.include(view.lookupTemplate(\"_fs_DeleteButton2\"));                                   // 12  // 20\n  });                                                                                                     // 13  // 21\n}));                                                                                                      // 14  // 22\n                                                                                                          // 15  // 23\nTemplate.__checkName(\"_fs_DeleteButton2\");                                                                // 16  // 24\nTemplate[\"_fs_DeleteButton2\"] = new Template(\"Template._fs_DeleteButton2\", (function() {                  // 17  // 25\n  var view = this;                                                                                        // 18  // 26\n  return HTML.BUTTON(HTML.Attrs({                                                                         // 19  // 27\n    type: \"button\"                                                                                        // 20  // 28\n  }, function() {                                                                                         // 21  // 29\n    return Spacebars.attrMustache(view.lookup(\"atts\"));                                                   // 22  // 30\n  }), Spacebars.With(function() {                                                                         // 23  // 31\n    return Spacebars.call(view.lookup(\"contentBlock\"));                                                   // 24  // 32\n  }, function() {                                                                                         // 25  // 33\n    return Spacebars.include(view.lookupTemplate(\".\"));                                                   // 26  // 34\n  }, function() {                                                                                         // 27  // 35\n    return \"Delete\";                                                                                      // 28  // 36\n  }));                                                                                                    // 29  // 37\n}));                                                                                                      // 30  // 38\n                                                                                                          // 31  // 39\nTemplate.__checkName(\"_fs_UploadProgressBar\");                                                            // 32  // 40\nTemplate[\"_fs_UploadProgressBar\"] = new Template(\"Template._fs_UploadProgressBar\", (function() {          // 33  // 41\n  var view = this;                                                                                        // 34  // 42\n  return Spacebars.With(function() {                                                                      // 35  // 43\n    return Spacebars.dataMustache(view.lookup(\"getAttsAndFileObj\"), view.lookup(\".\"), view.lookup(\"..\")); // 36  // 44\n  }, function() {                                                                                         // 37  // 45\n    return [ \"\\n  \", Blaze.If(function() {                                                                // 38  // 46\n      return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"useBootstrap\"));                             // 39  // 47\n    }, function() {                                                                                       // 40  // 48\n      return [ \"\\n  \", HTML.DIV({                                                                         // 41  // 49\n        \"class\": \"progress\"                                                                               // 42  // 50\n      }, \"\\n  \t\", HTML.DIV(HTML.Attrs(function() {                                                        // 43  // 51\n        return Spacebars.attrMustache(Spacebars.dot(view.lookup(\".\"), \"atts\"));                           // 44  // 52\n      }), \"\\n        \", Blaze.If(function() {                                                             // 45  // 53\n        return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"showPercent\"));                            // 46  // 54\n      }, function() {                                                                                     // 47  // 55\n        return [ \"\\n        \", Blaze.View(function() {                                                    // 48  // 56\n          return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"progress\"));                         // 49  // 57\n        }), \"%\\n        \" ];                                                                              // 50  // 58\n      }, function() {                                                                                     // 51  // 59\n        return [ \"\\n\t    \", HTML.SPAN({                                                                   // 52  // 60\n          \"class\": \"sr-only\"                                                                              // 53  // 61\n        }, Blaze.View(function() {                                                                        // 54  // 62\n          return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"progress\"));                         // 55  // 63\n        }), \"% Complete\"), \"\\n        \" ];                                                                // 56  // 64\n      }), \"\\n    \"), \"\\n  \"), \"\\n  \" ];                                                                   // 57  // 65\n    }, function() {                                                                                       // 58  // 66\n      return [ \"\\n  \", Blaze.If(function() {                                                              // 59  // 67\n        return Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"useSemantic\"));                            // 60  // 68\n      }, function() {                                                                                     // 61  // 69\n        return [ \"\\n  \", HTML.DIV(HTML.Attrs(function() {                                                 // 62  // 70\n          return Spacebars.attrMustache(Spacebars.dot(view.lookup(\".\"), \"atts\"));                         // 63  // 71\n        }), \"\\n    \", HTML.DIV({                                                                          // 64  // 72\n          \"class\": \"bar\",                                                                                 // 65  // 73\n          style: function() {                                                                             // 66  // 74\n            return [ \"width: \", Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"progress\")), \"%\" ];   // 67  // 75\n          }                                                                                               // 68  // 76\n        }), \"\\n  \"), \"\\n  \" ];                                                                            // 69  // 77\n      }, function() {                                                                                     // 70  // 78\n        return [ \"\\n  \", HTML.PROGRESS(HTML.Attrs({                                                       // 71  // 79\n          value: function() {                                                                             // 72  // 80\n            return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"progress\"));                       // 73  // 81\n          },                                                                                              // 74  // 82\n          max: \"100\"                                                                                      // 75  // 83\n        }, function() {                                                                                   // 76  // 84\n          return Spacebars.attrMustache(Spacebars.dot(view.lookup(\".\"), \"atts\"));                         // 77  // 85\n        }), Blaze.View(function() {                                                                       // 78  // 86\n          return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"progress\"));                         // 79  // 87\n        }), \"%\"), \"\\n  \" ];                                                                               // 80  // 88\n      }), \"\\n  \" ];                                                                                       // 81  // 89\n    }), \"\\n  \" ];                                                                                         // 82  // 90\n  });                                                                                                     // 83  // 91\n}));                                                                                                      // 84  // 92\n                                                                                                          // 85  // 93\n////////////////////////////////////////////////////////////////////////////////////////////////////////////     // 94\n                                                                                                                 // 95\n}).call(this);                                                                                                   // 96\n                                                                                                                 // 97\n                                                                                                                 // 98\n                                                                                                                 // 99\n                                                                                                                 // 100\n                                                                                                                 // 101\n                                                                                                                 // 102\n(function () {                                                                                                   // 103\n                                                                                                                 // 104\n////////////////////////////////////////////////////////////////////////////////////////////////////////////     // 105\n//                                                                                                        //     // 106\n// packages/cfs:ui/ui.js                                                                                  //     // 107\n//                                                                                                        //     // 108\n////////////////////////////////////////////////////////////////////////////////////////////////////////////     // 109\n                                                                                                          //     // 110\n/* global Helpers:true */                                                                                 // 1   // 111\n/* global Template */                                                                                     // 2   // 112\n/* global FS */                                                                                           // 3   // 113\n                                                                                                          // 4   // 114\nHelpers = {};                                                                                             // 5   // 115\n                                                                                                          // 6   // 116\n// We expose the properties of Helpers on `FS` globally                                                   // 7   // 117\nTemplate.registerHelper('FS', Helpers);                                                                   // 8   // 118\n                                                                                                          // 9   // 119\n// Usage: {{#with FS.GetFile collectionName id}}{{/with}}                                                 // 10  // 120\nHelpers.GetFile = function cfsGetFile(collectionName, id) {                                               // 11  // 121\n  var collection = FS._collections[collectionName];                                                       // 12  // 122\n  return collection ? collection.findOne(id) : null;                                                      // 13  // 123\n};                                                                                                        // 14  // 124\n                                                                                                          // 15  // 125\n// Usage: {{> FS.DeleteButton}} or {{#FS.DeleteButton}}Button Text{{/FS.DeleteButton}} (with FS.File as current context)\n// Supported Options: any attribute                                                                       // 17  // 127\nHelpers.DeleteButton = Template._fs_DeleteButton;                                                         // 18  // 128\n                                                                                                          // 19  // 129\nTemplate._fs_DeleteButton2.events({                                                                       // 20  // 130\n  'click button': function(event, template) {                                                             // 21  // 131\n    var fileObj = template.data.fileObj;                                                                  // 22  // 132\n    if (!fileObj) {                                                                                       // 23  // 133\n      return false;                                                                                       // 24  // 134\n    }                                                                                                     // 25  // 135\n    fileObj.remove();                                                                                     // 26  // 136\n    return false;                                                                                         // 27  // 137\n  }                                                                                                       // 28  // 138\n});                                                                                                       // 29  // 139\n                                                                                                          // 30  // 140\n// Usage: {{> FS.UploadProgressBar attribute=value}} (with FS.File as current context or not for overall) // 31  // 141\nHelpers.UploadProgressBar = Template._fs_UploadProgressBar;                                               // 32  // 142\n                                                                                                          // 33  // 143\nTemplate._fs_UploadProgressBar.helpers({                                                                  // 34  // 144\n  getAttsAndFileObj: function getAttsAndFileObj(atts, fileObj) {                                          // 35  // 145\n    if (atts instanceof FS.File) {                                                                        // 36  // 146\n      fileObj = atts;                                                                                     // 37  // 147\n      atts = {};                                                                                          // 38  // 148\n    } else {                                                                                              // 39  // 149\n      atts = atts || {};                                                                                  // 40  // 150\n    }                                                                                                     // 41  // 151\n                                                                                                          // 42  // 152\n    var progressFunc;                                                                                     // 43  // 153\n    if (fileObj instanceof FS.File) {                                                                     // 44  // 154\n      progressFunc = function () {                                                                        // 45  // 155\n        return fileObj.uploadProgress();                                                                  // 46  // 156\n      };                                                                                                  // 47  // 157\n    } else {                                                                                              // 48  // 158\n      progressFunc = function () {                                                                        // 49  // 159\n        return FS.HTTP.uploadQueue.progress();                                                            // 50  // 160\n      };                                                                                                  // 51  // 161\n    }                                                                                                     // 52  // 162\n                                                                                                          // 53  // 163\n    // We clone atts so that we can remove bootstrap or semantic props without losing them for            // 54  // 164\n    // later reactive reruns.                                                                             // 55  // 165\n    atts = FS.Utility.extend({}, atts);                                                                   // 56  // 166\n                                                                                                          // 57  // 167\n    var useBootstrap = false, useSemantic = false, show_percentage = false;                               // 58  // 168\n    if (atts.semantic) {                                                                                  // 59  // 169\n      useSemantic = true;                                                                                 // 60  // 170\n      if (typeof atts[\"class\"] === \"string\") {                                                            // 61  // 171\n        atts[\"class\"] += \" ui progress\";                                                                  // 62  // 172\n      } else {                                                                                            // 63  // 173\n        atts[\"class\"] = \"ui progress\";                                                                    // 64  // 174\n      }                                                                                                   // 65  // 175\n      delete atts.semantic;                                                                               // 66  // 176\n    } else if (atts.bootstrap) {                                                                          // 67  // 177\n      useBootstrap = true;                                                                                // 68  // 178\n      var progress = progressFunc();                                                                      // 69  // 179\n      if (typeof atts[\"class\"] === \"string\") {                                                            // 70  // 180\n        atts[\"class\"] += \" progress-bar\";                                                                 // 71  // 181\n      } else {                                                                                            // 72  // 182\n        atts[\"class\"] = \"progress-bar\";                                                                   // 73  // 183\n      }                                                                                                   // 74  // 184\n      if (typeof atts.style === \"string\") {                                                               // 75  // 185\n        atts.style += \" width: \" + progress + \"%;\";                                                       // 76  // 186\n      } else {                                                                                            // 77  // 187\n        atts.style = \"width: \" + progress + \"%;\";                                                         // 78  // 188\n      }                                                                                                   // 79  // 189\n      if (atts.showPercent) show_percentage = true;                                                       // 80  // 190\n      atts.role = \"progressbar\";                                                                          // 81  // 191\n      atts[\"aria-valuenow\"] = ''+progress;                                                                // 82  // 192\n      atts[\"aria-valuemin\"] = \"0\";                                                                        // 83  // 193\n      atts[\"aria-valuemax\"] = \"100\";                                                                      // 84  // 194\n      delete atts.bootstrap;                                                                              // 85  // 195\n    }                                                                                                     // 86  // 196\n                                                                                                          // 87  // 197\n    return {                                                                                              // 88  // 198\n      progress: progressFunc,                                                                             // 89  // 199\n      atts: atts,                                                                                         // 90  // 200\n      showPercent : show_percentage,                                                                      // 91  // 201\n      useBootstrap: useBootstrap,                                                                         // 92  // 202\n      useSemantic: useSemantic                                                                            // 93  // 203\n    };                                                                                                    // 94  // 204\n  }                                                                                                       // 95  // 205\n});                                                                                                       // 96  // 206\n                                                                                                          // 97  // 207\nFS.EventHandlers = {};                                                                                    // 98  // 208\n                                                                                                          // 99  // 209\n// Simplifies some of the repetitive code for making an event handler that does a file insert             // 100\nFS.EventHandlers.insertFiles = function cfsInsertFiles(collection, options) {                             // 101\n  options = options || {};                                                                                // 102\n  var afterCallback = options.after;                                                                      // 103\n  var metadataCallback = options.metadata;                                                                // 104\n                                                                                                          // 105\n  function insertFilesHandler(event) {                                                                    // 106\n    FS.Utility.eachFile(event, function (file) {                                                          // 107\n      var f = new FS.File(file);                                                                          // 108\n      if (metadataCallback) {                                                                             // 109\n        FS.Utility.extend(f, metadataCallback(f));                                                        // 110\n      }                                                                                                   // 111\n      collection.insert(f, afterCallback);                                                                // 112\n    });                                                                                                   // 113\n  }                                                                                                       // 114\n                                                                                                          // 115\n  return insertFilesHandler;                                                                              // 116\n};                                                                                                        // 117\n                                                                                                          // 118\n////////////////////////////////////////////////////////////////////////////////////////////////////////////     // 229\n                                                                                                                 // 230\n}).call(this);                                                                                                   // 231\n                                                                                                                 // 232\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['cfs:ui'] = {};\n\n})();\n","servePath":"/packages/cfs_ui.js"}]