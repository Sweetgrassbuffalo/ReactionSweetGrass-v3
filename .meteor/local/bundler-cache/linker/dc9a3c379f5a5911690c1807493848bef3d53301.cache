[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar OAuth = Package.oauth.OAuth;\nvar Oauth = Package.oauth.Oauth;\nvar Random = Package.random.Random;\nvar ServiceConfiguration = Package['service-configuration'].ServiceConfiguration;\n\n/* Package-scope variables */\nvar Twitter;\n\n(function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                    //\n// packages/twitter-oauth/twitter_common.js                                                           //\n//                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                      //\nTwitter = {};                                                                                         // 1\n                                                                                                      // 2\nTwitter.validParamsAuthenticate = [                                                                   // 3\n  'force_login',                                                                                      // 4\n  'screen_name'                                                                                       // 5\n];                                                                                                    // 6\n                                                                                                      // 7\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                    //\n// packages/twitter-oauth/twitter_client.js                                                           //\n//                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                      //\n// Request Twitter credentials for the user                                                           // 1\n// @param options {optional}  XXX support options.requestPermissions                                  // 2\n// @param credentialRequestCompleteCallback {Function} Callback function to call on                   // 3\n//   completion. Takes one argument, credentialToken on success, or Error on                          // 4\n//   error.                                                                                           // 5\nTwitter.requestCredential = function (options, credentialRequestCompleteCallback) {                   // 6\n  // support both (options, callback) and (callback).                                                 // 7\n  if (!credentialRequestCompleteCallback && typeof options === 'function') {                          // 8\n    credentialRequestCompleteCallback = options;                                                      // 9\n    options = {};                                                                                     // 10\n  }                                                                                                   // 11\n                                                                                                      // 12\n  var config = ServiceConfiguration.configurations.findOne({service: 'twitter'});                     // 13\n  if (!config) {                                                                                      // 14\n    credentialRequestCompleteCallback && credentialRequestCompleteCallback(                           // 15\n      new ServiceConfiguration.ConfigError());                                                        // 16\n    return;                                                                                           // 17\n  }                                                                                                   // 18\n                                                                                                      // 19\n  var credentialToken = Random.secret();                                                              // 20\n  // We need to keep credentialToken across the next two 'steps' so we're adding                      // 21\n  // a credentialToken parameter to the url and the callback url that we'll be returned               // 22\n  // to by oauth provider                                                                             // 23\n                                                                                                      // 24\n  var loginStyle = OAuth._loginStyle('twitter', config, options);                                     // 25\n                                                                                                      // 26\n  // url to app, enters \"step 1\" as described in                                                      // 27\n  // packages/accounts-oauth1-helper/oauth1_server.js                                                 // 28\n  var loginPath = '_oauth/twitter/?requestTokenAndRedirect=true'                                      // 29\n        + '&state=' + OAuth._stateParam(loginStyle, credentialToken, options && options.redirectUrl);\n                                                                                                      // 31\n  if (Meteor.isCordova) {                                                                             // 32\n    loginPath = loginPath + \"&cordova=true\";                                                          // 33\n    if (/Android/i.test(navigator.userAgent)) {                                                       // 34\n      loginPath = loginPath + \"&android=true\";                                                        // 35\n    }                                                                                                 // 36\n  }                                                                                                   // 37\n                                                                                                      // 38\n  // Support additional, permitted parameters                                                         // 39\n  if (options) {                                                                                      // 40\n    var hasOwn = Object.prototype.hasOwnProperty;                                                     // 41\n    Twitter.validParamsAuthenticate.forEach(function (param) {                                        // 42\n      if (hasOwn.call(options, param)) {                                                              // 43\n        loginPath += \"&\" + param + \"=\" + encodeURIComponent(options[param]);                          // 44\n      }                                                                                               // 45\n    });                                                                                               // 46\n  }                                                                                                   // 47\n                                                                                                      // 48\n  var loginUrl = Meteor.absoluteUrl(loginPath);                                                       // 49\n                                                                                                      // 50\n  OAuth.launchLogin({                                                                                 // 51\n    loginService: \"twitter\",                                                                          // 52\n    loginStyle: loginStyle,                                                                           // 53\n    loginUrl: loginUrl,                                                                               // 54\n    credentialRequestCompleteCallback: credentialRequestCompleteCallback,                             // 55\n    credentialToken: credentialToken                                                                  // 56\n  });                                                                                                 // 57\n};                                                                                                    // 58\n                                                                                                      // 59\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package['twitter-oauth'] = {}, {\n  Twitter: Twitter\n});\n\n})();\n","servePath":"/packages/twitter-oauth.js"}]