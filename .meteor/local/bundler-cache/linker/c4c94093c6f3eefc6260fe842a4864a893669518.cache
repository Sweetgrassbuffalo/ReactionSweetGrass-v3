[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar FS = Package['cfs:base-package'].FS;\nvar meteorInstall = Package.modules.meteorInstall;\nvar Buffer = Package.modules.Buffer;\nvar process = Package.modules.process;\nvar Symbol = Package['ecmascript-runtime'].Symbol;\nvar Map = Package['ecmascript-runtime'].Map;\nvar Set = Package['ecmascript-runtime'].Set;\nvar meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nvar Promise = Package.promise.Promise;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"cfs:gridfs\":{\"gridfs.client.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// packages/cfs_gridfs/gridfs.client.js                                                             //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\n/* eslint-disable */ /**                                                                            // 1\n                      * @public                                                                     //\n                      * @constructor                                                                //\n                      * @param {String} name - The store name                                       //\n                      * @param {Object} options                                                     //\n                      * @param {Function} [options.beforeSave] - Function to run before saving a file from the client. The context of the function will be the `FS.File` instance we're saving. The function may alter its properties.\n                      * @param {Number} [options.maxTries=5] - Max times to attempt saving a file   //\n                      * @returns {undefined}                                                        //\n                      *                                                                             //\n                      * Creates a GridFS store instance on the client, which is just a shell object\n                      * storing some info.                                                          //\n                      */FS.Store.GridFS = function (name, options) {                                //\n  var self = this;                                                                                  // 16\n                                                                                                    //\n  if (!(self instanceof FS.Store.GridFS)) {                                                         // 17\n    throw new Error('FS.Store.GridFS missing keyword \"new\"');                                       // 18\n  }                                                                                                 // 19\n                                                                                                    //\n  return new FS.StorageAdapter(name, options, {                                                     // 21\n    typeName: \"storage.gridfs\"                                                                      // 22\n  });                                                                                               // 21\n};                                                                                                  // 24\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}},{\"extensions\":[\".js\",\".json\"]});\nrequire(\"./node_modules/meteor/cfs:gridfs/gridfs.client.js\");\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['cfs:gridfs'] = {};\n\n})();\n","servePath":"/packages/cfs_gridfs.js","sourceMap":{"version":3,"sources":["/packages/cfs:gridfs/gridfs.client.js"],"names":["FS","Store","GridFS","name","options","self","Error","StorageAdapter","typeName"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,oB,CAEA;;;;;;;;;;;wBAYAA,GAAGC,KAAH,CAASC,MAAT,GAAkB,UAAUC,IAAV,EAAgBC,OAAhB,EAAyB;AACzC,MAAMC,OAAO,IAAb;;AACA,MAAI,EAAEA,gBAAgBL,GAAGC,KAAH,CAASC,MAA3B,CAAJ,EAA2C;AACzC,UAAM,IAAII,KAAJ,CAAU,uCAAV,CAAN;AACD;;AAED,SAAO,IAAIN,GAAGO,cAAP,CAAsBJ,IAAtB,EAA4BC,OAA5B,EAAqC;AAC1CI,cAAU;AADgC,GAArC,CAAP;AAGD,CATD,wG","file":"/packages/cfs_gridfs.js","sourcesContent":["/* eslint-disable */\n\n/**\n * @public\n * @constructor\n * @param {String} name - The store name\n * @param {Object} options\n * @param {Function} [options.beforeSave] - Function to run before saving a file from the client. The context of the function will be the `FS.File` instance we're saving. The function may alter its properties.\n * @param {Number} [options.maxTries=5] - Max times to attempt saving a file\n * @returns {undefined}\n *\n * Creates a GridFS store instance on the client, which is just a shell object\n * storing some info.\n */\nFS.Store.GridFS = function (name, options) {\n  const self = this;\n  if (!(self instanceof FS.Store.GridFS))    {\n    throw new Error('FS.Store.GridFS missing keyword \"new\"');\n  }\n\n  return new FS.StorageAdapter(name, options, {\n    typeName: \"storage.gridfs\"\n  });\n};\n"]}}]