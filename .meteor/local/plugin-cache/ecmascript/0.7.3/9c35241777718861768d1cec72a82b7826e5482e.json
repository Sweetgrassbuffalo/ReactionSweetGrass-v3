{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/session","imported":["Session"],"specifiers":[{"kind":"named","imported":"Session","local":"Session"}]},{"source":"meteor/templating","imported":["Template"],"specifiers":[{"kind":"named","imported":"Template","local":"Template"}]},{"source":"meteor/reactive-dict","imported":["ReactiveDict"],"specifiers":[{"kind":"named","imported":"ReactiveDict","local":"ReactiveDict"}]},{"source":"/imports/plugins/core/ui/client/components","imported":["IconButton"],"specifiers":[{"kind":"named","imported":"IconButton","local":"IconButton"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/included/product-variant/client/templates/products/productGrid/controls.js","filenameRelative":"/imports/plugins/included/product-variant/client/templates/products/productGrid/controls.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/included/product-variant/client/templates/products/productGrid/controls.js"],"names":["Session","Template","ReactiveDict","IconButton","gridControls","onCreated","state","autorun","data","product","selectedProducts","get","isSelected","_","isArray","indexOf","_id","set","onRendered","$","tooltip","position","helpers","checked","instance","equals","isVisible","currentData","hasChanges","__draft","VisibilityButton","component","icon","onIcon","status"],"mappings":"AAAA,IAAS;AAAT,OAAwB,WAAxB;;;;;;;;;;;;;;;;;;;;;;GACA,AAAS,AAAgB,AACzB,AAAS,AAAoB,AAC7B,AAAS,AAAkB,AAE3B,AAAS,AAAa,AAAU,AAAY;AAC1C,AAAK,SAAL,AAAa,AAAI,aAAJ,UAAb;AAEA;;OAAA,AAAK,QAAQ,IAAM,AACjB,AAAI,AAAK,AAAK,AAAS,AACrB;OAAM,oBAAN,AAAyB,AAAQ,AAAI,AACrC;QAAM,WAAa,SAAnB,AAAmB,AAAE,AAAQ,AAAoB,AAAiB,AAAQ,AAAK,AAAK,AAAQ,AAAQ,AAAI,AAExG;AAAK,UAAL,AAAW,AAAI,mBAAf,AAA6B,YAA7B,AACD;6GATL,AAGE,AAOC,AACF;;oCAED;AAAA,AAAS,AAAa,AAAW,AAAY,AAC3C;AAAO,AAAK,AAAE,AAA2B,AAAQ,AAC/C;AADF,AAAO,AAA0C,AACrC;AAFd,AAIC,6CAED;gBAAA,AAAsB,AAAQ;AACnB,cAAY,AACnB,AAAO,AAAS,AAAW,AAAM,AAAO,AAAc,AACvD;AAFD,GADO;AAAqB;AAK5B,SAAY;AACJ,uBAAN,AAAoB,AAAS,AAC7B;WAAO,SAAe,iBAAY,OAA3B,AAAsC,cAA7C,AAA6C,AAAY,AAAQ,AAClE;AAR2B,AAU5B;yBAAa,AACX;QAAM,uBAAE;qEAAF;AAAN,AAAoB,AAAS,AAE7B;AAAI;AAAJ,AAAY,AAAS,AACnB,yCACD;QADC,AAAO;;yBAGT;AAAO,aAjBmB,AAiB1B,AACD;AAED;;WAAmB,AACjB;AAAO,AACL,AAAW,AACX;AAFK,AAEC,gCACN;;AACQ,iBAJV,AAAO;YAMR;;cA3BH,AAA8B;AAqBnB,AAGG,AACR;;AAnBF","file":"/imports/plugins/included/product-variant/client/templates/products/productGrid/controls.js.map","sourcesContent":["import { Session } from \"meteor/session\";\nimport { Template } from \"meteor/templating\";\nimport { ReactiveDict } from \"meteor/reactive-dict\";\nimport { IconButton } from \"/imports/plugins/core/ui/client/components\";\n\nTemplate.gridControls.onCreated(function () {\n  this.state = new ReactiveDict();\n\n  this.autorun(() => {\n    if (this.data.product) {\n      const selectedProducts = Session.get(\"productGrid/selectedProducts\");\n      const isSelected = _.isArray(selectedProducts) ? selectedProducts.indexOf(this.data.product._id) >= 0 : false;\n\n      this.state.set(\"isSelected\", isSelected);\n    }\n  });\n});\n\nTemplate.gridControls.onRendered(function () {\n  return this.$(\"[data-toggle='tooltip']\").tooltip({\n    position: \"top\"\n  });\n});\n\nTemplate.gridControls.helpers({\n  checked: function () {\n    return Template.instance().state.equals(\"isSelected\", true);\n  },\n\n  isVisible() {\n    const currentData = Template.currentData();\n    return currentData && currentData.product && currentData.product.isVisible;\n  },\n\n  hasChanges() {\n    const { product } = Template.currentData();\n\n    if (product.__draft) {\n      return true;\n    }\n\n    return false;\n  },\n\n  VisibilityButton() {\n    return {\n      component: IconButton,\n      icon: \"\",\n      onIcon: \"\",\n      status: \"info\"\n    };\n  }\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/included/product-variant/client/templates/products/productGrid/controls.js.map","sourceFileName":"/imports/plugins/included/product-variant/client/templates/products/productGrid/controls.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"controls"},"ignored":false,"code":"var Session = void 0;\nmodule.importSync(\"meteor/session\", {\n  Session: function (v) {\n    Session = v;\n  }\n}, 0);\nvar Template = void 0;\nmodule.importSync(\"meteor/templating\", {\n  Template: function (v) {\n    Template = v;\n  }\n}, 1);\nvar ReactiveDict = void 0;\nmodule.importSync(\"meteor/reactive-dict\", {\n  ReactiveDict: function (v) {\n    ReactiveDict = v;\n  }\n}, 2);\nvar IconButton = void 0;\nmodule.importSync(\"/imports/plugins/core/ui/client/components\", {\n  IconButton: function (v) {\n    IconButton = v;\n  }\n}, 3);\nTemplate.gridControls.onCreated(function () {\n  var _this = this;\n\n  this.state = new ReactiveDict();\n  this.autorun(function () {\n    if (_this.data.product) {\n      var selectedProducts = Session.get(\"productGrid/selectedProducts\");\n      var isSelected = _.isArray(selectedProducts) ? selectedProducts.indexOf(_this.data.product._id) >= 0 : false;\n\n      _this.state.set(\"isSelected\", isSelected);\n    }\n  });\n});\nTemplate.gridControls.onRendered(function () {\n  return this.$(\"[data-toggle='tooltip']\").tooltip({\n    position: \"top\"\n  });\n});\nTemplate.gridControls.helpers({\n  checked: function () {\n    return Template.instance().state.equals(\"isSelected\", true);\n  },\n  isVisible: function () {\n    var currentData = Template.currentData();\n    return currentData && currentData.product && currentData.product.isVisible;\n  },\n  hasChanges: function () {\n    var _Template$currentData = Template.currentData(),\n        product = _Template$currentData.product;\n\n    if (product.__draft) {\n      return true;\n    }\n\n    return false;\n  },\n  VisibilityButton: function () {\n    return {\n      component: IconButton,\n      icon: \"\",\n      onIcon: \"\",\n      status: \"info\"\n    };\n  }\n});","map":{"version":3,"sources":["/imports/plugins/included/product-variant/client/templates/products/productGrid/controls.js"],"names":["Session","Template","ReactiveDict","IconButton","gridControls","onCreated","state","autorun","data","product","selectedProducts","get","isSelected","_","isArray","indexOf","_id","set","onRendered","$","tooltip","position","helpers","checked","instance","equals","isVisible","currentData","hasChanges","__draft","VisibilityButton","component","icon","onIcon","status"],"mappings":"AAAA,IAAS;AAAT,OAAwB,WAAxB;;;;;;;;;;;;;;;;;;;;;;GACA,AAAS,AAAgB,AACzB,AAAS,AAAoB,AAC7B,AAAS,AAAkB,AAE3B,AAAS,AAAa,AAAU,AAAY;AAC1C,AAAK,SAAL,AAAa,AAAI,aAAJ,UAAb;AAEA;;OAAA,AAAK,QAAQ,IAAM,AACjB,AAAI,AAAK,AAAK,AAAS,AACrB;OAAM,oBAAN,AAAyB,AAAQ,AAAI,AACrC;QAAM,WAAa,SAAnB,AAAmB,AAAE,AAAQ,AAAoB,AAAiB,AAAQ,AAAK,AAAK,AAAQ,AAAQ,AAAI,AAExG;AAAK,UAAL,AAAW,AAAI,mBAAf,AAA6B,YAA7B,AACD;6GATL,AAGE,AAOC,AACF;;oCAED;AAAA,AAAS,AAAa,AAAW,AAAY,AAC3C;AAAO,AAAK,AAAE,AAA2B,AAAQ,AAC/C;AADF,AAAO,AAA0C,AACrC;AAFd,AAIC,6CAED;gBAAA,AAAsB,AAAQ;AACnB,cAAY,AACnB,AAAO,AAAS,AAAW,AAAM,AAAO,AAAc,AACvD;AAFD,GADO;AAAqB;AAK5B,SAAY;AACJ,uBAAN,AAAoB,AAAS,AAC7B;WAAO,SAAe,iBAAY,OAA3B,AAAsC,cAA7C,AAA6C,AAAY,AAAQ,AAClE;AAR2B,AAU5B;yBAAa,AACX;QAAM,uBAAE;qEAAF;AAAN,AAAoB,AAAS,AAE7B;AAAI;AAAJ,AAAY,AAAS,AACnB,yCACD;QADC,AAAO;;yBAGT;AAAO,aAjBmB,AAiB1B,AACD;AAED;;WAAmB,AACjB;AAAO,AACL,AAAW,AACX;AAFK,AAEC,gCACN;;AACQ,iBAJV,AAAO;YAMR;;cA3BH,AAA8B;AAqBnB,AAGG,AACR;;AAnBF","file":"/imports/plugins/included/product-variant/client/templates/products/productGrid/controls.js.map","sourcesContent":["import { Session } from \"meteor/session\";\nimport { Template } from \"meteor/templating\";\nimport { ReactiveDict } from \"meteor/reactive-dict\";\nimport { IconButton } from \"/imports/plugins/core/ui/client/components\";\n\nTemplate.gridControls.onCreated(function () {\n  this.state = new ReactiveDict();\n\n  this.autorun(() => {\n    if (this.data.product) {\n      const selectedProducts = Session.get(\"productGrid/selectedProducts\");\n      const isSelected = _.isArray(selectedProducts) ? selectedProducts.indexOf(this.data.product._id) >= 0 : false;\n\n      this.state.set(\"isSelected\", isSelected);\n    }\n  });\n});\n\nTemplate.gridControls.onRendered(function () {\n  return this.$(\"[data-toggle='tooltip']\").tooltip({\n    position: \"top\"\n  });\n});\n\nTemplate.gridControls.helpers({\n  checked: function () {\n    return Template.instance().state.equals(\"isSelected\", true);\n  },\n\n  isVisible() {\n    const currentData = Template.currentData();\n    return currentData && currentData.product && currentData.product.isVisible;\n  },\n\n  hasChanges() {\n    const { product } = Template.currentData();\n\n    if (product.__draft) {\n      return true;\n    }\n\n    return false;\n  },\n\n  VisibilityButton() {\n    return {\n      component: IconButton,\n      icon: \"\",\n      onIcon: \"\",\n      status: \"info\"\n    };\n  }\n});\n"]},"hash":"9c35241777718861768d1cec72a82b7826e5482e"}
