{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/core/router/lib/hooks.js","filenameRelative":"/imports/plugins/core/router/lib/hooks.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/core/router/lib/hooks.js"],"names":["Hooks","_hooks","onEnter","onExit","_addHook","type","routeName","callback","push","enter","Array","isArray","forEach","cb","leave","arguments","length","get","name","group","callbacks","run","constant"],"mappings":"AAIA,AAAM,AAAQ,AACZ,AAAQ;;OACG;;;YAIX,AAAS,AAAM,AAAW,AAAU,AAClC,AAAI,AAAO,AAAK,AAAO,AAAM,AAAe,AAAa,AACvD;AARQ,AACJ,AAEE;sBAKD,MAAL,AAAY,AAAM,WAAlB,AAA+B,UAA/B,AACD;;qCACD;AAVU,AAUV,AAAK,AAAO,AAAM,AAAW,AAAK,AACnC;;;AAED,AAAM,AAAU,AACd;mBAAI,AAAM;AAAV,AAAI,AAAc,AAAW,AAC3B;;cAAS,QAAT,AAAiB,AAAC,AAAO,WACvB;AAAK,eAAL,AAAa,QAAb,cADF,AAEC;sBAHH,AAIC;AAAM,AACL;WAAA,AAAK,AAAQ,AACd;mBApBS,AAqBX;;AAED,AAAM,AAAU,AACd;mBAAI,AAAM;AAAV,AAAI,AAAc,AAAW,AAC3B;;cAAS,QAAT,AAAiB,AAAC,AAAO,WACvB;AAAK,eAAL,AAAY,sBADd,AAEC;sBAHH,AAIC;AAAM,AACL;WAAA,AAAO,AAAK,AAAO,AACpB;yBA9BS,AA+BX;;AAED,AAAQ,AAAW,AAAU,AAC3B;;AACA,AAAI,AAAU,AAAW,AAAK,AAAO,AAAU,AAAO,AAAY,AAChE;QAAM,AAAK,UAAX,oDACA;UAAO,KAJkB,AAIzB,AAAO,AAAK,AAAS,AAAW,AAAU,AAC3C;AACD;KAJA,CAKA;;;WAAO,KAAA,AAAK,SAAL,AAAc,WAAd,AAAyB,WAAhC,AAAO,AAAoC,AAC5C;AAzCW,AA2CZ;oBAAA,AAAO,WAAP,AAAkB;AAEhB;QAAI,UAAA,AAAU,WAAV,AAAqB,KAAK,OAAO,UAAP,AAAO,AAAU,OAA/C,AAAsD,YAAY,AAChE;UAAM,KAAN,AAAW,AACX;aAAO,KAAA,AAAK,SAAL,AAAc,UAAd,AAAwB,UAA/B,AAAO,AAAkC,AAC1C;AALyB,AAM1B,KAN0B,AAC1B;;;8CAMA;AAlDU,AAkDV,AAAO,AAAK,AAAS,AAAU,AAAW,AAC3C;6BAED;AAAI,QAAJ,AAAU,QAAM,qBACd;QAAM,AAAQ,YAAK,MAAnB,AAAc,AAAY,AAAS,AACnC;AAAM,kBAAY,AAAM,cAAxB,gDACA;AAxDU,AAwDV,AAAO,AAAC,AAAO,AAAc,AAAe,AAAC,AAAC,AAAU,AAAU,AAAY,AAC/E;uCAED;AAAI,QAAJ,AAAU,AAAM,YAAhB,KAA0B,UACxB;;QAAM,OAAY,AAAK,cAAvB,AAAkB,AAAS,AAAM;mDACjC;AAAI,eAAO,SAAX,AAAI,AAAqB,AAAe,AAAC,AAAC,AAAU,AAAQ,AAC1D;AAAO,AAAU,AAAQ,AAAC,AAAa,AACrC;AAAA,AAAO,AAAS,AACjB;;AAFD,AAAO,WAGR;AACD,AAAO,AACR;AAlEO,AAEN,CADA;AALJ,2CAGA,AAAc,AAsEd,AAAe","file":"/imports/plugins/core/router/lib/hooks.js.map","sourcesContent":["\n/**\n * Route Hook Methods\n */\nconst Hooks = {\n  _hooks: {\n    onEnter: {},\n    onExit: {}\n  },\n\n  _addHook(type, routeName, callback) {\n    if (typeof this._hooks[type][routeName] === \"undefined\") {\n      this._hooks[type][routeName] = [];\n    }\n    this._hooks[type][routeName].push(callback);\n  },\n\n  enter(callback) {\n    if (Array.isArray(callback)) {\n      callback.forEach((cb) => {\n        this.onEnter(cb);\n      });\n    } else {\n      this.onEnter(callback);\n    }\n  },\n\n  leave(callback) {\n    if (Array.isArray(callback)) {\n      callback.forEach((cb) => {\n        this.onExit(cb);\n      });\n    } else {\n      return this.onExit(callback);\n    }\n  },\n\n  onEnter(routeName, callback) {\n    // global onEnter callback\n    if (arguments.length === 1 && typeof arguments[0] === \"function\") {\n      const cb = routeName;\n      return this._addHook(\"onEnter\", \"GLOBAL\", cb);\n    }\n    // route-specific onEnter callback\n    return this._addHook(\"onEnter\", routeName, callback);\n  },\n\n  onExit(routeName, callback) {\n    // global onExit callback\n    if (arguments.length === 1 && typeof arguments[0] === \"function\") {\n      const cb = routeName;\n      return this._addHook(\"onExit\", \"GLOBAL\", cb);\n    }\n    // route-specific onExit callback\n    return this._addHook(\"onExit\", routeName, callback);\n  },\n\n  get(type, name) {\n    const group = this._hooks[type] || {};\n    const callbacks = group[name];\n    return (typeof callbacks !== \"undefined\" && !!callbacks.length) ? callbacks : [];\n  },\n\n  run(type, name, constant) {\n    const callbacks = this.get(type, name);\n    if (typeof callbacks !== \"undefined\" && !!callbacks.length) {\n      return callbacks.forEach((callback) => {\n        return callback(constant);\n      });\n    }\n    return null;\n  }\n};\n\nexport default Hooks;\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/core/router/lib/hooks.js.map","sourceFileName":"/imports/plugins/core/router/lib/hooks.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"hooks"},"ignored":false,"code":"/**\n * Route Hook Methods\n */var Hooks = {\n  _hooks: {\n    onEnter: {},\n    onExit: {}\n  },\n  _addHook: function (type, routeName, callback) {\n    if (typeof this._hooks[type][routeName] === \"undefined\") {\n      this._hooks[type][routeName] = [];\n    }\n\n    this._hooks[type][routeName].push(callback);\n  },\n  enter: function (callback) {\n    var _this = this;\n\n    if (Array.isArray(callback)) {\n      callback.forEach(function (cb) {\n        _this.onEnter(cb);\n      });\n    } else {\n      this.onEnter(callback);\n    }\n  },\n  leave: function (callback) {\n    var _this2 = this;\n\n    if (Array.isArray(callback)) {\n      callback.forEach(function (cb) {\n        _this2.onExit(cb);\n      });\n    } else {\n      return this.onExit(callback);\n    }\n  },\n  onEnter: function (routeName, callback) {\n    // global onEnter callback\n    if (arguments.length === 1 && typeof arguments[0] === \"function\") {\n      var cb = routeName;\n      return this._addHook(\"onEnter\", \"GLOBAL\", cb);\n    } // route-specific onEnter callback\n\n\n    return this._addHook(\"onEnter\", routeName, callback);\n  },\n  onExit: function (routeName, callback) {\n    // global onExit callback\n    if (arguments.length === 1 && typeof arguments[0] === \"function\") {\n      var cb = routeName;\n      return this._addHook(\"onExit\", \"GLOBAL\", cb);\n    } // route-specific onExit callback\n\n\n    return this._addHook(\"onExit\", routeName, callback);\n  },\n  get: function (type, name) {\n    var group = this._hooks[type] || {};\n    var callbacks = group[name];\n    return typeof callbacks !== \"undefined\" && !!callbacks.length ? callbacks : [];\n  },\n  run: function (type, name, constant) {\n    var callbacks = this.get(type, name);\n\n    if (typeof callbacks !== \"undefined\" && !!callbacks.length) {\n      return callbacks.forEach(function (callback) {\n        return callback(constant);\n      });\n    }\n\n    return null;\n  }\n};\nmodule.export(\"default\", exports.default = Hooks);","map":{"version":3,"sources":["/imports/plugins/core/router/lib/hooks.js"],"names":["Hooks","_hooks","onEnter","onExit","_addHook","type","routeName","callback","push","enter","Array","isArray","forEach","cb","leave","arguments","length","get","name","group","callbacks","run","constant"],"mappings":"AAIA,AAAM,AAAQ,AACZ,AAAQ;;OACG;;;YAIX,AAAS,AAAM,AAAW,AAAU,AAClC,AAAI,AAAO,AAAK,AAAO,AAAM,AAAe,AAAa,AACvD;AARQ,AACJ,AAEE;sBAKD,MAAL,AAAY,AAAM,WAAlB,AAA+B,UAA/B,AACD;;qCACD;AAVU,AAUV,AAAK,AAAO,AAAM,AAAW,AAAK,AACnC;;;AAED,AAAM,AAAU,AACd;mBAAI,AAAM;AAAV,AAAI,AAAc,AAAW,AAC3B;;cAAS,QAAT,AAAiB,AAAC,AAAO,WACvB;AAAK,eAAL,AAAa,QAAb,cADF,AAEC;sBAHH,AAIC;AAAM,AACL;WAAA,AAAK,AAAQ,AACd;mBApBS,AAqBX;;AAED,AAAM,AAAU,AACd;mBAAI,AAAM;AAAV,AAAI,AAAc,AAAW,AAC3B;;cAAS,QAAT,AAAiB,AAAC,AAAO,WACvB;AAAK,eAAL,AAAY,sBADd,AAEC;sBAHH,AAIC;AAAM,AACL;WAAA,AAAO,AAAK,AAAO,AACpB;yBA9BS,AA+BX;;AAED,AAAQ,AAAW,AAAU,AAC3B;;AACA,AAAI,AAAU,AAAW,AAAK,AAAO,AAAU,AAAO,AAAY,AAChE;QAAM,AAAK,UAAX,oDACA;UAAO,KAJkB,AAIzB,AAAO,AAAK,AAAS,AAAW,AAAU,AAC3C;AACD;KAJA,CAKA;;;WAAO,KAAA,AAAK,SAAL,AAAc,WAAd,AAAyB,WAAhC,AAAO,AAAoC,AAC5C;AAzCW,AA2CZ;oBAAA,AAAO,WAAP,AAAkB;AAEhB;QAAI,UAAA,AAAU,WAAV,AAAqB,KAAK,OAAO,UAAP,AAAO,AAAU,OAA/C,AAAsD,YAAY,AAChE;UAAM,KAAN,AAAW,AACX;aAAO,KAAA,AAAK,SAAL,AAAc,UAAd,AAAwB,UAA/B,AAAO,AAAkC,AAC1C;AALyB,AAM1B,KAN0B,AAC1B;;;8CAMA;AAlDU,AAkDV,AAAO,AAAK,AAAS,AAAU,AAAW,AAC3C;6BAED;AAAI,QAAJ,AAAU,QAAM,qBACd;QAAM,AAAQ,YAAK,MAAnB,AAAc,AAAY,AAAS,AACnC;AAAM,kBAAY,AAAM,cAAxB,gDACA;AAxDU,AAwDV,AAAO,AAAC,AAAO,AAAc,AAAe,AAAC,AAAC,AAAU,AAAU,AAAY,AAC/E;uCAED;AAAI,QAAJ,AAAU,AAAM,YAAhB,KAA0B,UACxB;;QAAM,OAAY,AAAK,cAAvB,AAAkB,AAAS,AAAM;mDACjC;AAAI,eAAO,SAAX,AAAI,AAAqB,AAAe,AAAC,AAAC,AAAU,AAAQ,AAC1D;AAAO,AAAU,AAAQ,AAAC,AAAa,AACrC;AAAA,AAAO,AAAS,AACjB;;AAFD,AAAO,WAGR;AACD,AAAO,AACR;AAlEO,AAEN,CADA;AALJ,2CAGA,AAAc,AAsEd,AAAe","file":"/imports/plugins/core/router/lib/hooks.js.map","sourcesContent":["\n/**\n * Route Hook Methods\n */\nconst Hooks = {\n  _hooks: {\n    onEnter: {},\n    onExit: {}\n  },\n\n  _addHook(type, routeName, callback) {\n    if (typeof this._hooks[type][routeName] === \"undefined\") {\n      this._hooks[type][routeName] = [];\n    }\n    this._hooks[type][routeName].push(callback);\n  },\n\n  enter(callback) {\n    if (Array.isArray(callback)) {\n      callback.forEach((cb) => {\n        this.onEnter(cb);\n      });\n    } else {\n      this.onEnter(callback);\n    }\n  },\n\n  leave(callback) {\n    if (Array.isArray(callback)) {\n      callback.forEach((cb) => {\n        this.onExit(cb);\n      });\n    } else {\n      return this.onExit(callback);\n    }\n  },\n\n  onEnter(routeName, callback) {\n    // global onEnter callback\n    if (arguments.length === 1 && typeof arguments[0] === \"function\") {\n      const cb = routeName;\n      return this._addHook(\"onEnter\", \"GLOBAL\", cb);\n    }\n    // route-specific onEnter callback\n    return this._addHook(\"onEnter\", routeName, callback);\n  },\n\n  onExit(routeName, callback) {\n    // global onExit callback\n    if (arguments.length === 1 && typeof arguments[0] === \"function\") {\n      const cb = routeName;\n      return this._addHook(\"onExit\", \"GLOBAL\", cb);\n    }\n    // route-specific onExit callback\n    return this._addHook(\"onExit\", routeName, callback);\n  },\n\n  get(type, name) {\n    const group = this._hooks[type] || {};\n    const callbacks = group[name];\n    return (typeof callbacks !== \"undefined\" && !!callbacks.length) ? callbacks : [];\n  },\n\n  run(type, name, constant) {\n    const callbacks = this.get(type, name);\n    if (typeof callbacks !== \"undefined\" && !!callbacks.length) {\n      return callbacks.forEach((callback) => {\n        return callback(constant);\n      });\n    }\n    return null;\n  }\n};\n\nexport default Hooks;\n"]},"hash":"2fa48fd9089feceffdf558d79007cc1c517491a9"}
