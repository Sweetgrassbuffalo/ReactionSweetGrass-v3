{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"/server/api","imported":["Hooks","Logger"],"specifiers":[{"kind":"named","imported":"Hooks","local":"Hooks"},{"kind":"named","imported":"Logger","local":"Logger"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/included/launchdock-connect/server/hooks.js","filenameRelative":"/imports/plugins/included/launchdock-connect/server/hooks.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/included/launchdock-connect/server/hooks.js"],"names":["Meteor","Hooks","Logger","Events","add","user","process","env","LAUNCHDOCK_USERID","users","update","_id","$set","LAUNCHDOCK_USERNAME","LAUNCHDOCK_AUTH","LAUNCHDOCK_URL","LAUNCHDOCK_STACK_ID","err","error","debug"],"mappings":"AAAA,IAAS;AAAT,OAAuB,WAAvB;;;;;;;;;;;;;;GACA,A,AAAA,AAAS,AAAO,AAAc,AAE9B;AAIA,AAAM,AAAO,AAAI,AAA+B,AAAC,AAAS,AACxD,AAAI,AAAQ,AAAI,AAAmB,AACjC,AAAO,AAAM,AAAO;;SACb,OAAK,mDADQ;AAApB,MAEG,+BACD;WAAM;gBAAA,AAC0B,AAAQ,AAAI,AAC1C;AADA;;AAG2B,sCAAQ,QAAR,AAAY,IAJnC,AAKJ;AAA+B,wCAAQ,QAAR,AAAY,IALvC;gDAHR,AAEG,AAQC;AAAD,AAAS,+CACV;AAAA,AAAI,AAAK,mDACP,AAAO,AAAM,AACd;AAVK,AAGwB,AAAQ,AAAI,AACxC;AAJI,AAE4B,AAAQ,AAAI,AAC5C,OAKF,UAEO,KACL;eAAA,AAAO,AAAM,AACd;qBAfH,AAgBC;aACF;;AACD;AApBF,AAoBE,AAAO,AACR;;;;CAlBK","file":"/imports/plugins/included/launchdock-connect/server/hooks.js.map","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport { Hooks, Logger } from \"/server/api\";\n\n/**\n * Hook to setup default admin user with Launchdock credentials (if they exist)\n */\n\nHooks.Events.add(\"afterCreateDefaultAdminUser\", (user) => {\n  if (process.env.LAUNCHDOCK_USERID) {\n    Meteor.users.update({\n      _id: user._id\n    }, {\n      $set: {\n        \"services.launchdock.userId\": process.env.LAUNCHDOCK_USERID,\n        \"services.launchdock.username\": process.env.LAUNCHDOCK_USERNAME,\n        \"services.launchdock.auth\": process.env.LAUNCHDOCK_AUTH,\n        \"services.launchdock.url\": process.env.LAUNCHDOCK_URL,\n        \"services.launchdock.stackId\": process.env.LAUNCHDOCK_STACK_ID\n      }\n    }, (err) => {\n      if (err) {\n        Logger.error(err);\n      } else {\n        Logger.debug(\"Updated default admin with Launchdock account info.\");\n      }\n    });\n  }\n  return user;\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/included/launchdock-connect/server/hooks.js.map","sourceFileName":"/imports/plugins/included/launchdock-connect/server/hooks.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"hooks"},"ignored":false,"code":"var Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Hooks = void 0,\n    Logger = void 0;\nmodule.importSync(\"/server/api\", {\n  Hooks: function (v) {\n    Hooks = v;\n  },\n  Logger: function (v) {\n    Logger = v;\n  }\n}, 1);\n/**\n * Hook to setup default admin user with Launchdock credentials (if they exist)\n */Hooks.Events.add(\"afterCreateDefaultAdminUser\", function (user) {\n  if (process.env.LAUNCHDOCK_USERID) {\n    Meteor.users.update({\n      _id: user._id\n    }, {\n      $set: {\n        \"services.launchdock.userId\": process.env.LAUNCHDOCK_USERID,\n        \"services.launchdock.username\": process.env.LAUNCHDOCK_USERNAME,\n        \"services.launchdock.auth\": process.env.LAUNCHDOCK_AUTH,\n        \"services.launchdock.url\": process.env.LAUNCHDOCK_URL,\n        \"services.launchdock.stackId\": process.env.LAUNCHDOCK_STACK_ID\n      }\n    }, function (err) {\n      if (err) {\n        Logger.error(err);\n      } else {\n        Logger.debug(\"Updated default admin with Launchdock account info.\");\n      }\n    });\n  }\n\n  return user;\n});","map":{"version":3,"sources":["/imports/plugins/included/launchdock-connect/server/hooks.js"],"names":["Meteor","Hooks","Logger","Events","add","user","process","env","LAUNCHDOCK_USERID","users","update","_id","$set","LAUNCHDOCK_USERNAME","LAUNCHDOCK_AUTH","LAUNCHDOCK_URL","LAUNCHDOCK_STACK_ID","err","error","debug"],"mappings":"AAAA,IAAS;AAAT,OAAuB,WAAvB;;;;;;;;;;;;;;GACA,A,AAAA,AAAS,AAAO,AAAc,AAE9B;AAIA,AAAM,AAAO,AAAI,AAA+B,AAAC,AAAS,AACxD,AAAI,AAAQ,AAAI,AAAmB,AACjC,AAAO,AAAM,AAAO;;SACb,OAAK,mDADQ;AAApB,MAEG,+BACD;WAAM;gBAAA,AAC0B,AAAQ,AAAI,AAC1C;AADA;;AAG2B,sCAAQ,QAAR,AAAY,IAJnC,AAKJ;AAA+B,wCAAQ,QAAR,AAAY,IALvC;gDAHR,AAEG,AAQC;AAAD,AAAS,+CACV;AAAA,AAAI,AAAK,mDACP,AAAO,AAAM,AACd;AAVK,AAGwB,AAAQ,AAAI,AACxC;AAJI,AAE4B,AAAQ,AAAI,AAC5C,OAKF,UAEO,KACL;eAAA,AAAO,AAAM,AACd;qBAfH,AAgBC;aACF;;AACD;AApBF,AAoBE,AAAO,AACR;;;;CAlBK","file":"/imports/plugins/included/launchdock-connect/server/hooks.js.map","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport { Hooks, Logger } from \"/server/api\";\n\n/**\n * Hook to setup default admin user with Launchdock credentials (if they exist)\n */\n\nHooks.Events.add(\"afterCreateDefaultAdminUser\", (user) => {\n  if (process.env.LAUNCHDOCK_USERID) {\n    Meteor.users.update({\n      _id: user._id\n    }, {\n      $set: {\n        \"services.launchdock.userId\": process.env.LAUNCHDOCK_USERID,\n        \"services.launchdock.username\": process.env.LAUNCHDOCK_USERNAME,\n        \"services.launchdock.auth\": process.env.LAUNCHDOCK_AUTH,\n        \"services.launchdock.url\": process.env.LAUNCHDOCK_URL,\n        \"services.launchdock.stackId\": process.env.LAUNCHDOCK_STACK_ID\n      }\n    }, (err) => {\n      if (err) {\n        Logger.error(err);\n      } else {\n        Logger.debug(\"Updated default admin with Launchdock account info.\");\n      }\n    });\n  }\n  return user;\n});\n"]},"hash":"08461d0fecd351f7a9db4b1c5ce3cbcc848bfbb7"}
