{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/check","imported":["Match","check"],"specifiers":[{"kind":"named","imported":"Match","local":"Match"},{"kind":"named","imported":"check","local":"check"}]},{"source":"meteor/tmeasday:publish-counts","imported":["Counts"],"specifiers":[{"kind":"named","imported":"Counts","local":"Counts"}]},{"source":"/lib/collections","imported":["Shipping"],"specifiers":[{"kind":"named","imported":"Shipping","local":"Shipping"}]},{"source":"/server/api","imported":["Reaction"],"specifiers":[{"kind":"named","imported":"Reaction","local":"Reaction"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/server/publications/collections/shipping.js","filenameRelative":"/server/publications/collections/shipping.js","inputSourceMap":{"version":3,"sources":["/server/publications/collections/shipping.js"],"names":["Meteor","Match","check","Counts","Shipping","Reaction","publish","query","options","Optional","Object","shopId","getShopId","ready","select","find"],"mappings":"AAAA,IAAS;AAAT,OAAuB,WAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;G,AACA,AAAS,AAAO,AAAa,AAC7B,AAAS,AAAc,AACvB,AAAS,AAAgB,AACzB,AAAS,AAAgB,AACzB;AAIA,AAAO,AAAQ,AAAY,AAAU,AAAO,AAAS,AACnD,AAAM,AAAO,AAAM,AAAS;;UACtB,QAAN,AAAe,AAAM,YAAN,AAAe,UAA9B,AAAe;QAET,OAAS,MAAS,SAAxB,AAAe;gCACf,AAAI,AAAC,AAAQ,AACX;MAAO,AAAK,SAAZ,AAAO,SACR;;;gBACD;AAAA,AAAM,AAAS,AAAS,AACxB;;MAAA,AAAO,SAT4C,AASnD,AAAgB,SAEhB,AACA;kBACA,OATA,CASA,AAAO,AAAQ,AAAM,AAAkB,AAAS,AAC9C,AACA,AAGF;AAlBF,AAkBE,AAAO,AAAS,AACd,AACA,AAEH;;;;CApBC","file":"/server/publications/collections/shipping.js.map","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport { Match, check } from \"meteor/check\";\nimport { Counts } from \"meteor/tmeasday:publish-counts\";\nimport { Shipping } from \"/lib/collections\";\nimport { Reaction } from \"/server/api\";\n/**\n * shipping\n */\n\nMeteor.publish(\"Shipping\", function (query, options) {\n  check(query, Match.Optional(Object));\n  check(options, Match.Optional(Object));\n\n  const shopId = Reaction.getShopId();\n  if (!shopId) {\n    return this.ready();\n  }\n  const select = query || {};\n  select.shopId = shopId;\n\n  // appends a count to the collection\n  // we're doing this for use with griddleTable\n  Counts.publish(this, \"shipping-count\", Shipping.find(\n    select,\n    options\n  ));\n\n  return Shipping.find(\n    select,\n    options\n  );\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/server/publications/collections/shipping.js.map","sourceFileName":"/server/publications/collections/shipping.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"shipping"},"ignored":false,"code":"var Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Match = void 0,\n    check = void 0;\nmodule.importSync(\"meteor/check\", {\n  Match: function (v) {\n    Match = v;\n  },\n  check: function (v) {\n    check = v;\n  }\n}, 1);\nvar Counts = void 0;\nmodule.importSync(\"meteor/tmeasday:publish-counts\", {\n  Counts: function (v) {\n    Counts = v;\n  }\n}, 2);\nvar Shipping = void 0;\nmodule.importSync(\"/lib/collections\", {\n  Shipping: function (v) {\n    Shipping = v;\n  }\n}, 3);\nvar Reaction = void 0;\nmodule.importSync(\"/server/api\", {\n  Reaction: function (v) {\n    Reaction = v;\n  }\n}, 4);\n/**\n * shipping\n */Meteor.publish(\"Shipping\", function (query, options) {\n  check(query, Match.Optional(Object));\n  check(options, Match.Optional(Object));\n  var shopId = Reaction.getShopId();\n\n  if (!shopId) {\n    return this.ready();\n  }\n\n  var select = query || {};\n  select.shopId = shopId; // appends a count to the collection\n  // we're doing this for use with griddleTable\n\n  Counts.publish(this, \"shipping-count\", Shipping.find(select, options));\n  return Shipping.find(select, options);\n});","map":{"version":3,"sources":["/server/publications/collections/shipping.js"],"names":["Meteor","Match","check","Counts","Shipping","Reaction","publish","query","options","Optional","Object","shopId","getShopId","ready","select","find"],"mappings":"AAAA,IAAS;AAAT,OAAuB,WAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;G,AACA,AAAS,AAAO,AAAa,AAC7B,AAAS,AAAc,AACvB,AAAS,AAAgB,AACzB,AAAS,AAAgB,AACzB;AAIA,AAAO,AAAQ,AAAY,AAAU,AAAO,AAAS,AACnD,AAAM,AAAO,AAAM,AAAS;;UACtB,QAAN,AAAe,AAAM,YAAN,AAAe,UAA9B,AAAe;QAET,OAAS,MAAS,SAAxB,AAAe;gCACf,AAAI,AAAC,AAAQ,AACX;MAAO,AAAK,SAAZ,AAAO,SACR;;;gBACD;AAAA,AAAM,AAAS,AAAS,AACxB;;MAAA,AAAO,SAT4C,AASnD,AAAgB,SAEhB,AACA;kBACA,OATA,CASA,AAAO,AAAQ,AAAM,AAAkB,AAAS,AAC9C,AACA,AAGF;AAlBF,AAkBE,AAAO,AAAS,AACd,AACA,AAEH;;;;CApBC","file":"/server/publications/collections/shipping.js.map","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport { Match, check } from \"meteor/check\";\nimport { Counts } from \"meteor/tmeasday:publish-counts\";\nimport { Shipping } from \"/lib/collections\";\nimport { Reaction } from \"/server/api\";\n/**\n * shipping\n */\n\nMeteor.publish(\"Shipping\", function (query, options) {\n  check(query, Match.Optional(Object));\n  check(options, Match.Optional(Object));\n\n  const shopId = Reaction.getShopId();\n  if (!shopId) {\n    return this.ready();\n  }\n  const select = query || {};\n  select.shopId = shopId;\n\n  // appends a count to the collection\n  // we're doing this for use with griddleTable\n  Counts.publish(this, \"shipping-count\", Shipping.find(\n    select,\n    options\n  ));\n\n  return Shipping.find(\n    select,\n    options\n  );\n});\n"]},"hash":"e0722dd33626f10c63508a4f9e32d74abb6ad9bb"}
