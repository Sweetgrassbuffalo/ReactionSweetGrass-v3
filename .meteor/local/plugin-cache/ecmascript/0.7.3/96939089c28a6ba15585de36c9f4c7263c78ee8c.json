{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/aldeed:template-extension/lib/template-inherits-events-from.js","filenameRelative":"/packages/aldeed:template-extension/lib/template-inherits-events-from.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/aldeed:template-extension/lib/template-inherits-events-from.js.map","sourceFileName":"/packages/aldeed:template-extension/lib/template-inherits-events-from.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"template-inherits-events-from"},"ignored":false,"code":"Template.prototype.inheritsEventsFrom = function () {\n  function inheritsEventsFrom(otherTemplate) {\n    var self = this;\n    self.__eventMaps = self.__eventMaps || [];\n\n    function inheritEvents(template) {\n      // String template names can be provided and template object is looked up\n      if (typeof template === 'string') template = Template[template];\n      if (!template) return;\n      self.__eventMaps = self.__eventMaps.concat(template.__eventMaps);\n    } // Accept an array as otherTemplate argument\n\n\n    if (Array.isArray(otherTemplate)) {\n      otherTemplate.forEach(inheritEvents);\n      return;\n    } // otherTemplate is a string\n\n\n    inheritEvents(otherTemplate);\n  }\n\n  return inheritsEventsFrom;\n}();","map":{"version":3,"sources":["/packages/aldeed:template-extension/lib/template-inherits-events-from.js"],"names":["Template","prototype","inheritsEventsFrom","otherTemplate","self","__eventMaps","inheritEvents","template","concat","Array","isArray","forEach"],"mappings":"AAAAA,SAASC,SAAT,CAAmBC,kBAAnB;AAAwC,WAASA,kBAAT,CAA4BC,aAA5B,EAA2C;AACjF,QAAIC,OAAO,IAAX;AAEAA,SAAKC,WAAL,GAAmBD,KAAKC,WAAL,IAAoB,EAAvC;;AAEA,aAASC,aAAT,CAAuBC,QAAvB,EAAiC;AAC/B;AACA,UAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkCA,WAAWP,SAASO,QAAT,CAAX;AAClC,UAAI,CAACA,QAAL,EAAe;AAEfH,WAAKC,WAAL,GAAmBD,KAAKC,WAAL,CAAiBG,MAAjB,CAAwBD,SAASF,WAAjC,CAAnB;AACD,KAXgF,CAajF;;;AACA,QAAII,MAAMC,OAAN,CAAcP,aAAd,CAAJ,EAAkC;AAChCA,oBAAcQ,OAAd,CAAsBL,aAAtB;AACA;AACD,KAjBgF,CAmBjF;;;AACAA,kBAAcH,aAAd;AACD;;AArBD,SAAiDD,kBAAjD;AAAA","file":"/packages/aldeed:template-extension/lib/template-inherits-events-from.js.map","sourcesContent":["Template.prototype.inheritsEventsFrom = function inheritsEventsFrom(otherTemplate) {\n  var self = this;\n\n  self.__eventMaps = self.__eventMaps || [];\n\n  function inheritEvents(template) {\n    // String template names can be provided and template object is looked up\n    if (typeof template === 'string') template = Template[template];\n    if (!template) return;\n\n    self.__eventMaps = self.__eventMaps.concat(template.__eventMaps);\n  }\n\n  // Accept an array as otherTemplate argument\n  if (Array.isArray(otherTemplate)) {\n    otherTemplate.forEach(inheritEvents);\n    return;\n  }\n\n  // otherTemplate is a string\n  inheritEvents(otherTemplate);\n};\n"]},"hash":"96939089c28a6ba15585de36c9f4c7263c78ee8c"}
