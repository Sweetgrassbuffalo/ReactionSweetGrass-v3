{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"/lib/collections","imported":["Packages"],"specifiers":[{"kind":"named","imported":"Packages","local":"Packages"}]},{"source":"/lib/api","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Reaction"}]}],"exports":{"exported":["Express"],"specifiers":[{"kind":"local","local":"Express","exported":"Express"}]}}},"options":{"filename":"/imports/plugins/included/payments-paypal/lib/api/express.js","filenameRelative":"/imports/plugins/included/payments-paypal/lib/api/express.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/included/payments-paypal/lib/api/express.js"],"names":["Meteor","Packages","Reaction","getSettings","settings","ref","valueName","Express","expressCheckoutAccountOptions","shopId","getShopId","findOne","name","enabled","mode","express_mode","paypal","options","express","username","password","signature","merchantId","return_url","getAbsoluteUrl","cancel_url","url","config","accountOptions"],"mappings":"AAAA;;AACA,WAAS;;;AAAT;AAAuB,OAAvB;;;;;;;;;;;;;;;;GACA,AAAS,AAAgB,AACzB,AAAO,AAAc,AAErB,AAAS,AAAY,AAAU,AAAK,AAAW;;AAC7C,AAAI,SAAa,YAAjB,AAAuB,0BACrB;MAAO,aAAS,MADlB,AACE,AAAO,AACR;AAAM,WAAI,SAAJ,AAAY,AAAM,AACvB;SAAO,IAAI,QAAX,AAAO,MACR;;AACD;;SAAA,AAAO,AACR;A,AAED,AACA,EACA;;AAEA,AAAO,AAAM,AAAU,AACrB;;;;AACQ,AAAS,AAAS,iCAAxB,AAAe,YACf;QAAM,SAAW,SAAA,AAAS,AAAQ,AAChC;QAAM;YAD0B,AAExB,AACR;cAHe,AAAiB,AAGvB;AACR,eAJH,AAKA;AAHE,KAFgC,EAKlC,AAAI;QAEJ,AAAI,AAAC,AAAa,AAAO,AAAS,AAAe,AAAK,AAAO,AAAM,AACjE;;SAAO,aAAP,iDADF,AAEC;AAAM,aACL;WAAA,AAAO,AACR;;AACD;;QAAM,MAAM,OAAA,AAAO,SAAnB,AAA4B,AAE5B,AAAM,AAAU,AACd;QAAS;AACH,eAFQ,oDAGd;YAHc,AAGJ,AAAY,AAAU,AAAK,AACrC;gBAAU,YAAA,AAAY,UAAZ,AAAsB,KAJlB,AAIJ,AAA2B,AACrC;gBAAW,YAAA,AAAY,UAAZ,AAAsB,KALnB,AAKH,AAA2B,AACtC;iBAAY,YAAA,AAAY,UAAZ,AAAsB,KANpB,AAMF,AAA2B,AACvC;kBAAY,AAAS,sBAAT,AAAwB,KAPtB,AAOF,AACZ;kBAAY,SAAA,AAAS,eARvB,AAAgB,AAQF,AAAwB;0CAEtC;AAVgB,AACL,AAAa,AAAO,AAAS,AAAQ,AAAU,AAAK,AAC7D;;QAQE,QAAA,AAAQ,SAAZ,AAAqB,WAAW,AAC9B;cAAA,AAAQ,MAAR,AAAc,AACf;AAFD,WAEO,AACL;cAAA,AAAQ,MAAR,AAAc,AACf;;;WACD;AAAA,AAAO,AACR;AAjCoB,6BAkCrB;SAAQ,AAAU,iBAAV,AAAmB,AACzB;AAnCG,AAAgB,AAmCnB,AAAK,AAAiB,AACvB;AAnC8B,AAAY,AACzC","file":"/imports/plugins/included/payments-paypal/lib/api/express.js.map","sourcesContent":["/* eslint camelcase: 0 */\nimport { Meteor } from \"meteor/meteor\";\nimport { Packages } from \"/lib/collections\";\nimport Reaction from \"/lib/api\";\n\nfunction getSettings(settings, ref, valueName) {\n  if (settings !== null) {\n    return settings[valueName];\n  } else if (ref !== null) {\n    return ref[valueName];\n  }\n  return {};\n}\n\n// using global instance of Reaction\n// Paypal is a shared client/server stub\n// to provide normalized PayPal tooling\n\nexport const Express = {\n  expressCheckoutAccountOptions: function () {\n    const shopId = Reaction.getShopId();\n    const settings = Packages.findOne({\n      name: \"reaction-paypal\",\n      shopId: shopId,\n      enabled: true\n    }).settings;\n    let mode;\n\n    if ((settings !== null ? settings.express_mode : void 0) === true) {\n      mode = \"production\";\n    } else {\n      mode = \"sandbox\";\n    }\n    const ref = Meteor.settings.paypal;\n\n    const options = {\n      enabled: settings !== null ? settings.express.enabled : void 0,\n      mode: mode,\n      username: getSettings(settings, ref, \"username\"),\n      password: getSettings(settings, ref, \"password\"),\n      signature: getSettings(settings, ref, \"signature\"),\n      merchantId: getSettings(settings, ref, \"merchantId\"),\n      return_url: Reaction.getAbsoluteUrl(\"/paypal/done\"),\n      cancel_url: Reaction.getAbsoluteUrl(\"/paypal/cancel\")\n    };\n    if (options.mode === \"sandbox\") {\n      options.url = \"https://api-3t.sandbox.paypal.com/nvp\";\n    } else {\n      options.url = \"https://api-3t.paypal.com/nvp\";\n    }\n    return options;\n  },\n  config: function (options) {\n    this.accountOptions = options;\n  }\n};\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/included/payments-paypal/lib/api/express.js.map","sourceFileName":"/imports/plugins/included/payments-paypal/lib/api/express.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"express"},"ignored":false,"code":"module.export({\n  Express: function () {\n    return Express;\n  }\n});\nvar Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Packages = void 0;\nmodule.importSync(\"/lib/collections\", {\n  Packages: function (v) {\n    Packages = v;\n  }\n}, 1);\nvar Reaction = void 0;\nmodule.importSync(\"/lib/api\", {\n  \"default\": function (v) {\n    Reaction = v;\n  }\n}, 2);\n\nfunction getSettings(settings, ref, valueName) {\n  if (settings !== null) {\n    return settings[valueName];\n  } else if (ref !== null) {\n    return ref[valueName];\n  }\n\n  return {};\n} // using global instance of Reaction\n// Paypal is a shared client/server stub\n// to provide normalized PayPal tooling\n\n\nvar Express = {\n  expressCheckoutAccountOptions: function () {\n    var shopId = Reaction.getShopId();\n    var settings = Packages.findOne({\n      name: \"reaction-paypal\",\n      shopId: shopId,\n      enabled: true\n    }).settings;\n    var mode = void 0;\n\n    if ((settings !== null ? settings.express_mode : void 0) === true) {\n      mode = \"production\";\n    } else {\n      mode = \"sandbox\";\n    }\n\n    var ref = Meteor.settings.paypal;\n    var options = {\n      enabled: settings !== null ? settings.express.enabled : void 0,\n      mode: mode,\n      username: getSettings(settings, ref, \"username\"),\n      password: getSettings(settings, ref, \"password\"),\n      signature: getSettings(settings, ref, \"signature\"),\n      merchantId: getSettings(settings, ref, \"merchantId\"),\n      return_url: Reaction.getAbsoluteUrl(\"/paypal/done\"),\n      cancel_url: Reaction.getAbsoluteUrl(\"/paypal/cancel\")\n    };\n\n    if (options.mode === \"sandbox\") {\n      options.url = \"https://api-3t.sandbox.paypal.com/nvp\";\n    } else {\n      options.url = \"https://api-3t.paypal.com/nvp\";\n    }\n\n    return options;\n  },\n  config: function (options) {\n    this.accountOptions = options;\n  }\n};","map":{"version":3,"sources":["/imports/plugins/included/payments-paypal/lib/api/express.js"],"names":["Meteor","Packages","Reaction","getSettings","settings","ref","valueName","Express","expressCheckoutAccountOptions","shopId","getShopId","findOne","name","enabled","mode","express_mode","paypal","options","express","username","password","signature","merchantId","return_url","getAbsoluteUrl","cancel_url","url","config","accountOptions"],"mappings":"AAAA;;AACA,WAAS;;;AAAT;AAAuB,OAAvB;;;;;;;;;;;;;;;;GACA,AAAS,AAAgB,AACzB,AAAO,AAAc,AAErB,AAAS,AAAY,AAAU,AAAK,AAAW;;AAC7C,AAAI,SAAa,YAAjB,AAAuB,0BACrB;MAAO,aAAS,MADlB,AACE,AAAO,AACR;AAAM,WAAI,SAAJ,AAAY,AAAM,AACvB;SAAO,IAAI,QAAX,AAAO,MACR;;AACD;;SAAA,AAAO,AACR;A,AAED,AACA,EACA;;AAEA,AAAO,AAAM,AAAU,AACrB;;;;AACQ,AAAS,AAAS,iCAAxB,AAAe,YACf;QAAM,SAAW,SAAA,AAAS,AAAQ,AAChC;QAAM;YAD0B,AAExB,AACR;cAHe,AAAiB,AAGvB;AACR,eAJH,AAKA;AAHE,KAFgC,EAKlC,AAAI;QAEJ,AAAI,AAAC,AAAa,AAAO,AAAS,AAAe,AAAK,AAAO,AAAM,AACjE;;SAAO,aAAP,iDADF,AAEC;AAAM,aACL;WAAA,AAAO,AACR;;AACD;;QAAM,MAAM,OAAA,AAAO,SAAnB,AAA4B,AAE5B,AAAM,AAAU,AACd;QAAS;AACH,eAFQ,oDAGd;YAHc,AAGJ,AAAY,AAAU,AAAK,AACrC;gBAAU,YAAA,AAAY,UAAZ,AAAsB,KAJlB,AAIJ,AAA2B,AACrC;gBAAW,YAAA,AAAY,UAAZ,AAAsB,KALnB,AAKH,AAA2B,AACtC;iBAAY,YAAA,AAAY,UAAZ,AAAsB,KANpB,AAMF,AAA2B,AACvC;kBAAY,AAAS,sBAAT,AAAwB,KAPtB,AAOF,AACZ;kBAAY,SAAA,AAAS,eARvB,AAAgB,AAQF,AAAwB;0CAEtC;AAVgB,AACL,AAAa,AAAO,AAAS,AAAQ,AAAU,AAAK,AAC7D;;QAQE,QAAA,AAAQ,SAAZ,AAAqB,WAAW,AAC9B;cAAA,AAAQ,MAAR,AAAc,AACf;AAFD,WAEO,AACL;cAAA,AAAQ,MAAR,AAAc,AACf;;;WACD;AAAA,AAAO,AACR;AAjCoB,6BAkCrB;SAAQ,AAAU,iBAAV,AAAmB,AACzB;AAnCG,AAAgB,AAmCnB,AAAK,AAAiB,AACvB;AAnC8B,AAAY,AACzC","file":"/imports/plugins/included/payments-paypal/lib/api/express.js.map","sourcesContent":["/* eslint camelcase: 0 */\nimport { Meteor } from \"meteor/meteor\";\nimport { Packages } from \"/lib/collections\";\nimport Reaction from \"/lib/api\";\n\nfunction getSettings(settings, ref, valueName) {\n  if (settings !== null) {\n    return settings[valueName];\n  } else if (ref !== null) {\n    return ref[valueName];\n  }\n  return {};\n}\n\n// using global instance of Reaction\n// Paypal is a shared client/server stub\n// to provide normalized PayPal tooling\n\nexport const Express = {\n  expressCheckoutAccountOptions: function () {\n    const shopId = Reaction.getShopId();\n    const settings = Packages.findOne({\n      name: \"reaction-paypal\",\n      shopId: shopId,\n      enabled: true\n    }).settings;\n    let mode;\n\n    if ((settings !== null ? settings.express_mode : void 0) === true) {\n      mode = \"production\";\n    } else {\n      mode = \"sandbox\";\n    }\n    const ref = Meteor.settings.paypal;\n\n    const options = {\n      enabled: settings !== null ? settings.express.enabled : void 0,\n      mode: mode,\n      username: getSettings(settings, ref, \"username\"),\n      password: getSettings(settings, ref, \"password\"),\n      signature: getSettings(settings, ref, \"signature\"),\n      merchantId: getSettings(settings, ref, \"merchantId\"),\n      return_url: Reaction.getAbsoluteUrl(\"/paypal/done\"),\n      cancel_url: Reaction.getAbsoluteUrl(\"/paypal/cancel\")\n    };\n    if (options.mode === \"sandbox\") {\n      options.url = \"https://api-3t.sandbox.paypal.com/nvp\";\n    } else {\n      options.url = \"https://api-3t.paypal.com/nvp\";\n    }\n    return options;\n  },\n  config: function (options) {\n    this.accountOptions = options;\n  }\n};\n"]},"hash":"68f0dd9ff09f3b17292eba8857da472ffa016dca"}
