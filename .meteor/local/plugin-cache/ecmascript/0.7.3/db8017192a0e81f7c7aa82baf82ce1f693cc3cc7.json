{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"lodash/includes","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_includes"}]},{"source":"react","imported":["default","Component","PropTypes"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"},{"kind":"named","imported":"PropTypes","local":"PropTypes"}]},{"source":"/imports/plugins/core/ui/client/components","imported":["TextField","Translation","Checkbox"],"specifiers":[{"kind":"named","imported":"TextField","local":"TextField"},{"kind":"named","imported":"Translation","local":"Translation"},{"kind":"named","imported":"Checkbox","local":"Checkbox"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/included/payments-example/client/settings/components/exampleSettingsForm.js","filenameRelative":"/imports/plugins/included/payments-example/client/settings/components/exampleSettingsForm.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/included/payments-example/client/settings/components/exampleSettingsForm.js"],"names":["React","Component","PropTypes","TextField","Translation","Checkbox","ExampleSettingsForm","constructor","props","state","settings","apiKey","support","checkbox","handleStateChange","e","target","name","value","setState","handleCheckBox","event","isInputChecked","push","index","indexOf","splice","handleSubmit","preventDefault","onSubmit","render","setting","Authorize","Capture","Refund","propTypes","onChange","func","isRequired","object"],"mappings":"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","file":"/imports/plugins/included/payments-example/client/settings/components/exampleSettingsForm.js.map","sourcesContent":["import React, { Component, PropTypes } from \"react\";\nimport _ from \"lodash\";\nimport { TextField, Translation, Checkbox } from \"/imports/plugins/core/ui/client/components\";\n\nclass ExampleSettingsForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      settings: {\n        apiKey: props.settings.apiKey,\n        support: props.settings.support\n      },\n      checkbox: {\n        \"Authorize\": _.includes(props.settings.support, \"Authorize\"),\n        \"De-authorize\": _.includes(props.settings.support, \"De-authorize\"),\n        \"Capture\": _.includes(props.settings.support, \"Capture\"),\n        \"Refund\": _.includes(props.settings.support, \"Refund\")\n      }\n    };\n  }\n\n  handleStateChange = (e) => {\n    const { settings } = this.state;\n    settings[e.target.name] = e.target.value;\n    this.setState({ settings });\n  }\n\n  handleCheckBox = (event, isInputChecked, name) => {\n    const { checkbox, settings } = this.state;\n    checkbox[name] = isInputChecked;\n    this.setState({ checkbox });\n    if (!_.includes(settings.support, name) && isInputChecked) {\n      settings.support.push(name);\n      return this.setState({ settings });\n    }\n    const index = settings.support.indexOf(name);\n    settings.support.splice(index, 1);\n    return this.setState({ settings });\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    return this.props.onSubmit(this.state.settings);\n  }\n\n\n  render() {\n    const { settings } = this.props;\n    const setting = this.state.settings;\n\n    return (\n      <div>\n        { !settings.apiKey &&\n          <div className=\"alert alert-info\">\n            <Translation defaultValue=\"Example Credentials\" i18nKey=\"admin.paymentSettings.exampleCredentials\"/>\n          </div>\n        }\n\n        <form onSubmit={this.handleSubmit}>\n          <TextField\n            label=\"API Key\"\n            name=\"apiKey\"\n            type=\"text\"\n            onChange={this.handleStateChange}\n            value={setting.apiKey}\n          />\n\n          <label className=\"control-label\">\n            <Translation defaultValue=\"Payment provider supported methods\" i18nKey=\"reaction-payments.paymentSettings.supportedMethodsLabel\"/>\n          </label>\n          <br/>\n\n          <div>\n            <Checkbox\n              label=\"Authorize\"\n              onChange={this.handleCheckBox}\n              name=\"Authorize\"\n              checked={this.state.checkbox.Authorize}\n            />\n          </div>\n\n          <div>\n            <Checkbox\n              label=\"De-authorize\"\n              onChange={this.handleCheckBox}\n              name=\"De-authorize\"\n              checked={this.state.checkbox[\"De-authorize\"]}\n            />\n          </div>\n\n          <div>\n            <Checkbox\n              label=\"Capture\"\n              onChange={this.handleCheckBox}\n              name=\"Capture\"\n              checked={this.state.checkbox.Capture}\n            />\n          </div>\n\n          <div>\n            <Checkbox\n              label=\"Refund\"\n              onChange={this.handleCheckBox}\n              name=\"Refund\"\n              checked={this.state.checkbox.Refund}\n            />\n          </div>\n\n\n          <button className=\"btn btn-primary pull-right\" type=\"submit\">\n            <Translation defaultValue=\"Save Changes\" i18nKey=\"app.saveChanges\"/>\n          </button>\n        </form>\n\n      </div>\n    );\n  }\n}\n\nExampleSettingsForm.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  settings: PropTypes.object\n};\n\nexport default ExampleSettingsForm;\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/included/payments-example/client/settings/components/exampleSettingsForm.js.map","sourceFileName":"/imports/plugins/included/payments-example/client/settings/components/exampleSettingsForm.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"exampleSettingsForm"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _includes = void 0;\n\nmodule.importSync(\"lodash/includes\", {\n  \"default\": function (v) {\n    _includes = v;\n  }\n}, 0);\nvar React = void 0,\n    Component = void 0,\n    PropTypes = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  },\n  PropTypes: function (v) {\n    PropTypes = v;\n  }\n}, 1);\nvar TextField = void 0,\n    Translation = void 0,\n    Checkbox = void 0;\nmodule.importSync(\"/imports/plugins/core/ui/client/components\", {\n  TextField: function (v) {\n    TextField = v;\n  },\n  Translation: function (v) {\n    Translation = v;\n  },\n  Checkbox: function (v) {\n    Checkbox = v;\n  }\n}, 2);\n\nvar ExampleSettingsForm = function (_Component) {\n  (0, _inherits3.default)(ExampleSettingsForm, _Component);\n\n  function ExampleSettingsForm(props) {\n    (0, _classCallCheck3.default)(this, ExampleSettingsForm);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));\n\n    _this.handleStateChange = function (e) {\n      var settings = _this.state.settings;\n      settings[e.target.name] = e.target.value;\n\n      _this.setState({\n        settings: settings\n      });\n    };\n\n    _this.handleCheckBox = function (event, isInputChecked, name) {\n      var _this$state = _this.state,\n          checkbox = _this$state.checkbox,\n          settings = _this$state.settings;\n      checkbox[name] = isInputChecked;\n\n      _this.setState({\n        checkbox: checkbox\n      });\n\n      if (!_includes(settings.support, name) && isInputChecked) {\n        settings.support.push(name);\n        return _this.setState({\n          settings: settings\n        });\n      }\n\n      var index = settings.support.indexOf(name);\n      settings.support.splice(index, 1);\n      return _this.setState({\n        settings: settings\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      return _this.props.onSubmit(_this.state.settings);\n    };\n\n    _this.state = {\n      settings: {\n        apiKey: props.settings.apiKey,\n        support: props.settings.support\n      },\n      checkbox: {\n        \"Authorize\": _includes(props.settings.support, \"Authorize\"),\n        \"De-authorize\": _includes(props.settings.support, \"De-authorize\"),\n        \"Capture\": _includes(props.settings.support, \"Capture\"),\n        \"Refund\": _includes(props.settings.support, \"Refund\")\n      }\n    };\n    return _this;\n  }\n\n  ExampleSettingsForm.prototype.render = function () {\n    function render() {\n      var settings = this.props.settings;\n      var setting = this.state.settings;\n      return React.createElement(\n        \"div\",\n        null,\n        !settings.apiKey && React.createElement(\n          \"div\",\n          {\n            className: \"alert alert-info\"\n          },\n          React.createElement(Translation, {\n            defaultValue: \"Example Credentials\",\n            i18nKey: \"admin.paymentSettings.exampleCredentials\"\n          })\n        ),\n        React.createElement(\n          \"form\",\n          {\n            onSubmit: this.handleSubmit\n          },\n          React.createElement(TextField, {\n            label: \"API Key\",\n            name: \"apiKey\",\n            type: \"text\",\n            onChange: this.handleStateChange,\n            value: setting.apiKey\n          }),\n          React.createElement(\n            \"label\",\n            {\n              className: \"control-label\"\n            },\n            React.createElement(Translation, {\n              defaultValue: \"Payment provider supported methods\",\n              i18nKey: \"reaction-payments.paymentSettings.supportedMethodsLabel\"\n            })\n          ),\n          React.createElement(\"br\", null),\n          React.createElement(\n            \"div\",\n            null,\n            React.createElement(Checkbox, {\n              label: \"Authorize\",\n              onChange: this.handleCheckBox,\n              name: \"Authorize\",\n              checked: this.state.checkbox.Authorize\n            })\n          ),\n          React.createElement(\n            \"div\",\n            null,\n            React.createElement(Checkbox, {\n              label: \"De-authorize\",\n              onChange: this.handleCheckBox,\n              name: \"De-authorize\",\n              checked: this.state.checkbox[\"De-authorize\"]\n            })\n          ),\n          React.createElement(\n            \"div\",\n            null,\n            React.createElement(Checkbox, {\n              label: \"Capture\",\n              onChange: this.handleCheckBox,\n              name: \"Capture\",\n              checked: this.state.checkbox.Capture\n            })\n          ),\n          React.createElement(\n            \"div\",\n            null,\n            React.createElement(Checkbox, {\n              label: \"Refund\",\n              onChange: this.handleCheckBox,\n              name: \"Refund\",\n              checked: this.state.checkbox.Refund\n            })\n          ),\n          React.createElement(\n            \"button\",\n            {\n              className: \"btn btn-primary pull-right\",\n              type: \"submit\"\n            },\n            React.createElement(Translation, {\n              defaultValue: \"Save Changes\",\n              i18nKey: \"app.saveChanges\"\n            })\n          )\n        )\n      );\n    }\n\n    return render;\n  }();\n\n  return ExampleSettingsForm;\n}(Component);\n\nExampleSettingsForm.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  settings: PropTypes.object\n};\nmodule.export(\"default\", exports.default = ExampleSettingsForm);","map":{"version":3,"sources":["/imports/plugins/included/payments-example/client/settings/components/exampleSettingsForm.js"],"names":["React","Component","PropTypes","TextField","Translation","Checkbox","ExampleSettingsForm","constructor","props","state","settings","apiKey","support","checkbox","handleStateChange","e","target","name","value","setState","handleCheckBox","event","isInputChecked","push","index","indexOf","splice","handleSubmit","preventDefault","onSubmit","render","setting","Authorize","Capture","Refund","propTypes","onChange","func","isRequired","object"],"mappings":"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","file":"/imports/plugins/included/payments-example/client/settings/components/exampleSettingsForm.js.map","sourcesContent":["import React, { Component, PropTypes } from \"react\";\nimport _ from \"lodash\";\nimport { TextField, Translation, Checkbox } from \"/imports/plugins/core/ui/client/components\";\n\nclass ExampleSettingsForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      settings: {\n        apiKey: props.settings.apiKey,\n        support: props.settings.support\n      },\n      checkbox: {\n        \"Authorize\": _.includes(props.settings.support, \"Authorize\"),\n        \"De-authorize\": _.includes(props.settings.support, \"De-authorize\"),\n        \"Capture\": _.includes(props.settings.support, \"Capture\"),\n        \"Refund\": _.includes(props.settings.support, \"Refund\")\n      }\n    };\n  }\n\n  handleStateChange = (e) => {\n    const { settings } = this.state;\n    settings[e.target.name] = e.target.value;\n    this.setState({ settings });\n  }\n\n  handleCheckBox = (event, isInputChecked, name) => {\n    const { checkbox, settings } = this.state;\n    checkbox[name] = isInputChecked;\n    this.setState({ checkbox });\n    if (!_.includes(settings.support, name) && isInputChecked) {\n      settings.support.push(name);\n      return this.setState({ settings });\n    }\n    const index = settings.support.indexOf(name);\n    settings.support.splice(index, 1);\n    return this.setState({ settings });\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    return this.props.onSubmit(this.state.settings);\n  }\n\n\n  render() {\n    const { settings } = this.props;\n    const setting = this.state.settings;\n\n    return (\n      <div>\n        { !settings.apiKey &&\n          <div className=\"alert alert-info\">\n            <Translation defaultValue=\"Example Credentials\" i18nKey=\"admin.paymentSettings.exampleCredentials\"/>\n          </div>\n        }\n\n        <form onSubmit={this.handleSubmit}>\n          <TextField\n            label=\"API Key\"\n            name=\"apiKey\"\n            type=\"text\"\n            onChange={this.handleStateChange}\n            value={setting.apiKey}\n          />\n\n          <label className=\"control-label\">\n            <Translation defaultValue=\"Payment provider supported methods\" i18nKey=\"reaction-payments.paymentSettings.supportedMethodsLabel\"/>\n          </label>\n          <br/>\n\n          <div>\n            <Checkbox\n              label=\"Authorize\"\n              onChange={this.handleCheckBox}\n              name=\"Authorize\"\n              checked={this.state.checkbox.Authorize}\n            />\n          </div>\n\n          <div>\n            <Checkbox\n              label=\"De-authorize\"\n              onChange={this.handleCheckBox}\n              name=\"De-authorize\"\n              checked={this.state.checkbox[\"De-authorize\"]}\n            />\n          </div>\n\n          <div>\n            <Checkbox\n              label=\"Capture\"\n              onChange={this.handleCheckBox}\n              name=\"Capture\"\n              checked={this.state.checkbox.Capture}\n            />\n          </div>\n\n          <div>\n            <Checkbox\n              label=\"Refund\"\n              onChange={this.handleCheckBox}\n              name=\"Refund\"\n              checked={this.state.checkbox.Refund}\n            />\n          </div>\n\n\n          <button className=\"btn btn-primary pull-right\" type=\"submit\">\n            <Translation defaultValue=\"Save Changes\" i18nKey=\"app.saveChanges\"/>\n          </button>\n        </form>\n\n      </div>\n    );\n  }\n}\n\nExampleSettingsForm.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  settings: PropTypes.object\n};\n\nexport default ExampleSettingsForm;\n"]},"hash":"db8017192a0e81f7c7aa82baf82ce1f693cc3cc7"}
