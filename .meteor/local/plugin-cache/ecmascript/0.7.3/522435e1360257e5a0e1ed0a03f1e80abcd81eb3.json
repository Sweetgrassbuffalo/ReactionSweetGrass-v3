{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/templating","imported":["Template"],"specifiers":[{"kind":"named","imported":"Template","local":"Template"}]},{"source":"/client/api","imported":["Reaction","i18next"],"specifiers":[{"kind":"named","imported":"Reaction","local":"Reaction"},{"kind":"named","imported":"i18next","local":"i18next"}]},{"source":"/lib/collections","imported":["Shops"],"specifiers":[{"kind":"named","imported":"Shops","local":"Shops"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/core/payments/client/settings/settings.js","filenameRelative":"/imports/plugins/core/payments/client/settings/settings.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/core/payments/client/settings/settings.js"],"names":["Template","Reaction","i18next","Shops","paymentSettings","helpers","checked","enabled","shown","paymentMethodOptions","paymentMethods","Apps","provides","options","label","t","value","_","isArray","method","push","i18nKeyLabel","settingsKey","shop","findOne","getShopId","events","event","preventDefault","target","getAttribute","packageId","fields","property","Meteor","call","AutoForm","hooks","shopEditPaymentMethodsForm","onSuccess","Alerts","toast","onError","operation","error"],"mappings":"AAAA,IAAS;AAAT,OAAyB,WAAzB;;;;;;;;;;;;;;;;;;;;GACA,AAAS,AAAU,AAAe,AAClC,AAAS,AAAa,AAEtB,AAAS,AAAgB,AAAQ;AAC/B,SAAA,AAAQ,AAAS;AACX,8BAAJ,AAAgB,AAAM,AACpB;QAAO,YAAP,MACD;;AACD;;WAAA,AAAO,AACR;AAN8B;4BAO/B;QAAA,AAAM,AAAS,kBACb;AAAI,aAAJ,AAAgB,AAAM,AACpB;AAAA,AAAO,AACR;;;AACD;AAAA,AAAO,oCAXsB,AAY9B;;;;;uBACsB,AACrB;AAAM,aAAN,AAAuB,AAAS,AAAK,AAAE,AAAU,AACjD;AAFF;;QAEQ,AAAU,AAAC,6CACf;AAAO,2BADQ,AACR;AACP;;;;;;;;;;;YADO,AAAQ,AAAE;;YACV,yBAFT,AAAgB,AAAC;;oCAKjB,AAAI;0BAAJ,AAAsB,AAAE,AAAQ,AAAiB,AAC/C,AAAK,AAAM,AAAU,AAAgB,AACnC;;AAAA,AAAI,AAAO,AAAY,AAAM,AAC3B;AAAA,AAAQ,AAAK,AACX;AADW,AACJ,AAAQ,AAAE,AAAO,AACxB;;WAFW,AAEJ,AAAO;AAFhB,AAID;oBACF;kCACF;AACD,AAAO;AA5BP,IAF6B,AA+B9B;;;AACM;UACL,AAAO,AAAM,AAAQ,AAAS,AAC/B;;8CAlCH,A,AAAiC;AAqCjC;gBACA;AAAS,mBAAT,AAAyB,OAAzB,AAAgC,AAC9B,AAA8B,AAAC,AAAU,AACvC;OAPA,CAOA,AAAM,AACN;;QAAM,WAAN,AAAoB,AAAM,AAAO,AAAa,AAC9C;AAAM,kBAAY,AAAM,AAAO,mBAAb,WAAlB,AAAkB,AAA0B,aAC5C;AAAM,kBAAS,AAAC,+CACd;AADc,AACJ,AACV;AANqC,AAIvC,AAAe,AAAC,AAEP,AAAM,AAAO,AAEtB;AAfF;AAgBE,AAAI;AACF,AAAO,AAAK;AACL,eAAP,AAAY,YAAZ,AAAkC,AAAW,AAAC,AAAM,AAAO,AAC5D;oCACF,yCAdH,AAAgC;AAiBhC;AAAS,aAAT,AAAe,4BACb;oBAA4B,AAC1B,MAAW,UAAY,wDACrB,AAAO,AAAO,AAAM,AAAQ,AAAE,AAC5B,AACH;AALL,AAAe,AACe,AAK1B,AAAS,AAAU,AAAW,AAAO,AACnC,AAAO,AAAO,AACX,AAAE,AAAQ,AAAE,AAAyC,AAAG,AAAM,AAAG,AAErE;AAhBC,AAA+B,AAAW,AAAa,AACvD;AAFF,AAAe,AACb","file":"/imports/plugins/core/payments/client/settings/settings.js.map","sourcesContent":["import { Template } from \"meteor/templating\";\nimport { Reaction, i18next } from \"/client/api\";\nimport { Shops } from \"/lib/collections\";\n\nTemplate.paymentSettings.helpers({\n  checked(enabled) {\n    if (enabled === true) {\n      return \"checked\";\n    }\n    return \"\";\n  },\n  shown(enabled) {\n    if (enabled !== true) {\n      return \"hidden\";\n    }\n    return \"\";\n  },\n  paymentMethodOptions() {\n    const paymentMethods = Reaction.Apps({ provides: \"paymentMethod\" });\n    const options = [{\n      label: i18next.t(\"app.auto\"),\n      value: \"none\"\n    }];\n\n    if (paymentMethods && _.isArray(paymentMethods)) {\n      for (const method of paymentMethods) {\n        if (method.enabled === true) {\n          options.push({\n            label: i18next.t(method.i18nKeyLabel),\n            value: method.settingsKey\n          });\n        }\n      }\n    }\n    return options;\n  },\n  shop() {\n    return Shops.findOne(Reaction.getShopId());\n  }\n});\n\n// toggle payment methods visibility\nTemplate.paymentSettings.events({\n  \"change input[name=enabled]\": (event) => {\n    event.preventDefault();\n    const settingsKey = event.target.getAttribute(\"data-key\");\n    const packageId = event.target.getAttribute(\"data-id\");\n    const fields = [{\n      property: \"enabled\",\n      value: event.target.checked\n    }];\n    // update package registry\n    if (packageId) {\n      Meteor.call(\"registry/update\", packageId, settingsKey, fields);\n      Meteor.call(\"shop/togglePackage\", packageId, !event.target.checked);\n    }\n  }\n});\n\nAutoForm.hooks({\n  shopEditPaymentMethodsForm: {\n    onSuccess: function () {\n      return Alerts.toast(i18next.t(\"shopSettings.shopPaymentMethodsSaved\"),\n        \"success\");\n    },\n    onError: function (operation, error) {\n      return Alerts.toast(\n        `${i18next.t(\"shopSettings.shopPaymentMethodsFailed\")} ${error}`, \"error\"\n      );\n    }\n  }\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/core/payments/client/settings/settings.js.map","sourceFileName":"/imports/plugins/core/payments/client/settings/settings.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"settings"},"ignored":false,"code":"var Template = void 0;\nmodule.importSync(\"meteor/templating\", {\n  Template: function (v) {\n    Template = v;\n  }\n}, 0);\nvar Reaction = void 0,\n    i18next = void 0;\nmodule.importSync(\"/client/api\", {\n  Reaction: function (v) {\n    Reaction = v;\n  },\n  i18next: function (v) {\n    i18next = v;\n  }\n}, 1);\nvar Shops = void 0;\nmodule.importSync(\"/lib/collections\", {\n  Shops: function (v) {\n    Shops = v;\n  }\n}, 2);\nTemplate.paymentSettings.helpers({\n  checked: function (enabled) {\n    if (enabled === true) {\n      return \"checked\";\n    }\n\n    return \"\";\n  },\n  shown: function (enabled) {\n    if (enabled !== true) {\n      return \"hidden\";\n    }\n\n    return \"\";\n  },\n  paymentMethodOptions: function () {\n    var paymentMethods = Reaction.Apps({\n      provides: \"paymentMethod\"\n    });\n    var options = [{\n      label: i18next.t(\"app.auto\"),\n      value: \"none\"\n    }];\n\n    if (paymentMethods && _.isArray(paymentMethods)) {\n      for (var _iterator = paymentMethods, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var method = _ref;\n\n        if (method.enabled === true) {\n          options.push({\n            label: i18next.t(method.i18nKeyLabel),\n            value: method.settingsKey\n          });\n        }\n      }\n    }\n\n    return options;\n  },\n  shop: function () {\n    return Shops.findOne(Reaction.getShopId());\n  }\n}); // toggle payment methods visibility\n\nTemplate.paymentSettings.events({\n  \"change input[name=enabled]\": function (event) {\n    event.preventDefault();\n    var settingsKey = event.target.getAttribute(\"data-key\");\n    var packageId = event.target.getAttribute(\"data-id\");\n    var fields = [{\n      property: \"enabled\",\n      value: event.target.checked\n    }]; // update package registry\n\n    if (packageId) {\n      Meteor.call(\"registry/update\", packageId, settingsKey, fields);\n      Meteor.call(\"shop/togglePackage\", packageId, !event.target.checked);\n    }\n  }\n});\nAutoForm.hooks({\n  shopEditPaymentMethodsForm: {\n    onSuccess: function () {\n      return Alerts.toast(i18next.t(\"shopSettings.shopPaymentMethodsSaved\"), \"success\");\n    },\n    onError: function (operation, error) {\n      return Alerts.toast(i18next.t(\"shopSettings.shopPaymentMethodsFailed\") + \" \" + error, \"error\");\n    }\n  }\n});","map":{"version":3,"sources":["/imports/plugins/core/payments/client/settings/settings.js"],"names":["Template","Reaction","i18next","Shops","paymentSettings","helpers","checked","enabled","shown","paymentMethodOptions","paymentMethods","Apps","provides","options","label","t","value","_","isArray","method","push","i18nKeyLabel","settingsKey","shop","findOne","getShopId","events","event","preventDefault","target","getAttribute","packageId","fields","property","Meteor","call","AutoForm","hooks","shopEditPaymentMethodsForm","onSuccess","Alerts","toast","onError","operation","error"],"mappings":"AAAA,IAAS;AAAT,OAAyB,WAAzB;;;;;;;;;;;;;;;;;;;;GACA,AAAS,AAAU,AAAe,AAClC,AAAS,AAAa,AAEtB,AAAS,AAAgB,AAAQ;AAC/B,SAAA,AAAQ,AAAS;AACX,8BAAJ,AAAgB,AAAM,AACpB;QAAO,YAAP,MACD;;AACD;;WAAA,AAAO,AACR;AAN8B;4BAO/B;QAAA,AAAM,AAAS,kBACb;AAAI,aAAJ,AAAgB,AAAM,AACpB;AAAA,AAAO,AACR;;;AACD;AAAA,AAAO,oCAXsB,AAY9B;;;;;uBACsB,AACrB;AAAM,aAAN,AAAuB,AAAS,AAAK,AAAE,AAAU,AACjD;AAFF;;QAEQ,AAAU,AAAC,6CACf;AAAO,2BADQ,AACR;AACP;;;;;;;;;;;YADO,AAAQ,AAAE;;YACV,yBAFT,AAAgB,AAAC;;oCAKjB,AAAI;0BAAJ,AAAsB,AAAE,AAAQ,AAAiB,AAC/C,AAAK,AAAM,AAAU,AAAgB,AACnC;;AAAA,AAAI,AAAO,AAAY,AAAM,AAC3B;AAAA,AAAQ,AAAK,AACX;AADW,AACJ,AAAQ,AAAE,AAAO,AACxB;;WAFW,AAEJ,AAAO;AAFhB,AAID;oBACF;kCACF;AACD,AAAO;AA5BP,IAF6B,AA+B9B;;;AACM;UACL,AAAO,AAAM,AAAQ,AAAS,AAC/B;;8CAlCH,A,AAAiC;AAqCjC;gBACA;AAAS,mBAAT,AAAyB,OAAzB,AAAgC,AAC9B,AAA8B,AAAC,AAAU,AACvC;OAPA,CAOA,AAAM,AACN;;QAAM,WAAN,AAAoB,AAAM,AAAO,AAAa,AAC9C;AAAM,kBAAY,AAAM,AAAO,mBAAb,WAAlB,AAAkB,AAA0B,aAC5C;AAAM,kBAAS,AAAC,+CACd;AADc,AACJ,AACV;AANqC,AAIvC,AAAe,AAAC,AAEP,AAAM,AAAO,AAEtB;AAfF;AAgBE,AAAI;AACF,AAAO,AAAK;AACL,eAAP,AAAY,YAAZ,AAAkC,AAAW,AAAC,AAAM,AAAO,AAC5D;oCACF,yCAdH,AAAgC;AAiBhC;AAAS,aAAT,AAAe,4BACb;oBAA4B,AAC1B,MAAW,UAAY,wDACrB,AAAO,AAAO,AAAM,AAAQ,AAAE,AAC5B,AACH;AALL,AAAe,AACe,AAK1B,AAAS,AAAU,AAAW,AAAO,AACnC,AAAO,AAAO,AACX,AAAE,AAAQ,AAAE,AAAyC,AAAG,AAAM,AAAG,AAErE;AAhBC,AAA+B,AAAW,AAAa,AACvD;AAFF,AAAe,AACb","file":"/imports/plugins/core/payments/client/settings/settings.js.map","sourcesContent":["import { Template } from \"meteor/templating\";\nimport { Reaction, i18next } from \"/client/api\";\nimport { Shops } from \"/lib/collections\";\n\nTemplate.paymentSettings.helpers({\n  checked(enabled) {\n    if (enabled === true) {\n      return \"checked\";\n    }\n    return \"\";\n  },\n  shown(enabled) {\n    if (enabled !== true) {\n      return \"hidden\";\n    }\n    return \"\";\n  },\n  paymentMethodOptions() {\n    const paymentMethods = Reaction.Apps({ provides: \"paymentMethod\" });\n    const options = [{\n      label: i18next.t(\"app.auto\"),\n      value: \"none\"\n    }];\n\n    if (paymentMethods && _.isArray(paymentMethods)) {\n      for (const method of paymentMethods) {\n        if (method.enabled === true) {\n          options.push({\n            label: i18next.t(method.i18nKeyLabel),\n            value: method.settingsKey\n          });\n        }\n      }\n    }\n    return options;\n  },\n  shop() {\n    return Shops.findOne(Reaction.getShopId());\n  }\n});\n\n// toggle payment methods visibility\nTemplate.paymentSettings.events({\n  \"change input[name=enabled]\": (event) => {\n    event.preventDefault();\n    const settingsKey = event.target.getAttribute(\"data-key\");\n    const packageId = event.target.getAttribute(\"data-id\");\n    const fields = [{\n      property: \"enabled\",\n      value: event.target.checked\n    }];\n    // update package registry\n    if (packageId) {\n      Meteor.call(\"registry/update\", packageId, settingsKey, fields);\n      Meteor.call(\"shop/togglePackage\", packageId, !event.target.checked);\n    }\n  }\n});\n\nAutoForm.hooks({\n  shopEditPaymentMethodsForm: {\n    onSuccess: function () {\n      return Alerts.toast(i18next.t(\"shopSettings.shopPaymentMethodsSaved\"),\n        \"success\");\n    },\n    onError: function (operation, error) {\n      return Alerts.toast(\n        `${i18next.t(\"shopSettings.shopPaymentMethodsFailed\")} ${error}`, \"error\"\n      );\n    }\n  }\n});\n"]},"hash":"522435e1360257e5a0e1ed0a03f1e80abcd81eb3"}
