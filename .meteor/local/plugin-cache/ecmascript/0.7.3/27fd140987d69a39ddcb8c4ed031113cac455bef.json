{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"lodash/omit","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_omit"}]},{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"react-dom","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"ReactDOM"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/core/ui/client/helpers/react-template-helper.js","filenameRelative":"/imports/plugins/core/ui/client/helpers/react-template-helper.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/core/ui/client/helpers/react-template-helper.js"],"names":["React","ReactDOM","Template","onRendered","parentTemplate","parentTemplateName","container","firstNode","parentNode","autorun","data","Blaze","getData","comp","component","Error","props","render","createElement","onDestroyed","unmountComponentAtNode","view","getView","name","parentView","m","match","template"],"mappings":";;;;;;;;;;;;;;;;;;GAAA,AAEA,AAAO,AAAP,AAAkB,AAAlB,AACA,AAAO,AAAP,AAAqB,AAArB,AAGA,AACA,AAAS,AAAT,AAAiB,AAAI,AAAJ,AAAa,AAAb,AAA+B,AAAY;AAC1D,AAAO,AAAP;AACD,AAFgB,AAAjB,4DAKA;SAAS,AAAT,AAAe,AAAf,AAA0B,AAAY,AACpC;AAAM,AAAiB,AAAvB,AACA,AAAM,AAAY,AAAK,AAAL,AAAe,AAAjC,AACA,AAAK,AAAL,AAAiB,AAAjB;AAEA,AAAK,SAAL,MAAa,AAAM,uBACjB;MAAM,AAAO,AAAM,iBAAN,AAAb,AAEA;MAAM,AAAO,iBAAQ,AAAK,UAA1B;mBACA,AAAI,AAAC,AAAL,AAAW,AACT;OAAM,QAAI,YAAJ,AACJ,AAAiB,AAAjB,AAAkC,AAAlC,AACE,AAFE,AAAN,AAGD;qBAED;QAAM,OAAQ,AAAO,QAAP,KAAa,AAAb,AAAd;;eACA;YAAS,IAAT,AAAgB,AAAM,AAAN,AAAoB,AAApB,AAA0B,AAA1B,AAAhB,AAAkD,AAAlD,AACD,AAZD,wCAaD,AAlBD,0CAoBA;AAAS,AAAT,AAAe,AAAf,AAA2B,AAAY,AACrC,AAAI,AAAK,AAAT,AAAoB,AAClB;;QAAS,oBAAT,AAAgC,AAAK,AAArC,AACD;;sDACF,AAJD;A,AAMA,AACA;;AACA,SAAS,kBAAT,AAA8B,YAC5B;MAAI,KAAO,AAAM,WAAN,AAAX;yCACA;AAAI,AAAC,AAAD,AAAS,AAAK,AAAL,AAAc,AAA3B,AAA6C,AAC3C;AAAM,AAAI,AAAJ,AAAU,AAAV,AAAN,AACD,AAJ2B,AAK5B;;;AACA,SAAO,AAAK,AAAZ;mBACA;;OAAO,AAAP,QAAa,gCACX;UAAM,IAAI,AAAK,MAAL,AAAU,AAAV,AAAgB,AAAhB,AAAV,AADW,AAEX,AACA;AACA;;;cACA;;AAAI,SAAK,MAAL,AAAiB,AAAK,AAAtB,AAA8B,AAAlC,AAAqC,AACnC;QAAO,IAAE,AAAF,AAAP,gBACD,oBAFD,AAEO,AAAI,AAAK,AAAL,AAAc,AAAlB,AAA0B,AAC/B;AAAO,AAAP,AACD;;;yCAED;AAAO,eAAK,AAAZ,AACD,AAnB2B,AAqB5B;;;AACA,AAAO,AAAP,AACD","file":"/imports/plugins/core/ui/client/helpers/react-template-helper.js.map","sourcesContent":["// http://react-in-meteor.readthedocs.org/en/latest/react-template-helper/\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport _ from \"lodash\";\n\n// Empty template; logic in `onRendered` below\nTemplate.React = new Template(\"Template.React\", function () {\n  return [];\n});\n\n\nTemplate.React.onRendered(function () {\n  const parentTemplate = parentTemplateName();\n  const container = this.firstNode.parentNode;\n  this.container = container;\n\n  this.autorun(() => {\n    const data = Blaze.getData();\n\n    const comp = data && data.component;\n    if (!comp) {\n      throw new Error(\n        \"In template \" + parentTemplate + \", call to `{{> React ... }}` missing \" +\n          \"`component` argument.\");\n    }\n\n    const props = _.omit(data, \"component\");\n    ReactDOM.render(React.createElement(comp, props), container);\n  });\n});\n\nTemplate.React.onDestroyed(function () {\n  if (this.container) {\n    ReactDOM.unmountComponentAtNode(this.container);\n  }\n});\n\n// Gets the name of the template inside of which this instance of `{{> React ...}}`\n// is being used. Used to print more explicit error messages\nfunction parentTemplateName() {\n  let view = Blaze.getView();\n  if (!view || view.name !== \"Template.React\") {\n    throw new Error(\"Unexpected: called outside of Template.React\");\n  }\n  // find the first parent view which is a template or body\n  view = view.parentView;\n  while (view) {\n    const m = view.name.match(/^Template\\.(.*)/);\n    // check `view.name.match(/^Template\\./)` because iron-router (and\n    // maybe other packages) create a view named \"yield\" that has the\n    // `template` property set\n    if (view.template && view.name && m) {\n      return m[1];\n    } else if (view.name === \"body\") {\n      return \"<body>\";\n    }\n\n    view = view.parentView;\n  }\n\n  // not sure when this could happen\n  return \"<unknown>\";\n}\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/core/ui/client/helpers/react-template-helper.js.map","sourceFileName":"/imports/plugins/core/ui/client/helpers/react-template-helper.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"react-template-helper"},"ignored":false,"code":"var _omit = void 0;\n\nmodule.importSync(\"lodash/omit\", {\n  \"default\": function (v) {\n    _omit = v;\n  }\n}, 0);\nvar React = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 1);\nvar ReactDOM = void 0;\nmodule.importSync(\"react-dom\", {\n  \"default\": function (v) {\n    ReactDOM = v;\n  }\n}, 2);\n// Empty template; logic in `onRendered` below\nTemplate.React = new Template(\"Template.React\", function () {\n  return [];\n});\nTemplate.React.onRendered(function () {\n  var parentTemplate = parentTemplateName();\n  var container = this.firstNode.parentNode;\n  this.container = container;\n  this.autorun(function () {\n    var data = Blaze.getData();\n    var comp = data && data.component;\n\n    if (!comp) {\n      throw new Error(\"In template \" + parentTemplate + \", call to `{{> React ... }}` missing \" + \"`component` argument.\");\n    }\n\n    var props = _omit(data, \"component\");\n\n    ReactDOM.render(React.createElement(comp, props), container);\n  });\n});\nTemplate.React.onDestroyed(function () {\n  if (this.container) {\n    ReactDOM.unmountComponentAtNode(this.container);\n  }\n}); // Gets the name of the template inside of which this instance of `{{> React ...}}`\n// is being used. Used to print more explicit error messages\n\nfunction parentTemplateName() {\n  var view = Blaze.getView();\n\n  if (!view || view.name !== \"Template.React\") {\n    throw new Error(\"Unexpected: called outside of Template.React\");\n  } // find the first parent view which is a template or body\n\n\n  view = view.parentView;\n\n  while (view) {\n    var m = view.name.match(/^Template\\.(.*)/); // check `view.name.match(/^Template\\./)` because iron-router (and\n    // maybe other packages) create a view named \"yield\" that has the\n    // `template` property set\n\n    if (view.template && view.name && m) {\n      return m[1];\n    } else if (view.name === \"body\") {\n      return \"<body>\";\n    }\n\n    view = view.parentView;\n  } // not sure when this could happen\n\n\n  return \"<unknown>\";\n}","map":{"version":3,"sources":["/imports/plugins/core/ui/client/helpers/react-template-helper.js"],"names":["React","ReactDOM","Template","onRendered","parentTemplate","parentTemplateName","container","firstNode","parentNode","autorun","data","Blaze","getData","comp","component","Error","props","render","createElement","onDestroyed","unmountComponentAtNode","view","getView","name","parentView","m","match","template"],"mappings":";;;;;;;;;;;;;;;;;;GAAA,AAEA,AAAO,AAAP,AAAkB,AAAlB,AACA,AAAO,AAAP,AAAqB,AAArB,AAGA,AACA,AAAS,AAAT,AAAiB,AAAI,AAAJ,AAAa,AAAb,AAA+B,AAAY;AAC1D,AAAO,AAAP;AACD,AAFgB,AAAjB,4DAKA;SAAS,AAAT,AAAe,AAAf,AAA0B,AAAY,AACpC;AAAM,AAAiB,AAAvB,AACA,AAAM,AAAY,AAAK,AAAL,AAAe,AAAjC,AACA,AAAK,AAAL,AAAiB,AAAjB;AAEA,AAAK,SAAL,MAAa,AAAM,uBACjB;MAAM,AAAO,AAAM,iBAAN,AAAb,AAEA;MAAM,AAAO,iBAAQ,AAAK,UAA1B;mBACA,AAAI,AAAC,AAAL,AAAW,AACT;OAAM,QAAI,YAAJ,AACJ,AAAiB,AAAjB,AAAkC,AAAlC,AACE,AAFE,AAAN,AAGD;qBAED;QAAM,OAAQ,AAAO,QAAP,KAAa,AAAb,AAAd;;eACA;YAAS,IAAT,AAAgB,AAAM,AAAN,AAAoB,AAApB,AAA0B,AAA1B,AAAhB,AAAkD,AAAlD,AACD,AAZD,wCAaD,AAlBD,0CAoBA;AAAS,AAAT,AAAe,AAAf,AAA2B,AAAY,AACrC,AAAI,AAAK,AAAT,AAAoB,AAClB;;QAAS,oBAAT,AAAgC,AAAK,AAArC,AACD;;sDACF,AAJD;A,AAMA,AACA;;AACA,SAAS,kBAAT,AAA8B,YAC5B;MAAI,KAAO,AAAM,WAAN,AAAX;yCACA;AAAI,AAAC,AAAD,AAAS,AAAK,AAAL,AAAc,AAA3B,AAA6C,AAC3C;AAAM,AAAI,AAAJ,AAAU,AAAV,AAAN,AACD,AAJ2B,AAK5B;;;AACA,SAAO,AAAK,AAAZ;mBACA;;OAAO,AAAP,QAAa,gCACX;UAAM,IAAI,AAAK,MAAL,AAAU,AAAV,AAAgB,AAAhB,AAAV,AADW,AAEX,AACA;AACA;;;cACA;;AAAI,SAAK,MAAL,AAAiB,AAAK,AAAtB,AAA8B,AAAlC,AAAqC,AACnC;QAAO,IAAE,AAAF,AAAP,gBACD,oBAFD,AAEO,AAAI,AAAK,AAAL,AAAc,AAAlB,AAA0B,AAC/B;AAAO,AAAP,AACD;;;yCAED;AAAO,eAAK,AAAZ,AACD,AAnB2B,AAqB5B;;;AACA,AAAO,AAAP,AACD","file":"/imports/plugins/core/ui/client/helpers/react-template-helper.js.map","sourcesContent":["// http://react-in-meteor.readthedocs.org/en/latest/react-template-helper/\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport _ from \"lodash\";\n\n// Empty template; logic in `onRendered` below\nTemplate.React = new Template(\"Template.React\", function () {\n  return [];\n});\n\n\nTemplate.React.onRendered(function () {\n  const parentTemplate = parentTemplateName();\n  const container = this.firstNode.parentNode;\n  this.container = container;\n\n  this.autorun(() => {\n    const data = Blaze.getData();\n\n    const comp = data && data.component;\n    if (!comp) {\n      throw new Error(\n        \"In template \" + parentTemplate + \", call to `{{> React ... }}` missing \" +\n          \"`component` argument.\");\n    }\n\n    const props = _.omit(data, \"component\");\n    ReactDOM.render(React.createElement(comp, props), container);\n  });\n});\n\nTemplate.React.onDestroyed(function () {\n  if (this.container) {\n    ReactDOM.unmountComponentAtNode(this.container);\n  }\n});\n\n// Gets the name of the template inside of which this instance of `{{> React ...}}`\n// is being used. Used to print more explicit error messages\nfunction parentTemplateName() {\n  let view = Blaze.getView();\n  if (!view || view.name !== \"Template.React\") {\n    throw new Error(\"Unexpected: called outside of Template.React\");\n  }\n  // find the first parent view which is a template or body\n  view = view.parentView;\n  while (view) {\n    const m = view.name.match(/^Template\\.(.*)/);\n    // check `view.name.match(/^Template\\./)` because iron-router (and\n    // maybe other packages) create a view named \"yield\" that has the\n    // `template` property set\n    if (view.template && view.name && m) {\n      return m[1];\n    } else if (view.name === \"body\") {\n      return \"<body>\";\n    }\n\n    view = view.parentView;\n  }\n\n  // not sure when this could happen\n  return \"<unknown>\";\n}\n"]},"hash":"27fd140987d69a39ddcb8c4ed031113cac455bef"}
