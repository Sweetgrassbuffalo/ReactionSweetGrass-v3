{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/aldeed:template-extension/lib/template-instance-get.js","filenameRelative":"/packages/aldeed:template-extension/lib/template-instance-get.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/aldeed:template-extension/lib/template-instance-get.js.map","sourceFileName":"/packages/aldeed:template-extension/lib/template-instance-get.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"template-instance-get"},"ignored":false,"code":"// Allow easy access to a template instance field when you do not know exactly\n// on which instance (this, or parent, or parent's parent, ...) a field is defined.\n// This allows easy restructuring of templates in HTML, moving things to included\n// templates without having to change everywhere in the code instance levels.\n// It also allows different structures of templates, when once template is included\n// at one level, and some other time at another. Levels do not matter anymore, just\n// that the field exists somewhere.\nBlaze.TemplateInstance.prototype.get = function () {\n  function get(fieldName) {\n    var template = this;\n\n    while (template) {\n      if (fieldName in template) return template[fieldName];\n      template = template.parent(1, true);\n    }\n  }\n\n  return get;\n}();","map":{"version":3,"sources":["/packages/aldeed:template-extension/lib/template-instance-get.js"],"names":["Blaze","TemplateInstance","prototype","get","fieldName","template","parent"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAMC,gBAAN,CAAuBC,SAAvB,CAAiCC,GAAjC;AAAuC,WAASA,GAAT,CAAaC,SAAb,EAAwB;AAC7D,QAAIC,WAAW,IAAf;;AAEA,WAAOA,QAAP,EAAiB;AACf,UAAID,aAAaC,QAAjB,EAA2B,OAAOA,SAASD,SAAT,CAAP;AAC3BC,iBAAWA,SAASC,MAAT,CAAgB,CAAhB,EAAmB,IAAnB,CAAX;AACD;AACF;;AAPD,SAAgDH,GAAhD;AAAA","file":"/packages/aldeed:template-extension/lib/template-instance-get.js.map","sourcesContent":["// Allow easy access to a template instance field when you do not know exactly\n// on which instance (this, or parent, or parent's parent, ...) a field is defined.\n// This allows easy restructuring of templates in HTML, moving things to included\n// templates without having to change everywhere in the code instance levels.\n// It also allows different structures of templates, when once template is included\n// at one level, and some other time at another. Levels do not matter anymore, just\n// that the field exists somewhere.\nBlaze.TemplateInstance.prototype.get = function get(fieldName) {\n  var template = this;\n\n  while (template) {\n    if (fieldName in template) return template[fieldName];\n    template = template.parent(1, true);\n  }\n};\n"]},"hash":"7a8c89ad8d508e95188ad6a6d981ba56d907d3a6"}
