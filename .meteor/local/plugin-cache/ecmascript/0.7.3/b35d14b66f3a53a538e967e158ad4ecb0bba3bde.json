{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component","PropTypes"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"},{"kind":"named","imported":"PropTypes","local":"PropTypes"}]},{"source":"classnames","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"classnames"}]},{"source":"../translation","imported":["Translation"],"specifiers":[{"kind":"named","imported":"Translation","local":"Translation"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/core/ui/client/components/alerts/alert.js","filenameRelative":"/imports/plugins/core/ui/client/components/alerts/alert.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/core/ui/client/components/alerts/alert.js"],"names":["React","Component","PropTypes","classnames","Translation","Alert","componentDidMount","props","alert","options","onAlertSeen","autoHide","setTimeout","onAlertRemove","render","message","mode","alertClassName","i18nKey","children","propTypes","object","node","oneOf","func"],"mappings":";;;;;;;;;;;;;;AAAA;IAAA;;OAA4C,WAA5C;;;;;;;;;;;;;;;;;;;;;;GACA,AAAO,AAAgB,AACvB,AAAS,AAAmB,AAE5B;;IAAA,AAAM;;;;;;;;kBAGE,AAAK,AAAM;;AAAf,AAAsB,AACpB;;UAAM;AAAA,AACJ,YADF,AAEI,AAAK,AAAM,qBAEf,AAAI,AAAK,AAAM,AAAa,AAC1B;;YAAK,KAAL,AAAW,MAAX,AAAuB,aAAvB,AAAuB,AAAK,AAAM,AACnC;;AAED,AAAI,AAAK,AAAM,AAAS,AAAK,AAAM,AAAM,AAAW,AAAK,AAAM,AAAM,AAAQ,AAAU,AACrF;;iBAAW,MAAM,wEACf;AAAI,qBAAA,AAAK,YAAT,AAAe,AAAe,AAC5B;gBAAK,OAAL,AAAW,MAAX,AAAyB,eAAzB,AAAyB,AAAK,AAAM,AACrC;sDAHH,AAIC;AAJD,AAIG,AAAQ,AACZ;qBACF;AACF;;AAED,AAAS,AACP;;;;;;;AACA;;AACA;AAAA,AAAI,AAAK,AAAM,AAAO,AACpB;UAAM;AAAA,AACJ,AACA;;2BAII,WAAiB,AAAW,AAChC,AAAO,AACP;YARI,AAGJ;YAHI;YAAN,AAII,AAAK,AAAM,AAEf;;AAEI,YAAQ,AAAQ;AAFpB,iBAKA,AACE,AAAC;AANoB,AAAW,AAEhC,AAAyB,AAAI,mCAIxB,QAAU,AAAC,WAAhB,AAAe,AACb,AAAC,AAAY,AAAa,AAAC,AAAS,AAAQ,AAAC,AAAQ,AACrD,AAAC,AAAK,AAAM;;AAlBX,AAeL,AAIE,AAAE,AAEL,AAED;;;;;;;;;qBAEA,AAAM,AAAiB,AAAW,AAChC,AAAO,AACP;;AAFF,AAAuB,AAAW,AAEhC,AAAE,AAAQ,AAAK,AAAM,AAAQ,AAAO,AAAI,AAG1C,QACE,AAAC,AAAI,AAAU,AAAC,AACd,AAAC,AAAK,AAAM;;;AACd,AAAE,UAHJ,AAGE;;AAEH,gEAzD2B,AA4D9B;AAAA,AAAM,AAAY,AAChB;AAAO;;AAAU,qBADD,AAEhB;;AAAU,mBAFM,AAEI,AACpB,AAAM,AAAU,AAAM,AAAC,AAAQ,AAAW,AAAU,AACpD,AAAe,AAAU,AACzB;;AALF,AAAkB,AAKH,AAAU,AAGzB,AAAe;;;;;;EApEf,AAAoB,AAAU,AAE5B,AAAoB,AAClB;;;;;;;;;OAPG,OAAS,WAAhB,AAA2B,QAA3B","file":"/imports/plugins/core/ui/client/components/alerts/alert.js.map","sourcesContent":["import React, { Component, PropTypes } from \"react\";\nimport classnames from \"classnames\";\nimport { Translation } from \"../translation\";\n\nclass Alert extends Component {\n\n  componentDidMount() {\n    if (this.props.alert) {\n      const {\n        options\n      } = this.props.alert;\n\n      if (this.props.onAlertSeen) {\n        this.props.onAlertSeen(this.props.alert);\n      }\n\n      if (this.props.alert && this.props.alert.options && this.props.alert.options.autoHide) {\n        setTimeout(() => {\n          if (this.props.onAlertRemove) {\n            this.props.onAlertRemove(this.props.alert);\n          }\n        }, options.autoHide);\n      }\n    }\n  }\n\n  render() {\n    // If we have an alert object, most likely form the global alert system,\n    // then display a standard alert\n    if (this.props.alert) {\n      const {\n        message,\n        mode,\n        options\n      } = this.props.alert;\n\n      const alertClassName = classnames({\n        alert: true,\n        [`alert-${mode || \"info\"}`]: true\n      });\n\n      return (\n        <div className={alertClassName}>\n          <Translation defaultValue={message} i18nKey={options.i18nKey} />\n          {this.props.children}\n        </div>\n      );\n    }\n\n    // Otherwise, it's up to the user to provide the content via props\n\n    const alertClassName = classnames({\n      alert: true,\n      [`alert-${this.props.mode || \"info\"}`]: true\n    });\n\n    return (\n      <div className={alertClassName}>\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nAlert.propTypes = {\n  alert: PropTypes.object,\n  children: PropTypes.node,\n  mode: PropTypes.oneOf([\"info\", \"warning\", \"danger\", \"success\"]),\n  onAlertRemove: PropTypes.func,\n  onAlertSeen: PropTypes.func\n};\n\nexport default Alert;\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/core/ui/client/components/alerts/alert.js.map","sourceFileName":"/imports/plugins/core/ui/client/components/alerts/alert.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"alert"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0,\n    Component = void 0,\n    PropTypes = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  },\n  PropTypes: function (v) {\n    PropTypes = v;\n  }\n}, 0);\nvar classnames = void 0;\nmodule.importSync(\"classnames\", {\n  \"default\": function (v) {\n    classnames = v;\n  }\n}, 1);\nvar Translation = void 0;\nmodule.importSync(\"../translation\", {\n  Translation: function (v) {\n    Translation = v;\n  }\n}, 2);\n\nvar Alert = function (_Component) {\n  (0, _inherits3.default)(Alert, _Component);\n\n  function Alert() {\n    (0, _classCallCheck3.default)(this, Alert);\n    return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));\n  }\n\n  Alert.prototype.componentDidMount = function () {\n    function componentDidMount() {\n      var _this2 = this;\n\n      if (this.props.alert) {\n        var options = this.props.alert.options;\n\n        if (this.props.onAlertSeen) {\n          this.props.onAlertSeen(this.props.alert);\n        }\n\n        if (this.props.alert && this.props.alert.options && this.props.alert.options.autoHide) {\n          setTimeout(function () {\n            if (_this2.props.onAlertRemove) {\n              _this2.props.onAlertRemove(_this2.props.alert);\n            }\n          }, options.autoHide);\n        }\n      }\n    }\n\n    return componentDidMount;\n  }();\n\n  Alert.prototype.render = function () {\n    function render() {\n      var _classnames2;\n\n      // If we have an alert object, most likely form the global alert system,\n      // then display a standard alert\n      if (this.props.alert) {\n        var _classnames;\n\n        var _props$alert = this.props.alert,\n            message = _props$alert.message,\n            mode = _props$alert.mode,\n            options = _props$alert.options;\n\n        var _alertClassName = classnames((_classnames = {\n          alert: true\n        }, _classnames[\"alert-\" + (mode || \"info\")] = true, _classnames));\n\n        return React.createElement(\n          \"div\",\n          {\n            className: _alertClassName\n          },\n          React.createElement(Translation, {\n            defaultValue: message,\n            i18nKey: options.i18nKey\n          }),\n          this.props.children\n        );\n      } // Otherwise, it's up to the user to provide the content via props\n\n\n      var alertClassName = classnames((_classnames2 = {\n        alert: true\n      }, _classnames2[\"alert-\" + (this.props.mode || \"info\")] = true, _classnames2));\n      return React.createElement(\n        \"div\",\n        {\n          className: alertClassName\n        },\n        this.props.children\n      );\n    }\n\n    return render;\n  }();\n\n  return Alert;\n}(Component);\n\nAlert.propTypes = {\n  alert: PropTypes.object,\n  children: PropTypes.node,\n  mode: PropTypes.oneOf([\"info\", \"warning\", \"danger\", \"success\"]),\n  onAlertRemove: PropTypes.func,\n  onAlertSeen: PropTypes.func\n};\nmodule.export(\"default\", exports.default = Alert);","map":{"version":3,"sources":["/imports/plugins/core/ui/client/components/alerts/alert.js"],"names":["React","Component","PropTypes","classnames","Translation","Alert","componentDidMount","props","alert","options","onAlertSeen","autoHide","setTimeout","onAlertRemove","render","message","mode","alertClassName","i18nKey","children","propTypes","object","node","oneOf","func"],"mappings":";;;;;;;;;;;;;;AAAA;IAAA;;OAA4C,WAA5C;;;;;;;;;;;;;;;;;;;;;;GACA,AAAO,AAAgB,AACvB,AAAS,AAAmB,AAE5B;;IAAA,AAAM;;;;;;;;kBAGE,AAAK,AAAM;;AAAf,AAAsB,AACpB;;UAAM;AAAA,AACJ,YADF,AAEI,AAAK,AAAM,qBAEf,AAAI,AAAK,AAAM,AAAa,AAC1B;;YAAK,KAAL,AAAW,MAAX,AAAuB,aAAvB,AAAuB,AAAK,AAAM,AACnC;;AAED,AAAI,AAAK,AAAM,AAAS,AAAK,AAAM,AAAM,AAAW,AAAK,AAAM,AAAM,AAAQ,AAAU,AACrF;;iBAAW,MAAM,wEACf;AAAI,qBAAA,AAAK,YAAT,AAAe,AAAe,AAC5B;gBAAK,OAAL,AAAW,MAAX,AAAyB,eAAzB,AAAyB,AAAK,AAAM,AACrC;sDAHH,AAIC;AAJD,AAIG,AAAQ,AACZ;qBACF;AACF;;AAED,AAAS,AACP;;;;;;;AACA;;AACA;AAAA,AAAI,AAAK,AAAM,AAAO,AACpB;UAAM;AAAA,AACJ,AACA;;2BAII,WAAiB,AAAW,AAChC,AAAO,AACP;YARI,AAGJ;YAHI;YAAN,AAII,AAAK,AAAM,AAEf;;AAEI,YAAQ,AAAQ;AAFpB,iBAKA,AACE,AAAC;AANoB,AAAW,AAEhC,AAAyB,AAAI,mCAIxB,QAAU,AAAC,WAAhB,AAAe,AACb,AAAC,AAAY,AAAa,AAAC,AAAS,AAAQ,AAAC,AAAQ,AACrD,AAAC,AAAK,AAAM;;AAlBX,AAeL,AAIE,AAAE,AAEL,AAED;;;;;;;;;qBAEA,AAAM,AAAiB,AAAW,AAChC,AAAO,AACP;;AAFF,AAAuB,AAAW,AAEhC,AAAE,AAAQ,AAAK,AAAM,AAAQ,AAAO,AAAI,AAG1C,QACE,AAAC,AAAI,AAAU,AAAC,AACd,AAAC,AAAK,AAAM;;;AACd,AAAE,UAHJ,AAGE;;AAEH,gEAzD2B,AA4D9B;AAAA,AAAM,AAAY,AAChB;AAAO;;AAAU,qBADD,AAEhB;;AAAU,mBAFM,AAEI,AACpB,AAAM,AAAU,AAAM,AAAC,AAAQ,AAAW,AAAU,AACpD,AAAe,AAAU,AACzB;;AALF,AAAkB,AAKH,AAAU,AAGzB,AAAe;;;;;;EApEf,AAAoB,AAAU,AAE5B,AAAoB,AAClB;;;;;;;;;OAPG,OAAS,WAAhB,AAA2B,QAA3B","file":"/imports/plugins/core/ui/client/components/alerts/alert.js.map","sourcesContent":["import React, { Component, PropTypes } from \"react\";\nimport classnames from \"classnames\";\nimport { Translation } from \"../translation\";\n\nclass Alert extends Component {\n\n  componentDidMount() {\n    if (this.props.alert) {\n      const {\n        options\n      } = this.props.alert;\n\n      if (this.props.onAlertSeen) {\n        this.props.onAlertSeen(this.props.alert);\n      }\n\n      if (this.props.alert && this.props.alert.options && this.props.alert.options.autoHide) {\n        setTimeout(() => {\n          if (this.props.onAlertRemove) {\n            this.props.onAlertRemove(this.props.alert);\n          }\n        }, options.autoHide);\n      }\n    }\n  }\n\n  render() {\n    // If we have an alert object, most likely form the global alert system,\n    // then display a standard alert\n    if (this.props.alert) {\n      const {\n        message,\n        mode,\n        options\n      } = this.props.alert;\n\n      const alertClassName = classnames({\n        alert: true,\n        [`alert-${mode || \"info\"}`]: true\n      });\n\n      return (\n        <div className={alertClassName}>\n          <Translation defaultValue={message} i18nKey={options.i18nKey} />\n          {this.props.children}\n        </div>\n      );\n    }\n\n    // Otherwise, it's up to the user to provide the content via props\n\n    const alertClassName = classnames({\n      alert: true,\n      [`alert-${this.props.mode || \"info\"}`]: true\n    });\n\n    return (\n      <div className={alertClassName}>\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nAlert.propTypes = {\n  alert: PropTypes.object,\n  children: PropTypes.node,\n  mode: PropTypes.oneOf([\"info\", \"warning\", \"danger\", \"success\"]),\n  onAlertRemove: PropTypes.func,\n  onAlertSeen: PropTypes.func\n};\n\nexport default Alert;\n"]},"hash":"b35d14b66f3a53a538e967e158ad4ecb0bba3bde"}
