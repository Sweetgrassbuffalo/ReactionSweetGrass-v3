{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/aldeed:template-extension/lib/template-for-each.js","filenameRelative":"/packages/aldeed:template-extension/lib/template-for-each.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/aldeed:template-extension/lib/template-for-each.js.map","sourceFileName":"/packages/aldeed:template-extension/lib/template-for-each.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"template-for-each"},"ignored":false,"code":"Template.forEach = function (callback) {\n  // for some reason we get the \"body\" template twice when looping, so\n  // we track that and only call the callback once.\n  var alreadyDidBody = false;\n\n  for (var t in meteorBabelHelpers.sanitizeForInObject(Template)) {\n    if (Template.hasOwnProperty(t)) {\n      var tmpl = Template[t];\n\n      if (Blaze.isTemplate(tmpl)) {\n        var name = tmpl.viewName;\n\n        if (name === 'body') {\n          if (!alreadyDidBody) {\n            alreadyDidBody = true;\n            callback(tmpl);\n          }\n        } else if (name !== 'Template.__dynamic' && name !== 'Template.__dynamicWithDataContext') {\n          callback(tmpl);\n        }\n      }\n    }\n  }\n};","map":{"version":3,"sources":["/packages/aldeed:template-extension/lib/template-for-each.js"],"names":["Template","forEach","callback","alreadyDidBody","t","hasOwnProperty","tmpl","Blaze","isTemplate","name","viewName"],"mappings":"AAAAA,SAASC,OAAT,GAAmB,UAACC,QAAD,EAAc;AAC/B;AACA;AACA,MAAIC,iBAAiB,KAArB;;AACA,OAAK,IAAIC,CAAT,2CAAcJ,QAAd,GAAwB;AACtB,QAAIA,SAASK,cAAT,CAAwBD,CAAxB,CAAJ,EAAgC;AAC9B,UAAIE,OAAON,SAASI,CAAT,CAAX;;AACA,UAAIG,MAAMC,UAAN,CAAiBF,IAAjB,CAAJ,EAA4B;AAC1B,YAAIG,OAAOH,KAAKI,QAAhB;;AACA,YAAID,SAAS,MAAb,EAAqB;AACnB,cAAI,CAACN,cAAL,EAAqB;AACnBA,6BAAiB,IAAjB;AACAD,qBAASI,IAAT;AACD;AACF,SALD,MAKO,IAAIG,SAAS,oBAAT,IAAiCA,SAAS,mCAA9C,EAAmF;AACxFP,mBAASI,IAAT;AACD;AACF;AACF;AACF;AACF,CApBD","file":"/packages/aldeed:template-extension/lib/template-for-each.js.map","sourcesContent":["Template.forEach = (callback) => {\n  // for some reason we get the \"body\" template twice when looping, so\n  // we track that and only call the callback once.\n  var alreadyDidBody = false;\n  for (var t in Template) {\n    if (Template.hasOwnProperty(t)) {\n      var tmpl = Template[t];\n      if (Blaze.isTemplate(tmpl)) {\n        let name = tmpl.viewName;\n        if (name === 'body') {\n          if (!alreadyDidBody) {\n            alreadyDidBody = true;\n            callback(tmpl);\n          }\n        } else if (name !== 'Template.__dynamic' && name !== 'Template.__dynamicWithDataContext') {\n          callback(tmpl);\n        }\n      }\n    }\n  }\n};\n"]},"hash":"ff21f0f76e6bb147b204cc2e9675900eedb5739a"}
