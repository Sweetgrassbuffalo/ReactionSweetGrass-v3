{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"lodash/defaults","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_defaults"}]},{"source":"faker","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"faker"}]},{"source":"meteor/dburles:factory","imported":["Factory"],"specifiers":[{"kind":"named","imported":"Factory","local":"Factory"}]},{"source":"/lib/collections","imported":["Accounts"],"specifiers":[{"kind":"named","imported":"Accounts","local":"Accounts"}]},{"source":"./shops","imported":["getShop"],"specifiers":[{"kind":"named","imported":"getShop","local":"getShop"}]}],"exports":{"exported":["getUser","getAddress","options","createAccountFactory"],"specifiers":[{"kind":"local","local":"getUser","exported":"getUser"},{"kind":"local","local":"getAddress","exported":"getAddress"},{"kind":"local","local":"options","exported":"options"},{"kind":"local","local":"createAccountFactory","exported":"createAccountFactory"}]}}},"options":{"filename":"/server/imports/fixtures/accounts.js","filenameRelative":"/server/imports/fixtures/accounts.js","inputSourceMap":{"version":3,"sources":["/server/imports/fixtures/accounts.js"],"names":["faker","Factory","Accounts","getShop","getUser","existingUser","Meteor","users","findOne","create","getAddress","options","defaults","fullName","name","findName","address1","address","streetAddress","address2","secondaryAddress","city","company","companyName","phone","phoneNumber","region","stateAbbr","postal","zipCode","country","countryCode","isCommercial","random","boolean","isShippingDefault","isBillingDefault","metafields","createAccountFactory","define","shopId","_id","userId","emails","internet","email","verified","acceptsMarketing","state","note","lorem","sentences","profile","addressBook","createdAt","Date","updatedAt"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAAA,AAAO,A,AAAP,AAAkB,AAElB,AAAS,AAAe,AACxB,AAAS,AAAiB,AAC1B,AAAS,AAAe,AAExB,AAIA,AAAO,AAAS,AAAU,AACxB,AAAM,AAAe,AAAO,AAAM,AAClC,AAAO,AAAgB,AAAQ,AAAO,AACvC;;mBAED;AAAO,MAAS,eAAT,AAAoB,aAApB,AAA8B,AAAI,AACvC;AAAM,SAAW,+BACf;AADe,AACL,AAAQ,AAAY,AAAM,AAAK,AACzC,AAAU,AAAQ,AAAY,AAAM,AAAQ,AAC5C;;AAAU,SAAQ;AAHH,AAGe,AAAc,AAC5C,MADU,AAAoB,8EAAM;MAC9B,AAAQ;AACL,cAAM,QAAN,AAAc,YAAd,MALM,KAMf;AAAO,cAAM,QAAN,AAAY,YANJ,AAMR,cACP;AAAQ,cAAQ,QAAR,AAAkB,YAAM,MAAN,AAAc,QAPzB,AAOW,AAC1B;UAAQ,QAAQ,QAAR,AAAkB,MAAM,QARjB,AAQW,AAAc,AACxC;aAAS,MAAQ,QATF,AASN,AAAmB,AAAM,AAAQ,AAC1C;iBAAc,MAVC,AAUD,AAAQ,AAAgB,AAAM,AAAO,AACnD;oBAAmB,UAAQ,cAXZ,AAWI,AAA6B,AAAM,AAAO,AAC7D;oBAAkB,UAAQ,cAZX,AAYG,AAA4B,AAAM,AAAO,AAC3D;aAAY,iCAbd,AAAiB;uDAejB;AAAO,AAAW,uBAAX,AAAoB,QAA3B,AAAO,kCACR;+DAED;AAAO,gBAAA,AAAS,AAAuB,AACrC,AAAQ,AAAO,AAAW,AAAU,AAClC;AApBe,AAIT,AAAgB,AAAM,AAAQ,AACpC;SAeQ,UAD0B,AAChB,SAClB;AAFkC,AAE1B,AAAU,AAClB,AAAQ,AAAC,AACP;;AAAS,SADF,AACE,AAAM,AAAS,uBACxB;UAAU,OAAM,WAAN,AAAa;AALS,AAG1B,sBAIR;sBAPkC,AAOhB,AAClB;AAAO;AACD,eAAM,MAAN,AAAY,SATgB,AAS5B,AACN;AAAS,6BAAA,AACP,AAAa,AACX;AAZ8B,AASlC;AATkC,sBAelC;WAfkC,AAetB,AACZ;UAAW,MAAI,MAhBmB,AAgBvB,AACX;;mBAEH,CAED,AAAe,AAAY,AACzB,AACD;AAvBC,AAAoC,AAiBvB,AAAI;;;;AAdN","file":"/server/imports/fixtures/accounts.js.map","sourcesContent":["import faker from \"faker\";\nimport _ from \"lodash\";\nimport { Factory } from \"meteor/dburles:factory\";\nimport { Accounts }  from \"/lib/collections\";\nimport { getShop } from \"./shops\";\n\n/**\n * Factory account\n */\n\nexport function getUser() {\n  const existingUser = Meteor.users.findOne();\n  return existingUser || Factory.create(\"user\");\n}\n\nexport function getAddress(options = {}) {\n  const defaults = {\n    fullName: options.fullName || faker.name.findName(),\n    address1: options.address1 || faker.address.streetAddress(),\n    address2: options.address2 || faker.address.secondaryAddress(),\n    city: options.city || faker.address.city(),\n    company: faker.company.companyName(),\n    phone: faker.phone.phoneNumber(),\n    region: options.region || faker.address.stateAbbr(),\n    postal: options.postal || faker.address.zipCode(),\n    country: options.country || faker.address.countryCode(),\n    isCommercial: options.isCommercial || faker.random.boolean(),\n    isShippingDefault: options.isShippingDefault || faker.random.boolean(),\n    isBillingDefault: options.isBillingDefault || faker.random.boolean(),\n    metafields: []\n  };\n  return _.defaults(options, defaults);\n}\n\nexport function createAccountFactory() {\n  Factory.define(\"account\", Accounts, {\n    shopId: getShop()._id,\n    userId: getUser()._id,\n    emails: [{\n      address: faker.internet.email(),\n      verified: faker.random.boolean()\n    }],\n    acceptsMarketing: true,\n    state: \"new\",\n    note: faker.lorem.sentences(),\n    profile: {\n      addressBook: [\n        getAddress()\n      ]\n    },\n    metafields: [],\n    createdAt: new Date,\n    updatedAt: new Date()\n  });\n}\n\nexport default function () {\n  createAccountFactory();\n}\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/server/imports/fixtures/accounts.js.map","sourceFileName":"/server/imports/fixtures/accounts.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"accounts"},"ignored":false,"code":"module.export({\n  getUser: function () {\n    return getUser;\n  },\n  getAddress: function () {\n    return getAddress;\n  },\n  createAccountFactory: function () {\n    return createAccountFactory;\n  }\n});\n\nvar _defaults = void 0;\n\nmodule.importSync(\"lodash/defaults\", {\n  \"default\": function (v) {\n    _defaults = v;\n  }\n}, 0);\nvar faker = void 0;\nmodule.importSync(\"faker\", {\n  \"default\": function (v) {\n    faker = v;\n  }\n}, 1);\nvar Factory = void 0;\nmodule.importSync(\"meteor/dburles:factory\", {\n  Factory: function (v) {\n    Factory = v;\n  }\n}, 2);\nvar Accounts = void 0;\nmodule.importSync(\"/lib/collections\", {\n  Accounts: function (v) {\n    Accounts = v;\n  }\n}, 3);\nvar getShop = void 0;\nmodule.importSync(\"./shops\", {\n  getShop: function (v) {\n    getShop = v;\n  }\n}, 4);\n\nfunction getUser() {\n  var existingUser = Meteor.users.findOne();\n  return existingUser || Factory.create(\"user\");\n}\n\nfunction getAddress() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var defaults = {\n    fullName: options.fullName || faker.name.findName(),\n    address1: options.address1 || faker.address.streetAddress(),\n    address2: options.address2 || faker.address.secondaryAddress(),\n    city: options.city || faker.address.city(),\n    company: faker.company.companyName(),\n    phone: faker.phone.phoneNumber(),\n    region: options.region || faker.address.stateAbbr(),\n    postal: options.postal || faker.address.zipCode(),\n    country: options.country || faker.address.countryCode(),\n    isCommercial: options.isCommercial || faker.random.boolean(),\n    isShippingDefault: options.isShippingDefault || faker.random.boolean(),\n    isBillingDefault: options.isBillingDefault || faker.random.boolean(),\n    metafields: []\n  };\n  return _defaults(options, defaults);\n}\n\nfunction createAccountFactory() {\n  Factory.define(\"account\", Accounts, {\n    shopId: getShop()._id,\n    userId: getUser()._id,\n    emails: [{\n      address: faker.internet.email(),\n      verified: faker.random.boolean()\n    }],\n    acceptsMarketing: true,\n    state: \"new\",\n    note: faker.lorem.sentences(),\n    profile: {\n      addressBook: [getAddress()]\n    },\n    metafields: [],\n    createdAt: new Date(),\n    updatedAt: new Date()\n  });\n}\n\nmodule.export(\"default\", exports.default = function () {\n  createAccountFactory();\n});","map":{"version":3,"sources":["/server/imports/fixtures/accounts.js"],"names":["faker","Factory","Accounts","getShop","getUser","existingUser","Meteor","users","findOne","create","getAddress","options","defaults","fullName","name","findName","address1","address","streetAddress","address2","secondaryAddress","city","company","companyName","phone","phoneNumber","region","stateAbbr","postal","zipCode","country","countryCode","isCommercial","random","boolean","isShippingDefault","isBillingDefault","metafields","createAccountFactory","define","shopId","_id","userId","emails","internet","email","verified","acceptsMarketing","state","note","lorem","sentences","profile","addressBook","createdAt","Date","updatedAt"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAAA,AAAO,A,AAAP,AAAkB,AAElB,AAAS,AAAe,AACxB,AAAS,AAAiB,AAC1B,AAAS,AAAe,AAExB,AAIA,AAAO,AAAS,AAAU,AACxB,AAAM,AAAe,AAAO,AAAM,AAClC,AAAO,AAAgB,AAAQ,AAAO,AACvC;;mBAED;AAAO,MAAS,eAAT,AAAoB,aAApB,AAA8B,AAAI,AACvC;AAAM,SAAW,+BACf;AADe,AACL,AAAQ,AAAY,AAAM,AAAK,AACzC,AAAU,AAAQ,AAAY,AAAM,AAAQ,AAC5C;;AAAU,SAAQ;AAHH,AAGe,AAAc,AAC5C,MADU,AAAoB,8EAAM;MAC9B,AAAQ;AACL,cAAM,QAAN,AAAc,YAAd,MALM,KAMf;AAAO,cAAM,QAAN,AAAY,YANJ,AAMR,cACP;AAAQ,cAAQ,QAAR,AAAkB,YAAM,MAAN,AAAc,QAPzB,AAOW,AAC1B;UAAQ,QAAQ,QAAR,AAAkB,MAAM,QARjB,AAQW,AAAc,AACxC;aAAS,MAAQ,QATF,AASN,AAAmB,AAAM,AAAQ,AAC1C;iBAAc,MAVC,AAUD,AAAQ,AAAgB,AAAM,AAAO,AACnD;oBAAmB,UAAQ,cAXZ,AAWI,AAA6B,AAAM,AAAO,AAC7D;oBAAkB,UAAQ,cAZX,AAYG,AAA4B,AAAM,AAAO,AAC3D;aAAY,iCAbd,AAAiB;uDAejB;AAAO,AAAW,uBAAX,AAAoB,QAA3B,AAAO,kCACR;+DAED;AAAO,gBAAA,AAAS,AAAuB,AACrC,AAAQ,AAAO,AAAW,AAAU,AAClC;AApBe,AAIT,AAAgB,AAAM,AAAQ,AACpC;SAeQ,UAD0B,AAChB,SAClB;AAFkC,AAE1B,AAAU,AAClB,AAAQ,AAAC,AACP;;AAAS,SADF,AACE,AAAM,AAAS,uBACxB;UAAU,OAAM,WAAN,AAAa;AALS,AAG1B,sBAIR;sBAPkC,AAOhB,AAClB;AAAO;AACD,eAAM,MAAN,AAAY,SATgB,AAS5B,AACN;AAAS,6BAAA,AACP,AAAa,AACX;AAZ8B,AASlC;AATkC,sBAelC;WAfkC,AAetB,AACZ;UAAW,MAAI,MAhBmB,AAgBvB,AACX;;mBAEH,CAED,AAAe,AAAY,AACzB,AACD;AAvBC,AAAoC,AAiBvB,AAAI;;;;AAdN","file":"/server/imports/fixtures/accounts.js.map","sourcesContent":["import faker from \"faker\";\nimport _ from \"lodash\";\nimport { Factory } from \"meteor/dburles:factory\";\nimport { Accounts }  from \"/lib/collections\";\nimport { getShop } from \"./shops\";\n\n/**\n * Factory account\n */\n\nexport function getUser() {\n  const existingUser = Meteor.users.findOne();\n  return existingUser || Factory.create(\"user\");\n}\n\nexport function getAddress(options = {}) {\n  const defaults = {\n    fullName: options.fullName || faker.name.findName(),\n    address1: options.address1 || faker.address.streetAddress(),\n    address2: options.address2 || faker.address.secondaryAddress(),\n    city: options.city || faker.address.city(),\n    company: faker.company.companyName(),\n    phone: faker.phone.phoneNumber(),\n    region: options.region || faker.address.stateAbbr(),\n    postal: options.postal || faker.address.zipCode(),\n    country: options.country || faker.address.countryCode(),\n    isCommercial: options.isCommercial || faker.random.boolean(),\n    isShippingDefault: options.isShippingDefault || faker.random.boolean(),\n    isBillingDefault: options.isBillingDefault || faker.random.boolean(),\n    metafields: []\n  };\n  return _.defaults(options, defaults);\n}\n\nexport function createAccountFactory() {\n  Factory.define(\"account\", Accounts, {\n    shopId: getShop()._id,\n    userId: getUser()._id,\n    emails: [{\n      address: faker.internet.email(),\n      verified: faker.random.boolean()\n    }],\n    acceptsMarketing: true,\n    state: \"new\",\n    note: faker.lorem.sentences(),\n    profile: {\n      addressBook: [\n        getAddress()\n      ]\n    },\n    metafields: [],\n    createdAt: new Date,\n    updatedAt: new Date()\n  });\n}\n\nexport default function () {\n  createAccountFactory();\n}\n"]},"hash":"4b68b702d1e42a2b5d8fc1c70e30d6ff379bfd95"}
