{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"/server/api","imported":["Reaction"],"specifiers":[{"kind":"named","imported":"Reaction","local":"Reaction"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"/lib/collections","imported":["Templates"],"specifiers":[{"kind":"named","imported":"Templates","local":"Templates"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/core/layout/server/publications/templates.js","filenameRelative":"/imports/plugins/core/layout/server/publications/templates.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/core/layout/server/publications/templates.js"],"names":["Reaction","Meteor","Templates","publish","query","options","check","Match","Optional","Object","shopId","getShopId","ready","select","Counts","find"],"mappings":"AAAA,IAAS;AAAT,OAAyB,WAAzB;;;;;;;;;;;;;;;;GACA,AAAS,AAAc,AACvB,AAAS,AAAiB,AAE1B,AAAO,AAAQ,AAAa,AAAU,AAAO,AAAS;AACpD,OAAA,AAAM,QAAO,AAAM,aAAnB,AAAa,AAAe;QACtB,OAAN,AAAe,MAAM,SAArB,AAAe,AAAe,AAE9B;QAAM,SAAS,MAAS,SAAxB,AAAe,AAEf;AAAI,AAAC,MAAL,AAAa,kBACX,AAAO,AAAK,AACb;;;gBAED;AAVoD,AAUpD,AAAM,AAAS,AAAS,AACxB,AACA,AACA;;4BACA;AAdoD,AAcpD,AAAO,AAAS,AAEhB,AACA;;;kBACA,AAAO,AAAQ,AAAM,AAAmB,AAAU,AAChD,AACA,AAGF,OArBA,CAqBO,AAAU,AAAK,AACpB;AADoB;;AAAtB,AAAO,oDAvBT,AA0BC","file":"/imports/plugins/core/layout/server/publications/templates.js.map","sourcesContent":["import { Reaction } from \"/server/api\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Templates } from \"/lib/collections\";\n\nMeteor.publish(\"Templates\", function (query, options) {\n  check(query, Match.Optional(Object));\n  check(options, Match.Optional(Object));\n\n  const shopId = Reaction.getShopId();\n\n  if (!shopId) {\n    return this.ready();\n  }\n\n  const select = query || {};\n  // append shopId to query\n  // templates could be shared\n  // if you disregarded shopId\n  select.shopId = shopId;\n\n  // appends a count to the collection\n  // we're doing this for use with griddleTable\n  Counts.publish(this, \"templates-count\", Templates.find(\n    select,\n    options\n  ));\n\n  return Templates.find({\n    shopId\n  });\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/core/layout/server/publications/templates.js.map","sourceFileName":"/imports/plugins/core/layout/server/publications/templates.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"templates"},"ignored":false,"code":"var Reaction = void 0;\nmodule.importSync(\"/server/api\", {\n  Reaction: function (v) {\n    Reaction = v;\n  }\n}, 0);\nvar Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\nvar Templates = void 0;\nmodule.importSync(\"/lib/collections\", {\n  Templates: function (v) {\n    Templates = v;\n  }\n}, 2);\nMeteor.publish(\"Templates\", function (query, options) {\n  check(query, Match.Optional(Object));\n  check(options, Match.Optional(Object));\n  var shopId = Reaction.getShopId();\n\n  if (!shopId) {\n    return this.ready();\n  }\n\n  var select = query || {}; // append shopId to query\n  // templates could be shared\n  // if you disregarded shopId\n\n  select.shopId = shopId; // appends a count to the collection\n  // we're doing this for use with griddleTable\n\n  Counts.publish(this, \"templates-count\", Templates.find(select, options));\n  return Templates.find({\n    shopId: shopId\n  });\n});","map":{"version":3,"sources":["/imports/plugins/core/layout/server/publications/templates.js"],"names":["Reaction","Meteor","Templates","publish","query","options","check","Match","Optional","Object","shopId","getShopId","ready","select","Counts","find"],"mappings":"AAAA,IAAS;AAAT,OAAyB,WAAzB;;;;;;;;;;;;;;;;GACA,AAAS,AAAc,AACvB,AAAS,AAAiB,AAE1B,AAAO,AAAQ,AAAa,AAAU,AAAO,AAAS;AACpD,OAAA,AAAM,QAAO,AAAM,aAAnB,AAAa,AAAe;QACtB,OAAN,AAAe,MAAM,SAArB,AAAe,AAAe,AAE9B;QAAM,SAAS,MAAS,SAAxB,AAAe,AAEf;AAAI,AAAC,MAAL,AAAa,kBACX,AAAO,AAAK,AACb;;;gBAED;AAVoD,AAUpD,AAAM,AAAS,AAAS,AACxB,AACA,AACA;;4BACA;AAdoD,AAcpD,AAAO,AAAS,AAEhB,AACA;;;kBACA,AAAO,AAAQ,AAAM,AAAmB,AAAU,AAChD,AACA,AAGF,OArBA,CAqBO,AAAU,AAAK,AACpB;AADoB;;AAAtB,AAAO,oDAvBT,AA0BC","file":"/imports/plugins/core/layout/server/publications/templates.js.map","sourcesContent":["import { Reaction } from \"/server/api\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Templates } from \"/lib/collections\";\n\nMeteor.publish(\"Templates\", function (query, options) {\n  check(query, Match.Optional(Object));\n  check(options, Match.Optional(Object));\n\n  const shopId = Reaction.getShopId();\n\n  if (!shopId) {\n    return this.ready();\n  }\n\n  const select = query || {};\n  // append shopId to query\n  // templates could be shared\n  // if you disregarded shopId\n  select.shopId = shopId;\n\n  // appends a count to the collection\n  // we're doing this for use with griddleTable\n  Counts.publish(this, \"templates-count\", Templates.find(\n    select,\n    options\n  ));\n\n  return Templates.find({\n    shopId\n  });\n});\n"]},"hash":"952ca073eab9d002b43dbc313cbe171eed6341a2"}
