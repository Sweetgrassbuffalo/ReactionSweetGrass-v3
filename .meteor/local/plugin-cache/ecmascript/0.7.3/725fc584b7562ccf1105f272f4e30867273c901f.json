{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]},{"source":"./schemas","imported":["*"],"specifiers":[{"kind":"namespace","local":"Schemas"}]},{"source":"./transform/cart","imported":["cartTransform"],"specifiers":[{"kind":"named","imported":"cartTransform","local":"cartTransform"}]},{"source":"./transform/order","imported":["orderTransform"],"specifiers":[{"kind":"named","imported":"orderTransform","local":"orderTransform"}]}],"exports":{"exported":["Accounts","AnalyticsEvents","Assets","Cart","Emails","Inventory","Orders","Packages","Products","Revisions","Shipping","Shops","Tags","Templates","Themes","Translations","Notifications","Sms","Logs"],"specifiers":[{"kind":"local","local":"Accounts","exported":"Accounts"},{"kind":"local","local":"AnalyticsEvents","exported":"AnalyticsEvents"},{"kind":"local","local":"Assets","exported":"Assets"},{"kind":"local","local":"Cart","exported":"Cart"},{"kind":"local","local":"Emails","exported":"Emails"},{"kind":"local","local":"Inventory","exported":"Inventory"},{"kind":"local","local":"Orders","exported":"Orders"},{"kind":"local","local":"Packages","exported":"Packages"},{"kind":"local","local":"Products","exported":"Products"},{"kind":"local","local":"Revisions","exported":"Revisions"},{"kind":"local","local":"Shipping","exported":"Shipping"},{"kind":"local","local":"Shops","exported":"Shops"},{"kind":"local","local":"Tags","exported":"Tags"},{"kind":"local","local":"Templates","exported":"Templates"},{"kind":"local","local":"Themes","exported":"Themes"},{"kind":"local","local":"Translations","exported":"Translations"},{"kind":"local","local":"Notifications","exported":"Notifications"},{"kind":"local","local":"Sms","exported":"Sms"},{"kind":"local","local":"Logs","exported":"Logs"}]}}},"options":{"filename":"/lib/collections/collections.js","filenameRelative":"/lib/collections/collections.js","inputSourceMap":{"version":3,"sources":["/lib/collections/collections.js"],"names":["Mongo","Schemas","cartTransform","orderTransform","Accounts","Collection","attachSchema","AnalyticsEvents","Assets","Cart","transform","cart","newInstance","Object","create","_","extend","Emails","Inventory","Orders","order","Order","OrderItem","Packages","PackageConfig","Products","Product","selector","type","ProductVariant","Revisions","Shipping","Shops","Shop","Tags","Tag","Templates","ReactLayout","Themes","Translations","Translation","Notifications","Notification","Sms","Logs"],"mappings":"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","file":"/lib/collections/collections.js.map","sourcesContent":["import { Mongo } from \"meteor/mongo\";\nimport * as Schemas from \"./schemas\";\nimport { cartTransform } from \"./transform/cart\";\nimport { orderTransform } from \"./transform/order\";\n\n/**\n*\n* Reaction Core Collections\n*\n*/\n\n/**\n * Accounts Collection\n */\nexport const Accounts = new Mongo.Collection(\"Accounts\");\n\nAccounts.attachSchema(Schemas.Accounts);\n\n\n/*\n *  AnalyticsEvents Collection\n *  Store the Analytics Events in a Collection\n */\nexport const AnalyticsEvents = new Mongo.Collection(\"AnalyticsEvents\");\n\nAnalyticsEvents.attachSchema(Schemas.AnalyticsEvents);\n\n\n/**\n *  Assets Collection\n *  Store file asset paths or contents in a Collection\n */\nexport const Assets = new Mongo.Collection(\"Assets\");\n\nAssets.attachSchema(Schemas.Assets);\n\n\n/**\n* Cart Collection\n*/\nexport const Cart = new Mongo.Collection(\"Cart\", {\n  transform(cart) {\n    const newInstance = Object.create(cartTransform);\n    return _.extend(newInstance, cart);\n  }\n});\n\nCart.attachSchema(Schemas.Cart);\n\n\n/**\n* Emails Collection\n*/\nexport const Emails = new Mongo.Collection(\"Emails\");\n\nEmails.attachSchema(Schemas.Emails);\n\n\n/**\n* Inventory Collection\n*/\nexport const Inventory = new Mongo.Collection(\"Inventory\");\n\nInventory.attachSchema(Schemas.Inventory);\n\n\n/**\n* Orders Collection\n*/\nexport const Orders = new Mongo.Collection(\"Orders\", {\n  transform(order) {\n    const newInstance = Object.create(orderTransform);\n    return _.extend(newInstance, order);\n  }\n});\n\nOrders.attachSchema([\n  Schemas.Cart,\n  Schemas.Order,\n  Schemas.OrderItem\n]);\n\n\n/**\n* Packages Collection\n*/\nexport const Packages = new Mongo.Collection(\"Packages\");\n\nPackages.attachSchema(Schemas.PackageConfig);\n\n\n/**\n* Products Collection\n*/\nexport const Products = new Mongo.Collection(\"Products\");\n\nProducts.attachSchema(Schemas.Product, { selector: { type: \"simple\" } });\nProducts.attachSchema(Schemas.ProductVariant, { selector: { type: \"variant\" } });\n\n/**\n* Revisions Collection\n*/\nexport const Revisions = new Mongo.Collection(\"Revisions\");\n\nRevisions.attachSchema(Schemas.Revisions);\n\n/**\n* Shipping Collection\n*/\nexport const Shipping = new Mongo.Collection(\"Shipping\");\n\nShipping.attachSchema(Schemas.Shipping);\n\n\n/**\n* Shops Collection\n*/\nexport const Shops = new Mongo.Collection(\"Shops\");\n\nShops.attachSchema(Schemas.Shop);\n\n\n/**\n* Tags Collection\n*/\nexport const Tags = new Mongo.Collection(\"Tags\");\n\nTags.attachSchema(Schemas.Tag);\n\n\n/**\n* Templates Collection\n*/\nexport const Templates = new Mongo.Collection(\"Templates\");\n\nTemplates.attachSchema(Schemas.Templates, { selector: { type: \"template\" } });\nTemplates.attachSchema(Schemas.ReactLayout, { selector: { type: \"react\" } });\n\n/**\n* Themes Collection\n*/\nexport const Themes = new Mongo.Collection(\"Themes\");\n\nThemes.attachSchema(Schemas.Themes);\n\n\n/**\n* Translations Collection\n*/\nexport const Translations = new Mongo.Collection(\"Translations\");\n\nTranslations.attachSchema(Schemas.Translation);\n\n/**\n * Notifications Collection\n */\nexport const Notifications = new Mongo.Collection(\"Notifications\");\n\nNotifications.attachSchema(Schemas.Notification);\n\n\n/**\n * Sms Collection\n */\nexport const Sms = new Mongo.Collection(\"Sms\");\n\nSms.attachSchema(Schemas.Sms);\n\n\n/**\n * Logs Collection\n */\nexport const Logs = new Mongo.Collection(\"Logs\");\n\nLogs.attachSchema(Schemas.Logs);\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/lib/collections/collections.js.map","sourceFileName":"/lib/collections/collections.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"collections"},"ignored":false,"code":"module.export({\n  Accounts: function () {\n    return Accounts;\n  },\n  AnalyticsEvents: function () {\n    return AnalyticsEvents;\n  },\n  Assets: function () {\n    return Assets;\n  },\n  Cart: function () {\n    return Cart;\n  },\n  Emails: function () {\n    return Emails;\n  },\n  Inventory: function () {\n    return Inventory;\n  },\n  Orders: function () {\n    return Orders;\n  },\n  Packages: function () {\n    return Packages;\n  },\n  Products: function () {\n    return Products;\n  },\n  Revisions: function () {\n    return Revisions;\n  },\n  Shipping: function () {\n    return Shipping;\n  },\n  Shops: function () {\n    return Shops;\n  },\n  Tags: function () {\n    return Tags;\n  },\n  Templates: function () {\n    return Templates;\n  },\n  Themes: function () {\n    return Themes;\n  },\n  Translations: function () {\n    return Translations;\n  },\n  Notifications: function () {\n    return Notifications;\n  },\n  Sms: function () {\n    return Sms;\n  },\n  Logs: function () {\n    return Logs;\n  }\n});\nvar Mongo = void 0;\nmodule.importSync(\"meteor/mongo\", {\n  Mongo: function (v) {\n    Mongo = v;\n  }\n}, 0);\nvar Schemas = Object.create(null);\nmodule.importSync(\"./schemas\", {\n  \"*\": function (v, n) {\n    Schemas[n] = v;\n  }\n}, 1);\nvar cartTransform = void 0;\nmodule.importSync(\"./transform/cart\", {\n  cartTransform: function (v) {\n    cartTransform = v;\n  }\n}, 2);\nvar orderTransform = void 0;\nmodule.importSync(\"./transform/order\", {\n  orderTransform: function (v) {\n    orderTransform = v;\n  }\n}, 3);\nvar Accounts = new Mongo.Collection(\"Accounts\");\nAccounts.attachSchema(Schemas.Accounts); /*\n                                          *  AnalyticsEvents Collection\n                                          *  Store the Analytics Events in a Collection\n                                          */\nvar AnalyticsEvents = new Mongo.Collection(\"AnalyticsEvents\");\nAnalyticsEvents.attachSchema(Schemas.AnalyticsEvents); /**\n                                                        *  Assets Collection\n                                                        *  Store file asset paths or contents in a Collection\n                                                        */\nvar Assets = new Mongo.Collection(\"Assets\");\nAssets.attachSchema(Schemas.Assets); /**\n                                     * Cart Collection\n                                     */\nvar Cart = new Mongo.Collection(\"Cart\", {\n  transform: function (cart) {\n    var newInstance = Object.create(cartTransform);\n    return _.extend(newInstance, cart);\n  }\n});\nCart.attachSchema(Schemas.Cart); /**\n                                 * Emails Collection\n                                 */\nvar Emails = new Mongo.Collection(\"Emails\");\nEmails.attachSchema(Schemas.Emails); /**\n                                     * Inventory Collection\n                                     */\nvar Inventory = new Mongo.Collection(\"Inventory\");\nInventory.attachSchema(Schemas.Inventory); /**\n                                           * Orders Collection\n                                           */\nvar Orders = new Mongo.Collection(\"Orders\", {\n  transform: function (order) {\n    var newInstance = Object.create(orderTransform);\n    return _.extend(newInstance, order);\n  }\n});\nOrders.attachSchema([Schemas.Cart, Schemas.Order, Schemas.OrderItem]); /**\n                                                                       * Packages Collection\n                                                                       */\nvar Packages = new Mongo.Collection(\"Packages\");\nPackages.attachSchema(Schemas.PackageConfig); /**\n                                              * Products Collection\n                                              */\nvar Products = new Mongo.Collection(\"Products\");\nProducts.attachSchema(Schemas.Product, {\n  selector: {\n    type: \"simple\"\n  }\n});\nProducts.attachSchema(Schemas.ProductVariant, {\n  selector: {\n    type: \"variant\"\n  }\n}); /**\n    * Revisions Collection\n    */\nvar Revisions = new Mongo.Collection(\"Revisions\");\nRevisions.attachSchema(Schemas.Revisions); /**\n                                           * Shipping Collection\n                                           */\nvar Shipping = new Mongo.Collection(\"Shipping\");\nShipping.attachSchema(Schemas.Shipping); /**\n                                         * Shops Collection\n                                         */\nvar Shops = new Mongo.Collection(\"Shops\");\nShops.attachSchema(Schemas.Shop); /**\n                                  * Tags Collection\n                                  */\nvar Tags = new Mongo.Collection(\"Tags\");\nTags.attachSchema(Schemas.Tag); /**\n                                * Templates Collection\n                                */\nvar Templates = new Mongo.Collection(\"Templates\");\nTemplates.attachSchema(Schemas.Templates, {\n  selector: {\n    type: \"template\"\n  }\n});\nTemplates.attachSchema(Schemas.ReactLayout, {\n  selector: {\n    type: \"react\"\n  }\n}); /**\n    * Themes Collection\n    */\nvar Themes = new Mongo.Collection(\"Themes\");\nThemes.attachSchema(Schemas.Themes); /**\n                                     * Translations Collection\n                                     */\nvar Translations = new Mongo.Collection(\"Translations\");\nTranslations.attachSchema(Schemas.Translation); /**\n                                                 * Notifications Collection\n                                                 */\nvar Notifications = new Mongo.Collection(\"Notifications\");\nNotifications.attachSchema(Schemas.Notification); /**\n                                                   * Sms Collection\n                                                   */\nvar Sms = new Mongo.Collection(\"Sms\");\nSms.attachSchema(Schemas.Sms); /**\n                                * Logs Collection\n                                */\nvar Logs = new Mongo.Collection(\"Logs\");\nLogs.attachSchema(Schemas.Logs);","map":{"version":3,"sources":["/lib/collections/collections.js"],"names":["Mongo","Schemas","cartTransform","orderTransform","Accounts","Collection","attachSchema","AnalyticsEvents","Assets","Cart","transform","cart","newInstance","Object","create","_","extend","Emails","Inventory","Orders","order","Order","OrderItem","Packages","PackageConfig","Products","Product","selector","type","ProductVariant","Revisions","Shipping","Shops","Shop","Tags","Tag","Templates","ReactLayout","Themes","Translations","Translation","Notifications","Notification","Sms","Logs"],"mappings":"AAAA,OAAS;AAAa;WAAtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;GACA,AAAO,A,AAAK,AAAa,AACzB,AAAS,AAAqB,AAC9B,AAAS,AAAsB,AAE/B,AAMA,AAGA,AAAO,AAAM,AAAW,AAAI,AAAM,AAAW,AAE7C,AAAS,AAAa,AAAQ,AAG9B;oCAIA,AAAO,AAAM,AAAkB,AAAI,AAAM,AAAW;AAEpD,SAAgB,aAAhB,AAA6B,QAA7B,AAAqC,A,AAGrC,WAIA,AAAO,A,AAAA,AAAM,AAAS,AAAI,AAAM,AAAW,AAE3C,AAAO,AAAa,AAAQ,AAG5B;;;;2CAGA,AAAO,AAAM,AAAO,AAAI,AAAM,AAAW,AAAQ;AAC/C,AAAU,gBAAV,AAAgB,qBACd,AAAM,AAAc,AAAO,AAAO,AAClC,AAAO,AAAE,AAAO,AAAa,kBAH1B,AAAa,AAA6B,AAI9C,A,AAGH,AAAK,AAAa,AAAQ,AAG1B;;;;;AAGA,OAAO,AAAM,aAAS,AAAI,QAAnB,A,AAAe,AAAU,AAAW,AAE3C,AAAO,AAAa,AAAQ,AAG5B,SAGO,AAAM,A,AAAb,AAAO,AAAkB,AAAI,AAAM,AAAW,AAE9C,AAAU,AAAa,AAAQ,AAG/B;;;;6BAGA;AAAO,QAAM,AAAS,cAAI,OAAM,OAAV,AAAqB,AAAU,AACnD;WAAU,EAAV,AAAiB,oBACf;AAAA,AAAM,AAAc,AAAO,AAAO,AAClC,AAAO,AAAE,AAAO,AAAa,AAC9B;;0BAJI,AAAe,A,AAA+B,AAOrD,AAAO,AAAa,AAClB,AAAQ,AACR,AAAQ,AACR,AAAQ,AAIV,OAGA,AAAO,AAAM,AAAW,AAAI,AAAM,AAAW,AAE7C;;;AAAS,IAAT,SAAsB,IAAQ,iB,AAA9B,AAGA;4BAGA,AAAO,AAAM,AAAW,AAAI,AAAM,AAAW,AAE7C,AAAS,AAAa,AAAQ,AAAS,SAAvC,AAAuC,AAAE,AAAU,AAAE,AAAM;;;qCAC3D,AAAS,AAAa,AAAQ,AAAgB;AAAE,UAAU,qBAAA,AAAE,AAAM,YAAlE,AAA8C,A,AAE9C,AAGA;;;AAAO,IAAM,aAAgB,MAAM,WAAV,AAAqB;AAEpC,8BAAV,AAAuB,AAAQ,AAE/B,A;;iCAGA;A,AAAO,AAAM,AAAW,AAAI,AAAM,AAAW,AAE7C,AAAS,AAAa,AAAQ,AAG9B;AAZO,AAAkB,AAEzB,CAFyB;oBAezB,CAAO,QAAA,AAAM,AAAQ,AAAI,AAAM,AAAW,AAE1C,MAAM,QAAN,A,AAAmB,AAAQ,AAG3B,eAGA,AAAO,AAAM,A,AAAN,AAAa,AAAI,AAAM,AAAW,AAEzC,AAAK,AAAa,AAAQ,AAG1B,aAGA,AAAO,AAAM,AAAY,AAAI,AAAM,AAAW,AAE9C;;;AAAU,IAAV,AAAuB,eAAQ,MAA/B,AAA0C,WAAE,AAAU;AAAE,SAAM,qBAA9D,AAA0C,AAAY,gBACtD,AAAU,AAAa,AAAQ,AAAa,AAAE,AAAU,AAAE,AAAM;;;oCAApB,A,AAA5C,AAEA;;;;;;;;UAGA,AAAO,AAAM,AAAS,AAAI,AAAM,AAAW;;IAE3C,AAAO,AAAa,AAAQ,AAM5B,A,AAHA;;;AAGO,IAAM,YAAe,IAAI,MAAM,WAA/B,AAAqB,AAAqB,A,AAEjD,AAAa,AAAa,AAAQ,AAElC;2CAGA,AAAO,AAAM,AAAgB,AAAI,AAAM,AAAW,AAElD,AAAc,A,AAFe,AAEF,AAAQ,AAGnC;;;oCAGA,AAAO,AAAM,AAAM,AAAI,AAAM,AAAW;AAExC,AAAI,SAAJ,AAAiB,aAAjB,AAAyB,Q,AAGzB,WAGA,AAAO,AAAM,AAAO,AAAI,AAAM,AAAW,AAEzC,AAAK,AAAa,AAAQ","file":"/lib/collections/collections.js.map","sourcesContent":["import { Mongo } from \"meteor/mongo\";\nimport * as Schemas from \"./schemas\";\nimport { cartTransform } from \"./transform/cart\";\nimport { orderTransform } from \"./transform/order\";\n\n/**\n*\n* Reaction Core Collections\n*\n*/\n\n/**\n * Accounts Collection\n */\nexport const Accounts = new Mongo.Collection(\"Accounts\");\n\nAccounts.attachSchema(Schemas.Accounts);\n\n\n/*\n *  AnalyticsEvents Collection\n *  Store the Analytics Events in a Collection\n */\nexport const AnalyticsEvents = new Mongo.Collection(\"AnalyticsEvents\");\n\nAnalyticsEvents.attachSchema(Schemas.AnalyticsEvents);\n\n\n/**\n *  Assets Collection\n *  Store file asset paths or contents in a Collection\n */\nexport const Assets = new Mongo.Collection(\"Assets\");\n\nAssets.attachSchema(Schemas.Assets);\n\n\n/**\n* Cart Collection\n*/\nexport const Cart = new Mongo.Collection(\"Cart\", {\n  transform(cart) {\n    const newInstance = Object.create(cartTransform);\n    return _.extend(newInstance, cart);\n  }\n});\n\nCart.attachSchema(Schemas.Cart);\n\n\n/**\n* Emails Collection\n*/\nexport const Emails = new Mongo.Collection(\"Emails\");\n\nEmails.attachSchema(Schemas.Emails);\n\n\n/**\n* Inventory Collection\n*/\nexport const Inventory = new Mongo.Collection(\"Inventory\");\n\nInventory.attachSchema(Schemas.Inventory);\n\n\n/**\n* Orders Collection\n*/\nexport const Orders = new Mongo.Collection(\"Orders\", {\n  transform(order) {\n    const newInstance = Object.create(orderTransform);\n    return _.extend(newInstance, order);\n  }\n});\n\nOrders.attachSchema([\n  Schemas.Cart,\n  Schemas.Order,\n  Schemas.OrderItem\n]);\n\n\n/**\n* Packages Collection\n*/\nexport const Packages = new Mongo.Collection(\"Packages\");\n\nPackages.attachSchema(Schemas.PackageConfig);\n\n\n/**\n* Products Collection\n*/\nexport const Products = new Mongo.Collection(\"Products\");\n\nProducts.attachSchema(Schemas.Product, { selector: { type: \"simple\" } });\nProducts.attachSchema(Schemas.ProductVariant, { selector: { type: \"variant\" } });\n\n/**\n* Revisions Collection\n*/\nexport const Revisions = new Mongo.Collection(\"Revisions\");\n\nRevisions.attachSchema(Schemas.Revisions);\n\n/**\n* Shipping Collection\n*/\nexport const Shipping = new Mongo.Collection(\"Shipping\");\n\nShipping.attachSchema(Schemas.Shipping);\n\n\n/**\n* Shops Collection\n*/\nexport const Shops = new Mongo.Collection(\"Shops\");\n\nShops.attachSchema(Schemas.Shop);\n\n\n/**\n* Tags Collection\n*/\nexport const Tags = new Mongo.Collection(\"Tags\");\n\nTags.attachSchema(Schemas.Tag);\n\n\n/**\n* Templates Collection\n*/\nexport const Templates = new Mongo.Collection(\"Templates\");\n\nTemplates.attachSchema(Schemas.Templates, { selector: { type: \"template\" } });\nTemplates.attachSchema(Schemas.ReactLayout, { selector: { type: \"react\" } });\n\n/**\n* Themes Collection\n*/\nexport const Themes = new Mongo.Collection(\"Themes\");\n\nThemes.attachSchema(Schemas.Themes);\n\n\n/**\n* Translations Collection\n*/\nexport const Translations = new Mongo.Collection(\"Translations\");\n\nTranslations.attachSchema(Schemas.Translation);\n\n/**\n * Notifications Collection\n */\nexport const Notifications = new Mongo.Collection(\"Notifications\");\n\nNotifications.attachSchema(Schemas.Notification);\n\n\n/**\n * Sms Collection\n */\nexport const Sms = new Mongo.Collection(\"Sms\");\n\nSms.attachSchema(Schemas.Sms);\n\n\n/**\n * Logs Collection\n */\nexport const Logs = new Mongo.Collection(\"Logs\");\n\nLogs.attachSchema(Schemas.Logs);\n"]},"hash":"725fc584b7562ccf1105f272f4e30867273c901f"}
