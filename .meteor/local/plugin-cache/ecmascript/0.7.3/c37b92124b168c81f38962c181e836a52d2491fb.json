{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"lodash/map","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_map"}]},{"source":"react","imported":["default","Component","PropTypes"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"},{"kind":"named","imported":"PropTypes","local":"PropTypes"}]},{"source":"/imports/plugins/core/ui/client/components","imported":["Card","CardHeader","CardBody","CardGroup","ListItem"],"specifiers":[{"kind":"named","imported":"Card","local":"Card"},{"kind":"named","imported":"CardHeader","local":"CardHeader"},{"kind":"named","imported":"CardBody","local":"CardBody"},{"kind":"named","imported":"CardGroup","local":"CardGroup"},{"kind":"named","imported":"ListItem","local":"ListItem"}]},{"source":"/imports/plugins/core/layout/lib/components","imported":["getComponent"],"specifiers":[{"kind":"named","imported":"getComponent","local":"getComponent"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/core/dashboard/client/components/packageList.js","filenameRelative":"/imports/plugins/core/dashboard/client/components/packageList.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/core/dashboard/client/components/packageList.js"],"names":["React","Component","PropTypes","Card","CardHeader","CardBody","CardGroup","ListItem","getComponent","PackageList","propTypes","groupedPackages","object","handleShowPackage","func","onCardExpand","state","isExpanded","cardName","handleCardExpand","setState","props","renderSections","group","groupName","Array","isArray","packages","items","map","packageData","index","elements","push","i18nKeyLabel","icon","label","actionComponent","template","createElement","bind","title","i18nKeyTitle","render"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAAA,AAAO,AAAS,AAAW,AAAiB,AAE5C,AAAS,AAAM,AAAY,AAAU,AAAW,AAAgB,AAChE,AAAS,AAAoB,AAE7B;;;;;;;;;;;;;;kKASE,AAAW,AAAU,AACnB;;;wBAAI;wBAAA,AAAK,AAAO,UAAhB,AAAI,AAAmB,AAAS,AAAM,AAAO,AAAK,AAAO,AAAO,AAAS,AAAG,AAAe,AAAW,AACpG;eAAO,AAAK,AAAO,gBAAO,AAAS,aAA5B,AAA+B,YAAtC,oDACD;;AAED,AAAO,AACR;;;AAED,AAAiB,AAAU,AACzB;;;;;wBAAA,AAAI;;;;UAEJ,AAAI,AAAO,AAAK,AAAO,AAAO,AAAS,AAAO,AAAa,AACzD;;iBAAa,KAAb,2CADF,AAEC;AAAM,qBACL;aAAA,AAAa,AAAC,AAAK,AAAO,AAAO,AAAS,AAAG,AAC9C;;AAED,AAAK,AAAS,AACZ;;AAAE,WAAF,AAAS,AAAS,AAAI,AACpB;AAFJ,AAAc,AAMd,AAAI,AAAK,AAAM,AAAc,AAC3B;AANsB;;UAMjB,KAAL,AAAW,MAAX,AAAwB,cAAxB,AACD;gCACF;;AAED,AAAiB,AACf;;;;;wBAAI,AAAK;;AAAT,AAAe,AAAiB,AAC9B;;sCACA;AAAO,AAAI,AAAK,AAAM,AAAiB,AAAC,AAAO,AAAc,AAC3D;4EACA;AAAA,AAAI,AAAM,AAAQ,AAAM,AAAW,AACjC;cAAM,MAAQ,QAAM,MAAN,AAAe,WAAI,AAAC,AAAa,AAAU,AACvD;gBAAM,cADiD,AACvD,AAEA;6BAHuD,AAIvD,AAAS,AACP,AAAC,AACC,AAAI,AAAC,AACL,AAAa,AAAC,AAAY,AAC1B,AAAK,AAAC,AAAY,AAClB,AAAM,AAAC,AAAY,AACnB,AAAQ,AAAC,AAAK,AAAM,AACpB,AAAW,AACX,AAAM,AAAC,AAIX,IACA;;AAAM,uBAjBiD,AAiBvD,AAAwB,AAAc,AAAE,AAAY,AAAS,AAE7D,yBACA;AAAI,qBAAJ,AAAqB,AACnB;AAAA,AAAS,AACP,AAAC,8BAAD,AAAM,YAAN,AAAiB,AAAC,AAAM,AAAI,AAAE,AAAS,AAAM;AAC3C,AAAC,sBAAD;AACE,AAAC,uBAAM,YAAP,AAAC,AAAoB;AACvB,AAAE,yBAAF;AAJJ,AAKE,AAAE,4BAEL;uBA5BH,AAAc,AA8BZ,AAAO,AACR,AAED;mBACE,AAAC,AACC,AAAI,AAAC,AACL,AAAS,AAAC,AAAK,AAAW,AAC1B,AAAS,AAAC,AAAK,AAAiB,AAAK,AAAM;;AAE3C,AAAC,kBAAD,AACE,kBADF,AACgB,AAAC,AACf,aAAM,AAAC,AAAM,YAFf,AAEQ,AACN,AAAa,AAAC,AAAM,AAEtB,AAAC,AAAS,AAAW,AAAC,AAAM,AAAO,AAAC,gCAClC,AAAC;;AACH,kBAAA,AAAE,iBACJ;AAdF,AAcE,AAAE,yBAEL;;;;;;;AAED,AAAO;;wCAtDT,AAAO,AAuDN,AACF,AAED,AAAO;;;AAAP,AACD;;qBAED;AAAS,AACP,AACE,AAAC,AACC,AAAC,aA5DoB;AA4DrB,AAAC,AAAK,AACR,AAAE;AAHJ,AAGE,AAEH;;;4CA3GiC;+DA8GpC;;kCAAA,AAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA9Gf,AAA0B,AAAU,AAClC;;AADF,AAAM,YACJ,AAAO;mBACY,UADA,AACU,AAC3B;qBAAmB,UAFF,AAEY,AAC7B;gBAAc,UAHhB,AAAmB,AAGO,AAG1B,AAAQ;AANW,AACjB","file":"/imports/plugins/core/dashboard/client/components/packageList.js.map","sourcesContent":["import React, { Component, PropTypes } from \"react\";\nimport { map } from \"lodash\";\nimport { Card, CardHeader, CardBody, CardGroup, ListItem } from \"/imports/plugins/core/ui/client/components\";\nimport { getComponent } from \"/imports/plugins/core/layout/lib/components\";\n\nclass PackageList extends Component {\n  static propTypes = {\n    groupedPackages: PropTypes.object,\n    handleShowPackage: PropTypes.func,\n    onCardExpand: PropTypes.func\n  }\n\n  state = {}\n\n  isExpanded(cardName) {\n    if (this.state[`card_${cardName}`] && typeof this.state[`card_${cardName}`].isExpanded === \"boolean\") {\n      return this.state[`card_${cardName}`].isExpanded;\n    }\n\n    return true;\n  }\n\n  handleCardExpand(cardName) {\n    let isExpanded;\n\n    if (typeof this.state[`card_${cardName}`] === \"undefined\") {\n      isExpanded = false;\n    } else {\n      isExpanded = !this.state[`card_${cardName}`].isExpanded;\n    }\n\n    this.setState({\n      [`card_${cardName}`]: {\n        isExpanded\n      }\n    });\n\n    if (this.props.onCardExpand) {\n      this.props.onCardExpand(cardName);\n    }\n  }\n\n  renderSections() {\n    if (this.props.groupedPackages) {\n      // Loop through the groups of packages\n      return map(this.props.groupedPackages, (group, groupName) => {\n        // Loop through the individual cards of packages\n        if (Array.isArray(group.packages)) {\n          const items = group.packages.map((packageData, index) => {\n            const elements = [];\n\n            // Standard list element\n            elements.push(\n              <ListItem\n                key={index}\n                i18nKeyLabel={packageData.i18nKeyLabel}\n                icon={packageData.icon}\n                label={packageData.label}\n                onClick={this.props.handleShowPackage}\n                actionType=\"arrow\"\n                value={packageData}\n              />\n            );\n\n            // Look for a registered component_ActionDashboard component\n            const actionComponent = getComponent(`${packageData.template}_ActionDashboard`);\n\n            // If one exists, add it to the list of elements\n            if (actionComponent) {\n              elements.push(\n                <Card expandable={true} key={`action-${index}`}>\n                  <CardBody>\n                    {React.createElement(actionComponent)}\n                  </CardBody>\n                </Card>\n              );\n            }\n\n            return elements;\n          });\n\n          return (\n            <Card\n              key={groupName}\n              expanded={this.isExpanded(groupName)}\n              onExpand={this.handleCardExpand.bind(this, groupName)}\n            >\n              <CardHeader\n                actAsExpander={true}\n                title={group.title}\n                i18nKeyTitle={group.i18nKeyTitle}\n              />\n              <CardBody expandable={true} padded={false}>\n                {items}\n              </CardBody>\n            </Card>\n          );\n        }\n\n        return null;\n      });\n    }\n\n    return null;\n  }\n\n  render() {\n    return (\n      <CardGroup>\n        {this.renderSections()}\n      </CardGroup>\n    );\n  }\n}\n\nexport default PackageList;\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/core/dashboard/client/components/packageList.js.map","sourceFileName":"/imports/plugins/core/dashboard/client/components/packageList.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"packageList"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _map = void 0;\n\nmodule.importSync(\"lodash/map\", {\n  \"default\": function (v) {\n    _map = v;\n  }\n}, 0);\nvar React = void 0,\n    Component = void 0,\n    PropTypes = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  },\n  PropTypes: function (v) {\n    PropTypes = v;\n  }\n}, 1);\nvar Card = void 0,\n    CardHeader = void 0,\n    CardBody = void 0,\n    CardGroup = void 0,\n    ListItem = void 0;\nmodule.importSync(\"/imports/plugins/core/ui/client/components\", {\n  Card: function (v) {\n    Card = v;\n  },\n  CardHeader: function (v) {\n    CardHeader = v;\n  },\n  CardBody: function (v) {\n    CardBody = v;\n  },\n  CardGroup: function (v) {\n    CardGroup = v;\n  },\n  ListItem: function (v) {\n    ListItem = v;\n  }\n}, 2);\nvar getComponent = void 0;\nmodule.importSync(\"/imports/plugins/core/layout/lib/components\", {\n  getComponent: function (v) {\n    getComponent = v;\n  }\n}, 3);\n\nvar PackageList = function (_Component) {\n  (0, _inherits3.default)(PackageList, _Component);\n\n  function PackageList() {\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, PackageList);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.state = {}, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  PackageList.prototype.isExpanded = function () {\n    function isExpanded(cardName) {\n      if (this.state[\"card_\" + cardName] && typeof this.state[\"card_\" + cardName].isExpanded === \"boolean\") {\n        return this.state[\"card_\" + cardName].isExpanded;\n      }\n\n      return true;\n    }\n\n    return isExpanded;\n  }();\n\n  PackageList.prototype.handleCardExpand = function () {\n    function handleCardExpand(cardName) {\n      var _setState;\n\n      var isExpanded = void 0;\n\n      if (typeof this.state[\"card_\" + cardName] === \"undefined\") {\n        isExpanded = false;\n      } else {\n        isExpanded = !this.state[\"card_\" + cardName].isExpanded;\n      }\n\n      this.setState((_setState = {}, _setState[\"card_\" + cardName] = {\n        isExpanded: isExpanded\n      }, _setState));\n\n      if (this.props.onCardExpand) {\n        this.props.onCardExpand(cardName);\n      }\n    }\n\n    return handleCardExpand;\n  }();\n\n  PackageList.prototype.renderSections = function () {\n    function renderSections() {\n      var _this2 = this;\n\n      if (this.props.groupedPackages) {\n        // Loop through the groups of packages\n        return _map(this.props.groupedPackages, function (group, groupName) {\n          // Loop through the individual cards of packages\n          if (Array.isArray(group.packages)) {\n            var items = group.packages.map(function (packageData, index) {\n              var elements = []; // Standard list element\n\n              elements.push(React.createElement(ListItem, {\n                key: index,\n                i18nKeyLabel: packageData.i18nKeyLabel,\n                icon: packageData.icon,\n                label: packageData.label,\n                onClick: _this2.props.handleShowPackage,\n                actionType: \"arrow\",\n                value: packageData\n              })); // Look for a registered component_ActionDashboard component\n\n              var actionComponent = getComponent(packageData.template + \"_ActionDashboard\"); // If one exists, add it to the list of elements\n\n              if (actionComponent) {\n                elements.push(React.createElement(\n                  Card,\n                  {\n                    expandable: true,\n                    key: \"action-\" + index\n                  },\n                  React.createElement(\n                    CardBody,\n                    null,\n                    React.createElement(actionComponent)\n                  )\n                ));\n              }\n\n              return elements;\n            });\n            return React.createElement(\n              Card,\n              {\n                key: groupName,\n                expanded: _this2.isExpanded(groupName),\n                onExpand: _this2.handleCardExpand.bind(_this2, groupName)\n              },\n              React.createElement(CardHeader, {\n                actAsExpander: true,\n                title: group.title,\n                i18nKeyTitle: group.i18nKeyTitle\n              }),\n              React.createElement(\n                CardBody,\n                {\n                  expandable: true,\n                  padded: false\n                },\n                items\n              )\n            );\n          }\n\n          return null;\n        });\n      }\n\n      return null;\n    }\n\n    return renderSections;\n  }();\n\n  PackageList.prototype.render = function () {\n    function render() {\n      return React.createElement(\n        CardGroup,\n        null,\n        this.renderSections()\n      );\n    }\n\n    return render;\n  }();\n\n  return PackageList;\n}(Component);\n\nPackageList.propTypes = {\n  groupedPackages: PropTypes.object,\n  handleShowPackage: PropTypes.func,\n  onCardExpand: PropTypes.func\n};\nmodule.export(\"default\", exports.default = PackageList);","map":{"version":3,"sources":["/imports/plugins/core/dashboard/client/components/packageList.js"],"names":["React","Component","PropTypes","Card","CardHeader","CardBody","CardGroup","ListItem","getComponent","PackageList","propTypes","groupedPackages","object","handleShowPackage","func","onCardExpand","state","isExpanded","cardName","handleCardExpand","setState","props","renderSections","group","groupName","Array","isArray","packages","items","map","packageData","index","elements","push","i18nKeyLabel","icon","label","actionComponent","template","createElement","bind","title","i18nKeyTitle","render"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAAA,AAAO,AAAS,AAAW,AAAiB,AAE5C,AAAS,AAAM,AAAY,AAAU,AAAW,AAAgB,AAChE,AAAS,AAAoB,AAE7B;;;;;;;;;;;;;;kKASE,AAAW,AAAU,AACnB;;;wBAAI;wBAAA,AAAK,AAAO,UAAhB,AAAI,AAAmB,AAAS,AAAM,AAAO,AAAK,AAAO,AAAO,AAAS,AAAG,AAAe,AAAW,AACpG;eAAO,AAAK,AAAO,gBAAO,AAAS,aAA5B,AAA+B,YAAtC,oDACD;;AAED,AAAO,AACR;;;AAED,AAAiB,AAAU,AACzB;;;;;wBAAA,AAAI;;;;UAEJ,AAAI,AAAO,AAAK,AAAO,AAAO,AAAS,AAAO,AAAa,AACzD;;iBAAa,KAAb,2CADF,AAEC;AAAM,qBACL;aAAA,AAAa,AAAC,AAAK,AAAO,AAAO,AAAS,AAAG,AAC9C;;AAED,AAAK,AAAS,AACZ;;AAAE,WAAF,AAAS,AAAS,AAAI,AACpB;AAFJ,AAAc,AAMd,AAAI,AAAK,AAAM,AAAc,AAC3B;AANsB;;UAMjB,KAAL,AAAW,MAAX,AAAwB,cAAxB,AACD;gCACF;;AAED,AAAiB,AACf;;;;;wBAAI,AAAK;;AAAT,AAAe,AAAiB,AAC9B;;sCACA;AAAO,AAAI,AAAK,AAAM,AAAiB,AAAC,AAAO,AAAc,AAC3D;4EACA;AAAA,AAAI,AAAM,AAAQ,AAAM,AAAW,AACjC;cAAM,MAAQ,QAAM,MAAN,AAAe,WAAI,AAAC,AAAa,AAAU,AACvD;gBAAM,cADiD,AACvD,AAEA;6BAHuD,AAIvD,AAAS,AACP,AAAC,AACC,AAAI,AAAC,AACL,AAAa,AAAC,AAAY,AAC1B,AAAK,AAAC,AAAY,AAClB,AAAM,AAAC,AAAY,AACnB,AAAQ,AAAC,AAAK,AAAM,AACpB,AAAW,AACX,AAAM,AAAC,AAIX,IACA;;AAAM,uBAjBiD,AAiBvD,AAAwB,AAAc,AAAE,AAAY,AAAS,AAE7D,yBACA;AAAI,qBAAJ,AAAqB,AACnB;AAAA,AAAS,AACP,AAAC,8BAAD,AAAM,YAAN,AAAiB,AAAC,AAAM,AAAI,AAAE,AAAS,AAAM;AAC3C,AAAC,sBAAD;AACE,AAAC,uBAAM,YAAP,AAAC,AAAoB;AACvB,AAAE,yBAAF;AAJJ,AAKE,AAAE,4BAEL;uBA5BH,AAAc,AA8BZ,AAAO,AACR,AAED;mBACE,AAAC,AACC,AAAI,AAAC,AACL,AAAS,AAAC,AAAK,AAAW,AAC1B,AAAS,AAAC,AAAK,AAAiB,AAAK,AAAM;;AAE3C,AAAC,kBAAD,AACE,kBADF,AACgB,AAAC,AACf,aAAM,AAAC,AAAM,YAFf,AAEQ,AACN,AAAa,AAAC,AAAM,AAEtB,AAAC,AAAS,AAAW,AAAC,AAAM,AAAO,AAAC,gCAClC,AAAC;;AACH,kBAAA,AAAE,iBACJ;AAdF,AAcE,AAAE,yBAEL;;;;;;;AAED,AAAO;;wCAtDT,AAAO,AAuDN,AACF,AAED,AAAO;;;AAAP,AACD;;qBAED;AAAS,AACP,AACE,AAAC,AACC,AAAC,aA5DoB;AA4DrB,AAAC,AAAK,AACR,AAAE;AAHJ,AAGE,AAEH;;;4CA3GiC;+DA8GpC;;kCAAA,AAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA9Gf,AAA0B,AAAU,AAClC;;AADF,AAAM,YACJ,AAAO;mBACY,UADA,AACU,AAC3B;qBAAmB,UAFF,AAEY,AAC7B;gBAAc,UAHhB,AAAmB,AAGO,AAG1B,AAAQ;AANW,AACjB","file":"/imports/plugins/core/dashboard/client/components/packageList.js.map","sourcesContent":["import React, { Component, PropTypes } from \"react\";\nimport { map } from \"lodash\";\nimport { Card, CardHeader, CardBody, CardGroup, ListItem } from \"/imports/plugins/core/ui/client/components\";\nimport { getComponent } from \"/imports/plugins/core/layout/lib/components\";\n\nclass PackageList extends Component {\n  static propTypes = {\n    groupedPackages: PropTypes.object,\n    handleShowPackage: PropTypes.func,\n    onCardExpand: PropTypes.func\n  }\n\n  state = {}\n\n  isExpanded(cardName) {\n    if (this.state[`card_${cardName}`] && typeof this.state[`card_${cardName}`].isExpanded === \"boolean\") {\n      return this.state[`card_${cardName}`].isExpanded;\n    }\n\n    return true;\n  }\n\n  handleCardExpand(cardName) {\n    let isExpanded;\n\n    if (typeof this.state[`card_${cardName}`] === \"undefined\") {\n      isExpanded = false;\n    } else {\n      isExpanded = !this.state[`card_${cardName}`].isExpanded;\n    }\n\n    this.setState({\n      [`card_${cardName}`]: {\n        isExpanded\n      }\n    });\n\n    if (this.props.onCardExpand) {\n      this.props.onCardExpand(cardName);\n    }\n  }\n\n  renderSections() {\n    if (this.props.groupedPackages) {\n      // Loop through the groups of packages\n      return map(this.props.groupedPackages, (group, groupName) => {\n        // Loop through the individual cards of packages\n        if (Array.isArray(group.packages)) {\n          const items = group.packages.map((packageData, index) => {\n            const elements = [];\n\n            // Standard list element\n            elements.push(\n              <ListItem\n                key={index}\n                i18nKeyLabel={packageData.i18nKeyLabel}\n                icon={packageData.icon}\n                label={packageData.label}\n                onClick={this.props.handleShowPackage}\n                actionType=\"arrow\"\n                value={packageData}\n              />\n            );\n\n            // Look for a registered component_ActionDashboard component\n            const actionComponent = getComponent(`${packageData.template}_ActionDashboard`);\n\n            // If one exists, add it to the list of elements\n            if (actionComponent) {\n              elements.push(\n                <Card expandable={true} key={`action-${index}`}>\n                  <CardBody>\n                    {React.createElement(actionComponent)}\n                  </CardBody>\n                </Card>\n              );\n            }\n\n            return elements;\n          });\n\n          return (\n            <Card\n              key={groupName}\n              expanded={this.isExpanded(groupName)}\n              onExpand={this.handleCardExpand.bind(this, groupName)}\n            >\n              <CardHeader\n                actAsExpander={true}\n                title={group.title}\n                i18nKeyTitle={group.i18nKeyTitle}\n              />\n              <CardBody expandable={true} padded={false}>\n                {items}\n              </CardBody>\n            </Card>\n          );\n        }\n\n        return null;\n      });\n    }\n\n    return null;\n  }\n\n  render() {\n    return (\n      <CardGroup>\n        {this.renderSections()}\n      </CardGroup>\n    );\n  }\n}\n\nexport default PackageList;\n"]},"hash":"c37b92124b168c81f38962c181e836a52d2491fb"}
