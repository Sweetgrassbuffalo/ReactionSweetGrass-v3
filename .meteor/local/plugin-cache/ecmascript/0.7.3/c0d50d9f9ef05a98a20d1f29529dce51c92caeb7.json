{"metadata":{"usedHelpers":["typeof","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"lodash/defer","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_defer"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/tracker","imported":["Tracker"],"specifiers":[{"kind":"named","imported":"Tracker","local":"Tracker"}]},{"source":"/lib/collections","imported":["AnalyticsEvents","Packages"],"specifiers":[{"kind":"named","imported":"AnalyticsEvents","local":"AnalyticsEvents"},{"kind":"named","imported":"Packages","local":"Packages"}]},{"source":"/client/api","imported":["Reaction","i18next","Logger"],"specifiers":[{"kind":"named","imported":"Reaction","local":"Reaction"},{"kind":"named","imported":"i18next","local":"i18next"},{"kind":"named","imported":"Logger","local":"Logger"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/included/analytics/client/startup.js","filenameRelative":"/imports/plugins/included/analytics/client/startup.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/included/analytics/client/startup.js"],"names":["Meteor","Tracker","AnalyticsEvents","Packages","Reaction","i18next","Logger","analytics","window","initialize","invoked","warn","methods","factory","method","args","Array","prototype","slice","call","arguments","unshift","push","i","length","key","load","script","document","createElement","type","async","src","location","protocol","first","getElementsByTagName","parentNode","insertBefore","SNIPPET_VERSION","notifySegment","context","page","userId","properties","url","path","shopId","getShopId","notifyGoogleAnalytics","ga","notifyMixpanel","mixpanel","track","title","Router","triggers","enter","startup","autorun","coreAnalytics","findOne","name","enabled","Alerts","removeType","googleAnalytics","settings","public","segmentio","api_key","hasAdminAccess","toast","t","html","sticky","init","$","body","click","e","$targets","target","closest","parents","add","each","index","element","$element","analyticsEvent","eventType","category","data","action","label","value","Category","Label","Value","insert"],"mappings":"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","file":"/imports/plugins/included/analytics/client/startup.js.map","sourcesContent":["import _ from \"lodash\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Tracker } from \"meteor/tracker\";\nimport { AnalyticsEvents, Packages } from \"/lib/collections\";\nimport { Reaction, i18next, Logger } from \"/client/api\";\n\n// Create a queue, but don't obliterate an existing one!\nanalytics = window.analytics = window.analytics || [];\n\n// If the real analytics.js is already on the page return.\nif (analytics.initialize) return;\n\n// If the snippet was invoked already show an error.\nif (analytics.invoked) {\n  Logger.warn(\"Segment snippet included twice.\");\n  return;\n}\n\n// Invoked flag, to make sure the snippet\n// is never invoked twice.\nanalytics.invoked = true;\n\n// A list of the methods in Analytics.js to stub.\nanalytics.methods = [\n  \"trackSubmit\",\n  \"trackClick\",\n  \"trackLink\",\n  \"trackForm\",\n  \"pageview\",\n  \"identify\",\n  \"reset\",\n  \"group\",\n  \"track\",\n  \"ready\",\n  \"alias\",\n  \"page\",\n  \"once\",\n  \"off\",\n  \"on\"\n];\n\n// Define a factory to create stubs. These are placeholders\n// for methods in Analytics.js so that you never have to wait\n// for it to load to actually record data. The `method` is\n// stored as the first argument, so we can replay the data.\nanalytics.factory = function (method) {\n  return function () {\n    const args = Array.prototype.slice.call(arguments);\n    args.unshift(method);\n    analytics.push(args);\n    return analytics;\n  };\n};\n\n// For each of our methods, generate a queueing stub.\nfor (let i = 0; i < analytics.methods.length; i++) {\n  const key = analytics.methods[i];\n  analytics[key] = analytics.factory(key);\n}\n\n// Define a method to load Analytics.js from our CDN,\n// and that will be sure to only ever load it once.\nanalytics.load = function (key) {\n  // Create an async script element based on your key.\n  const script = document.createElement(\"script\");\n  script.type = \"text/javascript\";\n  script.async = true;\n  script.src = (document.location.protocol === \"https:\" ? \"https://\" : \"http://\") +\n    \"cdn.segment.com/analytics.js/v1/\" + key + \"/analytics.min.js\";\n  // Insert our script next to the first script element.\n  const first = document.getElementsByTagName(\"script\")[0];\n  first.parentNode.insertBefore(script, first);\n};\n\n// Add a version to keep track of what\"s in the wild.\nanalytics.SNIPPET_VERSION = \"3.1.0\";\n\n// Load Analytics.js with your key, which will automatically\n// load the tools you\"ve enabled for your account. Boosh!\n// analytics.load(\"YOUR_WRITE_KEY\");\n\n// Make the first page call to load the integrations. If\n// you\"d like to manually name or tag the page, edit or\n// move this call however you\"d like.\n// analytics.page();\n\n//\n// Initialize analytics page tracking\n//\n\n// segment page tracking\nfunction notifySegment(context) {\n  if (typeof analytics !== \"undefined\") {\n    analytics.page({\n      userId: Meteor.userId(),\n      properties: {\n        url: context.path,\n        shopId: Reaction.getShopId()\n      }\n    });\n  }\n}\n// google analytics page tracking\nfunction notifyGoogleAnalytics(context) {\n  if (typeof ga !== \"undefined\") {\n    ga(\"send\", \"pageview\", context.path);\n  }\n}\n\n// mixpanel page tracking\nfunction notifyMixpanel(context) {\n  if (typeof mixpanel !== \"undefined\") {\n    mixpanel.track(\"page viewed\", {\n      \"page name\": document.title,\n      \"url\": context.path\n    });\n  }\n}\n\nReaction.Router.triggers.enter([notifySegment, notifyGoogleAnalytics, notifyMixpanel]);\n\n//\n// Initialize analytics event tracking\n//\nMeteor.startup(function () {\n  Tracker.autorun(function () {\n    const coreAnalytics = Packages.findOne({\n      name: \"reaction-analytics\"\n    });\n\n    // check if installed and enabled\n    if (!coreAnalytics || !coreAnalytics.enabled) {\n      return Alerts.removeType(\"analytics-not-configured\");\n    }\n\n    const googleAnalytics = coreAnalytics.settings.public.googleAnalytics;\n    const mixpanel = coreAnalytics.settings.public.mixpanel;\n    const segmentio = coreAnalytics.settings.public.segmentio;\n\n    //\n    // segment.io\n    //\n    if (segmentio.enabled) {\n      if (segmentio.api_key && analytics.invoked === true) {\n        analytics.load(segmentio.api_key);\n      } else if (!segmentio.api_key && Reaction.hasAdminAccess()) {\n        _.defer(function () {\n          return Alerts.toast(\n            `${i18next.t(\"admin.settings.segmentNotConfigured\")}`,\n            \"danger\", {\n              html: true,\n              sticky: true\n            });\n        });\n      }\n    }\n\n    //\n    // Google Analytics\n    //\n    if (googleAnalytics.enabled) {\n      if (googleAnalytics.api_key) {\n        ga(\"create\", googleAnalytics.api_key, \"auto\");\n      } else if (!googleAnalytics.api_key && Reaction.hasAdminAccess()) {\n        _.defer(function () {\n          return Alerts.toast(\n            `${i18next.t(\"admin.settings.googleAnalyticsNotConfigured\")}`,\n            \"error\", {\n              type: \"analytics-not-configured\",\n              html: true,\n              sticky: true\n            });\n        });\n      }\n    }\n\n    //\n    // mixpanel\n    //\n    if (mixpanel.enabled) {\n      if (mixpanel.api_key) {\n        mixpanel.init(mixpanel.api_key);\n      } else if (!mixpanel.api_key && Reaction.hasAdminAccess()) {\n        _.defer(function () {\n          return Alerts.toast(\n            `${i18next.t(\"admin.settings.mixpanelNotConfigured\")}`,\n            \"error\", {\n              type: \"analytics-not-configured\",\n              html: true,\n              sticky: true\n            });\n        });\n      }\n    }\n\n    if (!Reaction.hasAdminAccess()) {\n      return Alerts.removeType(\"analytics-not-configured\");\n    }\n    return null;\n  });\n\n  //\n  // analytics event processing\n  //\n  return $(document.body).click(function (e) {\n    let $targets = $(e.target).closest(\"*[data-event-action]\");\n    $targets = $targets.parents(\"*[data-event-action]\").add($targets);\n    return $targets.each(function (index, element) {\n      const $element = $(element);\n      const analyticsEvent = {\n        eventType: \"event\",\n        category: $element.data(\"event-category\"),\n        action: $element.data(\"event-action\"),\n        label: $element.data(\"event-label\"),\n        value: $element.data(\"event-value\")\n      };\n      if (typeof ga === \"function\") {\n        ga(\"send\", \"event\", analyticsEvent.category, analyticsEvent.action, analyticsEvent.label,\n          analyticsEvent.value);\n      }\n      if (typeof mixpanel === \"object\" && mixpanel.length > 0) {\n        mixpanel.track(analyticsEvent.action, {\n          Category: analyticsEvent.category,\n          Label: analyticsEvent.label,\n          Value: analyticsEvent.value\n        });\n      }\n\n      if (typeof analytics === \"object\") {\n        analytics.track(analyticsEvent.action, {\n          Category: analyticsEvent.category,\n          Label: analyticsEvent.label,\n          Value: analyticsEvent.value\n        });\n      }\n      // we could add a hook here, but not needed as\n      // you can trigger using the collection hooks\n      return AnalyticsEvents.insert(analyticsEvent);\n    });\n  });\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/included/analytics/client/startup.js.map","sourceFileName":"/imports/plugins/included/analytics/client/startup.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"startup"},"ignored":false,"code":"var _typeof2 = require(\"babel-runtime/helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _defer = void 0;\n\nmodule.importSync(\"lodash/defer\", {\n  \"default\": function (v) {\n    _defer = v;\n  }\n}, 0);\nvar Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\nvar Tracker = void 0;\nmodule.importSync(\"meteor/tracker\", {\n  Tracker: function (v) {\n    Tracker = v;\n  }\n}, 2);\nvar AnalyticsEvents = void 0,\n    Packages = void 0;\nmodule.importSync(\"/lib/collections\", {\n  AnalyticsEvents: function (v) {\n    AnalyticsEvents = v;\n  },\n  Packages: function (v) {\n    Packages = v;\n  }\n}, 3);\nvar Reaction = void 0,\n    i18next = void 0,\n    Logger = void 0;\nmodule.importSync(\"/client/api\", {\n  Reaction: function (v) {\n    Reaction = v;\n  },\n  i18next: function (v) {\n    i18next = v;\n  },\n  Logger: function (v) {\n    Logger = v;\n  }\n}, 4);\n// Create a queue, but don't obliterate an existing one!\nanalytics = window.analytics = window.analytics || []; // If the real analytics.js is already on the page return.\n\nif (analytics.initialize) return; // If the snippet was invoked already show an error.\n\nif (analytics.invoked) {\n  Logger.warn(\"Segment snippet included twice.\");\n  return;\n} // Invoked flag, to make sure the snippet\n// is never invoked twice.\n\n\nanalytics.invoked = true; // A list of the methods in Analytics.js to stub.\n\nanalytics.methods = [\"trackSubmit\", \"trackClick\", \"trackLink\", \"trackForm\", \"pageview\", \"identify\", \"reset\", \"group\", \"track\", \"ready\", \"alias\", \"page\", \"once\", \"off\", \"on\"]; // Define a factory to create stubs. These are placeholders\n// for methods in Analytics.js so that you never have to wait\n// for it to load to actually record data. The `method` is\n// stored as the first argument, so we can replay the data.\n\nanalytics.factory = function (method) {\n  return function () {\n    var args = Array.prototype.slice.call(arguments);\n    args.unshift(method);\n    analytics.push(args);\n    return analytics;\n  };\n}; // For each of our methods, generate a queueing stub.\n\n\nfor (var i = 0; i < analytics.methods.length; i++) {\n  var key = analytics.methods[i];\n  analytics[key] = analytics.factory(key);\n} // Define a method to load Analytics.js from our CDN,\n// and that will be sure to only ever load it once.\n\n\nanalytics.load = function (key) {\n  // Create an async script element based on your key.\n  var script = document.createElement(\"script\");\n  script.type = \"text/javascript\";\n  script.async = true;\n  script.src = (document.location.protocol === \"https:\" ? \"https://\" : \"http://\") + \"cdn.segment.com/analytics.js/v1/\" + key + \"/analytics.min.js\"; // Insert our script next to the first script element.\n\n  var first = document.getElementsByTagName(\"script\")[0];\n  first.parentNode.insertBefore(script, first);\n}; // Add a version to keep track of what\"s in the wild.\n\n\nanalytics.SNIPPET_VERSION = \"3.1.0\"; // Load Analytics.js with your key, which will automatically\n// load the tools you\"ve enabled for your account. Boosh!\n// analytics.load(\"YOUR_WRITE_KEY\");\n// Make the first page call to load the integrations. If\n// you\"d like to manually name or tag the page, edit or\n// move this call however you\"d like.\n// analytics.page();\n//\n// Initialize analytics page tracking\n//\n// segment page tracking\n\nfunction notifySegment(context) {\n  if (typeof analytics !== \"undefined\") {\n    analytics.page({\n      userId: Meteor.userId(),\n      properties: {\n        url: context.path,\n        shopId: Reaction.getShopId()\n      }\n    });\n  }\n} // google analytics page tracking\n\n\nfunction notifyGoogleAnalytics(context) {\n  if (typeof ga !== \"undefined\") {\n    ga(\"send\", \"pageview\", context.path);\n  }\n} // mixpanel page tracking\n\n\nfunction notifyMixpanel(context) {\n  if (typeof mixpanel !== \"undefined\") {\n    mixpanel.track(\"page viewed\", {\n      \"page name\": document.title,\n      \"url\": context.path\n    });\n  }\n}\n\nReaction.Router.triggers.enter([notifySegment, notifyGoogleAnalytics, notifyMixpanel]); //\n// Initialize analytics event tracking\n//\n\nMeteor.startup(function () {\n  Tracker.autorun(function () {\n    var coreAnalytics = Packages.findOne({\n      name: \"reaction-analytics\"\n    }); // check if installed and enabled\n\n    if (!coreAnalytics || !coreAnalytics.enabled) {\n      return Alerts.removeType(\"analytics-not-configured\");\n    }\n\n    var googleAnalytics = coreAnalytics.settings.public.googleAnalytics;\n    var mixpanel = coreAnalytics.settings.public.mixpanel;\n    var segmentio = coreAnalytics.settings.public.segmentio; //\n    // segment.io\n    //\n\n    if (segmentio.enabled) {\n      if (segmentio.api_key && analytics.invoked === true) {\n        analytics.load(segmentio.api_key);\n      } else if (!segmentio.api_key && Reaction.hasAdminAccess()) {\n        _defer(function () {\n          return Alerts.toast(\"\" + i18next.t(\"admin.settings.segmentNotConfigured\"), \"danger\", {\n            html: true,\n            sticky: true\n          });\n        });\n      }\n    } //\n    // Google Analytics\n    //\n\n\n    if (googleAnalytics.enabled) {\n      if (googleAnalytics.api_key) {\n        ga(\"create\", googleAnalytics.api_key, \"auto\");\n      } else if (!googleAnalytics.api_key && Reaction.hasAdminAccess()) {\n        _defer(function () {\n          return Alerts.toast(\"\" + i18next.t(\"admin.settings.googleAnalyticsNotConfigured\"), \"error\", {\n            type: \"analytics-not-configured\",\n            html: true,\n            sticky: true\n          });\n        });\n      }\n    } //\n    // mixpanel\n    //\n\n\n    if (mixpanel.enabled) {\n      if (mixpanel.api_key) {\n        mixpanel.init(mixpanel.api_key);\n      } else if (!mixpanel.api_key && Reaction.hasAdminAccess()) {\n        _defer(function () {\n          return Alerts.toast(\"\" + i18next.t(\"admin.settings.mixpanelNotConfigured\"), \"error\", {\n            type: \"analytics-not-configured\",\n            html: true,\n            sticky: true\n          });\n        });\n      }\n    }\n\n    if (!Reaction.hasAdminAccess()) {\n      return Alerts.removeType(\"analytics-not-configured\");\n    }\n\n    return null;\n  }); //\n  // analytics event processing\n  //\n\n  return $(document.body).click(function (e) {\n    var $targets = $(e.target).closest(\"*[data-event-action]\");\n    $targets = $targets.parents(\"*[data-event-action]\").add($targets);\n    return $targets.each(function (index, element) {\n      var $element = $(element);\n      var analyticsEvent = {\n        eventType: \"event\",\n        category: $element.data(\"event-category\"),\n        action: $element.data(\"event-action\"),\n        label: $element.data(\"event-label\"),\n        value: $element.data(\"event-value\")\n      };\n\n      if (typeof ga === \"function\") {\n        ga(\"send\", \"event\", analyticsEvent.category, analyticsEvent.action, analyticsEvent.label, analyticsEvent.value);\n      }\n\n      if ((typeof mixpanel === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(mixpanel)) === \"object\" && mixpanel.length > 0) {\n        mixpanel.track(analyticsEvent.action, {\n          Category: analyticsEvent.category,\n          Label: analyticsEvent.label,\n          Value: analyticsEvent.value\n        });\n      }\n\n      if ((typeof analytics === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(analytics)) === \"object\") {\n        analytics.track(analyticsEvent.action, {\n          Category: analyticsEvent.category,\n          Label: analyticsEvent.label,\n          Value: analyticsEvent.value\n        });\n      } // we could add a hook here, but not needed as\n      // you can trigger using the collection hooks\n\n\n      return AnalyticsEvents.insert(analyticsEvent);\n    });\n  });\n});","map":{"version":3,"sources":["/imports/plugins/included/analytics/client/startup.js"],"names":["Meteor","Tracker","AnalyticsEvents","Packages","Reaction","i18next","Logger","analytics","window","initialize","invoked","warn","methods","factory","method","args","Array","prototype","slice","call","arguments","unshift","push","i","length","key","load","script","document","createElement","type","async","src","location","protocol","first","getElementsByTagName","parentNode","insertBefore","SNIPPET_VERSION","notifySegment","context","page","userId","properties","url","path","shopId","getShopId","notifyGoogleAnalytics","ga","notifyMixpanel","mixpanel","track","title","Router","triggers","enter","startup","autorun","coreAnalytics","findOne","name","enabled","Alerts","removeType","googleAnalytics","settings","public","segmentio","api_key","hasAdminAccess","toast","t","html","sticky","init","$","body","click","e","$targets","target","closest","parents","add","each","index","element","$element","analyticsEvent","eventType","category","data","action","label","value","Category","Label","Value","insert"],"mappings":"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","file":"/imports/plugins/included/analytics/client/startup.js.map","sourcesContent":["import _ from \"lodash\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Tracker } from \"meteor/tracker\";\nimport { AnalyticsEvents, Packages } from \"/lib/collections\";\nimport { Reaction, i18next, Logger } from \"/client/api\";\n\n// Create a queue, but don't obliterate an existing one!\nanalytics = window.analytics = window.analytics || [];\n\n// If the real analytics.js is already on the page return.\nif (analytics.initialize) return;\n\n// If the snippet was invoked already show an error.\nif (analytics.invoked) {\n  Logger.warn(\"Segment snippet included twice.\");\n  return;\n}\n\n// Invoked flag, to make sure the snippet\n// is never invoked twice.\nanalytics.invoked = true;\n\n// A list of the methods in Analytics.js to stub.\nanalytics.methods = [\n  \"trackSubmit\",\n  \"trackClick\",\n  \"trackLink\",\n  \"trackForm\",\n  \"pageview\",\n  \"identify\",\n  \"reset\",\n  \"group\",\n  \"track\",\n  \"ready\",\n  \"alias\",\n  \"page\",\n  \"once\",\n  \"off\",\n  \"on\"\n];\n\n// Define a factory to create stubs. These are placeholders\n// for methods in Analytics.js so that you never have to wait\n// for it to load to actually record data. The `method` is\n// stored as the first argument, so we can replay the data.\nanalytics.factory = function (method) {\n  return function () {\n    const args = Array.prototype.slice.call(arguments);\n    args.unshift(method);\n    analytics.push(args);\n    return analytics;\n  };\n};\n\n// For each of our methods, generate a queueing stub.\nfor (let i = 0; i < analytics.methods.length; i++) {\n  const key = analytics.methods[i];\n  analytics[key] = analytics.factory(key);\n}\n\n// Define a method to load Analytics.js from our CDN,\n// and that will be sure to only ever load it once.\nanalytics.load = function (key) {\n  // Create an async script element based on your key.\n  const script = document.createElement(\"script\");\n  script.type = \"text/javascript\";\n  script.async = true;\n  script.src = (document.location.protocol === \"https:\" ? \"https://\" : \"http://\") +\n    \"cdn.segment.com/analytics.js/v1/\" + key + \"/analytics.min.js\";\n  // Insert our script next to the first script element.\n  const first = document.getElementsByTagName(\"script\")[0];\n  first.parentNode.insertBefore(script, first);\n};\n\n// Add a version to keep track of what\"s in the wild.\nanalytics.SNIPPET_VERSION = \"3.1.0\";\n\n// Load Analytics.js with your key, which will automatically\n// load the tools you\"ve enabled for your account. Boosh!\n// analytics.load(\"YOUR_WRITE_KEY\");\n\n// Make the first page call to load the integrations. If\n// you\"d like to manually name or tag the page, edit or\n// move this call however you\"d like.\n// analytics.page();\n\n//\n// Initialize analytics page tracking\n//\n\n// segment page tracking\nfunction notifySegment(context) {\n  if (typeof analytics !== \"undefined\") {\n    analytics.page({\n      userId: Meteor.userId(),\n      properties: {\n        url: context.path,\n        shopId: Reaction.getShopId()\n      }\n    });\n  }\n}\n// google analytics page tracking\nfunction notifyGoogleAnalytics(context) {\n  if (typeof ga !== \"undefined\") {\n    ga(\"send\", \"pageview\", context.path);\n  }\n}\n\n// mixpanel page tracking\nfunction notifyMixpanel(context) {\n  if (typeof mixpanel !== \"undefined\") {\n    mixpanel.track(\"page viewed\", {\n      \"page name\": document.title,\n      \"url\": context.path\n    });\n  }\n}\n\nReaction.Router.triggers.enter([notifySegment, notifyGoogleAnalytics, notifyMixpanel]);\n\n//\n// Initialize analytics event tracking\n//\nMeteor.startup(function () {\n  Tracker.autorun(function () {\n    const coreAnalytics = Packages.findOne({\n      name: \"reaction-analytics\"\n    });\n\n    // check if installed and enabled\n    if (!coreAnalytics || !coreAnalytics.enabled) {\n      return Alerts.removeType(\"analytics-not-configured\");\n    }\n\n    const googleAnalytics = coreAnalytics.settings.public.googleAnalytics;\n    const mixpanel = coreAnalytics.settings.public.mixpanel;\n    const segmentio = coreAnalytics.settings.public.segmentio;\n\n    //\n    // segment.io\n    //\n    if (segmentio.enabled) {\n      if (segmentio.api_key && analytics.invoked === true) {\n        analytics.load(segmentio.api_key);\n      } else if (!segmentio.api_key && Reaction.hasAdminAccess()) {\n        _.defer(function () {\n          return Alerts.toast(\n            `${i18next.t(\"admin.settings.segmentNotConfigured\")}`,\n            \"danger\", {\n              html: true,\n              sticky: true\n            });\n        });\n      }\n    }\n\n    //\n    // Google Analytics\n    //\n    if (googleAnalytics.enabled) {\n      if (googleAnalytics.api_key) {\n        ga(\"create\", googleAnalytics.api_key, \"auto\");\n      } else if (!googleAnalytics.api_key && Reaction.hasAdminAccess()) {\n        _.defer(function () {\n          return Alerts.toast(\n            `${i18next.t(\"admin.settings.googleAnalyticsNotConfigured\")}`,\n            \"error\", {\n              type: \"analytics-not-configured\",\n              html: true,\n              sticky: true\n            });\n        });\n      }\n    }\n\n    //\n    // mixpanel\n    //\n    if (mixpanel.enabled) {\n      if (mixpanel.api_key) {\n        mixpanel.init(mixpanel.api_key);\n      } else if (!mixpanel.api_key && Reaction.hasAdminAccess()) {\n        _.defer(function () {\n          return Alerts.toast(\n            `${i18next.t(\"admin.settings.mixpanelNotConfigured\")}`,\n            \"error\", {\n              type: \"analytics-not-configured\",\n              html: true,\n              sticky: true\n            });\n        });\n      }\n    }\n\n    if (!Reaction.hasAdminAccess()) {\n      return Alerts.removeType(\"analytics-not-configured\");\n    }\n    return null;\n  });\n\n  //\n  // analytics event processing\n  //\n  return $(document.body).click(function (e) {\n    let $targets = $(e.target).closest(\"*[data-event-action]\");\n    $targets = $targets.parents(\"*[data-event-action]\").add($targets);\n    return $targets.each(function (index, element) {\n      const $element = $(element);\n      const analyticsEvent = {\n        eventType: \"event\",\n        category: $element.data(\"event-category\"),\n        action: $element.data(\"event-action\"),\n        label: $element.data(\"event-label\"),\n        value: $element.data(\"event-value\")\n      };\n      if (typeof ga === \"function\") {\n        ga(\"send\", \"event\", analyticsEvent.category, analyticsEvent.action, analyticsEvent.label,\n          analyticsEvent.value);\n      }\n      if (typeof mixpanel === \"object\" && mixpanel.length > 0) {\n        mixpanel.track(analyticsEvent.action, {\n          Category: analyticsEvent.category,\n          Label: analyticsEvent.label,\n          Value: analyticsEvent.value\n        });\n      }\n\n      if (typeof analytics === \"object\") {\n        analytics.track(analyticsEvent.action, {\n          Category: analyticsEvent.category,\n          Label: analyticsEvent.label,\n          Value: analyticsEvent.value\n        });\n      }\n      // we could add a hook here, but not needed as\n      // you can trigger using the collection hooks\n      return AnalyticsEvents.insert(analyticsEvent);\n    });\n  });\n});\n"]},"hash":"c0d50d9f9ef05a98a20d1f29529dce51c92caeb7"}
