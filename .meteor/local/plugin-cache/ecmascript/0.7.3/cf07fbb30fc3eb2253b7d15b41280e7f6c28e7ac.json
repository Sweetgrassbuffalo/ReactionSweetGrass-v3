{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component","PropTypes"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"},{"kind":"named","imported":"PropTypes","local":"PropTypes"}]},{"source":"moment","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"moment"}]},{"source":"/client/api","imported":["Reaction"],"specifiers":[{"kind":"named","imported":"Reaction","local":"Reaction"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/included/notifications/client/components/notificationDropdown.js","filenameRelative":"/imports/plugins/included/notifications/client/components/notificationDropdown.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/included/notifications/client/components/notificationDropdown.js"],"names":["React","Component","PropTypes","moment","Reaction","NotificationDropdown","constructor","props","prefix","getShopPrefix","handleNoNotifications","bind","renderDropdownHead","handleClick","notifyArr","length","notify","type","actionViewData","Apps","name","provides","showActionView","Router","go","url","markOneAsRead","_id","notificationList","unread","markAllAsRead","render","map","key","timeNow","timeSent","fromNow","read","status","i18n","message","propTypes","func","isRequired","array","number"],"mappings":"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","file":"/imports/plugins/included/notifications/client/components/notificationDropdown.js.map","sourcesContent":["import React, { Component, PropTypes } from \"react\";\nimport moment from \"moment\";\nimport { Reaction } from \"/client/api\";\n\nclass NotificationDropdown extends Component {\n  constructor(props) {\n    super(props);\n    this.prefix = Reaction.getShopPrefix();\n    this.handleNoNotifications = this.handleNoNotifications.bind(this);\n    this.renderDropdownHead = this.renderDropdownHead.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleNoNotifications(notifyArr) {\n    if (notifyArr.length <= 0) {\n      return (\n          <li className=\"notification\">\n              <div className=\"media\">\n                 <div className=\"media-body\">\n                    <strong className=\"notification-title\" data-i18n=\"notifications.body.noNotifications\">No notifications yet</strong>\n                 </div>\n              </div>\n          </li>\n      );\n    }\n    return null;\n  }\n\n  handleClick(notify) {\n    if (notify.type === \"forAdmin\") {\n      const actionViewData = Reaction.Apps({\n        name: \"reaction-orders\",\n        provides: \"dashboard\"\n      });\n      Reaction.showActionView(actionViewData);\n    } else {\n      Reaction.Router.go(notify.url);\n    }\n\n    const { markOneAsRead } = this.props;\n    return markOneAsRead(notify._id);\n  }\n\n  renderDropdownHead() {\n    const { notificationList, unread, markAllAsRead } = this.props;\n    return (\n        <div className=\"dropdown-toolbar\">\n            <div className=\"dropdown-toolbar-actions\">\n                <a onClick={() => {\n                  markAllAsRead(notificationList);\n                }}\n                  data-i18n=\"notifications.body.markAllAsRead\"\n                > Mark all as read</a>\n            </div>\n            <h3 className=\"dropdown-toolbar-title\"><span data-i18n=\"notifications.body.recent\">Recent</span> ({unread})</h3>\n        </div>\n    );\n  }\n\n  render() {\n    const { notificationList } = this.props;\n    const prefix = this.prefix + \"/notifications\";\n    return (\n        <div className=\"notify-bar\">\n            { this.renderDropdownHead() }\n             <ul className=\"dropdown-notify notifications\">\n                { this.handleNoNotifications(notificationList) }\n                { notificationList.map((notify, key) => {\n                  const timeNow = moment(notify.timeSent).fromNow();\n                  const read = `notification ${notify.status}`;\n                  const i18n = `notifications.messages.${notify.type}`;\n                  return (\n                        <li className={read} key={key}>\n                            <a onClick={() => {\n                              this.handleClick(notify);\n                            }}\n                            >\n                                <div className=\"media\">\n                                    <div className=\"media-body\">\n                                    <strong className=\"notification-title\" data-i18n={i18n}>{notify.message}</strong>\n                                    <div className=\"notification-meta\">\n                                        <small className=\"timestamp\">{timeNow}</small>\n                                    </div>\n                                    </div>\n                                </div>\n                            </a>\n                        </li>\n                  );\n                })}\n             </ul>\n             <div className=\"dropdown-footer text-center\">\n                 <a href={prefix} data-i18n=\"notifications.body.viewAll\">View All</a>\n             </div>\n        </div>\n    );\n  }\n}\n\nNotificationDropdown.propTypes = {\n  markAllAsRead: PropTypes.func.isRequired,\n  markOneAsRead: PropTypes.func.isRequired,\n  notificationList: PropTypes.array.isRequired,\n  unread: PropTypes.number.isRequired\n};\n\nexport default NotificationDropdown;\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/included/notifications/client/components/notificationDropdown.js.map","sourceFileName":"/imports/plugins/included/notifications/client/components/notificationDropdown.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"notificationDropdown"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0,\n    Component = void 0,\n    PropTypes = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  },\n  PropTypes: function (v) {\n    PropTypes = v;\n  }\n}, 0);\nvar moment = void 0;\nmodule.importSync(\"moment\", {\n  \"default\": function (v) {\n    moment = v;\n  }\n}, 1);\nvar Reaction = void 0;\nmodule.importSync(\"/client/api\", {\n  Reaction: function (v) {\n    Reaction = v;\n  }\n}, 2);\n\nvar NotificationDropdown = function (_Component) {\n  (0, _inherits3.default)(NotificationDropdown, _Component);\n\n  function NotificationDropdown(props) {\n    (0, _classCallCheck3.default)(this, NotificationDropdown);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));\n\n    _this.prefix = Reaction.getShopPrefix();\n    _this.handleNoNotifications = _this.handleNoNotifications.bind(_this);\n    _this.renderDropdownHead = _this.renderDropdownHead.bind(_this);\n    _this.handleClick = _this.handleClick.bind(_this);\n    return _this;\n  }\n\n  NotificationDropdown.prototype.handleNoNotifications = function () {\n    function handleNoNotifications(notifyArr) {\n      if (notifyArr.length <= 0) {\n        return React.createElement(\n          \"li\",\n          {\n            className: \"notification\"\n          },\n          React.createElement(\n            \"div\",\n            {\n              className: \"media\"\n            },\n            React.createElement(\n              \"div\",\n              {\n                className: \"media-body\"\n              },\n              React.createElement(\n                \"strong\",\n                {\n                  className: \"notification-title\",\n                  \"data-i18n\": \"notifications.body.noNotifications\"\n                },\n                \"No notifications yet\"\n              )\n            )\n          )\n        );\n      }\n\n      return null;\n    }\n\n    return handleNoNotifications;\n  }();\n\n  NotificationDropdown.prototype.handleClick = function () {\n    function handleClick(notify) {\n      if (notify.type === \"forAdmin\") {\n        var actionViewData = Reaction.Apps({\n          name: \"reaction-orders\",\n          provides: \"dashboard\"\n        });\n        Reaction.showActionView(actionViewData);\n      } else {\n        Reaction.Router.go(notify.url);\n      }\n\n      var markOneAsRead = this.props.markOneAsRead;\n      return markOneAsRead(notify._id);\n    }\n\n    return handleClick;\n  }();\n\n  NotificationDropdown.prototype.renderDropdownHead = function () {\n    function renderDropdownHead() {\n      var _props = this.props,\n          notificationList = _props.notificationList,\n          unread = _props.unread,\n          markAllAsRead = _props.markAllAsRead;\n      return React.createElement(\n        \"div\",\n        {\n          className: \"dropdown-toolbar\"\n        },\n        React.createElement(\n          \"div\",\n          {\n            className: \"dropdown-toolbar-actions\"\n          },\n          React.createElement(\n            \"a\",\n            {\n              onClick: function () {\n                markAllAsRead(notificationList);\n              },\n              \"data-i18n\": \"notifications.body.markAllAsRead\"\n            },\n            \" Mark all as read\"\n          )\n        ),\n        React.createElement(\n          \"h3\",\n          {\n            className: \"dropdown-toolbar-title\"\n          },\n          React.createElement(\n            \"span\",\n            {\n              \"data-i18n\": \"notifications.body.recent\"\n            },\n            \"Recent\"\n          ),\n          \" (\",\n          unread,\n          \")\"\n        )\n      );\n    }\n\n    return renderDropdownHead;\n  }();\n\n  NotificationDropdown.prototype.render = function () {\n    function render() {\n      var _this2 = this;\n\n      var notificationList = this.props.notificationList;\n      var prefix = this.prefix + \"/notifications\";\n      return React.createElement(\n        \"div\",\n        {\n          className: \"notify-bar\"\n        },\n        this.renderDropdownHead(),\n        React.createElement(\n          \"ul\",\n          {\n            className: \"dropdown-notify notifications\"\n          },\n          this.handleNoNotifications(notificationList),\n          notificationList.map(function (notify, key) {\n            var timeNow = moment(notify.timeSent).fromNow();\n            var read = \"notification \" + notify.status;\n            var i18n = \"notifications.messages.\" + notify.type;\n            return React.createElement(\n              \"li\",\n              {\n                className: read,\n                key: key\n              },\n              React.createElement(\n                \"a\",\n                {\n                  onClick: function () {\n                    _this2.handleClick(notify);\n                  }\n                },\n                React.createElement(\n                  \"div\",\n                  {\n                    className: \"media\"\n                  },\n                  React.createElement(\n                    \"div\",\n                    {\n                      className: \"media-body\"\n                    },\n                    React.createElement(\n                      \"strong\",\n                      {\n                        className: \"notification-title\",\n                        \"data-i18n\": i18n\n                      },\n                      notify.message\n                    ),\n                    React.createElement(\n                      \"div\",\n                      {\n                        className: \"notification-meta\"\n                      },\n                      React.createElement(\n                        \"small\",\n                        {\n                          className: \"timestamp\"\n                        },\n                        timeNow\n                      )\n                    )\n                  )\n                )\n              )\n            );\n          })\n        ),\n        React.createElement(\n          \"div\",\n          {\n            className: \"dropdown-footer text-center\"\n          },\n          React.createElement(\n            \"a\",\n            {\n              href: prefix,\n              \"data-i18n\": \"notifications.body.viewAll\"\n            },\n            \"View All\"\n          )\n        )\n      );\n    }\n\n    return render;\n  }();\n\n  return NotificationDropdown;\n}(Component);\n\nNotificationDropdown.propTypes = {\n  markAllAsRead: PropTypes.func.isRequired,\n  markOneAsRead: PropTypes.func.isRequired,\n  notificationList: PropTypes.array.isRequired,\n  unread: PropTypes.number.isRequired\n};\nmodule.export(\"default\", exports.default = NotificationDropdown);","map":{"version":3,"sources":["/imports/plugins/included/notifications/client/components/notificationDropdown.js"],"names":["React","Component","PropTypes","moment","Reaction","NotificationDropdown","constructor","props","prefix","getShopPrefix","handleNoNotifications","bind","renderDropdownHead","handleClick","notifyArr","length","notify","type","actionViewData","Apps","name","provides","showActionView","Router","go","url","markOneAsRead","_id","notificationList","unread","markAllAsRead","render","map","key","timeNow","timeSent","fromNow","read","status","i18n","message","propTypes","func","isRequired","array","number"],"mappings":"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","file":"/imports/plugins/included/notifications/client/components/notificationDropdown.js.map","sourcesContent":["import React, { Component, PropTypes } from \"react\";\nimport moment from \"moment\";\nimport { Reaction } from \"/client/api\";\n\nclass NotificationDropdown extends Component {\n  constructor(props) {\n    super(props);\n    this.prefix = Reaction.getShopPrefix();\n    this.handleNoNotifications = this.handleNoNotifications.bind(this);\n    this.renderDropdownHead = this.renderDropdownHead.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleNoNotifications(notifyArr) {\n    if (notifyArr.length <= 0) {\n      return (\n          <li className=\"notification\">\n              <div className=\"media\">\n                 <div className=\"media-body\">\n                    <strong className=\"notification-title\" data-i18n=\"notifications.body.noNotifications\">No notifications yet</strong>\n                 </div>\n              </div>\n          </li>\n      );\n    }\n    return null;\n  }\n\n  handleClick(notify) {\n    if (notify.type === \"forAdmin\") {\n      const actionViewData = Reaction.Apps({\n        name: \"reaction-orders\",\n        provides: \"dashboard\"\n      });\n      Reaction.showActionView(actionViewData);\n    } else {\n      Reaction.Router.go(notify.url);\n    }\n\n    const { markOneAsRead } = this.props;\n    return markOneAsRead(notify._id);\n  }\n\n  renderDropdownHead() {\n    const { notificationList, unread, markAllAsRead } = this.props;\n    return (\n        <div className=\"dropdown-toolbar\">\n            <div className=\"dropdown-toolbar-actions\">\n                <a onClick={() => {\n                  markAllAsRead(notificationList);\n                }}\n                  data-i18n=\"notifications.body.markAllAsRead\"\n                > Mark all as read</a>\n            </div>\n            <h3 className=\"dropdown-toolbar-title\"><span data-i18n=\"notifications.body.recent\">Recent</span> ({unread})</h3>\n        </div>\n    );\n  }\n\n  render() {\n    const { notificationList } = this.props;\n    const prefix = this.prefix + \"/notifications\";\n    return (\n        <div className=\"notify-bar\">\n            { this.renderDropdownHead() }\n             <ul className=\"dropdown-notify notifications\">\n                { this.handleNoNotifications(notificationList) }\n                { notificationList.map((notify, key) => {\n                  const timeNow = moment(notify.timeSent).fromNow();\n                  const read = `notification ${notify.status}`;\n                  const i18n = `notifications.messages.${notify.type}`;\n                  return (\n                        <li className={read} key={key}>\n                            <a onClick={() => {\n                              this.handleClick(notify);\n                            }}\n                            >\n                                <div className=\"media\">\n                                    <div className=\"media-body\">\n                                    <strong className=\"notification-title\" data-i18n={i18n}>{notify.message}</strong>\n                                    <div className=\"notification-meta\">\n                                        <small className=\"timestamp\">{timeNow}</small>\n                                    </div>\n                                    </div>\n                                </div>\n                            </a>\n                        </li>\n                  );\n                })}\n             </ul>\n             <div className=\"dropdown-footer text-center\">\n                 <a href={prefix} data-i18n=\"notifications.body.viewAll\">View All</a>\n             </div>\n        </div>\n    );\n  }\n}\n\nNotificationDropdown.propTypes = {\n  markAllAsRead: PropTypes.func.isRequired,\n  markOneAsRead: PropTypes.func.isRequired,\n  notificationList: PropTypes.array.isRequired,\n  unread: PropTypes.number.isRequired\n};\n\nexport default NotificationDropdown;\n"]},"hash":"cf07fbb30fc3eb2253b7d15b41280e7f6c28e7ac"}
