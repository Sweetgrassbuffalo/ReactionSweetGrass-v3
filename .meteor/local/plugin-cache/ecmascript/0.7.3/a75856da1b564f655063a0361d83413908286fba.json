{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"/imports/plugins/core/ui-tagnav/client/helpers","imported":["TagHelpers"],"specifiers":[{"kind":"named","imported":"TagHelpers","local":"TagHelpers"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/core/ui-tagnav/client/components/tagGroup/tagGroup.js","filenameRelative":"/imports/plugins/core/ui-tagnav/client/components/tagGroup/tagGroup.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/core/ui-tagnav/client/components/tagGroup/tagGroup.js"],"names":["TagHelpers","Template","tagGroup","onRendered","helpers","className","instance","data","blank","tagGroupProps","groupTag","tag","isEditing","onTagRemove","parentTag","onTagUpdate","tagListProps","tags","subTags","onTagCreate","tagName","onTagSort","newTagsOrder","onTagDragAdd"],"mappings":"AAAA,IAAS;AAAT,OAA2B,WAA3B;;;;GAEA,AAAS,AAAS,AAAW,AAAM,AAElC;AAED,SAAA,AAAS,SAAT,AAAkB,AAAQ,uBACxB,AAAY,AACV,CAAA,AAAM,AAAW,AAAS;AAC1B,AAAI,SAAS,SAAT,AAAc;AACT,yBAAP,AACD;4BALqB,AAMvB;;;aAED;AAAA,AAAc,AAAU,AACtB;AAAA,AAAM,AAAW,AAAS,AAE1B,AAAO,AACL;AAAK,2BADA,UAEL;QAAW,WAAS,SAFf,AAEM,AAAc,AACzB;;WACE,AAAS,AAAK,AAAY,AAAK,AAAS,AAAK,AAC9C;AALI;kCAML;iBAAa,KAAA,AAAS,AAAK,+BAN7B,AAAO;AAXe,AAmBvB;iCAED;AAPI,AAAY,AAAK,AACf;AAMN,AAAa,AAAU,AACrB,AAAM,AAAW,AAAS,AAE1B;AAAO,oCACL;QAAW,WADN,SAAA,AAEL,AAAM,AAAW,AAAQ,AACzB;;iBACA;YAAY,WAAZ,AAAqB,QACnB;AAAI,iBAAA,AAAS,SAAK,KAAlB,AAA+B,AAC7B;6BAAA,AAAS,AAAK,SAAd,AAA0B,AAAS,AAAS,AAAK,AAClD;uCAPE,AAQJ;;AACD;AAAA,AAAY,AAAK,AACf;AAAS,6BAAT,AAAc,KAVX,AAUH,AAA0B,AAAK,AAAS,AAAK,AAC9C;;AACD;2BAAA,AAAU,cAAc,AACtB;iBAAA,AAAS,KAAT,AAAc,UAAd,AAAwB,cAAc,SAAA,AAAS,KAA/C,AAAoD,AACrD;AAdI;kCAeL;mBAAc,SAAS,KAflB,AAeS,AAAc,AAC5B,AAAa,AAAS,AAAK;AAhBtB,AAGM,AAAS,AAAK;AA3B/B,AAA0B,AAwBtB,AAkBD;AAvCC,AAAyB,AACvB","file":"/imports/plugins/core/ui-tagnav/client/components/tagGroup/tagGroup.js.map","sourcesContent":["import { TagHelpers } from \"/imports/plugins/core/ui-tagnav/client/helpers\";\n\nTemplate.tagGroup.onRendered(() => {\n\n});\n\nTemplate.tagGroup.helpers({\n  className() {\n    const instance = Template.instance();\n    if (instance.data.blank) {\n      return \"create\";\n    }\n  },\n\n  tagGroupProps(groupTag) {\n    const instance = Template.instance();\n\n    return {\n      tag: groupTag,\n      isEditing: instance.data.isEditing,\n      onTagRemove(tag) {\n        instance.data.onTagRemove(tag, instance.data.parentTag);\n      },\n      onTagUpdate: instance.data.onTagUpdate\n    };\n  },\n\n  tagListProps(groupTag) {\n    const instance = Template.instance();\n\n    return {\n      parentTag: groupTag,\n      tags: TagHelpers.subTags(groupTag),\n      isEditing: instance.data.isEditing,\n      onTagCreate(tagName) {\n        if (instance.data.onTagCreate) {\n          instance.data.onTagCreate(tagName, instance.data.groupTag);\n        }\n      },\n      onTagRemove(tag) {\n        instance.data.onTagRemove(tag, instance.data.groupTag);\n      },\n      onTagSort(newTagsOrder) {\n        instance.data.onTagSort(newTagsOrder, instance.data.groupTag);\n      },\n      onTagDragAdd: instance.data.onTagDragAdd,\n      onTagUpdate: instance.data.onTagUpdate\n    };\n  }\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/core/ui-tagnav/client/components/tagGroup/tagGroup.js.map","sourceFileName":"/imports/plugins/core/ui-tagnav/client/components/tagGroup/tagGroup.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"tagGroup"},"ignored":false,"code":"var TagHelpers = void 0;\nmodule.importSync(\"/imports/plugins/core/ui-tagnav/client/helpers\", {\n  TagHelpers: function (v) {\n    TagHelpers = v;\n  }\n}, 0);\nTemplate.tagGroup.onRendered(function () {});\nTemplate.tagGroup.helpers({\n  className: function () {\n    var instance = Template.instance();\n\n    if (instance.data.blank) {\n      return \"create\";\n    }\n  },\n  tagGroupProps: function (groupTag) {\n    var instance = Template.instance();\n    return {\n      tag: groupTag,\n      isEditing: instance.data.isEditing,\n      onTagRemove: function (tag) {\n        instance.data.onTagRemove(tag, instance.data.parentTag);\n      },\n      onTagUpdate: instance.data.onTagUpdate\n    };\n  },\n  tagListProps: function (groupTag) {\n    var instance = Template.instance();\n    return {\n      parentTag: groupTag,\n      tags: TagHelpers.subTags(groupTag),\n      isEditing: instance.data.isEditing,\n      onTagCreate: function (tagName) {\n        if (instance.data.onTagCreate) {\n          instance.data.onTagCreate(tagName, instance.data.groupTag);\n        }\n      },\n      onTagRemove: function (tag) {\n        instance.data.onTagRemove(tag, instance.data.groupTag);\n      },\n      onTagSort: function (newTagsOrder) {\n        instance.data.onTagSort(newTagsOrder, instance.data.groupTag);\n      },\n      onTagDragAdd: instance.data.onTagDragAdd,\n      onTagUpdate: instance.data.onTagUpdate\n    };\n  }\n});","map":{"version":3,"sources":["/imports/plugins/core/ui-tagnav/client/components/tagGroup/tagGroup.js"],"names":["TagHelpers","Template","tagGroup","onRendered","helpers","className","instance","data","blank","tagGroupProps","groupTag","tag","isEditing","onTagRemove","parentTag","onTagUpdate","tagListProps","tags","subTags","onTagCreate","tagName","onTagSort","newTagsOrder","onTagDragAdd"],"mappings":"AAAA,IAAS;AAAT,OAA2B,WAA3B;;;;GAEA,AAAS,AAAS,AAAW,AAAM,AAElC;AAED,SAAA,AAAS,SAAT,AAAkB,AAAQ,uBACxB,AAAY,AACV,CAAA,AAAM,AAAW,AAAS;AAC1B,AAAI,SAAS,SAAT,AAAc;AACT,yBAAP,AACD;4BALqB,AAMvB;;;aAED;AAAA,AAAc,AAAU,AACtB;AAAA,AAAM,AAAW,AAAS,AAE1B,AAAO,AACL;AAAK,2BADA,UAEL;QAAW,WAAS,SAFf,AAEM,AAAc,AACzB;;WACE,AAAS,AAAK,AAAY,AAAK,AAAS,AAAK,AAC9C;AALI;kCAML;iBAAa,KAAA,AAAS,AAAK,+BAN7B,AAAO;AAXe,AAmBvB;iCAED;AAPI,AAAY,AAAK,AACf;AAMN,AAAa,AAAU,AACrB,AAAM,AAAW,AAAS,AAE1B;AAAO,oCACL;QAAW,WADN,SAAA,AAEL,AAAM,AAAW,AAAQ,AACzB;;iBACA;YAAY,WAAZ,AAAqB,QACnB;AAAI,iBAAA,AAAS,SAAK,KAAlB,AAA+B,AAC7B;6BAAA,AAAS,AAAK,SAAd,AAA0B,AAAS,AAAS,AAAK,AAClD;uCAPE,AAQJ;;AACD;AAAA,AAAY,AAAK,AACf;AAAS,6BAAT,AAAc,KAVX,AAUH,AAA0B,AAAK,AAAS,AAAK,AAC9C;;AACD;2BAAA,AAAU,cAAc,AACtB;iBAAA,AAAS,KAAT,AAAc,UAAd,AAAwB,cAAc,SAAA,AAAS,KAA/C,AAAoD,AACrD;AAdI;kCAeL;mBAAc,SAAS,KAflB,AAeS,AAAc,AAC5B,AAAa,AAAS,AAAK;AAhBtB,AAGM,AAAS,AAAK;AA3B/B,AAA0B,AAwBtB,AAkBD;AAvCC,AAAyB,AACvB","file":"/imports/plugins/core/ui-tagnav/client/components/tagGroup/tagGroup.js.map","sourcesContent":["import { TagHelpers } from \"/imports/plugins/core/ui-tagnav/client/helpers\";\n\nTemplate.tagGroup.onRendered(() => {\n\n});\n\nTemplate.tagGroup.helpers({\n  className() {\n    const instance = Template.instance();\n    if (instance.data.blank) {\n      return \"create\";\n    }\n  },\n\n  tagGroupProps(groupTag) {\n    const instance = Template.instance();\n\n    return {\n      tag: groupTag,\n      isEditing: instance.data.isEditing,\n      onTagRemove(tag) {\n        instance.data.onTagRemove(tag, instance.data.parentTag);\n      },\n      onTagUpdate: instance.data.onTagUpdate\n    };\n  },\n\n  tagListProps(groupTag) {\n    const instance = Template.instance();\n\n    return {\n      parentTag: groupTag,\n      tags: TagHelpers.subTags(groupTag),\n      isEditing: instance.data.isEditing,\n      onTagCreate(tagName) {\n        if (instance.data.onTagCreate) {\n          instance.data.onTagCreate(tagName, instance.data.groupTag);\n        }\n      },\n      onTagRemove(tag) {\n        instance.data.onTagRemove(tag, instance.data.groupTag);\n      },\n      onTagSort(newTagsOrder) {\n        instance.data.onTagSort(newTagsOrder, instance.data.groupTag);\n      },\n      onTagDragAdd: instance.data.onTagDragAdd,\n      onTagUpdate: instance.data.onTagUpdate\n    };\n  }\n});\n"]},"hash":"a75856da1b564f655063a0361d83413908286fba"}
