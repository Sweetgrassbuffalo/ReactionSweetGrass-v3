{"metadata":{"usedHelpers":["classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/ongoworks:security/lib/client/Security.Check.js","filenameRelative":"/packages/ongoworks:security/lib/client/Security.Check.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/ongoworks:security/lib/client/Security.Check.js.map","sourceFileName":"/packages/ongoworks:security/lib/client/Security.Check.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"Security.Check"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// We only stub on the client to prevent errors if putting in common code\nSecurity.Check = function () {\n  function _class() {\n    (0, _classCallCheck3.default)(this, _class);\n  }\n\n  _class.prototype.for = function () {\n    function _for() {\n      return this;\n    }\n\n    return _for;\n  }();\n\n  _class.prototype.insert = function () {\n    function insert() {\n      return this;\n    }\n\n    return insert;\n  }();\n\n  _class.prototype.update = function () {\n    function update() {\n      return this;\n    }\n\n    return update;\n  }();\n\n  _class.prototype.remove = function () {\n    function remove() {\n      return this;\n    }\n\n    return remove;\n  }();\n\n  _class.prototype.read = function () {\n    function read() {\n      return this;\n    }\n\n    return read;\n  }();\n\n  _class.prototype.download = function () {\n    function download() {\n      return this;\n    }\n\n    return download;\n  }();\n\n  _class.prototype.check = function () {\n    function check() {\n      return true;\n    }\n\n    return check;\n  }();\n\n  _class.prototype.throw = function () {\n    function _throw() {}\n\n    return _throw;\n  }();\n\n  return _class;\n}();","map":{"version":3,"sources":["/packages/ongoworks:security/lib/client/Security.Check.js"],"names":["Security","Check","for","insert","update","remove","read","download","check","throw"],"mappings":";;;;;;AAAA;AAEAA,SAASC,KAAT;AACE,oBAAc;AAAA;AAAE;;AADlB,mBAGEC,GAHF;AAAA,oBAGQ;AACJ,aAAO,IAAP;AACD;;AALH;AAAA;;AAAA,mBAOEC,MAPF;AAAA,sBAOW;AACP,aAAO,IAAP;AACD;;AATH;AAAA;;AAAA,mBAWEC,MAXF;AAAA,sBAWW;AACP,aAAO,IAAP;AACD;;AAbH;AAAA;;AAAA,mBAeEC,MAfF;AAAA,sBAeW;AACP,aAAO,IAAP;AACD;;AAjBH;AAAA;;AAAA,mBAmBEC,IAnBF;AAAA,oBAmBS;AACL,aAAO,IAAP;AACD;;AArBH;AAAA;;AAAA,mBAuBEC,QAvBF;AAAA,wBAuBa;AACT,aAAO,IAAP;AACD;;AAzBH;AAAA;;AAAA,mBA2BEC,KA3BF;AAAA,qBA2BU;AACN,aAAO,IAAP;AACD;;AA7BH;AAAA;;AAAA,mBA+BEC,KA/BF;AAAA,sBA+BU,CAAE;;AA/BZ;AAAA;;AAAA;AAAA","file":"/packages/ongoworks:security/lib/client/Security.Check.js.map","sourcesContent":["// We only stub on the client to prevent errors if putting in common code\n\nSecurity.Check = class {\n  constructor() {}\n\n  for() {\n    return this;\n  }\n\n  insert() {\n    return this;\n  }\n\n  update() {\n    return this;\n  }\n\n  remove() {\n    return this;\n  }\n\n  read() {\n    return this;\n  }\n\n  download() {\n    return this;\n  }\n\n  check() {\n    return true;\n  }\n\n  throw() {}\n}\n"]},"hash":"78fffb0898c895554a6f13c2cec1a7325711291e"}
