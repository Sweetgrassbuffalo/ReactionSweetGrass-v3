{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","createClass","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component","PropTypes"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"},{"kind":"named","imported":"PropTypes","local":"PropTypes"}]},{"source":"react-tether","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"TetherComponent"}]},{"source":"classnames","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"classnames"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/core/ui/client/components/tooltip/tooltip.js","filenameRelative":"/imports/plugins/core/ui/client/components/tooltip/tooltip.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/core/ui/client/components/tooltip/tooltip.js"],"names":["React","Component","PropTypes","TetherComponent","classnames","Tooltip","attachment","props","defaultProps","renderTooltip","tooltipContent","render","to","children","propTypes","string","node"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;IAAA;;OAA4C,WAA5C;;;;;;;;;;;;;;;;;;;;;;GACA,AAAO,AAAqB,AAC5B,AAAO,AAAgB,AAEvB;;IAAA,AAAM;;;;;;;;oBAcE,AAAC;6BAAD,AAAK,AAAU;UACb,AAAC,KAAK,MAAL,AAAW,gBAAZ;AAFJ,AAGE,AAAE,AAEL;;;;;qBAED,AAAO,AACR;;AAED,AAAS,AACP;;aACE,AAAC,AACC,AAAW,AAAC,AAAK,AACjB,AAAY,AACZ,AAAU,AAAC,AAAW,AACpB;AADoB,AACD,AACnB,AAAgB,AAChB;;;;;;sBAHoB,AAGI;AAN5B,AAGY,AAAC,AAKX,AAAY,AAAC,AAAC,AACZ;AADY,AACR,AACJ;;AAAY,2BAVhB,AAQc,AAAC,AAAC;;AAKd,AAAC;AACC,AAAC,AAAK,AAAM,+BAAZ,AACF;AAAA,AAAE,4BACF,AAAC;AAAD,AAAC,AAAK,oCAjBV,AAkBE,AAAE,AAEL;;;gBA5C6B;wBA+ChC,AAAQ,AAAY,AAClB;;;AADkB,AACN,AAAU,AACtB;;;AAAU,qBAFZ,AAAoB,AAEE,AACpB,AAAgB,AAAU;;aAG5B,AAAQ,AAAe,AACrB,AAAY;;AAGd,AAAe;;;;;;;AAlDb,AAAI,AAAa,AACf,AAAO,AAAK,AAAM,AAAc,AAAQ,AAAa,AACtD;;;;;2DAED;AAAgB,AACd,AAAI,AAAK,AAAM,AAAgB,AAC7B;;;EAbN,AAAsB,AAAU,AAE9B;;;;;;;;;;OANK,OAAS,WAAhB,AAA2B,QAA3B","file":"/imports/plugins/core/ui/client/components/tooltip/tooltip.js.map","sourcesContent":["import React, { Component, PropTypes } from \"react\";\nimport TetherComponent from \"react-tether\";\nimport classnames from \"classnames\";\n\nclass Tooltip extends Component {\n\n  /**\n   * attachment\n   * @description Return the attachment for the tooltip or the default\n   * @return {String} attachment\n   */\n  get attachment() {\n    return this.props.attachment || Tooltip.defaultProps.attachment;\n  }\n\n  renderTooltip() {\n    if (this.props.tooltipContent) {\n      return (\n        <div className=\"tooltip-content\">\n          {this.props.tooltipContent}\n        </div>\n      );\n    }\n\n    return null;\n  }\n\n  render() {\n    return (\n      <TetherComponent\n        attachment={this.attachment}\n        classPrefix=\"tooltip\"\n        className={classnames({\n          \"tooltip-element\": true,\n          \"tooltip-open\": true,\n          \"tooltip-theme-arrows\": true\n        })}\n        constraints={[{\n          to: \"scrollParent\",\n          attachment: \"together\"\n        }]}\n      >\n        <div>\n          {this.props.children}\n        </div>\n        {this.renderTooltip()}\n      </TetherComponent>\n    );\n  }\n}\n\nTooltip.propTypes = {\n  attachment: PropTypes.string,\n  children: PropTypes.node,\n  tooltipContent: PropTypes.node\n};\n\nTooltip.defaultProps = {\n  attachment: \"bottom center\"\n};\n\nexport default Tooltip;\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/core/ui/client/components/tooltip/tooltip.js.map","sourceFileName":"/imports/plugins/core/ui/client/components/tooltip/tooltip.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"tooltip"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0,\n    Component = void 0,\n    PropTypes = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  },\n  PropTypes: function (v) {\n    PropTypes = v;\n  }\n}, 0);\nvar TetherComponent = void 0;\nmodule.importSync(\"react-tether\", {\n  \"default\": function (v) {\n    TetherComponent = v;\n  }\n}, 1);\nvar classnames = void 0;\nmodule.importSync(\"classnames\", {\n  \"default\": function (v) {\n    classnames = v;\n  }\n}, 2);\n\nvar Tooltip = function (_Component) {\n  (0, _inherits3.default)(Tooltip, _Component);\n\n  function Tooltip() {\n    (0, _classCallCheck3.default)(this, Tooltip);\n    return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));\n  }\n\n  Tooltip.prototype.renderTooltip = function () {\n    function renderTooltip() {\n      if (this.props.tooltipContent) {\n        return React.createElement(\n          \"div\",\n          {\n            className: \"tooltip-content\"\n          },\n          this.props.tooltipContent\n        );\n      }\n\n      return null;\n    }\n\n    return renderTooltip;\n  }();\n\n  Tooltip.prototype.render = function () {\n    function render() {\n      return React.createElement(\n        TetherComponent,\n        {\n          attachment: this.attachment,\n          classPrefix: \"tooltip\",\n          className: classnames({\n            \"tooltip-element\": true,\n            \"tooltip-open\": true,\n            \"tooltip-theme-arrows\": true\n          }),\n          constraints: [{\n            to: \"scrollParent\",\n            attachment: \"together\"\n          }]\n        },\n        React.createElement(\n          \"div\",\n          null,\n          this.props.children\n        ),\n        this.renderTooltip()\n      );\n    }\n\n    return render;\n  }();\n\n  (0, _createClass3.default)(Tooltip, [{\n    key: \"attachment\",\n    /**\n     * attachment\n     * @description Return the attachment for the tooltip or the default\n     * @return {String} attachment\n     */get: function () {\n      return this.props.attachment || Tooltip.defaultProps.attachment;\n    }\n  }]);\n  return Tooltip;\n}(Component);\n\nTooltip.propTypes = {\n  attachment: PropTypes.string,\n  children: PropTypes.node,\n  tooltipContent: PropTypes.node\n};\nTooltip.defaultProps = {\n  attachment: \"bottom center\"\n};\nmodule.export(\"default\", exports.default = Tooltip);","map":{"version":3,"sources":["/imports/plugins/core/ui/client/components/tooltip/tooltip.js"],"names":["React","Component","PropTypes","TetherComponent","classnames","Tooltip","attachment","props","defaultProps","renderTooltip","tooltipContent","render","to","children","propTypes","string","node"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;IAAA;;OAA4C,WAA5C;;;;;;;;;;;;;;;;;;;;;;GACA,AAAO,AAAqB,AAC5B,AAAO,AAAgB,AAEvB;;IAAA,AAAM;;;;;;;;oBAcE,AAAC;6BAAD,AAAK,AAAU;UACb,AAAC,KAAK,MAAL,AAAW,gBAAZ;AAFJ,AAGE,AAAE,AAEL;;;;;qBAED,AAAO,AACR;;AAED,AAAS,AACP;;aACE,AAAC,AACC,AAAW,AAAC,AAAK,AACjB,AAAY,AACZ,AAAU,AAAC,AAAW,AACpB;AADoB,AACD,AACnB,AAAgB,AAChB;;;;;;sBAHoB,AAGI;AAN5B,AAGY,AAAC,AAKX,AAAY,AAAC,AAAC,AACZ;AADY,AACR,AACJ;;AAAY,2BAVhB,AAQc,AAAC,AAAC;;AAKd,AAAC;AACC,AAAC,AAAK,AAAM,+BAAZ,AACF;AAAA,AAAE,4BACF,AAAC;AAAD,AAAC,AAAK,oCAjBV,AAkBE,AAAE,AAEL;;;gBA5C6B;wBA+ChC,AAAQ,AAAY,AAClB;;;AADkB,AACN,AAAU,AACtB;;;AAAU,qBAFZ,AAAoB,AAEE,AACpB,AAAgB,AAAU;;aAG5B,AAAQ,AAAe,AACrB,AAAY;;AAGd,AAAe;;;;;;;AAlDb,AAAI,AAAa,AACf,AAAO,AAAK,AAAM,AAAc,AAAQ,AAAa,AACtD;;;;;2DAED;AAAgB,AACd,AAAI,AAAK,AAAM,AAAgB,AAC7B;;;EAbN,AAAsB,AAAU,AAE9B;;;;;;;;;;OANK,OAAS,WAAhB,AAA2B,QAA3B","file":"/imports/plugins/core/ui/client/components/tooltip/tooltip.js.map","sourcesContent":["import React, { Component, PropTypes } from \"react\";\nimport TetherComponent from \"react-tether\";\nimport classnames from \"classnames\";\n\nclass Tooltip extends Component {\n\n  /**\n   * attachment\n   * @description Return the attachment for the tooltip or the default\n   * @return {String} attachment\n   */\n  get attachment() {\n    return this.props.attachment || Tooltip.defaultProps.attachment;\n  }\n\n  renderTooltip() {\n    if (this.props.tooltipContent) {\n      return (\n        <div className=\"tooltip-content\">\n          {this.props.tooltipContent}\n        </div>\n      );\n    }\n\n    return null;\n  }\n\n  render() {\n    return (\n      <TetherComponent\n        attachment={this.attachment}\n        classPrefix=\"tooltip\"\n        className={classnames({\n          \"tooltip-element\": true,\n          \"tooltip-open\": true,\n          \"tooltip-theme-arrows\": true\n        })}\n        constraints={[{\n          to: \"scrollParent\",\n          attachment: \"together\"\n        }]}\n      >\n        <div>\n          {this.props.children}\n        </div>\n        {this.renderTooltip()}\n      </TetherComponent>\n    );\n  }\n}\n\nTooltip.propTypes = {\n  attachment: PropTypes.string,\n  children: PropTypes.node,\n  tooltipContent: PropTypes.node\n};\n\nTooltip.defaultProps = {\n  attachment: \"bottom center\"\n};\n\nexport default Tooltip;\n"]},"hash":"f2203217549d03e79eb18575e1a1f7d344648d1b"}
