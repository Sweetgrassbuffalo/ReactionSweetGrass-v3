{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"/imports/plugins/core/versions","imported":["Migrations"],"specifiers":[{"kind":"named","imported":"Migrations","local":"Migrations"}]},{"source":"/lib/collections","imported":["Packages"],"specifiers":[{"kind":"named","imported":"Packages","local":"Packages"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/core/versions/server/migrations/4_update_templates_priority.js","filenameRelative":"/imports/plugins/core/versions/server/migrations/4_update_templates_priority.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/core/versions/server/migrations/4_update_templates_priority.js"],"names":["Migrations","Packages","reactionPkgs","query","name","$in","layout","$type","add","version","up","packages","find","fetch","forEach","updateHandler","down","oldValue","newValue","pkg","changed","priority","update","_id","$set"],"mappings":"AAAA,IAAS;AAAT,OAA2B,WAA3B;;;;;;;;;;GACA,AAAS,AAAgB,AAEzB,AAAM,AAAe,AAAE;AACrB,IADmB,eAEnB,CAFF,AAAqB,AAGnB,AACA,AACA,AACA,AACA,AACA,AAEF;AAAM,AAAQ,AACZ,qBAAM,AAAE,qBAAF,AAAO,sBADD,AAEZ,kBAAQ,AAAE,mBAAF,AAAS,eAFL,AAES,sBAFvB,AAAc;AAKd,IAAW;;AAAI,AACJ;;;;IACT,AAAK,AACH,AAAM,AAAW,AAAS,AAAK,AAAO;;AAH1C,AAAe,AACb;AAGE,WAAS;AAJE;kBAMb;AAAO,wCACL;AAAM,qBAAW,AAAS,cAAK,GAA/B,AAAiB,AAAqB,AACtC;AAAA,AAAS,AAAQ,AAAc,AAAK,AACrC;;wCATH,AAAe;;AAYf,AAAS,AAAc,AAAU,AAAU,AACzC,AAAO,AAAU,AAAK;AATpB,AAAiB,AAAc,AAAG,AACnC;;AASC,AAAI,SAAU,cADM,AACpB,AAAqB;wBACrB;QAAA,AAAI,AAAO,UAAX,AAAoB,OAAD,AAAY,AAC7B;;QAAI,AAAC,OAAO,kBAAR,AAAoB,QAAxB,AAAwB,AAAO,AAAa,AAAU,AACpD;WAAO,OAAP,AAAkB,YAAlB,8BACA;eAAA,AAAU,WACX;kBAJH,AAKC;;AAED,AAAI,AAAS,AACX;;QAAS,SAAT,AAAgB,AAAI,AAAK,AACvB;AAAM;;AAAU,AAAI,sBADG,AACjB;;AAAE;AADV,AAGD;AACF;AAdD,AAeD","file":"/imports/plugins/core/versions/server/migrations/4_update_templates_priority.js.map","sourcesContent":["import { Migrations } from \"/imports/plugins/core/versions\";\nimport { Packages } from \"/lib/collections\";\n\nconst reactionPkgs = [ // reaction packages with layouts\n  \"reaction-accounts\",\n  \"reaction-checkout\",\n  \"reaction-dashboard\",\n  \"reaction-email\",\n  \"reaction-orders\",\n  \"reaction-ui\",\n  \"reaction-inventory\",\n  \"reaction-product-variant\"];\n\nconst query = {\n  name: { $in: reactionPkgs },\n  layout: { $type: 3 } // docs with layouts set\n};\n\nMigrations.add({\n  version: 4,\n  up() {\n    const packages = Packages.find(query).fetch();\n    packages.forEach(updateHandler(1, 999));\n  },\n  down() {\n    const packages = Packages.find(query).fetch();\n    packages.forEach(updateHandler(999, 1));\n  }\n});\n\nfunction updateHandler(oldValue, newValue) {\n  return function (pkg) {\n    let changed = false; // to track if updating is needed\n    pkg.layout.forEach((layout) => {\n      if (!layout.priority || layout.priority === oldValue) {\n        layout.priority = newValue;\n        changed = true;\n      }\n    });\n\n    if (changed) {\n      Packages.update(pkg._id, {\n        $set: { layout: pkg.layout }\n      });\n    }\n  };\n}\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/core/versions/server/migrations/4_update_templates_priority.js.map","sourceFileName":"/imports/plugins/core/versions/server/migrations/4_update_templates_priority.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"4_update_templates_priority"},"ignored":false,"code":"var Migrations = void 0;\nmodule.importSync(\"/imports/plugins/core/versions\", {\n  Migrations: function (v) {\n    Migrations = v;\n  }\n}, 0);\nvar Packages = void 0;\nmodule.importSync(\"/lib/collections\", {\n  Packages: function (v) {\n    Packages = v;\n  }\n}, 1);\nvar reactionPkgs = [// reaction packages with layouts\n\"reaction-accounts\", \"reaction-checkout\", \"reaction-dashboard\", \"reaction-email\", \"reaction-orders\", \"reaction-ui\", \"reaction-inventory\", \"reaction-product-variant\"];\nvar query = {\n  name: {\n    $in: reactionPkgs\n  },\n  layout: {\n    $type: 3\n  } // docs with layouts set\n\n};\nMigrations.add({\n  version: 4,\n  up: function () {\n    var packages = Packages.find(query).fetch();\n    packages.forEach(updateHandler(1, 999));\n  },\n  down: function () {\n    var packages = Packages.find(query).fetch();\n    packages.forEach(updateHandler(999, 1));\n  }\n});\n\nfunction updateHandler(oldValue, newValue) {\n  return function (pkg) {\n    var changed = false; // to track if updating is needed\n\n    pkg.layout.forEach(function (layout) {\n      if (!layout.priority || layout.priority === oldValue) {\n        layout.priority = newValue;\n        changed = true;\n      }\n    });\n\n    if (changed) {\n      Packages.update(pkg._id, {\n        $set: {\n          layout: pkg.layout\n        }\n      });\n    }\n  };\n}","map":{"version":3,"sources":["/imports/plugins/core/versions/server/migrations/4_update_templates_priority.js"],"names":["Migrations","Packages","reactionPkgs","query","name","$in","layout","$type","add","version","up","packages","find","fetch","forEach","updateHandler","down","oldValue","newValue","pkg","changed","priority","update","_id","$set"],"mappings":"AAAA,IAAS;AAAT,OAA2B,WAA3B;;;;;;;;;;GACA,AAAS,AAAgB,AAEzB,AAAM,AAAe,AAAE;AACrB,IADmB,eAEnB,CAFF,AAAqB,AAGnB,AACA,AACA,AACA,AACA,AACA,AAEF;AAAM,AAAQ,AACZ,qBAAM,AAAE,qBAAF,AAAO,sBADD,AAEZ,kBAAQ,AAAE,mBAAF,AAAS,eAFL,AAES,sBAFvB,AAAc;AAKd,IAAW;;AAAI,AACJ;;;;IACT,AAAK,AACH,AAAM,AAAW,AAAS,AAAK,AAAO;;AAH1C,AAAe,AACb;AAGE,WAAS;AAJE;kBAMb;AAAO,wCACL;AAAM,qBAAW,AAAS,cAAK,GAA/B,AAAiB,AAAqB,AACtC;AAAA,AAAS,AAAQ,AAAc,AAAK,AACrC;;wCATH,AAAe;;AAYf,AAAS,AAAc,AAAU,AAAU,AACzC,AAAO,AAAU,AAAK;AATpB,AAAiB,AAAc,AAAG,AACnC;;AASC,AAAI,SAAU,cADM,AACpB,AAAqB;wBACrB;QAAA,AAAI,AAAO,UAAX,AAAoB,OAAD,AAAY,AAC7B;;QAAI,AAAC,OAAO,kBAAR,AAAoB,QAAxB,AAAwB,AAAO,AAAa,AAAU,AACpD;WAAO,OAAP,AAAkB,YAAlB,8BACA;eAAA,AAAU,WACX;kBAJH,AAKC;;AAED,AAAI,AAAS,AACX;;QAAS,SAAT,AAAgB,AAAI,AAAK,AACvB;AAAM;;AAAU,AAAI,sBADG,AACjB;;AAAE;AADV,AAGD;AACF;AAdD,AAeD","file":"/imports/plugins/core/versions/server/migrations/4_update_templates_priority.js.map","sourcesContent":["import { Migrations } from \"/imports/plugins/core/versions\";\nimport { Packages } from \"/lib/collections\";\n\nconst reactionPkgs = [ // reaction packages with layouts\n  \"reaction-accounts\",\n  \"reaction-checkout\",\n  \"reaction-dashboard\",\n  \"reaction-email\",\n  \"reaction-orders\",\n  \"reaction-ui\",\n  \"reaction-inventory\",\n  \"reaction-product-variant\"];\n\nconst query = {\n  name: { $in: reactionPkgs },\n  layout: { $type: 3 } // docs with layouts set\n};\n\nMigrations.add({\n  version: 4,\n  up() {\n    const packages = Packages.find(query).fetch();\n    packages.forEach(updateHandler(1, 999));\n  },\n  down() {\n    const packages = Packages.find(query).fetch();\n    packages.forEach(updateHandler(999, 1));\n  }\n});\n\nfunction updateHandler(oldValue, newValue) {\n  return function (pkg) {\n    let changed = false; // to track if updating is needed\n    pkg.layout.forEach((layout) => {\n      if (!layout.priority || layout.priority === oldValue) {\n        layout.priority = newValue;\n        changed = true;\n      }\n    });\n\n    if (changed) {\n      Packages.update(pkg._id, {\n        $set: { layout: pkg.layout }\n      });\n    }\n  };\n}\n"]},"hash":"c9f6a91aa5785aaa057ea5c85790280298a1ad7f"}
