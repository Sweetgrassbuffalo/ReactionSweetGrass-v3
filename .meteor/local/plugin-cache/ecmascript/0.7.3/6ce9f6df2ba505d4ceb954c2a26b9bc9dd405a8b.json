{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"/client/api","imported":["i18next"],"specifiers":[{"kind":"named","imported":"i18next","local":"i18next"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/core/email/client/actions/logs.js","filenameRelative":"/imports/plugins/core/email/client/actions/logs.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/core/email/client/actions/logs.js"],"names":["i18next","resend","email","Meteor","call","_id","err","Alerts","toast","t","error","reason","data","to"],"mappings":"AAAA;;;;;GAEA,AAAe,AACb;OAHO,OAAT,WAAwB,QAAxB;AAQE,AAAO,AAAO,AACZ,AAAO,AAAK,AAAsB,AAAM,AAAK,AAAC,AAAQ,AACpD;;;;uBAAA,AAAI,AAAK,OACP;WAAO,KAAA,AAAO,AAAM,AAAQ,sBAAE,WAAV,UAAuB,KAAE;eAAF,AAAS,AAAI;AAAjD,AAAa,AAA+C;;UAAnE,AAAO,EACR;;;;;UACD;AAAO,AAAO,AAAM,AAAQ,AAAE,AAA6B,AAAE;AAXnE,AAAe,AAOX,AAIE,AAAO,AAAa,AAAuC,AAAS,AAAM,AAAK,AAAO,AACvF,AACF","file":"/imports/plugins/core/email/client/actions/logs.js.map","sourcesContent":["import { i18next } from \"/client/api\";\n\nexport default {\n  /**\n   * Restart a failed or cancelled email job\n   * @param {Object} email - the email job object\n   * @return {null} triggers an alert\n   */\n  resend(email) {\n    Meteor.call(\"emails/retryFailed\", email._id, (err) => {\n      if (err) {\n        return Alerts.toast(i18next.t(\"app.error\", { error: err.reason }), \"error\");\n      }\n      return Alerts.toast(i18next.t(\"mail.alerts.resendSuccess\", { email: email.data.to }), \"success\");\n    });\n  }\n};\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/core/email/client/actions/logs.js.map","sourceFileName":"/imports/plugins/core/email/client/actions/logs.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"logs"},"ignored":false,"code":"var i18next = void 0;\nmodule.importSync(\"/client/api\", {\n  i18next: function (v) {\n    i18next = v;\n  }\n}, 0);\nmodule.export(\"default\", exports.default = {\n  /**\n   * Restart a failed or cancelled email job\n   * @param {Object} email - the email job object\n   * @return {null} triggers an alert\n   */resend: function (email) {\n    Meteor.call(\"emails/retryFailed\", email._id, function (err) {\n      if (err) {\n        return Alerts.toast(i18next.t(\"app.error\", {\n          error: err.reason\n        }), \"error\");\n      }\n\n      return Alerts.toast(i18next.t(\"mail.alerts.resendSuccess\", {\n        email: email.data.to\n      }), \"success\");\n    });\n  }\n});","map":{"version":3,"sources":["/imports/plugins/core/email/client/actions/logs.js"],"names":["i18next","resend","email","Meteor","call","_id","err","Alerts","toast","t","error","reason","data","to"],"mappings":"AAAA;;;;;GAEA,AAAe,AACb;OAHO,OAAT,WAAwB,QAAxB;AAQE,AAAO,AAAO,AACZ,AAAO,AAAK,AAAsB,AAAM,AAAK,AAAC,AAAQ,AACpD;;;;uBAAA,AAAI,AAAK,OACP;WAAO,KAAA,AAAO,AAAM,AAAQ,sBAAE,WAAV,UAAuB,KAAE;eAAF,AAAS,AAAI;AAAjD,AAAa,AAA+C;;UAAnE,AAAO,EACR;;;;;UACD;AAAO,AAAO,AAAM,AAAQ,AAAE,AAA6B,AAAE;AAXnE,AAAe,AAOX,AAIE,AAAO,AAAa,AAAuC,AAAS,AAAM,AAAK,AAAO,AACvF,AACF","file":"/imports/plugins/core/email/client/actions/logs.js.map","sourcesContent":["import { i18next } from \"/client/api\";\n\nexport default {\n  /**\n   * Restart a failed or cancelled email job\n   * @param {Object} email - the email job object\n   * @return {null} triggers an alert\n   */\n  resend(email) {\n    Meteor.call(\"emails/retryFailed\", email._id, (err) => {\n      if (err) {\n        return Alerts.toast(i18next.t(\"app.error\", { error: err.reason }), \"error\");\n      }\n      return Alerts.toast(i18next.t(\"mail.alerts.resendSuccess\", { email: email.data.to }), \"success\");\n    });\n  }\n};\n"]},"hash":"6ce9f6df2ba505d4ceb954c2a26b9bc9dd405a8b"}
