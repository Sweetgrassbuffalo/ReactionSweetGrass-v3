{"metadata":{"usedHelpers":["typeof","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"/lib/collections","imported":["Translations"],"specifiers":[{"kind":"named","imported":"Translations","local":"Translations"}]},{"source":"/server/api","imported":["Reaction"],"specifiers":[{"kind":"named","imported":"Reaction","local":"Reaction"}]},{"source":"/server/startup/i18n","imported":["loadCoreTranslations"],"specifiers":[{"kind":"named","imported":"loadCoreTranslations","local":"loadCoreTranslations"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/server/methods/i18n.js","filenameRelative":"/server/methods/i18n.js","inputSourceMap":{"version":3,"sources":["/server/methods/i18n.js"],"names":["Translations","Reaction","loadCoreTranslations","Meteor","methods","hasAdminAccess","Error","shopId","getShopId","remove","Import","flush","lng","namespace","key","message","check","Match","OneOf","String","Array","i18n","tran","setTran","update"],"mappings":";;;;;;AAAA,IAAS;AAAT,OAA6B,WAA7B;;;;;;;;;;;;;;;;GACA,AAAS,AAAgB,AACzB,AAAS,AAA4B,AAErC,A;AAGA,AAAO,AAAQ,AACb;;;AAKA,AAA0B,AAAY,AACpC,AAAI,AAAC,AAAS,AAAkB,AAC9B,AAAM,AAAI,AAAO,AAAM,AAAK,AAC7B;;;;;oCACD;AAAM,gBAAS,OAAS,WAAxB,AAAe,AACf;AAAA,AAAa,AAAO,AAClB;;QAAQ,kBADU;AAApB;cAXW,AAeX,AAAS,AAAO,AACjB;AAFC;AAGF;;;AASA,AAAuB,AAAU,AAAK,AAAW,AAAK,AAAS,AAC7D,AAAM,AAAK,AAAM,AAAM,AAAQ,AAC/B,AAAM,AAAW,AACjB;;;;;;;;KAAA,AAAM,AAAK;UACL,KAAN,AAAe,MAAf,MAJ6D,AAK7D;qBACA;AAAI,eAAJ,AAAW;mBACX,QAHA,CAGA,AAAI,AAAO,AAAQ,AAAU,AAC3B;;QAAO,OAAP,AAAO,AAAI,AACZ;;;iBAED;AAAA,AAAI,AAAC,AAAS,AAAkB,AAC9B,AAAM,AAAI,AAAO,AAAM,AAAK,AAC7B;;;kCACD;AAAM,AAAQ;;QACD,AAAK,gCADlB,AAEe,AAAS,AAAY,8CAGpC,AAAM,AAAW,AAAe,AAAU,AAAG,AAAI,AAAM,AAAQ,AAC/D,AAAa,AAAO,AAAE;wEAAF;AAApB,AAA8B;;;AAAE;;AA9CpC,AAAe,AA8CX,AAA8B,AAC/B","file":"/server/methods/i18n.js.map","sourcesContent":["import { Translations } from \"/lib/collections\";\nimport { Reaction } from \"/server/api\";\nimport { loadCoreTranslations } from \"/server/startup/i18n\";\n\n/**\n * Reaction Shop Methods\n */\nMeteor.methods({\n  /**\n   * i18n/flushTranslations\n   * @summary Helper method to remove all translations, and reload from jsonFiles\n   * @return {undefined}\n   */\n  \"i18n/flushTranslations\": function () {\n    if (!Reaction.hasAdminAccess()) {\n      throw new Meteor.Error(403, \"Access Denied\");\n    }\n    const shopId = Reaction.getShopId();\n    Translations.remove({\n      shopId: shopId\n    });\n    loadCoreTranslations();\n    Reaction.Import.flush();\n  },\n  /**\n   * i18n/addTranslation\n   * @param {String | Array} lng - language\n   * @param {String} namespace - namespace\n   * @param {String} key - i18n key\n   * @param {String} message - i18n message\n   * @summary Helper method to add translations\n   * @return {String} insert result\n   */\n  \"i18n/addTranslation\": function (lng, namespace, key, message) {\n    check(lng, Match.OneOf(String, Array));\n    check(namespace, String);\n    check(key, String);\n    check(message, String);\n    // string or first langauge\n    let i18n = lng;\n    if (typeof lng === \"object\") {\n      i18n = lng[0];\n    }\n\n    if (!Reaction.hasAdminAccess()) {\n      throw new Meteor.Error(403, \"Access Denied\");\n    }\n    const tran = `\n      \"i18n\": \"${i18n}\",\n      \"shopId\": \"${Reaction.getShopId()}\"\n    `;\n\n    const setTran = `\"translation.${namespace}.${key}\": \"${message}\"`;\n    Translations.update({ tran }, { setTran });\n  }\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/server/methods/i18n.js.map","sourceFileName":"/server/methods/i18n.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"i18n"},"ignored":false,"code":"var _typeof2 = require(\"babel-runtime/helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar Translations = void 0;\nmodule.importSync(\"/lib/collections\", {\n  Translations: function (v) {\n    Translations = v;\n  }\n}, 0);\nvar Reaction = void 0;\nmodule.importSync(\"/server/api\", {\n  Reaction: function (v) {\n    Reaction = v;\n  }\n}, 1);\nvar loadCoreTranslations = void 0;\nmodule.importSync(\"/server/startup/i18n\", {\n  loadCoreTranslations: function (v) {\n    loadCoreTranslations = v;\n  }\n}, 2);\n/**\n * Reaction Shop Methods\n */Meteor.methods({\n  /**\n   * i18n/flushTranslations\n   * @summary Helper method to remove all translations, and reload from jsonFiles\n   * @return {undefined}\n   */\"i18n/flushTranslations\": function () {\n    if (!Reaction.hasAdminAccess()) {\n      throw new Meteor.Error(403, \"Access Denied\");\n    }\n\n    var shopId = Reaction.getShopId();\n    Translations.remove({\n      shopId: shopId\n    });\n    loadCoreTranslations();\n    Reaction.Import.flush();\n  },\n  /**\n   * i18n/addTranslation\n   * @param {String | Array} lng - language\n   * @param {String} namespace - namespace\n   * @param {String} key - i18n key\n   * @param {String} message - i18n message\n   * @summary Helper method to add translations\n   * @return {String} insert result\n   */\"i18n/addTranslation\": function (lng, namespace, key, message) {\n    check(lng, Match.OneOf(String, Array));\n    check(namespace, String);\n    check(key, String);\n    check(message, String); // string or first langauge\n\n    var i18n = lng;\n\n    if ((typeof lng === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(lng)) === \"object\") {\n      i18n = lng[0];\n    }\n\n    if (!Reaction.hasAdminAccess()) {\n      throw new Meteor.Error(403, \"Access Denied\");\n    }\n\n    var tran = \"\\n      \\\"i18n\\\": \\\"\" + i18n + \"\\\",\\n      \\\"shopId\\\": \\\"\" + Reaction.getShopId() + \"\\\"\\n    \";\n    var setTran = \"\\\"translation.\" + namespace + \".\" + key + \"\\\": \\\"\" + message + \"\\\"\";\n    Translations.update({\n      tran: tran\n    }, {\n      setTran: setTran\n    });\n  }\n});","map":{"version":3,"sources":["/server/methods/i18n.js"],"names":["Translations","Reaction","loadCoreTranslations","Meteor","methods","hasAdminAccess","Error","shopId","getShopId","remove","Import","flush","lng","namespace","key","message","check","Match","OneOf","String","Array","i18n","tran","setTran","update"],"mappings":";;;;;;AAAA,IAAS;AAAT,OAA6B,WAA7B;;;;;;;;;;;;;;;;GACA,AAAS,AAAgB,AACzB,AAAS,AAA4B,AAErC,A;AAGA,AAAO,AAAQ,AACb;;;AAKA,AAA0B,AAAY,AACpC,AAAI,AAAC,AAAS,AAAkB,AAC9B,AAAM,AAAI,AAAO,AAAM,AAAK,AAC7B;;;;;oCACD;AAAM,gBAAS,OAAS,WAAxB,AAAe,AACf;AAAA,AAAa,AAAO,AAClB;;QAAQ,kBADU;AAApB;cAXW,AAeX,AAAS,AAAO,AACjB;AAFC;AAGF;;;AASA,AAAuB,AAAU,AAAK,AAAW,AAAK,AAAS,AAC7D,AAAM,AAAK,AAAM,AAAM,AAAQ,AAC/B,AAAM,AAAW,AACjB;;;;;;;;KAAA,AAAM,AAAK;UACL,KAAN,AAAe,MAAf,MAJ6D,AAK7D;qBACA;AAAI,eAAJ,AAAW;mBACX,QAHA,CAGA,AAAI,AAAO,AAAQ,AAAU,AAC3B;;QAAO,OAAP,AAAO,AAAI,AACZ;;;iBAED;AAAA,AAAI,AAAC,AAAS,AAAkB,AAC9B,AAAM,AAAI,AAAO,AAAM,AAAK,AAC7B;;;kCACD;AAAM,AAAQ;;QACD,AAAK,gCADlB,AAEe,AAAS,AAAY,8CAGpC,AAAM,AAAW,AAAe,AAAU,AAAG,AAAI,AAAM,AAAQ,AAC/D,AAAa,AAAO,AAAE;wEAAF;AAApB,AAA8B;;;AAAE;;AA9CpC,AAAe,AA8CX,AAA8B,AAC/B","file":"/server/methods/i18n.js.map","sourcesContent":["import { Translations } from \"/lib/collections\";\nimport { Reaction } from \"/server/api\";\nimport { loadCoreTranslations } from \"/server/startup/i18n\";\n\n/**\n * Reaction Shop Methods\n */\nMeteor.methods({\n  /**\n   * i18n/flushTranslations\n   * @summary Helper method to remove all translations, and reload from jsonFiles\n   * @return {undefined}\n   */\n  \"i18n/flushTranslations\": function () {\n    if (!Reaction.hasAdminAccess()) {\n      throw new Meteor.Error(403, \"Access Denied\");\n    }\n    const shopId = Reaction.getShopId();\n    Translations.remove({\n      shopId: shopId\n    });\n    loadCoreTranslations();\n    Reaction.Import.flush();\n  },\n  /**\n   * i18n/addTranslation\n   * @param {String | Array} lng - language\n   * @param {String} namespace - namespace\n   * @param {String} key - i18n key\n   * @param {String} message - i18n message\n   * @summary Helper method to add translations\n   * @return {String} insert result\n   */\n  \"i18n/addTranslation\": function (lng, namespace, key, message) {\n    check(lng, Match.OneOf(String, Array));\n    check(namespace, String);\n    check(key, String);\n    check(message, String);\n    // string or first langauge\n    let i18n = lng;\n    if (typeof lng === \"object\") {\n      i18n = lng[0];\n    }\n\n    if (!Reaction.hasAdminAccess()) {\n      throw new Meteor.Error(403, \"Access Denied\");\n    }\n    const tran = `\n      \"i18n\": \"${i18n}\",\n      \"shopId\": \"${Reaction.getShopId()}\"\n    `;\n\n    const setTran = `\"translation.${namespace}.${key}\": \"${message}\"`;\n    Translations.update({ tran }, { setTran });\n  }\n});\n"]},"hash":"216dfc2607423c37a20e4d9ef1a3e7f5d4c67cb3"}
