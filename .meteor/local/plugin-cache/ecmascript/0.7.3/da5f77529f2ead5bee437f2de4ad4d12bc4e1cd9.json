{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"/imports/plugins/core/taxes/lib/collections","imported":["TaxCodes"],"specifiers":[{"kind":"named","imported":"TaxCodes","local":"TaxCodes"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/included/product-variant/server/methods/populateTaxCodes.js","filenameRelative":"/imports/plugins/included/product-variant/server/methods/populateTaxCodes.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/included/product-variant/server/methods/populateTaxCodes.js"],"names":["Meteor","TaxCodes","taxCodes","populateTaxCodes","shopId","code","providerName","check","String","Object","insert","id","taxCode","taxCodeProvider","ssuta","isSSTCertified","title","label","description","parent","parentTaxCode","children","err","Error","methods"],"mappings":"AAAA,IAAS;AAAT,OAAuB,WAAvB;;;;;;;;;;GACA,A,AAAA,AAAS,AAAgB,AAEzB,AAAM,AAAW,AAEjB;mBAQA,AAAS,AAAmB,AAAU,AAAQ,AAAM,AAAc,AAChE,AAAM,AAAQ;;;;;;;;;AACd,AAAM,SAAN,AAAY,yDACZ;QAAM,QAAN,AAAoB;cAEpB;AAAI,sBACF,AAAS,AAAO,AACd;;MADc,AACV,AAAK,AACT;aAAQ;eAFM,AAGL,AAAK,AAAW,AAAK,AAC9B;cAJc,AAIG,AACjB;AAAO,eAAK,gBALE,KAMd;AAAO,AAAK,uBANE,AAMP,AAAc,AACrB;aAAO,KAPO,AAOP,AAAK,AAAe,AAAK,AAChC;aAAQ,KAAK,SARC,AAQN,AAAsB,AAAK,AACnC;aAAU,KAAA,AAAK,eAAY,KAT7B,AAAgB;yCADlB,AAYC,AAAC;AAAA,AAAO,gBAAK,iBACZ,AAAM,AAAI,AAAO,AAAM,AAAwC,AAChE;AAbiB,AAGd;gBATN,AAoBC;;AAED;AAAA,AAAO,AAAQ,AACb,AAAwB,AAAS;;AADnC,AAAe","file":"/imports/plugins/included/product-variant/server/methods/populateTaxCodes.js.map","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport { TaxCodes } from \"/imports/plugins/core/taxes/lib/collections\";\n\nconst taxCodes = {};\n\n/*\n * taxes/insertTaxCodes\n * @summary populate TaxCodes collection\n * @param {String} shopID - current shop's id\n * @param {Object} code - tax code object to insert into TaxCodes collection\n * @param {String} providerName - tax code provider\n * @return {} undefined\n */\ntaxCodes.populateTaxCodes = function (shopId, code, providerName) {\n  check(shopId, String);\n  check(code, Object);\n  check(providerName, String);\n\n  try {\n    TaxCodes.insert({\n      id: code.id,\n      shopId: shopId,\n      taxCode: code.taxCode || code.id,\n      taxCodeProvider: providerName,\n      ssuta: code.isSSTCertified,\n      title: code.title || \"\",\n      label: code.description || code.label,\n      parent: code.parentTaxCode || code.parent,\n      children: code.children || []\n    });\n  } catch (err) {\n    throw new Meteor.Error(\"Error populating TaxCodes collection\", err);\n  }\n};\n\nMeteor.methods({\n  \"taxes/insertTaxCodes\": taxCodes.populateTaxCodes\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/included/product-variant/server/methods/populateTaxCodes.js.map","sourceFileName":"/imports/plugins/included/product-variant/server/methods/populateTaxCodes.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"populateTaxCodes"},"ignored":false,"code":"var Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar TaxCodes = void 0;\nmodule.importSync(\"/imports/plugins/core/taxes/lib/collections\", {\n  TaxCodes: function (v) {\n    TaxCodes = v;\n  }\n}, 1);\nvar taxCodes = {}; /*\n                    * taxes/insertTaxCodes\n                    * @summary populate TaxCodes collection\n                    * @param {String} shopID - current shop's id\n                    * @param {Object} code - tax code object to insert into TaxCodes collection\n                    * @param {String} providerName - tax code provider\n                    * @return {} undefined\n                    */\n\ntaxCodes.populateTaxCodes = function (shopId, code, providerName) {\n  check(shopId, String);\n  check(code, Object);\n  check(providerName, String);\n\n  try {\n    TaxCodes.insert({\n      id: code.id,\n      shopId: shopId,\n      taxCode: code.taxCode || code.id,\n      taxCodeProvider: providerName,\n      ssuta: code.isSSTCertified,\n      title: code.title || \"\",\n      label: code.description || code.label,\n      parent: code.parentTaxCode || code.parent,\n      children: code.children || []\n    });\n  } catch (err) {\n    throw new Meteor.Error(\"Error populating TaxCodes collection\", err);\n  }\n};\n\nMeteor.methods({\n  \"taxes/insertTaxCodes\": taxCodes.populateTaxCodes\n});","map":{"version":3,"sources":["/imports/plugins/included/product-variant/server/methods/populateTaxCodes.js"],"names":["Meteor","TaxCodes","taxCodes","populateTaxCodes","shopId","code","providerName","check","String","Object","insert","id","taxCode","taxCodeProvider","ssuta","isSSTCertified","title","label","description","parent","parentTaxCode","children","err","Error","methods"],"mappings":"AAAA,IAAS;AAAT,OAAuB,WAAvB;;;;;;;;;;GACA,A,AAAA,AAAS,AAAgB,AAEzB,AAAM,AAAW,AAEjB;mBAQA,AAAS,AAAmB,AAAU,AAAQ,AAAM,AAAc,AAChE,AAAM,AAAQ;;;;;;;;;AACd,AAAM,SAAN,AAAY,yDACZ;QAAM,QAAN,AAAoB;cAEpB;AAAI,sBACF,AAAS,AAAO,AACd;;MADc,AACV,AAAK,AACT;aAAQ;eAFM,AAGL,AAAK,AAAW,AAAK,AAC9B;cAJc,AAIG,AACjB;AAAO,eAAK,gBALE,KAMd;AAAO,AAAK,uBANE,AAMP,AAAc,AACrB;aAAO,KAPO,AAOP,AAAK,AAAe,AAAK,AAChC;aAAQ,KAAK,SARC,AAQN,AAAsB,AAAK,AACnC;aAAU,KAAA,AAAK,eAAY,KAT7B,AAAgB;yCADlB,AAYC,AAAC;AAAA,AAAO,gBAAK,iBACZ,AAAM,AAAI,AAAO,AAAM,AAAwC,AAChE;AAbiB,AAGd;gBATN,AAoBC;;AAED;AAAA,AAAO,AAAQ,AACb,AAAwB,AAAS;;AADnC,AAAe","file":"/imports/plugins/included/product-variant/server/methods/populateTaxCodes.js.map","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport { TaxCodes } from \"/imports/plugins/core/taxes/lib/collections\";\n\nconst taxCodes = {};\n\n/*\n * taxes/insertTaxCodes\n * @summary populate TaxCodes collection\n * @param {String} shopID - current shop's id\n * @param {Object} code - tax code object to insert into TaxCodes collection\n * @param {String} providerName - tax code provider\n * @return {} undefined\n */\ntaxCodes.populateTaxCodes = function (shopId, code, providerName) {\n  check(shopId, String);\n  check(code, Object);\n  check(providerName, String);\n\n  try {\n    TaxCodes.insert({\n      id: code.id,\n      shopId: shopId,\n      taxCode: code.taxCode || code.id,\n      taxCodeProvider: providerName,\n      ssuta: code.isSSTCertified,\n      title: code.title || \"\",\n      label: code.description || code.label,\n      parent: code.parentTaxCode || code.parent,\n      children: code.children || []\n    });\n  } catch (err) {\n    throw new Meteor.Error(\"Error populating TaxCodes collection\", err);\n  }\n};\n\nMeteor.methods({\n  \"taxes/insertTaxCodes\": taxCodes.populateTaxCodes\n});\n"]},"hash":"da5f77529f2ead5bee437f2de4ad4d12bc4e1cd9"}
