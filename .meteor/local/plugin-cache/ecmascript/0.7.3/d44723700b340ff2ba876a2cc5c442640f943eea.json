{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/check","imported":["Match","check"],"specifiers":[{"kind":"named","imported":"Match","local":"Match"},{"kind":"named","imported":"check","local":"check"}]},{"source":"meteor/tmeasday:publish-counts","imported":["Counts"],"specifiers":[{"kind":"named","imported":"Counts","local":"Counts"}]},{"source":"../../lib/collections","imported":["Taxes","TaxCodes"],"specifiers":[{"kind":"named","imported":"Taxes","local":"Taxes"},{"kind":"named","imported":"TaxCodes","local":"TaxCodes"}]},{"source":"/server/api","imported":["Reaction"],"specifiers":[{"kind":"named","imported":"Reaction","local":"Reaction"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/core/taxes/server/publications/taxes.js","filenameRelative":"/imports/plugins/core/taxes/server/publications/taxes.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/core/taxes/server/publications/taxes.js"],"names":["Meteor","Match","check","Counts","Taxes","TaxCodes","Reaction","Security","permit","collections","ifHasRole","role","group","getShopId","publish","query","options","Optional","Object","shopId","ready","select","find","params"],"mappings":"AAAA,IAAS;AAAT,OAAuB,WAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GACA,AAAS,AAAO,AAAa,AAC7B,AAAS,AAAc,A,AAAvB,AACA,AAAS,AAAO,AAAgB,AAChC,AAAS,AAAgB,AAEzB,AACA;AACA;AACA;AACA;;AACA,AAAS,AAAO,AAAC,AAAU,AAAU,AAAW,AAAY,AAC1D,AACA,AACC,AAAU;AACX,AAAM,SADK,mDAEX,CALF,AAGa,AAEJ,AAAS,OAElB,A;QAGA;AAAO,SAAP,AAAe,SAAf,AAAwB,AAAU,AAAO,AAAS,AAChD,AAAM,AAAO,AAAM,AAAS;IADoB,AAEhD,AAAM,AAAS,AAAM,AAAS,AAE9B,AACA,AAAM,AAAS,AAAS;;;;AACpB,AAAC,QAAL,OAAa,eACX;QAAO,AAAK,SAAL,MAAP,SACD,UAED;;MAAM,SAAS,SAViC,AAUhD,AAAwB,AACxB,AACA;;eACA;;AAbgD,AAchD,AAAO,AAAS,AAEhB,AACA;;4BACA;AAAA,AAAO,AAAQ,AAAM,AAAe,AAAM,AACxC,AACA,AAGF;AAvBF,AAuBE,AAAO,AAAM,AACX,AACA,AAEH;;A,AAED,yBAvBE,CA0BF;AAAA,AAAO,AAAQ,AAAY,AAAU,AAAO,AAAQ,AAClD;;AAAM,SAAN,AAAa,QAAM,MAAnB,AAAa,AAAe,qBAC5B,KAFkD,AAElD,AAAM,AAAQ,AAAM,AAAS,AAE7B,QACA,AAAM,AAAS,AAAS,AACxB;AAAI,AAAC,SAAL,MAAa,AACX,KAAA,AAAO,AAAK,AACb,QAED;AAVkD,AAUlD,AAAM,AAAS,AAAS,AAExB,AACA,IAbkD,AAclD,AAEA,AAAM,AAAU,AAAU,AAC1B;;;AACA;8BAEA;+BACA,AACA,UACA;;wBACA;;eACA;gBAEA;AACA;;wBACA,AAAO,AAAQ,AAAM,AAAiB,AAAS,AAC7C,AACA,AAGF,GAfA,CAnBF,AAkCE,AAAO,AAAS,AACd,AACA,AAEH","file":"/imports/plugins/core/taxes/server/publications/taxes.js.map","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport { Match, check } from \"meteor/check\";\nimport { Counts } from \"meteor/tmeasday:publish-counts\";\nimport { Taxes, TaxCodes } from \"../../lib/collections\";\nimport { Reaction } from \"/server/api\";\n\n//\n// Security\n// import \"/server/security/collections\";\n// Security definitions\n//\nSecurity.permit([\"insert\", \"update\", \"remove\"]).collections([\n  Taxes,\n  TaxCodes\n]).ifHasRole({\n  role: \"admin\",\n  group: Reaction.getShopId()\n});\n/**\n * taxes\n */\nMeteor.publish(\"Taxes\", function (query, options) {\n  check(query, Match.Optional(Object));\n  check(options, Match.Optional(Object));\n\n  // check shopId\n  const shopId = Reaction.getShopId();\n  if (!shopId) {\n    return this.ready();\n  }\n\n  const select = query || {};\n  // append shopId to query\n  // taxes could be shared\n  // if you disregarded shopId\n  select.shopId = shopId;\n\n  // appends a count to the collection\n  // we're doing this for use with griddleTable\n  Counts.publish(this, \"taxes-count\", Taxes.find(\n    select,\n    options\n  ));\n\n  return Taxes.find(\n    select,\n    options\n  );\n});\n\n/**\n * tax codes\n */\nMeteor.publish(\"TaxCodes\", function (query, params) {\n  check(query, Match.Optional(Object));\n  check(params, Match.Optional(Object));\n\n  // check shopId\n  const shopId = Reaction.getShopId();\n  if (!shopId) {\n    return this.ready();\n  }\n\n  const select = query || {};\n\n  // for now, not adding shopId to query\n  // taxCodes are reasonable shared??\n  //  select.shopId = shopId;\n\n  const options = params || {};\n  // const options = params || {\n  //   fields: {\n  //     id: 1,\n  //     label: 1\n  //   },\n  //   sort: {\n  //     label: 1\n  //   }\n  // };\n\n  // appends a count to the collection\n  // we're doing this for use with griddleTable\n  Counts.publish(this, \"taxcode-count\", TaxCodes.find(\n    select,\n    options\n  ));\n\n  return TaxCodes.find(\n    select,\n    options\n  );\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/core/taxes/server/publications/taxes.js.map","sourceFileName":"/imports/plugins/core/taxes/server/publications/taxes.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"taxes"},"ignored":false,"code":"var Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Match = void 0,\n    check = void 0;\nmodule.importSync(\"meteor/check\", {\n  Match: function (v) {\n    Match = v;\n  },\n  check: function (v) {\n    check = v;\n  }\n}, 1);\nvar Counts = void 0;\nmodule.importSync(\"meteor/tmeasday:publish-counts\", {\n  Counts: function (v) {\n    Counts = v;\n  }\n}, 2);\nvar Taxes = void 0,\n    TaxCodes = void 0;\nmodule.importSync(\"../../lib/collections\", {\n  Taxes: function (v) {\n    Taxes = v;\n  },\n  TaxCodes: function (v) {\n    TaxCodes = v;\n  }\n}, 3);\nvar Reaction = void 0;\nmodule.importSync(\"/server/api\", {\n  Reaction: function (v) {\n    Reaction = v;\n  }\n}, 4);\n//\n// Security\n// import \"/server/security/collections\";\n// Security definitions\n//\nSecurity.permit([\"insert\", \"update\", \"remove\"]).collections([Taxes, TaxCodes]).ifHasRole({\n  role: \"admin\",\n  group: Reaction.getShopId()\n}); /**\n     * taxes\n     */\nMeteor.publish(\"Taxes\", function (query, options) {\n  check(query, Match.Optional(Object));\n  check(options, Match.Optional(Object)); // check shopId\n\n  var shopId = Reaction.getShopId();\n\n  if (!shopId) {\n    return this.ready();\n  }\n\n  var select = query || {}; // append shopId to query\n  // taxes could be shared\n  // if you disregarded shopId\n\n  select.shopId = shopId; // appends a count to the collection\n  // we're doing this for use with griddleTable\n\n  Counts.publish(this, \"taxes-count\", Taxes.find(select, options));\n  return Taxes.find(select, options);\n}); /**\n     * tax codes\n     */\nMeteor.publish(\"TaxCodes\", function (query, params) {\n  check(query, Match.Optional(Object));\n  check(params, Match.Optional(Object)); // check shopId\n\n  var shopId = Reaction.getShopId();\n\n  if (!shopId) {\n    return this.ready();\n  }\n\n  var select = query || {}; // for now, not adding shopId to query\n  // taxCodes are reasonable shared??\n  //  select.shopId = shopId;\n\n  var options = params || {}; // const options = params || {\n  //   fields: {\n  //     id: 1,\n  //     label: 1\n  //   },\n  //   sort: {\n  //     label: 1\n  //   }\n  // };\n  // appends a count to the collection\n  // we're doing this for use with griddleTable\n\n  Counts.publish(this, \"taxcode-count\", TaxCodes.find(select, options));\n  return TaxCodes.find(select, options);\n});","map":{"version":3,"sources":["/imports/plugins/core/taxes/server/publications/taxes.js"],"names":["Meteor","Match","check","Counts","Taxes","TaxCodes","Reaction","Security","permit","collections","ifHasRole","role","group","getShopId","publish","query","options","Optional","Object","shopId","ready","select","find","params"],"mappings":"AAAA,IAAS;AAAT,OAAuB,WAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GACA,AAAS,AAAO,AAAa,AAC7B,AAAS,AAAc,A,AAAvB,AACA,AAAS,AAAO,AAAgB,AAChC,AAAS,AAAgB,AAEzB,AACA;AACA;AACA;AACA;;AACA,AAAS,AAAO,AAAC,AAAU,AAAU,AAAW,AAAY,AAC1D,AACA,AACC,AAAU;AACX,AAAM,SADK,mDAEX,CALF,AAGa,AAEJ,AAAS,OAElB,A;QAGA;AAAO,SAAP,AAAe,SAAf,AAAwB,AAAU,AAAO,AAAS,AAChD,AAAM,AAAO,AAAM,AAAS;IADoB,AAEhD,AAAM,AAAS,AAAM,AAAS,AAE9B,AACA,AAAM,AAAS,AAAS;;;;AACpB,AAAC,QAAL,OAAa,eACX;QAAO,AAAK,SAAL,MAAP,SACD,UAED;;MAAM,SAAS,SAViC,AAUhD,AAAwB,AACxB,AACA;;eACA;;AAbgD,AAchD,AAAO,AAAS,AAEhB,AACA;;4BACA;AAAA,AAAO,AAAQ,AAAM,AAAe,AAAM,AACxC,AACA,AAGF;AAvBF,AAuBE,AAAO,AAAM,AACX,AACA,AAEH;;A,AAED,yBAvBE,CA0BF;AAAA,AAAO,AAAQ,AAAY,AAAU,AAAO,AAAQ,AAClD;;AAAM,SAAN,AAAa,QAAM,MAAnB,AAAa,AAAe,qBAC5B,KAFkD,AAElD,AAAM,AAAQ,AAAM,AAAS,AAE7B,QACA,AAAM,AAAS,AAAS,AACxB;AAAI,AAAC,SAAL,MAAa,AACX,KAAA,AAAO,AAAK,AACb,QAED;AAVkD,AAUlD,AAAM,AAAS,AAAS,AAExB,AACA,IAbkD,AAclD,AAEA,AAAM,AAAU,AAAU,AAC1B;;;AACA;8BAEA;+BACA,AACA,UACA;;wBACA;;eACA;gBAEA;AACA;;wBACA,AAAO,AAAQ,AAAM,AAAiB,AAAS,AAC7C,AACA,AAGF,GAfA,CAnBF,AAkCE,AAAO,AAAS,AACd,AACA,AAEH","file":"/imports/plugins/core/taxes/server/publications/taxes.js.map","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport { Match, check } from \"meteor/check\";\nimport { Counts } from \"meteor/tmeasday:publish-counts\";\nimport { Taxes, TaxCodes } from \"../../lib/collections\";\nimport { Reaction } from \"/server/api\";\n\n//\n// Security\n// import \"/server/security/collections\";\n// Security definitions\n//\nSecurity.permit([\"insert\", \"update\", \"remove\"]).collections([\n  Taxes,\n  TaxCodes\n]).ifHasRole({\n  role: \"admin\",\n  group: Reaction.getShopId()\n});\n/**\n * taxes\n */\nMeteor.publish(\"Taxes\", function (query, options) {\n  check(query, Match.Optional(Object));\n  check(options, Match.Optional(Object));\n\n  // check shopId\n  const shopId = Reaction.getShopId();\n  if (!shopId) {\n    return this.ready();\n  }\n\n  const select = query || {};\n  // append shopId to query\n  // taxes could be shared\n  // if you disregarded shopId\n  select.shopId = shopId;\n\n  // appends a count to the collection\n  // we're doing this for use with griddleTable\n  Counts.publish(this, \"taxes-count\", Taxes.find(\n    select,\n    options\n  ));\n\n  return Taxes.find(\n    select,\n    options\n  );\n});\n\n/**\n * tax codes\n */\nMeteor.publish(\"TaxCodes\", function (query, params) {\n  check(query, Match.Optional(Object));\n  check(params, Match.Optional(Object));\n\n  // check shopId\n  const shopId = Reaction.getShopId();\n  if (!shopId) {\n    return this.ready();\n  }\n\n  const select = query || {};\n\n  // for now, not adding shopId to query\n  // taxCodes are reasonable shared??\n  //  select.shopId = shopId;\n\n  const options = params || {};\n  // const options = params || {\n  //   fields: {\n  //     id: 1,\n  //     label: 1\n  //   },\n  //   sort: {\n  //     label: 1\n  //   }\n  // };\n\n  // appends a count to the collection\n  // we're doing this for use with griddleTable\n  Counts.publish(this, \"taxcode-count\", TaxCodes.find(\n    select,\n    options\n  ));\n\n  return TaxCodes.find(\n    select,\n    options\n  );\n});\n"]},"hash":"d44723700b340ff2ba876a2cc5c442640f943eea"}
