{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","extends","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component","PropTypes"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"},{"kind":"named","imported":"PropTypes","local":"PropTypes"}]},{"source":"meteor/gadicc:blaze-react-component","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Blaze"}]},{"source":"/imports/plugins/core/ui/client/components","imported":["FlatButton","Toolbar","ToolbarGroup","Switch","Icon","VerticalDivider"],"specifiers":[{"kind":"named","imported":"FlatButton","local":"FlatButton"},{"kind":"named","imported":"Toolbar","local":"Toolbar"},{"kind":"named","imported":"ToolbarGroup","local":"ToolbarGroup"},{"kind":"named","imported":"Switch","local":"Switch"},{"kind":"named","imported":"Icon","local":"Icon"},{"kind":"named","imported":"VerticalDivider","local":"VerticalDivider"}]},{"source":"/imports/plugins/core/ui/client/providers","imported":["Translatable"],"specifiers":[{"kind":"named","imported":"Translatable","local":"Translatable"}]},{"source":"/client/api","imported":["Reaction"],"specifiers":[{"kind":"named","imported":"Reaction","local":"Reaction"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/core/dashboard/client/components/toolbar.js","filenameRelative":"/imports/plugins/core/dashboard/client/components/toolbar.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/core/dashboard/client/components/toolbar.js"],"names":["React","Component","PropTypes","Blaze","FlatButton","Toolbar","ToolbarGroup","Switch","Icon","VerticalDivider","Translatable","Reaction","PublishControls","propTypes","dashboardHeaderTemplate","oneOfType","func","node","string","documentIds","arrayOf","documents","object","hasCreateProductAccess","bool","isEnabled","isPreview","onAddProduct","onViewContextChange","onVisibilityChange","packageButtons","showViewAsControls","translation","shape","lang","defaultProps","event","isChecked","props","renderViewControls","isVisible","handleVisibilityChange","renderVisibilitySwitch","renderAdminButton","showActionView","i18nKeyTitle","title","template","fontSize","renderAddButton","renderPackageButons","Array","isArray","map","packageButton","index","renderCustomControls","render"],"mappings":"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","file":"/imports/plugins/core/dashboard/client/components/toolbar.js.map","sourcesContent":["import React, { Component, PropTypes } from \"react\";\nimport Blaze from \"meteor/gadicc:blaze-react-component\";\nimport {\n  FlatButton,\n  Toolbar,\n  ToolbarGroup,\n  Switch,\n  Icon,\n  VerticalDivider\n} from \"/imports/plugins/core/ui/client/components\";\nimport { Translatable } from \"/imports/plugins/core/ui/client/providers\";\nimport { Reaction } from \"/client/api\";\n\nclass PublishControls extends Component {\n  static propTypes = {\n    dashboardHeaderTemplate: PropTypes.oneOfType([PropTypes.func, PropTypes.node, PropTypes.string]),\n    documentIds: PropTypes.arrayOf(PropTypes.string),\n    documents: PropTypes.arrayOf(PropTypes.object),\n    hasCreateProductAccess: PropTypes.bool,\n    isEnabled: PropTypes.bool,\n    isPreview: PropTypes.bool,\n    onAddProduct: PropTypes.func,\n    onViewContextChange: PropTypes.func,\n    onVisibilityChange: PropTypes.func,\n    packageButtons: PropTypes.arrayOf(PropTypes.object),\n    showViewAsControls: PropTypes.bool,\n    translation: PropTypes.shape({\n      lang: PropTypes.string\n    })\n  }\n\n  static defaultProps = {\n    showViewAsControls: true\n  }\n\n  onViewContextChange = (event, isChecked) => {\n    if (typeof this.props.onViewContextChange === \"function\") {\n      this.props.onViewContextChange(event, isChecked ? \"administrator\" : \"customer\");\n    }\n  }\n\n  renderViewControls() {\n    if (this.props.showViewAsControls) {\n      return (\n        <FlatButton\n          label=\"Private\"\n          i18nKeyLabel=\"app.private\"\n          i18nKeyToggleOnLabel=\"app.public\"\n          toggleOnLabel=\"Public\"\n          icon=\"fa fa-eye-slash\"\n          onIcon=\"fa fa-eye\"\n          toggle={true}\n          value=\"public\"\n          onValue=\"private\"\n          toggleOn={this.isVisible === \"public\"}\n          onToggle={this.handleVisibilityChange}\n        />\n      );\n    }\n\n    return null;\n  }\n\n  renderVisibilitySwitch() {\n    if (this.props.hasCreateProductAccess) {\n      return (\n        <Switch\n          i18nKeyLabel=\"app.editMode\"\n          i18nKeyOnLabel=\"app.editMode\"\n          label={\"Edit Mode\"}\n          onLabel={\"Edit Mode\"}\n          checked={!this.props.isPreview}\n          onChange={this.onViewContextChange}\n        />\n      );\n    }\n\n    return null;\n  }\n\n  renderAdminButton() {\n    return (\n      <FlatButton\n        onClick={() => {\n          Reaction.showActionView({\n            i18nKeyTitle: \"dashboard.coreTitle\",\n            title: \"Dashboard\",\n            template: \"dashboardPackages\"\n          });\n        }}\n      >\n      <Icon style={{ fontSize: 24 }} icon=\"icon icon-reaction-logo\" />\n    </FlatButton>\n    );\n  }\n\n  renderAddButton() {\n    if (this.props.hasCreateProductAccess) {\n      return (\n        <FlatButton\n          i18nKeyTooltip=\"app.shortcut.addProductLabel\"\n          icon={\"fa fa-plus\"}\n          tooltip={\"Add Product\"}\n          onClick={this.props.onAddProduct}\n        />\n      );\n    }\n\n    return null;\n  }\n\n  renderPackageButons() {\n    if (Array.isArray(this.props.packageButtons)) {\n      return this.props.packageButtons.map((packageButton, index) => {\n        return (\n          <FlatButton {...packageButton} key={index} />\n        );\n      });\n    }\n\n    return null;\n  }\n\n  renderCustomControls() {\n    if (this.props.dashboardHeaderTemplate && this.props.hasCreateProductAccess) {\n      if (this.props.isEnabled) {\n        return [\n          <VerticalDivider key=\"customControlsVerticaldivider\" />,\n          <Blaze key=\"customControls\" template={this.props.dashboardHeaderTemplate} />\n        ];\n      }\n      return [\n        <Blaze key=\"customControls\" template={this.props.dashboardHeaderTemplate} />\n      ];\n    }\n\n    return null;\n  }\n\n  render() {\n    return (\n      <Toolbar>\n        <ToolbarGroup firstChild={true}>\n          {this.renderVisibilitySwitch()}\n        </ToolbarGroup>\n        <ToolbarGroup lastChild={true}>\n          {this.renderAddButton()}\n          {this.renderPackageButons()}\n          {this.renderCustomControls()}\n          <VerticalDivider />\n          {this.renderAdminButton()}\n          {/* this.renderMoreOptionsButton() */}\n        </ToolbarGroup>\n      </Toolbar>\n    );\n  }\n}\n\nexport default Translatable()(PublishControls);\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/core/dashboard/client/components/toolbar.js.map","sourceFileName":"/imports/plugins/core/dashboard/client/components/toolbar.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"toolbar"},"ignored":false,"code":"var _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0,\n    Component = void 0,\n    PropTypes = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  },\n  PropTypes: function (v) {\n    PropTypes = v;\n  }\n}, 0);\nvar Blaze = void 0;\nmodule.importSync(\"meteor/gadicc:blaze-react-component\", {\n  \"default\": function (v) {\n    Blaze = v;\n  }\n}, 1);\nvar FlatButton = void 0,\n    Toolbar = void 0,\n    ToolbarGroup = void 0,\n    Switch = void 0,\n    Icon = void 0,\n    VerticalDivider = void 0;\nmodule.importSync(\"/imports/plugins/core/ui/client/components\", {\n  FlatButton: function (v) {\n    FlatButton = v;\n  },\n  Toolbar: function (v) {\n    Toolbar = v;\n  },\n  ToolbarGroup: function (v) {\n    ToolbarGroup = v;\n  },\n  Switch: function (v) {\n    Switch = v;\n  },\n  Icon: function (v) {\n    Icon = v;\n  },\n  VerticalDivider: function (v) {\n    VerticalDivider = v;\n  }\n}, 2);\nvar Translatable = void 0;\nmodule.importSync(\"/imports/plugins/core/ui/client/providers\", {\n  Translatable: function (v) {\n    Translatable = v;\n  }\n}, 3);\nvar Reaction = void 0;\nmodule.importSync(\"/client/api\", {\n  Reaction: function (v) {\n    Reaction = v;\n  }\n}, 4);\n\nvar PublishControls = function (_Component) {\n  (0, _inherits3.default)(PublishControls, _Component);\n\n  function PublishControls() {\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, PublishControls);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.onViewContextChange = function (event, isChecked) {\n      if (typeof _this.props.onViewContextChange === \"function\") {\n        _this.props.onViewContextChange(event, isChecked ? \"administrator\" : \"customer\");\n      }\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  PublishControls.prototype.renderViewControls = function () {\n    function renderViewControls() {\n      if (this.props.showViewAsControls) {\n        return React.createElement(FlatButton, {\n          label: \"Private\",\n          i18nKeyLabel: \"app.private\",\n          i18nKeyToggleOnLabel: \"app.public\",\n          toggleOnLabel: \"Public\",\n          icon: \"fa fa-eye-slash\",\n          onIcon: \"fa fa-eye\",\n          toggle: true,\n          value: \"public\",\n          onValue: \"private\",\n          toggleOn: this.isVisible === \"public\",\n          onToggle: this.handleVisibilityChange\n        });\n      }\n\n      return null;\n    }\n\n    return renderViewControls;\n  }();\n\n  PublishControls.prototype.renderVisibilitySwitch = function () {\n    function renderVisibilitySwitch() {\n      if (this.props.hasCreateProductAccess) {\n        return React.createElement(Switch, {\n          i18nKeyLabel: \"app.editMode\",\n          i18nKeyOnLabel: \"app.editMode\",\n          label: \"Edit Mode\",\n          onLabel: \"Edit Mode\",\n          checked: !this.props.isPreview,\n          onChange: this.onViewContextChange\n        });\n      }\n\n      return null;\n    }\n\n    return renderVisibilitySwitch;\n  }();\n\n  PublishControls.prototype.renderAdminButton = function () {\n    function renderAdminButton() {\n      return React.createElement(\n        FlatButton,\n        {\n          onClick: function () {\n            Reaction.showActionView({\n              i18nKeyTitle: \"dashboard.coreTitle\",\n              title: \"Dashboard\",\n              template: \"dashboardPackages\"\n            });\n          }\n        },\n        React.createElement(Icon, {\n          style: {\n            fontSize: 24\n          },\n          icon: \"icon icon-reaction-logo\"\n        })\n      );\n    }\n\n    return renderAdminButton;\n  }();\n\n  PublishControls.prototype.renderAddButton = function () {\n    function renderAddButton() {\n      if (this.props.hasCreateProductAccess) {\n        return React.createElement(FlatButton, {\n          i18nKeyTooltip: \"app.shortcut.addProductLabel\",\n          icon: \"fa fa-plus\",\n          tooltip: \"Add Product\",\n          onClick: this.props.onAddProduct\n        });\n      }\n\n      return null;\n    }\n\n    return renderAddButton;\n  }();\n\n  PublishControls.prototype.renderPackageButons = function () {\n    function renderPackageButons() {\n      if (Array.isArray(this.props.packageButtons)) {\n        return this.props.packageButtons.map(function (packageButton, index) {\n          return React.createElement(FlatButton, (0, _extends3.default)({}, packageButton, {\n            key: index\n          }));\n        });\n      }\n\n      return null;\n    }\n\n    return renderPackageButons;\n  }();\n\n  PublishControls.prototype.renderCustomControls = function () {\n    function renderCustomControls() {\n      if (this.props.dashboardHeaderTemplate && this.props.hasCreateProductAccess) {\n        if (this.props.isEnabled) {\n          return [React.createElement(VerticalDivider, {\n            key: \"customControlsVerticaldivider\"\n          }), React.createElement(Blaze, {\n            key: \"customControls\",\n            template: this.props.dashboardHeaderTemplate\n          })];\n        }\n\n        return [React.createElement(Blaze, {\n          key: \"customControls\",\n          template: this.props.dashboardHeaderTemplate\n        })];\n      }\n\n      return null;\n    }\n\n    return renderCustomControls;\n  }();\n\n  PublishControls.prototype.render = function () {\n    function render() {\n      return React.createElement(\n        Toolbar,\n        null,\n        React.createElement(\n          ToolbarGroup,\n          {\n            firstChild: true\n          },\n          this.renderVisibilitySwitch()\n        ),\n        React.createElement(\n          ToolbarGroup,\n          {\n            lastChild: true\n          },\n          this.renderAddButton(),\n          this.renderPackageButons(),\n          this.renderCustomControls(),\n          React.createElement(VerticalDivider, null),\n          this.renderAdminButton()\n        )\n      );\n    }\n\n    return render;\n  }();\n\n  return PublishControls;\n}(Component);\n\nPublishControls.propTypes = {\n  dashboardHeaderTemplate: PropTypes.oneOfType([PropTypes.func, PropTypes.node, PropTypes.string]),\n  documentIds: PropTypes.arrayOf(PropTypes.string),\n  documents: PropTypes.arrayOf(PropTypes.object),\n  hasCreateProductAccess: PropTypes.bool,\n  isEnabled: PropTypes.bool,\n  isPreview: PropTypes.bool,\n  onAddProduct: PropTypes.func,\n  onViewContextChange: PropTypes.func,\n  onVisibilityChange: PropTypes.func,\n  packageButtons: PropTypes.arrayOf(PropTypes.object),\n  showViewAsControls: PropTypes.bool,\n  translation: PropTypes.shape({\n    lang: PropTypes.string\n  })\n};\nPublishControls.defaultProps = {\n  showViewAsControls: true\n};\nmodule.export(\"default\", exports.default = Translatable()(PublishControls));","map":{"version":3,"sources":["/imports/plugins/core/dashboard/client/components/toolbar.js"],"names":["React","Component","PropTypes","Blaze","FlatButton","Toolbar","ToolbarGroup","Switch","Icon","VerticalDivider","Translatable","Reaction","PublishControls","propTypes","dashboardHeaderTemplate","oneOfType","func","node","string","documentIds","arrayOf","documents","object","hasCreateProductAccess","bool","isEnabled","isPreview","onAddProduct","onViewContextChange","onVisibilityChange","packageButtons","showViewAsControls","translation","shape","lang","defaultProps","event","isChecked","props","renderViewControls","isVisible","handleVisibilityChange","renderVisibilitySwitch","renderAdminButton","showActionView","i18nKeyTitle","title","template","fontSize","renderAddButton","renderPackageButons","Array","isArray","map","packageButton","index","renderCustomControls","render"],"mappings":"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","file":"/imports/plugins/core/dashboard/client/components/toolbar.js.map","sourcesContent":["import React, { Component, PropTypes } from \"react\";\nimport Blaze from \"meteor/gadicc:blaze-react-component\";\nimport {\n  FlatButton,\n  Toolbar,\n  ToolbarGroup,\n  Switch,\n  Icon,\n  VerticalDivider\n} from \"/imports/plugins/core/ui/client/components\";\nimport { Translatable } from \"/imports/plugins/core/ui/client/providers\";\nimport { Reaction } from \"/client/api\";\n\nclass PublishControls extends Component {\n  static propTypes = {\n    dashboardHeaderTemplate: PropTypes.oneOfType([PropTypes.func, PropTypes.node, PropTypes.string]),\n    documentIds: PropTypes.arrayOf(PropTypes.string),\n    documents: PropTypes.arrayOf(PropTypes.object),\n    hasCreateProductAccess: PropTypes.bool,\n    isEnabled: PropTypes.bool,\n    isPreview: PropTypes.bool,\n    onAddProduct: PropTypes.func,\n    onViewContextChange: PropTypes.func,\n    onVisibilityChange: PropTypes.func,\n    packageButtons: PropTypes.arrayOf(PropTypes.object),\n    showViewAsControls: PropTypes.bool,\n    translation: PropTypes.shape({\n      lang: PropTypes.string\n    })\n  }\n\n  static defaultProps = {\n    showViewAsControls: true\n  }\n\n  onViewContextChange = (event, isChecked) => {\n    if (typeof this.props.onViewContextChange === \"function\") {\n      this.props.onViewContextChange(event, isChecked ? \"administrator\" : \"customer\");\n    }\n  }\n\n  renderViewControls() {\n    if (this.props.showViewAsControls) {\n      return (\n        <FlatButton\n          label=\"Private\"\n          i18nKeyLabel=\"app.private\"\n          i18nKeyToggleOnLabel=\"app.public\"\n          toggleOnLabel=\"Public\"\n          icon=\"fa fa-eye-slash\"\n          onIcon=\"fa fa-eye\"\n          toggle={true}\n          value=\"public\"\n          onValue=\"private\"\n          toggleOn={this.isVisible === \"public\"}\n          onToggle={this.handleVisibilityChange}\n        />\n      );\n    }\n\n    return null;\n  }\n\n  renderVisibilitySwitch() {\n    if (this.props.hasCreateProductAccess) {\n      return (\n        <Switch\n          i18nKeyLabel=\"app.editMode\"\n          i18nKeyOnLabel=\"app.editMode\"\n          label={\"Edit Mode\"}\n          onLabel={\"Edit Mode\"}\n          checked={!this.props.isPreview}\n          onChange={this.onViewContextChange}\n        />\n      );\n    }\n\n    return null;\n  }\n\n  renderAdminButton() {\n    return (\n      <FlatButton\n        onClick={() => {\n          Reaction.showActionView({\n            i18nKeyTitle: \"dashboard.coreTitle\",\n            title: \"Dashboard\",\n            template: \"dashboardPackages\"\n          });\n        }}\n      >\n      <Icon style={{ fontSize: 24 }} icon=\"icon icon-reaction-logo\" />\n    </FlatButton>\n    );\n  }\n\n  renderAddButton() {\n    if (this.props.hasCreateProductAccess) {\n      return (\n        <FlatButton\n          i18nKeyTooltip=\"app.shortcut.addProductLabel\"\n          icon={\"fa fa-plus\"}\n          tooltip={\"Add Product\"}\n          onClick={this.props.onAddProduct}\n        />\n      );\n    }\n\n    return null;\n  }\n\n  renderPackageButons() {\n    if (Array.isArray(this.props.packageButtons)) {\n      return this.props.packageButtons.map((packageButton, index) => {\n        return (\n          <FlatButton {...packageButton} key={index} />\n        );\n      });\n    }\n\n    return null;\n  }\n\n  renderCustomControls() {\n    if (this.props.dashboardHeaderTemplate && this.props.hasCreateProductAccess) {\n      if (this.props.isEnabled) {\n        return [\n          <VerticalDivider key=\"customControlsVerticaldivider\" />,\n          <Blaze key=\"customControls\" template={this.props.dashboardHeaderTemplate} />\n        ];\n      }\n      return [\n        <Blaze key=\"customControls\" template={this.props.dashboardHeaderTemplate} />\n      ];\n    }\n\n    return null;\n  }\n\n  render() {\n    return (\n      <Toolbar>\n        <ToolbarGroup firstChild={true}>\n          {this.renderVisibilitySwitch()}\n        </ToolbarGroup>\n        <ToolbarGroup lastChild={true}>\n          {this.renderAddButton()}\n          {this.renderPackageButons()}\n          {this.renderCustomControls()}\n          <VerticalDivider />\n          {this.renderAdminButton()}\n          {/* this.renderMoreOptionsButton() */}\n        </ToolbarGroup>\n      </Toolbar>\n    );\n  }\n}\n\nexport default Translatable()(PublishControls);\n"]},"hash":"88c5daee042b6e4c2aaee8622648f307c4dc0cca"}
