{"metadata":{"usedHelpers":["typeof","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"url","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"url"}]},{"source":"transliteration","imported":["slugify"],"specifiers":[{"kind":"named","imported":"slugify","local":"slugify"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"/imports/plugins/core/router/lib","imported":["Router"],"specifiers":[{"kind":"named","imported":"Router","local":"Router"}]},{"source":"/lib/collections","imported":["Shops"],"specifiers":[{"kind":"named","imported":"Shops","local":"Shops"}]}],"exports":{"exported":["getShopId","getShopName","getShopPrefix","leading","getAbsoluteUrl","path","getCurrentTag","getSlug","slugString","toCamelCase","needscamels","translateRegistry","registry","app","isObject","item","mergeDeep","target","source"],"specifiers":[{"kind":"local","local":"getShopId","exported":"getShopId"},{"kind":"local","local":"getShopName","exported":"getShopName"},{"kind":"local","local":"getShopPrefix","exported":"getShopPrefix"},{"kind":"local","local":"leading","exported":"leading"},{"kind":"local","local":"getAbsoluteUrl","exported":"getAbsoluteUrl"},{"kind":"local","local":"path","exported":"path"},{"kind":"local","local":"getCurrentTag","exported":"getCurrentTag"},{"kind":"local","local":"getSlug","exported":"getSlug"},{"kind":"local","local":"slugString","exported":"slugString"},{"kind":"local","local":"toCamelCase","exported":"toCamelCase"},{"kind":"local","local":"needscamels","exported":"needscamels"},{"kind":"local","local":"translateRegistry","exported":"translateRegistry"},{"kind":"local","local":"registry","exported":"registry"},{"kind":"local","local":"app","exported":"app"},{"kind":"local","local":"isObject","exported":"isObject"},{"kind":"local","local":"item","exported":"item"},{"kind":"local","local":"mergeDeep","exported":"mergeDeep"},{"kind":"local","local":"target","exported":"target"},{"kind":"local","local":"source","exported":"source"}]}}},"options":{"filename":"/lib/api/helpers.js","filenameRelative":"/lib/api/helpers.js","inputSourceMap":{"version":3,"sources":["/lib/api/helpers.js"],"names":["url","slugify","Meteor","Router","Shops","getShopId","domain","parse","absoluteUrl","hostname","shop","find","domains","$in","limit","fetch","_id","getShopName","name","getShopPrefix","leading","getSlug","toLowerCase","getAbsoluteUrl","path","prefix","getCurrentTag","getRouteName","current","params","slug","slugString","toCamelCase","needscamels","s","replace","trim","a","b","c","toUpperCase","translateRegistry","registry","app","registryLabel","i18nKey","label","provides","length","i18nKeyLabel","i18nKeyDescription","i18nKeyPlaceholder","i18nKeyTooltip","i18nKeyTitle","isObject","item","Array","isArray","mergeDeep","target","source","Object","keys","forEach","key","assign"],"mappings":"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","file":"/lib/api/helpers.js.map","sourcesContent":["import url from \"url\";\nimport { slugify } from \"transliteration\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Router } from \"/imports/plugins/core/router/lib\";\nimport { Shops } from \"/lib/collections\";\n\n/**\n * getShopId\n * @return {String} returns current shopId\n */\nexport function getShopId() {\n  const domain = url.parse(Meteor.absoluteUrl()).hostname;\n\n  const shop = Shops.find({ domains: { $in: [domain] } }, {\n    limit: 1\n  }).fetch()[0];\n\n  return !!shop ? shop._id : null;\n}\n\n\n/**\n * getShopName\n * @return {String} returns current shop name\n */\nexport function getShopName() {\n  const domain = url.parse(Meteor.absoluteUrl()).hostname;\n\n  const shop = Shops.find({ domains: { $in: [domain] } }, {\n    limit: 1\n  }).fetch()[0];\n\n  return !!shop ? shop.name : null;\n}\n\n/**\n * getShopPrefix\n * @param {String} leading - Default \"/\", prefix, the prefix with a leading shash\n * @return {String} returns shop url prefix\n */\nexport function getShopPrefix(leading = \"/\") {\n  return leading + getSlug(getShopName().toLowerCase());\n}\n\n/**\n * getAbsoluteUrl\n * @param {String} path - path to append to absolute Url, path should be prefixed with / if necessary\n * @return {String} returns absolute url (shop prefix + path)\n */\nexport function getAbsoluteUrl(path) {\n  const prefix = getShopPrefix(\"\");\n  return Meteor.absoluteUrl(`${prefix}${path}`);\n}\n\n/**\n * getCurrentTag\n * @return {String} returns current tag\n */\nexport function getCurrentTag() {\n  if (Router.getRouteName() === \"tag\") {\n    return Router.current().params.slug;\n  }\n  return null;\n}\n\n\n/**\n * getSlug - return a slugified string using \"slugify\" from transliteration\n * https://www.npmjs.com/package/transliteration\n * @param  {String} slugString - string to slugify\n * @return {String} slugified string\n */\nexport function getSlug(slugString) {\n  return slugString ? slugify(slugString) : \"\";\n}\n\n/**\n * toCamelCase helper for i18n\n * @summary special toCamelCase for converting a string to camelCase for use with i18n keys\n * @param {String} needscamels String to be camel cased.\n * @return {String} camelCased string\n */\nexport function toCamelCase(needscamels) {\n  let s;\n  s = needscamels.replace(/([^a-zA-Z0-9_\\- ])|^[_0-9]+/g, \"\").trim().toLowerCase();\n  s = s.replace(/([ -]+)([a-zA-Z0-9])/g, function (a, b, c) {\n    return c.toUpperCase();\n  });\n  s = s.replace(/([0-9]+)([a-zA-Z])/g, function (a, b, c) {\n    return b + c.toUpperCase();\n  });\n  return s;\n}\n\n/**\n * translateRegistry\n * @summary adds i18n strings to registry object\n * @param {Object} registry registry object\n * @param {Object} [app] complete package object\n * @return {Object} with updated registry\n */\nexport function translateRegistry(registry, app) {\n  let registryLabel = \"\";\n  let i18nKey = \"\";\n  // first we check the default place for a label\n  if (registry.label) {\n    registryLabel = toCamelCase(registry.label);\n    i18nKey = `admin.${registry.provides}.${registryLabel}`;\n    // and if we don\"t find it, we are trying to look at first\n    // registry entry\n  } else if (app && app.registry && app.registry.length &&\n    app.registry[0].label) {\n    registryLabel = toCamelCase(app.registry[0].label);\n    i18nKey = `admin.${app.registry[0].provides}.${registryLabel}`;\n  }\n  registry.i18nKeyLabel = `${i18nKey}Label`;\n  registry.i18nKeyDescription = `${i18nKey}Description`;\n  registry.i18nKeyPlaceholder = `${i18nKey}Placeholder`;\n  registry.i18nKeyTooltip = `${i18nKey}Tooltip`;\n  registry.i18nKeyTitle = `${i18nKey}Title`;\n  // return registry object with added i18n keys\n  return registry;\n}\n\n/**\n * Simple is object check.\n * @param {Object} item item to check if is an object\n * @returns {boolean} return true if object\n */\nexport function isObject(item) {\n  return (item && typeof item === \"object\" && !Array.isArray(item) && item !== null);\n}\n\n/**\n * Helper for Deep merge two objects.\n * @param {Object} target deep merge into this object\n * @param {Object} source merge this object\n * @returns {Object} return deep merged object\n */\nexport function mergeDeep(target, source) {\n  if (isObject(target) && isObject(source)) {\n    Object.keys(source).forEach(key => {\n      if (isObject(source[key])) {\n        if (!target[key]) Object.assign(target, { [key]: {} });\n        mergeDeep(target[key], source[key]);\n      } else {\n        Object.assign(target, { [key]: source[key] });\n      }\n    });\n  }\n  return target;\n}\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/lib/api/helpers.js.map","sourceFileName":"/lib/api/helpers.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"helpers"},"ignored":false,"code":"var _typeof2 = require(\"babel-runtime/helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.export({\n  getShopId: function () {\n    return getShopId;\n  },\n  getShopName: function () {\n    return getShopName;\n  },\n  getShopPrefix: function () {\n    return getShopPrefix;\n  },\n  getAbsoluteUrl: function () {\n    return getAbsoluteUrl;\n  },\n  getCurrentTag: function () {\n    return getCurrentTag;\n  },\n  getSlug: function () {\n    return getSlug;\n  },\n  toCamelCase: function () {\n    return toCamelCase;\n  },\n  translateRegistry: function () {\n    return translateRegistry;\n  },\n  isObject: function () {\n    return isObject;\n  },\n  mergeDeep: function () {\n    return mergeDeep;\n  }\n});\nvar url = void 0;\nmodule.importSync(\"url\", {\n  \"default\": function (v) {\n    url = v;\n  }\n}, 0);\nvar slugify = void 0;\nmodule.importSync(\"transliteration\", {\n  slugify: function (v) {\n    slugify = v;\n  }\n}, 1);\nvar Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 2);\nvar Router = void 0;\nmodule.importSync(\"/imports/plugins/core/router/lib\", {\n  Router: function (v) {\n    Router = v;\n  }\n}, 3);\nvar Shops = void 0;\nmodule.importSync(\"/lib/collections\", {\n  Shops: function (v) {\n    Shops = v;\n  }\n}, 4);\n\nfunction getShopId() {\n  var domain = url.parse(Meteor.absoluteUrl()).hostname;\n  var shop = Shops.find({\n    domains: {\n      $in: [domain]\n    }\n  }, {\n    limit: 1\n  }).fetch()[0];\n  return !!shop ? shop._id : null;\n}\n\nfunction getShopName() {\n  var domain = url.parse(Meteor.absoluteUrl()).hostname;\n  var shop = Shops.find({\n    domains: {\n      $in: [domain]\n    }\n  }, {\n    limit: 1\n  }).fetch()[0];\n  return !!shop ? shop.name : null;\n}\n\nfunction getShopPrefix() {\n  var leading = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"/\";\n  return leading + getSlug(getShopName().toLowerCase());\n}\n\nfunction getAbsoluteUrl(path) {\n  var prefix = getShopPrefix(\"\");\n  return Meteor.absoluteUrl(\"\" + prefix + path);\n}\n\nfunction getCurrentTag() {\n  if (Router.getRouteName() === \"tag\") {\n    return Router.current().params.slug;\n  }\n\n  return null;\n}\n\nfunction getSlug(slugString) {\n  return slugString ? slugify(slugString) : \"\";\n}\n\nfunction toCamelCase(needscamels) {\n  var s = void 0;\n  s = needscamels.replace(/([^a-zA-Z0-9_\\- ])|^[_0-9]+/g, \"\").trim().toLowerCase();\n  s = s.replace(/([ -]+)([a-zA-Z0-9])/g, function (a, b, c) {\n    return c.toUpperCase();\n  });\n  s = s.replace(/([0-9]+)([a-zA-Z])/g, function (a, b, c) {\n    return b + c.toUpperCase();\n  });\n  return s;\n}\n\nfunction translateRegistry(registry, app) {\n  var registryLabel = \"\";\n  var i18nKey = \"\"; // first we check the default place for a label\n\n  if (registry.label) {\n    registryLabel = toCamelCase(registry.label);\n    i18nKey = \"admin.\" + registry.provides + \".\" + registryLabel; // and if we don\"t find it, we are trying to look at first\n    // registry entry\n  } else if (app && app.registry && app.registry.length && app.registry[0].label) {\n    registryLabel = toCamelCase(app.registry[0].label);\n    i18nKey = \"admin.\" + app.registry[0].provides + \".\" + registryLabel;\n  }\n\n  registry.i18nKeyLabel = i18nKey + \"Label\";\n  registry.i18nKeyDescription = i18nKey + \"Description\";\n  registry.i18nKeyPlaceholder = i18nKey + \"Placeholder\";\n  registry.i18nKeyTooltip = i18nKey + \"Tooltip\";\n  registry.i18nKeyTitle = i18nKey + \"Title\"; // return registry object with added i18n keys\n\n  return registry;\n}\n\nfunction isObject(item) {\n  return item && (typeof item === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(item)) === \"object\" && !Array.isArray(item) && item !== null;\n}\n\nfunction mergeDeep(target, source) {\n  if (isObject(target) && isObject(source)) {\n    Object.keys(source).forEach(function (key) {\n      if (isObject(source[key])) {\n        var _Object$assign;\n\n        if (!target[key]) Object.assign(target, (_Object$assign = {}, _Object$assign[key] = {}, _Object$assign));\n        mergeDeep(target[key], source[key]);\n      } else {\n        var _Object$assign2;\n\n        Object.assign(target, (_Object$assign2 = {}, _Object$assign2[key] = source[key], _Object$assign2));\n      }\n    });\n  }\n\n  return target;\n}","map":{"version":3,"sources":["/lib/api/helpers.js"],"names":["url","slugify","Meteor","Router","Shops","getShopId","domain","parse","absoluteUrl","hostname","shop","find","domains","$in","limit","fetch","_id","getShopName","name","getShopPrefix","leading","getSlug","toLowerCase","getAbsoluteUrl","path","prefix","getCurrentTag","getRouteName","current","params","slug","slugString","toCamelCase","needscamels","s","replace","trim","a","b","c","toUpperCase","translateRegistry","registry","app","registryLabel","i18nKey","label","provides","length","i18nKeyLabel","i18nKeyDescription","i18nKeyPlaceholder","i18nKeyTooltip","i18nKeyTitle","isObject","item","Array","isArray","mergeDeep","target","source","Object","keys","forEach","key","assign"],"mappings":"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","file":"/lib/api/helpers.js.map","sourcesContent":["import url from \"url\";\nimport { slugify } from \"transliteration\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Router } from \"/imports/plugins/core/router/lib\";\nimport { Shops } from \"/lib/collections\";\n\n/**\n * getShopId\n * @return {String} returns current shopId\n */\nexport function getShopId() {\n  const domain = url.parse(Meteor.absoluteUrl()).hostname;\n\n  const shop = Shops.find({ domains: { $in: [domain] } }, {\n    limit: 1\n  }).fetch()[0];\n\n  return !!shop ? shop._id : null;\n}\n\n\n/**\n * getShopName\n * @return {String} returns current shop name\n */\nexport function getShopName() {\n  const domain = url.parse(Meteor.absoluteUrl()).hostname;\n\n  const shop = Shops.find({ domains: { $in: [domain] } }, {\n    limit: 1\n  }).fetch()[0];\n\n  return !!shop ? shop.name : null;\n}\n\n/**\n * getShopPrefix\n * @param {String} leading - Default \"/\", prefix, the prefix with a leading shash\n * @return {String} returns shop url prefix\n */\nexport function getShopPrefix(leading = \"/\") {\n  return leading + getSlug(getShopName().toLowerCase());\n}\n\n/**\n * getAbsoluteUrl\n * @param {String} path - path to append to absolute Url, path should be prefixed with / if necessary\n * @return {String} returns absolute url (shop prefix + path)\n */\nexport function getAbsoluteUrl(path) {\n  const prefix = getShopPrefix(\"\");\n  return Meteor.absoluteUrl(`${prefix}${path}`);\n}\n\n/**\n * getCurrentTag\n * @return {String} returns current tag\n */\nexport function getCurrentTag() {\n  if (Router.getRouteName() === \"tag\") {\n    return Router.current().params.slug;\n  }\n  return null;\n}\n\n\n/**\n * getSlug - return a slugified string using \"slugify\" from transliteration\n * https://www.npmjs.com/package/transliteration\n * @param  {String} slugString - string to slugify\n * @return {String} slugified string\n */\nexport function getSlug(slugString) {\n  return slugString ? slugify(slugString) : \"\";\n}\n\n/**\n * toCamelCase helper for i18n\n * @summary special toCamelCase for converting a string to camelCase for use with i18n keys\n * @param {String} needscamels String to be camel cased.\n * @return {String} camelCased string\n */\nexport function toCamelCase(needscamels) {\n  let s;\n  s = needscamels.replace(/([^a-zA-Z0-9_\\- ])|^[_0-9]+/g, \"\").trim().toLowerCase();\n  s = s.replace(/([ -]+)([a-zA-Z0-9])/g, function (a, b, c) {\n    return c.toUpperCase();\n  });\n  s = s.replace(/([0-9]+)([a-zA-Z])/g, function (a, b, c) {\n    return b + c.toUpperCase();\n  });\n  return s;\n}\n\n/**\n * translateRegistry\n * @summary adds i18n strings to registry object\n * @param {Object} registry registry object\n * @param {Object} [app] complete package object\n * @return {Object} with updated registry\n */\nexport function translateRegistry(registry, app) {\n  let registryLabel = \"\";\n  let i18nKey = \"\";\n  // first we check the default place for a label\n  if (registry.label) {\n    registryLabel = toCamelCase(registry.label);\n    i18nKey = `admin.${registry.provides}.${registryLabel}`;\n    // and if we don\"t find it, we are trying to look at first\n    // registry entry\n  } else if (app && app.registry && app.registry.length &&\n    app.registry[0].label) {\n    registryLabel = toCamelCase(app.registry[0].label);\n    i18nKey = `admin.${app.registry[0].provides}.${registryLabel}`;\n  }\n  registry.i18nKeyLabel = `${i18nKey}Label`;\n  registry.i18nKeyDescription = `${i18nKey}Description`;\n  registry.i18nKeyPlaceholder = `${i18nKey}Placeholder`;\n  registry.i18nKeyTooltip = `${i18nKey}Tooltip`;\n  registry.i18nKeyTitle = `${i18nKey}Title`;\n  // return registry object with added i18n keys\n  return registry;\n}\n\n/**\n * Simple is object check.\n * @param {Object} item item to check if is an object\n * @returns {boolean} return true if object\n */\nexport function isObject(item) {\n  return (item && typeof item === \"object\" && !Array.isArray(item) && item !== null);\n}\n\n/**\n * Helper for Deep merge two objects.\n * @param {Object} target deep merge into this object\n * @param {Object} source merge this object\n * @returns {Object} return deep merged object\n */\nexport function mergeDeep(target, source) {\n  if (isObject(target) && isObject(source)) {\n    Object.keys(source).forEach(key => {\n      if (isObject(source[key])) {\n        if (!target[key]) Object.assign(target, { [key]: {} });\n        mergeDeep(target[key], source[key]);\n      } else {\n        Object.assign(target, { [key]: source[key] });\n      }\n    });\n  }\n  return target;\n}\n"]},"hash":"17303b0f97ad643281ec397af789cb9313769f99"}
