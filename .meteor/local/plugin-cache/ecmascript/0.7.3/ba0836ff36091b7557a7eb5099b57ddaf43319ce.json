{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"tether-drop","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Drop"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/blaze","imported":["Blaze"],"specifiers":[{"kind":"named","imported":"Blaze","local":"Blaze"}]},{"source":"meteor/templating","imported":["Template"],"specifiers":[{"kind":"named","imported":"Template","local":"Template"}]},{"source":"/client/api","imported":["Reaction","i18next"],"specifiers":[{"kind":"named","imported":"Reaction","local":"Reaction"},{"kind":"named","imported":"i18next","local":"i18next"}]},{"source":"/lib/collections","imported":["Packages"],"specifiers":[{"kind":"named","imported":"Packages","local":"Packages"}]},{"source":"/imports/plugins/core/dashboard/client/containers/toolbarContainer","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"ToolbarContainer"}]},{"source":"/imports/plugins/core/dashboard/client/components/toolbar","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Toolbar"}]},{"source":"/imports/plugins/core/dashboard/client/containers","imported":["ActionViewContainer"],"specifiers":[{"kind":"named","imported":"ActionViewContainer","local":"ActionViewContainer"}]},{"source":"/imports/plugins/core/dashboard/client/components","imported":["ActionView"],"specifiers":[{"kind":"named","imported":"ActionView","local":"ActionView"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/core/layout/client/templates/layout/admin/admin.js","filenameRelative":"/imports/plugins/core/layout/client/templates/layout/admin/admin.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/core/layout/client/templates/layout/admin/admin.js"],"names":["Drop","Meteor","Blaze","Template","Reaction","i18next","Packages","ToolbarContainer","Toolbar","ActionViewContainer","ActionView","coreAdminLayout","onRendered","$","addClass","onDestroyed","removeClass","helpers","PublishContainerComponent","component","data","currentData","ActionViewComponent","shortcutButtons","instance","shortcuts","Apps","provides","enabled","items","_","isArray","shortcut","container","push","type","href","Router","pathFor","name","className","isActiveClassName","icon","tooltip","label","i18nKeyTooltip","i18nKeyLabel","tooltipPosition","onClick","event","dropInstance","target","currentTarget","content","constrainToWindow","classes","position","renderWithData","createContentMenu","open","isSeperator","props","packageButtons","routeName","getRouteName","registryItems","buttons","item","hasPermission","route","userId","t","i18n","showActionView","control","getActionView","adminControlsClassname","isActionViewOpen","thisApp","reactionApp","findOne","registry","settingsData","find"],"mappings":"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","file":"/imports/plugins/core/layout/client/templates/layout/admin/admin.js.map","sourcesContent":["import Drop from \"tether-drop\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Blaze } from \"meteor/blaze\";\nimport { Template } from \"meteor/templating\";\nimport { Reaction, i18next } from \"/client/api\";\nimport { Packages } from \"/lib/collections\";\nimport ToolbarContainer from \"/imports/plugins/core/dashboard/client/containers/toolbarContainer\";\nimport Toolbar from \"/imports/plugins/core/dashboard/client/components/toolbar\";\nimport { ActionViewContainer } from \"/imports/plugins/core/dashboard/client/containers\";\nimport { ActionView } from \"/imports/plugins/core/dashboard/client/components\";\n\nTemplate.coreAdminLayout.onRendered(function () {\n  $(\"body\").addClass(\"admin\");\n});\n\nTemplate.coreAdminLayout.onDestroyed(() => {\n  $(\"body\").removeClass(\"admin\");\n});\n\nTemplate.coreAdminLayout.helpers({\n  PublishContainerComponent() {\n    return {\n      component: ToolbarContainer(Toolbar),\n      data: Template.currentData()\n    };\n  },\n  ActionViewComponent() {\n    return {\n      component: ActionViewContainer(ActionView),\n      data: Template.currentData()\n    };\n  },\n  shortcutButtons() {\n    const instance = Template.instance();\n    const shortcuts = Reaction.Apps({ provides: \"shortcut\", enabled: true });\n    const items = [];\n\n    if (_.isArray(shortcuts)) {\n      for (const shortcut of shortcuts) {\n        if (!shortcut.container) {\n          items.push({\n            type: \"link\",\n            href: Reaction.Router.pathFor(shortcut.name),\n            className: Reaction.Router.isActiveClassName(shortcut.name),\n            icon: shortcut.icon,\n            tooltip: shortcut.label || \"\",\n            i18nKeyTooltip: shortcut.i18nKeyLabel,\n            tooltipPosition: \"left middle\"\n          });\n        }\n      }\n    }\n\n    items.push({ type: \"seperator\" });\n\n    items.push({\n      icon: \"plus\",\n      tooltip: \"Create Content\",\n      i18nKeyTooltip: \"app.createContent\",\n      tooltipPosition: \"left middle\",\n      onClick(event) {\n        if (!instance.dropInstance) {\n          instance.dropInstance = new Drop({\n            target: event.currentTarget,\n            content: \"\",\n            constrainToWindow: true,\n            classes: \"drop-theme-arrows\",\n            position: \"right center\"\n          });\n\n          Blaze.renderWithData(Template.createContentMenu, {}, instance.dropInstance.content);\n        }\n\n        instance.dropInstance.open();\n      }\n    });\n\n    return items;\n  },\n\n  isSeperator(props) {\n    if (props.type === \"seperator\") {\n      return true;\n    }\n    return false;\n  },\n\n  packageButtons() {\n    const routeName = Reaction.Router.getRouteName();\n\n    if (routeName !== \"dashboard\") {\n      const registryItems = Reaction.Apps({ provides: \"settings\", container: routeName });\n      const buttons = [];\n\n      for (const item of registryItems) {\n        if (Reaction.hasPermission(item.route, Meteor.userId())) {\n          let icon = item.icon;\n\n          if (!item.icon && item.provides === \"settings\") {\n            icon = \"gear\";\n          }\n\n          buttons.push({\n            href: item.route,\n            icon: icon,\n            tooltip: i18next.t(item.i18nKeyLabel, item.i18n),\n            tooltipPosition: \"left middle\",\n            onClick() {\n              Reaction.showActionView(item);\n            }\n          });\n        }\n      }\n\n      return buttons;\n    }\n    return [];\n  },\n\n  control: function () {\n    return Reaction.getActionView();\n  },\n\n  adminControlsClassname: function () {\n    if (Reaction.isActionViewOpen()) {\n      return \"show-settings\";\n    }\n    return \"\";\n  },\n\n  /**\n   * thisApp\n   * @return {Object} Registry entry for item\n   */\n  thisApp() {\n    const reactionApp = Packages.findOne({\n      \"registry.provides\": \"settings\",\n      \"registry.route\": Reaction.Router.getRouteName()\n    }, {\n      enabled: 1,\n      registry: 1,\n      name: 1,\n      route: 1\n    });\n\n    if (reactionApp) {\n      const settingsData = _.find(reactionApp.registry, function (item) {\n        return item.route === Reaction.Router.getRouteName() && item.provides === \"settings\";\n      });\n\n      return settingsData;\n    }\n    return reactionApp;\n  }\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/core/layout/client/templates/layout/admin/admin.js.map","sourceFileName":"/imports/plugins/core/layout/client/templates/layout/admin/admin.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"admin"},"ignored":false,"code":"var Drop = void 0;\nmodule.importSync(\"tether-drop\", {\n  \"default\": function (v) {\n    Drop = v;\n  }\n}, 0);\nvar Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\nvar Blaze = void 0;\nmodule.importSync(\"meteor/blaze\", {\n  Blaze: function (v) {\n    Blaze = v;\n  }\n}, 2);\nvar Template = void 0;\nmodule.importSync(\"meteor/templating\", {\n  Template: function (v) {\n    Template = v;\n  }\n}, 3);\nvar Reaction = void 0,\n    i18next = void 0;\nmodule.importSync(\"/client/api\", {\n  Reaction: function (v) {\n    Reaction = v;\n  },\n  i18next: function (v) {\n    i18next = v;\n  }\n}, 4);\nvar Packages = void 0;\nmodule.importSync(\"/lib/collections\", {\n  Packages: function (v) {\n    Packages = v;\n  }\n}, 5);\nvar ToolbarContainer = void 0;\nmodule.importSync(\"/imports/plugins/core/dashboard/client/containers/toolbarContainer\", {\n  \"default\": function (v) {\n    ToolbarContainer = v;\n  }\n}, 6);\nvar Toolbar = void 0;\nmodule.importSync(\"/imports/plugins/core/dashboard/client/components/toolbar\", {\n  \"default\": function (v) {\n    Toolbar = v;\n  }\n}, 7);\nvar ActionViewContainer = void 0;\nmodule.importSync(\"/imports/plugins/core/dashboard/client/containers\", {\n  ActionViewContainer: function (v) {\n    ActionViewContainer = v;\n  }\n}, 8);\nvar ActionView = void 0;\nmodule.importSync(\"/imports/plugins/core/dashboard/client/components\", {\n  ActionView: function (v) {\n    ActionView = v;\n  }\n}, 9);\nTemplate.coreAdminLayout.onRendered(function () {\n  $(\"body\").addClass(\"admin\");\n});\nTemplate.coreAdminLayout.onDestroyed(function () {\n  $(\"body\").removeClass(\"admin\");\n});\nTemplate.coreAdminLayout.helpers({\n  PublishContainerComponent: function () {\n    return {\n      component: ToolbarContainer(Toolbar),\n      data: Template.currentData()\n    };\n  },\n  ActionViewComponent: function () {\n    return {\n      component: ActionViewContainer(ActionView),\n      data: Template.currentData()\n    };\n  },\n  shortcutButtons: function () {\n    var instance = Template.instance();\n    var shortcuts = Reaction.Apps({\n      provides: \"shortcut\",\n      enabled: true\n    });\n    var items = [];\n\n    if (_.isArray(shortcuts)) {\n      for (var _iterator = shortcuts, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var shortcut = _ref;\n\n        if (!shortcut.container) {\n          items.push({\n            type: \"link\",\n            href: Reaction.Router.pathFor(shortcut.name),\n            className: Reaction.Router.isActiveClassName(shortcut.name),\n            icon: shortcut.icon,\n            tooltip: shortcut.label || \"\",\n            i18nKeyTooltip: shortcut.i18nKeyLabel,\n            tooltipPosition: \"left middle\"\n          });\n        }\n      }\n    }\n\n    items.push({\n      type: \"seperator\"\n    });\n    items.push({\n      icon: \"plus\",\n      tooltip: \"Create Content\",\n      i18nKeyTooltip: \"app.createContent\",\n      tooltipPosition: \"left middle\",\n      onClick: function (event) {\n        if (!instance.dropInstance) {\n          instance.dropInstance = new Drop({\n            target: event.currentTarget,\n            content: \"\",\n            constrainToWindow: true,\n            classes: \"drop-theme-arrows\",\n            position: \"right center\"\n          });\n          Blaze.renderWithData(Template.createContentMenu, {}, instance.dropInstance.content);\n        }\n\n        instance.dropInstance.open();\n      }\n    });\n    return items;\n  },\n  isSeperator: function (props) {\n    if (props.type === \"seperator\") {\n      return true;\n    }\n\n    return false;\n  },\n  packageButtons: function () {\n    var routeName = Reaction.Router.getRouteName();\n\n    if (routeName !== \"dashboard\") {\n      var registryItems = Reaction.Apps({\n        provides: \"settings\",\n        container: routeName\n      });\n      var buttons = [];\n\n      var _loop = function (item) {\n        if (Reaction.hasPermission(item.route, Meteor.userId())) {\n          var icon = item.icon;\n\n          if (!item.icon && item.provides === \"settings\") {\n            icon = \"gear\";\n          }\n\n          buttons.push({\n            href: item.route,\n            icon: icon,\n            tooltip: i18next.t(item.i18nKeyLabel, item.i18n),\n            tooltipPosition: \"left middle\",\n            onClick: function () {\n              Reaction.showActionView(item);\n            }\n          });\n        }\n      };\n\n      for (var _iterator2 = registryItems, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var item = _ref2;\n\n        _loop(item);\n      }\n\n      return buttons;\n    }\n\n    return [];\n  },\n  control: function () {\n    return Reaction.getActionView();\n  },\n  adminControlsClassname: function () {\n    if (Reaction.isActionViewOpen()) {\n      return \"show-settings\";\n    }\n\n    return \"\";\n  },\n  /**\n   * thisApp\n   * @return {Object} Registry entry for item\n   */thisApp: function () {\n    var reactionApp = Packages.findOne({\n      \"registry.provides\": \"settings\",\n      \"registry.route\": Reaction.Router.getRouteName()\n    }, {\n      enabled: 1,\n      registry: 1,\n      name: 1,\n      route: 1\n    });\n\n    if (reactionApp) {\n      var settingsData = _.find(reactionApp.registry, function (item) {\n        return item.route === Reaction.Router.getRouteName() && item.provides === \"settings\";\n      });\n\n      return settingsData;\n    }\n\n    return reactionApp;\n  }\n});","map":{"version":3,"sources":["/imports/plugins/core/layout/client/templates/layout/admin/admin.js"],"names":["Drop","Meteor","Blaze","Template","Reaction","i18next","Packages","ToolbarContainer","Toolbar","ActionViewContainer","ActionView","coreAdminLayout","onRendered","$","addClass","onDestroyed","removeClass","helpers","PublishContainerComponent","component","data","currentData","ActionViewComponent","shortcutButtons","instance","shortcuts","Apps","provides","enabled","items","_","isArray","shortcut","container","push","type","href","Router","pathFor","name","className","isActiveClassName","icon","tooltip","label","i18nKeyTooltip","i18nKeyLabel","tooltipPosition","onClick","event","dropInstance","target","currentTarget","content","constrainToWindow","classes","position","renderWithData","createContentMenu","open","isSeperator","props","packageButtons","routeName","getRouteName","registryItems","buttons","item","hasPermission","route","userId","t","i18n","showActionView","control","getActionView","adminControlsClassname","isActionViewOpen","thisApp","reactionApp","findOne","registry","settingsData","find"],"mappings":"AAAA,IAAO;AAAP,OAAiB,WAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GACA,AAAS,AAAc,AACvB,AAAS,AAAa,AACtB,AAAS,AAAgB,AACzB,AAAS,AAAU,AAAe,AAClC,AAAS,AAAgB,AACzB,AAAO,AAAsB,AAC7B,AAAO,AAAa,AACpB,AAAS,AAA2B,AACpC,AAAS,AAAkB,AAE3B,AAAS,AAAgB,AAAW,AAAY;AAC9C,AAAE,SAAF,AAAU,AAAS,gBAAnB,uBADF,AAEC;qBAED;AAAA,AAAS,AAAgB,AAAY,AAAM,AACzC,AAAE,AAAQ,AAAY;AADxB,AAEC,iDAED;IAAS,oBAAT,AAAyB,AAAQ,AAC/B;AAA4B,AAC1B,AAAO;AACL,SAAW;AACL,AAAS,yCAFV,AAEC;AAFR;;qBAKF,AAAsB,AACpB;AAR6B,AAM9B;AAEQ,AACL;AAAW,mCADN,AACM,AAAoB,AAC/B;;qCAV2B,AAY9B;qBACD;AALE,AAAO,AAEC,AAAS;AAGD,AAChB;AAAM,+BAAN,AAAiB,AAAS,AAC1B;QAAM,WAAY,SAAA,AAAS,AAAK,AAAE;QAAU;;eAAY;KAAxB;QAAiC,QAAjE,AAAkB,AAAc,AAChC;;UAAM,QAAN,AAAc;;AAEd;;;;;;;;;;;;;AAAI,AAAE,aAAF,AAAU,SAAd,AAAI,AAAsB,WACxB;AAAK,gBAAM;AACL,AAAC,kBAAL,AAAc,AAAW,AACvB;AAAM,kBAAN,AAAW,iCACT;AAAM,uBADG,2CAET;kBAAM,SAFG,AAEH,AAAS,AAAO,AAAQ,AAAS,AACvC;qBAAW,SAAA,AAAS,SAHX,AAGE,AAAgB,AAAkB,AAAS,AACtD;AAAM,AAAS,4BAJN,SAKT;AAAS,6BALA,AAKA,AAAS,AAAS,AAC3B,AAAgB,AAAS,AACzB;AATN,AAAuB,AAAW,AAChC;AACa,AAOQ;AAPnB,AASD;AACF,AACF;;;YAED;;UAAA,AAAM;YAAN,AAAW,AAAQ;eAEnB;AAAA,AAAM,AAAK,sBACT;AADS,AACH,uBACN;yBAAS,OAFA,AAGT;sBAAgB,cAHP,AAIT;mBAAiB;0BACjB;AAAA,AAAQ,qBAAO,AACb;AAAI,AAAC,AAAS,+BAAd,AAA4B,AAC1B;AAAS,qBAAT,AAAwB,AAAI,AAAK,AAC/B;AAAQ,sBADuB,AACjB,AACd,AAAS,AACT,AAAmB,AACnB;WAXG;gBAWM,wBAJsB,6CAK/B;AALF,AAAwB,AAAS,AAKrB,AAGZ;;AAAM,8BAAN,AAAqB,AAAS,AAAmB,AAAI,AAAS,AAAa,AAC5E;AAED,AAAS,AAAa,AACvB;AArBQ,AAAE;;AAEb,AAAW,AAsBX;AAAO,yBAAP,OA1D6B,AA2D9B;;aAED;AAAA,AAAY,AAAO,AACjB;;AAAI,WAAJ,AAAI,AAAM,AAAS,AAAa,AAC9B;AAAA,AAAO,AACR;8BACD;QAAA,AAAO,4BAjEsB,AAkE9B;;;UAEgB;;mBACf;;AAAM,oBAAN,AAAkB,AAAS,AAAO,AAElC;;AAHF;YAIU,SAAgB,cAAS,KAAT,AAAc,yBAAE;cAAU,YAAhD,AAAsB,AAAc,AAAwB,AAAW;;0DACvE;AAAM,mBAAN,AAAgB;AAEhB,AAAK,AAAM,AAAQ,AAAe,AAChC;;AAAI,kBAAS;AACP,kBAAO,KAAX,AAAgB;kBAEhB;AAAI,AAAC,AAAK,qBAAN,AAAc,UAAK,KAAL,AAAkB,mBAApC,AAAgD,AAC9C;AAAA,AAAO,6BACR;;sCAED;AAAA,AAAQ,AAAK,AACX,AAAM,AAAK,AACX;AATJ,AAAI,AAAuB,AAAK,AAAO,AAAO,AAAW,AACvD;AAMa,AAEL,AACN;;;AAfJ,4BAAJ,AAA+B;AAC7B;;;;;;;;;;;YADgB;;;AAYC,AAGF,AAAQ,AAAE,AAAK,AAAc,AAAK,AAC3C,AAAiB;;aACjB;AAAU,AACR;;WAAA,AAAS,AAAe,AACzB;AAPU;WAAb,YASD;oBACF;AAED;AAAA,AAAO,sCACR;;aACD;AAjG6B,AAiG7B,AAAO,AACR;;;AAED,AAAS,AAAY,AACnB;AArG6B,AAqG7B,AAAO,AAAS,AACjB,AAED,AAAwB,AAAY,AAClC,AAAI,AAAS,AAAoB,AAC/B;;;0BAAA,AAAO,AACR;;2BACD;AAAA,AAAO,wCA5GsB,AA6G9B;;eAED;;;aAIA,AAAU,AACR,AAAM,AAAc,AAAS,AAAQ,AACnC;;;qBADmC,AACd,AACrB;UAAkB,iBAAS,KAAT,AAAgB,YAAhB,0BAFA,AAAiB,AAGlC;kFACD;AADC,AACQ,AACT,AAAU,AACV;;AAAM,aAHL,AAID;AAJC,AAIM;;AAPT,AAAoB;AApHxB,AAAiC,AA8H7B,AAAI,AAAa,AACf,AAAM,AAAe,AAAE,AAAK,AAAY,AAAU,AAAU,AAAM,AAChE,AAAO,AAAK,AAAU,AAAS,AAAO,AAAkB,AAAK,AAAa,AAC3E,AAED,AAAO,AACR,AACD,AAAO,AACR;AApIQ,AACM,AAAiB,AAC5B","file":"/imports/plugins/core/layout/client/templates/layout/admin/admin.js.map","sourcesContent":["import Drop from \"tether-drop\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Blaze } from \"meteor/blaze\";\nimport { Template } from \"meteor/templating\";\nimport { Reaction, i18next } from \"/client/api\";\nimport { Packages } from \"/lib/collections\";\nimport ToolbarContainer from \"/imports/plugins/core/dashboard/client/containers/toolbarContainer\";\nimport Toolbar from \"/imports/plugins/core/dashboard/client/components/toolbar\";\nimport { ActionViewContainer } from \"/imports/plugins/core/dashboard/client/containers\";\nimport { ActionView } from \"/imports/plugins/core/dashboard/client/components\";\n\nTemplate.coreAdminLayout.onRendered(function () {\n  $(\"body\").addClass(\"admin\");\n});\n\nTemplate.coreAdminLayout.onDestroyed(() => {\n  $(\"body\").removeClass(\"admin\");\n});\n\nTemplate.coreAdminLayout.helpers({\n  PublishContainerComponent() {\n    return {\n      component: ToolbarContainer(Toolbar),\n      data: Template.currentData()\n    };\n  },\n  ActionViewComponent() {\n    return {\n      component: ActionViewContainer(ActionView),\n      data: Template.currentData()\n    };\n  },\n  shortcutButtons() {\n    const instance = Template.instance();\n    const shortcuts = Reaction.Apps({ provides: \"shortcut\", enabled: true });\n    const items = [];\n\n    if (_.isArray(shortcuts)) {\n      for (const shortcut of shortcuts) {\n        if (!shortcut.container) {\n          items.push({\n            type: \"link\",\n            href: Reaction.Router.pathFor(shortcut.name),\n            className: Reaction.Router.isActiveClassName(shortcut.name),\n            icon: shortcut.icon,\n            tooltip: shortcut.label || \"\",\n            i18nKeyTooltip: shortcut.i18nKeyLabel,\n            tooltipPosition: \"left middle\"\n          });\n        }\n      }\n    }\n\n    items.push({ type: \"seperator\" });\n\n    items.push({\n      icon: \"plus\",\n      tooltip: \"Create Content\",\n      i18nKeyTooltip: \"app.createContent\",\n      tooltipPosition: \"left middle\",\n      onClick(event) {\n        if (!instance.dropInstance) {\n          instance.dropInstance = new Drop({\n            target: event.currentTarget,\n            content: \"\",\n            constrainToWindow: true,\n            classes: \"drop-theme-arrows\",\n            position: \"right center\"\n          });\n\n          Blaze.renderWithData(Template.createContentMenu, {}, instance.dropInstance.content);\n        }\n\n        instance.dropInstance.open();\n      }\n    });\n\n    return items;\n  },\n\n  isSeperator(props) {\n    if (props.type === \"seperator\") {\n      return true;\n    }\n    return false;\n  },\n\n  packageButtons() {\n    const routeName = Reaction.Router.getRouteName();\n\n    if (routeName !== \"dashboard\") {\n      const registryItems = Reaction.Apps({ provides: \"settings\", container: routeName });\n      const buttons = [];\n\n      for (const item of registryItems) {\n        if (Reaction.hasPermission(item.route, Meteor.userId())) {\n          let icon = item.icon;\n\n          if (!item.icon && item.provides === \"settings\") {\n            icon = \"gear\";\n          }\n\n          buttons.push({\n            href: item.route,\n            icon: icon,\n            tooltip: i18next.t(item.i18nKeyLabel, item.i18n),\n            tooltipPosition: \"left middle\",\n            onClick() {\n              Reaction.showActionView(item);\n            }\n          });\n        }\n      }\n\n      return buttons;\n    }\n    return [];\n  },\n\n  control: function () {\n    return Reaction.getActionView();\n  },\n\n  adminControlsClassname: function () {\n    if (Reaction.isActionViewOpen()) {\n      return \"show-settings\";\n    }\n    return \"\";\n  },\n\n  /**\n   * thisApp\n   * @return {Object} Registry entry for item\n   */\n  thisApp() {\n    const reactionApp = Packages.findOne({\n      \"registry.provides\": \"settings\",\n      \"registry.route\": Reaction.Router.getRouteName()\n    }, {\n      enabled: 1,\n      registry: 1,\n      name: 1,\n      route: 1\n    });\n\n    if (reactionApp) {\n      const settingsData = _.find(reactionApp.registry, function (item) {\n        return item.route === Reaction.Router.getRouteName() && item.provides === \"settings\";\n      });\n\n      return settingsData;\n    }\n    return reactionApp;\n  }\n});\n"]},"hash":"ba0836ff36091b7557a7eb5099b57ddaf43319ce"}
