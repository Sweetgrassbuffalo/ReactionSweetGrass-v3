{"metadata":{"usedHelpers":["objectWithoutProperties","extends","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"lodash/isFunction","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_isFunction"}]},{"source":"tether-tooltip","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Tooltip"}]},{"source":"meteor/templating","imported":["Template"],"specifiers":[{"kind":"named","imported":"Template","local":"Template"}]},{"source":"/client/api","imported":["i18next","i18nextDep"],"specifiers":[{"kind":"named","imported":"i18next","local":"i18next"},{"kind":"named","imported":"i18nextDep","local":"i18nextDep"}]},{"source":"/imports/plugins/core/ui/client/components","imported":["Icon"],"specifiers":[{"kind":"named","imported":"Icon","local":"Icon"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/core/ui/client/components/button/button.js","filenameRelative":"/imports/plugins/core/ui/client/components/button/button.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/core/ui/client/components/button/button.js"],"names":["Tooltip","Template","i18next","i18nextDep","Icon","button","onRendered","buttonElement","$","createTooltip","data","tooltip","destroy","target","position","tooltipPosition","content","t","i18nKeyTooltip","autorun","depend","helpers","iconComponent","elementProps","currentData","className","status","type","href","title","label","i18nKeyTitle","i18nKeyLabel","icon","toggle","onIcon","toggleOn","onClick","attrs","buttonAttributes","class","element","instance","itemKeyTitle","events","event"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GACA,AAAO,AAAa,AACpB,AAAS,AAAiB,AAC1B,AAAS,AAAS,AAAkB,AACpC,AAAS,AAAY,AAErB,AAAS,AAAO,AAAW,AAAY;AACrC,AAAM,gBAAgB,WAAA,AAAK,AAAE;AAA7B,AAAsB,AAAoB;;0CAE1C,AAAK,AAAgB,AAAM,AACzB;;OAAI,AAAK,AAAK,gBAAd,AAAuB,YACrB;QAAI,MAAK,KAAT,AAAkB,SAChB;UAAK,MAAL,AAAa,SAAb,AACD;;AACD;;YAAA,AAAK,cAAU,AAAI;gBAAQ,AACjB,AACR;kBAAU,MAAA,AAAK,KAAL,AAAU,mBAFK,AAEc,AACvC;iBAAS,QAAA,AAAQ,EAAE,MAAA,AAAK,KAAf,AAAoB,gBAAgB,MAAA,AAAK,KAAzC,AAA8C,YAAY,MAAA,AAAK,KAH1E,AAAe,AAAY,AAGoD,AAEhF;AAL4B,AACzB,OADa;AAMlB;AAXD,AAaA;;OAAA,AAAK,QAAQ,YAAM,AACjB;eAAA,AAAW,AACX;;UAAA,AAAK,AACN;AAHD,AAID;A,AApBD,AAsBA,AACA,AACA,IACA;AACA,AAAS,AAAO,AAAQ;AACtB,AAAgB;;AACd,SAAA,AAAO;AAFa;WAKtB;AAAe,AACb,AAAM,AAAO,AAAS,AACtB;AAAM;wBAAA,AAEJ,AAAW,AAAQ;AADnB,QADI;;eAAA,AAO4B,AAAU;QAPtC,AAEqB,AAEzB,AACA,AACA,AAAO;QANH;;;;QAMU;;QANV;;;;QAAA,AAMwB,AAAc,AAC1C,AAAU,AAAM;QAPZ,AAOoB;;AAPpB,AAUJ,AACA;AACA;AAZI,AAYD;AAZL,AAaI,wDAEJ;AAAO,cACL;0BAAkB,AAChB;AAAG,eADa,MACN;2BACV;AACA;AAHgB,AAGR,AAAqB,AAAO,AAAG,AAAU,AACjD,AAAM,AACN,AAAM,AAAM,AACV;;AAtBA,AAQJ;AAcI,AAAI,AAAC,AAAM,AACT;uBAAA,AAAO,AAAQ,AAChB;wBACF;;8BATe;aADb;AAtBa,AAsBpB,AAaD;;;AACD;AAAU,4BACR;QAAM,OAAO,SAAS,WAAtB,AAAa;qCACb;AAAA,AAAI,AAAK,AAAS,AAAQ,AACxB;qBAAA,AAAO,AACR;;8BACD;AAAA,AAAO,AACR;AA1CqB;4BA2CtB;QAAe,yBACb,AAAM,AAAO,AAAS,AAAW,AACjC;;QAAO,AAAK,UA7CQ,AA6CpB,AAAO,AAAqB,AAAK,AAClC;;iCACD;AAAQ,AACN,AAAM,AAAO,AAAS,AAAW,AACjC;;AAAO,aAjDa,AAiDpB,AAAO,AAAK,AAAS,AAAK,AAC3B;;AACD,AAAW,AACT,AAAM,AAAW,AAAS;AAjD3B;AAkDC,SAAM,OAAW;kDAEjB;QAAA,AAAI,SAAU,cACZ;AAAI,oBAAa,QAAjB,AAAI,AAAwB,AAC1B;AAAA,AAAO,AAAS,AAAS,AAC1B;AA1DP,AAAwB,AA4DlB,AAAO,AACR,AACF,AAGH,AAAS,AAAO,AAAO,AACrB,AAAoB,AAAO,AAAU,AACnC,AAAI,AAAS,AAAK,AAAS,AACzB,AAAS,AAAK,AAAQ,AACvB,AACF;AAjBC,AAAiB,AAAS,AAAK","file":"/imports/plugins/core/ui/client/components/button/button.js.map","sourcesContent":["import _ from \"lodash\";\nimport Tooltip from \"tether-tooltip\";\nimport { Template }  from \"meteor/templating\";\nimport { i18next, i18nextDep } from \"/client/api\";\nimport { Icon } from \"/imports/plugins/core/ui/client/components\";\n\nTemplate.button.onRendered(function () {\n  const buttonElement = this.$(\"button, a\")[0];\n\n  this.createTooltip = () => {\n    if (this.data.tooltip) {\n      if (this.tooltip) {\n        this.tooltip.destroy();\n      }\n      this.tooltip = new Tooltip({\n        target: buttonElement,\n        position: this.data.tooltipPosition || \"top left\",\n        content: i18next.t(this.data.i18nKeyTooltip, this.data.tooltip) || this.data.tooltip\n      });\n    }\n  };\n\n  this.autorun(() => {\n    i18nextDep.depend();\n    this.createTooltip();\n  });\n});\n\n/* eslint no-unused-vars: 1 */\n//\n// TODO review Template.button helpers for unused elementProps\n//\nTemplate.button.helpers({\n  iconComponent() {\n    return Icon;\n  },\n\n  elementProps() {\n    const data = Template.currentData();\n    const {\n      // Remove unneeded attributes\n      className, status, type, href,\n\n      // Pull out invalid HTML attributes / unuesed attributes\n      /* eslint-disable */\n      title, label, i18nKeyTitle, i18nKeyLabel, i18nKeyTooltip,\n      tooltip,  icon, toggle, onIcon, toggleOn, onClick,\n      /* eslint-enable */\n\n      // Get the rest of the properties and put them in attrs\n      // these will most likely be HTML attributes\n      ...attrs\n    } = data;\n\n    return {\n      buttonAttributes: {\n        ...attrs, // Spread the attrs into this object\n        // Then override any props from attrs with some better defaults\n        class: `rui button btn btn-${status} ${className}`,\n        href: href,\n        type: () => {\n          if (!href) {\n            return type || \"button\";\n          }\n        }\n      }\n    };\n  },\n  element() {\n    const data = Template.currentData();\n    if (data.type === \"link\") {\n      return \"uiLinkElement\";\n    }\n    return \"uiButtonElement\";\n  },\n  i18nKeyTitle() {\n    const data = Template.instance().data;\n    return data.itemKeyTitle || data.i18nKeyLabel;\n  },\n  title() {\n    const data = Template.instance().data;\n    return data.title || data.label;\n  },\n  toggleOn() {\n    const instance = Template.instance();\n    const toggleOn = instance.data.toggleOn;\n\n    if (toggleOn) {\n      if (_.isFunction(toggleOn)) {\n        return toggleOn(instance.data);\n      }\n\n      return toggleOn;\n    }\n  }\n});\n\nTemplate.button.events({\n  \"click .rui.button\"(event, instance) {\n    if (instance.data.onClick) {\n      instance.data.onClick(event);\n    }\n  }\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/core/ui/client/components/button/button.js.map","sourceFileName":"/imports/plugins/core/ui/client/components/button/button.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"button"},"ignored":false,"code":"var _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _objectWithoutProperties2 = require(\"babel-runtime/helpers/objectWithoutProperties\");\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _isFunction = void 0;\n\nmodule.importSync(\"lodash/isFunction\", {\n  \"default\": function (v) {\n    _isFunction = v;\n  }\n}, 0);\nvar Tooltip = void 0;\nmodule.importSync(\"tether-tooltip\", {\n  \"default\": function (v) {\n    Tooltip = v;\n  }\n}, 1);\nvar Template = void 0;\nmodule.importSync(\"meteor/templating\", {\n  Template: function (v) {\n    Template = v;\n  }\n}, 2);\nvar i18next = void 0,\n    i18nextDep = void 0;\nmodule.importSync(\"/client/api\", {\n  i18next: function (v) {\n    i18next = v;\n  },\n  i18nextDep: function (v) {\n    i18nextDep = v;\n  }\n}, 3);\nvar Icon = void 0;\nmodule.importSync(\"/imports/plugins/core/ui/client/components\", {\n  Icon: function (v) {\n    Icon = v;\n  }\n}, 4);\nTemplate.button.onRendered(function () {\n  var _this = this;\n\n  var buttonElement = this.$(\"button, a\")[0];\n\n  this.createTooltip = function () {\n    if (_this.data.tooltip) {\n      if (_this.tooltip) {\n        _this.tooltip.destroy();\n      }\n\n      _this.tooltip = new Tooltip({\n        target: buttonElement,\n        position: _this.data.tooltipPosition || \"top left\",\n        content: i18next.t(_this.data.i18nKeyTooltip, _this.data.tooltip) || _this.data.tooltip\n      });\n    }\n  };\n\n  this.autorun(function () {\n    i18nextDep.depend();\n\n    _this.createTooltip();\n  });\n}); /* eslint no-unused-vars: 1 */ //\n// TODO review Template.button helpers for unused elementProps\n//\n\nTemplate.button.helpers({\n  iconComponent: function () {\n    return Icon;\n  },\n  elementProps: function () {\n    var data = Template.currentData();\n    var className = data.className,\n        status = data.status,\n        type = data.type,\n        href = data.href,\n        title = data.title,\n        label = data.label,\n        i18nKeyTitle = data.i18nKeyTitle,\n        i18nKeyLabel = data.i18nKeyLabel,\n        i18nKeyTooltip = data.i18nKeyTooltip,\n        tooltip = data.tooltip,\n        icon = data.icon,\n        toggle = data.toggle,\n        onIcon = data.onIcon,\n        toggleOn = data.toggleOn,\n        onClick = data.onClick,\n        attrs = (0, _objectWithoutProperties3.default)(data, [\"className\", \"status\", \"type\", \"href\", \"title\", \"label\", \"i18nKeyTitle\", \"i18nKeyLabel\", \"i18nKeyTooltip\", \"tooltip\", \"icon\", \"toggle\", \"onIcon\", \"toggleOn\", \"onClick\"]);\n    return {\n      buttonAttributes: (0, _extends3.default)({}, attrs, {\n        // Spread the attrs into this object\n        // Then override any props from attrs with some better defaults\n        \"class\": \"rui button btn btn-\" + status + \" \" + className,\n        href: href,\n        type: function () {\n          if (!href) {\n            return type || \"button\";\n          }\n        }\n      })\n    };\n  },\n  element: function () {\n    var data = Template.currentData();\n\n    if (data.type === \"link\") {\n      return \"uiLinkElement\";\n    }\n\n    return \"uiButtonElement\";\n  },\n  i18nKeyTitle: function () {\n    var data = Template.instance().data;\n    return data.itemKeyTitle || data.i18nKeyLabel;\n  },\n  title: function () {\n    var data = Template.instance().data;\n    return data.title || data.label;\n  },\n  toggleOn: function () {\n    var instance = Template.instance();\n    var toggleOn = instance.data.toggleOn;\n\n    if (toggleOn) {\n      if (_isFunction(toggleOn)) {\n        return toggleOn(instance.data);\n      }\n\n      return toggleOn;\n    }\n  }\n});\nTemplate.button.events({\n  \"click .rui.button\": function (event, instance) {\n    if (instance.data.onClick) {\n      instance.data.onClick(event);\n    }\n  }\n});","map":{"version":3,"sources":["/imports/plugins/core/ui/client/components/button/button.js"],"names":["Tooltip","Template","i18next","i18nextDep","Icon","button","onRendered","buttonElement","$","createTooltip","data","tooltip","destroy","target","position","tooltipPosition","content","t","i18nKeyTooltip","autorun","depend","helpers","iconComponent","elementProps","currentData","className","status","type","href","title","label","i18nKeyTitle","i18nKeyLabel","icon","toggle","onIcon","toggleOn","onClick","attrs","buttonAttributes","class","element","instance","itemKeyTitle","events","event"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GACA,AAAO,AAAa,AACpB,AAAS,AAAiB,AAC1B,AAAS,AAAS,AAAkB,AACpC,AAAS,AAAY,AAErB,AAAS,AAAO,AAAW,AAAY;AACrC,AAAM,gBAAgB,WAAA,AAAK,AAAE;AAA7B,AAAsB,AAAoB;;0CAE1C,AAAK,AAAgB,AAAM,AACzB;;OAAI,AAAK,AAAK,gBAAd,AAAuB,YACrB;QAAI,MAAK,KAAT,AAAkB,SAChB;UAAK,MAAL,AAAa,SAAb,AACD;;AACD;;YAAA,AAAK,cAAU,AAAI;gBAAQ,AACjB,AACR;kBAAU,MAAA,AAAK,KAAL,AAAU,mBAFK,AAEc,AACvC;iBAAS,QAAA,AAAQ,EAAE,MAAA,AAAK,KAAf,AAAoB,gBAAgB,MAAA,AAAK,KAAzC,AAA8C,YAAY,MAAA,AAAK,KAH1E,AAAe,AAAY,AAGoD,AAEhF;AAL4B,AACzB,OADa;AAMlB;AAXD,AAaA;;OAAA,AAAK,QAAQ,YAAM,AACjB;eAAA,AAAW,AACX;;UAAA,AAAK,AACN;AAHD,AAID;A,AApBD,AAsBA,AACA,AACA,IACA;AACA,AAAS,AAAO,AAAQ;AACtB,AAAgB;;AACd,SAAA,AAAO;AAFa;WAKtB;AAAe,AACb,AAAM,AAAO,AAAS,AACtB;AAAM;wBAAA,AAEJ,AAAW,AAAQ;AADnB,QADI;;eAAA,AAO4B,AAAU;QAPtC,AAEqB,AAEzB,AACA,AACA,AAAO;QANH;;;;QAMU;;QANV;;;;QAAA,AAMwB,AAAc,AAC1C,AAAU,AAAM;QAPZ,AAOoB;;AAPpB,AAUJ,AACA;AACA;AAZI,AAYD;AAZL,AAaI,wDAEJ;AAAO,cACL;0BAAkB,AAChB;AAAG,eADa,MACN;2BACV;AACA;AAHgB,AAGR,AAAqB,AAAO,AAAG,AAAU,AACjD,AAAM,AACN,AAAM,AAAM,AACV;;AAtBA,AAQJ;AAcI,AAAI,AAAC,AAAM,AACT;uBAAA,AAAO,AAAQ,AAChB;wBACF;;8BATe;aADb;AAtBa,AAsBpB,AAaD;;;AACD;AAAU,4BACR;QAAM,OAAO,SAAS,WAAtB,AAAa;qCACb;AAAA,AAAI,AAAK,AAAS,AAAQ,AACxB;qBAAA,AAAO,AACR;;8BACD;AAAA,AAAO,AACR;AA1CqB;4BA2CtB;QAAe,yBACb,AAAM,AAAO,AAAS,AAAW,AACjC;;QAAO,AAAK,UA7CQ,AA6CpB,AAAO,AAAqB,AAAK,AAClC;;iCACD;AAAQ,AACN,AAAM,AAAO,AAAS,AAAW,AACjC;;AAAO,aAjDa,AAiDpB,AAAO,AAAK,AAAS,AAAK,AAC3B;;AACD,AAAW,AACT,AAAM,AAAW,AAAS;AAjD3B;AAkDC,SAAM,OAAW;kDAEjB;QAAA,AAAI,SAAU,cACZ;AAAI,oBAAa,QAAjB,AAAI,AAAwB,AAC1B;AAAA,AAAO,AAAS,AAAS,AAC1B;AA1DP,AAAwB,AA4DlB,AAAO,AACR,AACF,AAGH,AAAS,AAAO,AAAO,AACrB,AAAoB,AAAO,AAAU,AACnC,AAAI,AAAS,AAAK,AAAS,AACzB,AAAS,AAAK,AAAQ,AACvB,AACF;AAjBC,AAAiB,AAAS,AAAK","file":"/imports/plugins/core/ui/client/components/button/button.js.map","sourcesContent":["import _ from \"lodash\";\nimport Tooltip from \"tether-tooltip\";\nimport { Template }  from \"meteor/templating\";\nimport { i18next, i18nextDep } from \"/client/api\";\nimport { Icon } from \"/imports/plugins/core/ui/client/components\";\n\nTemplate.button.onRendered(function () {\n  const buttonElement = this.$(\"button, a\")[0];\n\n  this.createTooltip = () => {\n    if (this.data.tooltip) {\n      if (this.tooltip) {\n        this.tooltip.destroy();\n      }\n      this.tooltip = new Tooltip({\n        target: buttonElement,\n        position: this.data.tooltipPosition || \"top left\",\n        content: i18next.t(this.data.i18nKeyTooltip, this.data.tooltip) || this.data.tooltip\n      });\n    }\n  };\n\n  this.autorun(() => {\n    i18nextDep.depend();\n    this.createTooltip();\n  });\n});\n\n/* eslint no-unused-vars: 1 */\n//\n// TODO review Template.button helpers for unused elementProps\n//\nTemplate.button.helpers({\n  iconComponent() {\n    return Icon;\n  },\n\n  elementProps() {\n    const data = Template.currentData();\n    const {\n      // Remove unneeded attributes\n      className, status, type, href,\n\n      // Pull out invalid HTML attributes / unuesed attributes\n      /* eslint-disable */\n      title, label, i18nKeyTitle, i18nKeyLabel, i18nKeyTooltip,\n      tooltip,  icon, toggle, onIcon, toggleOn, onClick,\n      /* eslint-enable */\n\n      // Get the rest of the properties and put them in attrs\n      // these will most likely be HTML attributes\n      ...attrs\n    } = data;\n\n    return {\n      buttonAttributes: {\n        ...attrs, // Spread the attrs into this object\n        // Then override any props from attrs with some better defaults\n        class: `rui button btn btn-${status} ${className}`,\n        href: href,\n        type: () => {\n          if (!href) {\n            return type || \"button\";\n          }\n        }\n      }\n    };\n  },\n  element() {\n    const data = Template.currentData();\n    if (data.type === \"link\") {\n      return \"uiLinkElement\";\n    }\n    return \"uiButtonElement\";\n  },\n  i18nKeyTitle() {\n    const data = Template.instance().data;\n    return data.itemKeyTitle || data.i18nKeyLabel;\n  },\n  title() {\n    const data = Template.instance().data;\n    return data.title || data.label;\n  },\n  toggleOn() {\n    const instance = Template.instance();\n    const toggleOn = instance.data.toggleOn;\n\n    if (toggleOn) {\n      if (_.isFunction(toggleOn)) {\n        return toggleOn(instance.data);\n      }\n\n      return toggleOn;\n    }\n  }\n});\n\nTemplate.button.events({\n  \"click .rui.button\"(event, instance) {\n    if (instance.data.onClick) {\n      instance.data.onClick(event);\n    }\n  }\n});\n"]},"hash":"d1f94aa48eb7063ff9dc125d57f9e4086fb5ead0"}
