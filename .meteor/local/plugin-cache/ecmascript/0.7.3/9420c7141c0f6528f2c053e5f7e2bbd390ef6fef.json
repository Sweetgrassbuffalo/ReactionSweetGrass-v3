{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"lodash/includes","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_includes"}]},{"source":"lodash/find","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_find"}]},{"source":"lodash/every","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_every"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/tracker","imported":["Tracker"],"specifiers":[{"kind":"named","imported":"Tracker","local":"Tracker"}]},{"source":"meteor/templating","imported":["Template"],"specifiers":[{"kind":"named","imported":"Template","local":"Template"}]},{"source":"/client/api","imported":["i18next","Reaction"],"specifiers":[{"kind":"named","imported":"i18next","local":"i18next"},{"kind":"named","imported":"Reaction","local":"Reaction"}]},{"source":"/lib/collections","imported":["Orders"],"specifiers":[{"kind":"named","imported":"Orders","local":"Orders"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/core/orders/client/templates/workflow/shippingTracking.js","filenameRelative":"/imports/plugins/core/orders/client/templates/workflow/shippingTracking.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/core/orders/client/templates/workflow/shippingTracking.js"],"names":["Meteor","Tracker","Template","i18next","Reaction","Orders","coreOrderShippingTracking","onCreated","template","instance","currentData","orderDep","Dependency","showTrackingEditForm","ReactiveVar","getOrder","orderId","shipmentId","depend","findOne","autorun","order","fulfillment","_id","events","$","removeClass","call","result","error","addClass","Alerts","toast","t","err","timeout","shipping","userId","type","prefix","getShopPrefix","url","sms","event","preventDefault","stopPropagation","shipment","tracking","target","trackingNumber","value","changed","set","helpers","printableLabels","shippingLabelUrl","customsLabelUrl","isShipped","shippedItems","items","shipmentItem","fullItem","orderItem","workflow","isNotCanceled","canceledItems","status","isCompleted","completedItems","editTracking","settings","getPackageSettings","flatRates","enabled","editing","get","view","shipmentMethod","carrier","shipmentReady","packed"],"mappings":"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","file":"/imports/plugins/core/orders/client/templates/workflow/shippingTracking.js.map","sourcesContent":["import _ from \"lodash\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Tracker } from \"meteor/tracker\";\nimport { Template } from \"meteor/templating\";\nimport { i18next, Reaction } from \"/client/api\";\nimport { Orders } from \"/lib/collections\";\n\nTemplate.coreOrderShippingTracking.onCreated(() => {\n  const template = Template.instance();\n  const currentData = Template.currentData();\n\n  template.orderDep = new Tracker.Dependency;\n  template.showTrackingEditForm = ReactiveVar(false);\n\n  function getOrder(orderId, shipmentId) {\n    template.orderDep.depend();\n    return Orders.findOne({\n      \"_id\": orderId,\n      \"shipping._id\": shipmentId\n    });\n  }\n\n  Tracker.autorun(() => {\n    template.order = getOrder(currentData.orderId, currentData.fulfillment._id);\n  });\n});\n\n/**\n * coreShipmentShipped events\n *\n */\nTemplate.coreOrderShippingTracking.events({\n  \"click [data-event-action=refresh-shipping]\": function () {\n    const instance = Template.instance();\n    instance.$(\"#btn-processing\").removeClass(\"hidden\");\n    const orderId = Template.instance().order._id;\n    Meteor.call(\"shipping/status/refresh\", orderId, (result) => {\n      if (result && result.error) {\n        instance.$(\"#btn-processing\").addClass(\"hidden\");\n        Alerts.toast(i18next.t(\"orderShipping.labelError\", { err: result.error }), \"error\", { timeout: 7000 });\n      }\n    });\n  },\n  \"click [data-event-action=shipmentShipped]\": function () {\n    const template = Template.instance();\n    Meteor.call(\"orders/shipmentShipped\", template.order, template.order.shipping[0], (err) => {\n      if (err) {\n        Alerts.toast(i18next.t(\"mail.alerts.cantSendEmail\"), \"error\");\n      } else {\n        Alerts.toast(i18next.t(\"mail.alerts.emailSent\"), \"success\");\n      }\n    });\n\n    // send notification to order owner\n    const userId = template.order.userId;\n    const type = \"orderShipped\";\n    const prefix = Reaction.getShopPrefix();\n    const url = `${prefix}/notifications`;\n    const sms = true;\n    Meteor.call(\"notification/send\", userId, type, url, sms);\n\n    // Meteor.call(\"workflow/pushOrderShipmentWorkflow\", \"coreOrderShipmentWorkflow\", \"orderShipped\", this._id);\n  },\n\n  \"click [data-event-action=resendNotification]\": function () {\n    const template = Template.instance();\n    Meteor.call(\"orders/sendNotification\", template.order, \"shipped\", (err) => {\n      if (err) {\n        Alerts.toast(i18next.t(\"mail.alerts.cantSendEmail\"), \"error\");\n      } else {\n        Alerts.toast(i18next.t(\"mail.alerts.emailSent\"), \"success\");\n      }\n    });\n  },\n\n  \"click [data-event-action=shipmentPacked]\": () => {\n    const template = Template.instance();\n\n    Meteor.call(\"orders/shipmentPacked\", template.order, template.order.shipping[0], true);\n  },\n\n  \"submit form[name=addTrackingForm]\": (event, template) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const currentData = Template.currentData();\n    const order = template.order;\n    const shipment = currentData.fulfillment;\n    const tracking = event.target.trackingNumber.value;\n\n    Meteor.call(\"orders/updateShipmentTracking\", order, shipment, tracking,\n      (error) => {\n        if (!error) {\n          template.orderDep.changed();\n          template.showTrackingEditForm.set(false);\n        }\n      });\n  },\n  \"click [data-event-action=editTracking]\": (event, template) => {\n    template.showTrackingEditForm.set(true);\n  }\n});\n\nTemplate.coreOrderShippingTracking.helpers({\n  printableLabels() {\n    const { shippingLabelUrl, customsLabelUrl } = Template.instance().order.shipping[0];\n    if (shippingLabelUrl || customsLabelUrl) {\n      return { shippingLabelUrl, customsLabelUrl };\n    }\n\n    return false;\n  },\n  isShipped() {\n    const currentData = Template.currentData();\n    const order = Template.instance().order;\n\n    const shippedItems = _.every(currentData.fulfillment.items, (shipmentItem) => {\n      const fullItem = _.find(order.items, (orderItem) => {\n        if (orderItem._id === shipmentItem._id) {\n          return true;\n        }\n      });\n\n      return !_.includes(fullItem.workflow.workflow, \"coreOrderItemWorkflow/shipped\");\n    });\n\n    return shippedItems;\n  },\n\n  isNotCanceled() {\n    const currentData = Template.currentData();\n    const order = Template.instance().order;\n\n    const canceledItems = _.every(currentData.fulfillment.items, (shipmentItem) => {\n      const fullItem = _.find(order.items, (orderItem) => {\n        if (orderItem._id === shipmentItem._id) {\n          return true;\n        }\n      });\n\n      return fullItem.workflow.status !== \"coreOrderItemWorkflow/canceled\";\n    });\n\n    return canceledItems;\n  },\n\n  isCompleted() {\n    const currentData = Template.currentData();\n    const order = Template.instance().order;\n\n    const completedItems = _.every(currentData.fulfillment.items, (shipmentItem) => {\n      const fullItem = _.find(order.items, (orderItem) => {\n        if (orderItem._id === shipmentItem._id) {\n          return true;\n        }\n      });\n\n      return _.includes(fullItem.workflow.workflow, \"coreOrderItemWorkflow/completed\");\n    });\n\n    return completedItems;\n  },\n\n  editTracking() {\n    // TODO move to a method where we loop package settings\n    // to determine if this feature is enabled.\n    // somewhere in here is where I wish this was converted to React!\n    const { settings } = Reaction.getPackageSettings(\"reaction-shipping-rates\");\n    // TODO: future proof by not using flatRates, but rather look for editable:true\n    if (settings && settings.flatRates.enabled === true) {\n      const template = Template.instance();\n      const shipment = template.order.shipping[0];\n      const editing = template.showTrackingEditForm.get();\n      let view = false;\n      if (editing === true || !shipment.tracking && editing === false) {\n        view = true;\n      }\n      // TODO modularize tracking more, editable to settings\n      if (view && shipment.shipmentMethod.carrier === \"Flat Rate\") {\n        return true;\n      }\n    }\n    return false;\n  },\n  order() {\n    return Template.instance().order;\n  },\n  shipment() {\n    return Template.instance().order.shipping[0];\n  },\n  shipmentReady() {\n    const order = Template.instance().order;\n    const shipment = order.shipping[0];\n\n    return shipment.packed && shipment.tracking;\n  }\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/core/orders/client/templates/workflow/shippingTracking.js.map","sourceFileName":"/imports/plugins/core/orders/client/templates/workflow/shippingTracking.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"shippingTracking"},"ignored":false,"code":"var _includes = void 0;\n\nmodule.importSync(\"lodash/includes\", {\n  \"default\": function (v) {\n    _includes = v;\n  }\n}, 0);\n\nvar _find = void 0;\n\nmodule.importSync(\"lodash/find\", {\n  \"default\": function (v) {\n    _find = v;\n  }\n}, 1);\n\nvar _every = void 0;\n\nmodule.importSync(\"lodash/every\", {\n  \"default\": function (v) {\n    _every = v;\n  }\n}, 2);\nvar Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 3);\nvar Tracker = void 0;\nmodule.importSync(\"meteor/tracker\", {\n  Tracker: function (v) {\n    Tracker = v;\n  }\n}, 4);\nvar Template = void 0;\nmodule.importSync(\"meteor/templating\", {\n  Template: function (v) {\n    Template = v;\n  }\n}, 5);\nvar i18next = void 0,\n    Reaction = void 0;\nmodule.importSync(\"/client/api\", {\n  i18next: function (v) {\n    i18next = v;\n  },\n  Reaction: function (v) {\n    Reaction = v;\n  }\n}, 6);\nvar Orders = void 0;\nmodule.importSync(\"/lib/collections\", {\n  Orders: function (v) {\n    Orders = v;\n  }\n}, 7);\nTemplate.coreOrderShippingTracking.onCreated(function () {\n  var template = Template.instance();\n  var currentData = Template.currentData();\n  template.orderDep = new Tracker.Dependency();\n  template.showTrackingEditForm = ReactiveVar(false);\n\n  function getOrder(orderId, shipmentId) {\n    template.orderDep.depend();\n    return Orders.findOne({\n      \"_id\": orderId,\n      \"shipping._id\": shipmentId\n    });\n  }\n\n  Tracker.autorun(function () {\n    template.order = getOrder(currentData.orderId, currentData.fulfillment._id);\n  });\n}); /**\n     * coreShipmentShipped events\n     *\n     */\nTemplate.coreOrderShippingTracking.events({\n  \"click [data-event-action=refresh-shipping]\": function () {\n    var instance = Template.instance();\n    instance.$(\"#btn-processing\").removeClass(\"hidden\");\n\n    var orderId = Template.instance().order._id;\n\n    Meteor.call(\"shipping/status/refresh\", orderId, function (result) {\n      if (result && result.error) {\n        instance.$(\"#btn-processing\").addClass(\"hidden\");\n        Alerts.toast(i18next.t(\"orderShipping.labelError\", {\n          err: result.error\n        }), \"error\", {\n          timeout: 7000\n        });\n      }\n    });\n  },\n  \"click [data-event-action=shipmentShipped]\": function () {\n    var template = Template.instance();\n    Meteor.call(\"orders/shipmentShipped\", template.order, template.order.shipping[0], function (err) {\n      if (err) {\n        Alerts.toast(i18next.t(\"mail.alerts.cantSendEmail\"), \"error\");\n      } else {\n        Alerts.toast(i18next.t(\"mail.alerts.emailSent\"), \"success\");\n      }\n    }); // send notification to order owner\n\n    var userId = template.order.userId;\n    var type = \"orderShipped\";\n    var prefix = Reaction.getShopPrefix();\n    var url = prefix + \"/notifications\";\n    var sms = true;\n    Meteor.call(\"notification/send\", userId, type, url, sms); // Meteor.call(\"workflow/pushOrderShipmentWorkflow\", \"coreOrderShipmentWorkflow\", \"orderShipped\", this._id);\n  },\n  \"click [data-event-action=resendNotification]\": function () {\n    var template = Template.instance();\n    Meteor.call(\"orders/sendNotification\", template.order, \"shipped\", function (err) {\n      if (err) {\n        Alerts.toast(i18next.t(\"mail.alerts.cantSendEmail\"), \"error\");\n      } else {\n        Alerts.toast(i18next.t(\"mail.alerts.emailSent\"), \"success\");\n      }\n    });\n  },\n  \"click [data-event-action=shipmentPacked]\": function () {\n    var template = Template.instance();\n    Meteor.call(\"orders/shipmentPacked\", template.order, template.order.shipping[0], true);\n  },\n  \"submit form[name=addTrackingForm]\": function (event, template) {\n    event.preventDefault();\n    event.stopPropagation();\n    var currentData = Template.currentData();\n    var order = template.order;\n    var shipment = currentData.fulfillment;\n    var tracking = event.target.trackingNumber.value;\n    Meteor.call(\"orders/updateShipmentTracking\", order, shipment, tracking, function (error) {\n      if (!error) {\n        template.orderDep.changed();\n        template.showTrackingEditForm.set(false);\n      }\n    });\n  },\n  \"click [data-event-action=editTracking]\": function (event, template) {\n    template.showTrackingEditForm.set(true);\n  }\n});\nTemplate.coreOrderShippingTracking.helpers({\n  printableLabels: function () {\n    var _Template$instance$or = Template.instance().order.shipping[0],\n        shippingLabelUrl = _Template$instance$or.shippingLabelUrl,\n        customsLabelUrl = _Template$instance$or.customsLabelUrl;\n\n    if (shippingLabelUrl || customsLabelUrl) {\n      return {\n        shippingLabelUrl: shippingLabelUrl,\n        customsLabelUrl: customsLabelUrl\n      };\n    }\n\n    return false;\n  },\n  isShipped: function () {\n    var currentData = Template.currentData();\n    var order = Template.instance().order;\n\n    var shippedItems = _every(currentData.fulfillment.items, function (shipmentItem) {\n      var fullItem = _find(order.items, function (orderItem) {\n        if (orderItem._id === shipmentItem._id) {\n          return true;\n        }\n      });\n\n      return !_includes(fullItem.workflow.workflow, \"coreOrderItemWorkflow/shipped\");\n    });\n\n    return shippedItems;\n  },\n  isNotCanceled: function () {\n    var currentData = Template.currentData();\n    var order = Template.instance().order;\n\n    var canceledItems = _every(currentData.fulfillment.items, function (shipmentItem) {\n      var fullItem = _find(order.items, function (orderItem) {\n        if (orderItem._id === shipmentItem._id) {\n          return true;\n        }\n      });\n\n      return fullItem.workflow.status !== \"coreOrderItemWorkflow/canceled\";\n    });\n\n    return canceledItems;\n  },\n  isCompleted: function () {\n    var currentData = Template.currentData();\n    var order = Template.instance().order;\n\n    var completedItems = _every(currentData.fulfillment.items, function (shipmentItem) {\n      var fullItem = _find(order.items, function (orderItem) {\n        if (orderItem._id === shipmentItem._id) {\n          return true;\n        }\n      });\n\n      return _includes(fullItem.workflow.workflow, \"coreOrderItemWorkflow/completed\");\n    });\n\n    return completedItems;\n  },\n  editTracking: function () {\n    // TODO move to a method where we loop package settings\n    // to determine if this feature is enabled.\n    // somewhere in here is where I wish this was converted to React!\n    var _Reaction$getPackageS = Reaction.getPackageSettings(\"reaction-shipping-rates\"),\n        settings = _Reaction$getPackageS.settings; // TODO: future proof by not using flatRates, but rather look for editable:true\n\n\n    if (settings && settings.flatRates.enabled === true) {\n      var template = Template.instance();\n      var shipment = template.order.shipping[0];\n      var editing = template.showTrackingEditForm.get();\n      var view = false;\n\n      if (editing === true || !shipment.tracking && editing === false) {\n        view = true;\n      } // TODO modularize tracking more, editable to settings\n\n\n      if (view && shipment.shipmentMethod.carrier === \"Flat Rate\") {\n        return true;\n      }\n    }\n\n    return false;\n  },\n  order: function () {\n    return Template.instance().order;\n  },\n  shipment: function () {\n    return Template.instance().order.shipping[0];\n  },\n  shipmentReady: function () {\n    var order = Template.instance().order;\n    var shipment = order.shipping[0];\n    return shipment.packed && shipment.tracking;\n  }\n});","map":{"version":3,"sources":["/imports/plugins/core/orders/client/templates/workflow/shippingTracking.js"],"names":["Meteor","Tracker","Template","i18next","Reaction","Orders","coreOrderShippingTracking","onCreated","template","instance","currentData","orderDep","Dependency","showTrackingEditForm","ReactiveVar","getOrder","orderId","shipmentId","depend","findOne","autorun","order","fulfillment","_id","events","$","removeClass","call","result","error","addClass","Alerts","toast","t","err","timeout","shipping","userId","type","prefix","getShopPrefix","url","sms","event","preventDefault","stopPropagation","shipment","tracking","target","trackingNumber","value","changed","set","helpers","printableLabels","shippingLabelUrl","customsLabelUrl","isShipped","shippedItems","items","shipmentItem","fullItem","orderItem","workflow","isNotCanceled","canceledItems","status","isCompleted","completedItems","editTracking","settings","getPackageSettings","flatRates","enabled","editing","get","view","shipmentMethod","carrier","shipmentReady","packed"],"mappings":"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","file":"/imports/plugins/core/orders/client/templates/workflow/shippingTracking.js.map","sourcesContent":["import _ from \"lodash\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Tracker } from \"meteor/tracker\";\nimport { Template } from \"meteor/templating\";\nimport { i18next, Reaction } from \"/client/api\";\nimport { Orders } from \"/lib/collections\";\n\nTemplate.coreOrderShippingTracking.onCreated(() => {\n  const template = Template.instance();\n  const currentData = Template.currentData();\n\n  template.orderDep = new Tracker.Dependency;\n  template.showTrackingEditForm = ReactiveVar(false);\n\n  function getOrder(orderId, shipmentId) {\n    template.orderDep.depend();\n    return Orders.findOne({\n      \"_id\": orderId,\n      \"shipping._id\": shipmentId\n    });\n  }\n\n  Tracker.autorun(() => {\n    template.order = getOrder(currentData.orderId, currentData.fulfillment._id);\n  });\n});\n\n/**\n * coreShipmentShipped events\n *\n */\nTemplate.coreOrderShippingTracking.events({\n  \"click [data-event-action=refresh-shipping]\": function () {\n    const instance = Template.instance();\n    instance.$(\"#btn-processing\").removeClass(\"hidden\");\n    const orderId = Template.instance().order._id;\n    Meteor.call(\"shipping/status/refresh\", orderId, (result) => {\n      if (result && result.error) {\n        instance.$(\"#btn-processing\").addClass(\"hidden\");\n        Alerts.toast(i18next.t(\"orderShipping.labelError\", { err: result.error }), \"error\", { timeout: 7000 });\n      }\n    });\n  },\n  \"click [data-event-action=shipmentShipped]\": function () {\n    const template = Template.instance();\n    Meteor.call(\"orders/shipmentShipped\", template.order, template.order.shipping[0], (err) => {\n      if (err) {\n        Alerts.toast(i18next.t(\"mail.alerts.cantSendEmail\"), \"error\");\n      } else {\n        Alerts.toast(i18next.t(\"mail.alerts.emailSent\"), \"success\");\n      }\n    });\n\n    // send notification to order owner\n    const userId = template.order.userId;\n    const type = \"orderShipped\";\n    const prefix = Reaction.getShopPrefix();\n    const url = `${prefix}/notifications`;\n    const sms = true;\n    Meteor.call(\"notification/send\", userId, type, url, sms);\n\n    // Meteor.call(\"workflow/pushOrderShipmentWorkflow\", \"coreOrderShipmentWorkflow\", \"orderShipped\", this._id);\n  },\n\n  \"click [data-event-action=resendNotification]\": function () {\n    const template = Template.instance();\n    Meteor.call(\"orders/sendNotification\", template.order, \"shipped\", (err) => {\n      if (err) {\n        Alerts.toast(i18next.t(\"mail.alerts.cantSendEmail\"), \"error\");\n      } else {\n        Alerts.toast(i18next.t(\"mail.alerts.emailSent\"), \"success\");\n      }\n    });\n  },\n\n  \"click [data-event-action=shipmentPacked]\": () => {\n    const template = Template.instance();\n\n    Meteor.call(\"orders/shipmentPacked\", template.order, template.order.shipping[0], true);\n  },\n\n  \"submit form[name=addTrackingForm]\": (event, template) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const currentData = Template.currentData();\n    const order = template.order;\n    const shipment = currentData.fulfillment;\n    const tracking = event.target.trackingNumber.value;\n\n    Meteor.call(\"orders/updateShipmentTracking\", order, shipment, tracking,\n      (error) => {\n        if (!error) {\n          template.orderDep.changed();\n          template.showTrackingEditForm.set(false);\n        }\n      });\n  },\n  \"click [data-event-action=editTracking]\": (event, template) => {\n    template.showTrackingEditForm.set(true);\n  }\n});\n\nTemplate.coreOrderShippingTracking.helpers({\n  printableLabels() {\n    const { shippingLabelUrl, customsLabelUrl } = Template.instance().order.shipping[0];\n    if (shippingLabelUrl || customsLabelUrl) {\n      return { shippingLabelUrl, customsLabelUrl };\n    }\n\n    return false;\n  },\n  isShipped() {\n    const currentData = Template.currentData();\n    const order = Template.instance().order;\n\n    const shippedItems = _.every(currentData.fulfillment.items, (shipmentItem) => {\n      const fullItem = _.find(order.items, (orderItem) => {\n        if (orderItem._id === shipmentItem._id) {\n          return true;\n        }\n      });\n\n      return !_.includes(fullItem.workflow.workflow, \"coreOrderItemWorkflow/shipped\");\n    });\n\n    return shippedItems;\n  },\n\n  isNotCanceled() {\n    const currentData = Template.currentData();\n    const order = Template.instance().order;\n\n    const canceledItems = _.every(currentData.fulfillment.items, (shipmentItem) => {\n      const fullItem = _.find(order.items, (orderItem) => {\n        if (orderItem._id === shipmentItem._id) {\n          return true;\n        }\n      });\n\n      return fullItem.workflow.status !== \"coreOrderItemWorkflow/canceled\";\n    });\n\n    return canceledItems;\n  },\n\n  isCompleted() {\n    const currentData = Template.currentData();\n    const order = Template.instance().order;\n\n    const completedItems = _.every(currentData.fulfillment.items, (shipmentItem) => {\n      const fullItem = _.find(order.items, (orderItem) => {\n        if (orderItem._id === shipmentItem._id) {\n          return true;\n        }\n      });\n\n      return _.includes(fullItem.workflow.workflow, \"coreOrderItemWorkflow/completed\");\n    });\n\n    return completedItems;\n  },\n\n  editTracking() {\n    // TODO move to a method where we loop package settings\n    // to determine if this feature is enabled.\n    // somewhere in here is where I wish this was converted to React!\n    const { settings } = Reaction.getPackageSettings(\"reaction-shipping-rates\");\n    // TODO: future proof by not using flatRates, but rather look for editable:true\n    if (settings && settings.flatRates.enabled === true) {\n      const template = Template.instance();\n      const shipment = template.order.shipping[0];\n      const editing = template.showTrackingEditForm.get();\n      let view = false;\n      if (editing === true || !shipment.tracking && editing === false) {\n        view = true;\n      }\n      // TODO modularize tracking more, editable to settings\n      if (view && shipment.shipmentMethod.carrier === \"Flat Rate\") {\n        return true;\n      }\n    }\n    return false;\n  },\n  order() {\n    return Template.instance().order;\n  },\n  shipment() {\n    return Template.instance().order.shipping[0];\n  },\n  shipmentReady() {\n    const order = Template.instance().order;\n    const shipment = order.shipping[0];\n\n    return shipment.packed && shipment.tracking;\n  }\n});\n"]},"hash":"9420c7141c0f6528f2c053e5f7e2bbd390ef6fef"}
