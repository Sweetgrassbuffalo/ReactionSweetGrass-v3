{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/aldeed:template-extension/lib/template-parent-data-function.js","filenameRelative":"/packages/aldeed:template-extension/lib/template-parent-data-function.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/aldeed:template-extension/lib/template-parent-data-function.js.map","sourceFileName":"/packages/aldeed:template-extension/lib/template-parent-data-function.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"template-parent-data-function"},"ignored":false,"code":"// Allow to specify a function to test parent data for at various\n// levels, instead of specifying a fixed number of levels to traverse.\nvar originalParentData = Blaze._parentData;\n\nBlaze._parentData = function (height, _functionWrapped) {\n  // If height is not a function, simply call original implementation.\n  if (typeof height !== 'function') return originalParentData(height, _functionWrapped);\n  var theWith = Blaze.getView('with');\n\n  var test = function () {\n    return height(theWith.dataVar.get());\n  };\n\n  while (theWith) {\n    if (Tracker.nonreactive(test)) break;\n    theWith = Blaze.getView(theWith, 'with');\n  } // _functionWrapped is internal and will not be\n  // specified with non numeric height, so we ignore it.\n\n\n  if (!theWith) return null; // This registers a Tracker dependency.\n\n  return theWith.dataVar.get();\n};\n\nTemplate.parentData = Blaze._parentData;","map":{"version":3,"sources":["/packages/aldeed:template-extension/lib/template-parent-data-function.js"],"names":["originalParentData","Blaze","_parentData","height","_functionWrapped","theWith","getView","test","dataVar","get","Tracker","nonreactive","Template","parentData"],"mappings":"AAAA;AACA;AACA,IAAIA,qBAAqBC,MAAMC,WAA/B;;AACAD,MAAMC,WAAN,GAAoB,UAAUC,MAAV,EAAkBC,gBAAlB,EAAoC;AACtD;AACA,MAAI,OAAOD,MAAP,KAAkB,UAAtB,EAAkC,OAAOH,mBAAmBG,MAAnB,EAA2BC,gBAA3B,CAAP;AAElC,MAAIC,UAAUJ,MAAMK,OAAN,CAAc,MAAd,CAAd;;AACA,MAAIC,OAAO,YAAM;AAAE,WAAOJ,OAAOE,QAAQG,OAAR,CAAgBC,GAAhB,EAAP,CAAP;AAAuC,GAA1D;;AACA,SAAOJ,OAAP,EAAgB;AACd,QAAIK,QAAQC,WAAR,CAAoBJ,IAApB,CAAJ,EAA+B;AAC/BF,cAAUJ,MAAMK,OAAN,CAAcD,OAAd,EAAuB,MAAvB,CAAV;AACD,GATqD,CAWtD;AACA;;;AACA,MAAI,CAACA,OAAL,EAAc,OAAO,IAAP,CAbwC,CActD;;AACA,SAAOA,QAAQG,OAAR,CAAgBC,GAAhB,EAAP;AACD,CAhBD;;AAkBAG,SAASC,UAAT,GAAsBZ,MAAMC,WAA5B","file":"/packages/aldeed:template-extension/lib/template-parent-data-function.js.map","sourcesContent":["// Allow to specify a function to test parent data for at various\n// levels, instead of specifying a fixed number of levels to traverse.\nvar originalParentData = Blaze._parentData;\nBlaze._parentData = function (height, _functionWrapped) {\n  // If height is not a function, simply call original implementation.\n  if (typeof height !== 'function') return originalParentData(height, _functionWrapped);\n\n  var theWith = Blaze.getView('with');\n  var test = () => { return height(theWith.dataVar.get()); };\n  while (theWith) {\n    if (Tracker.nonreactive(test)) break;\n    theWith = Blaze.getView(theWith, 'with');\n  }\n\n  // _functionWrapped is internal and will not be\n  // specified with non numeric height, so we ignore it.\n  if (!theWith) return null;\n  // This registers a Tracker dependency.\n  return theWith.dataVar.get();\n};\n\nTemplate.parentData = Blaze._parentData;\n"]},"hash":"f29572749c7812cde8be7f504b36a9568c484f6a"}
