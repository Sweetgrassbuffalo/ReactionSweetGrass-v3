{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"/client/api","imported":["Reaction"],"specifiers":[{"kind":"named","imported":"Reaction","local":"Reaction"}]},{"source":"/lib/api","imported":["ReactionProduct"],"specifiers":[{"kind":"named","imported":"ReactionProduct","local":"ReactionProduct"}]},{"source":"/lib/api/products","imported":["applyProductRevision"],"specifiers":[{"kind":"named","imported":"applyProductRevision","local":"applyProductRevision"}]},{"source":"/lib/collections","imported":["Products","Tags"],"specifiers":[{"kind":"named","imported":"Products","local":"Products"},{"kind":"named","imported":"Tags","local":"Tags"}]},{"source":"meteor/session","imported":["Session"],"specifiers":[{"kind":"named","imported":"Session","local":"Session"}]},{"source":"meteor/templating","imported":["Template"],"specifiers":[{"kind":"named","imported":"Template","local":"Template"}]},{"source":"/client/config/defaults","imported":["ITEMS_INCREMENT"],"specifiers":[{"kind":"named","imported":"ITEMS_INCREMENT","local":"ITEMS_INCREMENT"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/included/product-variant/client/templates/products/products.js","filenameRelative":"/imports/plugins/included/product-variant/client/templates/products/products.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/included/product-variant/client/templates/products/products.js"],"names":["Reaction","ReactionProduct","applyProductRevision","Products","Tags","Session","Template","ITEMS_INCREMENT","loadMoreProducts","threshold","target","$","scrollContainer","length","window","scrollTop","height","offset","top","data","set","get","products","onCreated","ReactiveVar","state","ReactiveDict","setDefault","initialLoad","slug","canLoadMoreProducts","prerenderReady","autorun","Router","getParam","tag","findOne","scrollLimit","tags","_id","equals","queryParams","Object","assign","current","productsSubscription","subscribe","ready","currentTag","getTag","productCursor","find","ancestors","type","$in","sort","createdAt","map","product","sortedProducts","sortProducts","count","isActionViewOpen","onRendered","on","helpers","id","instance","isInitialLoad","isReady","subscriptionsReady","events","hide","show","go","handle","event","preventDefault"],"mappings":"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","file":"/imports/plugins/included/product-variant/client/templates/products/products.js.map","sourcesContent":["import { Reaction } from \"/client/api\";\nimport { ReactionProduct } from \"/lib/api\";\nimport { applyProductRevision } from \"/lib/api/products\";\nimport { Products, Tags } from \"/lib/collections\";\nimport { Session } from \"meteor/session\";\nimport { Template } from \"meteor/templating\";\nimport { ITEMS_INCREMENT } from \"/client/config/defaults\";\n\n/**\n * loadMoreProducts\n * @summary whenever #productScrollLimitLoader becomes visible, retrieve more results\n * this basically runs this:\n * Session.set('productScrollLimit', Session.get('productScrollLimit') + ITEMS_INCREMENT);\n * @return {undefined}\n */\nfunction loadMoreProducts() {\n  let threshold;\n  const target = $(\"#productScrollLimitLoader\");\n  let scrollContainer = $(\"#reactionAppContainer\");\n\n  if (scrollContainer.length === 0) {\n    scrollContainer = $(window);\n  }\n\n  if (target.length) {\n    threshold = scrollContainer.scrollTop() + scrollContainer.height() - target.height();\n\n    if (target.offset().top < threshold) {\n      if (!target.data(\"visible\")) {\n        target.data(\"productScrollLimit\", true);\n        Session.set(\"productScrollLimit\", Session.get(\"productScrollLimit\") + ITEMS_INCREMENT || 24);\n      }\n    } else {\n      if (target.data(\"visible\")) {\n        target.data(\"visible\", false);\n      }\n    }\n  }\n}\n\n\nTemplate.products.onCreated(function () {\n  this.products = ReactiveVar();\n  this.state = new ReactiveDict();\n  this.state.setDefault({\n    initialLoad: true,\n    slug: \"\",\n    canLoadMoreProducts: false\n  });\n\n  // We're not ready to serve prerendered page until products have loaded\n  window.prerenderReady = false;\n\n\n  // Update product subscription\n  this.autorun(() => {\n    const slug = Reaction.Router.getParam(\"slug\");\n    const tag = Tags.findOne({ slug: slug }) || Tags.findOne(slug);\n    const scrollLimit = Session.get(\"productScrollLimit\");\n    let tags = {}; // this could be shop default implementation needed\n\n    if (tag) {\n      tags = { tags: [tag._id] };\n    }\n\n    // if we get an invalid slug, don't return all products\n    if (!tag && slug) {\n      return;\n    }\n\n    if (this.state.equals(\"slug\", slug) === false && this.state.equals(\"initialLoad\", false)) {\n      this.state.set(\"initialLoad\", true);\n    }\n\n    this.state.set(\"slug\", slug);\n\n    const queryParams = Object.assign({}, tags, Reaction.Router.current().queryParams);\n    const productsSubscription = this.subscribe(\"Products\", scrollLimit, queryParams);\n\n    // Once our products subscription is ready, we are ready to render\n    if (productsSubscription.ready()) {\n      window.prerenderReady = true;\n    }\n\n    // we are caching `currentTag` or if we are not inside tag route, we will\n    // use shop name as `base` name for `positions` object\n    const currentTag = ReactionProduct.getTag();\n    const productCursor = Products.find({\n      ancestors: [],\n      type: { $in: [\"simple\"] }\n    }, {\n      sort: {\n        [`positions.${currentTag}.position`]: 1,\n        [`positions.${currentTag}.createdAt`]: 1,\n        createdAt: 1\n      }\n    });\n\n    const products = productCursor.map((product) => {\n      return applyProductRevision(product);\n    });\n\n    const sortedProducts = ReactionProduct.sortProducts(products, currentTag);\n\n    this.state.set(\"canLoadMoreProducts\", productCursor.count() >= Session.get(\"productScrollLimit\"));\n    this.products.set(sortedProducts);\n    Session.set(\"productGrid/products\", sortedProducts);\n  });\n\n  this.autorun(() => {\n    const isActionViewOpen = Reaction.isActionViewOpen();\n    if (isActionViewOpen === false) {\n      Session.set(\"productGrid/selectedProducts\", []);\n    }\n  });\n});\n\nTemplate.products.onRendered(() => {\n  // run the above func every time the user scrolls\n  $(\"#reactionAppContainer\").on(\"scroll\", loadMoreProducts);\n  $(window).on(\"scroll\", loadMoreProducts);\n});\n\nTemplate.products.helpers({\n  tag: function () {\n    const id = Reaction.Router.getParam(\"_tag\");\n    return {\n      tag: Tags.findOne({ slug: id }) || Tags.findOne(id)\n    };\n  },\n\n  products() {\n    return Template.instance().products.get();\n  },\n\n  loadMoreProducts() {\n    return Template.instance().state.equals(\"canLoadMoreProducts\", true);\n  },\n\n  initialLoad() {\n    return Template.instance().state.set(\"initialLoad\", true);\n  },\n\n  ready() {\n    const instance = Template.instance();\n    const isInitialLoad = instance.state.equals(\"initialLoad\", true);\n    const isReady = instance.subscriptionsReady();\n\n    if (isInitialLoad === false) {\n      return true;\n    }\n\n    if (isReady) {\n      instance.state.set(\"initialLoad\", false);\n      return true;\n    }\n\n    return false;\n  }\n});\n\n/**\n * products events\n */\n\nTemplate.products.events({\n  \"click #productListView\": function () {\n    $(\".product-grid\").hide();\n    return $(\".product-list\").show();\n  },\n  \"click #productGridView\": function () {\n    $(\".product-list\").hide();\n    return $(\".product-grid\").show();\n  },\n  \"click .product-list-item\": function () {\n    // go to new product\n    Reaction.Router.go(\"product\", {\n      handle: this._id\n    });\n  },\n  \"click [data-event-action=loadMoreProducts]\": (event) => {\n    event.preventDefault();\n    loadMoreProducts();\n  }\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/included/product-variant/client/templates/products/products.js.map","sourceFileName":"/imports/plugins/included/product-variant/client/templates/products/products.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"products"},"ignored":false,"code":"var Reaction = void 0;\nmodule.importSync(\"/client/api\", {\n  Reaction: function (v) {\n    Reaction = v;\n  }\n}, 0);\nvar ReactionProduct = void 0;\nmodule.importSync(\"/lib/api\", {\n  ReactionProduct: function (v) {\n    ReactionProduct = v;\n  }\n}, 1);\nvar applyProductRevision = void 0;\nmodule.importSync(\"/lib/api/products\", {\n  applyProductRevision: function (v) {\n    applyProductRevision = v;\n  }\n}, 2);\nvar Products = void 0,\n    Tags = void 0;\nmodule.importSync(\"/lib/collections\", {\n  Products: function (v) {\n    Products = v;\n  },\n  Tags: function (v) {\n    Tags = v;\n  }\n}, 3);\nvar Session = void 0;\nmodule.importSync(\"meteor/session\", {\n  Session: function (v) {\n    Session = v;\n  }\n}, 4);\nvar Template = void 0;\nmodule.importSync(\"meteor/templating\", {\n  Template: function (v) {\n    Template = v;\n  }\n}, 5);\nvar ITEMS_INCREMENT = void 0;\nmodule.importSync(\"/client/config/defaults\", {\n  ITEMS_INCREMENT: function (v) {\n    ITEMS_INCREMENT = v;\n  }\n}, 6);\n\n/**\n * loadMoreProducts\n * @summary whenever #productScrollLimitLoader becomes visible, retrieve more results\n * this basically runs this:\n * Session.set('productScrollLimit', Session.get('productScrollLimit') + ITEMS_INCREMENT);\n * @return {undefined}\n */function loadMoreProducts() {\n  var threshold = void 0;\n  var target = $(\"#productScrollLimitLoader\");\n  var scrollContainer = $(\"#reactionAppContainer\");\n\n  if (scrollContainer.length === 0) {\n    scrollContainer = $(window);\n  }\n\n  if (target.length) {\n    threshold = scrollContainer.scrollTop() + scrollContainer.height() - target.height();\n\n    if (target.offset().top < threshold) {\n      if (!target.data(\"visible\")) {\n        target.data(\"productScrollLimit\", true);\n        Session.set(\"productScrollLimit\", Session.get(\"productScrollLimit\") + ITEMS_INCREMENT || 24);\n      }\n    } else {\n      if (target.data(\"visible\")) {\n        target.data(\"visible\", false);\n      }\n    }\n  }\n}\n\nTemplate.products.onCreated(function () {\n  var _this = this;\n\n  this.products = ReactiveVar();\n  this.state = new ReactiveDict();\n  this.state.setDefault({\n    initialLoad: true,\n    slug: \"\",\n    canLoadMoreProducts: false\n  }); // We're not ready to serve prerendered page until products have loaded\n\n  window.prerenderReady = false; // Update product subscription\n\n  this.autorun(function () {\n    var _sort;\n\n    var slug = Reaction.Router.getParam(\"slug\");\n    var tag = Tags.findOne({\n      slug: slug\n    }) || Tags.findOne(slug);\n    var scrollLimit = Session.get(\"productScrollLimit\");\n    var tags = {}; // this could be shop default implementation needed\n\n    if (tag) {\n      tags = {\n        tags: [tag._id]\n      };\n    } // if we get an invalid slug, don't return all products\n\n\n    if (!tag && slug) {\n      return;\n    }\n\n    if (_this.state.equals(\"slug\", slug) === false && _this.state.equals(\"initialLoad\", false)) {\n      _this.state.set(\"initialLoad\", true);\n    }\n\n    _this.state.set(\"slug\", slug);\n\n    var queryParams = Object.assign({}, tags, Reaction.Router.current().queryParams);\n\n    var productsSubscription = _this.subscribe(\"Products\", scrollLimit, queryParams); // Once our products subscription is ready, we are ready to render\n\n\n    if (productsSubscription.ready()) {\n      window.prerenderReady = true;\n    } // we are caching `currentTag` or if we are not inside tag route, we will\n    // use shop name as `base` name for `positions` object\n\n\n    var currentTag = ReactionProduct.getTag();\n    var productCursor = Products.find({\n      ancestors: [],\n      type: {\n        $in: [\"simple\"]\n      }\n    }, {\n      sort: (_sort = {}, _sort[\"positions.\" + currentTag + \".position\"] = 1, _sort[\"positions.\" + currentTag + \".createdAt\"] = 1, _sort.createdAt = 1, _sort)\n    });\n    var products = productCursor.map(function (product) {\n      return applyProductRevision(product);\n    });\n    var sortedProducts = ReactionProduct.sortProducts(products, currentTag);\n\n    _this.state.set(\"canLoadMoreProducts\", productCursor.count() >= Session.get(\"productScrollLimit\"));\n\n    _this.products.set(sortedProducts);\n\n    Session.set(\"productGrid/products\", sortedProducts);\n  });\n  this.autorun(function () {\n    var isActionViewOpen = Reaction.isActionViewOpen();\n\n    if (isActionViewOpen === false) {\n      Session.set(\"productGrid/selectedProducts\", []);\n    }\n  });\n});\nTemplate.products.onRendered(function () {\n  // run the above func every time the user scrolls\n  $(\"#reactionAppContainer\").on(\"scroll\", loadMoreProducts);\n  $(window).on(\"scroll\", loadMoreProducts);\n});\nTemplate.products.helpers({\n  tag: function () {\n    var id = Reaction.Router.getParam(\"_tag\");\n    return {\n      tag: Tags.findOne({\n        slug: id\n      }) || Tags.findOne(id)\n    };\n  },\n  products: function () {\n    return Template.instance().products.get();\n  },\n  loadMoreProducts: function () {\n    return Template.instance().state.equals(\"canLoadMoreProducts\", true);\n  },\n  initialLoad: function () {\n    return Template.instance().state.set(\"initialLoad\", true);\n  },\n  ready: function () {\n    var instance = Template.instance();\n    var isInitialLoad = instance.state.equals(\"initialLoad\", true);\n    var isReady = instance.subscriptionsReady();\n\n    if (isInitialLoad === false) {\n      return true;\n    }\n\n    if (isReady) {\n      instance.state.set(\"initialLoad\", false);\n      return true;\n    }\n\n    return false;\n  }\n}); /**\n     * products events\n     */\nTemplate.products.events({\n  \"click #productListView\": function () {\n    $(\".product-grid\").hide();\n    return $(\".product-list\").show();\n  },\n  \"click #productGridView\": function () {\n    $(\".product-list\").hide();\n    return $(\".product-grid\").show();\n  },\n  \"click .product-list-item\": function () {\n    // go to new product\n    Reaction.Router.go(\"product\", {\n      handle: this._id\n    });\n  },\n  \"click [data-event-action=loadMoreProducts]\": function (event) {\n    event.preventDefault();\n    loadMoreProducts();\n  }\n});","map":{"version":3,"sources":["/imports/plugins/included/product-variant/client/templates/products/products.js"],"names":["Reaction","ReactionProduct","applyProductRevision","Products","Tags","Session","Template","ITEMS_INCREMENT","loadMoreProducts","threshold","target","$","scrollContainer","length","window","scrollTop","height","offset","top","data","set","get","products","onCreated","ReactiveVar","state","ReactiveDict","setDefault","initialLoad","slug","canLoadMoreProducts","prerenderReady","autorun","Router","getParam","tag","findOne","scrollLimit","tags","_id","equals","queryParams","Object","assign","current","productsSubscription","subscribe","ready","currentTag","getTag","productCursor","find","ancestors","type","$in","sort","createdAt","map","product","sortedProducts","sortProducts","count","isActionViewOpen","onRendered","on","helpers","id","instance","isInitialLoad","isReady","subscriptionsReady","events","hide","show","go","handle","event","preventDefault"],"mappings":"AAAA,IAAS;AAAT,OAAyB,WAAzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GACA,A,AAAS,AAAuB,AAChC,AAAS,AAA4B,AACrC,AAAS,AAAU,AAAY,AAC/B,AAAS,AAAe,AACxB,AAAS,AAAgB,AACzB,AAAS,AAAuB,AAEhC;;AAOA,AAAS,AAAmB;;;;;;GAC1B,AAAI,SAAJ,mBACA;MAAA,AAAM,AAAS,AAAE,AACjB;AAAI,iBAAJ,AAAsB,AAAE;0BAExB,AAAI,AAAgB,AAAW,AAAG,AAChC;;sBAAA,AAAkB,AAAE,cACrB;;AAED,AAAI,AAAO,AAAQ,AACjB;;aAAY,QAAZ,AAAY,AAAgB,AAAc,AAAgB,AAAW,AAAO;gFAE5E,AAAI,AAAO,AAAS,AAAM,AAAW,AACnC;;QAAI,AAAC,OAAA,AAAO,AAAK,eAAjB,AAAK,AAAwB,WAC3B;WAAO,OAAP,AAAY,iBAAZ,AAAkC,AAClC;eAAA,AAAQ,KAAR,AAAY,sBAAZ,AAAkC,AAAQ,AAAI,AAAwB,AAAmB,AAC1F;iGAJH,AAKC;AAAM,AACL;AAAI,WAAJ,AAAI,AAAO,AAAK,AAAY,AAC1B;UAAO,OAAP,AAAY,KAAZ,AAAuB,YAAvB,AACD;+BACF;AACF;AACF;;AAGD,AAAS,AAAS,AAAU,AAAY,AACtC,AAAK,AAAW;;AAChB,AAAK,SAAL,AAAa,SAAI,UAAjB,AAAa;AACb;;OAAA,AAAK,AAAM,WAAX,AAAsB,AACpB;eAAa,IADO,AAEpB;OAFoB,AAEd;iBAFR,AAAsB,AAGC;AANe,AAStC;yBATsC,AAUtC,AAAO,AAAiB,AAGxB,AACA;AARE,MAQF,AAAK,AAAQ,AAAM,AACjB;;SAAM,AAAO,iBAAb,AAAa,AAAS,AAAO,AAAS,AACtC,AAAM,AAAM,AAAK,AAAQ,AAAE,AAAM,OAAjC,AAAY,AAAgC,AAAK,AAAQ,AACzD;;OAAM;AAAN,AAAoB,AAAQ,AAAI,AAChC;;AAAI,QAAO,OAJM,AAIjB,AAAe;;;uBAEf;AAAI,QAAJ,AAAS,0BACP;QAAO,WAAA,AAAE,AAAM,AAAC,AAAI;;AAApB,aAPe,AAQhB;AAED;;;AACA,MAAA,AAAI,AAAC,AAAO,AAAM,AAChB;;;sBACD;;AAED,AAAI,AAAK,AAAM,AAAO,AAAQ,AAAU,AAAS,AAAK,AAAM,AAAO,AAAe,AAAQ,AACxF;;QAAK,MAAL,AAAW,MAAX,AAAe,eAAf,AAA8B,6DAC/B;;AAED,AAAK,AAAM,AAAI,AAAQ,AAEvB;;UAAM,UAAc,QArBH,AAqBjB,AAAoB,AAAO,AAAO,AAAI,AAAM,AAAS,AAAO,AAAU,AACtE,AAAM,AAAuB,AAAK,AAAU,AAAY,AAAa,AAErE;;wEACA;;AAAI,QAAqB,uBAAzB,AAAI,MAA8B,mCAChC,AAAO,AAAiB,AACzB,cA3BgB,AA6BjB,AACA;;;;;AACA,AAAM,AAAa,AAAgB,AACnC,MAAM,AAAgB,AAAS,AAAK,AAClC;AADkC,AACvB,AACX;;;QAAM,6BAAE;QAAK,AAAC;iBAFM,AAAc;AAGjC;cACD;;AAFM;AAEA,AACJ,AAAE,AAAY,AAAW,AAAa,AACtC,AAAE,8CAAF,AAAc,AAAW,4BAFrB,AAEmC,AACvC,AAAW,qDAHP,qBAJR,AAAsB,AAGnB,AAQH,AAAM,AAAW,AAAc,AAAI,AAAC,AAAY,AAC9C,AAAO,AAAqB,AAC7B;AATO,AACJ;AAMJ,AAAiB,wDAIjB;AAAM,aAAiB,qBAAvB,AAAuB,AAAgB,AAAa,AAAU,AAE9D;AAAA,AAAK,AAAM,AAAI,AAAuB,AAAc,AAAW,AAAQ,AAAI,AAC3E,AAAK,AAAS,AAAI,AAClB;QAAA,AAAQ,AAAI,iBAAZ,AAAoC,gBAApC,uBAnDF,AAoDC,AAED;;AAAK,UAAL,MAAa,IAAM,4DACjB;;UAAM,aAAN,AAAyB,AAAS;;wCAClC;AAAA,AAAI,AAAqB,AAAO,AAC9B,AAAQ,AAAI,AAAgC,AAC7C;2BAJH,AAKC;oCAzEH,AA0EC;;oCAED;AAAS,cAAT,IAAA,AAAkB,AAAW,AAAM,gCACjC;AACA;AAAA,AAAE,AAAyB,AAAG,AAAU,AACxC;AAHF,AAGE,AAAE,AAAQ,AAAG,AAAU,AACxB;AAED,SAAA,AAAS,SAAT,AAAkB,AAAQ,uBACxB;AAAK,AAAY,AACf;IAAM,AAAK,AAAS,yBAAT,AAAgB,GAAhB,AAAyB,UAApC,AAAW,AACX;IAAO,qBACL;AAAK,AAAK,AAAQ,AAAE,AAAM;AAArB,AAAa,SAAiB,AAAK,SAAL,AAAa;AADlD,mBAHsB,AAMvB;;;;;OAEU,kBACT,AAAO,AAAS,AAAW,AAAS,AACrC;AAFD;AARwB,AAYxB;wBAAmB,AACjB;WAAO,SAAA,AAAS,WAAT,AAAoB,AAAM,SAAjC,AAAO,AAAiC,AAAuB,AAChE;AAduB,AAgBxB;AAAc,gCACZ;WAAO,SAAA,AAAS,WAAT,AAAoB,MAApB,AAA0B,AAAI,OAArC,AAAO,AAA6C,uBACrD;AAlBuB,AAoBxB;AAAQ,2BACN;AAAM,oBAAW,AAAS,iBAA1B,AAAiB,mBACjB;AAAA,AAAM,AAAgB,AAAS,AAAM,AAAO,AAAe,AAC3D,AAAM,AAAU,AAAS;qBAEzB;AAAI,mBAAkB,SAAtB,AAA6B,AAC3B;QAAA,AAAO,qDACR;2BAED;;QAAA,AAAI,AAAS,yBACX;aAAA,AAAS,AAAM,AAAI,AAAe,AAClC;AAAA,AAAO,AACR;;iBAED;AAAO,eAAP,yBACD;;AAnCH,AAA0B,A,AAsC1B;;;AAIA,AAAS,AAAS,AAAO,AACvB,AAA0B,AAAY;AAxC7B,AAC8B,IAsChB,AAErB,AAAE,AAAiB,AACnB,AAAO,AAAE,AAAiB,AAC3B,AACD,AAA0B,AAAY;;;AACpC,AAAE,kBAAF,AAAmB;AACZ,AAAE,4BAAT,AAAO,AAAmB,YAPL,AAQtB;uBACD;8BAA4B,AAAY,AACtC;AACA;AAAA,AAAS,AAAO,AAAG,4BAAnB,AAA8B,YAC5B;MAAQ,AAAK,iBADe;AAA9B,8BAGD;AAdsB,AAevB;0CAA8C,AAAC,AAAU,AACvD;AAAA,AAAM,AACN;;mBAjBJ,AAAyB;AAkBtB;;;;;;AAZC,AACA","file":"/imports/plugins/included/product-variant/client/templates/products/products.js.map","sourcesContent":["import { Reaction } from \"/client/api\";\nimport { ReactionProduct } from \"/lib/api\";\nimport { applyProductRevision } from \"/lib/api/products\";\nimport { Products, Tags } from \"/lib/collections\";\nimport { Session } from \"meteor/session\";\nimport { Template } from \"meteor/templating\";\nimport { ITEMS_INCREMENT } from \"/client/config/defaults\";\n\n/**\n * loadMoreProducts\n * @summary whenever #productScrollLimitLoader becomes visible, retrieve more results\n * this basically runs this:\n * Session.set('productScrollLimit', Session.get('productScrollLimit') + ITEMS_INCREMENT);\n * @return {undefined}\n */\nfunction loadMoreProducts() {\n  let threshold;\n  const target = $(\"#productScrollLimitLoader\");\n  let scrollContainer = $(\"#reactionAppContainer\");\n\n  if (scrollContainer.length === 0) {\n    scrollContainer = $(window);\n  }\n\n  if (target.length) {\n    threshold = scrollContainer.scrollTop() + scrollContainer.height() - target.height();\n\n    if (target.offset().top < threshold) {\n      if (!target.data(\"visible\")) {\n        target.data(\"productScrollLimit\", true);\n        Session.set(\"productScrollLimit\", Session.get(\"productScrollLimit\") + ITEMS_INCREMENT || 24);\n      }\n    } else {\n      if (target.data(\"visible\")) {\n        target.data(\"visible\", false);\n      }\n    }\n  }\n}\n\n\nTemplate.products.onCreated(function () {\n  this.products = ReactiveVar();\n  this.state = new ReactiveDict();\n  this.state.setDefault({\n    initialLoad: true,\n    slug: \"\",\n    canLoadMoreProducts: false\n  });\n\n  // We're not ready to serve prerendered page until products have loaded\n  window.prerenderReady = false;\n\n\n  // Update product subscription\n  this.autorun(() => {\n    const slug = Reaction.Router.getParam(\"slug\");\n    const tag = Tags.findOne({ slug: slug }) || Tags.findOne(slug);\n    const scrollLimit = Session.get(\"productScrollLimit\");\n    let tags = {}; // this could be shop default implementation needed\n\n    if (tag) {\n      tags = { tags: [tag._id] };\n    }\n\n    // if we get an invalid slug, don't return all products\n    if (!tag && slug) {\n      return;\n    }\n\n    if (this.state.equals(\"slug\", slug) === false && this.state.equals(\"initialLoad\", false)) {\n      this.state.set(\"initialLoad\", true);\n    }\n\n    this.state.set(\"slug\", slug);\n\n    const queryParams = Object.assign({}, tags, Reaction.Router.current().queryParams);\n    const productsSubscription = this.subscribe(\"Products\", scrollLimit, queryParams);\n\n    // Once our products subscription is ready, we are ready to render\n    if (productsSubscription.ready()) {\n      window.prerenderReady = true;\n    }\n\n    // we are caching `currentTag` or if we are not inside tag route, we will\n    // use shop name as `base` name for `positions` object\n    const currentTag = ReactionProduct.getTag();\n    const productCursor = Products.find({\n      ancestors: [],\n      type: { $in: [\"simple\"] }\n    }, {\n      sort: {\n        [`positions.${currentTag}.position`]: 1,\n        [`positions.${currentTag}.createdAt`]: 1,\n        createdAt: 1\n      }\n    });\n\n    const products = productCursor.map((product) => {\n      return applyProductRevision(product);\n    });\n\n    const sortedProducts = ReactionProduct.sortProducts(products, currentTag);\n\n    this.state.set(\"canLoadMoreProducts\", productCursor.count() >= Session.get(\"productScrollLimit\"));\n    this.products.set(sortedProducts);\n    Session.set(\"productGrid/products\", sortedProducts);\n  });\n\n  this.autorun(() => {\n    const isActionViewOpen = Reaction.isActionViewOpen();\n    if (isActionViewOpen === false) {\n      Session.set(\"productGrid/selectedProducts\", []);\n    }\n  });\n});\n\nTemplate.products.onRendered(() => {\n  // run the above func every time the user scrolls\n  $(\"#reactionAppContainer\").on(\"scroll\", loadMoreProducts);\n  $(window).on(\"scroll\", loadMoreProducts);\n});\n\nTemplate.products.helpers({\n  tag: function () {\n    const id = Reaction.Router.getParam(\"_tag\");\n    return {\n      tag: Tags.findOne({ slug: id }) || Tags.findOne(id)\n    };\n  },\n\n  products() {\n    return Template.instance().products.get();\n  },\n\n  loadMoreProducts() {\n    return Template.instance().state.equals(\"canLoadMoreProducts\", true);\n  },\n\n  initialLoad() {\n    return Template.instance().state.set(\"initialLoad\", true);\n  },\n\n  ready() {\n    const instance = Template.instance();\n    const isInitialLoad = instance.state.equals(\"initialLoad\", true);\n    const isReady = instance.subscriptionsReady();\n\n    if (isInitialLoad === false) {\n      return true;\n    }\n\n    if (isReady) {\n      instance.state.set(\"initialLoad\", false);\n      return true;\n    }\n\n    return false;\n  }\n});\n\n/**\n * products events\n */\n\nTemplate.products.events({\n  \"click #productListView\": function () {\n    $(\".product-grid\").hide();\n    return $(\".product-list\").show();\n  },\n  \"click #productGridView\": function () {\n    $(\".product-list\").hide();\n    return $(\".product-grid\").show();\n  },\n  \"click .product-list-item\": function () {\n    // go to new product\n    Reaction.Router.go(\"product\", {\n      handle: this._id\n    });\n  },\n  \"click [data-event-action=loadMoreProducts]\": (event) => {\n    event.preventDefault();\n    loadMoreProducts();\n  }\n});\n"]},"hash":"4448b800c16510099a292d6c51bdde6009d50fb4"}
