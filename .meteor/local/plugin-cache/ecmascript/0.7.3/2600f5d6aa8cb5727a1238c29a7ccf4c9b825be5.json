{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component","PropTypes"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"},{"kind":"named","imported":"PropTypes","local":"PropTypes"}]},{"source":"/imports/plugins/core/ui/client/components","imported":["Button","Select","TextField"],"specifiers":[{"kind":"named","imported":"Button","local":"Button"},{"kind":"named","imported":"Select","local":"Select"},{"kind":"named","imported":"TextField","local":"TextField"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/core/email/client/components/emailSettings.js","filenameRelative":"/imports/plugins/core/email/client/components/emailSettings.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/core/email/client/components/emailSettings.js"],"names":["React","Component","PropTypes","Button","Select","TextField","EmailSettings","constructor","props","state","settings","isSaving","handleStateChange","bind","handleSubmit","handleSelect","e","target","name","value","setState","preventDefault","saveSettings","service","render","providers","emailProviders","map","label","unshift","host","port","user","password","propTypes","arrayOf","string","isRequired","func","shape","oneOfType","number"],"mappings":"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","file":"/imports/plugins/core/email/client/components/emailSettings.js.map","sourcesContent":["import React, { Component, PropTypes } from \"react\";\nimport { Button, Select, TextField } from \"/imports/plugins/core/ui/client/components\";\n\nclass EmailSettings extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      settings: props.settings,\n      isSaving: false\n    };\n\n    this.handleStateChange = this.handleStateChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n  }\n\n  handleStateChange(e) {\n    const { settings } = this.state;\n    settings[e.target.name] = e.target.value;\n    this.setState({ settings });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const { saveSettings } = this.props;\n    const { settings } = this.state;\n    this.setState({ isSaving: true });\n    saveSettings(settings, () => this.setState({ isSaving: false }));\n  }\n\n  handleSelect(e) {\n    const { settings } = this.state;\n    settings.service = e;\n    this.setState({ settings });\n  }\n\n  render() {\n    const { providers } = this.props;\n    const { settings, isSaving } = this.state;\n\n    const emailProviders = providers.map((name) => (\n      { label: name, value: name }\n    ));\n\n    emailProviders.unshift({ label: \"Custom\", value: \"custom\" });\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <Select\n          clearable={false}\n          label=\"Service\"\n          i18nKeyLabel=\"admin.settings.providerName\"\n          placeholder=\"Select a Service\"\n          i18nKeyPlaceholder=\"mail.settings.selectService\"\n          name=\"service\"\n          onChange={this.handleSelect}\n          options={emailProviders}\n          value={settings.service || \"\"}\n        />\n        {settings.service === \"custom\" &&\n          <div>\n            <TextField\n              label=\"Host\"\n              i18nKeyLabel=\"mail.settings.host\"\n              type=\"text\"\n              name=\"host\"\n              value={settings.host}\n              onChange={this.handleStateChange}\n            />\n          <TextField\n            label=\"Port\"\n            i18nKeyLabel=\"mail.settings.port\"\n            type=\"text\"\n            name=\"port\"\n            value={settings.port}\n            onChange={this.handleStateChange}\n          />\n          </div>\n        }\n        <TextField\n          label=\"User\"\n          i18nKeyLabel=\"mail.settings.user\"\n          type=\"text\"\n          name=\"user\"\n          value={settings.user}\n          onChange={this.handleStateChange}\n        />\n        <TextField\n          label=\"Password\"\n          i18nKeyLabel=\"mail.settings.password\"\n          type=\"password\"\n          name=\"password\"\n          value={settings.password}\n          onChange={this.handleStateChange}\n        />\n        <Button\n          primary={true}\n          bezelStyle=\"solid\"\n          className=\"pull-right\"\n          type=\"submit\"\n          disabled={isSaving}\n        >\n          {isSaving ?\n              <i className=\"fa fa-refresh fa-spin\"/>\n            : <span data-i18n=\"app.save\">Save</span>}\n        </Button>\n      </form>\n    );\n  }\n}\n\nEmailSettings.propTypes = {\n  providers: PropTypes.arrayOf(PropTypes.string).isRequired,\n  saveSettings: PropTypes.func.isRequired,\n  settings: PropTypes.shape({\n    service: PropTypes.string,\n    host: PropTypes.string,\n    port: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    user: PropTypes.string,\n    password: PropTypes.string\n  })\n};\n\nexport default EmailSettings;\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/core/email/client/components/emailSettings.js.map","sourceFileName":"/imports/plugins/core/email/client/components/emailSettings.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"emailSettings"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0,\n    Component = void 0,\n    PropTypes = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  },\n  PropTypes: function (v) {\n    PropTypes = v;\n  }\n}, 0);\nvar Button = void 0,\n    Select = void 0,\n    TextField = void 0;\nmodule.importSync(\"/imports/plugins/core/ui/client/components\", {\n  Button: function (v) {\n    Button = v;\n  },\n  Select: function (v) {\n    Select = v;\n  },\n  TextField: function (v) {\n    TextField = v;\n  }\n}, 1);\n\nvar EmailSettings = function (_Component) {\n  (0, _inherits3.default)(EmailSettings, _Component);\n\n  function EmailSettings(props) {\n    (0, _classCallCheck3.default)(this, EmailSettings);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));\n\n    _this.state = {\n      settings: props.settings,\n      isSaving: false\n    };\n    _this.handleStateChange = _this.handleStateChange.bind(_this);\n    _this.handleSubmit = _this.handleSubmit.bind(_this);\n    _this.handleSelect = _this.handleSelect.bind(_this);\n    return _this;\n  }\n\n  EmailSettings.prototype.handleStateChange = function () {\n    function handleStateChange(e) {\n      var settings = this.state.settings;\n      settings[e.target.name] = e.target.value;\n      this.setState({\n        settings: settings\n      });\n    }\n\n    return handleStateChange;\n  }();\n\n  EmailSettings.prototype.handleSubmit = function () {\n    function handleSubmit(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n      var saveSettings = this.props.saveSettings;\n      var settings = this.state.settings;\n      this.setState({\n        isSaving: true\n      });\n      saveSettings(settings, function () {\n        return _this2.setState({\n          isSaving: false\n        });\n      });\n    }\n\n    return handleSubmit;\n  }();\n\n  EmailSettings.prototype.handleSelect = function () {\n    function handleSelect(e) {\n      var settings = this.state.settings;\n      settings.service = e;\n      this.setState({\n        settings: settings\n      });\n    }\n\n    return handleSelect;\n  }();\n\n  EmailSettings.prototype.render = function () {\n    function render() {\n      var providers = this.props.providers;\n      var _state = this.state,\n          settings = _state.settings,\n          isSaving = _state.isSaving;\n      var emailProviders = providers.map(function (name) {\n        return {\n          label: name,\n          value: name\n        };\n      });\n      emailProviders.unshift({\n        label: \"Custom\",\n        value: \"custom\"\n      });\n      return React.createElement(\n        \"form\",\n        {\n          onSubmit: this.handleSubmit\n        },\n        React.createElement(Select, {\n          clearable: false,\n          label: \"Service\",\n          i18nKeyLabel: \"admin.settings.providerName\",\n          placeholder: \"Select a Service\",\n          i18nKeyPlaceholder: \"mail.settings.selectService\",\n          name: \"service\",\n          onChange: this.handleSelect,\n          options: emailProviders,\n          value: settings.service || \"\"\n        }),\n        settings.service === \"custom\" && React.createElement(\n          \"div\",\n          null,\n          React.createElement(TextField, {\n            label: \"Host\",\n            i18nKeyLabel: \"mail.settings.host\",\n            type: \"text\",\n            name: \"host\",\n            value: settings.host,\n            onChange: this.handleStateChange\n          }),\n          React.createElement(TextField, {\n            label: \"Port\",\n            i18nKeyLabel: \"mail.settings.port\",\n            type: \"text\",\n            name: \"port\",\n            value: settings.port,\n            onChange: this.handleStateChange\n          })\n        ),\n        React.createElement(TextField, {\n          label: \"User\",\n          i18nKeyLabel: \"mail.settings.user\",\n          type: \"text\",\n          name: \"user\",\n          value: settings.user,\n          onChange: this.handleStateChange\n        }),\n        React.createElement(TextField, {\n          label: \"Password\",\n          i18nKeyLabel: \"mail.settings.password\",\n          type: \"password\",\n          name: \"password\",\n          value: settings.password,\n          onChange: this.handleStateChange\n        }),\n        React.createElement(\n          Button,\n          {\n            primary: true,\n            bezelStyle: \"solid\",\n            className: \"pull-right\",\n            type: \"submit\",\n            disabled: isSaving\n          },\n          isSaving ? React.createElement(\"i\", {\n            className: \"fa fa-refresh fa-spin\"\n          }) : React.createElement(\n            \"span\",\n            {\n              \"data-i18n\": \"app.save\"\n            },\n            \"Save\"\n          )\n        )\n      );\n    }\n\n    return render;\n  }();\n\n  return EmailSettings;\n}(Component);\n\nEmailSettings.propTypes = {\n  providers: PropTypes.arrayOf(PropTypes.string).isRequired,\n  saveSettings: PropTypes.func.isRequired,\n  settings: PropTypes.shape({\n    service: PropTypes.string,\n    host: PropTypes.string,\n    port: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    user: PropTypes.string,\n    password: PropTypes.string\n  })\n};\nmodule.export(\"default\", exports.default = EmailSettings);","map":{"version":3,"sources":["/imports/plugins/core/email/client/components/emailSettings.js"],"names":["React","Component","PropTypes","Button","Select","TextField","EmailSettings","constructor","props","state","settings","isSaving","handleStateChange","bind","handleSubmit","handleSelect","e","target","name","value","setState","preventDefault","saveSettings","service","render","providers","emailProviders","map","label","unshift","host","port","user","password","propTypes","arrayOf","string","isRequired","func","shape","oneOfType","number"],"mappings":"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","file":"/imports/plugins/core/email/client/components/emailSettings.js.map","sourcesContent":["import React, { Component, PropTypes } from \"react\";\nimport { Button, Select, TextField } from \"/imports/plugins/core/ui/client/components\";\n\nclass EmailSettings extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      settings: props.settings,\n      isSaving: false\n    };\n\n    this.handleStateChange = this.handleStateChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n  }\n\n  handleStateChange(e) {\n    const { settings } = this.state;\n    settings[e.target.name] = e.target.value;\n    this.setState({ settings });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const { saveSettings } = this.props;\n    const { settings } = this.state;\n    this.setState({ isSaving: true });\n    saveSettings(settings, () => this.setState({ isSaving: false }));\n  }\n\n  handleSelect(e) {\n    const { settings } = this.state;\n    settings.service = e;\n    this.setState({ settings });\n  }\n\n  render() {\n    const { providers } = this.props;\n    const { settings, isSaving } = this.state;\n\n    const emailProviders = providers.map((name) => (\n      { label: name, value: name }\n    ));\n\n    emailProviders.unshift({ label: \"Custom\", value: \"custom\" });\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <Select\n          clearable={false}\n          label=\"Service\"\n          i18nKeyLabel=\"admin.settings.providerName\"\n          placeholder=\"Select a Service\"\n          i18nKeyPlaceholder=\"mail.settings.selectService\"\n          name=\"service\"\n          onChange={this.handleSelect}\n          options={emailProviders}\n          value={settings.service || \"\"}\n        />\n        {settings.service === \"custom\" &&\n          <div>\n            <TextField\n              label=\"Host\"\n              i18nKeyLabel=\"mail.settings.host\"\n              type=\"text\"\n              name=\"host\"\n              value={settings.host}\n              onChange={this.handleStateChange}\n            />\n          <TextField\n            label=\"Port\"\n            i18nKeyLabel=\"mail.settings.port\"\n            type=\"text\"\n            name=\"port\"\n            value={settings.port}\n            onChange={this.handleStateChange}\n          />\n          </div>\n        }\n        <TextField\n          label=\"User\"\n          i18nKeyLabel=\"mail.settings.user\"\n          type=\"text\"\n          name=\"user\"\n          value={settings.user}\n          onChange={this.handleStateChange}\n        />\n        <TextField\n          label=\"Password\"\n          i18nKeyLabel=\"mail.settings.password\"\n          type=\"password\"\n          name=\"password\"\n          value={settings.password}\n          onChange={this.handleStateChange}\n        />\n        <Button\n          primary={true}\n          bezelStyle=\"solid\"\n          className=\"pull-right\"\n          type=\"submit\"\n          disabled={isSaving}\n        >\n          {isSaving ?\n              <i className=\"fa fa-refresh fa-spin\"/>\n            : <span data-i18n=\"app.save\">Save</span>}\n        </Button>\n      </form>\n    );\n  }\n}\n\nEmailSettings.propTypes = {\n  providers: PropTypes.arrayOf(PropTypes.string).isRequired,\n  saveSettings: PropTypes.func.isRequired,\n  settings: PropTypes.shape({\n    service: PropTypes.string,\n    host: PropTypes.string,\n    port: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    user: PropTypes.string,\n    password: PropTypes.string\n  })\n};\n\nexport default EmailSettings;\n"]},"hash":"2600f5d6aa8cb5727a1238c29a7ccf4c9b825be5"}
