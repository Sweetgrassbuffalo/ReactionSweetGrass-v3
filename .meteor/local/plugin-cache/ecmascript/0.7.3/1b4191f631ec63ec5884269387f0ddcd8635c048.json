{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/check","imported":["Match","check"],"specifiers":[{"kind":"named","imported":"Match","local":"Match"},{"kind":"named","imported":"check","local":"check"}]},{"source":"/server/api","imported":["Reaction"],"specifiers":[{"kind":"named","imported":"Reaction","local":"Reaction"}]},{"source":"/imports/plugins/core/discounts/lib/collections","imported":["Discounts"],"specifiers":[{"kind":"named","imported":"Discounts","local":"Discounts"}]},{"source":"../../lib/collections/schemas","imported":["DiscountRates"],"specifiers":[{"kind":"named","imported":"DiscountRates","local":"DiscountSchema"}]}],"exports":{"exported":["methods"],"specifiers":[{"kind":"local","local":"methods","exported":"methods"}]}}},"options":{"filename":"/imports/plugins/included/discount-rates/server/methods/methods.js","filenameRelative":"/imports/plugins/included/discount-rates/server/methods/methods.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/included/discount-rates/server/methods/methods.js"],"names":["Meteor","Match","check","Reaction","Discounts","DiscountRates","DiscountSchema","attachSchema","selector","discountMethod","methods","cartId","rateId","String","rate","modifier","docId","Object","OneOf","undefined","hasPermission","Error","insert","update"],"mappings":"AAAA,OAAS;AAAT;AAAuB;;;AAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GACA,A,AAAA,AAAS,AAAO,AAAa,AAC7B,AAAS,AAAgB,AACzB,AAAS,AAAkB,AAC3B,AAAS,AAAiB,AAAsB,AAEhD;AACA,AAAU,AAAa,AAAgB;AAAE,UAAU;;oBAAE,AAAgB;;IAAlB;AAAnD,A,AAAuC,AAEvC;AACA,AACA;;;AACA,AAAO,AAAM,AAAU,AACrB;;;;;;;AAOA,kBAA0B,AAAU,AAAQ,AAAQ,AAClD;UAAA,AAAM,QAAN,AAAc,AACd;QAAA,AAAM,OAAN,AAAc,AACd,GAHkD,AAGlD,AAAM,AAAO,AACb,AACA;;;WACA;AAAA,AAAO,AACR;AAfoB;kBAgBO,AAAU,AAAQ,AAAQ,AACpD;UAAA,AAAM,QAAN,AAAc,AACd;QAAA,AAAM,OAAN,AAAc,AACd,EAHF,CAAsD,AAGpD,AAAM,AAAO,AACb;;WACA;AAAA,AAAO,AACR;AAtBoB,AAuBrB;;;;;KAMA,qBAAqB,UAAU,UAAV,AAAoB;UACvC,AAAM,UAAN,AAAgB,AAChB;UAAA,AAAM,OAAO,MAAA,AAAM,MAAN,AAAY,QAAZ,AAAoB,MAFa,AAE9C,AAAa,AAA0B,AAEvC,AACA,aAAA,AAAI,AAAC,AAAS,AAAc,AAAmB,AAC7C;;SAAM,AAAI,SAAJ,AAAW,AAAM,cAAvB,AAAM,AAAsB,mBANgB,AAO7C;AACD;KARmB,AAA2B,AAC9C,CAQA;;;QAAI,CAAJ,AAAK,OAAO,AACV;aAAO,UAAA,AAAU,OAAjB,AAAO,AAAiB,AACzB;AAX6C,AAY9C;;;mCACA;A,AA1CG,AAAgB,AA0CnB,AAAO,AAAU,AAAO,AAAO,AAChC,AAGH;;;AACA,OAAA,AAAO,QAAP,AAAe","file":"/imports/plugins/included/discount-rates/server/methods/methods.js.map","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport { Match, check } from \"meteor/check\";\nimport { Reaction } from \"/server/api\";\nimport { Discounts } from  \"/imports/plugins/core/discounts/lib/collections\";\nimport { DiscountRates as DiscountSchema } from \"../../lib/collections/schemas\";\n\n// attach discount code specific schema\nDiscounts.attachSchema(DiscountSchema, { selector: { discountMethod: \"rate\" } });\n\n//\n// make all discount methods available\n//\nexport const methods = {\n  /**\n   * discounts/rates/amount\n   * for discount rates\n   * @param  {String} cartId cartId\n   * @param  {String} rateId rateid\n   * @return {Number} returns discount total\n   */\n  \"discounts/rates/amount\": function (cartId, rateId) {\n    check(cartId, String);\n    check(rateId, String);\n    const rate = 0;\n    // TODO: discounts/rates/amount\n    // should be pricing rate lookup.\n    return rate;\n  },\n  \"discounts/rates/discount\": function (cartId, rateId) {\n    check(cartId, String);\n    check(rateId, String);\n    const rate = 0;\n    // TODO: discounts/rates/discount\n    return rate;\n  },\n  /**\n   * discounts/addRate\n   * @param  {String} modifier update statement\n   * @param  {String} docId discount docId\n   * @return {String} returns update/insert result\n   */\n  \"discounts/addRate\": function (modifier, docId) {\n    check(modifier, Object);\n    check(docId, Match.OneOf(String, null, undefined));\n\n    // check permissions to add\n    if (!Reaction.hasPermission(\"discount-rates\")) {\n      throw new Meteor.Error(403, \"Access Denied\");\n    }\n    // if no doc, insert\n    if (!docId) {\n      return Discounts.insert(modifier);\n    }\n    // else update and return\n    return Discounts.update(docId, modifier);\n  }\n};\n\n// export methods to Meteor\nMeteor.methods(methods);\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/included/discount-rates/server/methods/methods.js.map","sourceFileName":"/imports/plugins/included/discount-rates/server/methods/methods.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"methods"},"ignored":false,"code":"module.export({\n  methods: function () {\n    return methods;\n  }\n});\nvar Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Match = void 0,\n    check = void 0;\nmodule.importSync(\"meteor/check\", {\n  Match: function (v) {\n    Match = v;\n  },\n  check: function (v) {\n    check = v;\n  }\n}, 1);\nvar Reaction = void 0;\nmodule.importSync(\"/server/api\", {\n  Reaction: function (v) {\n    Reaction = v;\n  }\n}, 2);\nvar Discounts = void 0;\nmodule.importSync(\"/imports/plugins/core/discounts/lib/collections\", {\n  Discounts: function (v) {\n    Discounts = v;\n  }\n}, 3);\nvar DiscountSchema = void 0;\nmodule.importSync(\"../../lib/collections/schemas\", {\n  DiscountRates: function (v) {\n    DiscountSchema = v;\n  }\n}, 4);\n// attach discount code specific schema\nDiscounts.attachSchema(DiscountSchema, {\n  selector: {\n    discountMethod: \"rate\"\n  }\n}); //\n// make all discount methods available\n//\n\nvar methods = {\n  /**\n   * discounts/rates/amount\n   * for discount rates\n   * @param  {String} cartId cartId\n   * @param  {String} rateId rateid\n   * @return {Number} returns discount total\n   */\"discounts/rates/amount\": function (cartId, rateId) {\n    check(cartId, String);\n    check(rateId, String);\n    var rate = 0; // TODO: discounts/rates/amount\n    // should be pricing rate lookup.\n\n    return rate;\n  },\n  \"discounts/rates/discount\": function (cartId, rateId) {\n    check(cartId, String);\n    check(rateId, String);\n    var rate = 0; // TODO: discounts/rates/discount\n\n    return rate;\n  },\n  /**\n   * discounts/addRate\n   * @param  {String} modifier update statement\n   * @param  {String} docId discount docId\n   * @return {String} returns update/insert result\n   */\"discounts/addRate\": function (modifier, docId) {\n    check(modifier, Object);\n    check(docId, Match.OneOf(String, null, undefined)); // check permissions to add\n\n    if (!Reaction.hasPermission(\"discount-rates\")) {\n      throw new Meteor.Error(403, \"Access Denied\");\n    } // if no doc, insert\n\n\n    if (!docId) {\n      return Discounts.insert(modifier);\n    } // else update and return\n\n\n    return Discounts.update(docId, modifier);\n  }\n};\n// export methods to Meteor\nMeteor.methods(methods);","map":{"version":3,"sources":["/imports/plugins/included/discount-rates/server/methods/methods.js"],"names":["Meteor","Match","check","Reaction","Discounts","DiscountRates","DiscountSchema","attachSchema","selector","discountMethod","methods","cartId","rateId","String","rate","modifier","docId","Object","OneOf","undefined","hasPermission","Error","insert","update"],"mappings":"AAAA,OAAS;AAAT;AAAuB;;;AAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GACA,A,AAAA,AAAS,AAAO,AAAa,AAC7B,AAAS,AAAgB,AACzB,AAAS,AAAkB,AAC3B,AAAS,AAAiB,AAAsB,AAEhD;AACA,AAAU,AAAa,AAAgB;AAAE,UAAU;;oBAAE,AAAgB;;IAAlB;AAAnD,A,AAAuC,AAEvC;AACA,AACA;;;AACA,AAAO,AAAM,AAAU,AACrB;;;;;;;AAOA,kBAA0B,AAAU,AAAQ,AAAQ,AAClD;UAAA,AAAM,QAAN,AAAc,AACd;QAAA,AAAM,OAAN,AAAc,AACd,GAHkD,AAGlD,AAAM,AAAO,AACb,AACA;;;WACA;AAAA,AAAO,AACR;AAfoB;kBAgBO,AAAU,AAAQ,AAAQ,AACpD;UAAA,AAAM,QAAN,AAAc,AACd;QAAA,AAAM,OAAN,AAAc,AACd,EAHF,CAAsD,AAGpD,AAAM,AAAO,AACb;;WACA;AAAA,AAAO,AACR;AAtBoB,AAuBrB;;;;;KAMA,qBAAqB,UAAU,UAAV,AAAoB;UACvC,AAAM,UAAN,AAAgB,AAChB;UAAA,AAAM,OAAO,MAAA,AAAM,MAAN,AAAY,QAAZ,AAAoB,MAFa,AAE9C,AAAa,AAA0B,AAEvC,AACA,aAAA,AAAI,AAAC,AAAS,AAAc,AAAmB,AAC7C;;SAAM,AAAI,SAAJ,AAAW,AAAM,cAAvB,AAAM,AAAsB,mBANgB,AAO7C;AACD;KARmB,AAA2B,AAC9C,CAQA;;;QAAI,CAAJ,AAAK,OAAO,AACV;aAAO,UAAA,AAAU,OAAjB,AAAO,AAAiB,AACzB;AAX6C,AAY9C;;;mCACA;A,AA1CG,AAAgB,AA0CnB,AAAO,AAAU,AAAO,AAAO,AAChC,AAGH;;;AACA,OAAA,AAAO,QAAP,AAAe","file":"/imports/plugins/included/discount-rates/server/methods/methods.js.map","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport { Match, check } from \"meteor/check\";\nimport { Reaction } from \"/server/api\";\nimport { Discounts } from  \"/imports/plugins/core/discounts/lib/collections\";\nimport { DiscountRates as DiscountSchema } from \"../../lib/collections/schemas\";\n\n// attach discount code specific schema\nDiscounts.attachSchema(DiscountSchema, { selector: { discountMethod: \"rate\" } });\n\n//\n// make all discount methods available\n//\nexport const methods = {\n  /**\n   * discounts/rates/amount\n   * for discount rates\n   * @param  {String} cartId cartId\n   * @param  {String} rateId rateid\n   * @return {Number} returns discount total\n   */\n  \"discounts/rates/amount\": function (cartId, rateId) {\n    check(cartId, String);\n    check(rateId, String);\n    const rate = 0;\n    // TODO: discounts/rates/amount\n    // should be pricing rate lookup.\n    return rate;\n  },\n  \"discounts/rates/discount\": function (cartId, rateId) {\n    check(cartId, String);\n    check(rateId, String);\n    const rate = 0;\n    // TODO: discounts/rates/discount\n    return rate;\n  },\n  /**\n   * discounts/addRate\n   * @param  {String} modifier update statement\n   * @param  {String} docId discount docId\n   * @return {String} returns update/insert result\n   */\n  \"discounts/addRate\": function (modifier, docId) {\n    check(modifier, Object);\n    check(docId, Match.OneOf(String, null, undefined));\n\n    // check permissions to add\n    if (!Reaction.hasPermission(\"discount-rates\")) {\n      throw new Meteor.Error(403, \"Access Denied\");\n    }\n    // if no doc, insert\n    if (!docId) {\n      return Discounts.insert(modifier);\n    }\n    // else update and return\n    return Discounts.update(docId, modifier);\n  }\n};\n\n// export methods to Meteor\nMeteor.methods(methods);\n"]},"hash":"1b4191f631ec63ec5884269387f0ddcd8635c048"}
