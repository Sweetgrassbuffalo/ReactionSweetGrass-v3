{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"lodash/includes","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_includes"}]},{"source":"meteor/ddp-rate-limiter","imported":["DDPRateLimiter"],"specifiers":[{"kind":"named","imported":"DDPRateLimiter","local":"DDPRateLimiter"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/server/security/rate-limits.js","filenameRelative":"/server/security/rate-limits.js","inputSourceMap":{"version":3,"sources":["/server/security/rate-limits.js"],"names":["DDPRateLimiter","authMethods","addRule","name","connectionId"],"mappings":";;;;;;;;;;;;GACA,AAAS,AAAT,AAA+B,AAA/B,AAGA,AAAe,AAAY,AACzB;;AAIA,AAAM,AAAc,AAClB,AADkB,AAElB,AAFkB,AAGlB,AAHkB,AAIlB,AAJkB,AAKlB,AALkB,AAMlB,AANkB,AAOlB,AAPkB,AAQlB,AARkB,AASlB,AATkB,AAUlB,AAVkB,AAWlB,AAXkB,AAYlB,AAZkB,AAalB,AAbkB,AAclB,AAdkB,AAApB,AAiBA,AAAe,AAAf,AAAuB,AACrB,AAAO,AAAD,AAAU,AAAW,AAAX,AAAwB,AAAxB,AADK,AAErB;;;SAAc,cAAM,AAFC,AAAvB,CAGG,AAHH,AAGM,AAHN,AAtByB,AA4BzB,yCAIA,eAAe,AAAf,AAAuB,AACrB,qBAAM,AADe,AAErB,yBAAc,AAAM,AAFC,AAAvB,kBAGG,AAHH,AAGM,AAHN,AAID","file":"/server/security/rate-limits.js.map","sourcesContent":["import _ from \"lodash\";\nimport { DDPRateLimiter } from \"meteor/ddp-rate-limiter\";\n\n\nexport default function () {\n  /**\n   * Rate limit Meteor Accounts methods\n   * 2 attempts per connection per 5 seconds\n   */\n  const authMethods = [\n    \"login\",\n    \"logout\",\n    \"logoutOtherClients\",\n    \"getNewToken\",\n    \"removeOtherTokens\",\n    \"configureLoginService\",\n    \"changePassword\",\n    \"forgotPassword\",\n    \"resetPassword\",\n    \"verifyEmail\",\n    \"createUser\",\n    \"ATRemoveService\",\n    \"ATCreateUserServer\",\n    \"ATResendVerificationEmail\"\n  ];\n\n  DDPRateLimiter.addRule({\n    name: (name) => _.includes(authMethods, name),\n    connectionId: () => true\n  }, 2, 5000);\n\n\n  /**\n   * Rate limit \"orders/sendNotification\"\n   * 1 attempt per connection per 2 seconds\n   */\n  DDPRateLimiter.addRule({\n    name: \"orders/sendNotification\",\n    connectionId: () => true\n  }, 1, 2000);\n}\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/server/security/rate-limits.js.map","sourceFileName":"/server/security/rate-limits.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"rate-limits"},"ignored":false,"code":"var _includes = void 0;\n\nmodule.importSync(\"lodash/includes\", {\n  \"default\": function (v) {\n    _includes = v;\n  }\n}, 0);\nvar DDPRateLimiter = void 0;\nmodule.importSync(\"meteor/ddp-rate-limiter\", {\n  DDPRateLimiter: function (v) {\n    DDPRateLimiter = v;\n  }\n}, 1);\nmodule.export(\"default\", exports.default = function () {\n  /**\n   * Rate limit Meteor Accounts methods\n   * 2 attempts per connection per 5 seconds\n   */var authMethods = [\"login\", \"logout\", \"logoutOtherClients\", \"getNewToken\", \"removeOtherTokens\", \"configureLoginService\", \"changePassword\", \"forgotPassword\", \"resetPassword\", \"verifyEmail\", \"createUser\", \"ATRemoveService\", \"ATCreateUserServer\", \"ATResendVerificationEmail\"];\n  DDPRateLimiter.addRule({\n    name: function (name) {\n      return _includes(authMethods, name);\n    },\n    connectionId: function () {\n      return true;\n    }\n  }, 2, 5000); /**\n                * Rate limit \"orders/sendNotification\"\n                * 1 attempt per connection per 2 seconds\n                */\n  DDPRateLimiter.addRule({\n    name: \"orders/sendNotification\",\n    connectionId: function () {\n      return true;\n    }\n  }, 1, 2000);\n});","map":{"version":3,"sources":["/server/security/rate-limits.js"],"names":["DDPRateLimiter","authMethods","addRule","name","connectionId"],"mappings":";;;;;;;;;;;;GACA,AAAS,AAAT,AAA+B,AAA/B,AAGA,AAAe,AAAY,AACzB;;AAIA,AAAM,AAAc,AAClB,AADkB,AAElB,AAFkB,AAGlB,AAHkB,AAIlB,AAJkB,AAKlB,AALkB,AAMlB,AANkB,AAOlB,AAPkB,AAQlB,AARkB,AASlB,AATkB,AAUlB,AAVkB,AAWlB,AAXkB,AAYlB,AAZkB,AAalB,AAbkB,AAclB,AAdkB,AAApB,AAiBA,AAAe,AAAf,AAAuB,AACrB,AAAO,AAAD,AAAU,AAAW,AAAX,AAAwB,AAAxB,AADK,AAErB;;;SAAc,cAAM,AAFC,AAAvB,CAGG,AAHH,AAGM,AAHN,AAtByB,AA4BzB,yCAIA,eAAe,AAAf,AAAuB,AACrB,qBAAM,AADe,AAErB,yBAAc,AAAM,AAFC,AAAvB,kBAGG,AAHH,AAGM,AAHN,AAID","file":"/server/security/rate-limits.js.map","sourcesContent":["import _ from \"lodash\";\nimport { DDPRateLimiter } from \"meteor/ddp-rate-limiter\";\n\n\nexport default function () {\n  /**\n   * Rate limit Meteor Accounts methods\n   * 2 attempts per connection per 5 seconds\n   */\n  const authMethods = [\n    \"login\",\n    \"logout\",\n    \"logoutOtherClients\",\n    \"getNewToken\",\n    \"removeOtherTokens\",\n    \"configureLoginService\",\n    \"changePassword\",\n    \"forgotPassword\",\n    \"resetPassword\",\n    \"verifyEmail\",\n    \"createUser\",\n    \"ATRemoveService\",\n    \"ATCreateUserServer\",\n    \"ATResendVerificationEmail\"\n  ];\n\n  DDPRateLimiter.addRule({\n    name: (name) => _.includes(authMethods, name),\n    connectionId: () => true\n  }, 2, 5000);\n\n\n  /**\n   * Rate limit \"orders/sendNotification\"\n   * 1 attempt per connection per 2 seconds\n   */\n  DDPRateLimiter.addRule({\n    name: \"orders/sendNotification\",\n    connectionId: () => true\n  }, 1, 2000);\n}\n"]},"hash":"326da81e96d70cac71f1344155261feecffbae56"}
