{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","createClass","classCallCheck","extends","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component","PropTypes"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"},{"kind":"named","imported":"PropTypes","local":"PropTypes"}]},{"source":"classnames","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"classnames"}]},{"source":"meteor/gadicc:blaze-react-component","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Blaze"}]},{"source":"/imports/plugins/core/ui/client/providers","imported":["Admin"],"specifiers":[{"kind":"named","imported":"Admin","local":"Admin"}]},{"source":"radium","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Radium"}]},{"source":"velocity-animate","imported":[],"specifiers":[]},{"source":"velocity-animate/velocity.ui","imported":[],"specifiers":[]},{"source":"velocity-react","imported":["VelocityTransitionGroup"],"specifiers":[{"kind":"named","imported":"VelocityTransitionGroup","local":"VelocityTransitionGroup"}]},{"source":"lodash/debounce","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"debounce"}]},{"source":"/imports/plugins/core/ui/client/components","imported":["IconButton","Translation","Overlay"],"specifiers":[{"kind":"named","imported":"IconButton","local":"IconButton"},{"kind":"named","imported":"Translation","local":"Translation"},{"kind":"named","imported":"Overlay","local":"Overlay"}]},{"source":"/imports/plugins/core/layout/lib/components","imported":["getComponent"],"specifiers":[{"kind":"named","imported":"getComponent","local":"getComponent"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/core/dashboard/client/components/actionView.js","filenameRelative":"/imports/plugins/core/dashboard/client/components/actionView.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/core/dashboard/client/components/actionView.js"],"names":["React","Component","PropTypes","classnames","Blaze","Admin","Radium","VelocityTransitionGroup","debounce","IconButton","Translation","Overlay","getComponent","getStyles","props","viewSize","actionView","isBigView","provides","container","meta","isSmView","dashboardSize","isMdView","isLgView","actionViewIsOpen","base","width","header","display","alignItems","position","minHeight","height","padding","heading","flex","margin","body","overflow","WebkitOverflowScrolling","masterViewPanel","flexDirection","masterView","detailViewPanel","top","right","zIndex","detailView","backButton","backButtonContainers","ActionView","propTypes","object","bool","buttons","array","detailViewIsOpen","handleActionViewBack","func","handleActionViewClose","handleActionViewDetailBack","handleActionViewDetailClose","isActionViewAtRootView","isDetailViewAtRootView","constructor","state","isMobile","enterAnimation","animation","translateX","duration","easing","leaveAnimation","enterAnimationForDetailView","leaveAnimationForDetailView","handleResize","window","setState","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","renderControlComponent","template","component","styles","createElement","data","renderDetailComponent","renderFooter","renderBackButton","button","matchMedia","matches","actionViewIsLargeSize","showOverlay","showDetailViewOverlay","renderDetailViewBackButton","backButtonEnterAnimation","left","opaticy","backButtonLeaveAnimaton","renderMasterView","title","label","i18nKeyLabel","renderDetailView","baseClassName","renderActionView","render"],"mappings":"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","file":"/imports/plugins/core/dashboard/client/components/actionView.js.map","sourcesContent":["import React, { Component, PropTypes } from \"react\";\nimport classnames from \"classnames\";\nimport Blaze from \"meteor/gadicc:blaze-react-component\";\nimport { Admin } from \"/imports/plugins/core/ui/client/providers\";\nimport Radium from \"radium\";\nimport \"velocity-animate\";\nimport \"velocity-animate/velocity.ui\";\nimport { VelocityTransitionGroup } from \"velocity-react\";\nimport debounce from \"lodash/debounce\";\nimport {\n  IconButton,\n  Translation,\n  Overlay\n} from \"/imports/plugins/core/ui/client/components\";\nimport { getComponent } from \"/imports/plugins/core/layout/lib/components\";\n\n\nconst getStyles = (props) => {\n  let viewSize = 400;\n  const actionView = props.actionView || {};\n  const isBigView = actionView.provides === \"dashboard\" || (actionView.provides === \"shortcut\" && actionView.container === \"dashboard\");\n\n  if (isBigView) {\n    viewSize = \"90vw\";\n  }\n\n  if (actionView.meta && actionView.meta.actionView) {\n    const isSmView = actionView.meta.actionView.dashboardSize === \"sm\";\n    const isMdView = actionView.meta.actionView.dashboardSize === \"md\";\n    const isLgView = actionView.meta.actionView.dashboardSize === \"lg\";\n\n    if (isSmView) {\n      viewSize = \"400px\";\n    }\n    if (isMdView) {\n      viewSize = \"50vw\";\n    }\n    if (isLgView) {\n      viewSize = \"90vw\";\n    }\n  }\n\n  if (props.actionViewIsOpen === false) {\n    viewSize = 400;\n  }\n\n  return {\n    base: {\n      \"display\": \"flex\",\n      \"flexDirection\": \"row\",\n      \"height\": \"100vh\",\n      \"position\": \"relative\",\n      \"width\": viewSize,\n      \"minWidth\": 400,\n      \"@media only screen and (max-width: 949px)\": {\n        width: \"100vw\"\n      },\n      \"boxShadow\": isBigView ? \"0 0 40px rgba(0,0,0,.1)\" : \"\",\n      \"flex\": \"0 0 auto\",\n      \"backgroundColor\": \"white\",\n      \"borderLeft\": \"1px solid @black10\",\n      \"overflow\": \"hidden\",\n      \"transition\": \"width 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955))\",\n      \"zIndex\": 1050\n    },\n    header: {\n      display: \"flex\",\n      alignItems: \"center\",\n      position: \"relative\",\n      minHeight: \"56px\",\n      height: \"56px\",\n      padding: \"0 20px\"\n    },\n    heading: {\n      display: \"flex\",\n      alignItems: \"center\",\n      flex: \"1 1 auto\",\n      position: \"relative\",\n      margin: \"0 0 0 1rem\",\n      height: \"100%\"\n    },\n    body: {\n      display: \"flex\",\n      flex: \"1 1 auto\",\n      overflow: \"auto\",\n      WebkitOverflowScrolling: \"touch\"\n    },\n    masterViewPanel: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      flex: \"1 1 auto\"\n      // height: \"100%\"\n    },\n    masterView: {\n      flex: \"1 1 auto\",\n      // height: \"100%\",\n      overflow: \"auto\"\n      // WebkitOverflowScrolling: \"touch\"\n    },\n    detailViewPanel: {\n      \"display\": \"flex\",\n      \"flexDirection\": \"column\",\n      \"flex\": \"1 1 auto\",\n      \"maxWidth\": \"400px\",\n      \"height\": \"100vh\",\n      \"backgroundColor\": \"white\",\n      \"borderRight\": \"1px solid #ccc\",\n      \"@media only screen and (max-width: 949px)\": {\n        position: \"absolute\",\n        top: 0,\n        right: 0,\n        width: \"96vw\",\n        zIndex: 1050\n      }\n    },\n    detailView: {\n      width: \"100%\"\n    },\n    backButton: {\n      height: \"100%\"\n    },\n    backButtonContainers: {\n      display: \"flex\",\n      alignItems: \"center\",\n      height: \"100%\"\n    }\n  };\n};\n\nclass ActionView extends Component {\n  static propTypes = {\n    actionView: PropTypes.object,\n    actionViewIsOpen: PropTypes.bool,\n    buttons: PropTypes.array,\n    detailView: PropTypes.object,\n    detailViewIsOpen: PropTypes.bool,\n    handleActionViewBack: PropTypes.func,\n    handleActionViewClose: PropTypes.func,\n    handleActionViewDetailBack: PropTypes.func,\n    handleActionViewDetailClose: PropTypes.func,\n    isActionViewAtRootView: PropTypes.bool,\n    isDetailViewAtRootView: PropTypes.bool\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isMobile: this.isMobile,\n      enterAnimation: {\n        animation: { translateX: 0 },\n        duration: 200,\n        easing: \"easeInOutQuad\"\n      },\n      leaveAnimation: {\n        animation: { translateX: 400 },\n        duration: 200,\n        easing: \"easeInOutQuad\"\n      },\n      enterAnimationForDetailView: {\n        animation: { width: 400 },\n        duration: 200,\n        easing: \"easeInOutQuad\"\n      },\n      leaveAnimationForDetailView: {\n        animation: { width: 0 },\n        duration: 200,\n        easing: \"easeInOutQuad\"\n      }\n    };\n\n    this.handleResize = debounce(() => {\n      if (window) {\n        this.setState({\n          isMobile: this.isMobile\n        });\n      }\n    }, 66);\n  }\n\n  componentDidMount() {\n    if (window) {\n      window.addEventListener(\"resize\", this.handleResize, false);\n    }\n  }\n\n  componentWillUnmount() {\n    if (window) {\n      window.removeEventListener(\"resize\", this.handleResize);\n    }\n  }\n\n  renderControlComponent() {\n    if (this.props.actionView && typeof this.props.actionView.template === \"string\") {\n      // Render a react component if one has been registered by name\n      const component = getComponent(this.props.actionView.template);\n\n      if (component) {\n        return (\n          <div style={this.styles.masterView} className=\"master\">\n            {React.createElement(component, this.props.actionView.data)}\n          </div>\n        );\n      }\n\n      return (\n        <div style={this.styles.masterView} className=\"master\">\n          <Blaze\n            {...this.props.actionView.data}\n            template={this.props.actionView.template}\n          />\n        </div>\n      );\n    }\n\n    return null;\n  }\n\n  renderDetailComponent() {\n    if (this.props.detailView && typeof this.props.detailView.template === \"string\") {\n      return (\n        <div style={this.styles.detailView} className=\"detail\">\n          <Blaze\n            {...this.props.detailView.data}\n            template={this.props.detailView.template}\n          />\n        </div>\n      );\n    }\n\n    return null;\n  }\n\n  renderFooter() {\n    // if (this.props.footerTemplate) {\n    //   return (\n    //     <Blaze template={this.props.footerTemplate} />\n    //   );\n    // }\n  }\n\n  renderBackButton() {\n    let button;\n\n    if (this.props.isActionViewAtRootView === false) {\n      button = (\n        <IconButton\n          bezelStyle={\"flat\"}\n          icon=\"fa fa-arrow-left\"\n          onClick={this.props.handleActionViewBack}\n        />\n      );\n    } else {\n      button = (\n        <IconButton\n          bezelStyle={\"flat\"}\n          icon=\"fa fa-times\"\n          onClick={this.props.handleActionViewClose}\n        />\n      );\n    }\n\n    return (\n      <div style={this.styles.backButton}>\n        <div style={this.styles.backButtonContainers}>\n          {button}\n        </div>\n      </div>\n    );\n  }\n\n  get isMobile() {\n    return window.matchMedia(\"(max-width: 991px)\").matches;\n  }\n\n  get actionViewIsLargeSize() {\n    const { meta } = this.props.actionView;\n    const dashboardSize = meta && meta.actionView && meta.actionView.dashboardSize || \"sm\";\n\n    return this.props.actionView.provides === \"dashboard\" || dashboardSize !== \"sm\";\n  }\n\n  get showOverlay() {\n    if (this.props.actionViewIsOpen === false) {\n      return false;\n    }\n\n    return this.actionViewIsLargeSize || this.state.isMobile;\n  }\n\n  get showDetailViewOverlay() {\n    return this.props.detailViewIsOpen && this.state.isMobile;\n  }\n\n  renderDetailViewBackButton() {\n    if (this.props.isDetailViewAtRootView === false) {\n      return (\n        <div style={this.styles.backButton}>\n          <div style={this.styles.backButtonContainers}>\n            <IconButton\n              bezelStyle={\"flat\"}\n              icon=\"fa fa-arrow-left\"\n              onClick={this.props.handleActionViewDetailBack}\n            />\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <IconButton\n        bezelStyle={\"flat\"}\n        icon=\"fa fa-times\"\n        onClick={this.props.handleActionViewDetailClose}\n      />\n    );\n  }\n\n  get styles() {\n    return getStyles(this.props);\n  }\n\n  get backButtonEnterAnimation() {\n    return {\n      animation: {\n        display: \"flex\",\n        position: \"absolute\",\n        left: 20,\n        opaticy: 1\n      },\n      duration: 200\n    };\n  }\n\n  get backButtonLeaveAnimaton() {\n    return {\n      animation: {\n        display: \"flex\",\n        position: \"absolute\",\n        left: -30,\n        opaticy: 0\n      },\n      duration: 200\n\n    };\n  }\n\n  renderMasterView() {\n    const { actionView } = this.props;\n\n    return (\n      <div style={this.styles.masterViewPanel}>\n        <div style={this.styles.header} className=\"header\">\n          {this.renderBackButton()}\n          <div style={this.styles.heading} className=\"heading\">\n            <h3 className=\"title\" style={this.styles.title}>\n              <Translation\n                defaultValue={actionView.label || \"Dashboard\"}\n                i18nKey={actionView.i18nKeyLabel || \"dashboard.coreTitle\"}\n              />\n            </h3>\n          </div>\n\n          <div className=\"controls»\">\n            {/* Controls */}\n          </div>\n        </div>\n        <div style={this.styles.body} className=\"admin-controls-content action-view-body\">\n\n            {this.renderControlComponent()}\n\n        </div>\n      </div>\n\n    );\n  }\n\n  renderDetailView() {\n    const { actionView } = this.props;\n\n    const baseClassName = classnames({\n      \"rui\": true,\n      \"admin\": true,\n      \"action-view-pane\": true,\n      \"action-view-detail\": true\n    });\n\n    if (this.props.detailViewIsOpen) {\n      return (\n        <div className={baseClassName} style={this.styles.detailViewPanel}>\n          <div style={this.styles.header} className=\"header\">\n            <VelocityTransitionGroup\n              enter={this.backButtonEnterAnimation}\n              leave={this.backButtonLeaveAnimaton}\n            >\n              {this.renderDetailViewBackButton()}\n            </VelocityTransitionGroup>\n\n            <div style={this.styles.heading} className=\"heading\">\n              <h3 className=\"title\" style={this.styles.title}>\n                <Translation\n                  defaultValue={actionView.label}\n                  i18nKey={actionView.i18nKeyLabel}\n                />\n              </h3>\n            </div>\n\n            <div className=\"controls\">\n              {/* Controls */}\n            </div>\n          </div>\n          <div style={this.styles.body} className=\"admin-controls-content action-view-body\">\n\n              {/* this.renderControlComponent() */}\n              {this.renderDetailComponent()}\n          </div>\n        </div>\n\n      );\n    }\n  }\n\n  renderActionView() {\n    const baseClassName = classnames({\n      \"rui\": true,\n      \"admin\": true,\n      \"action-view-pane\": true,\n      \"action-view\": true,\n      \"open\": this.props.actionViewIsOpen\n    });\n\n    if (this.props.actionViewIsOpen) {\n      return (\n        <div style={this.styles.base} className={baseClassName}>\n\n          {this.renderMasterView()}\n          <Overlay\n            isVisible={this.showDetailViewOverlay}\n            onClick={this.props.handleActionViewDetailClose}\n          />\n          <VelocityTransitionGroup\n            enter={this.state.enterAnimationForDetailView}\n            leave={this.state.leaveAnimationForDetailView}\n          >\n            {this.renderDetailView()}\n          </VelocityTransitionGroup>\n\n\n          <div className=\"admin-controls-footer\">\n            <div className=\"admin-controls-container\">\n              {this.renderFooter()}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return null;\n  }\n\n  render() {\n    return (\n      <div>\n        <VelocityTransitionGroup\n          enter={this.state.enterAnimation}\n          leave={this.state.leaveAnimation}\n        >\n          {this.renderActionView()}\n        </VelocityTransitionGroup>\n\n        <Overlay\n          isVisible={this.showOverlay}\n          onClick={this.props.handleActionViewClose}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Admin()(Radium(ActionView));\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/core/dashboard/client/components/actionView.js.map","sourceFileName":"/imports/plugins/core/dashboard/client/components/actionView.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"actionView"},"ignored":false,"code":"var _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0,\n    Component = void 0,\n    PropTypes = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  },\n  PropTypes: function (v) {\n    PropTypes = v;\n  }\n}, 0);\nvar classnames = void 0;\nmodule.importSync(\"classnames\", {\n  \"default\": function (v) {\n    classnames = v;\n  }\n}, 1);\nvar Blaze = void 0;\nmodule.importSync(\"meteor/gadicc:blaze-react-component\", {\n  \"default\": function (v) {\n    Blaze = v;\n  }\n}, 2);\nvar Admin = void 0;\nmodule.importSync(\"/imports/plugins/core/ui/client/providers\", {\n  Admin: function (v) {\n    Admin = v;\n  }\n}, 3);\nvar Radium = void 0;\nmodule.importSync(\"radium\", {\n  \"default\": function (v) {\n    Radium = v;\n  }\n}, 4);\nmodule.importSync(\"velocity-animate\");\nmodule.importSync(\"velocity-animate/velocity.ui\");\nvar VelocityTransitionGroup = void 0;\nmodule.importSync(\"velocity-react\", {\n  VelocityTransitionGroup: function (v) {\n    VelocityTransitionGroup = v;\n  }\n}, 7);\nvar debounce = void 0;\nmodule.importSync(\"lodash/debounce\", {\n  \"default\": function (v) {\n    debounce = v;\n  }\n}, 8);\nvar IconButton = void 0,\n    Translation = void 0,\n    Overlay = void 0;\nmodule.importSync(\"/imports/plugins/core/ui/client/components\", {\n  IconButton: function (v) {\n    IconButton = v;\n  },\n  Translation: function (v) {\n    Translation = v;\n  },\n  Overlay: function (v) {\n    Overlay = v;\n  }\n}, 9);\nvar getComponent = void 0;\nmodule.importSync(\"/imports/plugins/core/layout/lib/components\", {\n  getComponent: function (v) {\n    getComponent = v;\n  }\n}, 10);\n\nvar getStyles = function (props) {\n  var viewSize = 400;\n  var actionView = props.actionView || {};\n  var isBigView = actionView.provides === \"dashboard\" || actionView.provides === \"shortcut\" && actionView.container === \"dashboard\";\n\n  if (isBigView) {\n    viewSize = \"90vw\";\n  }\n\n  if (actionView.meta && actionView.meta.actionView) {\n    var isSmView = actionView.meta.actionView.dashboardSize === \"sm\";\n    var isMdView = actionView.meta.actionView.dashboardSize === \"md\";\n    var isLgView = actionView.meta.actionView.dashboardSize === \"lg\";\n\n    if (isSmView) {\n      viewSize = \"400px\";\n    }\n\n    if (isMdView) {\n      viewSize = \"50vw\";\n    }\n\n    if (isLgView) {\n      viewSize = \"90vw\";\n    }\n  }\n\n  if (props.actionViewIsOpen === false) {\n    viewSize = 400;\n  }\n\n  return {\n    base: {\n      \"display\": \"flex\",\n      \"flexDirection\": \"row\",\n      \"height\": \"100vh\",\n      \"position\": \"relative\",\n      \"width\": viewSize,\n      \"minWidth\": 400,\n      \"@media only screen and (max-width: 949px)\": {\n        width: \"100vw\"\n      },\n      \"boxShadow\": isBigView ? \"0 0 40px rgba(0,0,0,.1)\" : \"\",\n      \"flex\": \"0 0 auto\",\n      \"backgroundColor\": \"white\",\n      \"borderLeft\": \"1px solid @black10\",\n      \"overflow\": \"hidden\",\n      \"transition\": \"width 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955))\",\n      \"zIndex\": 1050\n    },\n    header: {\n      display: \"flex\",\n      alignItems: \"center\",\n      position: \"relative\",\n      minHeight: \"56px\",\n      height: \"56px\",\n      padding: \"0 20px\"\n    },\n    heading: {\n      display: \"flex\",\n      alignItems: \"center\",\n      flex: \"1 1 auto\",\n      position: \"relative\",\n      margin: \"0 0 0 1rem\",\n      height: \"100%\"\n    },\n    body: {\n      display: \"flex\",\n      flex: \"1 1 auto\",\n      overflow: \"auto\",\n      WebkitOverflowScrolling: \"touch\"\n    },\n    masterViewPanel: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      flex: \"1 1 auto\" // height: \"100%\"\n\n    },\n    masterView: {\n      flex: \"1 1 auto\",\n      // height: \"100%\",\n      overflow: \"auto\" // WebkitOverflowScrolling: \"touch\"\n\n    },\n    detailViewPanel: {\n      \"display\": \"flex\",\n      \"flexDirection\": \"column\",\n      \"flex\": \"1 1 auto\",\n      \"maxWidth\": \"400px\",\n      \"height\": \"100vh\",\n      \"backgroundColor\": \"white\",\n      \"borderRight\": \"1px solid #ccc\",\n      \"@media only screen and (max-width: 949px)\": {\n        position: \"absolute\",\n        top: 0,\n        right: 0,\n        width: \"96vw\",\n        zIndex: 1050\n      }\n    },\n    detailView: {\n      width: \"100%\"\n    },\n    backButton: {\n      height: \"100%\"\n    },\n    backButtonContainers: {\n      display: \"flex\",\n      alignItems: \"center\",\n      height: \"100%\"\n    }\n  };\n};\n\nvar ActionView = function (_Component) {\n  (0, _inherits3.default)(ActionView, _Component);\n\n  function ActionView(props) {\n    (0, _classCallCheck3.default)(this, ActionView);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));\n\n    _this.state = {\n      isMobile: _this.isMobile,\n      enterAnimation: {\n        animation: {\n          translateX: 0\n        },\n        duration: 200,\n        easing: \"easeInOutQuad\"\n      },\n      leaveAnimation: {\n        animation: {\n          translateX: 400\n        },\n        duration: 200,\n        easing: \"easeInOutQuad\"\n      },\n      enterAnimationForDetailView: {\n        animation: {\n          width: 400\n        },\n        duration: 200,\n        easing: \"easeInOutQuad\"\n      },\n      leaveAnimationForDetailView: {\n        animation: {\n          width: 0\n        },\n        duration: 200,\n        easing: \"easeInOutQuad\"\n      }\n    };\n    _this.handleResize = debounce(function () {\n      if (window) {\n        _this.setState({\n          isMobile: _this.isMobile\n        });\n      }\n    }, 66);\n    return _this;\n  }\n\n  ActionView.prototype.componentDidMount = function () {\n    function componentDidMount() {\n      if (window) {\n        window.addEventListener(\"resize\", this.handleResize, false);\n      }\n    }\n\n    return componentDidMount;\n  }();\n\n  ActionView.prototype.componentWillUnmount = function () {\n    function componentWillUnmount() {\n      if (window) {\n        window.removeEventListener(\"resize\", this.handleResize);\n      }\n    }\n\n    return componentWillUnmount;\n  }();\n\n  ActionView.prototype.renderControlComponent = function () {\n    function renderControlComponent() {\n      if (this.props.actionView && typeof this.props.actionView.template === \"string\") {\n        // Render a react component if one has been registered by name\n        var component = getComponent(this.props.actionView.template);\n\n        if (component) {\n          return React.createElement(\n            \"div\",\n            {\n              style: this.styles.masterView,\n              className: \"master\"\n            },\n            React.createElement(component, this.props.actionView.data)\n          );\n        }\n\n        return React.createElement(\n          \"div\",\n          {\n            style: this.styles.masterView,\n            className: \"master\"\n          },\n          React.createElement(Blaze, (0, _extends3.default)({}, this.props.actionView.data, {\n            template: this.props.actionView.template\n          }))\n        );\n      }\n\n      return null;\n    }\n\n    return renderControlComponent;\n  }();\n\n  ActionView.prototype.renderDetailComponent = function () {\n    function renderDetailComponent() {\n      if (this.props.detailView && typeof this.props.detailView.template === \"string\") {\n        return React.createElement(\n          \"div\",\n          {\n            style: this.styles.detailView,\n            className: \"detail\"\n          },\n          React.createElement(Blaze, (0, _extends3.default)({}, this.props.detailView.data, {\n            template: this.props.detailView.template\n          }))\n        );\n      }\n\n      return null;\n    }\n\n    return renderDetailComponent;\n  }();\n\n  ActionView.prototype.renderFooter = function () {\n    function renderFooter() {// if (this.props.footerTemplate) {\n      //   return (\n      //     <Blaze template={this.props.footerTemplate} />\n      //   );\n      // }\n    }\n\n    return renderFooter;\n  }();\n\n  ActionView.prototype.renderBackButton = function () {\n    function renderBackButton() {\n      var button = void 0;\n\n      if (this.props.isActionViewAtRootView === false) {\n        button = React.createElement(IconButton, {\n          bezelStyle: \"flat\",\n          icon: \"fa fa-arrow-left\",\n          onClick: this.props.handleActionViewBack\n        });\n      } else {\n        button = React.createElement(IconButton, {\n          bezelStyle: \"flat\",\n          icon: \"fa fa-times\",\n          onClick: this.props.handleActionViewClose\n        });\n      }\n\n      return React.createElement(\n        \"div\",\n        {\n          style: this.styles.backButton\n        },\n        React.createElement(\n          \"div\",\n          {\n            style: this.styles.backButtonContainers\n          },\n          button\n        )\n      );\n    }\n\n    return renderBackButton;\n  }();\n\n  ActionView.prototype.renderDetailViewBackButton = function () {\n    function renderDetailViewBackButton() {\n      if (this.props.isDetailViewAtRootView === false) {\n        return React.createElement(\n          \"div\",\n          {\n            style: this.styles.backButton\n          },\n          React.createElement(\n            \"div\",\n            {\n              style: this.styles.backButtonContainers\n            },\n            React.createElement(IconButton, {\n              bezelStyle: \"flat\",\n              icon: \"fa fa-arrow-left\",\n              onClick: this.props.handleActionViewDetailBack\n            })\n          )\n        );\n      }\n\n      return React.createElement(IconButton, {\n        bezelStyle: \"flat\",\n        icon: \"fa fa-times\",\n        onClick: this.props.handleActionViewDetailClose\n      });\n    }\n\n    return renderDetailViewBackButton;\n  }();\n\n  ActionView.prototype.renderMasterView = function () {\n    function renderMasterView() {\n      var actionView = this.props.actionView;\n      return React.createElement(\n        \"div\",\n        {\n          style: this.styles.masterViewPanel\n        },\n        React.createElement(\n          \"div\",\n          {\n            style: this.styles.header,\n            className: \"header\"\n          },\n          this.renderBackButton(),\n          React.createElement(\n            \"div\",\n            {\n              style: this.styles.heading,\n              className: \"heading\"\n            },\n            React.createElement(\n              \"h3\",\n              {\n                className: \"title\",\n                style: this.styles.title\n              },\n              React.createElement(Translation, {\n                defaultValue: actionView.label || \"Dashboard\",\n                i18nKey: actionView.i18nKeyLabel || \"dashboard.coreTitle\"\n              })\n            )\n          ),\n          React.createElement(\"div\", {\n            className: \"controls\\xBB\"\n          })\n        ),\n        React.createElement(\n          \"div\",\n          {\n            style: this.styles.body,\n            className: \"admin-controls-content action-view-body\"\n          },\n          this.renderControlComponent()\n        )\n      );\n    }\n\n    return renderMasterView;\n  }();\n\n  ActionView.prototype.renderDetailView = function () {\n    function renderDetailView() {\n      var actionView = this.props.actionView;\n      var baseClassName = classnames({\n        \"rui\": true,\n        \"admin\": true,\n        \"action-view-pane\": true,\n        \"action-view-detail\": true\n      });\n\n      if (this.props.detailViewIsOpen) {\n        return React.createElement(\n          \"div\",\n          {\n            className: baseClassName,\n            style: this.styles.detailViewPanel\n          },\n          React.createElement(\n            \"div\",\n            {\n              style: this.styles.header,\n              className: \"header\"\n            },\n            React.createElement(\n              VelocityTransitionGroup,\n              {\n                enter: this.backButtonEnterAnimation,\n                leave: this.backButtonLeaveAnimaton\n              },\n              this.renderDetailViewBackButton()\n            ),\n            React.createElement(\n              \"div\",\n              {\n                style: this.styles.heading,\n                className: \"heading\"\n              },\n              React.createElement(\n                \"h3\",\n                {\n                  className: \"title\",\n                  style: this.styles.title\n                },\n                React.createElement(Translation, {\n                  defaultValue: actionView.label,\n                  i18nKey: actionView.i18nKeyLabel\n                })\n              )\n            ),\n            React.createElement(\"div\", {\n              className: \"controls\"\n            })\n          ),\n          React.createElement(\n            \"div\",\n            {\n              style: this.styles.body,\n              className: \"admin-controls-content action-view-body\"\n            },\n            this.renderDetailComponent()\n          )\n        );\n      }\n    }\n\n    return renderDetailView;\n  }();\n\n  ActionView.prototype.renderActionView = function () {\n    function renderActionView() {\n      var baseClassName = classnames({\n        \"rui\": true,\n        \"admin\": true,\n        \"action-view-pane\": true,\n        \"action-view\": true,\n        \"open\": this.props.actionViewIsOpen\n      });\n\n      if (this.props.actionViewIsOpen) {\n        return React.createElement(\n          \"div\",\n          {\n            style: this.styles.base,\n            className: baseClassName\n          },\n          this.renderMasterView(),\n          React.createElement(Overlay, {\n            isVisible: this.showDetailViewOverlay,\n            onClick: this.props.handleActionViewDetailClose\n          }),\n          React.createElement(\n            VelocityTransitionGroup,\n            {\n              enter: this.state.enterAnimationForDetailView,\n              leave: this.state.leaveAnimationForDetailView\n            },\n            this.renderDetailView()\n          ),\n          React.createElement(\n            \"div\",\n            {\n              className: \"admin-controls-footer\"\n            },\n            React.createElement(\n              \"div\",\n              {\n                className: \"admin-controls-container\"\n              },\n              this.renderFooter()\n            )\n          )\n        );\n      }\n\n      return null;\n    }\n\n    return renderActionView;\n  }();\n\n  ActionView.prototype.render = function () {\n    function render() {\n      return React.createElement(\n        \"div\",\n        null,\n        React.createElement(\n          VelocityTransitionGroup,\n          {\n            enter: this.state.enterAnimation,\n            leave: this.state.leaveAnimation\n          },\n          this.renderActionView()\n        ),\n        React.createElement(Overlay, {\n          isVisible: this.showOverlay,\n          onClick: this.props.handleActionViewClose\n        })\n      );\n    }\n\n    return render;\n  }();\n\n  (0, _createClass3.default)(ActionView, [{\n    key: \"isMobile\",\n    get: function () {\n      return window.matchMedia(\"(max-width: 991px)\").matches;\n    }\n  }, {\n    key: \"actionViewIsLargeSize\",\n    get: function () {\n      var meta = this.props.actionView.meta;\n      var dashboardSize = meta && meta.actionView && meta.actionView.dashboardSize || \"sm\";\n      return this.props.actionView.provides === \"dashboard\" || dashboardSize !== \"sm\";\n    }\n  }, {\n    key: \"showOverlay\",\n    get: function () {\n      if (this.props.actionViewIsOpen === false) {\n        return false;\n      }\n\n      return this.actionViewIsLargeSize || this.state.isMobile;\n    }\n  }, {\n    key: \"showDetailViewOverlay\",\n    get: function () {\n      return this.props.detailViewIsOpen && this.state.isMobile;\n    }\n  }, {\n    key: \"styles\",\n    get: function () {\n      return getStyles(this.props);\n    }\n  }, {\n    key: \"backButtonEnterAnimation\",\n    get: function () {\n      return {\n        animation: {\n          display: \"flex\",\n          position: \"absolute\",\n          left: 20,\n          opaticy: 1\n        },\n        duration: 200\n      };\n    }\n  }, {\n    key: \"backButtonLeaveAnimaton\",\n    get: function () {\n      return {\n        animation: {\n          display: \"flex\",\n          position: \"absolute\",\n          left: -30,\n          opaticy: 0\n        },\n        duration: 200\n      };\n    }\n  }]);\n  return ActionView;\n}(Component);\n\nActionView.propTypes = {\n  actionView: PropTypes.object,\n  actionViewIsOpen: PropTypes.bool,\n  buttons: PropTypes.array,\n  detailView: PropTypes.object,\n  detailViewIsOpen: PropTypes.bool,\n  handleActionViewBack: PropTypes.func,\n  handleActionViewClose: PropTypes.func,\n  handleActionViewDetailBack: PropTypes.func,\n  handleActionViewDetailClose: PropTypes.func,\n  isActionViewAtRootView: PropTypes.bool,\n  isDetailViewAtRootView: PropTypes.bool\n};\nmodule.export(\"default\", exports.default = Admin()(Radium(ActionView)));","map":{"version":3,"sources":["/imports/plugins/core/dashboard/client/components/actionView.js"],"names":["React","Component","PropTypes","classnames","Blaze","Admin","Radium","VelocityTransitionGroup","debounce","IconButton","Translation","Overlay","getComponent","getStyles","props","viewSize","actionView","isBigView","provides","container","meta","isSmView","dashboardSize","isMdView","isLgView","actionViewIsOpen","base","width","header","display","alignItems","position","minHeight","height","padding","heading","flex","margin","body","overflow","WebkitOverflowScrolling","masterViewPanel","flexDirection","masterView","detailViewPanel","top","right","zIndex","detailView","backButton","backButtonContainers","ActionView","propTypes","object","bool","buttons","array","detailViewIsOpen","handleActionViewBack","func","handleActionViewClose","handleActionViewDetailBack","handleActionViewDetailClose","isActionViewAtRootView","isDetailViewAtRootView","constructor","state","isMobile","enterAnimation","animation","translateX","duration","easing","leaveAnimation","enterAnimationForDetailView","leaveAnimationForDetailView","handleResize","window","setState","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","renderControlComponent","template","component","styles","createElement","data","renderDetailComponent","renderFooter","renderBackButton","button","matchMedia","matches","actionViewIsLargeSize","showOverlay","showDetailViewOverlay","renderDetailViewBackButton","backButtonEnterAnimation","left","opaticy","backButtonLeaveAnimaton","renderMasterView","title","label","i18nKeyLabel","renderDetailView","baseClassName","renderActionView","render"],"mappings":"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","file":"/imports/plugins/core/dashboard/client/components/actionView.js.map","sourcesContent":["import React, { Component, PropTypes } from \"react\";\nimport classnames from \"classnames\";\nimport Blaze from \"meteor/gadicc:blaze-react-component\";\nimport { Admin } from \"/imports/plugins/core/ui/client/providers\";\nimport Radium from \"radium\";\nimport \"velocity-animate\";\nimport \"velocity-animate/velocity.ui\";\nimport { VelocityTransitionGroup } from \"velocity-react\";\nimport debounce from \"lodash/debounce\";\nimport {\n  IconButton,\n  Translation,\n  Overlay\n} from \"/imports/plugins/core/ui/client/components\";\nimport { getComponent } from \"/imports/plugins/core/layout/lib/components\";\n\n\nconst getStyles = (props) => {\n  let viewSize = 400;\n  const actionView = props.actionView || {};\n  const isBigView = actionView.provides === \"dashboard\" || (actionView.provides === \"shortcut\" && actionView.container === \"dashboard\");\n\n  if (isBigView) {\n    viewSize = \"90vw\";\n  }\n\n  if (actionView.meta && actionView.meta.actionView) {\n    const isSmView = actionView.meta.actionView.dashboardSize === \"sm\";\n    const isMdView = actionView.meta.actionView.dashboardSize === \"md\";\n    const isLgView = actionView.meta.actionView.dashboardSize === \"lg\";\n\n    if (isSmView) {\n      viewSize = \"400px\";\n    }\n    if (isMdView) {\n      viewSize = \"50vw\";\n    }\n    if (isLgView) {\n      viewSize = \"90vw\";\n    }\n  }\n\n  if (props.actionViewIsOpen === false) {\n    viewSize = 400;\n  }\n\n  return {\n    base: {\n      \"display\": \"flex\",\n      \"flexDirection\": \"row\",\n      \"height\": \"100vh\",\n      \"position\": \"relative\",\n      \"width\": viewSize,\n      \"minWidth\": 400,\n      \"@media only screen and (max-width: 949px)\": {\n        width: \"100vw\"\n      },\n      \"boxShadow\": isBigView ? \"0 0 40px rgba(0,0,0,.1)\" : \"\",\n      \"flex\": \"0 0 auto\",\n      \"backgroundColor\": \"white\",\n      \"borderLeft\": \"1px solid @black10\",\n      \"overflow\": \"hidden\",\n      \"transition\": \"width 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955))\",\n      \"zIndex\": 1050\n    },\n    header: {\n      display: \"flex\",\n      alignItems: \"center\",\n      position: \"relative\",\n      minHeight: \"56px\",\n      height: \"56px\",\n      padding: \"0 20px\"\n    },\n    heading: {\n      display: \"flex\",\n      alignItems: \"center\",\n      flex: \"1 1 auto\",\n      position: \"relative\",\n      margin: \"0 0 0 1rem\",\n      height: \"100%\"\n    },\n    body: {\n      display: \"flex\",\n      flex: \"1 1 auto\",\n      overflow: \"auto\",\n      WebkitOverflowScrolling: \"touch\"\n    },\n    masterViewPanel: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      flex: \"1 1 auto\"\n      // height: \"100%\"\n    },\n    masterView: {\n      flex: \"1 1 auto\",\n      // height: \"100%\",\n      overflow: \"auto\"\n      // WebkitOverflowScrolling: \"touch\"\n    },\n    detailViewPanel: {\n      \"display\": \"flex\",\n      \"flexDirection\": \"column\",\n      \"flex\": \"1 1 auto\",\n      \"maxWidth\": \"400px\",\n      \"height\": \"100vh\",\n      \"backgroundColor\": \"white\",\n      \"borderRight\": \"1px solid #ccc\",\n      \"@media only screen and (max-width: 949px)\": {\n        position: \"absolute\",\n        top: 0,\n        right: 0,\n        width: \"96vw\",\n        zIndex: 1050\n      }\n    },\n    detailView: {\n      width: \"100%\"\n    },\n    backButton: {\n      height: \"100%\"\n    },\n    backButtonContainers: {\n      display: \"flex\",\n      alignItems: \"center\",\n      height: \"100%\"\n    }\n  };\n};\n\nclass ActionView extends Component {\n  static propTypes = {\n    actionView: PropTypes.object,\n    actionViewIsOpen: PropTypes.bool,\n    buttons: PropTypes.array,\n    detailView: PropTypes.object,\n    detailViewIsOpen: PropTypes.bool,\n    handleActionViewBack: PropTypes.func,\n    handleActionViewClose: PropTypes.func,\n    handleActionViewDetailBack: PropTypes.func,\n    handleActionViewDetailClose: PropTypes.func,\n    isActionViewAtRootView: PropTypes.bool,\n    isDetailViewAtRootView: PropTypes.bool\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isMobile: this.isMobile,\n      enterAnimation: {\n        animation: { translateX: 0 },\n        duration: 200,\n        easing: \"easeInOutQuad\"\n      },\n      leaveAnimation: {\n        animation: { translateX: 400 },\n        duration: 200,\n        easing: \"easeInOutQuad\"\n      },\n      enterAnimationForDetailView: {\n        animation: { width: 400 },\n        duration: 200,\n        easing: \"easeInOutQuad\"\n      },\n      leaveAnimationForDetailView: {\n        animation: { width: 0 },\n        duration: 200,\n        easing: \"easeInOutQuad\"\n      }\n    };\n\n    this.handleResize = debounce(() => {\n      if (window) {\n        this.setState({\n          isMobile: this.isMobile\n        });\n      }\n    }, 66);\n  }\n\n  componentDidMount() {\n    if (window) {\n      window.addEventListener(\"resize\", this.handleResize, false);\n    }\n  }\n\n  componentWillUnmount() {\n    if (window) {\n      window.removeEventListener(\"resize\", this.handleResize);\n    }\n  }\n\n  renderControlComponent() {\n    if (this.props.actionView && typeof this.props.actionView.template === \"string\") {\n      // Render a react component if one has been registered by name\n      const component = getComponent(this.props.actionView.template);\n\n      if (component) {\n        return (\n          <div style={this.styles.masterView} className=\"master\">\n            {React.createElement(component, this.props.actionView.data)}\n          </div>\n        );\n      }\n\n      return (\n        <div style={this.styles.masterView} className=\"master\">\n          <Blaze\n            {...this.props.actionView.data}\n            template={this.props.actionView.template}\n          />\n        </div>\n      );\n    }\n\n    return null;\n  }\n\n  renderDetailComponent() {\n    if (this.props.detailView && typeof this.props.detailView.template === \"string\") {\n      return (\n        <div style={this.styles.detailView} className=\"detail\">\n          <Blaze\n            {...this.props.detailView.data}\n            template={this.props.detailView.template}\n          />\n        </div>\n      );\n    }\n\n    return null;\n  }\n\n  renderFooter() {\n    // if (this.props.footerTemplate) {\n    //   return (\n    //     <Blaze template={this.props.footerTemplate} />\n    //   );\n    // }\n  }\n\n  renderBackButton() {\n    let button;\n\n    if (this.props.isActionViewAtRootView === false) {\n      button = (\n        <IconButton\n          bezelStyle={\"flat\"}\n          icon=\"fa fa-arrow-left\"\n          onClick={this.props.handleActionViewBack}\n        />\n      );\n    } else {\n      button = (\n        <IconButton\n          bezelStyle={\"flat\"}\n          icon=\"fa fa-times\"\n          onClick={this.props.handleActionViewClose}\n        />\n      );\n    }\n\n    return (\n      <div style={this.styles.backButton}>\n        <div style={this.styles.backButtonContainers}>\n          {button}\n        </div>\n      </div>\n    );\n  }\n\n  get isMobile() {\n    return window.matchMedia(\"(max-width: 991px)\").matches;\n  }\n\n  get actionViewIsLargeSize() {\n    const { meta } = this.props.actionView;\n    const dashboardSize = meta && meta.actionView && meta.actionView.dashboardSize || \"sm\";\n\n    return this.props.actionView.provides === \"dashboard\" || dashboardSize !== \"sm\";\n  }\n\n  get showOverlay() {\n    if (this.props.actionViewIsOpen === false) {\n      return false;\n    }\n\n    return this.actionViewIsLargeSize || this.state.isMobile;\n  }\n\n  get showDetailViewOverlay() {\n    return this.props.detailViewIsOpen && this.state.isMobile;\n  }\n\n  renderDetailViewBackButton() {\n    if (this.props.isDetailViewAtRootView === false) {\n      return (\n        <div style={this.styles.backButton}>\n          <div style={this.styles.backButtonContainers}>\n            <IconButton\n              bezelStyle={\"flat\"}\n              icon=\"fa fa-arrow-left\"\n              onClick={this.props.handleActionViewDetailBack}\n            />\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <IconButton\n        bezelStyle={\"flat\"}\n        icon=\"fa fa-times\"\n        onClick={this.props.handleActionViewDetailClose}\n      />\n    );\n  }\n\n  get styles() {\n    return getStyles(this.props);\n  }\n\n  get backButtonEnterAnimation() {\n    return {\n      animation: {\n        display: \"flex\",\n        position: \"absolute\",\n        left: 20,\n        opaticy: 1\n      },\n      duration: 200\n    };\n  }\n\n  get backButtonLeaveAnimaton() {\n    return {\n      animation: {\n        display: \"flex\",\n        position: \"absolute\",\n        left: -30,\n        opaticy: 0\n      },\n      duration: 200\n\n    };\n  }\n\n  renderMasterView() {\n    const { actionView } = this.props;\n\n    return (\n      <div style={this.styles.masterViewPanel}>\n        <div style={this.styles.header} className=\"header\">\n          {this.renderBackButton()}\n          <div style={this.styles.heading} className=\"heading\">\n            <h3 className=\"title\" style={this.styles.title}>\n              <Translation\n                defaultValue={actionView.label || \"Dashboard\"}\n                i18nKey={actionView.i18nKeyLabel || \"dashboard.coreTitle\"}\n              />\n            </h3>\n          </div>\n\n          <div className=\"controls»\">\n            {/* Controls */}\n          </div>\n        </div>\n        <div style={this.styles.body} className=\"admin-controls-content action-view-body\">\n\n            {this.renderControlComponent()}\n\n        </div>\n      </div>\n\n    );\n  }\n\n  renderDetailView() {\n    const { actionView } = this.props;\n\n    const baseClassName = classnames({\n      \"rui\": true,\n      \"admin\": true,\n      \"action-view-pane\": true,\n      \"action-view-detail\": true\n    });\n\n    if (this.props.detailViewIsOpen) {\n      return (\n        <div className={baseClassName} style={this.styles.detailViewPanel}>\n          <div style={this.styles.header} className=\"header\">\n            <VelocityTransitionGroup\n              enter={this.backButtonEnterAnimation}\n              leave={this.backButtonLeaveAnimaton}\n            >\n              {this.renderDetailViewBackButton()}\n            </VelocityTransitionGroup>\n\n            <div style={this.styles.heading} className=\"heading\">\n              <h3 className=\"title\" style={this.styles.title}>\n                <Translation\n                  defaultValue={actionView.label}\n                  i18nKey={actionView.i18nKeyLabel}\n                />\n              </h3>\n            </div>\n\n            <div className=\"controls\">\n              {/* Controls */}\n            </div>\n          </div>\n          <div style={this.styles.body} className=\"admin-controls-content action-view-body\">\n\n              {/* this.renderControlComponent() */}\n              {this.renderDetailComponent()}\n          </div>\n        </div>\n\n      );\n    }\n  }\n\n  renderActionView() {\n    const baseClassName = classnames({\n      \"rui\": true,\n      \"admin\": true,\n      \"action-view-pane\": true,\n      \"action-view\": true,\n      \"open\": this.props.actionViewIsOpen\n    });\n\n    if (this.props.actionViewIsOpen) {\n      return (\n        <div style={this.styles.base} className={baseClassName}>\n\n          {this.renderMasterView()}\n          <Overlay\n            isVisible={this.showDetailViewOverlay}\n            onClick={this.props.handleActionViewDetailClose}\n          />\n          <VelocityTransitionGroup\n            enter={this.state.enterAnimationForDetailView}\n            leave={this.state.leaveAnimationForDetailView}\n          >\n            {this.renderDetailView()}\n          </VelocityTransitionGroup>\n\n\n          <div className=\"admin-controls-footer\">\n            <div className=\"admin-controls-container\">\n              {this.renderFooter()}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return null;\n  }\n\n  render() {\n    return (\n      <div>\n        <VelocityTransitionGroup\n          enter={this.state.enterAnimation}\n          leave={this.state.leaveAnimation}\n        >\n          {this.renderActionView()}\n        </VelocityTransitionGroup>\n\n        <Overlay\n          isVisible={this.showOverlay}\n          onClick={this.props.handleActionViewClose}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Admin()(Radium(ActionView));\n"]},"hash":"51f3eff26b622ced230f475a8a11242bc00f5ffa"}
