{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","createClass","classCallCheck","extends","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component","PropTypes"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"},{"kind":"named","imported":"PropTypes","local":"PropTypes"}]},{"source":"classnames","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"classnames"}]},{"source":"velocity-animate","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Velocity"}]},{"source":"velocity-animate/velocity.ui","imported":[],"specifiers":[]},{"source":"/imports/plugins/core/ui/client/components/","imported":["TextField"],"specifiers":[{"kind":"named","imported":"TextField","local":"TextField"}]},{"source":"/imports/plugins/core/ui/client/containers","imported":["EditContainer"],"specifiers":[{"kind":"named","imported":"EditContainer","local":"EditContainer"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/included/product-detail-simple/client/components/productField.js","filenameRelative":"/imports/plugins/included/product-detail-simple/client/components/productField.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/included/product-detail-simple/client/components/productField.js"],"names":["React","Component","PropTypes","classnames","Velocity","TextField","EditContainer","ProductField","state","constructor","props","value","componentWillReceiveProps","nextProps","product","fieldName","setState","_input","refs","input","RunSequence","e","p","backgroundColor","o","duration","handleChange","event","handleBlur","onProductFieldChange","_id","showEditControls","editable","renderEditButton","field","editContainerProps","renderTextField","baseClassName","textFieldClassName","ref","multiline","textFieldProps","render","element","createElement","className","itemProp","children","propTypes","object","bool","node","string","fieldTitle","func"],"mappings":"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","file":"/imports/plugins/included/product-detail-simple/client/components/productField.js.map","sourcesContent":["import React, { Component, PropTypes } from \"react\";\nimport classnames from \"classnames\";\nimport Velocity from \"velocity-animate\";\nimport \"velocity-animate/velocity.ui\";\nimport { TextField } from \"/imports/plugins/core/ui/client/components/\";\nimport { EditContainer } from \"/imports/plugins/core/ui/client/containers\";\n\nclass ProductField extends Component {\n  static state = {}\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: this.value\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.product[this.fieldName] !== this.props.product[this.fieldName]) {\n      this.setState({\n        value: nextProps.product[this.fieldName]\n      }, () => {\n        if (this._input && this._input.refs.input) {\n          const input = this._input.refs.input;\n\n          Velocity.RunSequence([\n            { e: input, p: { backgroundColor: \"#e2f2e2\" }, o: { duration: 200 } },\n            { e: input, p: { backgroundColor: \"#fff\" }, o: { duration: 100 } }\n          ]);\n        }\n      });\n    } else {\n      this.setState({\n        value: nextProps.product[this.fieldName]\n      });\n    }\n  }\n\n  handleChange = (event, value) => {\n    this.setState({\n      value\n    });\n  }\n\n  handleBlur = (event, value) => {\n    if (this.props.onProductFieldChange) {\n      this.props.onProductFieldChange(this.props.product._id, this.fieldName, value);\n    }\n  }\n\n  get fieldName() {\n    return this.props.fieldName;\n  }\n\n  get value() {\n    return (this.state && this.state.value) || this.props.product[this.fieldName];\n  }\n\n  get showEditControls() {\n    return this.props.product && this.props.editable;\n  }\n\n  renderEditButton() {\n    if (this.showEditControls) {\n      return (\n        <span className=\"edit-controls\">\n          <EditContainer\n            autoHideEditButton={true}\n            data={this.props.product}\n            editView=\"ProductAdmin\"\n            field={this.fieldName}\n            i18nKeyLabel={`productDetailEdit.${this.field}`}\n            label=\"Edit Field\"\n            permissions={[\"createProduct\"]}\n            {...this.props.editContainerProps}\n          />\n        </span>\n      );\n    }\n\n    return null;\n  }\n\n  renderTextField() {\n    const baseClassName = classnames({\n      \"pdp\": true,\n      \"product-detail-edit\": true,\n      [`${this.fieldName}-edit`]: this.fieldName\n    });\n\n    const textFieldClassName = classnames({\n      \"pdp\": true,\n      \"product-detail-edit\": true,\n      [`${this.fieldName}-edit-input`]: this.fieldName\n    });\n\n    return (\n      <div className={baseClassName}>\n        <TextField\n          ref={(ref) => { this._input = ref;}}\n          className={textFieldClassName}\n          multiline={this.props.multiline}\n          onBlur={this.handleBlur}\n          onChange={this.handleChange}\n          onReturnKeyDown={this.handleBlur}\n          value={this.state.value}\n          {...this.props.textFieldProps}\n        />\n        {this.renderEditButton()}\n      </div>\n    );\n  }\n\n  render() {\n    if (this.showEditControls) {\n      return this.renderTextField();\n    }\n\n    if (this.props.element) {\n      return React.createElement(this.props.element, {\n        className: \"pdp field\",\n        itemProp: this.props.itemProp,\n        children: this.value\n      });\n    }\n\n    return (\n      <div className=\"pdp field\">\n        {this.value}\n      </div>\n    );\n  }\n}\n\nProductField.propTypes = {\n  editContainerProps: PropTypes.object,\n  editable: PropTypes.bool,\n  element: PropTypes.node,\n  fieldName: PropTypes.string,\n  fieldTitle: PropTypes.string,\n  itemProp: PropTypes.string,\n  multiline: PropTypes.bool,\n  onProductFieldChange: PropTypes.func,\n  product: PropTypes.object,\n  textFieldProps: PropTypes.object\n};\n\nexport default ProductField;\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/included/product-detail-simple/client/components/productField.js.map","sourceFileName":"/imports/plugins/included/product-detail-simple/client/components/productField.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"productField"},"ignored":false,"code":"var _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0,\n    Component = void 0,\n    PropTypes = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  },\n  PropTypes: function (v) {\n    PropTypes = v;\n  }\n}, 0);\nvar classnames = void 0;\nmodule.importSync(\"classnames\", {\n  \"default\": function (v) {\n    classnames = v;\n  }\n}, 1);\nvar Velocity = void 0;\nmodule.importSync(\"velocity-animate\", {\n  \"default\": function (v) {\n    Velocity = v;\n  }\n}, 2);\nmodule.importSync(\"velocity-animate/velocity.ui\");\nvar TextField = void 0;\nmodule.importSync(\"/imports/plugins/core/ui/client/components/\", {\n  TextField: function (v) {\n    TextField = v;\n  }\n}, 4);\nvar EditContainer = void 0;\nmodule.importSync(\"/imports/plugins/core/ui/client/containers\", {\n  EditContainer: function (v) {\n    EditContainer = v;\n  }\n}, 5);\n\nvar ProductField = function (_Component) {\n  (0, _inherits3.default)(ProductField, _Component);\n\n  function ProductField(props) {\n    (0, _classCallCheck3.default)(this, ProductField);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));\n\n    _this.handleChange = function (event, value) {\n      _this.setState({\n        value: value\n      });\n    };\n\n    _this.handleBlur = function (event, value) {\n      if (_this.props.onProductFieldChange) {\n        _this.props.onProductFieldChange(_this.props.product._id, _this.fieldName, value);\n      }\n    };\n\n    _this.state = {\n      value: _this.value\n    };\n    return _this;\n  }\n\n  ProductField.prototype.componentWillReceiveProps = function () {\n    function componentWillReceiveProps(nextProps) {\n      var _this2 = this;\n\n      if (nextProps.product[this.fieldName] !== this.props.product[this.fieldName]) {\n        this.setState({\n          value: nextProps.product[this.fieldName]\n        }, function () {\n          if (_this2._input && _this2._input.refs.input) {\n            var input = _this2._input.refs.input;\n            Velocity.RunSequence([{\n              e: input,\n              p: {\n                backgroundColor: \"#e2f2e2\"\n              },\n              o: {\n                duration: 200\n              }\n            }, {\n              e: input,\n              p: {\n                backgroundColor: \"#fff\"\n              },\n              o: {\n                duration: 100\n              }\n            }]);\n          }\n        });\n      } else {\n        this.setState({\n          value: nextProps.product[this.fieldName]\n        });\n      }\n    }\n\n    return componentWillReceiveProps;\n  }();\n\n  ProductField.prototype.renderEditButton = function () {\n    function renderEditButton() {\n      if (this.showEditControls) {\n        return React.createElement(\n          \"span\",\n          {\n            className: \"edit-controls\"\n          },\n          React.createElement(EditContainer, (0, _extends3.default)({\n            autoHideEditButton: true,\n            data: this.props.product,\n            editView: \"ProductAdmin\",\n            field: this.fieldName,\n            i18nKeyLabel: \"productDetailEdit.\" + this.field,\n            label: \"Edit Field\",\n            permissions: [\"createProduct\"]\n          }, this.props.editContainerProps))\n        );\n      }\n\n      return null;\n    }\n\n    return renderEditButton;\n  }();\n\n  ProductField.prototype.renderTextField = function () {\n    function renderTextField() {\n      var _classnames,\n          _classnames2,\n          _this3 = this;\n\n      var baseClassName = classnames((_classnames = {\n        \"pdp\": true,\n        \"product-detail-edit\": true\n      }, _classnames[this.fieldName + \"-edit\"] = this.fieldName, _classnames));\n      var textFieldClassName = classnames((_classnames2 = {\n        \"pdp\": true,\n        \"product-detail-edit\": true\n      }, _classnames2[this.fieldName + \"-edit-input\"] = this.fieldName, _classnames2));\n      return React.createElement(\n        \"div\",\n        {\n          className: baseClassName\n        },\n        React.createElement(TextField, (0, _extends3.default)({\n          ref: function (ref) {\n            _this3._input = ref;\n          },\n          className: textFieldClassName,\n          multiline: this.props.multiline,\n          onBlur: this.handleBlur,\n          onChange: this.handleChange,\n          onReturnKeyDown: this.handleBlur,\n          value: this.state.value\n        }, this.props.textFieldProps)),\n        this.renderEditButton()\n      );\n    }\n\n    return renderTextField;\n  }();\n\n  ProductField.prototype.render = function () {\n    function render() {\n      if (this.showEditControls) {\n        return this.renderTextField();\n      }\n\n      if (this.props.element) {\n        return React.createElement(this.props.element, {\n          className: \"pdp field\",\n          itemProp: this.props.itemProp,\n          children: this.value\n        });\n      }\n\n      return React.createElement(\n        \"div\",\n        {\n          className: \"pdp field\"\n        },\n        this.value\n      );\n    }\n\n    return render;\n  }();\n\n  (0, _createClass3.default)(ProductField, [{\n    key: \"fieldName\",\n    get: function () {\n      return this.props.fieldName;\n    }\n  }, {\n    key: \"value\",\n    get: function () {\n      return this.state && this.state.value || this.props.product[this.fieldName];\n    }\n  }, {\n    key: \"showEditControls\",\n    get: function () {\n      return this.props.product && this.props.editable;\n    }\n  }]);\n  return ProductField;\n}(Component);\n\nProductField.state = {};\nProductField.propTypes = {\n  editContainerProps: PropTypes.object,\n  editable: PropTypes.bool,\n  element: PropTypes.node,\n  fieldName: PropTypes.string,\n  fieldTitle: PropTypes.string,\n  itemProp: PropTypes.string,\n  multiline: PropTypes.bool,\n  onProductFieldChange: PropTypes.func,\n  product: PropTypes.object,\n  textFieldProps: PropTypes.object\n};\nmodule.export(\"default\", exports.default = ProductField);","map":{"version":3,"sources":["/imports/plugins/included/product-detail-simple/client/components/productField.js"],"names":["React","Component","PropTypes","classnames","Velocity","TextField","EditContainer","ProductField","state","constructor","props","value","componentWillReceiveProps","nextProps","product","fieldName","setState","_input","refs","input","RunSequence","e","p","backgroundColor","o","duration","handleChange","event","handleBlur","onProductFieldChange","_id","showEditControls","editable","renderEditButton","field","editContainerProps","renderTextField","baseClassName","textFieldClassName","ref","multiline","textFieldProps","render","element","createElement","className","itemProp","children","propTypes","object","bool","node","string","fieldTitle","func"],"mappings":"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","file":"/imports/plugins/included/product-detail-simple/client/components/productField.js.map","sourcesContent":["import React, { Component, PropTypes } from \"react\";\nimport classnames from \"classnames\";\nimport Velocity from \"velocity-animate\";\nimport \"velocity-animate/velocity.ui\";\nimport { TextField } from \"/imports/plugins/core/ui/client/components/\";\nimport { EditContainer } from \"/imports/plugins/core/ui/client/containers\";\n\nclass ProductField extends Component {\n  static state = {}\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: this.value\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.product[this.fieldName] !== this.props.product[this.fieldName]) {\n      this.setState({\n        value: nextProps.product[this.fieldName]\n      }, () => {\n        if (this._input && this._input.refs.input) {\n          const input = this._input.refs.input;\n\n          Velocity.RunSequence([\n            { e: input, p: { backgroundColor: \"#e2f2e2\" }, o: { duration: 200 } },\n            { e: input, p: { backgroundColor: \"#fff\" }, o: { duration: 100 } }\n          ]);\n        }\n      });\n    } else {\n      this.setState({\n        value: nextProps.product[this.fieldName]\n      });\n    }\n  }\n\n  handleChange = (event, value) => {\n    this.setState({\n      value\n    });\n  }\n\n  handleBlur = (event, value) => {\n    if (this.props.onProductFieldChange) {\n      this.props.onProductFieldChange(this.props.product._id, this.fieldName, value);\n    }\n  }\n\n  get fieldName() {\n    return this.props.fieldName;\n  }\n\n  get value() {\n    return (this.state && this.state.value) || this.props.product[this.fieldName];\n  }\n\n  get showEditControls() {\n    return this.props.product && this.props.editable;\n  }\n\n  renderEditButton() {\n    if (this.showEditControls) {\n      return (\n        <span className=\"edit-controls\">\n          <EditContainer\n            autoHideEditButton={true}\n            data={this.props.product}\n            editView=\"ProductAdmin\"\n            field={this.fieldName}\n            i18nKeyLabel={`productDetailEdit.${this.field}`}\n            label=\"Edit Field\"\n            permissions={[\"createProduct\"]}\n            {...this.props.editContainerProps}\n          />\n        </span>\n      );\n    }\n\n    return null;\n  }\n\n  renderTextField() {\n    const baseClassName = classnames({\n      \"pdp\": true,\n      \"product-detail-edit\": true,\n      [`${this.fieldName}-edit`]: this.fieldName\n    });\n\n    const textFieldClassName = classnames({\n      \"pdp\": true,\n      \"product-detail-edit\": true,\n      [`${this.fieldName}-edit-input`]: this.fieldName\n    });\n\n    return (\n      <div className={baseClassName}>\n        <TextField\n          ref={(ref) => { this._input = ref;}}\n          className={textFieldClassName}\n          multiline={this.props.multiline}\n          onBlur={this.handleBlur}\n          onChange={this.handleChange}\n          onReturnKeyDown={this.handleBlur}\n          value={this.state.value}\n          {...this.props.textFieldProps}\n        />\n        {this.renderEditButton()}\n      </div>\n    );\n  }\n\n  render() {\n    if (this.showEditControls) {\n      return this.renderTextField();\n    }\n\n    if (this.props.element) {\n      return React.createElement(this.props.element, {\n        className: \"pdp field\",\n        itemProp: this.props.itemProp,\n        children: this.value\n      });\n    }\n\n    return (\n      <div className=\"pdp field\">\n        {this.value}\n      </div>\n    );\n  }\n}\n\nProductField.propTypes = {\n  editContainerProps: PropTypes.object,\n  editable: PropTypes.bool,\n  element: PropTypes.node,\n  fieldName: PropTypes.string,\n  fieldTitle: PropTypes.string,\n  itemProp: PropTypes.string,\n  multiline: PropTypes.bool,\n  onProductFieldChange: PropTypes.func,\n  product: PropTypes.object,\n  textFieldProps: PropTypes.object\n};\n\nexport default ProductField;\n"]},"hash":"7856cba30524f7bb5aa66c7ef64482e4b5c319a3"}
