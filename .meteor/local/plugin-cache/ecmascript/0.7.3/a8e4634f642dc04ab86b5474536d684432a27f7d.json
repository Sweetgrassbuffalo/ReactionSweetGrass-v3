{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"/client/modules/accounts/helpers","imported":["LoginFormSharedHelpers"],"specifiers":[{"kind":"named","imported":"LoginFormSharedHelpers","local":"LoginFormSharedHelpers"}]},{"source":"meteor/templating","imported":["Template"],"specifiers":[{"kind":"named","imported":"Template","local":"Template"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/client/modules/accounts/templates/signUp/signUp.js","filenameRelative":"/client/modules/accounts/templates/signUp/signUp.js","inputSourceMap":{"version":3,"sources":["/client/modules/accounts/templates/signUp/signUp.js"],"names":["LoginFormSharedHelpers","Template","loginFormSignUpView","onCreated","template","instance","uniqueId","Random","id","formMessages","ReactiveVar","type","helpers","events","event","preventDefault","emailInput","$","passwordInput","email","val","trim","password","validatedEmail","LoginFormValidation","validatedPassword","templateInstance","errors","set","isEmptyObject","newUserData","Accounts","createUser","error","alerts"],"mappings":"AAAA,IAAS;AAAT,OAAuC,WAAvC;;;;;;;;;;GACA,A,AAAA,AAAS,AAAgB,AAEzB;AAGA,AAAS,AAAoB,AAAU,AAAM,AAC3C,AAAM,AAAW,AAAS;;YAE1B,AAAS,AAAW,oBAApB,AAAoB,AAAO,sBAC3B;MAAS,WAAT,AAAwB,SAJ1B,AAIE,AAAwB,AAAI,AAAY,AACxC,AAAS,AAAO,AACjB;A,AAED;;kBAGA;AAAA,AAAS,AAAoB,AAAQ,AAErC,A,CAVE,GAaF,AAAS,AAAoB,AAAO,AAClC;;;8DAMA,AAAe,AAAU,AAAO,AAAU;;;AACxC,SADwC,AACxC,AAAM,AAEN;AACA,AAAM,AAAa,AAAS,AAAE,AAC9B,AAAM,AAAgB,AAAS,AAAE,AAEjC,AAAM,AAAQ,AAAW,AAAM,AAC/B,AAAM,AAAW,AAAc,AAAM,AAErC,AAAM,AAAiB,AAAoB,AAAM,AACjD;;;;;KAAM,yBAAoB;UAE1B,AAAM,AAAmB,AAAS,AAClC,AAAM,AAAS,AAEf,iBALA,AAA0B,AAAoB,AAAS,AAEvD,CAGA,AAAiB,AAAa,AAAI;;gCAElC;AAAI,wBAAJ,AAAuB,AAAM,WAC3B,AAAO,AAAQ,AAChB;;uCAED,AAAI,AAAsB,AAAM,AAC9B;QAAA,AAAO,AAAW,iBAAlB,0BACD;yDAED;AAAI,QAAA,AAAE,AAAc,mBAAhB,AAA4B,SAAhC,AAAuC,AACrC;iBAAA,AAAiB,AAAa,AAAI,AAChC,AAAQ;AAF2B,AACrC,AAGA,sCACA;;iCACD;;AAED,AAAM,AAAc,AAClB;;oCACA;aAFkB,AAEX,WACP;AAHF,AAAoB,AAGR,AAGZ;;UAAA,AAAS,cAAT,AAAoB,YAAa;AAC/B,AAAI,AAAO;gBAET,AAAiB,AAAa,AAAI,AAChC;AAFF,SAF6B,AAAU,AAAO,AAChD,CAEoC,AACxB,AAAC;;AADX,AAGD;AALD,AAKO,AACL,AACD,AACF;;AATD;AA/CJ,AAAoC;;;AAyDjC","file":"/client/modules/accounts/templates/signUp/signUp.js.map","sourcesContent":["import { LoginFormSharedHelpers } from \"/client/modules/accounts/helpers\";\nimport { Template } from \"meteor/templating\";\n\n/**\n * onCreated: Login form sign up view\n */\nTemplate.loginFormSignUpView.onCreated(() => {\n  const template = Template.instance();\n\n  template.uniqueId = Random.id();\n  template.formMessages = new ReactiveVar({});\n  template.type = \"signUp\";\n});\n\n/**\n * Helpers: Login form sign up view\n */\nTemplate.loginFormSignUpView.helpers(LoginFormSharedHelpers);\n\n/**\n * Events: Login form sign up view\n */\nTemplate.loginFormSignUpView.events({\n  /**\n   * Submit sign up form\n   * @param  {Event} event - jQuery Event\n   * @param  {Template} template - Blaze Template\n   * @return {void}\n   */\n  \"submit form\": function (event, template) {\n    event.preventDefault();\n\n    // var usernameInput = template.$(\".login-input--username\");\n    const emailInput = template.$(\".login-input-email\");\n    const passwordInput = template.$(\".login-input-password\");\n\n    const email = emailInput.val().trim();\n    const password = passwordInput.val().trim();\n\n    const validatedEmail = LoginFormValidation.email(email);\n    const validatedPassword = LoginFormValidation.password(password);\n\n    const templateInstance = Template.instance();\n    const errors = {};\n\n    templateInstance.formMessages.set({});\n\n    if (validatedEmail !== true) {\n      errors.email = validatedEmail;\n    }\n\n    if (validatedPassword !== true) {\n      errors.password = validatedPassword;\n    }\n\n    if ($.isEmptyObject(errors) === false) {\n      templateInstance.formMessages.set({\n        errors: errors\n      });\n      // prevent signup\n      return;\n    }\n\n    const newUserData = {\n      // username: username,\n      email: email,\n      password: password\n    };\n\n    Accounts.createUser(newUserData, function (error) {\n      if (error) {\n        // Show some error message\n        templateInstance.formMessages.set({\n          alerts: [error]\n        });\n      } else {\n        // Close dropdown or navigate to page\n      }\n    });\n  }\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/modules/accounts/templates/signUp/signUp.js.map","sourceFileName":"/client/modules/accounts/templates/signUp/signUp.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"signUp"},"ignored":false,"code":"var LoginFormSharedHelpers = void 0;\nmodule.importSync(\"/client/modules/accounts/helpers\", {\n  LoginFormSharedHelpers: function (v) {\n    LoginFormSharedHelpers = v;\n  }\n}, 0);\nvar Template = void 0;\nmodule.importSync(\"meteor/templating\", {\n  Template: function (v) {\n    Template = v;\n  }\n}, 1);\n/**\n * onCreated: Login form sign up view\n */Template.loginFormSignUpView.onCreated(function () {\n  var template = Template.instance();\n  template.uniqueId = Random.id();\n  template.formMessages = new ReactiveVar({});\n  template.type = \"signUp\";\n}); /**\n     * Helpers: Login form sign up view\n     */\nTemplate.loginFormSignUpView.helpers(LoginFormSharedHelpers); /**\n                                                               * Events: Login form sign up view\n                                                               */\nTemplate.loginFormSignUpView.events({\n  /**\n   * Submit sign up form\n   * @param  {Event} event - jQuery Event\n   * @param  {Template} template - Blaze Template\n   * @return {void}\n   */\"submit form\": function (event, template) {\n    event.preventDefault(); // var usernameInput = template.$(\".login-input--username\");\n\n    var emailInput = template.$(\".login-input-email\");\n    var passwordInput = template.$(\".login-input-password\");\n    var email = emailInput.val().trim();\n    var password = passwordInput.val().trim();\n    var validatedEmail = LoginFormValidation.email(email);\n    var validatedPassword = LoginFormValidation.password(password);\n    var templateInstance = Template.instance();\n    var errors = {};\n    templateInstance.formMessages.set({});\n\n    if (validatedEmail !== true) {\n      errors.email = validatedEmail;\n    }\n\n    if (validatedPassword !== true) {\n      errors.password = validatedPassword;\n    }\n\n    if ($.isEmptyObject(errors) === false) {\n      templateInstance.formMessages.set({\n        errors: errors\n      }); // prevent signup\n\n      return;\n    }\n\n    var newUserData = {\n      // username: username,\n      email: email,\n      password: password\n    };\n    Accounts.createUser(newUserData, function (error) {\n      if (error) {\n        // Show some error message\n        templateInstance.formMessages.set({\n          alerts: [error]\n        });\n      } else {// Close dropdown or navigate to page\n      }\n    });\n  }\n});","map":{"version":3,"sources":["/client/modules/accounts/templates/signUp/signUp.js"],"names":["LoginFormSharedHelpers","Template","loginFormSignUpView","onCreated","template","instance","uniqueId","Random","id","formMessages","ReactiveVar","type","helpers","events","event","preventDefault","emailInput","$","passwordInput","email","val","trim","password","validatedEmail","LoginFormValidation","validatedPassword","templateInstance","errors","set","isEmptyObject","newUserData","Accounts","createUser","error","alerts"],"mappings":"AAAA,IAAS;AAAT,OAAuC,WAAvC;;;;;;;;;;GACA,A,AAAA,AAAS,AAAgB,AAEzB;AAGA,AAAS,AAAoB,AAAU,AAAM,AAC3C,AAAM,AAAW,AAAS;;YAE1B,AAAS,AAAW,oBAApB,AAAoB,AAAO,sBAC3B;MAAS,WAAT,AAAwB,SAJ1B,AAIE,AAAwB,AAAI,AAAY,AACxC,AAAS,AAAO,AACjB;A,AAED;;kBAGA;AAAA,AAAS,AAAoB,AAAQ,AAErC,A,CAVE,GAaF,AAAS,AAAoB,AAAO,AAClC;;;8DAMA,AAAe,AAAU,AAAO,AAAU;;;AACxC,SADwC,AACxC,AAAM,AAEN;AACA,AAAM,AAAa,AAAS,AAAE,AAC9B,AAAM,AAAgB,AAAS,AAAE,AAEjC,AAAM,AAAQ,AAAW,AAAM,AAC/B,AAAM,AAAW,AAAc,AAAM,AAErC,AAAM,AAAiB,AAAoB,AAAM,AACjD;;;;;KAAM,yBAAoB;UAE1B,AAAM,AAAmB,AAAS,AAClC,AAAM,AAAS,AAEf,iBALA,AAA0B,AAAoB,AAAS,AAEvD,CAGA,AAAiB,AAAa,AAAI;;gCAElC;AAAI,wBAAJ,AAAuB,AAAM,WAC3B,AAAO,AAAQ,AAChB;;uCAED,AAAI,AAAsB,AAAM,AAC9B;QAAA,AAAO,AAAW,iBAAlB,0BACD;yDAED;AAAI,QAAA,AAAE,AAAc,mBAAhB,AAA4B,SAAhC,AAAuC,AACrC;iBAAA,AAAiB,AAAa,AAAI,AAChC,AAAQ;AAF2B,AACrC,AAGA,sCACA;;iCACD;;AAED,AAAM,AAAc,AAClB;;oCACA;aAFkB,AAEX,WACP;AAHF,AAAoB,AAGR,AAGZ;;UAAA,AAAS,cAAT,AAAoB,YAAa;AAC/B,AAAI,AAAO;gBAET,AAAiB,AAAa,AAAI,AAChC;AAFF,SAF6B,AAAU,AAAO,AAChD,CAEoC,AACxB,AAAC;;AADX,AAGD;AALD,AAKO,AACL,AACD,AACF;;AATD;AA/CJ,AAAoC;;;AAyDjC","file":"/client/modules/accounts/templates/signUp/signUp.js.map","sourcesContent":["import { LoginFormSharedHelpers } from \"/client/modules/accounts/helpers\";\nimport { Template } from \"meteor/templating\";\n\n/**\n * onCreated: Login form sign up view\n */\nTemplate.loginFormSignUpView.onCreated(() => {\n  const template = Template.instance();\n\n  template.uniqueId = Random.id();\n  template.formMessages = new ReactiveVar({});\n  template.type = \"signUp\";\n});\n\n/**\n * Helpers: Login form sign up view\n */\nTemplate.loginFormSignUpView.helpers(LoginFormSharedHelpers);\n\n/**\n * Events: Login form sign up view\n */\nTemplate.loginFormSignUpView.events({\n  /**\n   * Submit sign up form\n   * @param  {Event} event - jQuery Event\n   * @param  {Template} template - Blaze Template\n   * @return {void}\n   */\n  \"submit form\": function (event, template) {\n    event.preventDefault();\n\n    // var usernameInput = template.$(\".login-input--username\");\n    const emailInput = template.$(\".login-input-email\");\n    const passwordInput = template.$(\".login-input-password\");\n\n    const email = emailInput.val().trim();\n    const password = passwordInput.val().trim();\n\n    const validatedEmail = LoginFormValidation.email(email);\n    const validatedPassword = LoginFormValidation.password(password);\n\n    const templateInstance = Template.instance();\n    const errors = {};\n\n    templateInstance.formMessages.set({});\n\n    if (validatedEmail !== true) {\n      errors.email = validatedEmail;\n    }\n\n    if (validatedPassword !== true) {\n      errors.password = validatedPassword;\n    }\n\n    if ($.isEmptyObject(errors) === false) {\n      templateInstance.formMessages.set({\n        errors: errors\n      });\n      // prevent signup\n      return;\n    }\n\n    const newUserData = {\n      // username: username,\n      email: email,\n      password: password\n    };\n\n    Accounts.createUser(newUserData, function (error) {\n      if (error) {\n        // Show some error message\n        templateInstance.formMessages.set({\n          alerts: [error]\n        });\n      } else {\n        // Close dropdown or navigate to page\n      }\n    });\n  }\n});\n"]},"hash":"a8e4634f642dc04ab86b5474536d684432a27f7d"}
