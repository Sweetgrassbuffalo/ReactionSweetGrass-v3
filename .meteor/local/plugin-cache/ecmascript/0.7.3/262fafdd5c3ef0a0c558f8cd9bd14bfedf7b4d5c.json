{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/templating","imported":["Template"],"specifiers":[{"kind":"named","imported":"Template","local":"Template"}]},{"source":"/client/api","imported":["Reaction"],"specifiers":[{"kind":"named","imported":"Reaction","local":"Reaction"}]},{"source":"/lib/collections","imported":["Cart","Shops","Packages"],"specifiers":[{"kind":"named","imported":"Cart","local":"Cart"},{"kind":"named","imported":"Shops","local":"Shops"},{"kind":"named","imported":"Packages","local":"Packages"}]},{"source":"../../lib/api","imported":["Example"],"specifiers":[{"kind":"named","imported":"Example","local":"Example"}]},{"source":"../../lib/collections/schemas","imported":["ExamplePayment"],"specifiers":[{"kind":"named","imported":"ExamplePayment","local":"ExamplePayment"}]},{"source":"./example.html","imported":[],"specifiers":[]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/included/payments-example/client/checkout/example.js","filenameRelative":"/imports/plugins/included/payments-example/client/checkout/example.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/included/payments-example/client/checkout/example.js"],"names":["Meteor","Template","Reaction","Cart","Shops","Packages","Example","ExamplePayment","submitting","uiEnd","template","buttonText","$","removeAttr","text","addClass","paymentAlert","errorMessage","removeClass","hidePaymentAlert","handleExampleSubmitError","error","serverError","message","examplePaymentForm","helpers","AutoForm","addHooks","onSubmit","doc","form","name","payerName","number","cardNumber","expireMonth","expireYear","cvv2","cvv","type","getCardType","storedCard","charAt","toUpperCase","slice","subscribe","packageData","findOne","shopId","getShopId","authorize","total","cartTotal","currency","transaction","paymentMethod","saved","processor","paymentPackageId","_id","paymentSettingsKey","registry","settingsKey","method","transactionId","amount","status","mode","createdAt","Date","transactions","push","response","call","beginSubmit","attr","endSubmit"],"mappings":"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","file":"/imports/plugins/included/payments-example/client/checkout/example.js.map","sourcesContent":["/* eslint camelcase: 0 */\nimport { Meteor } from \"meteor/meteor\";\nimport { Template } from \"meteor/templating\";\nimport { Reaction } from \"/client/api\";\nimport { Cart, Shops, Packages } from \"/lib/collections\";\nimport { Example } from \"../../lib/api\";\nimport { ExamplePayment } from \"../../lib/collections/schemas\";\n\nimport \"./example.html\";\n\nlet submitting = false;\n\nfunction uiEnd(template, buttonText) {\n  template.$(\":input\").removeAttr(\"disabled\");\n  template.$(\"#btn-complete-order\").text(buttonText);\n  return template.$(\"#btn-processing\").addClass(\"hidden\");\n}\n\nfunction paymentAlert(errorMessage) {\n  return $(\".alert\").removeClass(\"hidden\").text(errorMessage);\n}\n\nfunction hidePaymentAlert() {\n  return $(\".alert\").addClass(\"hidden\").text(\"\");\n}\n\nfunction handleExampleSubmitError(error) {\n  const serverError = error !== null ? error.message : void 0;\n  if (serverError) {\n    return paymentAlert(\"Oops! \" + serverError);\n  } else if (error) {\n    return paymentAlert(\"Oops! \" + error, null, 4);\n  }\n}\n\n\nTemplate.examplePaymentForm.helpers({\n  ExamplePayment() {\n    return ExamplePayment;\n  }\n});\n\nAutoForm.addHooks(\"example-payment-form\", {\n  onSubmit: function (doc) {\n    submitting = true;\n    const template = this.template;\n    hidePaymentAlert();\n    const form = {\n      name: doc.payerName,\n      number: doc.cardNumber,\n      expireMonth: doc.expireMonth,\n      expireYear: doc.expireYear,\n      cvv2: doc.cvv,\n      type: Reaction.getCardType(doc.cardNumber)\n    };\n    const storedCard = form.type.charAt(0).toUpperCase() + form.type.slice(1) + \" \" + doc.cardNumber.slice(-4);\n    Meteor.subscribe(\"Packages\");\n    const packageData = Packages.findOne({\n      name: \"example-paymentmethod\",\n      shopId: Reaction.getShopId()\n    });\n    Example.authorize(form, {\n      total: Cart.findOne().cartTotal(),\n      currency: Shops.findOne().currency\n    }, function (error, transaction) {\n      submitting = false;\n      let paymentMethod;\n      if (error) {\n        handleExampleSubmitError(error);\n        uiEnd(template, \"Resubmit payment\");\n      } else {\n        if (transaction.saved === true) {\n          submitting = false;\n          paymentMethod = {\n            processor: \"Example\",\n            paymentPackageId: packageData._id,\n            paymentSettingsKey: packageData.registry[0].settingsKey,\n            storedCard: storedCard,\n            method: \"credit\",\n            transactionId: transaction.transactionId,\n            currency: transaction.currency,\n            amount: transaction.amount,\n            status: transaction.status,\n            mode: \"authorize\",\n            createdAt: new Date(),\n            transactions: []\n          };\n          paymentMethod.transactions.push(transaction.response);\n          Meteor.call(\"cart/submitPayment\", paymentMethod);\n        } else {\n          handleExampleSubmitError(transaction.error);\n          uiEnd(template, \"Resubmit payment\");\n        }\n      }\n    });\n    return false;\n  },\n  beginSubmit: function () {\n    this.template.$(\":input\").attr(\"disabled\", true);\n    this.template.$(\"#btn-complete-order\").text(\"Submitting \");\n    return this.template.$(\"#btn-processing\").removeClass(\"hidden\");\n  },\n  endSubmit: function () {\n    if (!submitting) {\n      return uiEnd(this.template, \"Complete your order\");\n    }\n  }\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/included/payments-example/client/checkout/example.js.map","sourceFileName":"/imports/plugins/included/payments-example/client/checkout/example.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"example"},"ignored":false,"code":"var Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Template = void 0;\nmodule.importSync(\"meteor/templating\", {\n  Template: function (v) {\n    Template = v;\n  }\n}, 1);\nvar Reaction = void 0;\nmodule.importSync(\"/client/api\", {\n  Reaction: function (v) {\n    Reaction = v;\n  }\n}, 2);\nvar Cart = void 0,\n    Shops = void 0,\n    Packages = void 0;\nmodule.importSync(\"/lib/collections\", {\n  Cart: function (v) {\n    Cart = v;\n  },\n  Shops: function (v) {\n    Shops = v;\n  },\n  Packages: function (v) {\n    Packages = v;\n  }\n}, 3);\nvar Example = void 0;\nmodule.importSync(\"../../lib/api\", {\n  Example: function (v) {\n    Example = v;\n  }\n}, 4);\nvar ExamplePayment = void 0;\nmodule.importSync(\"../../lib/collections/schemas\", {\n  ExamplePayment: function (v) {\n    ExamplePayment = v;\n  }\n}, 5);\nmodule.importSync(\"./example.html\");\nvar submitting = false;\n\nfunction uiEnd(template, buttonText) {\n  template.$(\":input\").removeAttr(\"disabled\");\n  template.$(\"#btn-complete-order\").text(buttonText);\n  return template.$(\"#btn-processing\").addClass(\"hidden\");\n}\n\nfunction paymentAlert(errorMessage) {\n  return $(\".alert\").removeClass(\"hidden\").text(errorMessage);\n}\n\nfunction hidePaymentAlert() {\n  return $(\".alert\").addClass(\"hidden\").text(\"\");\n}\n\nfunction handleExampleSubmitError(error) {\n  var serverError = error !== null ? error.message : void 0;\n\n  if (serverError) {\n    return paymentAlert(\"Oops! \" + serverError);\n  } else if (error) {\n    return paymentAlert(\"Oops! \" + error, null, 4);\n  }\n}\n\nTemplate.examplePaymentForm.helpers({\n  ExamplePayment: function () {\n    return ExamplePayment;\n  }\n});\nAutoForm.addHooks(\"example-payment-form\", {\n  onSubmit: function (doc) {\n    submitting = true;\n    var template = this.template;\n    hidePaymentAlert();\n    var form = {\n      name: doc.payerName,\n      number: doc.cardNumber,\n      expireMonth: doc.expireMonth,\n      expireYear: doc.expireYear,\n      cvv2: doc.cvv,\n      type: Reaction.getCardType(doc.cardNumber)\n    };\n    var storedCard = form.type.charAt(0).toUpperCase() + form.type.slice(1) + \" \" + doc.cardNumber.slice(-4);\n    Meteor.subscribe(\"Packages\");\n    var packageData = Packages.findOne({\n      name: \"example-paymentmethod\",\n      shopId: Reaction.getShopId()\n    });\n    Example.authorize(form, {\n      total: Cart.findOne().cartTotal(),\n      currency: Shops.findOne().currency\n    }, function (error, transaction) {\n      submitting = false;\n      var paymentMethod = void 0;\n\n      if (error) {\n        handleExampleSubmitError(error);\n        uiEnd(template, \"Resubmit payment\");\n      } else {\n        if (transaction.saved === true) {\n          submitting = false;\n          paymentMethod = {\n            processor: \"Example\",\n            paymentPackageId: packageData._id,\n            paymentSettingsKey: packageData.registry[0].settingsKey,\n            storedCard: storedCard,\n            method: \"credit\",\n            transactionId: transaction.transactionId,\n            currency: transaction.currency,\n            amount: transaction.amount,\n            status: transaction.status,\n            mode: \"authorize\",\n            createdAt: new Date(),\n            transactions: []\n          };\n          paymentMethod.transactions.push(transaction.response);\n          Meteor.call(\"cart/submitPayment\", paymentMethod);\n        } else {\n          handleExampleSubmitError(transaction.error);\n          uiEnd(template, \"Resubmit payment\");\n        }\n      }\n    });\n    return false;\n  },\n  beginSubmit: function () {\n    this.template.$(\":input\").attr(\"disabled\", true);\n    this.template.$(\"#btn-complete-order\").text(\"Submitting \");\n    return this.template.$(\"#btn-processing\").removeClass(\"hidden\");\n  },\n  endSubmit: function () {\n    if (!submitting) {\n      return uiEnd(this.template, \"Complete your order\");\n    }\n  }\n});","map":{"version":3,"sources":["/imports/plugins/included/payments-example/client/checkout/example.js"],"names":["Meteor","Template","Reaction","Cart","Shops","Packages","Example","ExamplePayment","submitting","uiEnd","template","buttonText","$","removeAttr","text","addClass","paymentAlert","errorMessage","removeClass","hidePaymentAlert","handleExampleSubmitError","error","serverError","message","examplePaymentForm","helpers","AutoForm","addHooks","onSubmit","doc","form","name","payerName","number","cardNumber","expireMonth","expireYear","cvv2","cvv","type","getCardType","storedCard","charAt","toUpperCase","slice","subscribe","packageData","findOne","shopId","getShopId","authorize","total","cartTotal","currency","transaction","paymentMethod","saved","processor","paymentPackageId","_id","paymentSettingsKey","registry","settingsKey","method","transactionId","amount","status","mode","createdAt","Date","transactions","push","response","call","beginSubmit","attr","endSubmit"],"mappings":"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","file":"/imports/plugins/included/payments-example/client/checkout/example.js.map","sourcesContent":["/* eslint camelcase: 0 */\nimport { Meteor } from \"meteor/meteor\";\nimport { Template } from \"meteor/templating\";\nimport { Reaction } from \"/client/api\";\nimport { Cart, Shops, Packages } from \"/lib/collections\";\nimport { Example } from \"../../lib/api\";\nimport { ExamplePayment } from \"../../lib/collections/schemas\";\n\nimport \"./example.html\";\n\nlet submitting = false;\n\nfunction uiEnd(template, buttonText) {\n  template.$(\":input\").removeAttr(\"disabled\");\n  template.$(\"#btn-complete-order\").text(buttonText);\n  return template.$(\"#btn-processing\").addClass(\"hidden\");\n}\n\nfunction paymentAlert(errorMessage) {\n  return $(\".alert\").removeClass(\"hidden\").text(errorMessage);\n}\n\nfunction hidePaymentAlert() {\n  return $(\".alert\").addClass(\"hidden\").text(\"\");\n}\n\nfunction handleExampleSubmitError(error) {\n  const serverError = error !== null ? error.message : void 0;\n  if (serverError) {\n    return paymentAlert(\"Oops! \" + serverError);\n  } else if (error) {\n    return paymentAlert(\"Oops! \" + error, null, 4);\n  }\n}\n\n\nTemplate.examplePaymentForm.helpers({\n  ExamplePayment() {\n    return ExamplePayment;\n  }\n});\n\nAutoForm.addHooks(\"example-payment-form\", {\n  onSubmit: function (doc) {\n    submitting = true;\n    const template = this.template;\n    hidePaymentAlert();\n    const form = {\n      name: doc.payerName,\n      number: doc.cardNumber,\n      expireMonth: doc.expireMonth,\n      expireYear: doc.expireYear,\n      cvv2: doc.cvv,\n      type: Reaction.getCardType(doc.cardNumber)\n    };\n    const storedCard = form.type.charAt(0).toUpperCase() + form.type.slice(1) + \" \" + doc.cardNumber.slice(-4);\n    Meteor.subscribe(\"Packages\");\n    const packageData = Packages.findOne({\n      name: \"example-paymentmethod\",\n      shopId: Reaction.getShopId()\n    });\n    Example.authorize(form, {\n      total: Cart.findOne().cartTotal(),\n      currency: Shops.findOne().currency\n    }, function (error, transaction) {\n      submitting = false;\n      let paymentMethod;\n      if (error) {\n        handleExampleSubmitError(error);\n        uiEnd(template, \"Resubmit payment\");\n      } else {\n        if (transaction.saved === true) {\n          submitting = false;\n          paymentMethod = {\n            processor: \"Example\",\n            paymentPackageId: packageData._id,\n            paymentSettingsKey: packageData.registry[0].settingsKey,\n            storedCard: storedCard,\n            method: \"credit\",\n            transactionId: transaction.transactionId,\n            currency: transaction.currency,\n            amount: transaction.amount,\n            status: transaction.status,\n            mode: \"authorize\",\n            createdAt: new Date(),\n            transactions: []\n          };\n          paymentMethod.transactions.push(transaction.response);\n          Meteor.call(\"cart/submitPayment\", paymentMethod);\n        } else {\n          handleExampleSubmitError(transaction.error);\n          uiEnd(template, \"Resubmit payment\");\n        }\n      }\n    });\n    return false;\n  },\n  beginSubmit: function () {\n    this.template.$(\":input\").attr(\"disabled\", true);\n    this.template.$(\"#btn-complete-order\").text(\"Submitting \");\n    return this.template.$(\"#btn-processing\").removeClass(\"hidden\");\n  },\n  endSubmit: function () {\n    if (!submitting) {\n      return uiEnd(this.template, \"Complete your order\");\n    }\n  }\n});\n"]},"hash":"262fafdd5c3ef0a0c558f8cd9bd14bfedf7b4d5c"}
