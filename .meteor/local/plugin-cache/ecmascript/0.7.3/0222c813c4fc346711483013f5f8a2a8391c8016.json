{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component","PropTypes"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"},{"kind":"named","imported":"PropTypes","local":"PropTypes"}]},{"source":"classnames","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"classnames"}]},{"source":"./cardTitle","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"CardTitle"}]},{"source":"../button/iconButton","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"IconButton"}]},{"source":"../icon/icon","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Icon"}]},{"source":"../switch/switch","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Switch"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/core/ui/client/components/cards/cardHeader.js","filenameRelative":"/imports/plugins/core/ui/client/components/cards/cardHeader.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/core/ui/client/components/cards/cardHeader.js"],"names":["React","Component","PropTypes","classnames","CardTitle","IconButton","Icon","Switch","CardHeader","defaultProps","actAsExpander","expandable","propTypes","bool","children","node","expandOnSwitchOn","expanded","i18nKeyTitle","string","icon","imageView","onClick","func","onSwitchChange","showSwitch","switchName","switchOn","title","handleClick","event","preventDefault","props","handleSwitchChange","isChecked","name","renderTitle","renderImage","renderDisclsoureArrow","expanderClassName","rui","expander","open","borderColor","renderChildren","render","baseClassName"],"mappings":"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","file":"/imports/plugins/core/ui/client/components/cards/cardHeader.js.map","sourcesContent":["import React, { Component, PropTypes } from \"react\";\nimport classnames from \"classnames\";\nimport CardTitle from \"./cardTitle\";\nimport IconButton from \"../button/iconButton\";\nimport Icon from \"../icon/icon\";\nimport Switch from \"../switch/switch\";\n\nclass CardHeader extends Component {\n  static defaultProps = {\n    actAsExpander: false,\n    expandable: false\n  };\n\n  static propTypes = {\n    actAsExpander: PropTypes.bool,\n    children: PropTypes.node,\n    expandOnSwitchOn: PropTypes.bool,\n    expanded: PropTypes.bool,\n    i18nKeyTitle: PropTypes.string,\n    icon: PropTypes.string,\n    imageView: PropTypes.node,\n    onClick: PropTypes.func,\n    onSwitchChange: PropTypes.func,\n    showSwitch: PropTypes.bool,\n    switchName: PropTypes.string,\n    switchOn: PropTypes.bool,\n    title: PropTypes.string\n  };\n\n  handleClick = (event) => {\n    event.preventDefault();\n\n    if (typeof this.props.onClick === \"function\") {\n      this.props.onClick(event);\n    }\n  }\n\n  handleSwitchChange = (event, isChecked, name) => {\n    if (this.props.expandOnSwitchOn && this.props.actAsExpander && this.props.expanded === false && isChecked === true) {\n      this.handleClick(event);\n    }\n\n    if (typeof this.props.onSwitchChange === \"function\") {\n      this.props.onSwitchChange(event, isChecked, name);\n    }\n  }\n\n  renderTitle() {\n    if (this.props.title) {\n      return (\n        <CardTitle\n          i18nKeyTitle={this.props.i18nKeyTitle}\n          title={this.props.title}\n        />\n      );\n    }\n    return null;\n  }\n\n  renderImage() {\n    if (this.props.icon) {\n      return (\n        <div className=\"image\">\n          <Icon icon={this.props.icon} />\n        </div>\n      );\n    }\n\n    if (this.props.imageView) {\n      return (\n        <div className=\"image\">\n          {this.props.imageView}\n        </div>\n      );\n    }\n\n    return null;\n  }\n\n  renderDisclsoureArrow() {\n    const expanderClassName = classnames({\n      rui: true,\n      expander: true,\n      open: this.props.expanded\n    });\n\n    return (\n      <div className={expanderClassName}>\n        <IconButton\n          icon=\"fa fa-angle-down\"\n          bezelStyle=\"outline\"\n          style={{ borderColor: \"#dddddd\" }}\n          onClick={this.handleClick}\n        />\n      </div>\n    );\n  }\n\n  renderChildren() {\n    if (this.props.showSwitch) {\n      return (\n        <Switch\n          checked={this.props.switchOn}\n          name={this.props.switchName}\n          onChange={this.handleSwitchChange}\n        />\n      );\n    }\n\n    return this.props.children;\n  }\n\n  render() {\n    const baseClassName = classnames({\n      \"rui\": true,\n      \"panel-heading\": true,\n      \"card-header\": true,\n      \"expandable\": this.props.actAsExpander\n    });\n\n    if (this.props.actAsExpander) {\n      return (\n        <div className={baseClassName}>\n          <div className=\"content-view\" onClick={this.handleClick}>\n            {this.renderImage()}\n            {this.renderTitle()}\n          </div>\n          <div className=\"action-view\">\n            {this.renderChildren()}\n          </div>\n          {this.renderDisclsoureArrow()}\n        </div>\n      );\n    }\n\n    return (\n      <div className={baseClassName}>\n        <div className=\"content-view\">\n          {this.renderTitle()}\n        </div>\n        <div className=\"action-view\">\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CardHeader;\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/core/ui/client/components/cards/cardHeader.js.map","sourceFileName":"/imports/plugins/core/ui/client/components/cards/cardHeader.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"cardHeader"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0,\n    Component = void 0,\n    PropTypes = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  },\n  PropTypes: function (v) {\n    PropTypes = v;\n  }\n}, 0);\nvar classnames = void 0;\nmodule.importSync(\"classnames\", {\n  \"default\": function (v) {\n    classnames = v;\n  }\n}, 1);\nvar CardTitle = void 0;\nmodule.importSync(\"./cardTitle\", {\n  \"default\": function (v) {\n    CardTitle = v;\n  }\n}, 2);\nvar IconButton = void 0;\nmodule.importSync(\"../button/iconButton\", {\n  \"default\": function (v) {\n    IconButton = v;\n  }\n}, 3);\nvar Icon = void 0;\nmodule.importSync(\"../icon/icon\", {\n  \"default\": function (v) {\n    Icon = v;\n  }\n}, 4);\nvar Switch = void 0;\nmodule.importSync(\"../switch/switch\", {\n  \"default\": function (v) {\n    Switch = v;\n  }\n}, 5);\n\nvar CardHeader = function (_Component) {\n  (0, _inherits3.default)(CardHeader, _Component);\n\n  function CardHeader() {\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, CardHeader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.handleClick = function (event) {\n      event.preventDefault();\n\n      if (typeof _this.props.onClick === \"function\") {\n        _this.props.onClick(event);\n      }\n    }, _this.handleSwitchChange = function (event, isChecked, name) {\n      if (_this.props.expandOnSwitchOn && _this.props.actAsExpander && _this.props.expanded === false && isChecked === true) {\n        _this.handleClick(event);\n      }\n\n      if (typeof _this.props.onSwitchChange === \"function\") {\n        _this.props.onSwitchChange(event, isChecked, name);\n      }\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  CardHeader.prototype.renderTitle = function () {\n    function renderTitle() {\n      if (this.props.title) {\n        return React.createElement(CardTitle, {\n          i18nKeyTitle: this.props.i18nKeyTitle,\n          title: this.props.title\n        });\n      }\n\n      return null;\n    }\n\n    return renderTitle;\n  }();\n\n  CardHeader.prototype.renderImage = function () {\n    function renderImage() {\n      if (this.props.icon) {\n        return React.createElement(\n          \"div\",\n          {\n            className: \"image\"\n          },\n          React.createElement(Icon, {\n            icon: this.props.icon\n          })\n        );\n      }\n\n      if (this.props.imageView) {\n        return React.createElement(\n          \"div\",\n          {\n            className: \"image\"\n          },\n          this.props.imageView\n        );\n      }\n\n      return null;\n    }\n\n    return renderImage;\n  }();\n\n  CardHeader.prototype.renderDisclsoureArrow = function () {\n    function renderDisclsoureArrow() {\n      var expanderClassName = classnames({\n        rui: true,\n        expander: true,\n        open: this.props.expanded\n      });\n      return React.createElement(\n        \"div\",\n        {\n          className: expanderClassName\n        },\n        React.createElement(IconButton, {\n          icon: \"fa fa-angle-down\",\n          bezelStyle: \"outline\",\n          style: {\n            borderColor: \"#dddddd\"\n          },\n          onClick: this.handleClick\n        })\n      );\n    }\n\n    return renderDisclsoureArrow;\n  }();\n\n  CardHeader.prototype.renderChildren = function () {\n    function renderChildren() {\n      if (this.props.showSwitch) {\n        return React.createElement(Switch, {\n          checked: this.props.switchOn,\n          name: this.props.switchName,\n          onChange: this.handleSwitchChange\n        });\n      }\n\n      return this.props.children;\n    }\n\n    return renderChildren;\n  }();\n\n  CardHeader.prototype.render = function () {\n    function render() {\n      var baseClassName = classnames({\n        \"rui\": true,\n        \"panel-heading\": true,\n        \"card-header\": true,\n        \"expandable\": this.props.actAsExpander\n      });\n\n      if (this.props.actAsExpander) {\n        return React.createElement(\n          \"div\",\n          {\n            className: baseClassName\n          },\n          React.createElement(\n            \"div\",\n            {\n              className: \"content-view\",\n              onClick: this.handleClick\n            },\n            this.renderImage(),\n            this.renderTitle()\n          ),\n          React.createElement(\n            \"div\",\n            {\n              className: \"action-view\"\n            },\n            this.renderChildren()\n          ),\n          this.renderDisclsoureArrow()\n        );\n      }\n\n      return React.createElement(\n        \"div\",\n        {\n          className: baseClassName\n        },\n        React.createElement(\n          \"div\",\n          {\n            className: \"content-view\"\n          },\n          this.renderTitle()\n        ),\n        React.createElement(\n          \"div\",\n          {\n            className: \"action-view\"\n          },\n          this.props.children\n        )\n      );\n    }\n\n    return render;\n  }();\n\n  return CardHeader;\n}(Component);\n\nCardHeader.defaultProps = {\n  actAsExpander: false,\n  expandable: false\n};\nCardHeader.propTypes = {\n  actAsExpander: PropTypes.bool,\n  children: PropTypes.node,\n  expandOnSwitchOn: PropTypes.bool,\n  expanded: PropTypes.bool,\n  i18nKeyTitle: PropTypes.string,\n  icon: PropTypes.string,\n  imageView: PropTypes.node,\n  onClick: PropTypes.func,\n  onSwitchChange: PropTypes.func,\n  showSwitch: PropTypes.bool,\n  switchName: PropTypes.string,\n  switchOn: PropTypes.bool,\n  title: PropTypes.string\n};\nmodule.export(\"default\", exports.default = CardHeader);","map":{"version":3,"sources":["/imports/plugins/core/ui/client/components/cards/cardHeader.js"],"names":["React","Component","PropTypes","classnames","CardTitle","IconButton","Icon","Switch","CardHeader","defaultProps","actAsExpander","expandable","propTypes","bool","children","node","expandOnSwitchOn","expanded","i18nKeyTitle","string","icon","imageView","onClick","func","onSwitchChange","showSwitch","switchName","switchOn","title","handleClick","event","preventDefault","props","handleSwitchChange","isChecked","name","renderTitle","renderImage","renderDisclsoureArrow","expanderClassName","rui","expander","open","borderColor","renderChildren","render","baseClassName"],"mappings":"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","file":"/imports/plugins/core/ui/client/components/cards/cardHeader.js.map","sourcesContent":["import React, { Component, PropTypes } from \"react\";\nimport classnames from \"classnames\";\nimport CardTitle from \"./cardTitle\";\nimport IconButton from \"../button/iconButton\";\nimport Icon from \"../icon/icon\";\nimport Switch from \"../switch/switch\";\n\nclass CardHeader extends Component {\n  static defaultProps = {\n    actAsExpander: false,\n    expandable: false\n  };\n\n  static propTypes = {\n    actAsExpander: PropTypes.bool,\n    children: PropTypes.node,\n    expandOnSwitchOn: PropTypes.bool,\n    expanded: PropTypes.bool,\n    i18nKeyTitle: PropTypes.string,\n    icon: PropTypes.string,\n    imageView: PropTypes.node,\n    onClick: PropTypes.func,\n    onSwitchChange: PropTypes.func,\n    showSwitch: PropTypes.bool,\n    switchName: PropTypes.string,\n    switchOn: PropTypes.bool,\n    title: PropTypes.string\n  };\n\n  handleClick = (event) => {\n    event.preventDefault();\n\n    if (typeof this.props.onClick === \"function\") {\n      this.props.onClick(event);\n    }\n  }\n\n  handleSwitchChange = (event, isChecked, name) => {\n    if (this.props.expandOnSwitchOn && this.props.actAsExpander && this.props.expanded === false && isChecked === true) {\n      this.handleClick(event);\n    }\n\n    if (typeof this.props.onSwitchChange === \"function\") {\n      this.props.onSwitchChange(event, isChecked, name);\n    }\n  }\n\n  renderTitle() {\n    if (this.props.title) {\n      return (\n        <CardTitle\n          i18nKeyTitle={this.props.i18nKeyTitle}\n          title={this.props.title}\n        />\n      );\n    }\n    return null;\n  }\n\n  renderImage() {\n    if (this.props.icon) {\n      return (\n        <div className=\"image\">\n          <Icon icon={this.props.icon} />\n        </div>\n      );\n    }\n\n    if (this.props.imageView) {\n      return (\n        <div className=\"image\">\n          {this.props.imageView}\n        </div>\n      );\n    }\n\n    return null;\n  }\n\n  renderDisclsoureArrow() {\n    const expanderClassName = classnames({\n      rui: true,\n      expander: true,\n      open: this.props.expanded\n    });\n\n    return (\n      <div className={expanderClassName}>\n        <IconButton\n          icon=\"fa fa-angle-down\"\n          bezelStyle=\"outline\"\n          style={{ borderColor: \"#dddddd\" }}\n          onClick={this.handleClick}\n        />\n      </div>\n    );\n  }\n\n  renderChildren() {\n    if (this.props.showSwitch) {\n      return (\n        <Switch\n          checked={this.props.switchOn}\n          name={this.props.switchName}\n          onChange={this.handleSwitchChange}\n        />\n      );\n    }\n\n    return this.props.children;\n  }\n\n  render() {\n    const baseClassName = classnames({\n      \"rui\": true,\n      \"panel-heading\": true,\n      \"card-header\": true,\n      \"expandable\": this.props.actAsExpander\n    });\n\n    if (this.props.actAsExpander) {\n      return (\n        <div className={baseClassName}>\n          <div className=\"content-view\" onClick={this.handleClick}>\n            {this.renderImage()}\n            {this.renderTitle()}\n          </div>\n          <div className=\"action-view\">\n            {this.renderChildren()}\n          </div>\n          {this.renderDisclsoureArrow()}\n        </div>\n      );\n    }\n\n    return (\n      <div className={baseClassName}>\n        <div className=\"content-view\">\n          {this.renderTitle()}\n        </div>\n        <div className=\"action-view\">\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CardHeader;\n"]},"hash":"0222c813c4fc346711483013f5f8a2a8391c8016"}
