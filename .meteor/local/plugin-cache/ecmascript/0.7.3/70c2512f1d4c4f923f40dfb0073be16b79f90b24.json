{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"lodash/groupBy","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_groupBy"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"/client/api","imported":["Reaction","i18next"],"specifiers":[{"kind":"named","imported":"Reaction","local":"Reaction"},{"kind":"named","imported":"i18next","local":"i18next"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/core/dashboard/client/templates/packages/grid/grid.js","filenameRelative":"/imports/plugins/core/dashboard/client/templates/packages/grid/grid.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/core/dashboard/client/templates/packages/grid/grid.js"],"names":["Meteor","Reaction","i18next","pkgPermissions","pkg","hasPermission","name","enableReactionPackage","reactionPackage","self","call","packageId","error","result","Alerts","toast","t","app","i18nKeyLabel","type","route","Router","go","disableReactionPackage","alert","showCancelButton","Error","Template","packagesGrid","onCreated","state","ReactiveDict","setDefault","groups","appsByGroup","apps","autorun","Apps","provides","enabled","groupedApps","container","set","Object","keys","helpers","instance","get","appsInGroup","groupName","group","shopId","getShopId","packagesGridGroup","packageProps","package","enablePackage","value"],"mappings":"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","file":"/imports/plugins/core/dashboard/client/templates/packages/grid/grid.js.map","sourcesContent":["import _ from \"lodash\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Reaction, i18next } from \"/client/api\";\n\nfunction pkgPermissions(pkg) {\n  // if (Reaction.hasPermission(\"dashboard\")) {\n  //   // route specific permissions\n  //   if (pkg.name) {\n  //     return Reaction.hasPermission(pkg.name);\n  //   }\n  //   // name is a global group role for packages\n  //   if (pkg.template) {\n  //     return Reaction.hasPermission(pkg.template);\n  //   }\n  // }\n  return Reaction.hasPermission(pkg.name);\n}\n\nfunction enableReactionPackage(reactionPackage) {\n  const self = reactionPackage;\n\n  Meteor.call(\"shop/togglePackage\", self.packageId, false,\n    (error, result) => {\n      if (result === 1) {\n        Alerts.toast(\n          i18next.t(\n            \"gridPackage.pkgEnabled\",\n            { app: i18next.t(self.i18nKeyLabel) }\n          ),\n          \"error\", {\n            type: \"pkg-enabled-\" + self.name\n          }\n        );\n        if (self.name || self.route) {\n          const route = self.name || self.route;\n          return Reaction.Router.go(route);\n        }\n      } else if (error) {\n        return Alerts.toast(\n          i18next.t(\n            \"gridPackage.pkgDisabled\",\n            { app: i18next.t(self.i18nKeyLabel) }\n          ),\n          \"warning\"\n        );\n      }\n    }\n  );\n}\n\nfunction disableReactionPackage(reactionPackage) {\n  const self = reactionPackage;\n\n  if (self.name === \"core\") {\n    return;\n  }\n\n  Alerts.alert(\n    \"Disable Package\",\n    i18next.t(\"gridPackage.disableConfirm\", { app: i18next.t(self.i18nKeyLabel) }),\n    {\n      type: \"warning\",\n      showCancelButton: true\n    },\n    () => {\n      Meteor.call(\"shop/togglePackage\", self.packageId, true,\n        (error, result) => {\n          if (result === 1) {\n            return Alerts.toast(\n              i18next.t(\"gridPackage.pkgDisabled\", {\n                app: i18next.t(self.i18nKeyLabel)\n              }),\n              \"success\"\n            );\n          } else if (error) {\n            throw new Meteor.Error(\"error disabling package\", error);\n          }\n        }\n      );\n    });\n}\n\nTemplate.packagesGrid.onCreated(function () {\n  this.state = new ReactiveDict();\n  this.state.setDefault({\n    groups: [],\n    appsByGroup: {},\n    apps: []\n  });\n\n  this.autorun(() => {\n    const apps = Reaction.Apps({ provides: \"dashboard\", enabled: true });\n    const groupedApps = _.groupBy(apps, (app) => {\n      return app.container || \"misc\";\n    });\n    this.state.set(\"apps\", apps);\n    this.state.set(\"appsByGroup\", groupedApps);\n    this.state.set(\"groups\", Object.keys(groupedApps));\n  });\n});\n\n/**\n * packagesGrid helpers\n */\nTemplate.packagesGrid.helpers({\n  groups() {\n    return Template.instance().state.get(\"groups\");\n  },\n\n  appsInGroup(groupName) {\n    const group = Template.instance().state.get(\"appsByGroup\") || {};\n    return group[groupName] || false;\n  },\n\n  shopId() {\n    return Reaction.getShopId();\n  },\n\n\n  pkgPermissions\n});\n\nTemplate.packagesGridGroup.helpers({\n  pkgPermissions,\n\n  packageProps(app) {\n    return {\n      package: app,\n      enablePackage(reactionPackage, value) {\n        if (value === true) {\n          enableReactionPackage(reactionPackage);\n        } else {\n          disableReactionPackage(reactionPackage);\n        }\n      }\n    };\n  }\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/core/dashboard/client/templates/packages/grid/grid.js.map","sourceFileName":"/imports/plugins/core/dashboard/client/templates/packages/grid/grid.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"grid"},"ignored":false,"code":"var _groupBy = void 0;\n\nmodule.importSync(\"lodash/groupBy\", {\n  \"default\": function (v) {\n    _groupBy = v;\n  }\n}, 0);\nvar Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\nvar Reaction = void 0,\n    i18next = void 0;\nmodule.importSync(\"/client/api\", {\n  Reaction: function (v) {\n    Reaction = v;\n  },\n  i18next: function (v) {\n    i18next = v;\n  }\n}, 2);\n\nfunction pkgPermissions(pkg) {\n  // if (Reaction.hasPermission(\"dashboard\")) {\n  //   // route specific permissions\n  //   if (pkg.name) {\n  //     return Reaction.hasPermission(pkg.name);\n  //   }\n  //   // name is a global group role for packages\n  //   if (pkg.template) {\n  //     return Reaction.hasPermission(pkg.template);\n  //   }\n  // }\n  return Reaction.hasPermission(pkg.name);\n}\n\nfunction enableReactionPackage(reactionPackage) {\n  var self = reactionPackage;\n  Meteor.call(\"shop/togglePackage\", self.packageId, false, function (error, result) {\n    if (result === 1) {\n      Alerts.toast(i18next.t(\"gridPackage.pkgEnabled\", {\n        app: i18next.t(self.i18nKeyLabel)\n      }), \"error\", {\n        type: \"pkg-enabled-\" + self.name\n      });\n\n      if (self.name || self.route) {\n        var route = self.name || self.route;\n        return Reaction.Router.go(route);\n      }\n    } else if (error) {\n      return Alerts.toast(i18next.t(\"gridPackage.pkgDisabled\", {\n        app: i18next.t(self.i18nKeyLabel)\n      }), \"warning\");\n    }\n  });\n}\n\nfunction disableReactionPackage(reactionPackage) {\n  var self = reactionPackage;\n\n  if (self.name === \"core\") {\n    return;\n  }\n\n  Alerts.alert(\"Disable Package\", i18next.t(\"gridPackage.disableConfirm\", {\n    app: i18next.t(self.i18nKeyLabel)\n  }), {\n    type: \"warning\",\n    showCancelButton: true\n  }, function () {\n    Meteor.call(\"shop/togglePackage\", self.packageId, true, function (error, result) {\n      if (result === 1) {\n        return Alerts.toast(i18next.t(\"gridPackage.pkgDisabled\", {\n          app: i18next.t(self.i18nKeyLabel)\n        }), \"success\");\n      } else if (error) {\n        throw new Meteor.Error(\"error disabling package\", error);\n      }\n    });\n  });\n}\n\nTemplate.packagesGrid.onCreated(function () {\n  var _this = this;\n\n  this.state = new ReactiveDict();\n  this.state.setDefault({\n    groups: [],\n    appsByGroup: {},\n    apps: []\n  });\n  this.autorun(function () {\n    var apps = Reaction.Apps({\n      provides: \"dashboard\",\n      enabled: true\n    });\n\n    var groupedApps = _groupBy(apps, function (app) {\n      return app.container || \"misc\";\n    });\n\n    _this.state.set(\"apps\", apps);\n\n    _this.state.set(\"appsByGroup\", groupedApps);\n\n    _this.state.set(\"groups\", Object.keys(groupedApps));\n  });\n}); /**\n     * packagesGrid helpers\n     */\nTemplate.packagesGrid.helpers({\n  groups: function () {\n    return Template.instance().state.get(\"groups\");\n  },\n  appsInGroup: function (groupName) {\n    var group = Template.instance().state.get(\"appsByGroup\") || {};\n    return group[groupName] || false;\n  },\n  shopId: function () {\n    return Reaction.getShopId();\n  },\n  pkgPermissions: pkgPermissions\n});\nTemplate.packagesGridGroup.helpers({\n  pkgPermissions: pkgPermissions,\n  packageProps: function (app) {\n    return {\n      \"package\": app,\n      enablePackage: function (reactionPackage, value) {\n        if (value === true) {\n          enableReactionPackage(reactionPackage);\n        } else {\n          disableReactionPackage(reactionPackage);\n        }\n      }\n    };\n  }\n});","map":{"version":3,"sources":["/imports/plugins/core/dashboard/client/templates/packages/grid/grid.js"],"names":["Meteor","Reaction","i18next","pkgPermissions","pkg","hasPermission","name","enableReactionPackage","reactionPackage","self","call","packageId","error","result","Alerts","toast","t","app","i18nKeyLabel","type","route","Router","go","disableReactionPackage","alert","showCancelButton","Error","Template","packagesGrid","onCreated","state","ReactiveDict","setDefault","groups","appsByGroup","apps","autorun","Apps","provides","enabled","groupedApps","container","set","Object","keys","helpers","instance","get","appsInGroup","groupName","group","shopId","getShopId","packagesGridGroup","packageProps","package","enablePackage","value"],"mappings":"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","file":"/imports/plugins/core/dashboard/client/templates/packages/grid/grid.js.map","sourcesContent":["import _ from \"lodash\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Reaction, i18next } from \"/client/api\";\n\nfunction pkgPermissions(pkg) {\n  // if (Reaction.hasPermission(\"dashboard\")) {\n  //   // route specific permissions\n  //   if (pkg.name) {\n  //     return Reaction.hasPermission(pkg.name);\n  //   }\n  //   // name is a global group role for packages\n  //   if (pkg.template) {\n  //     return Reaction.hasPermission(pkg.template);\n  //   }\n  // }\n  return Reaction.hasPermission(pkg.name);\n}\n\nfunction enableReactionPackage(reactionPackage) {\n  const self = reactionPackage;\n\n  Meteor.call(\"shop/togglePackage\", self.packageId, false,\n    (error, result) => {\n      if (result === 1) {\n        Alerts.toast(\n          i18next.t(\n            \"gridPackage.pkgEnabled\",\n            { app: i18next.t(self.i18nKeyLabel) }\n          ),\n          \"error\", {\n            type: \"pkg-enabled-\" + self.name\n          }\n        );\n        if (self.name || self.route) {\n          const route = self.name || self.route;\n          return Reaction.Router.go(route);\n        }\n      } else if (error) {\n        return Alerts.toast(\n          i18next.t(\n            \"gridPackage.pkgDisabled\",\n            { app: i18next.t(self.i18nKeyLabel) }\n          ),\n          \"warning\"\n        );\n      }\n    }\n  );\n}\n\nfunction disableReactionPackage(reactionPackage) {\n  const self = reactionPackage;\n\n  if (self.name === \"core\") {\n    return;\n  }\n\n  Alerts.alert(\n    \"Disable Package\",\n    i18next.t(\"gridPackage.disableConfirm\", { app: i18next.t(self.i18nKeyLabel) }),\n    {\n      type: \"warning\",\n      showCancelButton: true\n    },\n    () => {\n      Meteor.call(\"shop/togglePackage\", self.packageId, true,\n        (error, result) => {\n          if (result === 1) {\n            return Alerts.toast(\n              i18next.t(\"gridPackage.pkgDisabled\", {\n                app: i18next.t(self.i18nKeyLabel)\n              }),\n              \"success\"\n            );\n          } else if (error) {\n            throw new Meteor.Error(\"error disabling package\", error);\n          }\n        }\n      );\n    });\n}\n\nTemplate.packagesGrid.onCreated(function () {\n  this.state = new ReactiveDict();\n  this.state.setDefault({\n    groups: [],\n    appsByGroup: {},\n    apps: []\n  });\n\n  this.autorun(() => {\n    const apps = Reaction.Apps({ provides: \"dashboard\", enabled: true });\n    const groupedApps = _.groupBy(apps, (app) => {\n      return app.container || \"misc\";\n    });\n    this.state.set(\"apps\", apps);\n    this.state.set(\"appsByGroup\", groupedApps);\n    this.state.set(\"groups\", Object.keys(groupedApps));\n  });\n});\n\n/**\n * packagesGrid helpers\n */\nTemplate.packagesGrid.helpers({\n  groups() {\n    return Template.instance().state.get(\"groups\");\n  },\n\n  appsInGroup(groupName) {\n    const group = Template.instance().state.get(\"appsByGroup\") || {};\n    return group[groupName] || false;\n  },\n\n  shopId() {\n    return Reaction.getShopId();\n  },\n\n\n  pkgPermissions\n});\n\nTemplate.packagesGridGroup.helpers({\n  pkgPermissions,\n\n  packageProps(app) {\n    return {\n      package: app,\n      enablePackage(reactionPackage, value) {\n        if (value === true) {\n          enableReactionPackage(reactionPackage);\n        } else {\n          disableReactionPackage(reactionPackage);\n        }\n      }\n    };\n  }\n});\n"]},"hash":"70c2512f1d4c4f923f40dfb0073be16b79f90b24"}
