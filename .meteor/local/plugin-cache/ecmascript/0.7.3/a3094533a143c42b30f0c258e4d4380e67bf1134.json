{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/reactive-var","imported":["ReactiveVar"],"specifiers":[{"kind":"named","imported":"ReactiveVar","local":"ReactiveVar"}]},{"source":"/client/api","imported":["i18next"],"specifiers":[{"kind":"named","imported":"i18next","local":"i18next"}]},{"source":"/lib/collections","imported":["*"],"specifiers":[{"kind":"namespace","local":"Collections"}]},{"source":"meteor/templating","imported":["Template"],"specifiers":[{"kind":"named","imported":"Template","local":"Template"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/client/modules/accounts/templates/addressBook/addressBook.js","filenameRelative":"/client/modules/accounts/templates/addressBook/addressBook.js","inputSourceMap":{"version":3,"sources":["/client/modules/accounts/templates/addressBook/addressBook.js"],"names":["Meteor","ReactiveVar","i18next","Collections","Template","addressBook","onCreated","currentViewTemplate","templateData","autorun","subscribe","userId","account","Accounts","findOne","profile","length","set","helpers","data","instance","get","currentView","selectedAddress","events","event","preventDefault","stopPropagation","address","template","call","_id","error","result","Alerts","toast","t","err","message"],"mappings":"AAAA,IAAS;AAAT,OAAuB,WAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;G,AACA,AAAS,AAAmB,AAC5B,AAAS,AAAe,AACxB,AAAO,AAAK,AAAiB,AAC7B,AAAS,AAAgB,AAEzB;AAOA,AAAS,AAAY,AAAU,AAAY,AACzC,AAAK,AAAsB,AAAY,AACvC,AAAK,AAAe,AAAY;;;;;YAEhC,AAAa,YAAM;AACjB;;OAAA,AAAK,AAAU,sBAAf,AAA2B,AAAO,YAAlC,AAA2B,AAE3B;OAAM,AAAU,eAAY,YAAZ,AAAqB,AAAQ,AAC3C,AAAQ,AAAO;AADjB,AAAgB;uCAIhB,AAAI,AAAS,AACX;;QAAI,AAAQ;AACN,cAAQ,OAAZ,AAAI,AAAgB,AAAa,AAC/B,AAAI,AAAQ,AAAQ,AAAY,AAAW,AAAG,AAC5C,AAAK,AAAoB,AAAI,AAC9B;AAHH,KADF,AAAqB;;QAEjB,SAEO,AACL;UAAK,iBAAL,AAAyB,AAAI,AAC9B;yCACF;wDACF;0CACF;iBAjBH,AAkBC;0CAtBH,AAuBC,AAED,A;AACA;AACA;;AAEA;AAAA,AAAS,AAAY,AAAQ,AAC3B;AAAS,AAAY,AACnB,AAAM,AAAU,AAAY,AAAS,AAAQ,CA3B/C,AAAK,GA4BD,AAAQ,AAAO;AADjB,AAAgB,AAA6B;AAFpB,AAKzB,AAAO,AACR;;AAED,AAAM,SAAY;WACT,AAAS,YATS,AASzB,AAAO,AAAoB,AAAa,AACzC;;cAEY,OAZc,AAYF,AACvB,AAAO,AAAS,AAAW,AAAoB,AAChD;AAFD;WAIA;AAAiB,AAAY,AAC3B,AAAO,AAAS,AAAS,AAAa,AACvC;oBAlBH,AAA6B;4CAqB7B;AAAA,AAAS,AAAY,AAAO,AAE1B,AACA;2BACA;mDACA;AAA2C,AAAU,AAAO,AAC1D,AAAM,AACN;AAAM,mBAAN,YAEA;WAAS,SAAT,AAAoB,sBAApB,AAAwC,AAAI,AAC7C;AAVyB,AAY1B,AACA;AAzBE;AA0BF;AAEE,AAAM,AACN;AAAA,AAAM,AAEN;AAAA,AAAS,AAAW,AAAa,AAAI,AACnC;AAAS,8DAD0B;AAArC,UAIA;UAvBwB,AAuBxB,AAAS,AAAW,AAAoB,AAAI,AAC7C,AAED;gDACA;AACA,AACA;AAA2C,AAAU,AAAO,AAAU,AACpE;AAAA,AAAM,AACN;AAAA,AAAM,AAEN;AAAA,AAAO,AAAK,2CAAZ,AAA0C,AAAK,UAA/C,AAAoD,AAAC,OAAD,AAAQ,AAAW,AACrE;UAAA,AAAI,AAAO,AACT;UAAA,AAAO,AAAM,AAAQ,AAAE,AAAyC,AAAE,AAAK,AAAM;AAA7E,AAAa,AAA4E,aAAzF;eAEF,AAAI,AAAQ,AACV;AAFD;aAEO,WAAU,AAAY,oBAAZ,AAAqB,IAArB,AAA6B,AAC3C;AADF,AAAgB,AAA6B,AACnC,AAAO;AAEjB;AAAA,AAAI,AAAS,AACX;AAAA,AAAI,AAAQ,AAAS,AACnB;AAAI,AAAQ,AAAQ,AAAY,6CAA5B,UAAJ,AAA2C,AAAG,iBAC5C;UAAA,AAAS,AAAoB,AAAI,AAClC;UACF,AACF;iFACF;iBAfH,AAgBC;;;YAjDuB,AAkDzB;AAED;;kBAA0E,AAAU,AAAO,AACzF;AAAM;AACA,yBAAN,AAEA,AAAS,AAAW,AAAoB,AAAI,AAC7C;AAHC,SADA;;qBArDJ,AAA4B;;;;;;;;;;;;;;;AAe1B,AAAyC,AAAU,AAAO,AACxD","file":"/client/modules/accounts/templates/addressBook/addressBook.js.map","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport { ReactiveVar } from \"meteor/reactive-var\";\nimport { i18next } from \"/client/api\";\nimport * as Collections from \"/lib/collections\";\nimport { Template } from \"meteor/templating\";\n\n/*\n * Template.checkoutAddressBook\n * template determines which view should be used:\n * addAddress (edit or add)\n * addressBookView (view)\n */\n\nTemplate.addressBook.onCreated(function () {\n  this.currentViewTemplate = ReactiveVar(\"addressBookAdd\");\n  this.templateData = ReactiveVar({});\n\n  this.autorun(() => {\n    this.subscribe(\"Accounts\", Meteor.userId());\n\n    const account = Collections.Accounts.findOne({\n      userId: Meteor.userId()\n    });\n\n    if (account) {\n      if (account.profile) {\n        if (account.profile.addressBook) {\n          if (account.profile.addressBook.length === 0) {\n            this.currentViewTemplate.set(\"addressBookAdd\");\n          } else {\n            this.currentViewTemplate.set(\"addressBookGrid\");\n          }\n        }\n      }\n    }\n  });\n});\n\n// Template.addressBook.onRendered(function () {\n//   let view = this.$(\"[blaze-view=\"addressBook\"]\").get(0);\n// });\n\nTemplate.addressBook.helpers({\n  account: function () {\n    const account = Collections.Accounts.findOne({\n      userId: Meteor.userId()\n    });\n    return account;\n  },\n\n  data: function () {\n    return Template.instance().templateData.get();\n  },\n\n  currentView: function () {\n    return Template.instance().currentViewTemplate.get();\n  },\n\n  selectedAddress: function () {\n    return Template.instance.templateData.get();\n  }\n});\n\nTemplate.addressBook.events({\n\n  // **************************************************************************\n  //\n  //\n  \"click [data-event-action=addNewAddress]\": function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    Template.instance().currentViewTemplate.set(\"addressBookAdd\");\n  },\n\n  // **************************************************************************\n  // Edit an address\n  //\n  \"click [data-event-action=editAddress]\": function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    Template.instance().templateData.set({\n      address: this\n    });\n\n    Template.instance().currentViewTemplate.set(\"addressBookEdit\");\n  },\n\n  // **************************************************************************\n  // Remove the address from the address book\n  //\n  \"click [data-event-action=removeAddress]\": function (event, template) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    Meteor.call(\"accounts/addressBookRemove\", this._id, (error, result) => {\n      if (error) {\n        Alerts.toast(i18next.t(\"addressBookGrid.cantRemoveThisAddress\", { err: error.message }), \"error\");\n      }\n      if (result) {\n        const account = Collections.Accounts.findOne({\n          userId: Meteor.userId()\n        });\n        if (account) {\n          if (account.profile) {\n            if (account.profile.addressBook.length === 0) {\n              template.currentViewTemplate.set(\"addressBookAdd\");\n            }\n          }\n        }\n      }\n    });\n  },\n\n  \"click [data-event-action=cancelAddressEdit], form submit, showMainView\": function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    Template.instance().currentViewTemplate.set(\"addressBookGrid\");\n  }\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/modules/accounts/templates/addressBook/addressBook.js.map","sourceFileName":"/client/modules/accounts/templates/addressBook/addressBook.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"addressBook"},"ignored":false,"code":"var Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar ReactiveVar = void 0;\nmodule.importSync(\"meteor/reactive-var\", {\n  ReactiveVar: function (v) {\n    ReactiveVar = v;\n  }\n}, 1);\nvar i18next = void 0;\nmodule.importSync(\"/client/api\", {\n  i18next: function (v) {\n    i18next = v;\n  }\n}, 2);\nvar Collections = Object.create(null);\nmodule.importSync(\"/lib/collections\", {\n  \"*\": function (v, n) {\n    Collections[n] = v;\n  }\n}, 3);\nvar Template = void 0;\nmodule.importSync(\"meteor/templating\", {\n  Template: function (v) {\n    Template = v;\n  }\n}, 4);\n/*\n * Template.checkoutAddressBook\n * template determines which view should be used:\n * addAddress (edit or add)\n * addressBookView (view)\n */Template.addressBook.onCreated(function () {\n  var _this = this;\n\n  this.currentViewTemplate = ReactiveVar(\"addressBookAdd\");\n  this.templateData = ReactiveVar({});\n  this.autorun(function () {\n    _this.subscribe(\"Accounts\", Meteor.userId());\n\n    var account = Collections.Accounts.findOne({\n      userId: Meteor.userId()\n    });\n\n    if (account) {\n      if (account.profile) {\n        if (account.profile.addressBook) {\n          if (account.profile.addressBook.length === 0) {\n            _this.currentViewTemplate.set(\"addressBookAdd\");\n          } else {\n            _this.currentViewTemplate.set(\"addressBookGrid\");\n          }\n        }\n      }\n    }\n  });\n}); // Template.addressBook.onRendered(function () {\n//   let view = this.$(\"[blaze-view=\"addressBook\"]\").get(0);\n// });\n\nTemplate.addressBook.helpers({\n  account: function () {\n    var account = Collections.Accounts.findOne({\n      userId: Meteor.userId()\n    });\n    return account;\n  },\n  data: function () {\n    return Template.instance().templateData.get();\n  },\n  currentView: function () {\n    return Template.instance().currentViewTemplate.get();\n  },\n  selectedAddress: function () {\n    return Template.instance.templateData.get();\n  }\n});\nTemplate.addressBook.events({\n  // **************************************************************************\n  //\n  //\n  \"click [data-event-action=addNewAddress]\": function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    Template.instance().currentViewTemplate.set(\"addressBookAdd\");\n  },\n  // **************************************************************************\n  // Edit an address\n  //\n  \"click [data-event-action=editAddress]\": function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    Template.instance().templateData.set({\n      address: this\n    });\n    Template.instance().currentViewTemplate.set(\"addressBookEdit\");\n  },\n  // **************************************************************************\n  // Remove the address from the address book\n  //\n  \"click [data-event-action=removeAddress]\": function (event, template) {\n    event.preventDefault();\n    event.stopPropagation();\n    Meteor.call(\"accounts/addressBookRemove\", this._id, function (error, result) {\n      if (error) {\n        Alerts.toast(i18next.t(\"addressBookGrid.cantRemoveThisAddress\", {\n          err: error.message\n        }), \"error\");\n      }\n\n      if (result) {\n        var account = Collections.Accounts.findOne({\n          userId: Meteor.userId()\n        });\n\n        if (account) {\n          if (account.profile) {\n            if (account.profile.addressBook.length === 0) {\n              template.currentViewTemplate.set(\"addressBookAdd\");\n            }\n          }\n        }\n      }\n    });\n  },\n  \"click [data-event-action=cancelAddressEdit], form submit, showMainView\": function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    Template.instance().currentViewTemplate.set(\"addressBookGrid\");\n  }\n});","map":{"version":3,"sources":["/client/modules/accounts/templates/addressBook/addressBook.js"],"names":["Meteor","ReactiveVar","i18next","Collections","Template","addressBook","onCreated","currentViewTemplate","templateData","autorun","subscribe","userId","account","Accounts","findOne","profile","length","set","helpers","data","instance","get","currentView","selectedAddress","events","event","preventDefault","stopPropagation","address","template","call","_id","error","result","Alerts","toast","t","err","message"],"mappings":"AAAA,IAAS;AAAT,OAAuB,WAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;G,AACA,AAAS,AAAmB,AAC5B,AAAS,AAAe,AACxB,AAAO,AAAK,AAAiB,AAC7B,AAAS,AAAgB,AAEzB;AAOA,AAAS,AAAY,AAAU,AAAY,AACzC,AAAK,AAAsB,AAAY,AACvC,AAAK,AAAe,AAAY;;;;;YAEhC,AAAa,YAAM;AACjB;;OAAA,AAAK,AAAU,sBAAf,AAA2B,AAAO,YAAlC,AAA2B,AAE3B;OAAM,AAAU,eAAY,YAAZ,AAAqB,AAAQ,AAC3C,AAAQ,AAAO;AADjB,AAAgB;uCAIhB,AAAI,AAAS,AACX;;QAAI,AAAQ;AACN,cAAQ,OAAZ,AAAI,AAAgB,AAAa,AAC/B,AAAI,AAAQ,AAAQ,AAAY,AAAW,AAAG,AAC5C,AAAK,AAAoB,AAAI,AAC9B;AAHH,KADF,AAAqB;;QAEjB,SAEO,AACL;UAAK,iBAAL,AAAyB,AAAI,AAC9B;yCACF;wDACF;0CACF;iBAjBH,AAkBC;0CAtBH,AAuBC,AAED,A;AACA;AACA;;AAEA;AAAA,AAAS,AAAY,AAAQ,AAC3B;AAAS,AAAY,AACnB,AAAM,AAAU,AAAY,AAAS,AAAQ,CA3B/C,AAAK,GA4BD,AAAQ,AAAO;AADjB,AAAgB,AAA6B;AAFpB,AAKzB,AAAO,AACR;;AAED,AAAM,SAAY;WACT,AAAS,YATS,AASzB,AAAO,AAAoB,AAAa,AACzC;;cAEY,OAZc,AAYF,AACvB,AAAO,AAAS,AAAW,AAAoB,AAChD;AAFD;WAIA;AAAiB,AAAY,AAC3B,AAAO,AAAS,AAAS,AAAa,AACvC;oBAlBH,AAA6B;4CAqB7B;AAAA,AAAS,AAAY,AAAO,AAE1B,AACA;2BACA;mDACA;AAA2C,AAAU,AAAO,AAC1D,AAAM,AACN;AAAM,mBAAN,YAEA;WAAS,SAAT,AAAoB,sBAApB,AAAwC,AAAI,AAC7C;AAVyB,AAY1B,AACA;AAzBE;AA0BF;AAEE,AAAM,AACN;AAAA,AAAM,AAEN;AAAA,AAAS,AAAW,AAAa,AAAI,AACnC;AAAS,8DAD0B;AAArC,UAIA;UAvBwB,AAuBxB,AAAS,AAAW,AAAoB,AAAI,AAC7C,AAED;gDACA;AACA,AACA;AAA2C,AAAU,AAAO,AAAU,AACpE;AAAA,AAAM,AACN;AAAA,AAAM,AAEN;AAAA,AAAO,AAAK,2CAAZ,AAA0C,AAAK,UAA/C,AAAoD,AAAC,OAAD,AAAQ,AAAW,AACrE;UAAA,AAAI,AAAO,AACT;UAAA,AAAO,AAAM,AAAQ,AAAE,AAAyC,AAAE,AAAK,AAAM;AAA7E,AAAa,AAA4E,aAAzF;eAEF,AAAI,AAAQ,AACV;AAFD;aAEO,WAAU,AAAY,oBAAZ,AAAqB,IAArB,AAA6B,AAC3C;AADF,AAAgB,AAA6B,AACnC,AAAO;AAEjB;AAAA,AAAI,AAAS,AACX;AAAA,AAAI,AAAQ,AAAS,AACnB;AAAI,AAAQ,AAAQ,AAAY,6CAA5B,UAAJ,AAA2C,AAAG,iBAC5C;UAAA,AAAS,AAAoB,AAAI,AAClC;UACF,AACF;iFACF;iBAfH,AAgBC;;;YAjDuB,AAkDzB;AAED;;kBAA0E,AAAU,AAAO,AACzF;AAAM;AACA,yBAAN,AAEA,AAAS,AAAW,AAAoB,AAAI,AAC7C;AAHC,SADA;;qBArDJ,AAA4B;;;;;;;;;;;;;;;AAe1B,AAAyC,AAAU,AAAO,AACxD","file":"/client/modules/accounts/templates/addressBook/addressBook.js.map","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport { ReactiveVar } from \"meteor/reactive-var\";\nimport { i18next } from \"/client/api\";\nimport * as Collections from \"/lib/collections\";\nimport { Template } from \"meteor/templating\";\n\n/*\n * Template.checkoutAddressBook\n * template determines which view should be used:\n * addAddress (edit or add)\n * addressBookView (view)\n */\n\nTemplate.addressBook.onCreated(function () {\n  this.currentViewTemplate = ReactiveVar(\"addressBookAdd\");\n  this.templateData = ReactiveVar({});\n\n  this.autorun(() => {\n    this.subscribe(\"Accounts\", Meteor.userId());\n\n    const account = Collections.Accounts.findOne({\n      userId: Meteor.userId()\n    });\n\n    if (account) {\n      if (account.profile) {\n        if (account.profile.addressBook) {\n          if (account.profile.addressBook.length === 0) {\n            this.currentViewTemplate.set(\"addressBookAdd\");\n          } else {\n            this.currentViewTemplate.set(\"addressBookGrid\");\n          }\n        }\n      }\n    }\n  });\n});\n\n// Template.addressBook.onRendered(function () {\n//   let view = this.$(\"[blaze-view=\"addressBook\"]\").get(0);\n// });\n\nTemplate.addressBook.helpers({\n  account: function () {\n    const account = Collections.Accounts.findOne({\n      userId: Meteor.userId()\n    });\n    return account;\n  },\n\n  data: function () {\n    return Template.instance().templateData.get();\n  },\n\n  currentView: function () {\n    return Template.instance().currentViewTemplate.get();\n  },\n\n  selectedAddress: function () {\n    return Template.instance.templateData.get();\n  }\n});\n\nTemplate.addressBook.events({\n\n  // **************************************************************************\n  //\n  //\n  \"click [data-event-action=addNewAddress]\": function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    Template.instance().currentViewTemplate.set(\"addressBookAdd\");\n  },\n\n  // **************************************************************************\n  // Edit an address\n  //\n  \"click [data-event-action=editAddress]\": function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    Template.instance().templateData.set({\n      address: this\n    });\n\n    Template.instance().currentViewTemplate.set(\"addressBookEdit\");\n  },\n\n  // **************************************************************************\n  // Remove the address from the address book\n  //\n  \"click [data-event-action=removeAddress]\": function (event, template) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    Meteor.call(\"accounts/addressBookRemove\", this._id, (error, result) => {\n      if (error) {\n        Alerts.toast(i18next.t(\"addressBookGrid.cantRemoveThisAddress\", { err: error.message }), \"error\");\n      }\n      if (result) {\n        const account = Collections.Accounts.findOne({\n          userId: Meteor.userId()\n        });\n        if (account) {\n          if (account.profile) {\n            if (account.profile.addressBook.length === 0) {\n              template.currentViewTemplate.set(\"addressBookAdd\");\n            }\n          }\n        }\n      }\n    });\n  },\n\n  \"click [data-event-action=cancelAddressEdit], form submit, showMainView\": function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    Template.instance().currentViewTemplate.set(\"addressBookGrid\");\n  }\n});\n"]},"hash":"a3094533a143c42b30f0c258e4d4380e67bf1134"}
