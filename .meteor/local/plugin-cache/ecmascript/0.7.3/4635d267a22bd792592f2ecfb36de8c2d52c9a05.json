{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/aldeed:simple-schema","imported":["SimpleSchema"],"specifiers":[{"kind":"named","imported":"SimpleSchema","local":"SimpleSchema"}]},{"source":"/lib/collections/schemas/helpers","imported":["shopIdAutoValue"],"specifiers":[{"kind":"named","imported":"shopIdAutoValue","local":"shopIdAutoValue"}]}],"exports":{"exported":["Transactions","Discounts"],"specifiers":[{"kind":"local","local":"Transactions","exported":"Transactions"},{"kind":"local","local":"Discounts","exported":"Discounts"}]}}},"options":{"filename":"/imports/plugins/core/discounts/lib/collections/schemas/discounts.js","filenameRelative":"/imports/plugins/core/discounts/lib/collections/schemas/discounts.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/core/discounts/lib/collections/schemas/discounts.js"],"names":["SimpleSchema","shopIdAutoValue","Transactions","cartId","type","String","index","userId","appliedAt","Date","optional","Discounts","autoValue","label","allowedValues","Object","defaultValue","Number","decimal","Boolean"],"mappings":"AAAA,OAAS;AAAT;AAA6B;;;AAA7B;;;;;;;;;;;;;;GACA,A,AAAA,AAAS,AAAuB,AAEhC,AACA,AACA,AAEA,AAGA,AAAO,AAAM,AAAe,AAAI,AAAa,AAC3C,AAAQ,AACN,AAAM,AACN;AAAO;AAHkC;UAKnC,AACN;AAAM,WADA,AAEN,AAAO;AAFT;AAL2C;UAShC,AACT;AAAM,WADG,AAET,AAAU;AAFZ;;AAMF;cAIA,AAAO,AAAM,AAAY,AAAI,AAAa,AACxC,AAAU,AACR,AAAM,AACN,AAAW,AACX,AAAO,AACP,AAAO;A,AAxBJ,AAAqB,AAAiB;AACnC;;AAyBC;UAAA,AACD,AACN;AAAU,eAT4B,AAO/B;WAIT;WAAe,AACb,AAAM,AACN;AALA;;UAOF;cAAkB,AAChB,AAAO,AACP;AAjBsC,AAWzB,AAEH;AAEM,AAEV;UAFU,AAGT,AACP;cAnBsC,AAetB,AAID,AAAC,AAAQ,AAE1B;AAHE;;WAKF;UAAY,AACV;AAAM,WADI,AAEV;AAAU,4BAzB4B,AAuB5B,AAIZ;AALA;AAKgB,AACd;AADc,AACR,AAAC,AACP;;UAEF;cAAe,AACb,AAAM,AACN;AAjCsC,AA2BxB,AAEJ;AAIA;WAjC4B,AA+BzB,AAGN;cAET,AAAsB,AACpB;AANa,AAGb;AAEoB,AACd;UADc,AAEb,AACP;cAHoB,AAGN,AACd;WAxCsC,AAoClB,AAIL,AAAC,AAAU,AAAY,AAAQ,AAEhD;AAJE;AAIY;UAAA,AACN,AACN;WAFY,AAEF,AACV;AAAO,kBA7C+B,AA0C1B;kDAKd,AAAoB,AAClB;AALA;AAKM;UAER;cAAwB,AACtB;AAAM,WADgB,AAEtB,AAAO,AACP;AArDsC,AA+CpB;AAGI,AAGb;UArD6B,AAkDhB,AAIR,AAEhB;AAFE;;UAEsB,AAChB,AACN;WAFsB,AAEf,AACP;aAHsB,AAGb,AACT;AAAU,kBA5D4B,AAwDhB,AAMxB;AANwB,AACtB;;UAK4B,AACtB,AACN;WAF4B,AAErB,AACP;aAjEsC,AA8DV,AAGlB;cAEZ,AAA4B,AAC1B;AAN4B,AAC5B;AAI0B,AACpB;UADoB,AAEnB,AACP;WAtEsC,AAmEZ,AAGhB;cAEZ,AAAsB,AACpB;AAJA;AAGoB,AACd;UADc,AAEb,AACP;WAHoB,AAGN,AACd;cA5EsC,AAwElB,AAIV,AAEZ;AAJE;;UAIqB,AACf,AAAC,AACP;WAFqB,AAEX,AACV;AAAO,kBAjF+B,AA8EjB;cAKvB,AAA0B,AACxB;AANqB,AACrB;AAIwB,AAClB,AAAC;WADiB,AAEd,AACV;AAAO,cAtF+B,AAmFd;WAK1B,AAAuB,AACrB;AAJA;AAGqB,AACf,AAAC;WADc,AAEX,AACV;AAAO,cA3F+B,AAwFjB;WAKvB,AAAmB,AACjB;AAJA;AAGiB,AACX,AAAC;WADU,AAEP,AACV;AAAO,cAHU;WA7Fd,AAAkB,AAAiB;AA+FtC;;;;;;AAxFF","file":"/imports/plugins/core/discounts/lib/collections/schemas/discounts.js.map","sourcesContent":["import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\nimport { shopIdAutoValue } from \"/lib/collections/schemas/helpers\";\n\n// The Discounts Schema validates using multiple schemas\n// be sure to use `{ selector: { discountMethod: \"code\" } }`\n// to indicate which schema to apply in all updates\n\n/*\n* Discounts Tranaction History Schema\n*/\nexport const Transactions = new SimpleSchema({\n  cartId: {\n    type: String,\n    index: 1\n  },\n  userId: {\n    type: String,\n    index: 1\n  },\n  appliedAt: {\n    type: Date,\n    optional: true\n  }\n});\n\n/*\n* Discounts Schema\n*/\n\nexport const Discounts = new SimpleSchema({\n  \"shopId\": {\n    type: String,\n    autoValue: shopIdAutoValue,\n    index: 1,\n    label: \"Discounts shopId\"\n  },\n  \"label\": {\n    type: String,\n    optional: true\n  },\n  \"description\": {\n    type: String,\n    optional: true\n  },\n  \"discountMethod\": {\n    label: \"Discount Method Type\",\n    type: String,\n    index: 1,\n    allowedValues: [\"code\", \"rate\"]\n  },\n  // discount is allowed to be string or number.\n  // it's a formula value (could be shipping code)\n  \"discount\": {\n    type: String,\n    optional: true\n  },\n  \"transactions\": {\n    type: [Transactions],\n    optional: true\n  },\n  \"calculation\": {\n    type: Object,\n    optional: true,\n    label: \"Calculation\"\n  },\n  \"calculation.method\": {\n    type: String,\n    index: 1,\n    defaultValue: \"discount\",\n    allowedValues: [\"credit\", \"discount\", \"sale\", \"shipping\"]\n  },\n  \"conditions\": {\n    type: Object,\n    optional: true,\n    label: \"Conditions\"\n  },\n  \"conditions.order\": {\n    type: Object\n  },\n  \"conditions.order.min\": {\n    type: Number,\n    label: \"Mininum\",\n    decimal: true,\n    defaultValue: 0.00\n  },\n  \"conditions.order.max\": {\n    type: Number,\n    label: \"Maximum\",\n    decimal: true,\n    optional: true\n  },\n  \"conditions.order.startDate\": {\n    type: Date,\n    label: \"Start\",\n    optional: true\n  },\n  \"conditions.order.endDate\": {\n    type: Date,\n    label: \"End\",\n    optional: true\n  },\n  \"conditions.enabled\": {\n    type: Boolean,\n    label: \"Enabled\",\n    defaultValue: true,\n    optional: true\n  },\n  \"conditions.audience\": {\n    type: [String],\n    optional: true,\n    label: \"Audience\"\n  },\n  \"conditions.permissions\": {\n    type: [String],\n    optional: true,\n    label: \"Permissions\"\n  },\n  \"conditions.products\": {\n    type: [String],\n    optional: true,\n    label: \"Products\"\n  },\n  \"conditions.tags\": {\n    type: [String],\n    optional: true,\n    label: \"Tags\"\n  }\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/core/discounts/lib/collections/schemas/discounts.js.map","sourceFileName":"/imports/plugins/core/discounts/lib/collections/schemas/discounts.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"discounts"},"ignored":false,"code":"module.export({\n  Transactions: function () {\n    return Transactions;\n  },\n  Discounts: function () {\n    return Discounts;\n  }\n});\nvar SimpleSchema = void 0;\nmodule.importSync(\"meteor/aldeed:simple-schema\", {\n  SimpleSchema: function (v) {\n    SimpleSchema = v;\n  }\n}, 0);\nvar shopIdAutoValue = void 0;\nmodule.importSync(\"/lib/collections/schemas/helpers\", {\n  shopIdAutoValue: function (v) {\n    shopIdAutoValue = v;\n  }\n}, 1);\nvar Transactions = new SimpleSchema({\n  cartId: {\n    type: String,\n    index: 1\n  },\n  userId: {\n    type: String,\n    index: 1\n  },\n  appliedAt: {\n    type: Date,\n    optional: true\n  }\n});\nvar Discounts = new SimpleSchema({\n  \"shopId\": {\n    type: String,\n    autoValue: shopIdAutoValue,\n    index: 1,\n    label: \"Discounts shopId\"\n  },\n  \"label\": {\n    type: String,\n    optional: true\n  },\n  \"description\": {\n    type: String,\n    optional: true\n  },\n  \"discountMethod\": {\n    label: \"Discount Method Type\",\n    type: String,\n    index: 1,\n    allowedValues: [\"code\", \"rate\"]\n  },\n  // discount is allowed to be string or number.\n  // it's a formula value (could be shipping code)\n  \"discount\": {\n    type: String,\n    optional: true\n  },\n  \"transactions\": {\n    type: [Transactions],\n    optional: true\n  },\n  \"calculation\": {\n    type: Object,\n    optional: true,\n    label: \"Calculation\"\n  },\n  \"calculation.method\": {\n    type: String,\n    index: 1,\n    defaultValue: \"discount\",\n    allowedValues: [\"credit\", \"discount\", \"sale\", \"shipping\"]\n  },\n  \"conditions\": {\n    type: Object,\n    optional: true,\n    label: \"Conditions\"\n  },\n  \"conditions.order\": {\n    type: Object\n  },\n  \"conditions.order.min\": {\n    type: Number,\n    label: \"Mininum\",\n    decimal: true,\n    defaultValue: 0.00\n  },\n  \"conditions.order.max\": {\n    type: Number,\n    label: \"Maximum\",\n    decimal: true,\n    optional: true\n  },\n  \"conditions.order.startDate\": {\n    type: Date,\n    label: \"Start\",\n    optional: true\n  },\n  \"conditions.order.endDate\": {\n    type: Date,\n    label: \"End\",\n    optional: true\n  },\n  \"conditions.enabled\": {\n    type: Boolean,\n    label: \"Enabled\",\n    defaultValue: true,\n    optional: true\n  },\n  \"conditions.audience\": {\n    type: [String],\n    optional: true,\n    label: \"Audience\"\n  },\n  \"conditions.permissions\": {\n    type: [String],\n    optional: true,\n    label: \"Permissions\"\n  },\n  \"conditions.products\": {\n    type: [String],\n    optional: true,\n    label: \"Products\"\n  },\n  \"conditions.tags\": {\n    type: [String],\n    optional: true,\n    label: \"Tags\"\n  }\n});","map":{"version":3,"sources":["/imports/plugins/core/discounts/lib/collections/schemas/discounts.js"],"names":["SimpleSchema","shopIdAutoValue","Transactions","cartId","type","String","index","userId","appliedAt","Date","optional","Discounts","autoValue","label","allowedValues","Object","defaultValue","Number","decimal","Boolean"],"mappings":"AAAA,OAAS;AAAT;AAA6B;;;AAA7B;;;;;;;;;;;;;;GACA,A,AAAA,AAAS,AAAuB,AAEhC,AACA,AACA,AAEA,AAGA,AAAO,AAAM,AAAe,AAAI,AAAa,AAC3C,AAAQ,AACN,AAAM,AACN;AAAO;AAHkC;UAKnC,AACN;AAAM,WADA,AAEN,AAAO;AAFT;AAL2C;UAShC,AACT;AAAM,WADG,AAET,AAAU;AAFZ;;AAMF;cAIA,AAAO,AAAM,AAAY,AAAI,AAAa,AACxC,AAAU,AACR,AAAM,AACN,AAAW,AACX,AAAO,AACP,AAAO;A,AAxBJ,AAAqB,AAAiB;AACnC;;AAyBC;UAAA,AACD,AACN;AAAU,eAT4B,AAO/B;WAIT;WAAe,AACb,AAAM,AACN;AALA;;UAOF;cAAkB,AAChB,AAAO,AACP;AAjBsC,AAWzB,AAEH;AAEM,AAEV;UAFU,AAGT,AACP;cAnBsC,AAetB,AAID,AAAC,AAAQ,AAE1B;AAHE;;WAKF;UAAY,AACV;AAAM,WADI,AAEV;AAAU,4BAzB4B,AAuB5B,AAIZ;AALA;AAKgB,AACd;AADc,AACR,AAAC,AACP;;UAEF;cAAe,AACb,AAAM,AACN;AAjCsC,AA2BxB,AAEJ;AAIA;WAjC4B,AA+BzB,AAGN;cAET,AAAsB,AACpB;AANa,AAGb;AAEoB,AACd;UADc,AAEb,AACP;cAHoB,AAGN,AACd;WAxCsC,AAoClB,AAIL,AAAC,AAAU,AAAY,AAAQ,AAEhD;AAJE;AAIY;UAAA,AACN,AACN;WAFY,AAEF,AACV;AAAO,kBA7C+B,AA0C1B;kDAKd,AAAoB,AAClB;AALA;AAKM;UAER;cAAwB,AACtB;AAAM,WADgB,AAEtB,AAAO,AACP;AArDsC,AA+CpB;AAGI,AAGb;UArD6B,AAkDhB,AAIR,AAEhB;AAFE;;UAEsB,AAChB,AACN;WAFsB,AAEf,AACP;aAHsB,AAGb,AACT;AAAU,kBA5D4B,AAwDhB,AAMxB;AANwB,AACtB;;UAK4B,AACtB,AACN;WAF4B,AAErB,AACP;aAjEsC,AA8DV,AAGlB;cAEZ,AAA4B,AAC1B;AAN4B,AAC5B;AAI0B,AACpB;UADoB,AAEnB,AACP;WAtEsC,AAmEZ,AAGhB;cAEZ,AAAsB,AACpB;AAJA;AAGoB,AACd;UADc,AAEb,AACP;WAHoB,AAGN,AACd;cA5EsC,AAwElB,AAIV,AAEZ;AAJE;;UAIqB,AACf,AAAC,AACP;WAFqB,AAEX,AACV;AAAO,kBAjF+B,AA8EjB;cAKvB,AAA0B,AACxB;AANqB,AACrB;AAIwB,AAClB,AAAC;WADiB,AAEd,AACV;AAAO,cAtF+B,AAmFd;WAK1B,AAAuB,AACrB;AAJA;AAGqB,AACf,AAAC;WADc,AAEX,AACV;AAAO,cA3F+B,AAwFjB;WAKvB,AAAmB,AACjB;AAJA;AAGiB,AACX,AAAC;WADU,AAEP,AACV;AAAO,cAHU;WA7Fd,AAAkB,AAAiB;AA+FtC;;;;;;AAxFF","file":"/imports/plugins/core/discounts/lib/collections/schemas/discounts.js.map","sourcesContent":["import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\nimport { shopIdAutoValue } from \"/lib/collections/schemas/helpers\";\n\n// The Discounts Schema validates using multiple schemas\n// be sure to use `{ selector: { discountMethod: \"code\" } }`\n// to indicate which schema to apply in all updates\n\n/*\n* Discounts Tranaction History Schema\n*/\nexport const Transactions = new SimpleSchema({\n  cartId: {\n    type: String,\n    index: 1\n  },\n  userId: {\n    type: String,\n    index: 1\n  },\n  appliedAt: {\n    type: Date,\n    optional: true\n  }\n});\n\n/*\n* Discounts Schema\n*/\n\nexport const Discounts = new SimpleSchema({\n  \"shopId\": {\n    type: String,\n    autoValue: shopIdAutoValue,\n    index: 1,\n    label: \"Discounts shopId\"\n  },\n  \"label\": {\n    type: String,\n    optional: true\n  },\n  \"description\": {\n    type: String,\n    optional: true\n  },\n  \"discountMethod\": {\n    label: \"Discount Method Type\",\n    type: String,\n    index: 1,\n    allowedValues: [\"code\", \"rate\"]\n  },\n  // discount is allowed to be string or number.\n  // it's a formula value (could be shipping code)\n  \"discount\": {\n    type: String,\n    optional: true\n  },\n  \"transactions\": {\n    type: [Transactions],\n    optional: true\n  },\n  \"calculation\": {\n    type: Object,\n    optional: true,\n    label: \"Calculation\"\n  },\n  \"calculation.method\": {\n    type: String,\n    index: 1,\n    defaultValue: \"discount\",\n    allowedValues: [\"credit\", \"discount\", \"sale\", \"shipping\"]\n  },\n  \"conditions\": {\n    type: Object,\n    optional: true,\n    label: \"Conditions\"\n  },\n  \"conditions.order\": {\n    type: Object\n  },\n  \"conditions.order.min\": {\n    type: Number,\n    label: \"Mininum\",\n    decimal: true,\n    defaultValue: 0.00\n  },\n  \"conditions.order.max\": {\n    type: Number,\n    label: \"Maximum\",\n    decimal: true,\n    optional: true\n  },\n  \"conditions.order.startDate\": {\n    type: Date,\n    label: \"Start\",\n    optional: true\n  },\n  \"conditions.order.endDate\": {\n    type: Date,\n    label: \"End\",\n    optional: true\n  },\n  \"conditions.enabled\": {\n    type: Boolean,\n    label: \"Enabled\",\n    defaultValue: true,\n    optional: true\n  },\n  \"conditions.audience\": {\n    type: [String],\n    optional: true,\n    label: \"Audience\"\n  },\n  \"conditions.permissions\": {\n    type: [String],\n    optional: true,\n    label: \"Permissions\"\n  },\n  \"conditions.products\": {\n    type: [String],\n    optional: true,\n    label: \"Products\"\n  },\n  \"conditions.tags\": {\n    type: [String],\n    optional: true,\n    label: \"Tags\"\n  }\n});\n"]},"hash":"4635d267a22bd792592f2ecfb36de8c2d52c9a05"}
