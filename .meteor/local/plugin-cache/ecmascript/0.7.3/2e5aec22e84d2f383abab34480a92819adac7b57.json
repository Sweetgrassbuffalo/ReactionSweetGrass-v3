{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/templating","imported":["Template"],"specifiers":[{"kind":"named","imported":"Template","local":"Template"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/core/shipping/client/templates/settings/shipping.js","filenameRelative":"/imports/plugins/core/shipping/client/templates/settings/shipping.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/core/shipping/client/templates/settings/shipping.js"],"names":["Template","shippingSettings","onCreated","autorun","subscribe","helpers","checked","enabled","shown","events","event","preventDefault","settingsKey","target","getAttribute","packageId","fields","property","value","Meteor","call"],"mappings":"AAAA,IAAS;AAAT,OAAyB,W,AAAzB,AACA;;;;;AAGA,AAAS,AAAiB,AAAU,AAAY;;YAC9C,AAAa,AAAM;AACjB;;OAAK,QAAL,AAAe,YADjB,AACE,AACD;oBAHH,AAIC;AAED;AAAA,AAAS,AAAiB,AAAQ,AAChC,AAAQ,AAAS,CANjB,AAAK;AAOH,AAAI,SAAJ,AAAgB,iBAAM;qBACb,SAAP,AACD;;aACD;AAL8B,AAK9B,AAAO,AACR;;;AACD;mBAAA,AAAM,SAAS,AACb;QAAI,YAAJ,AAAgB,MAAM,AACpB;aAAA,AAAO,AACR;;;WACD;AAAA,AAAO,AACR;AATG,IAHN,AAAkC,A,AAelC;AACA;;;AACA,AAAS,AAAiB,AAAO,AAC/B;;;;KAKA,0EAAgE,AAAC;UAC/D,AAAM,AACN;QAAM,cAAc,MAAA,AAAM,OAAN,AAAa,aAAjC,AAAoB,AAA0B,AAC9C;QAAM,YAAY,MAAA,AAAM,OAAN,AAAa,aAA/B,AAAkB,AAA0B,AAC5C;QAAM;gBAAU,AACJ,AACV;aAAO,MAAA,AAAM,OAN0D,AAIzE,AAAe,AAAC,AAEM,AAEtB;AAJgB,AACd,KADa,EAJ0D,AACzE,CAQA;;QAAA,AAAI,WAAW,AACb;AACA;aAAA,AAAO,KAAP,AAAY,mBAAZ,AAA+B,WAA/B,AAA0C,aAF7B,AAEb,AAAuD,AACvD,SACA;;aAAA,AAAO,KAAP,AAAY,4BAAZ,AAAwC,WAAxC,AAAmD,AACpD;AACF;AArBH,AAAiC;AAAjC","file":"/imports/plugins/core/shipping/client/templates/settings/shipping.js.map","sourcesContent":["import { Template } from \"meteor/templating\";\n/*\n * Template shippinges Helpers\n */\nTemplate.shippingSettings.onCreated(function () {\n  this.autorun(() => {\n    this.subscribe(\"Shipping\");\n  });\n});\n\nTemplate.shippingSettings.helpers({\n  checked(enabled) {\n    if (enabled === true) {\n      return \"checked\";\n    }\n    return \"\";\n  },\n  shown(enabled) {\n    if (enabled !== true) {\n      return \"hidden\";\n    }\n    return \"\";\n  }\n});\n\n// toggle shipping methods visibility\n// also toggles shipping method settings\nTemplate.shippingSettings.events({\n  /**\n   * shippingSettings settings update enabled status for shipping service on change\n   * @param  {event} event    jQuery Event\n   * @return {void}\n   */\n  \"change input.checkbox-switch.shipping-settings[name=enabled]\": (event) => {\n    event.preventDefault();\n    const settingsKey = event.target.getAttribute(\"data-key\");\n    const packageId = event.target.getAttribute(\"data-id\");\n    const fields = [{\n      property: \"enabled\",\n      value: event.target.checked\n    }];\n    // save shipping registry updates\n    if (packageId) {\n      // update package registry\n      Meteor.call(\"registry/update\", packageId, settingsKey, fields);\n      // also update shipping provider status\n      Meteor.call(\"shipping/provider/toggle\", packageId, settingsKey);\n    }\n  }\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/core/shipping/client/templates/settings/shipping.js.map","sourceFileName":"/imports/plugins/core/shipping/client/templates/settings/shipping.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"shipping"},"ignored":false,"code":"var Template = void 0;\nmodule.importSync(\"meteor/templating\", {\n  Template: function (v) {\n    Template = v;\n  }\n}, 0);\n/*\n * Template shippinges Helpers\n */Template.shippingSettings.onCreated(function () {\n  var _this = this;\n\n  this.autorun(function () {\n    _this.subscribe(\"Shipping\");\n  });\n});\nTemplate.shippingSettings.helpers({\n  checked: function (enabled) {\n    if (enabled === true) {\n      return \"checked\";\n    }\n\n    return \"\";\n  },\n  shown: function (enabled) {\n    if (enabled !== true) {\n      return \"hidden\";\n    }\n\n    return \"\";\n  }\n}); // toggle shipping methods visibility\n// also toggles shipping method settings\n\nTemplate.shippingSettings.events({\n  /**\n   * shippingSettings settings update enabled status for shipping service on change\n   * @param  {event} event    jQuery Event\n   * @return {void}\n   */\"change input.checkbox-switch.shipping-settings[name=enabled]\": function (event) {\n    event.preventDefault();\n    var settingsKey = event.target.getAttribute(\"data-key\");\n    var packageId = event.target.getAttribute(\"data-id\");\n    var fields = [{\n      property: \"enabled\",\n      value: event.target.checked\n    }]; // save shipping registry updates\n\n    if (packageId) {\n      // update package registry\n      Meteor.call(\"registry/update\", packageId, settingsKey, fields); // also update shipping provider status\n\n      Meteor.call(\"shipping/provider/toggle\", packageId, settingsKey);\n    }\n  }\n});","map":{"version":3,"sources":["/imports/plugins/core/shipping/client/templates/settings/shipping.js"],"names":["Template","shippingSettings","onCreated","autorun","subscribe","helpers","checked","enabled","shown","events","event","preventDefault","settingsKey","target","getAttribute","packageId","fields","property","value","Meteor","call"],"mappings":"AAAA,IAAS;AAAT,OAAyB,W,AAAzB,AACA;;;;;AAGA,AAAS,AAAiB,AAAU,AAAY;;YAC9C,AAAa,AAAM;AACjB;;OAAK,QAAL,AAAe,YADjB,AACE,AACD;oBAHH,AAIC;AAED;AAAA,AAAS,AAAiB,AAAQ,AAChC,AAAQ,AAAS,CANjB,AAAK;AAOH,AAAI,SAAJ,AAAgB,iBAAM;qBACb,SAAP,AACD;;aACD;AAL8B,AAK9B,AAAO,AACR;;;AACD;mBAAA,AAAM,SAAS,AACb;QAAI,YAAJ,AAAgB,MAAM,AACpB;aAAA,AAAO,AACR;;;WACD;AAAA,AAAO,AACR;AATG,IAHN,AAAkC,A,AAelC;AACA;;;AACA,AAAS,AAAiB,AAAO,AAC/B;;;;KAKA,0EAAgE,AAAC;UAC/D,AAAM,AACN;QAAM,cAAc,MAAA,AAAM,OAAN,AAAa,aAAjC,AAAoB,AAA0B,AAC9C;QAAM,YAAY,MAAA,AAAM,OAAN,AAAa,aAA/B,AAAkB,AAA0B,AAC5C;QAAM;gBAAU,AACJ,AACV;aAAO,MAAA,AAAM,OAN0D,AAIzE,AAAe,AAAC,AAEM,AAEtB;AAJgB,AACd,KADa,EAJ0D,AACzE,CAQA;;QAAA,AAAI,WAAW,AACb;AACA;aAAA,AAAO,KAAP,AAAY,mBAAZ,AAA+B,WAA/B,AAA0C,aAF7B,AAEb,AAAuD,AACvD,SACA;;aAAA,AAAO,KAAP,AAAY,4BAAZ,AAAwC,WAAxC,AAAmD,AACpD;AACF;AArBH,AAAiC;AAAjC","file":"/imports/plugins/core/shipping/client/templates/settings/shipping.js.map","sourcesContent":["import { Template } from \"meteor/templating\";\n/*\n * Template shippinges Helpers\n */\nTemplate.shippingSettings.onCreated(function () {\n  this.autorun(() => {\n    this.subscribe(\"Shipping\");\n  });\n});\n\nTemplate.shippingSettings.helpers({\n  checked(enabled) {\n    if (enabled === true) {\n      return \"checked\";\n    }\n    return \"\";\n  },\n  shown(enabled) {\n    if (enabled !== true) {\n      return \"hidden\";\n    }\n    return \"\";\n  }\n});\n\n// toggle shipping methods visibility\n// also toggles shipping method settings\nTemplate.shippingSettings.events({\n  /**\n   * shippingSettings settings update enabled status for shipping service on change\n   * @param  {event} event    jQuery Event\n   * @return {void}\n   */\n  \"change input.checkbox-switch.shipping-settings[name=enabled]\": (event) => {\n    event.preventDefault();\n    const settingsKey = event.target.getAttribute(\"data-key\");\n    const packageId = event.target.getAttribute(\"data-id\");\n    const fields = [{\n      property: \"enabled\",\n      value: event.target.checked\n    }];\n    // save shipping registry updates\n    if (packageId) {\n      // update package registry\n      Meteor.call(\"registry/update\", packageId, settingsKey, fields);\n      // also update shipping provider status\n      Meteor.call(\"shipping/provider/toggle\", packageId, settingsKey);\n    }\n  }\n});\n"]},"hash":"2e5aec22e84d2f383abab34480a92819adac7b57"}
