{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","createClass","classCallCheck","extends","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component","PropTypes"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"},{"kind":"named","imported":"PropTypes","local":"PropTypes"}]},{"source":"classnames","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"classnames"}]},{"source":"react-autosuggest","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Autosuggest"}]},{"source":"velocity-animate","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Velocity"}]},{"source":"velocity-animate/velocity.ui","imported":[],"specifiers":[]},{"source":"/client/api","imported":["Router"],"specifiers":[{"kind":"named","imported":"Router","local":"Router"}]},{"source":"/client/api","imported":["i18next"],"specifiers":[{"kind":"named","imported":"i18next","local":"i18next"}]},{"source":"/imports/plugins/core/ui/client/components","imported":["Button","Handle"],"specifiers":[{"kind":"named","imported":"Button","local":"Button"},{"kind":"named","imported":"Handle","local":"Handle"}]},{"source":"../../containers","imported":["SortableItem"],"specifiers":[{"kind":"named","imported":"SortableItem","local":"SortableItem"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/core/ui/client/components/tags/tag.jsx","filenameRelative":"/imports/plugins/core/ui/client/components/tags/tag.jsx","inputSourceMap":{"version":3,"sources":["/imports/plugins/core/ui/client/components/tags/tag.jsx"],"names":["React","Component","PropTypes","classnames","Autosuggest","Velocity","Router","i18next","Button","Handle","SortableItem","Tag","displayName","componentWillReceiveProps","nextProps","_updated","_saved","refs","autoSuggestInput","input","RunSequence","e","p","backgroundColor","o","duration","tag","name","props","inputPlaceholder","t","i18nKeyInputPlaceholder","defaultValue","getSuggestionValue","suggestion","label","saveTag","event","onTagSave","handleTagFormSubmit","preventDefault","handleTagRemove","onTagRemove","handleTagUpdate","onTagUpdate","keyCode","_id","target","value","handleTagKeyDown","handleTagMouseOut","onTagMouseOut","handleTagMouseOver","onTagMouseOver","handleTagInputBlur","onTagInputBlur","handleInputChange","newValue","updatedTag","Object","assign","handleSuggestionsUpdateRequested","onGetSuggestions","handleSuggestionsClearRequested","onClearSuggestions","renderTag","url","pathFor","hash","slug","baseClassName","fullWidth","renderEditableTag","connectDropTarget","connectDragSource","renderAutosuggestInput","renderBlankEditableTag","renderSuggestion","placeholder","onKeyDown","onBlur","onChange","suggestions","render","editable","blank","propTypes","bool","func","string","index","number","parentTag","object","arrayOf"],"mappings":"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","file":"/imports/plugins/core/ui/client/components/tags/tag.jsx.map","sourcesContent":["import React, { Component, PropTypes } from \"react\";\nimport classnames from \"classnames\";\nimport Autosuggest from \"react-autosuggest\";\nimport Velocity from \"velocity-animate\";\nimport \"velocity-animate/velocity.ui\";\nimport { Router } from \"/client/api\";\nimport { i18next } from \"/client/api\";\nimport { Button, Handle } from \"/imports/plugins/core/ui/client/components\";\nimport { SortableItem } from \"../../containers\";\n\n\nclass Tag extends Component {\n  displayName: \"Tag\";\n\n  componentWillReceiveProps(nextProps) {\n    if (this._updated && this._saved && this.refs.autoSuggestInput) {\n      const input = this.refs.autoSuggestInput.input;\n\n      Velocity.RunSequence([\n        { e: input, p: { backgroundColor: \"#e2f2e2\" }, o: { duration: 200 } },\n        { e: input, p: { backgroundColor: \"#fff\" }, o: { duration: 100 } }\n      ]);\n\n      this._updated = false;\n    }\n\n    if ((nextProps.tag.name !== this.props.tag.name)) {\n      this._updated = true;\n    }\n  }\n\n  get tag() {\n    return this.props.tag || {\n      name: \"\"\n    };\n  }\n\n  get inputPlaceholder() {\n    return i18next.t(this.props.i18nKeyInputPlaceholder || \"tags.tagName\", {\n      defaultValue: this.props.inputPlaceholder || \"Tag Name\"\n    });\n  }\n\n  getSuggestionValue(suggestion) {\n    return suggestion.label;\n  }\n\n  saveTag(event) {\n    if (this.props.onTagSave) {\n      this.props.onTagSave(event, this.props.tag);\n    }\n  }\n\n  /**\n   * Handle tag form submit events and pass them up the component chain\n   * @param  {Event} event Event object\n   * @return {void} no return value\n   */\n  handleTagFormSubmit = (event) => {\n    event.preventDefault();\n    this._saved = true;\n    this.saveTag(event);\n  };\n\n  /**\n   * Handle tag remove events and pass them up the component chain\n   * @param  {Event} event Event object\n   * @return {void} no return value\n   */\n  handleTagRemove = () => {\n    if (this.props.onTagRemove) {\n      this.props.onTagRemove(this.props.tag);\n    }\n  };\n\n  /**\n   * Handle tag update events and pass them up the component chain\n   * @param  {Event} event Event object\n   * @return {void} no return value\n   */\n  handleTagUpdate = (event) => {\n    if (this.props.onTagUpdate && event.keyCode === 13) {\n      this._saved = true;\n      this.props.onTagUpdate(this.props.tag._id, event.target.value);\n    }\n  };\n\n  handleTagKeyDown = (event) => {\n    if (event.keyCode === 13) {\n      this._saved = true;\n      this.saveTag(event);\n    }\n  }\n\n  /**\n   * Handle tag mouse out events and pass them up the component chain\n   * @param  {Event} event Event object\n   * @return {void} no return value\n   */\n  handleTagMouseOut = (event) => {\n    // event.preventDefault();\n    if (this.props.onTagMouseOut) {\n      this.props.onTagMouseOut(event, this.props.tag);\n    }\n  };\n\n  /**\n   * Handle tag mouse over events and pass them up the component chain\n   * @param  {Event} event Event object\n   * @return {void} no return value\n   */\n  handleTagMouseOver = (event) => {\n    if (this.props.onTagMouseOver) {\n      this.props.onTagMouseOver(event, this.props.tag);\n    }\n  };\n\n  /**\n   * Handle tag inout blur events and pass them up the component chain\n   * @param  {Event} event Event object\n   * @return {void} no return value\n   */\n  handleTagInputBlur = (event) => {\n    if (this.props.onTagInputBlur) {\n      this._saved = true;\n      this.props.onTagInputBlur(event, this.props.tag);\n    }\n  };\n\n  handleInputChange = (event, { newValue }) => {\n    if (this.props.onTagUpdate) {\n      const updatedTag = Object.assign({}, { ...this.props.tag }, {\n        name: newValue\n      });\n      this.props.onTagUpdate(event, updatedTag);\n    }\n  }\n\n  handleSuggestionsUpdateRequested = (suggestion) => {\n    if (this.props.onGetSuggestions) {\n      this.props.onGetSuggestions(suggestion);\n    }\n  }\n\n  handleSuggestionsClearRequested = () => {\n    if (this.props.onClearSuggestions) {\n      this.props.onClearSuggestions();\n    }\n  }\n\n  /**\n   * Render a simple tag for display purposes only\n   * @return {JSX} simple tag\n   */\n  renderTag() {\n    const url = Router.pathFor(\"tag\", {\n      hash: {\n        slug: this.props.tag.slug\n      }\n    });\n\n    const baseClassName = classnames({\n      \"rui\": true,\n      \"tag\": true,\n      \"link\": true,\n      \"full-width\": this.props.fullWidth\n    });\n\n    return (\n      <a\n        className={baseClassName}\n        href={url}\n        onMouseOut={this.handleTagMouseOut}\n        onMouseOver={this.handleTagMouseOver}\n      >\n        {this.props.tag.name}\n      </a>\n    );\n  }\n\n  /**\n   * Render an admin editable tag\n   * @return {JSX} editable tag\n   */\n  renderEditableTag() {\n    const baseClassName = classnames({\n      \"rui\": true,\n      \"tag\": true,\n      \"edit\": true,\n      \"full-width\": this.props.fullWidth\n    });\n\n    return (\n      this.props.connectDropTarget(\n        <div\n          className={baseClassName}\n          data-id={this.props.tag._id}\n        >\n          <form onSubmit={this.handleTagFormSubmit}>\n            <Handle connectDragSource={this.props.connectDragSource} />\n            {this.renderAutosuggestInput()}\n            <Button icon=\"times-circle\" onClick={this.handleTagRemove} status=\"danger\" />\n          </form>\n        </div>\n      )\n    );\n  }\n\n  /**\n   * Render a tag creation form\n   * @return {JSX} blank tag for creating new tags\n   */\n  renderBlankEditableTag() {\n    const baseClassName = classnames({\n      \"rui\": true,\n      \"tag\": true,\n      \"edit\": true,\n      \"create\": true,\n      \"full-width\": this.props.fullWidth\n    });\n\n    return (\n      <div className={baseClassName}>\n        <form onSubmit={this.handleTagFormSubmit}>\n          <Button icon=\"tag\" />\n          {this.renderAutosuggestInput()}\n          <Button icon=\"plus\" />\n        </form>\n      </div>\n    );\n  }\n\n  renderSuggestion(suggestion) {\n    return (\n      <span>{suggestion.label}</span>\n    );\n  }\n\n  renderAutosuggestInput() {\n    return (\n      <Autosuggest\n        getSuggestionValue={this.getSuggestionValue}\n        inputProps={{\n          placeholder: this.inputPlaceholder,\n          value: this.props.tag.name,\n          onKeyDown(event) {\n            // 9 == Tab key\n            // 13 == Enter Key\n            if (event.keyCode === 9 || event.keyCode === 13) {\n              // this.handleUpdate\n              // options.onUpdateCallback && options.onUpdateCallback();\n            }\n          },\n          onBlur: this.handleTagInputBlur,\n          onChange: this.handleInputChange\n        }}\n        onSuggestionsClearRequested={this.handleSuggestionsClearRequested}\n        onSuggestionsFetchRequested={this.handleSuggestionsUpdateRequested}\n        ref=\"autoSuggestInput\"\n        renderSuggestion={this.renderSuggestion}\n        suggestions={this.props.suggestions}\n      />\n    );\n  }\n\n  /**\n   * Render component\n   * @return {JSX} tag component\n   */\n  render() {\n    if (this.props.editable) {\n      return this.renderEditableTag();\n    } else if (this.props.blank) {\n      return this.renderBlankEditableTag();\n    }\n\n    return this.renderTag();\n  }\n}\n\nTag.propTypes = {\n  blank: PropTypes.bool,\n  connectDragSource: PropTypes.func,\n  connectDropTarget: PropTypes.func,\n  editable: PropTypes.bool,\n  fullWidth: PropTypes.bool,\n  i18nKeyInputPlaceholder: PropTypes.string,\n  index: PropTypes.number,\n  inputPlaceholder: PropTypes.string,\n  onClearSuggestions: PropTypes.func,\n  onGetSuggestions: PropTypes.func,\n  onTagInputBlur: PropTypes.func,\n  onTagMouseOut: PropTypes.func,\n  onTagMouseOver: PropTypes.func,\n  onTagRemove: PropTypes.func,\n  onTagSave: PropTypes.func,\n  onTagUpdate: PropTypes.func,\n  parentTag: PropTypes.object,\n  suggestions: PropTypes.arrayOf(PropTypes.object),\n  tag: PropTypes.object\n};\n\nexport default SortableItem(\"tag\", Tag);\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/core/ui/client/components/tags/tag.jsx.map","sourceFileName":"/imports/plugins/core/ui/client/components/tags/tag.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"tag"},"ignored":false,"code":"var _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0,\n    Component = void 0,\n    PropTypes = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  },\n  PropTypes: function (v) {\n    PropTypes = v;\n  }\n}, 0);\nvar classnames = void 0;\nmodule.importSync(\"classnames\", {\n  \"default\": function (v) {\n    classnames = v;\n  }\n}, 1);\nvar Autosuggest = void 0;\nmodule.importSync(\"react-autosuggest\", {\n  \"default\": function (v) {\n    Autosuggest = v;\n  }\n}, 2);\nvar Velocity = void 0;\nmodule.importSync(\"velocity-animate\", {\n  \"default\": function (v) {\n    Velocity = v;\n  }\n}, 3);\nmodule.importSync(\"velocity-animate/velocity.ui\");\nvar Router = void 0;\nmodule.importSync(\"/client/api\", {\n  Router: function (v) {\n    Router = v;\n  }\n}, 5);\nvar i18next = void 0;\nmodule.importSync(\"/client/api\", {\n  i18next: function (v) {\n    i18next = v;\n  }\n}, 6);\nvar Button = void 0,\n    Handle = void 0;\nmodule.importSync(\"/imports/plugins/core/ui/client/components\", {\n  Button: function (v) {\n    Button = v;\n  },\n  Handle: function (v) {\n    Handle = v;\n  }\n}, 7);\nvar SortableItem = void 0;\nmodule.importSync(\"../../containers\", {\n  SortableItem: function (v) {\n    SortableItem = v;\n  }\n}, 8);\n\nvar Tag = function (_Component) {\n  (0, _inherits3.default)(Tag, _Component);\n\n  function Tag() {\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, Tag);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.handleTagFormSubmit = function (event) {\n      event.preventDefault();\n      _this._saved = true;\n\n      _this.saveTag(event);\n    }, _this.handleTagRemove = function () {\n      if (_this.props.onTagRemove) {\n        _this.props.onTagRemove(_this.props.tag);\n      }\n    }, _this.handleTagUpdate = function (event) {\n      if (_this.props.onTagUpdate && event.keyCode === 13) {\n        _this._saved = true;\n\n        _this.props.onTagUpdate(_this.props.tag._id, event.target.value);\n      }\n    }, _this.handleTagKeyDown = function (event) {\n      if (event.keyCode === 13) {\n        _this._saved = true;\n\n        _this.saveTag(event);\n      }\n    }, _this.handleTagMouseOut = function (event) {\n      // event.preventDefault();\n      if (_this.props.onTagMouseOut) {\n        _this.props.onTagMouseOut(event, _this.props.tag);\n      }\n    }, _this.handleTagMouseOver = function (event) {\n      if (_this.props.onTagMouseOver) {\n        _this.props.onTagMouseOver(event, _this.props.tag);\n      }\n    }, _this.handleTagInputBlur = function (event) {\n      if (_this.props.onTagInputBlur) {\n        _this._saved = true;\n\n        _this.props.onTagInputBlur(event, _this.props.tag);\n      }\n    }, _this.handleInputChange = function (event, _ref) {\n      var newValue = _ref.newValue;\n\n      if (_this.props.onTagUpdate) {\n        var updatedTag = Object.assign({}, (0, _extends3.default)({}, _this.props.tag), {\n          name: newValue\n        });\n\n        _this.props.onTagUpdate(event, updatedTag);\n      }\n    }, _this.handleSuggestionsUpdateRequested = function (suggestion) {\n      if (_this.props.onGetSuggestions) {\n        _this.props.onGetSuggestions(suggestion);\n      }\n    }, _this.handleSuggestionsClearRequested = function () {\n      if (_this.props.onClearSuggestions) {\n        _this.props.onClearSuggestions();\n      }\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  Tag.prototype.componentWillReceiveProps = function () {\n    function componentWillReceiveProps(nextProps) {\n      if (this._updated && this._saved && this.refs.autoSuggestInput) {\n        var input = this.refs.autoSuggestInput.input;\n        Velocity.RunSequence([{\n          e: input,\n          p: {\n            backgroundColor: \"#e2f2e2\"\n          },\n          o: {\n            duration: 200\n          }\n        }, {\n          e: input,\n          p: {\n            backgroundColor: \"#fff\"\n          },\n          o: {\n            duration: 100\n          }\n        }]);\n        this._updated = false;\n      }\n\n      if (nextProps.tag.name !== this.props.tag.name) {\n        this._updated = true;\n      }\n    }\n\n    return componentWillReceiveProps;\n  }();\n\n  Tag.prototype.getSuggestionValue = function () {\n    function getSuggestionValue(suggestion) {\n      return suggestion.label;\n    }\n\n    return getSuggestionValue;\n  }();\n\n  Tag.prototype.saveTag = function () {\n    function saveTag(event) {\n      if (this.props.onTagSave) {\n        this.props.onTagSave(event, this.props.tag);\n      }\n    }\n\n    return saveTag;\n  }(); /**\n        * Handle tag form submit events and pass them up the component chain\n        * @param  {Event} event Event object\n        * @return {void} no return value\n        */ /**\n            * Handle tag remove events and pass them up the component chain\n            * @param  {Event} event Event object\n            * @return {void} no return value\n            */ /**\n                * Handle tag update events and pass them up the component chain\n                * @param  {Event} event Event object\n                * @return {void} no return value\n                */ /**\n                    * Handle tag mouse out events and pass them up the component chain\n                    * @param  {Event} event Event object\n                    * @return {void} no return value\n                    */ /**\n                        * Handle tag mouse over events and pass them up the component chain\n                        * @param  {Event} event Event object\n                        * @return {void} no return value\n                        */ /**\n                            * Handle tag inout blur events and pass them up the component chain\n                            * @param  {Event} event Event object\n                            * @return {void} no return value\n                            */\n\n  /**\n   * Render a simple tag for display purposes only\n   * @return {JSX} simple tag\n   */Tag.prototype.renderTag = function () {\n    function renderTag() {\n      var url = Router.pathFor(\"tag\", {\n        hash: {\n          slug: this.props.tag.slug\n        }\n      });\n      var baseClassName = classnames({\n        \"rui\": true,\n        \"tag\": true,\n        \"link\": true,\n        \"full-width\": this.props.fullWidth\n      });\n      return React.createElement(\n        \"a\",\n        {\n          className: baseClassName,\n          href: url,\n          onMouseOut: this.handleTagMouseOut,\n          onMouseOver: this.handleTagMouseOver\n        },\n        this.props.tag.name\n      );\n    }\n\n    return renderTag;\n  }(); /**\n        * Render an admin editable tag\n        * @return {JSX} editable tag\n        */\n\n  Tag.prototype.renderEditableTag = function () {\n    function renderEditableTag() {\n      var baseClassName = classnames({\n        \"rui\": true,\n        \"tag\": true,\n        \"edit\": true,\n        \"full-width\": this.props.fullWidth\n      });\n      return this.props.connectDropTarget(React.createElement(\n        \"div\",\n        {\n          className: baseClassName,\n          \"data-id\": this.props.tag._id\n        },\n        React.createElement(\n          \"form\",\n          {\n            onSubmit: this.handleTagFormSubmit\n          },\n          React.createElement(Handle, {\n            connectDragSource: this.props.connectDragSource\n          }),\n          this.renderAutosuggestInput(),\n          React.createElement(Button, {\n            icon: \"times-circle\",\n            onClick: this.handleTagRemove,\n            status: \"danger\"\n          })\n        )\n      ));\n    }\n\n    return renderEditableTag;\n  }(); /**\n        * Render a tag creation form\n        * @return {JSX} blank tag for creating new tags\n        */\n\n  Tag.prototype.renderBlankEditableTag = function () {\n    function renderBlankEditableTag() {\n      var baseClassName = classnames({\n        \"rui\": true,\n        \"tag\": true,\n        \"edit\": true,\n        \"create\": true,\n        \"full-width\": this.props.fullWidth\n      });\n      return React.createElement(\n        \"div\",\n        {\n          className: baseClassName\n        },\n        React.createElement(\n          \"form\",\n          {\n            onSubmit: this.handleTagFormSubmit\n          },\n          React.createElement(Button, {\n            icon: \"tag\"\n          }),\n          this.renderAutosuggestInput(),\n          React.createElement(Button, {\n            icon: \"plus\"\n          })\n        )\n      );\n    }\n\n    return renderBlankEditableTag;\n  }();\n\n  Tag.prototype.renderSuggestion = function () {\n    function renderSuggestion(suggestion) {\n      return React.createElement(\n        \"span\",\n        null,\n        suggestion.label\n      );\n    }\n\n    return renderSuggestion;\n  }();\n\n  Tag.prototype.renderAutosuggestInput = function () {\n    function renderAutosuggestInput() {\n      return React.createElement(Autosuggest, {\n        getSuggestionValue: this.getSuggestionValue,\n        inputProps: {\n          placeholder: this.inputPlaceholder,\n          value: this.props.tag.name,\n          onKeyDown: function (event) {\n            // 9 == Tab key\n            // 13 == Enter Key\n            if (event.keyCode === 9 || event.keyCode === 13) {// this.handleUpdate\n              // options.onUpdateCallback && options.onUpdateCallback();\n            }\n          },\n          onBlur: this.handleTagInputBlur,\n          onChange: this.handleInputChange\n        },\n        onSuggestionsClearRequested: this.handleSuggestionsClearRequested,\n        onSuggestionsFetchRequested: this.handleSuggestionsUpdateRequested,\n        ref: \"autoSuggestInput\",\n        renderSuggestion: this.renderSuggestion,\n        suggestions: this.props.suggestions\n      });\n    }\n\n    return renderAutosuggestInput;\n  }(); /**\n        * Render component\n        * @return {JSX} tag component\n        */\n\n  Tag.prototype.render = function () {\n    function render() {\n      if (this.props.editable) {\n        return this.renderEditableTag();\n      } else if (this.props.blank) {\n        return this.renderBlankEditableTag();\n      }\n\n      return this.renderTag();\n    }\n\n    return render;\n  }();\n\n  (0, _createClass3.default)(Tag, [{\n    key: \"tag\",\n    get: function () {\n      return this.props.tag || {\n        name: \"\"\n      };\n    }\n  }, {\n    key: \"inputPlaceholder\",\n    get: function () {\n      return i18next.t(this.props.i18nKeyInputPlaceholder || \"tags.tagName\", {\n        defaultValue: this.props.inputPlaceholder || \"Tag Name\"\n      });\n    }\n  }]);\n  return Tag;\n}(Component);\n\nTag.propTypes = {\n  blank: PropTypes.bool,\n  connectDragSource: PropTypes.func,\n  connectDropTarget: PropTypes.func,\n  editable: PropTypes.bool,\n  fullWidth: PropTypes.bool,\n  i18nKeyInputPlaceholder: PropTypes.string,\n  index: PropTypes.number,\n  inputPlaceholder: PropTypes.string,\n  onClearSuggestions: PropTypes.func,\n  onGetSuggestions: PropTypes.func,\n  onTagInputBlur: PropTypes.func,\n  onTagMouseOut: PropTypes.func,\n  onTagMouseOver: PropTypes.func,\n  onTagRemove: PropTypes.func,\n  onTagSave: PropTypes.func,\n  onTagUpdate: PropTypes.func,\n  parentTag: PropTypes.object,\n  suggestions: PropTypes.arrayOf(PropTypes.object),\n  tag: PropTypes.object\n};\nmodule.export(\"default\", exports.default = SortableItem(\"tag\", Tag));","map":{"version":3,"sources":["/imports/plugins/core/ui/client/components/tags/tag.jsx"],"names":["React","Component","PropTypes","classnames","Autosuggest","Velocity","Router","i18next","Button","Handle","SortableItem","Tag","displayName","componentWillReceiveProps","nextProps","_updated","_saved","refs","autoSuggestInput","input","RunSequence","e","p","backgroundColor","o","duration","tag","name","props","inputPlaceholder","t","i18nKeyInputPlaceholder","defaultValue","getSuggestionValue","suggestion","label","saveTag","event","onTagSave","handleTagFormSubmit","preventDefault","handleTagRemove","onTagRemove","handleTagUpdate","onTagUpdate","keyCode","_id","target","value","handleTagKeyDown","handleTagMouseOut","onTagMouseOut","handleTagMouseOver","onTagMouseOver","handleTagInputBlur","onTagInputBlur","handleInputChange","newValue","updatedTag","Object","assign","handleSuggestionsUpdateRequested","onGetSuggestions","handleSuggestionsClearRequested","onClearSuggestions","renderTag","url","pathFor","hash","slug","baseClassName","fullWidth","renderEditableTag","connectDropTarget","connectDragSource","renderAutosuggestInput","renderBlankEditableTag","renderSuggestion","placeholder","onKeyDown","onBlur","onChange","suggestions","render","editable","blank","propTypes","bool","func","string","index","number","parentTag","object","arrayOf"],"mappings":"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","file":"/imports/plugins/core/ui/client/components/tags/tag.jsx.map","sourcesContent":["import React, { Component, PropTypes } from \"react\";\nimport classnames from \"classnames\";\nimport Autosuggest from \"react-autosuggest\";\nimport Velocity from \"velocity-animate\";\nimport \"velocity-animate/velocity.ui\";\nimport { Router } from \"/client/api\";\nimport { i18next } from \"/client/api\";\nimport { Button, Handle } from \"/imports/plugins/core/ui/client/components\";\nimport { SortableItem } from \"../../containers\";\n\n\nclass Tag extends Component {\n  displayName: \"Tag\";\n\n  componentWillReceiveProps(nextProps) {\n    if (this._updated && this._saved && this.refs.autoSuggestInput) {\n      const input = this.refs.autoSuggestInput.input;\n\n      Velocity.RunSequence([\n        { e: input, p: { backgroundColor: \"#e2f2e2\" }, o: { duration: 200 } },\n        { e: input, p: { backgroundColor: \"#fff\" }, o: { duration: 100 } }\n      ]);\n\n      this._updated = false;\n    }\n\n    if ((nextProps.tag.name !== this.props.tag.name)) {\n      this._updated = true;\n    }\n  }\n\n  get tag() {\n    return this.props.tag || {\n      name: \"\"\n    };\n  }\n\n  get inputPlaceholder() {\n    return i18next.t(this.props.i18nKeyInputPlaceholder || \"tags.tagName\", {\n      defaultValue: this.props.inputPlaceholder || \"Tag Name\"\n    });\n  }\n\n  getSuggestionValue(suggestion) {\n    return suggestion.label;\n  }\n\n  saveTag(event) {\n    if (this.props.onTagSave) {\n      this.props.onTagSave(event, this.props.tag);\n    }\n  }\n\n  /**\n   * Handle tag form submit events and pass them up the component chain\n   * @param  {Event} event Event object\n   * @return {void} no return value\n   */\n  handleTagFormSubmit = (event) => {\n    event.preventDefault();\n    this._saved = true;\n    this.saveTag(event);\n  };\n\n  /**\n   * Handle tag remove events and pass them up the component chain\n   * @param  {Event} event Event object\n   * @return {void} no return value\n   */\n  handleTagRemove = () => {\n    if (this.props.onTagRemove) {\n      this.props.onTagRemove(this.props.tag);\n    }\n  };\n\n  /**\n   * Handle tag update events and pass them up the component chain\n   * @param  {Event} event Event object\n   * @return {void} no return value\n   */\n  handleTagUpdate = (event) => {\n    if (this.props.onTagUpdate && event.keyCode === 13) {\n      this._saved = true;\n      this.props.onTagUpdate(this.props.tag._id, event.target.value);\n    }\n  };\n\n  handleTagKeyDown = (event) => {\n    if (event.keyCode === 13) {\n      this._saved = true;\n      this.saveTag(event);\n    }\n  }\n\n  /**\n   * Handle tag mouse out events and pass them up the component chain\n   * @param  {Event} event Event object\n   * @return {void} no return value\n   */\n  handleTagMouseOut = (event) => {\n    // event.preventDefault();\n    if (this.props.onTagMouseOut) {\n      this.props.onTagMouseOut(event, this.props.tag);\n    }\n  };\n\n  /**\n   * Handle tag mouse over events and pass them up the component chain\n   * @param  {Event} event Event object\n   * @return {void} no return value\n   */\n  handleTagMouseOver = (event) => {\n    if (this.props.onTagMouseOver) {\n      this.props.onTagMouseOver(event, this.props.tag);\n    }\n  };\n\n  /**\n   * Handle tag inout blur events and pass them up the component chain\n   * @param  {Event} event Event object\n   * @return {void} no return value\n   */\n  handleTagInputBlur = (event) => {\n    if (this.props.onTagInputBlur) {\n      this._saved = true;\n      this.props.onTagInputBlur(event, this.props.tag);\n    }\n  };\n\n  handleInputChange = (event, { newValue }) => {\n    if (this.props.onTagUpdate) {\n      const updatedTag = Object.assign({}, { ...this.props.tag }, {\n        name: newValue\n      });\n      this.props.onTagUpdate(event, updatedTag);\n    }\n  }\n\n  handleSuggestionsUpdateRequested = (suggestion) => {\n    if (this.props.onGetSuggestions) {\n      this.props.onGetSuggestions(suggestion);\n    }\n  }\n\n  handleSuggestionsClearRequested = () => {\n    if (this.props.onClearSuggestions) {\n      this.props.onClearSuggestions();\n    }\n  }\n\n  /**\n   * Render a simple tag for display purposes only\n   * @return {JSX} simple tag\n   */\n  renderTag() {\n    const url = Router.pathFor(\"tag\", {\n      hash: {\n        slug: this.props.tag.slug\n      }\n    });\n\n    const baseClassName = classnames({\n      \"rui\": true,\n      \"tag\": true,\n      \"link\": true,\n      \"full-width\": this.props.fullWidth\n    });\n\n    return (\n      <a\n        className={baseClassName}\n        href={url}\n        onMouseOut={this.handleTagMouseOut}\n        onMouseOver={this.handleTagMouseOver}\n      >\n        {this.props.tag.name}\n      </a>\n    );\n  }\n\n  /**\n   * Render an admin editable tag\n   * @return {JSX} editable tag\n   */\n  renderEditableTag() {\n    const baseClassName = classnames({\n      \"rui\": true,\n      \"tag\": true,\n      \"edit\": true,\n      \"full-width\": this.props.fullWidth\n    });\n\n    return (\n      this.props.connectDropTarget(\n        <div\n          className={baseClassName}\n          data-id={this.props.tag._id}\n        >\n          <form onSubmit={this.handleTagFormSubmit}>\n            <Handle connectDragSource={this.props.connectDragSource} />\n            {this.renderAutosuggestInput()}\n            <Button icon=\"times-circle\" onClick={this.handleTagRemove} status=\"danger\" />\n          </form>\n        </div>\n      )\n    );\n  }\n\n  /**\n   * Render a tag creation form\n   * @return {JSX} blank tag for creating new tags\n   */\n  renderBlankEditableTag() {\n    const baseClassName = classnames({\n      \"rui\": true,\n      \"tag\": true,\n      \"edit\": true,\n      \"create\": true,\n      \"full-width\": this.props.fullWidth\n    });\n\n    return (\n      <div className={baseClassName}>\n        <form onSubmit={this.handleTagFormSubmit}>\n          <Button icon=\"tag\" />\n          {this.renderAutosuggestInput()}\n          <Button icon=\"plus\" />\n        </form>\n      </div>\n    );\n  }\n\n  renderSuggestion(suggestion) {\n    return (\n      <span>{suggestion.label}</span>\n    );\n  }\n\n  renderAutosuggestInput() {\n    return (\n      <Autosuggest\n        getSuggestionValue={this.getSuggestionValue}\n        inputProps={{\n          placeholder: this.inputPlaceholder,\n          value: this.props.tag.name,\n          onKeyDown(event) {\n            // 9 == Tab key\n            // 13 == Enter Key\n            if (event.keyCode === 9 || event.keyCode === 13) {\n              // this.handleUpdate\n              // options.onUpdateCallback && options.onUpdateCallback();\n            }\n          },\n          onBlur: this.handleTagInputBlur,\n          onChange: this.handleInputChange\n        }}\n        onSuggestionsClearRequested={this.handleSuggestionsClearRequested}\n        onSuggestionsFetchRequested={this.handleSuggestionsUpdateRequested}\n        ref=\"autoSuggestInput\"\n        renderSuggestion={this.renderSuggestion}\n        suggestions={this.props.suggestions}\n      />\n    );\n  }\n\n  /**\n   * Render component\n   * @return {JSX} tag component\n   */\n  render() {\n    if (this.props.editable) {\n      return this.renderEditableTag();\n    } else if (this.props.blank) {\n      return this.renderBlankEditableTag();\n    }\n\n    return this.renderTag();\n  }\n}\n\nTag.propTypes = {\n  blank: PropTypes.bool,\n  connectDragSource: PropTypes.func,\n  connectDropTarget: PropTypes.func,\n  editable: PropTypes.bool,\n  fullWidth: PropTypes.bool,\n  i18nKeyInputPlaceholder: PropTypes.string,\n  index: PropTypes.number,\n  inputPlaceholder: PropTypes.string,\n  onClearSuggestions: PropTypes.func,\n  onGetSuggestions: PropTypes.func,\n  onTagInputBlur: PropTypes.func,\n  onTagMouseOut: PropTypes.func,\n  onTagMouseOver: PropTypes.func,\n  onTagRemove: PropTypes.func,\n  onTagSave: PropTypes.func,\n  onTagUpdate: PropTypes.func,\n  parentTag: PropTypes.object,\n  suggestions: PropTypes.arrayOf(PropTypes.object),\n  tag: PropTypes.object\n};\n\nexport default SortableItem(\"tag\", Tag);\n"]},"hash":"06fd489fb4ccc9004273baef56fdadbf170c20e6"}
