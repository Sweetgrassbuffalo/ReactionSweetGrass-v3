{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/session","imported":["Session"],"specifiers":[{"kind":"named","imported":"Session","local":"Session"}]},{"source":"meteor/templating","imported":["Template"],"specifiers":[{"kind":"named","imported":"Template","local":"Template"}]},{"source":"meteor/reactive-dict","imported":["ReactiveDict"],"specifiers":[{"kind":"named","imported":"ReactiveDict","local":"ReactiveDict"}]},{"source":"/imports/plugins/core/ui/client/components","imported":["IconButton"],"specifiers":[{"kind":"named","imported":"IconButton","local":"IconButton"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/included/ui-search/client/templates/productSearch/controls.js","filenameRelative":"/imports/plugins/included/ui-search/client/templates/productSearch/controls.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/included/ui-search/client/templates/productSearch/controls.js"],"names":["Session","Template","ReactiveDict","IconButton","searchGridControls","onCreated","state","autorun","selectedProducts","get","isSelected","_","isArray","indexOf","data","product","_id","set","onRendered","$","tooltip","position","helpers","EditButton","instance","equals","component","icon","onIcon","status","toggle","toggleOn","onClick","onEditButtonClick","VisibilityButton","isVisible","onPublishButtonClick","checked"],"mappings":"AAAA,IAAS;AAAT,OAAwB,WAAxB;;;;;;;;;;;;;;;;;;;;;;GACA,AAAS,AAAgB,AACzB,AAAS,AAAoB,AAC7B,AAAS,AAAkB,AAE3B,AAAS,AAAmB,AAAU,AAAY;AAChD,AAAK,SAAL,AAAa,AAAI,mBAAjB,AAAa;AAEb;;OAAA,AAAK,QAAQ,IAAM,AACjB,AAAM,AAAmB,AAAQ,AAAI,AACrC;OAAM,oBAAN,AAAmB,AAAE,AAAQ,AAAoB,AAAiB,AAAQ,AAAK,AAAK,AAAQ,AAAQ,AAAI,AAExG;AAAK,QAAL,AAAW,AAAI,mBAAf,AAA6B,YAJ/B,AAIE,AACD;2GARH,AASC,AAED;;UAAS,UAAT,AAA4B,cAA5B,AAAuC,AAAY,AACjD;AAAO,AAAK,AAAE,AAA2B,AAAQ,AAC/C;AADF,AAAO,AAA0C,AACrC;AAFd,AAIC,mDAED;gBAAA,AAA4B,AAAQ;cACrB,AACX,AAAM,AAAW,AAAS,AAC1B;AAFF,GADO;AAGL,AAAM,AAAa,AAAS,AAAM,AAAO,AAAc,AAEvD,AAAO;AACL,SADK,AACM;AACL,0BAFD,AAGL;QAAQ,WAHH,SAIL;QAAQ,aAAa,SAAb,MAAwB,OAJ3B,cAAA,AAKL,AAAQ,AACR;;iBACA;YAAU,AACR;AAAI,cAAJ,AAAI,AAAS,AAAK,AAAmB,AACnC;cAAA,AAAS,AAAK,wBAAd,AACD;cACF;;2BAXH,AAAO;6CALyB,AAkBjC;;AAED;AAAmB,AACjB,AAAM,AAAW,AAAS,AAE1B;AAlBO,AAMK;AAYL,AACL,AAAW,AACX;AAAM,gCAFD,AAGL;QAAQ,WAHH,SAAA,AAIL,AAAQ,AACR;;iBACA;YAAU,AACR;AAAI,cAAJ,AAAI,AAAS,AAAK,AAAsB,AACtC;cAAA,AAAS,AAAK,AACf;sCACF;;gDAVH,AAAO;wBAvByB,AAmCjC;;AAED,AAAS,AAAY,AACnB;AAfO,AAKK,AAAS,AAAK,AAAQ;AA5BtC,AAAoC,AAsChC,AAAO,AAAS,AAAW,AAAM,AAAO,AAAc,AACvD;;;;AAhCG","file":"/imports/plugins/included/ui-search/client/templates/productSearch/controls.js.map","sourcesContent":["import { Session } from \"meteor/session\";\nimport { Template } from \"meteor/templating\";\nimport { ReactiveDict } from \"meteor/reactive-dict\";\nimport { IconButton } from \"/imports/plugins/core/ui/client/components\";\n\nTemplate.searchGridControls.onCreated(function () {\n  this.state = new ReactiveDict();\n\n  this.autorun(() => {\n    const selectedProducts = Session.get(\"productGrid/selectedProducts\");\n    const isSelected = _.isArray(selectedProducts) ? selectedProducts.indexOf(this.data.product._id) >= 0 : false;\n\n    this.state.set(\"isSelected\", isSelected);\n  });\n});\n\nTemplate.searchGridControls.onRendered(function () {\n  return this.$(\"[data-toggle='tooltip']\").tooltip({\n    position: \"top\"\n  });\n});\n\nTemplate.searchGridControls.helpers({\n  EditButton() {\n    const instance = Template.instance();\n    const isSelected = instance.state.equals(\"isSelected\", true);\n\n    return {\n      component: IconButton,\n      icon: \"fa fa-pencil\",\n      onIcon: \"fa fa-check\",\n      status: isSelected ? \"active\" : \"default\",\n      toggle: true,\n      toggleOn: isSelected,\n      onClick() {\n        if (instance.data.onEditButtonClick) {\n          instance.data.onEditButtonClick();\n        }\n      }\n    };\n  },\n\n  VisibilityButton() {\n    const instance = Template.instance();\n\n    return {\n      component: IconButton,\n      icon: \"fa fa-eye-slash\",\n      onIcon: \"fa fa-eye\",\n      toggle: true,\n      toggleOn: instance.data.product.isVisible,\n      onClick() {\n        if (instance.data.onPublishButtonClick) {\n          instance.data.onPublishButtonClick();\n        }\n      }\n    };\n  },\n\n  checked: function () {\n    return Template.instance().state.equals(\"isSelected\", true);\n  }\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/included/ui-search/client/templates/productSearch/controls.js.map","sourceFileName":"/imports/plugins/included/ui-search/client/templates/productSearch/controls.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"controls"},"ignored":false,"code":"var Session = void 0;\nmodule.importSync(\"meteor/session\", {\n  Session: function (v) {\n    Session = v;\n  }\n}, 0);\nvar Template = void 0;\nmodule.importSync(\"meteor/templating\", {\n  Template: function (v) {\n    Template = v;\n  }\n}, 1);\nvar ReactiveDict = void 0;\nmodule.importSync(\"meteor/reactive-dict\", {\n  ReactiveDict: function (v) {\n    ReactiveDict = v;\n  }\n}, 2);\nvar IconButton = void 0;\nmodule.importSync(\"/imports/plugins/core/ui/client/components\", {\n  IconButton: function (v) {\n    IconButton = v;\n  }\n}, 3);\nTemplate.searchGridControls.onCreated(function () {\n  var _this = this;\n\n  this.state = new ReactiveDict();\n  this.autorun(function () {\n    var selectedProducts = Session.get(\"productGrid/selectedProducts\");\n    var isSelected = _.isArray(selectedProducts) ? selectedProducts.indexOf(_this.data.product._id) >= 0 : false;\n\n    _this.state.set(\"isSelected\", isSelected);\n  });\n});\nTemplate.searchGridControls.onRendered(function () {\n  return this.$(\"[data-toggle='tooltip']\").tooltip({\n    position: \"top\"\n  });\n});\nTemplate.searchGridControls.helpers({\n  EditButton: function () {\n    var instance = Template.instance();\n    var isSelected = instance.state.equals(\"isSelected\", true);\n    return {\n      component: IconButton,\n      icon: \"fa fa-pencil\",\n      onIcon: \"fa fa-check\",\n      status: isSelected ? \"active\" : \"default\",\n      toggle: true,\n      toggleOn: isSelected,\n      onClick: function () {\n        if (instance.data.onEditButtonClick) {\n          instance.data.onEditButtonClick();\n        }\n      }\n    };\n  },\n  VisibilityButton: function () {\n    var instance = Template.instance();\n    return {\n      component: IconButton,\n      icon: \"fa fa-eye-slash\",\n      onIcon: \"fa fa-eye\",\n      toggle: true,\n      toggleOn: instance.data.product.isVisible,\n      onClick: function () {\n        if (instance.data.onPublishButtonClick) {\n          instance.data.onPublishButtonClick();\n        }\n      }\n    };\n  },\n  checked: function () {\n    return Template.instance().state.equals(\"isSelected\", true);\n  }\n});","map":{"version":3,"sources":["/imports/plugins/included/ui-search/client/templates/productSearch/controls.js"],"names":["Session","Template","ReactiveDict","IconButton","searchGridControls","onCreated","state","autorun","selectedProducts","get","isSelected","_","isArray","indexOf","data","product","_id","set","onRendered","$","tooltip","position","helpers","EditButton","instance","equals","component","icon","onIcon","status","toggle","toggleOn","onClick","onEditButtonClick","VisibilityButton","isVisible","onPublishButtonClick","checked"],"mappings":"AAAA,IAAS;AAAT,OAAwB,WAAxB;;;;;;;;;;;;;;;;;;;;;;GACA,AAAS,AAAgB,AACzB,AAAS,AAAoB,AAC7B,AAAS,AAAkB,AAE3B,AAAS,AAAmB,AAAU,AAAY;AAChD,AAAK,SAAL,AAAa,AAAI,mBAAjB,AAAa;AAEb;;OAAA,AAAK,QAAQ,IAAM,AACjB,AAAM,AAAmB,AAAQ,AAAI,AACrC;OAAM,oBAAN,AAAmB,AAAE,AAAQ,AAAoB,AAAiB,AAAQ,AAAK,AAAK,AAAQ,AAAQ,AAAI,AAExG;AAAK,QAAL,AAAW,AAAI,mBAAf,AAA6B,YAJ/B,AAIE,AACD;2GARH,AASC,AAED;;UAAS,UAAT,AAA4B,cAA5B,AAAuC,AAAY,AACjD;AAAO,AAAK,AAAE,AAA2B,AAAQ,AAC/C;AADF,AAAO,AAA0C,AACrC;AAFd,AAIC,mDAED;gBAAA,AAA4B,AAAQ;cACrB,AACX,AAAM,AAAW,AAAS,AAC1B;AAFF,GADO;AAGL,AAAM,AAAa,AAAS,AAAM,AAAO,AAAc,AAEvD,AAAO;AACL,SADK,AACM;AACL,0BAFD,AAGL;QAAQ,WAHH,SAIL;QAAQ,aAAa,SAAb,MAAwB,OAJ3B,cAAA,AAKL,AAAQ,AACR;;iBACA;YAAU,AACR;AAAI,cAAJ,AAAI,AAAS,AAAK,AAAmB,AACnC;cAAA,AAAS,AAAK,wBAAd,AACD;cACF;;2BAXH,AAAO;6CALyB,AAkBjC;;AAED;AAAmB,AACjB,AAAM,AAAW,AAAS,AAE1B;AAlBO,AAMK;AAYL,AACL,AAAW,AACX;AAAM,gCAFD,AAGL;QAAQ,WAHH,SAAA,AAIL,AAAQ,AACR;;iBACA;YAAU,AACR;AAAI,cAAJ,AAAI,AAAS,AAAK,AAAsB,AACtC;cAAA,AAAS,AAAK,AACf;sCACF;;gDAVH,AAAO;wBAvByB,AAmCjC;;AAED,AAAS,AAAY,AACnB;AAfO,AAKK,AAAS,AAAK,AAAQ;AA5BtC,AAAoC,AAsChC,AAAO,AAAS,AAAW,AAAM,AAAO,AAAc,AACvD;;;;AAhCG","file":"/imports/plugins/included/ui-search/client/templates/productSearch/controls.js.map","sourcesContent":["import { Session } from \"meteor/session\";\nimport { Template } from \"meteor/templating\";\nimport { ReactiveDict } from \"meteor/reactive-dict\";\nimport { IconButton } from \"/imports/plugins/core/ui/client/components\";\n\nTemplate.searchGridControls.onCreated(function () {\n  this.state = new ReactiveDict();\n\n  this.autorun(() => {\n    const selectedProducts = Session.get(\"productGrid/selectedProducts\");\n    const isSelected = _.isArray(selectedProducts) ? selectedProducts.indexOf(this.data.product._id) >= 0 : false;\n\n    this.state.set(\"isSelected\", isSelected);\n  });\n});\n\nTemplate.searchGridControls.onRendered(function () {\n  return this.$(\"[data-toggle='tooltip']\").tooltip({\n    position: \"top\"\n  });\n});\n\nTemplate.searchGridControls.helpers({\n  EditButton() {\n    const instance = Template.instance();\n    const isSelected = instance.state.equals(\"isSelected\", true);\n\n    return {\n      component: IconButton,\n      icon: \"fa fa-pencil\",\n      onIcon: \"fa fa-check\",\n      status: isSelected ? \"active\" : \"default\",\n      toggle: true,\n      toggleOn: isSelected,\n      onClick() {\n        if (instance.data.onEditButtonClick) {\n          instance.data.onEditButtonClick();\n        }\n      }\n    };\n  },\n\n  VisibilityButton() {\n    const instance = Template.instance();\n\n    return {\n      component: IconButton,\n      icon: \"fa fa-eye-slash\",\n      onIcon: \"fa fa-eye\",\n      toggle: true,\n      toggleOn: instance.data.product.isVisible,\n      onClick() {\n        if (instance.data.onPublishButtonClick) {\n          instance.data.onPublishButtonClick();\n        }\n      }\n    };\n  },\n\n  checked: function () {\n    return Template.instance().state.equals(\"isSelected\", true);\n  }\n});\n"]},"hash":"08207a5f9431af6eac2abf15ba155cbf82e570ec"}
