{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","createClass","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component","PropTypes"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"},{"kind":"named","imported":"PropTypes","local":"PropTypes"}]},{"source":"classnames","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"classnames"}]},{"source":"react-textarea-autosize","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"TextareaAutosize"}]},{"source":"../translation","imported":["Translation"],"specifiers":[{"kind":"named","imported":"Translation","local":"Translation"}]},{"source":"/client/api","imported":["i18next"],"specifiers":[{"kind":"named","imported":"i18next","local":"i18next"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/core/ui/client/components/textfield/textfield.js","filenameRelative":"/imports/plugins/core/ui/client/components/textfield/textfield.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/core/ui/client/components/textfield/textfield.js"],"names":["React","Component","PropTypes","classnames","TextareaAutosize","Translation","i18next","TextField","value","props","onChange","event","target","name","onBlur","onKeyDown","onReturnKeyDown","keyCode","renderMultilineInput","placeholder","t","i18nKeyPlaceholder","defaultValue","style","disabled","renderSingleLineInput","inputClassName","className","type","renderField","multiline","renderLabel","label","i18nKeyLabel","renderHelpText","helpText","i18nKeyHelpText","render","classes","align","defaultProps","propTypes","oneOf","string","bool","func","object","any"],"mappings":"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","file":"/imports/plugins/core/ui/client/components/textfield/textfield.js.map","sourcesContent":["import React, { Component, PropTypes } from \"react\";\nimport classnames from \"classnames\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { Translation } from \"../translation\";\nimport { i18next } from \"/client/api\";\n\nclass TextField extends Component {\n  /**\n   * Getter: value\n   * @return {String} value for text input\n   */\n  get value() {\n    return this.props.value || \"\";\n  }\n\n  /**\n   * onValueChange\n   * @summary set the state when the value of the input is changed\n   * @param  {Event} event Event object\n   * @return {void}\n   */\n  onChange = (event) => {\n    if (this.props.onChange) {\n      this.props.onChange(event, event.target.value, this.props.name);\n    }\n  }\n\n  /**\n   * onBlur\n   * @summary set the state when the value of the input is changed\n   * @param  {Event} event Event object\n   * @return {void}\n   */\n  onBlur = (event) => {\n    if (this.props.onBlur) {\n      this.props.onBlur(event, event.target.value, this.props.name);\n    }\n  }\n\n  /**\n   * onKeyDown\n   * @summary set the state when the value of the input is changed\n   * @param  {Event} event Event object\n   * @return {void}\n   */\n  onKeyDown = (event) => {\n    if (this.props.onKeyDown) {\n      this.props.onKeyDown(event, this.props.name);\n    }\n\n    if (this.props.onReturnKeyDown && event.keyCode === 13) {\n      this.props.onReturnKeyDown(event, event.target.value, this.props.name);\n    }\n  }\n\n  /**\n   * Render a multiline input (textarea)\n   * @return {JSX} jsx\n   */\n  renderMultilineInput() {\n    const placeholder = i18next.t(this.props.i18nKeyPlaceholder, {\n      defaultValue: this.props.placeholder\n    });\n\n    return (\n      <TextareaAutosize\n        className=\"{this.props.name}-edit-input\"\n        onBlur={this.onBlur}\n        onChange={this.onChange}\n        placeholder={placeholder}\n        ref=\"input\"\n        value={this.value}\n        style={this.props.style}\n        disabled={this.props.disabled}\n      />\n    );\n  }\n\n  /**\n   * Render a singleline input\n   * @return {JSX} jsx\n   */\n  renderSingleLineInput() {\n    const inputClassName = classnames({\n      [`${this.props.name || \"text\"}-edit-input`]: true\n    }, this.props.className);\n\n    const placeholder = i18next.t(this.props.i18nKeyPlaceholder, {\n      defaultValue: this.props.placeholder\n    });\n\n    return (\n      <input\n        className={inputClassName}\n        name={this.props.name}\n        onBlur={this.onBlur}\n        onChange={this.onChange}\n        onKeyDown={this.onKeyDown}\n        placeholder={placeholder}\n        ref=\"input\"\n        type={this.props.type || \"text\"}\n        value={this.value}\n        style={this.props.style}\n        disabled={this.props.disabled}\n      />\n    );\n  }\n\n  /**\n   * Render either a multiline (textarea) or singleline (input)\n   * @return {JSX} jsx template\n   */\n  renderField() {\n    if (this.props.multiline === true) {\n      return this.renderMultilineInput();\n    }\n\n    return this.renderSingleLineInput();\n  }\n\n  renderLabel() {\n    if (this.props.label) {\n      return (\n        <label>\n          <Translation defaultValue={this.props.label} i18nKey={this.props.i18nKeyLabel} />\n        </label>\n      );\n    }\n\n    return null;\n  }\n\n  renderHelpText() {\n    if (this.props.helpText) {\n      return (\n        <span className=\"help-block\">\n          <Translation defaultValue={this.props.helpText} i18nKey={this.props.i18nKeyHelpText} />\n        </span>\n      );\n    }\n\n    return null;\n  }\n\n  /**\n   * Render Component\n   * @return {JSX} component\n   */\n  render() {\n    const classes = classnames({\n      // Base\n      \"rui\": true,\n      \"textfield\": true,\n      \"form-group\": true,\n\n      // Alignment\n      \"center\": this.props.align === \"center\",\n      \"left\": this.props.align === \"left\",\n      \"right\": this.props.align === \"right\"\n    });\n\n    return (\n      <div className={classes}>\n        {this.renderLabel()}\n        {this.renderField()}\n        {this.renderHelpText()}\n        <span className=\"product-detail-message\" id=\"{{field}}-message\" />\n      </div>\n    );\n  }\n}\n\nTextField.defaultProps = {\n\n};\n\nTextField.propTypes = {\n  align: PropTypes.oneOf([\"left\", \"center\", \"right\", \"justify\"]),\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  helpText: PropTypes.string,\n  i18nKeyHelpText: PropTypes.string,\n  i18nKeyLabel: PropTypes.string,\n  i18nKeyPlaceholder: PropTypes.string,\n  label: PropTypes.string,\n  multiline: PropTypes.bool,\n  name: PropTypes.string,\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onReturnKeyDown: PropTypes.func,\n  placeholder: PropTypes.string,\n  style: PropTypes.object,\n  type: PropTypes.string,\n  value: PropTypes.any\n};\n\nexport default TextField;\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/core/ui/client/components/textfield/textfield.js.map","sourceFileName":"/imports/plugins/core/ui/client/components/textfield/textfield.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"textfield"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0,\n    Component = void 0,\n    PropTypes = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  },\n  PropTypes: function (v) {\n    PropTypes = v;\n  }\n}, 0);\nvar classnames = void 0;\nmodule.importSync(\"classnames\", {\n  \"default\": function (v) {\n    classnames = v;\n  }\n}, 1);\nvar TextareaAutosize = void 0;\nmodule.importSync(\"react-textarea-autosize\", {\n  \"default\": function (v) {\n    TextareaAutosize = v;\n  }\n}, 2);\nvar Translation = void 0;\nmodule.importSync(\"../translation\", {\n  Translation: function (v) {\n    Translation = v;\n  }\n}, 3);\nvar i18next = void 0;\nmodule.importSync(\"/client/api\", {\n  i18next: function (v) {\n    i18next = v;\n  }\n}, 4);\n\nvar TextField = function (_Component) {\n  (0, _inherits3.default)(TextField, _Component);\n\n  function TextField() {\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, TextField);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.onChange = function (event) {\n      if (_this.props.onChange) {\n        _this.props.onChange(event, event.target.value, _this.props.name);\n      }\n    }, _this.onBlur = function (event) {\n      if (_this.props.onBlur) {\n        _this.props.onBlur(event, event.target.value, _this.props.name);\n      }\n    }, _this.onKeyDown = function (event) {\n      if (_this.props.onKeyDown) {\n        _this.props.onKeyDown(event, _this.props.name);\n      }\n\n      if (_this.props.onReturnKeyDown && event.keyCode === 13) {\n        _this.props.onReturnKeyDown(event, event.target.value, _this.props.name);\n      }\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  /**\n   * Render a multiline input (textarea)\n   * @return {JSX} jsx\n   */TextField.prototype.renderMultilineInput = function () {\n    function renderMultilineInput() {\n      var placeholder = i18next.t(this.props.i18nKeyPlaceholder, {\n        defaultValue: this.props.placeholder\n      });\n      return React.createElement(TextareaAutosize, {\n        className: \"{this.props.name}-edit-input\",\n        onBlur: this.onBlur,\n        onChange: this.onChange,\n        placeholder: placeholder,\n        ref: \"input\",\n        value: this.value,\n        style: this.props.style,\n        disabled: this.props.disabled\n      });\n    }\n\n    return renderMultilineInput;\n  }(); /**\n        * Render a singleline input\n        * @return {JSX} jsx\n        */\n\n  TextField.prototype.renderSingleLineInput = function () {\n    function renderSingleLineInput() {\n      var _classnames;\n\n      var inputClassName = classnames((_classnames = {}, _classnames[(this.props.name || \"text\") + \"-edit-input\"] = true, _classnames), this.props.className);\n      var placeholder = i18next.t(this.props.i18nKeyPlaceholder, {\n        defaultValue: this.props.placeholder\n      });\n      return React.createElement(\"input\", {\n        className: inputClassName,\n        name: this.props.name,\n        onBlur: this.onBlur,\n        onChange: this.onChange,\n        onKeyDown: this.onKeyDown,\n        placeholder: placeholder,\n        ref: \"input\",\n        type: this.props.type || \"text\",\n        value: this.value,\n        style: this.props.style,\n        disabled: this.props.disabled\n      });\n    }\n\n    return renderSingleLineInput;\n  }(); /**\n        * Render either a multiline (textarea) or singleline (input)\n        * @return {JSX} jsx template\n        */\n\n  TextField.prototype.renderField = function () {\n    function renderField() {\n      if (this.props.multiline === true) {\n        return this.renderMultilineInput();\n      }\n\n      return this.renderSingleLineInput();\n    }\n\n    return renderField;\n  }();\n\n  TextField.prototype.renderLabel = function () {\n    function renderLabel() {\n      if (this.props.label) {\n        return React.createElement(\n          \"label\",\n          null,\n          React.createElement(Translation, {\n            defaultValue: this.props.label,\n            i18nKey: this.props.i18nKeyLabel\n          })\n        );\n      }\n\n      return null;\n    }\n\n    return renderLabel;\n  }();\n\n  TextField.prototype.renderHelpText = function () {\n    function renderHelpText() {\n      if (this.props.helpText) {\n        return React.createElement(\n          \"span\",\n          {\n            className: \"help-block\"\n          },\n          React.createElement(Translation, {\n            defaultValue: this.props.helpText,\n            i18nKey: this.props.i18nKeyHelpText\n          })\n        );\n      }\n\n      return null;\n    }\n\n    return renderHelpText;\n  }(); /**\n        * Render Component\n        * @return {JSX} component\n        */\n\n  TextField.prototype.render = function () {\n    function render() {\n      var classes = classnames({\n        // Base\n        \"rui\": true,\n        \"textfield\": true,\n        \"form-group\": true,\n        // Alignment\n        \"center\": this.props.align === \"center\",\n        \"left\": this.props.align === \"left\",\n        \"right\": this.props.align === \"right\"\n      });\n      return React.createElement(\n        \"div\",\n        {\n          className: classes\n        },\n        this.renderLabel(),\n        this.renderField(),\n        this.renderHelpText(),\n        React.createElement(\"span\", {\n          className: \"product-detail-message\",\n          id: \"{{field}}-message\"\n        })\n      );\n    }\n\n    return render;\n  }();\n\n  (0, _createClass3.default)(TextField, [{\n    key: \"value\",\n    /**\n     * Getter: value\n     * @return {String} value for text input\n     */get: function () {\n      return this.props.value || \"\";\n    } /**\n       * onValueChange\n       * @summary set the state when the value of the input is changed\n       * @param  {Event} event Event object\n       * @return {void}\n       */ /**\n           * onBlur\n           * @summary set the state when the value of the input is changed\n           * @param  {Event} event Event object\n           * @return {void}\n           */ /**\n               * onKeyDown\n               * @summary set the state when the value of the input is changed\n               * @param  {Event} event Event object\n               * @return {void}\n               */\n  }]);\n  return TextField;\n}(Component);\n\nTextField.defaultProps = {};\nTextField.propTypes = {\n  align: PropTypes.oneOf([\"left\", \"center\", \"right\", \"justify\"]),\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  helpText: PropTypes.string,\n  i18nKeyHelpText: PropTypes.string,\n  i18nKeyLabel: PropTypes.string,\n  i18nKeyPlaceholder: PropTypes.string,\n  label: PropTypes.string,\n  multiline: PropTypes.bool,\n  name: PropTypes.string,\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onReturnKeyDown: PropTypes.func,\n  placeholder: PropTypes.string,\n  style: PropTypes.object,\n  type: PropTypes.string,\n  value: PropTypes.any\n};\nmodule.export(\"default\", exports.default = TextField);","map":{"version":3,"sources":["/imports/plugins/core/ui/client/components/textfield/textfield.js"],"names":["React","Component","PropTypes","classnames","TextareaAutosize","Translation","i18next","TextField","value","props","onChange","event","target","name","onBlur","onKeyDown","onReturnKeyDown","keyCode","renderMultilineInput","placeholder","t","i18nKeyPlaceholder","defaultValue","style","disabled","renderSingleLineInput","inputClassName","className","type","renderField","multiline","renderLabel","label","i18nKeyLabel","renderHelpText","helpText","i18nKeyHelpText","render","classes","align","defaultProps","propTypes","oneOf","string","bool","func","object","any"],"mappings":"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","file":"/imports/plugins/core/ui/client/components/textfield/textfield.js.map","sourcesContent":["import React, { Component, PropTypes } from \"react\";\nimport classnames from \"classnames\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { Translation } from \"../translation\";\nimport { i18next } from \"/client/api\";\n\nclass TextField extends Component {\n  /**\n   * Getter: value\n   * @return {String} value for text input\n   */\n  get value() {\n    return this.props.value || \"\";\n  }\n\n  /**\n   * onValueChange\n   * @summary set the state when the value of the input is changed\n   * @param  {Event} event Event object\n   * @return {void}\n   */\n  onChange = (event) => {\n    if (this.props.onChange) {\n      this.props.onChange(event, event.target.value, this.props.name);\n    }\n  }\n\n  /**\n   * onBlur\n   * @summary set the state when the value of the input is changed\n   * @param  {Event} event Event object\n   * @return {void}\n   */\n  onBlur = (event) => {\n    if (this.props.onBlur) {\n      this.props.onBlur(event, event.target.value, this.props.name);\n    }\n  }\n\n  /**\n   * onKeyDown\n   * @summary set the state when the value of the input is changed\n   * @param  {Event} event Event object\n   * @return {void}\n   */\n  onKeyDown = (event) => {\n    if (this.props.onKeyDown) {\n      this.props.onKeyDown(event, this.props.name);\n    }\n\n    if (this.props.onReturnKeyDown && event.keyCode === 13) {\n      this.props.onReturnKeyDown(event, event.target.value, this.props.name);\n    }\n  }\n\n  /**\n   * Render a multiline input (textarea)\n   * @return {JSX} jsx\n   */\n  renderMultilineInput() {\n    const placeholder = i18next.t(this.props.i18nKeyPlaceholder, {\n      defaultValue: this.props.placeholder\n    });\n\n    return (\n      <TextareaAutosize\n        className=\"{this.props.name}-edit-input\"\n        onBlur={this.onBlur}\n        onChange={this.onChange}\n        placeholder={placeholder}\n        ref=\"input\"\n        value={this.value}\n        style={this.props.style}\n        disabled={this.props.disabled}\n      />\n    );\n  }\n\n  /**\n   * Render a singleline input\n   * @return {JSX} jsx\n   */\n  renderSingleLineInput() {\n    const inputClassName = classnames({\n      [`${this.props.name || \"text\"}-edit-input`]: true\n    }, this.props.className);\n\n    const placeholder = i18next.t(this.props.i18nKeyPlaceholder, {\n      defaultValue: this.props.placeholder\n    });\n\n    return (\n      <input\n        className={inputClassName}\n        name={this.props.name}\n        onBlur={this.onBlur}\n        onChange={this.onChange}\n        onKeyDown={this.onKeyDown}\n        placeholder={placeholder}\n        ref=\"input\"\n        type={this.props.type || \"text\"}\n        value={this.value}\n        style={this.props.style}\n        disabled={this.props.disabled}\n      />\n    );\n  }\n\n  /**\n   * Render either a multiline (textarea) or singleline (input)\n   * @return {JSX} jsx template\n   */\n  renderField() {\n    if (this.props.multiline === true) {\n      return this.renderMultilineInput();\n    }\n\n    return this.renderSingleLineInput();\n  }\n\n  renderLabel() {\n    if (this.props.label) {\n      return (\n        <label>\n          <Translation defaultValue={this.props.label} i18nKey={this.props.i18nKeyLabel} />\n        </label>\n      );\n    }\n\n    return null;\n  }\n\n  renderHelpText() {\n    if (this.props.helpText) {\n      return (\n        <span className=\"help-block\">\n          <Translation defaultValue={this.props.helpText} i18nKey={this.props.i18nKeyHelpText} />\n        </span>\n      );\n    }\n\n    return null;\n  }\n\n  /**\n   * Render Component\n   * @return {JSX} component\n   */\n  render() {\n    const classes = classnames({\n      // Base\n      \"rui\": true,\n      \"textfield\": true,\n      \"form-group\": true,\n\n      // Alignment\n      \"center\": this.props.align === \"center\",\n      \"left\": this.props.align === \"left\",\n      \"right\": this.props.align === \"right\"\n    });\n\n    return (\n      <div className={classes}>\n        {this.renderLabel()}\n        {this.renderField()}\n        {this.renderHelpText()}\n        <span className=\"product-detail-message\" id=\"{{field}}-message\" />\n      </div>\n    );\n  }\n}\n\nTextField.defaultProps = {\n\n};\n\nTextField.propTypes = {\n  align: PropTypes.oneOf([\"left\", \"center\", \"right\", \"justify\"]),\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  helpText: PropTypes.string,\n  i18nKeyHelpText: PropTypes.string,\n  i18nKeyLabel: PropTypes.string,\n  i18nKeyPlaceholder: PropTypes.string,\n  label: PropTypes.string,\n  multiline: PropTypes.bool,\n  name: PropTypes.string,\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onReturnKeyDown: PropTypes.func,\n  placeholder: PropTypes.string,\n  style: PropTypes.object,\n  type: PropTypes.string,\n  value: PropTypes.any\n};\n\nexport default TextField;\n"]},"hash":"3045f34669fe86aae91938f660a84ece39eb2491"}
