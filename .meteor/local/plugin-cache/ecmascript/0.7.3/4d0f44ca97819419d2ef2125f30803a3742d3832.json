{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","createClass","classCallCheck","extends","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component","PropTypes"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"},{"kind":"named","imported":"PropTypes","local":"PropTypes"}]},{"source":"/imports/plugins/core/ui/client/components","imported":["Button","FlatButton","IconButton","Divider","DropDownMenu","MenuItem","ToolbarGroup","Switch","Icon"],"specifiers":[{"kind":"named","imported":"Button","local":"Button"},{"kind":"named","imported":"FlatButton","local":"FlatButton"},{"kind":"named","imported":"IconButton","local":"IconButton"},{"kind":"named","imported":"Divider","local":"Divider"},{"kind":"named","imported":"DropDownMenu","local":"DropDownMenu"},{"kind":"named","imported":"MenuItem","local":"MenuItem"},{"kind":"named","imported":"ToolbarGroup","local":"ToolbarGroup"},{"kind":"named","imported":"Switch","local":"Switch"},{"kind":"named","imported":"Icon","local":"Icon"}]},{"source":"./simpleDiff","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"SimpleDiff"}]},{"source":"/imports/plugins/core/ui/client/providers","imported":["Translatable"],"specifiers":[{"kind":"named","imported":"Translatable","local":"Translatable"}]},{"source":"/client/api","imported":["Reaction"],"specifiers":[{"kind":"named","imported":"Reaction","local":"Reaction"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/core/revisions/client/components/publishControls.js","filenameRelative":"/imports/plugins/core/revisions/client/components/publishControls.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/core/revisions/client/components/publishControls.js"],"names":["React","Component","PropTypes","Button","FlatButton","IconButton","Divider","DropDownMenu","MenuItem","ToolbarGroup","Switch","Icon","SimpleDiff","Translatable","Reaction","PublishControls","propTypes","documentIds","arrayOf","string","documents","object","isEnabled","bool","isPreview","onAction","func","onAddProduct","onPublishClick","onViewContextChange","onVisibilityChange","revisions","showViewAsControls","translation","shape","lang","defaultProps","constructor","props","state","showDiffs","handleToggleShowChanges","bind","handlePublishClick","setState","handleVisibilityChange","event","value","isDocumentVisible","handleAction","isChecked","showChangesButtonLabel","showChangesButtoni18nKeyLabel","revisionIds","hasRevisions","map","revision","_id","Array","isArray","length","diffs","isVisible","primaryRevision","documentData","primaryDocument","hasChanges","diffHasActualChanges","diff","documentType","some","element","renderChanges","renderDeletionStatus","isDeleted","handleRestore","renderPublishButton","buttonProps","label","i18nKeyLabel","renderMoreOptionsButton","renderViewControls","tooltip","i18nKeyTooltip","renderUndoButton","renderArchiveButton","renderSettingsButton","renderVisibilitySwitch","renderAdminButton","showActionView","i18nKeyTite","title","template","fontSize","renderAddButton","render"],"mappings":"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","file":"/imports/plugins/core/revisions/client/components/publishControls.js.map","sourcesContent":["import React, { Component, PropTypes } from \"react\";\nimport {\n  Button,\n  FlatButton,\n  IconButton,\n  Divider,\n  DropDownMenu,\n  MenuItem,\n  ToolbarGroup,\n  Switch,\n  Icon\n} from \"/imports/plugins/core/ui/client/components\";\nimport SimpleDiff from \"./simpleDiff\";\nimport { Translatable } from \"/imports/plugins/core/ui/client/providers\";\n\n/** TMP **/\nimport { Reaction } from \"/client/api\";\n\nclass PublishControls extends Component {\n  static propTypes = {\n    documentIds: PropTypes.arrayOf(PropTypes.string),\n    documents: PropTypes.arrayOf(PropTypes.object),\n    isEnabled: PropTypes.bool,\n    isPreview: PropTypes.bool,\n    onAction: PropTypes.func,\n    onAddProduct: PropTypes.func,\n    onPublishClick: PropTypes.func,\n    onViewContextChange: PropTypes.func,\n    onVisibilityChange: PropTypes.func,\n    revisions: PropTypes.arrayOf(PropTypes.object),\n    showViewAsControls: PropTypes.bool,\n    translation: PropTypes.shape({\n      lang: PropTypes.string\n    })\n  }\n\n  static defaultProps = {\n    showViewAsControls: true\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showDiffs: false\n    };\n\n    this.handleToggleShowChanges = this.handleToggleShowChanges.bind(this);\n    this.handlePublishClick = this.handlePublishClick.bind(this);\n  }\n\n  handleToggleShowChanges() {\n    this.setState({\n      showDiffs: !this.state.showDiffs\n    });\n  }\n\n  handlePublishClick() {\n    if (this.props.onPublishClick) {\n      this.props.onPublishClick(this.props.revisions);\n    }\n  }\n\n  handleVisibilityChange = (event, value) => {\n    if (this.props.onVisibilityChange) {\n      let isDocumentVisible = false;\n\n      if (value === \"public\") {\n        isDocumentVisible = true;\n      }\n\n      this.props.onVisibilityChange(event, isDocumentVisible, this.props.documentIds);\n    }\n  }\n\n  handleAction = (event, value) => {\n    if (this.props.onAction) {\n      this.props.onAction(event, value, this.props.documentIds);\n    }\n  }\n\n  onViewContextChange = (event, isChecked) => {\n    if (typeof this.props.onViewContextChange === \"function\") {\n      this.props.onViewContextChange(event, isChecked ? \"customer\" : \"administrator\");\n    }\n  }\n\n  get showChangesButtonLabel() {\n    if (!this.showDiffs) {\n      return \"Show Changes\";\n    }\n\n    return \"Hide Changes\";\n  }\n\n  get showChangesButtoni18nKeyLabel() {\n    if (!this.showDiffs) {\n      return \"app.showChanges\";\n    }\n\n    return \"app.hideChanges\";\n  }\n\n  get revisionIds() {\n    if (this.hasRevisions) {\n      return this.props.revisions.map(revision => revision._id);\n    }\n    return false;\n  }\n\n  get hasRevisions() {\n    return Array.isArray(this.props.revisions) && this.props.revisions.length;\n  }\n\n  get diffs() {\n    return this.props.revisions;\n  }\n\n  get showDiffs() {\n    return this.diffs && this.state.showDiffs;\n  }\n\n  get isVisible() {\n    if (Array.isArray(this.props.revisions) && this.props.revisions.length) {\n      const primaryRevision = this.props.revisions[0];\n\n      if (primaryRevision.documentData.isVisible) {\n        return \"public\";\n      }\n    } else if (Array.isArray(this.props.documents) && this.props.documents.length) {\n      const primaryDocument = this.props.documents[0];\n\n      if (primaryDocument.isVisible) {\n        return \"public\";\n      }\n    }\n\n    return \"private\";\n  }\n\n  /**\n   * Getter hasChanges\n   * @return {Boolean} one or more revision has changes\n   */\n  get hasChanges() {\n    // Verify we even have any revision at all\n    if (this.hasRevisions) {\n      // Loop through all revisions to determine if they have changes\n      const diffHasActualChanges = this.props.revisions.map((revision) => {\n        // We probably do have chnages to publish\n        // Note: Sometimes \"updatedAt\" will cause false positives, but just incase, lets\n        // enable the publish button anyway.\n        if (Array.isArray(revision.diff) && revision.diff.length || revision.documentType !== \"product\") {\n          return true;\n        }\n\n        // If all else fails, we will disable the button\n        return false;\n      });\n\n      // If even one revision has changes we should enable the publish button\n      return diffHasActualChanges.some((element) => {\n        return element === true;\n      });\n    }\n\n    // No revisions, no publishing\n    return false;\n  }\n\n  renderChanges() {\n    if (this.showDiffs) {\n      const diffs = this.props.revisions.map((revision) => {\n        return <SimpleDiff diff={revision.diff} key={revision._id} />;\n      });\n\n      return (\n        <div>\n          {diffs}\n        </div>\n      );\n    }\n    return null;\n  }\n\n  renderDeletionStatus() {\n    if (this.hasChanges) {\n      if (this.props.revisions[0].documentData.isDeleted) {\n        return (\n          <Button\n            label=\"Archived\"\n            onClick={this.handleRestore}\n            status=\"danger\"\n            i18nKeyLabel=\"app.archived\"\n          />\n        );\n      }\n    }\n\n    return null;\n  }\n\n  renderPublishButton() {\n    const buttonProps = {};\n\n    if (Array.isArray(this.props.documentIds) && this.props.documentIds.length > 1) {\n      buttonProps.label = \"Publish All\";\n      buttonProps.i18nKeyLabel = \"toolbar.publishAll\";\n    }\n\n    return (\n      <Button\n        bezelStyle=\"outline\"\n        disabled={this.hasChanges === false}\n        label=\"Publish\"\n        onClick={this.handlePublishClick}\n        status=\"success\"\n        tooltip={\"This product has changes that need to be published before they are visible to your customers.\"}\n        i18nKeyLabel=\"productDetailEdit.publish\"\n        {...buttonProps}\n      />\n    );\n  }\n\n  renderMoreOptionsButton() {\n    return (\n      <DropDownMenu\n        buttonElement={<IconButton icon={\"fa fa-ellipsis-v\"}/>}\n        handleMenuItemChange={this.handleAction}\n      >\n        <MenuItem label=\"Administrator\" value=\"administrator\" />\n        <MenuItem label=\"Customer\" value=\"customer\" />\n        <Divider />\n        <MenuItem\n          i18nKeyLabel=\"app.public\"\n          icon=\"fa fa-unlock\"\n          label=\"Public\"\n          selectLabel=\"Public\"\n          value=\"public\"\n        />\n        <MenuItem\n          i18nKeyLabel=\"app.private\"\n          label=\"Private\"\n          icon=\"fa fa-lock\"\n          selectLabel=\"Public\"\n          value=\"private\"\n        />\n        <Divider />\n        <MenuItem\n          disabled={this.hasChanges === false}\n          i18nKeyLabel=\"revisions.discardChanges\"\n          icon=\"fa fa-undo\"\n          label=\"Discard Changes\"\n          value=\"discard\"\n        />\n        <Divider />\n        <MenuItem\n          i18nKeyLabel=\"app.archive\"\n          icon=\"fa fa-trash-o\"\n          label=\"Archive\"\n          value=\"archive\"\n        />\n      </DropDownMenu>\n    );\n  }\n\n  renderViewControls() {\n    if (this.props.showViewAsControls) {\n      let tooltip = \"Private\";\n      let i18nKeyTooltip = \"app.private\";\n\n      if (this.isVisible === \"public\") {\n        tooltip = \"Public\";\n        i18nKeyTooltip = \"app.public\";\n      }\n\n      return (\n        <FlatButton\n          i18nKeyTooltip={i18nKeyTooltip}\n          icon=\"fa fa-eye-slash\"\n          onIcon=\"fa fa-eye\"\n          toggle={true}\n          tooltip={tooltip}\n          value=\"public\"\n          onValue=\"private\"\n          toggleOn={this.isVisible === \"public\"}\n          onToggle={this.handleVisibilityChange}\n        />\n      );\n    }\n\n    return null;\n  }\n\n  renderUndoButton() {\n    return (\n      <FlatButton\n        disabled={this.hasChanges === false}\n        tooltip=\"Discard Changes\"\n        i18nKeyTooltip=\"revisions.discardChanges\"\n        icon={\"fa fa-undo\"}\n        value=\"discard\"\n        onClick={this.handleAction}\n      />\n    );\n  }\n\n  renderArchiveButton() {\n    return (\n      <FlatButton\n        tooltip=\"Archive\"\n        i18nKeyTooltip=\"app.archive\"\n        icon={\"fa fa-archive\"}\n        value=\"archive\"\n        onClick={this.handleAction}\n      />\n    );\n  }\n\n  renderSettingsButton() {\n    return (\n      <FlatButton\n        icon={\"fa fa-cog\"}\n        value=\"settings\"\n        onClick={this.handleAction}\n      />\n    );\n  }\n\n  renderVisibilitySwitch() {\n    return (\n      <Switch\n        i18nKeyLabel={\"admin.dashboard.preview\"}\n        label={\"Preview\"}\n        checked={this.props.isPreview}\n        onChange={this.onViewContextChange}\n      />\n    );\n  }\n\n  renderAdminButton() {\n    return (\n      <FlatButton\n        onClick={() => {\n          Reaction.showActionView({\n            i18nKeyTite: \"dashboard.coreTitle\",\n            title: \"Dashboard\",\n            template: \"dashboardPackages\"\n          });\n        }}\n      >\n        <Icon style={{ fontSize: 24 }} icon=\"icon icon-reaction-logo\" />\n      </FlatButton>\n    );\n  }\n\n  renderAddButton() {\n    return (\n      <FlatButton\n        i18nKeyTooltip={\"app.shortcut.addProduct\"}\n        icon={\"fa fa-plus\"}\n        tooltip={\"Add Product\"}\n        onClick={this.props.onAddProduct}\n      />\n    );\n  }\n\n  render() {\n    if (this.props.isEnabled) {\n      return (\n        <ToolbarGroup lastChild={true}>\n          {this.renderDeletionStatus()}\n          {this.renderUndoButton()}\n          {this.renderArchiveButton()}\n          {this.renderViewControls()}\n          {this.renderPublishButton()}\n          {/* this.renderMoreOptionsButton() */}\n        </ToolbarGroup>\n      );\n    }\n\n    return null;\n  }\n}\n\nexport default Translatable()(PublishControls);\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/core/revisions/client/components/publishControls.js.map","sourceFileName":"/imports/plugins/core/revisions/client/components/publishControls.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"publishControls"},"ignored":false,"code":"var _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0,\n    Component = void 0,\n    PropTypes = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  },\n  PropTypes: function (v) {\n    PropTypes = v;\n  }\n}, 0);\nvar Button = void 0,\n    FlatButton = void 0,\n    IconButton = void 0,\n    Divider = void 0,\n    DropDownMenu = void 0,\n    MenuItem = void 0,\n    ToolbarGroup = void 0,\n    Switch = void 0,\n    Icon = void 0;\nmodule.importSync(\"/imports/plugins/core/ui/client/components\", {\n  Button: function (v) {\n    Button = v;\n  },\n  FlatButton: function (v) {\n    FlatButton = v;\n  },\n  IconButton: function (v) {\n    IconButton = v;\n  },\n  Divider: function (v) {\n    Divider = v;\n  },\n  DropDownMenu: function (v) {\n    DropDownMenu = v;\n  },\n  MenuItem: function (v) {\n    MenuItem = v;\n  },\n  ToolbarGroup: function (v) {\n    ToolbarGroup = v;\n  },\n  Switch: function (v) {\n    Switch = v;\n  },\n  Icon: function (v) {\n    Icon = v;\n  }\n}, 1);\nvar SimpleDiff = void 0;\nmodule.importSync(\"./simpleDiff\", {\n  \"default\": function (v) {\n    SimpleDiff = v;\n  }\n}, 2);\nvar Translatable = void 0;\nmodule.importSync(\"/imports/plugins/core/ui/client/providers\", {\n  Translatable: function (v) {\n    Translatable = v;\n  }\n}, 3);\nvar Reaction = void 0;\nmodule.importSync(\"/client/api\", {\n  Reaction: function (v) {\n    Reaction = v;\n  }\n}, 4);\n\nvar PublishControls = function (_Component) {\n  (0, _inherits3.default)(PublishControls, _Component);\n\n  function PublishControls(props) {\n    (0, _classCallCheck3.default)(this, PublishControls);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));\n\n    _this.handleVisibilityChange = function (event, value) {\n      if (_this.props.onVisibilityChange) {\n        var isDocumentVisible = false;\n\n        if (value === \"public\") {\n          isDocumentVisible = true;\n        }\n\n        _this.props.onVisibilityChange(event, isDocumentVisible, _this.props.documentIds);\n      }\n    };\n\n    _this.handleAction = function (event, value) {\n      if (_this.props.onAction) {\n        _this.props.onAction(event, value, _this.props.documentIds);\n      }\n    };\n\n    _this.onViewContextChange = function (event, isChecked) {\n      if (typeof _this.props.onViewContextChange === \"function\") {\n        _this.props.onViewContextChange(event, isChecked ? \"customer\" : \"administrator\");\n      }\n    };\n\n    _this.state = {\n      showDiffs: false\n    };\n    _this.handleToggleShowChanges = _this.handleToggleShowChanges.bind(_this);\n    _this.handlePublishClick = _this.handlePublishClick.bind(_this);\n    return _this;\n  }\n\n  PublishControls.prototype.handleToggleShowChanges = function () {\n    function handleToggleShowChanges() {\n      this.setState({\n        showDiffs: !this.state.showDiffs\n      });\n    }\n\n    return handleToggleShowChanges;\n  }();\n\n  PublishControls.prototype.handlePublishClick = function () {\n    function handlePublishClick() {\n      if (this.props.onPublishClick) {\n        this.props.onPublishClick(this.props.revisions);\n      }\n    }\n\n    return handlePublishClick;\n  }();\n\n  PublishControls.prototype.renderChanges = function () {\n    function renderChanges() {\n      if (this.showDiffs) {\n        var diffs = this.props.revisions.map(function (revision) {\n          return React.createElement(SimpleDiff, {\n            diff: revision.diff,\n            key: revision._id\n          });\n        });\n        return React.createElement(\n          \"div\",\n          null,\n          diffs\n        );\n      }\n\n      return null;\n    }\n\n    return renderChanges;\n  }();\n\n  PublishControls.prototype.renderDeletionStatus = function () {\n    function renderDeletionStatus() {\n      if (this.hasChanges) {\n        if (this.props.revisions[0].documentData.isDeleted) {\n          return React.createElement(Button, {\n            label: \"Archived\",\n            onClick: this.handleRestore,\n            status: \"danger\",\n            i18nKeyLabel: \"app.archived\"\n          });\n        }\n      }\n\n      return null;\n    }\n\n    return renderDeletionStatus;\n  }();\n\n  PublishControls.prototype.renderPublishButton = function () {\n    function renderPublishButton() {\n      var buttonProps = {};\n\n      if (Array.isArray(this.props.documentIds) && this.props.documentIds.length > 1) {\n        buttonProps.label = \"Publish All\";\n        buttonProps.i18nKeyLabel = \"toolbar.publishAll\";\n      }\n\n      return React.createElement(Button, (0, _extends3.default)({\n        bezelStyle: \"outline\",\n        disabled: this.hasChanges === false,\n        label: \"Publish\",\n        onClick: this.handlePublishClick,\n        status: \"success\",\n        tooltip: \"This product has changes that need to be published before they are visible to your customers.\",\n        i18nKeyLabel: \"productDetailEdit.publish\"\n      }, buttonProps));\n    }\n\n    return renderPublishButton;\n  }();\n\n  PublishControls.prototype.renderMoreOptionsButton = function () {\n    function renderMoreOptionsButton() {\n      return React.createElement(\n        DropDownMenu,\n        {\n          buttonElement: React.createElement(IconButton, {\n            icon: \"fa fa-ellipsis-v\"\n          }),\n          handleMenuItemChange: this.handleAction\n        },\n        React.createElement(MenuItem, {\n          label: \"Administrator\",\n          value: \"administrator\"\n        }),\n        React.createElement(MenuItem, {\n          label: \"Customer\",\n          value: \"customer\"\n        }),\n        React.createElement(Divider, null),\n        React.createElement(MenuItem, {\n          i18nKeyLabel: \"app.public\",\n          icon: \"fa fa-unlock\",\n          label: \"Public\",\n          selectLabel: \"Public\",\n          value: \"public\"\n        }),\n        React.createElement(MenuItem, {\n          i18nKeyLabel: \"app.private\",\n          label: \"Private\",\n          icon: \"fa fa-lock\",\n          selectLabel: \"Public\",\n          value: \"private\"\n        }),\n        React.createElement(Divider, null),\n        React.createElement(MenuItem, {\n          disabled: this.hasChanges === false,\n          i18nKeyLabel: \"revisions.discardChanges\",\n          icon: \"fa fa-undo\",\n          label: \"Discard Changes\",\n          value: \"discard\"\n        }),\n        React.createElement(Divider, null),\n        React.createElement(MenuItem, {\n          i18nKeyLabel: \"app.archive\",\n          icon: \"fa fa-trash-o\",\n          label: \"Archive\",\n          value: \"archive\"\n        })\n      );\n    }\n\n    return renderMoreOptionsButton;\n  }();\n\n  PublishControls.prototype.renderViewControls = function () {\n    function renderViewControls() {\n      if (this.props.showViewAsControls) {\n        var tooltip = \"Private\";\n        var i18nKeyTooltip = \"app.private\";\n\n        if (this.isVisible === \"public\") {\n          tooltip = \"Public\";\n          i18nKeyTooltip = \"app.public\";\n        }\n\n        return React.createElement(FlatButton, {\n          i18nKeyTooltip: i18nKeyTooltip,\n          icon: \"fa fa-eye-slash\",\n          onIcon: \"fa fa-eye\",\n          toggle: true,\n          tooltip: tooltip,\n          value: \"public\",\n          onValue: \"private\",\n          toggleOn: this.isVisible === \"public\",\n          onToggle: this.handleVisibilityChange\n        });\n      }\n\n      return null;\n    }\n\n    return renderViewControls;\n  }();\n\n  PublishControls.prototype.renderUndoButton = function () {\n    function renderUndoButton() {\n      return React.createElement(FlatButton, {\n        disabled: this.hasChanges === false,\n        tooltip: \"Discard Changes\",\n        i18nKeyTooltip: \"revisions.discardChanges\",\n        icon: \"fa fa-undo\",\n        value: \"discard\",\n        onClick: this.handleAction\n      });\n    }\n\n    return renderUndoButton;\n  }();\n\n  PublishControls.prototype.renderArchiveButton = function () {\n    function renderArchiveButton() {\n      return React.createElement(FlatButton, {\n        tooltip: \"Archive\",\n        i18nKeyTooltip: \"app.archive\",\n        icon: \"fa fa-archive\",\n        value: \"archive\",\n        onClick: this.handleAction\n      });\n    }\n\n    return renderArchiveButton;\n  }();\n\n  PublishControls.prototype.renderSettingsButton = function () {\n    function renderSettingsButton() {\n      return React.createElement(FlatButton, {\n        icon: \"fa fa-cog\",\n        value: \"settings\",\n        onClick: this.handleAction\n      });\n    }\n\n    return renderSettingsButton;\n  }();\n\n  PublishControls.prototype.renderVisibilitySwitch = function () {\n    function renderVisibilitySwitch() {\n      return React.createElement(Switch, {\n        i18nKeyLabel: \"admin.dashboard.preview\",\n        label: \"Preview\",\n        checked: this.props.isPreview,\n        onChange: this.onViewContextChange\n      });\n    }\n\n    return renderVisibilitySwitch;\n  }();\n\n  PublishControls.prototype.renderAdminButton = function () {\n    function renderAdminButton() {\n      return React.createElement(\n        FlatButton,\n        {\n          onClick: function () {\n            Reaction.showActionView({\n              i18nKeyTite: \"dashboard.coreTitle\",\n              title: \"Dashboard\",\n              template: \"dashboardPackages\"\n            });\n          }\n        },\n        React.createElement(Icon, {\n          style: {\n            fontSize: 24\n          },\n          icon: \"icon icon-reaction-logo\"\n        })\n      );\n    }\n\n    return renderAdminButton;\n  }();\n\n  PublishControls.prototype.renderAddButton = function () {\n    function renderAddButton() {\n      return React.createElement(FlatButton, {\n        i18nKeyTooltip: \"app.shortcut.addProduct\",\n        icon: \"fa fa-plus\",\n        tooltip: \"Add Product\",\n        onClick: this.props.onAddProduct\n      });\n    }\n\n    return renderAddButton;\n  }();\n\n  PublishControls.prototype.render = function () {\n    function render() {\n      if (this.props.isEnabled) {\n        return React.createElement(\n          ToolbarGroup,\n          {\n            lastChild: true\n          },\n          this.renderDeletionStatus(),\n          this.renderUndoButton(),\n          this.renderArchiveButton(),\n          this.renderViewControls(),\n          this.renderPublishButton()\n        );\n      }\n\n      return null;\n    }\n\n    return render;\n  }();\n\n  (0, _createClass3.default)(PublishControls, [{\n    key: \"showChangesButtonLabel\",\n    get: function () {\n      if (!this.showDiffs) {\n        return \"Show Changes\";\n      }\n\n      return \"Hide Changes\";\n    }\n  }, {\n    key: \"showChangesButtoni18nKeyLabel\",\n    get: function () {\n      if (!this.showDiffs) {\n        return \"app.showChanges\";\n      }\n\n      return \"app.hideChanges\";\n    }\n  }, {\n    key: \"revisionIds\",\n    get: function () {\n      if (this.hasRevisions) {\n        return this.props.revisions.map(function (revision) {\n          return revision._id;\n        });\n      }\n\n      return false;\n    }\n  }, {\n    key: \"hasRevisions\",\n    get: function () {\n      return Array.isArray(this.props.revisions) && this.props.revisions.length;\n    }\n  }, {\n    key: \"diffs\",\n    get: function () {\n      return this.props.revisions;\n    }\n  }, {\n    key: \"showDiffs\",\n    get: function () {\n      return this.diffs && this.state.showDiffs;\n    }\n  }, {\n    key: \"isVisible\",\n    get: function () {\n      if (Array.isArray(this.props.revisions) && this.props.revisions.length) {\n        var primaryRevision = this.props.revisions[0];\n\n        if (primaryRevision.documentData.isVisible) {\n          return \"public\";\n        }\n      } else if (Array.isArray(this.props.documents) && this.props.documents.length) {\n        var primaryDocument = this.props.documents[0];\n\n        if (primaryDocument.isVisible) {\n          return \"public\";\n        }\n      }\n\n      return \"private\";\n    } /**\n       * Getter hasChanges\n       * @return {Boolean} one or more revision has changes\n       */\n  }, {\n    key: \"hasChanges\",\n    get: function () {\n      // Verify we even have any revision at all\n      if (this.hasRevisions) {\n        // Loop through all revisions to determine if they have changes\n        var diffHasActualChanges = this.props.revisions.map(function (revision) {\n          // We probably do have chnages to publish\n          // Note: Sometimes \"updatedAt\" will cause false positives, but just incase, lets\n          // enable the publish button anyway.\n          if (Array.isArray(revision.diff) && revision.diff.length || revision.documentType !== \"product\") {\n            return true;\n          } // If all else fails, we will disable the button\n\n\n          return false;\n        }); // If even one revision has changes we should enable the publish button\n\n        return diffHasActualChanges.some(function (element) {\n          return element === true;\n        });\n      } // No revisions, no publishing\n\n\n      return false;\n    }\n  }]);\n  return PublishControls;\n}(Component);\n\nPublishControls.propTypes = {\n  documentIds: PropTypes.arrayOf(PropTypes.string),\n  documents: PropTypes.arrayOf(PropTypes.object),\n  isEnabled: PropTypes.bool,\n  isPreview: PropTypes.bool,\n  onAction: PropTypes.func,\n  onAddProduct: PropTypes.func,\n  onPublishClick: PropTypes.func,\n  onViewContextChange: PropTypes.func,\n  onVisibilityChange: PropTypes.func,\n  revisions: PropTypes.arrayOf(PropTypes.object),\n  showViewAsControls: PropTypes.bool,\n  translation: PropTypes.shape({\n    lang: PropTypes.string\n  })\n};\nPublishControls.defaultProps = {\n  showViewAsControls: true\n};\nmodule.export(\"default\", exports.default = Translatable()(PublishControls));","map":{"version":3,"sources":["/imports/plugins/core/revisions/client/components/publishControls.js"],"names":["React","Component","PropTypes","Button","FlatButton","IconButton","Divider","DropDownMenu","MenuItem","ToolbarGroup","Switch","Icon","SimpleDiff","Translatable","Reaction","PublishControls","propTypes","documentIds","arrayOf","string","documents","object","isEnabled","bool","isPreview","onAction","func","onAddProduct","onPublishClick","onViewContextChange","onVisibilityChange","revisions","showViewAsControls","translation","shape","lang","defaultProps","constructor","props","state","showDiffs","handleToggleShowChanges","bind","handlePublishClick","setState","handleVisibilityChange","event","value","isDocumentVisible","handleAction","isChecked","showChangesButtonLabel","showChangesButtoni18nKeyLabel","revisionIds","hasRevisions","map","revision","_id","Array","isArray","length","diffs","isVisible","primaryRevision","documentData","primaryDocument","hasChanges","diffHasActualChanges","diff","documentType","some","element","renderChanges","renderDeletionStatus","isDeleted","handleRestore","renderPublishButton","buttonProps","label","i18nKeyLabel","renderMoreOptionsButton","renderViewControls","tooltip","i18nKeyTooltip","renderUndoButton","renderArchiveButton","renderSettingsButton","renderVisibilitySwitch","renderAdminButton","showActionView","i18nKeyTite","title","template","fontSize","renderAddButton","render"],"mappings":"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","file":"/imports/plugins/core/revisions/client/components/publishControls.js.map","sourcesContent":["import React, { Component, PropTypes } from \"react\";\nimport {\n  Button,\n  FlatButton,\n  IconButton,\n  Divider,\n  DropDownMenu,\n  MenuItem,\n  ToolbarGroup,\n  Switch,\n  Icon\n} from \"/imports/plugins/core/ui/client/components\";\nimport SimpleDiff from \"./simpleDiff\";\nimport { Translatable } from \"/imports/plugins/core/ui/client/providers\";\n\n/** TMP **/\nimport { Reaction } from \"/client/api\";\n\nclass PublishControls extends Component {\n  static propTypes = {\n    documentIds: PropTypes.arrayOf(PropTypes.string),\n    documents: PropTypes.arrayOf(PropTypes.object),\n    isEnabled: PropTypes.bool,\n    isPreview: PropTypes.bool,\n    onAction: PropTypes.func,\n    onAddProduct: PropTypes.func,\n    onPublishClick: PropTypes.func,\n    onViewContextChange: PropTypes.func,\n    onVisibilityChange: PropTypes.func,\n    revisions: PropTypes.arrayOf(PropTypes.object),\n    showViewAsControls: PropTypes.bool,\n    translation: PropTypes.shape({\n      lang: PropTypes.string\n    })\n  }\n\n  static defaultProps = {\n    showViewAsControls: true\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showDiffs: false\n    };\n\n    this.handleToggleShowChanges = this.handleToggleShowChanges.bind(this);\n    this.handlePublishClick = this.handlePublishClick.bind(this);\n  }\n\n  handleToggleShowChanges() {\n    this.setState({\n      showDiffs: !this.state.showDiffs\n    });\n  }\n\n  handlePublishClick() {\n    if (this.props.onPublishClick) {\n      this.props.onPublishClick(this.props.revisions);\n    }\n  }\n\n  handleVisibilityChange = (event, value) => {\n    if (this.props.onVisibilityChange) {\n      let isDocumentVisible = false;\n\n      if (value === \"public\") {\n        isDocumentVisible = true;\n      }\n\n      this.props.onVisibilityChange(event, isDocumentVisible, this.props.documentIds);\n    }\n  }\n\n  handleAction = (event, value) => {\n    if (this.props.onAction) {\n      this.props.onAction(event, value, this.props.documentIds);\n    }\n  }\n\n  onViewContextChange = (event, isChecked) => {\n    if (typeof this.props.onViewContextChange === \"function\") {\n      this.props.onViewContextChange(event, isChecked ? \"customer\" : \"administrator\");\n    }\n  }\n\n  get showChangesButtonLabel() {\n    if (!this.showDiffs) {\n      return \"Show Changes\";\n    }\n\n    return \"Hide Changes\";\n  }\n\n  get showChangesButtoni18nKeyLabel() {\n    if (!this.showDiffs) {\n      return \"app.showChanges\";\n    }\n\n    return \"app.hideChanges\";\n  }\n\n  get revisionIds() {\n    if (this.hasRevisions) {\n      return this.props.revisions.map(revision => revision._id);\n    }\n    return false;\n  }\n\n  get hasRevisions() {\n    return Array.isArray(this.props.revisions) && this.props.revisions.length;\n  }\n\n  get diffs() {\n    return this.props.revisions;\n  }\n\n  get showDiffs() {\n    return this.diffs && this.state.showDiffs;\n  }\n\n  get isVisible() {\n    if (Array.isArray(this.props.revisions) && this.props.revisions.length) {\n      const primaryRevision = this.props.revisions[0];\n\n      if (primaryRevision.documentData.isVisible) {\n        return \"public\";\n      }\n    } else if (Array.isArray(this.props.documents) && this.props.documents.length) {\n      const primaryDocument = this.props.documents[0];\n\n      if (primaryDocument.isVisible) {\n        return \"public\";\n      }\n    }\n\n    return \"private\";\n  }\n\n  /**\n   * Getter hasChanges\n   * @return {Boolean} one or more revision has changes\n   */\n  get hasChanges() {\n    // Verify we even have any revision at all\n    if (this.hasRevisions) {\n      // Loop through all revisions to determine if they have changes\n      const diffHasActualChanges = this.props.revisions.map((revision) => {\n        // We probably do have chnages to publish\n        // Note: Sometimes \"updatedAt\" will cause false positives, but just incase, lets\n        // enable the publish button anyway.\n        if (Array.isArray(revision.diff) && revision.diff.length || revision.documentType !== \"product\") {\n          return true;\n        }\n\n        // If all else fails, we will disable the button\n        return false;\n      });\n\n      // If even one revision has changes we should enable the publish button\n      return diffHasActualChanges.some((element) => {\n        return element === true;\n      });\n    }\n\n    // No revisions, no publishing\n    return false;\n  }\n\n  renderChanges() {\n    if (this.showDiffs) {\n      const diffs = this.props.revisions.map((revision) => {\n        return <SimpleDiff diff={revision.diff} key={revision._id} />;\n      });\n\n      return (\n        <div>\n          {diffs}\n        </div>\n      );\n    }\n    return null;\n  }\n\n  renderDeletionStatus() {\n    if (this.hasChanges) {\n      if (this.props.revisions[0].documentData.isDeleted) {\n        return (\n          <Button\n            label=\"Archived\"\n            onClick={this.handleRestore}\n            status=\"danger\"\n            i18nKeyLabel=\"app.archived\"\n          />\n        );\n      }\n    }\n\n    return null;\n  }\n\n  renderPublishButton() {\n    const buttonProps = {};\n\n    if (Array.isArray(this.props.documentIds) && this.props.documentIds.length > 1) {\n      buttonProps.label = \"Publish All\";\n      buttonProps.i18nKeyLabel = \"toolbar.publishAll\";\n    }\n\n    return (\n      <Button\n        bezelStyle=\"outline\"\n        disabled={this.hasChanges === false}\n        label=\"Publish\"\n        onClick={this.handlePublishClick}\n        status=\"success\"\n        tooltip={\"This product has changes that need to be published before they are visible to your customers.\"}\n        i18nKeyLabel=\"productDetailEdit.publish\"\n        {...buttonProps}\n      />\n    );\n  }\n\n  renderMoreOptionsButton() {\n    return (\n      <DropDownMenu\n        buttonElement={<IconButton icon={\"fa fa-ellipsis-v\"}/>}\n        handleMenuItemChange={this.handleAction}\n      >\n        <MenuItem label=\"Administrator\" value=\"administrator\" />\n        <MenuItem label=\"Customer\" value=\"customer\" />\n        <Divider />\n        <MenuItem\n          i18nKeyLabel=\"app.public\"\n          icon=\"fa fa-unlock\"\n          label=\"Public\"\n          selectLabel=\"Public\"\n          value=\"public\"\n        />\n        <MenuItem\n          i18nKeyLabel=\"app.private\"\n          label=\"Private\"\n          icon=\"fa fa-lock\"\n          selectLabel=\"Public\"\n          value=\"private\"\n        />\n        <Divider />\n        <MenuItem\n          disabled={this.hasChanges === false}\n          i18nKeyLabel=\"revisions.discardChanges\"\n          icon=\"fa fa-undo\"\n          label=\"Discard Changes\"\n          value=\"discard\"\n        />\n        <Divider />\n        <MenuItem\n          i18nKeyLabel=\"app.archive\"\n          icon=\"fa fa-trash-o\"\n          label=\"Archive\"\n          value=\"archive\"\n        />\n      </DropDownMenu>\n    );\n  }\n\n  renderViewControls() {\n    if (this.props.showViewAsControls) {\n      let tooltip = \"Private\";\n      let i18nKeyTooltip = \"app.private\";\n\n      if (this.isVisible === \"public\") {\n        tooltip = \"Public\";\n        i18nKeyTooltip = \"app.public\";\n      }\n\n      return (\n        <FlatButton\n          i18nKeyTooltip={i18nKeyTooltip}\n          icon=\"fa fa-eye-slash\"\n          onIcon=\"fa fa-eye\"\n          toggle={true}\n          tooltip={tooltip}\n          value=\"public\"\n          onValue=\"private\"\n          toggleOn={this.isVisible === \"public\"}\n          onToggle={this.handleVisibilityChange}\n        />\n      );\n    }\n\n    return null;\n  }\n\n  renderUndoButton() {\n    return (\n      <FlatButton\n        disabled={this.hasChanges === false}\n        tooltip=\"Discard Changes\"\n        i18nKeyTooltip=\"revisions.discardChanges\"\n        icon={\"fa fa-undo\"}\n        value=\"discard\"\n        onClick={this.handleAction}\n      />\n    );\n  }\n\n  renderArchiveButton() {\n    return (\n      <FlatButton\n        tooltip=\"Archive\"\n        i18nKeyTooltip=\"app.archive\"\n        icon={\"fa fa-archive\"}\n        value=\"archive\"\n        onClick={this.handleAction}\n      />\n    );\n  }\n\n  renderSettingsButton() {\n    return (\n      <FlatButton\n        icon={\"fa fa-cog\"}\n        value=\"settings\"\n        onClick={this.handleAction}\n      />\n    );\n  }\n\n  renderVisibilitySwitch() {\n    return (\n      <Switch\n        i18nKeyLabel={\"admin.dashboard.preview\"}\n        label={\"Preview\"}\n        checked={this.props.isPreview}\n        onChange={this.onViewContextChange}\n      />\n    );\n  }\n\n  renderAdminButton() {\n    return (\n      <FlatButton\n        onClick={() => {\n          Reaction.showActionView({\n            i18nKeyTite: \"dashboard.coreTitle\",\n            title: \"Dashboard\",\n            template: \"dashboardPackages\"\n          });\n        }}\n      >\n        <Icon style={{ fontSize: 24 }} icon=\"icon icon-reaction-logo\" />\n      </FlatButton>\n    );\n  }\n\n  renderAddButton() {\n    return (\n      <FlatButton\n        i18nKeyTooltip={\"app.shortcut.addProduct\"}\n        icon={\"fa fa-plus\"}\n        tooltip={\"Add Product\"}\n        onClick={this.props.onAddProduct}\n      />\n    );\n  }\n\n  render() {\n    if (this.props.isEnabled) {\n      return (\n        <ToolbarGroup lastChild={true}>\n          {this.renderDeletionStatus()}\n          {this.renderUndoButton()}\n          {this.renderArchiveButton()}\n          {this.renderViewControls()}\n          {this.renderPublishButton()}\n          {/* this.renderMoreOptionsButton() */}\n        </ToolbarGroup>\n      );\n    }\n\n    return null;\n  }\n}\n\nexport default Translatable()(PublishControls);\n"]},"hash":"4d0f44ca97819419d2ef2125f30803a3742d3832"}
