{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"/lib/collections","imported":["Logs"],"specifiers":[{"kind":"named","imported":"Logs","local":"Logs"}]},{"source":"/server/api","imported":["Reaction"],"specifiers":[{"kind":"named","imported":"Reaction","local":"Reaction"}]}],"exports":{"exported":["writeToLog","logType","logLevel","logData","source"],"specifiers":[{"kind":"local","local":"writeToLog","exported":"writeToLog"},{"kind":"local","local":"logType","exported":"logType"},{"kind":"local","local":"logLevel","exported":"logLevel"},{"kind":"local","local":"logData","exported":"logData"},{"kind":"local","local":"source","exported":"source"}]}}},"options":{"filename":"/imports/plugins/core/logging/server/methods.js","filenameRelative":"/imports/plugins/core/logging/server/methods.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/core/logging/server/methods.js"],"names":["Meteor","Logs","Reaction","writeToLog","logType","logLevel","logData","source","check","String","Object","logEntry","shopId","getShopId","data","level","insert","logError","Roles","userIsInRole","userId","logWarning","methods"],"mappings":"AAAA,OAAS;AAAT,AAAuB;WAAvB;;;;;;;;;;;;;;;;;;;;GACA,AAAS,AAAY,AACrB,AAAS,AAAgB,AAEzB,AAAO,AAAS,AAAW,AAAS,AAAU,AAAS,AAAS,AAAU,AACxE;;AAAA,AAAM,SAAN,AAAe;AACf;QAAA,AAAM,SAAN,AAAgB,AAChB;QAAA,AAAM,AAAS,UAAf,AAEA;QAAM,SAAW,AACf,AAAS,AACT;MAAQ;AACF,aAHS,AAIf;AAAO,YAJQ,SAKf;UALF,AAAiB,AAKP;WAEV;AAAK,YAAL,AAAY,AACb;AARkB,AAEP,AAAS,AACjB;cAOJ;AAAA,AAAS,AAAS,AAAS,AAAS,AAClC,AAAM,AAAS;;AACf,AAAM,SAAN,AAAe,SAAf;iBACA;AAAI,QAAM,SAAV,AAAI,AAAmB,AAAK,AAAQ,AAAC,AAAS,AAAW,AACvD;;YAAA,AAAW,AAAS,kBAApB,AAA6B,SAA7B,oBACD;iCACF;;AAED,AAAS,AAAW,AAAS,AAAS;;AACpC,AAAM,SAAN,AAAe,WAAf,kBACA;QAAA,AAAM,SAAN,AAAe;iBACf;;MAAI,MAAA,AAAM,aAAa,KAAnB,AAAwB,QAAQ,CAAA,AAAC,SAArC,AAAI,AAAgC,AAAU,WAAW,AACvD;eAAA,AAAW,SAAX,AAAoB,QAApB,AAA4B,AAC7B;AACF;;;AAED,OAAA,AAAO;sBAAQ,AACO,AACpB;wBAFF,AAAe,AAES;AAFT,AACb","file":"/imports/plugins/core/logging/server/methods.js.map","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport { Logs } from \"/lib/collections\";\nimport { Reaction } from \"/server/api\";\n\nexport function writeToLog(logType, logLevel, logData, source = \"client\") {\n  check(logType, String);\n  check(logLevel, String);\n  check(logData, Object);\n\n  const logEntry = {\n    logType: logType,\n    shopId: Reaction.getShopId(),\n    data: logData,\n    level: logLevel,\n    source: source\n  };\n  Logs.insert(logEntry);\n}\n\nfunction logError(logType, logData) {\n  check(logType, String);\n  check(logData, Object);\n  if (Roles.userIsInRole(this.userId, [\"admin\", \"owner\"])) {\n    writeToLog(logType, \"error\", logData);\n  }\n}\n\nfunction logWarning(logType, logData) {\n  check(logType, String);\n  check(logData, Object);\n  if (Roles.userIsInRole(this.userId, [\"admin\", \"owner\"])) {\n    writeToLog(logType, \"warn\", logData);\n  }\n}\n\nMeteor.methods({\n  \"logging/logError\": logError,\n  \"logging/logWarning\": logWarning\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/core/logging/server/methods.js.map","sourceFileName":"/imports/plugins/core/logging/server/methods.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"methods"},"ignored":false,"code":"module.export({\n  writeToLog: function () {\n    return writeToLog;\n  }\n});\nvar Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Logs = void 0;\nmodule.importSync(\"/lib/collections\", {\n  Logs: function (v) {\n    Logs = v;\n  }\n}, 1);\nvar Reaction = void 0;\nmodule.importSync(\"/server/api\", {\n  Reaction: function (v) {\n    Reaction = v;\n  }\n}, 2);\n\nfunction writeToLog(logType, logLevel, logData) {\n  var source = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"client\";\n  check(logType, String);\n  check(logLevel, String);\n  check(logData, Object);\n  var logEntry = {\n    logType: logType,\n    shopId: Reaction.getShopId(),\n    data: logData,\n    level: logLevel,\n    source: source\n  };\n  Logs.insert(logEntry);\n}\n\nfunction logError(logType, logData) {\n  check(logType, String);\n  check(logData, Object);\n\n  if (Roles.userIsInRole(this.userId, [\"admin\", \"owner\"])) {\n    writeToLog(logType, \"error\", logData);\n  }\n}\n\nfunction logWarning(logType, logData) {\n  check(logType, String);\n  check(logData, Object);\n\n  if (Roles.userIsInRole(this.userId, [\"admin\", \"owner\"])) {\n    writeToLog(logType, \"warn\", logData);\n  }\n}\n\nMeteor.methods({\n  \"logging/logError\": logError,\n  \"logging/logWarning\": logWarning\n});","map":{"version":3,"sources":["/imports/plugins/core/logging/server/methods.js"],"names":["Meteor","Logs","Reaction","writeToLog","logType","logLevel","logData","source","check","String","Object","logEntry","shopId","getShopId","data","level","insert","logError","Roles","userIsInRole","userId","logWarning","methods"],"mappings":"AAAA,OAAS;AAAT,AAAuB;WAAvB;;;;;;;;;;;;;;;;;;;;GACA,AAAS,AAAY,AACrB,AAAS,AAAgB,AAEzB,AAAO,AAAS,AAAW,AAAS,AAAU,AAAS,AAAS,AAAU,AACxE;;AAAA,AAAM,SAAN,AAAe;AACf;QAAA,AAAM,SAAN,AAAgB,AAChB;QAAA,AAAM,AAAS,UAAf,AAEA;QAAM,SAAW,AACf,AAAS,AACT;MAAQ;AACF,aAHS,AAIf;AAAO,YAJQ,SAKf;UALF,AAAiB,AAKP;WAEV;AAAK,YAAL,AAAY,AACb;AARkB,AAEP,AAAS,AACjB;cAOJ;AAAA,AAAS,AAAS,AAAS,AAAS,AAClC,AAAM,AAAS;;AACf,AAAM,SAAN,AAAe,SAAf;iBACA;AAAI,QAAM,SAAV,AAAI,AAAmB,AAAK,AAAQ,AAAC,AAAS,AAAW,AACvD;;YAAA,AAAW,AAAS,kBAApB,AAA6B,SAA7B,oBACD;iCACF;;AAED,AAAS,AAAW,AAAS,AAAS;;AACpC,AAAM,SAAN,AAAe,WAAf,kBACA;QAAA,AAAM,SAAN,AAAe;iBACf;;MAAI,MAAA,AAAM,aAAa,KAAnB,AAAwB,QAAQ,CAAA,AAAC,SAArC,AAAI,AAAgC,AAAU,WAAW,AACvD;eAAA,AAAW,SAAX,AAAoB,QAApB,AAA4B,AAC7B;AACF;;;AAED,OAAA,AAAO;sBAAQ,AACO,AACpB;wBAFF,AAAe,AAES;AAFT,AACb","file":"/imports/plugins/core/logging/server/methods.js.map","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport { Logs } from \"/lib/collections\";\nimport { Reaction } from \"/server/api\";\n\nexport function writeToLog(logType, logLevel, logData, source = \"client\") {\n  check(logType, String);\n  check(logLevel, String);\n  check(logData, Object);\n\n  const logEntry = {\n    logType: logType,\n    shopId: Reaction.getShopId(),\n    data: logData,\n    level: logLevel,\n    source: source\n  };\n  Logs.insert(logEntry);\n}\n\nfunction logError(logType, logData) {\n  check(logType, String);\n  check(logData, Object);\n  if (Roles.userIsInRole(this.userId, [\"admin\", \"owner\"])) {\n    writeToLog(logType, \"error\", logData);\n  }\n}\n\nfunction logWarning(logType, logData) {\n  check(logType, String);\n  check(logData, Object);\n  if (Roles.userIsInRole(this.userId, [\"admin\", \"owner\"])) {\n    writeToLog(logType, \"warn\", logData);\n  }\n}\n\nMeteor.methods({\n  \"logging/logError\": logError,\n  \"logging/logWarning\": logWarning\n});\n"]},"hash":"37a881e79cdb705d54330ba7d4643cd1c1b0ab5f"}
