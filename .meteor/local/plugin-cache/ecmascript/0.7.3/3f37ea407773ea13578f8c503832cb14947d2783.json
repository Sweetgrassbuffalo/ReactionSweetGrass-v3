{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","createClass","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component","PropTypes"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"},{"kind":"named","imported":"PropTypes","local":"PropTypes"}]},{"source":"/lib/api/compose","imported":["composeWithTracker"],"specifiers":[{"kind":"named","imported":"composeWithTracker","local":"composeWithTracker"}]},{"source":"../components/settings","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"SettingsComponent"}]},{"source":"/lib/collections","imported":["Packages"],"specifiers":[{"kind":"named","imported":"Packages","local":"Packages"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"/imports/plugins/core/ui/client/providers/translationProvider","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"TranslationProvider"}]}],"exports":{"exported":["handlePublishClick","revisions"],"specifiers":[{"kind":"local","local":"handlePublishClick","exported":"handlePublishClick"},{"kind":"local","local":"revisions","exported":"revisions"}]}}},"options":{"filename":"/imports/plugins/core/revisions/client/containers/settingsContainer.js","filenameRelative":"/imports/plugins/core/revisions/client/containers/settingsContainer.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/core/revisions/client/containers/settingsContainer.js"],"names":["React","Component","PropTypes","composeWithTracker","SettingsComponent","Packages","Meteor","TranslationProvider","RevisionSettingsContainer","constructor","props","state","settings","packageInfo","componentWillReceiveProps","nextProps","setState","handleUpdateSettings","call","render","propTypes","object","handlePublishClick","revisions","Array","isArray","documentIds","map","revision","documentId","composer","onData","findOne","name"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAA,AAAO;AAAS;AAAhB,WAAA,AAA4C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAC5C,AAAS,AAA0B,AACnC,AAAO,AAAuB,AAC9B,AAAS,AAAgB,AACzB,AAAS,AAAc,AACvB,AAAO,AAAyB,AAGhC,AAAM,AAAkC,AAAU,AAChD;;IAAA,AAAY,AAAO;;;AACX,qCAAN;AAEA;;+DAAK,sBAAL,AAAa,AACX,AAAU,AAAK,AAAM,AAAY;;qDAerB;AAAd,AAA4B,YAAM;;qBAChC;eAAA,AAAO,KAAP,AAAY,6BAAZ,AAAyC,AAC1C;AAFD,AAGD;AAvB+C,AAmBhD,AAMA;;AArBE;wCAKF;AAFC;;AAED,AAA0B,AAAW,AACnC,AAAK,AAAS,AACZ;;sCAAU,AAAU;uCAAV,AAAsB,WADpB;AAAd;wCAKF;AAFC;AAED,AAAI,AAAW,AACb,AAAO,AAAK,AAAM,AACnB;;;;;AAaD,AAAS,AACP;;;;;sBACA;AACE,AAAC;AACC,AAAC;AACC,AAAC,AACC,AAAiB,AAAC,AAAK,AACvB,AAAS,AAAC,AAAK;;AAEnB;AAAA,AAAE,AACJ,AAAE;;8BARJ,AAQE,AAEH;;2BA1C+C,AA6ClD,AAA0B,AAAY,AACpC,AAAa,AAAU;;;;AAGzB,AAAO,AAAS,AAAmB,AAAW,AAC5C,AAAI,AAAM,AAAQ,AAAY;;;;;;;;wBA/B9B;AAAuB,AAAC,AAAa,AACnC,AAAK,AAAS,AAAE;;;EAlBhB;;AAiDA,AAAM,AAAc,0BAAA,AAAU;AACrB,eAAS,UADlB,AAAoB,AAClB,AACD,AACD,AAAO,AAAK,AAAqB,AAClC;AAJmC,AAAC,AAAa,AAC9C;;uCAIL;;wDAED;AAAS,aAAT,AAAkB,SAAlB,AAAyB,AAAQ,AAC/B;AAAM,AAAc,AAAS,AAAQ,AACnC;AAAM,qCAD6B;AAArC,AAAoB,AAIpB;AAAA,AAAO,AAAM,AACX;;AADF,AAAa,iCAGd;;UAED,AAAe,AAAmB,AAAU;;;;;;;yBA5E5C,AAA2B","file":"/imports/plugins/core/revisions/client/containers/settingsContainer.js.map","sourcesContent":["import React, { Component, PropTypes } from \"react\";\nimport { composeWithTracker } from \"/lib/api/compose\";\nimport SettingsComponent from \"../components/settings\";\nimport { Packages } from \"/lib/collections\";\nimport { Meteor } from \"meteor/meteor\";\nimport TranslationProvider from \"/imports/plugins/core/ui/client/providers/translationProvider\";\n\n\nclass RevisionSettingsContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      settings: this.props.packageInfo.settings\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      settings: nextProps.packageInfo.settings\n    });\n  }\n\n  get settings() {\n    return this.state.settings;\n  }\n\n  handleUpdateSettings = (settings) => {\n    this.setState({ settings }, () => {\n      Meteor.call(\"revisions/settings/update\", settings);\n    });\n  }\n\n  /**\n   * Publish container is a stateless container component connected to Meteor data source.\n   * @param  {Object} props Component props\n   * @return {PropTypes.node} react node\n   */\n  render() {\n    // console.log(this.props.packageInfo);\n    return (\n      <div>\n        <TranslationProvider>\n          <SettingsComponent\n            onUpdateSettings={this.handleUpdateSettings}\n            settings={this.settings}\n          />\n        </TranslationProvider>\n      </div>\n    );\n  }\n}\n\nRevisionSettingsContainer.propTypes = {\n  packageInfo: PropTypes.object\n};\n\nexport function handlePublishClick(revisions) {\n  if (Array.isArray(revisions)) {\n    const documentIds = revisions.map((revision) => {\n      return revision.documentId;\n    });\n    Meteor.call(\"revisions/publish\", documentIds);\n  }\n}\n\nfunction composer(props, onData) {\n  const packageInfo = Packages.findOne({\n    name: \"reaction-revisions\"\n  });\n\n  onData(null, {\n    packageInfo\n  });\n}\n\nexport default composeWithTracker(composer)(RevisionSettingsContainer);\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/core/revisions/client/containers/settingsContainer.js.map","sourceFileName":"/imports/plugins/core/revisions/client/containers/settingsContainer.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"settingsContainer"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.export({\n  handlePublishClick: function () {\n    return handlePublishClick;\n  }\n});\nvar React = void 0,\n    Component = void 0,\n    PropTypes = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  },\n  PropTypes: function (v) {\n    PropTypes = v;\n  }\n}, 0);\nvar composeWithTracker = void 0;\nmodule.importSync(\"/lib/api/compose\", {\n  composeWithTracker: function (v) {\n    composeWithTracker = v;\n  }\n}, 1);\nvar SettingsComponent = void 0;\nmodule.importSync(\"../components/settings\", {\n  \"default\": function (v) {\n    SettingsComponent = v;\n  }\n}, 2);\nvar Packages = void 0;\nmodule.importSync(\"/lib/collections\", {\n  Packages: function (v) {\n    Packages = v;\n  }\n}, 3);\nvar Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 4);\nvar TranslationProvider = void 0;\nmodule.importSync(\"/imports/plugins/core/ui/client/providers/translationProvider\", {\n  \"default\": function (v) {\n    TranslationProvider = v;\n  }\n}, 5);\n\nvar RevisionSettingsContainer = function (_Component) {\n  (0, _inherits3.default)(RevisionSettingsContainer, _Component);\n\n  function RevisionSettingsContainer(props) {\n    (0, _classCallCheck3.default)(this, RevisionSettingsContainer);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));\n\n    _this.handleUpdateSettings = function (settings) {\n      _this.setState({\n        settings: settings\n      }, function () {\n        Meteor.call(\"revisions/settings/update\", settings);\n      });\n    };\n\n    _this.state = {\n      settings: _this.props.packageInfo.settings\n    };\n    return _this;\n  }\n\n  RevisionSettingsContainer.prototype.componentWillReceiveProps = function () {\n    function componentWillReceiveProps(nextProps) {\n      this.setState({\n        settings: nextProps.packageInfo.settings\n      });\n    }\n\n    return componentWillReceiveProps;\n  }();\n\n  /**\n   * Publish container is a stateless container component connected to Meteor data source.\n   * @param  {Object} props Component props\n   * @return {PropTypes.node} react node\n   */RevisionSettingsContainer.prototype.render = function () {\n    function render() {\n      // console.log(this.props.packageInfo);\n      return React.createElement(\n        \"div\",\n        null,\n        React.createElement(\n          TranslationProvider,\n          null,\n          React.createElement(SettingsComponent, {\n            onUpdateSettings: this.handleUpdateSettings,\n            settings: this.settings\n          })\n        )\n      );\n    }\n\n    return render;\n  }();\n\n  (0, _createClass3.default)(RevisionSettingsContainer, [{\n    key: \"settings\",\n    get: function () {\n      return this.state.settings;\n    }\n  }]);\n  return RevisionSettingsContainer;\n}(Component);\n\nRevisionSettingsContainer.propTypes = {\n  packageInfo: PropTypes.object\n};\n\nfunction handlePublishClick(revisions) {\n  if (Array.isArray(revisions)) {\n    var documentIds = revisions.map(function (revision) {\n      return revision.documentId;\n    });\n    Meteor.call(\"revisions/publish\", documentIds);\n  }\n}\n\nfunction composer(props, onData) {\n  var packageInfo = Packages.findOne({\n    name: \"reaction-revisions\"\n  });\n  onData(null, {\n    packageInfo: packageInfo\n  });\n}\n\nmodule.export(\"default\", exports.default = composeWithTracker(composer)(RevisionSettingsContainer));","map":{"version":3,"sources":["/imports/plugins/core/revisions/client/containers/settingsContainer.js"],"names":["React","Component","PropTypes","composeWithTracker","SettingsComponent","Packages","Meteor","TranslationProvider","RevisionSettingsContainer","constructor","props","state","settings","packageInfo","componentWillReceiveProps","nextProps","setState","handleUpdateSettings","call","render","propTypes","object","handlePublishClick","revisions","Array","isArray","documentIds","map","revision","documentId","composer","onData","findOne","name"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAA,AAAO;AAAS;AAAhB,WAAA,AAA4C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAC5C,AAAS,AAA0B,AACnC,AAAO,AAAuB,AAC9B,AAAS,AAAgB,AACzB,AAAS,AAAc,AACvB,AAAO,AAAyB,AAGhC,AAAM,AAAkC,AAAU,AAChD;;IAAA,AAAY,AAAO;;;AACX,qCAAN;AAEA;;+DAAK,sBAAL,AAAa,AACX,AAAU,AAAK,AAAM,AAAY;;qDAerB;AAAd,AAA4B,YAAM;;qBAChC;eAAA,AAAO,KAAP,AAAY,6BAAZ,AAAyC,AAC1C;AAFD,AAGD;AAvB+C,AAmBhD,AAMA;;AArBE;wCAKF;AAFC;;AAED,AAA0B,AAAW,AACnC,AAAK,AAAS,AACZ;;sCAAU,AAAU;uCAAV,AAAsB,WADpB;AAAd;wCAKF;AAFC;AAED,AAAI,AAAW,AACb,AAAO,AAAK,AAAM,AACnB;;;;;AAaD,AAAS,AACP;;;;;sBACA;AACE,AAAC;AACC,AAAC;AACC,AAAC,AACC,AAAiB,AAAC,AAAK,AACvB,AAAS,AAAC,AAAK;;AAEnB;AAAA,AAAE,AACJ,AAAE;;8BARJ,AAQE,AAEH;;2BA1C+C,AA6ClD,AAA0B,AAAY,AACpC,AAAa,AAAU;;;;AAGzB,AAAO,AAAS,AAAmB,AAAW,AAC5C,AAAI,AAAM,AAAQ,AAAY;;;;;;;;wBA/B9B;AAAuB,AAAC,AAAa,AACnC,AAAK,AAAS,AAAE;;;EAlBhB;;AAiDA,AAAM,AAAc,0BAAA,AAAU;AACrB,eAAS,UADlB,AAAoB,AAClB,AACD,AACD,AAAO,AAAK,AAAqB,AAClC;AAJmC,AAAC,AAAa,AAC9C;;uCAIL;;wDAED;AAAS,aAAT,AAAkB,SAAlB,AAAyB,AAAQ,AAC/B;AAAM,AAAc,AAAS,AAAQ,AACnC;AAAM,qCAD6B;AAArC,AAAoB,AAIpB;AAAA,AAAO,AAAM,AACX;;AADF,AAAa,iCAGd;;UAED,AAAe,AAAmB,AAAU;;;;;;;yBA5E5C,AAA2B","file":"/imports/plugins/core/revisions/client/containers/settingsContainer.js.map","sourcesContent":["import React, { Component, PropTypes } from \"react\";\nimport { composeWithTracker } from \"/lib/api/compose\";\nimport SettingsComponent from \"../components/settings\";\nimport { Packages } from \"/lib/collections\";\nimport { Meteor } from \"meteor/meteor\";\nimport TranslationProvider from \"/imports/plugins/core/ui/client/providers/translationProvider\";\n\n\nclass RevisionSettingsContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      settings: this.props.packageInfo.settings\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      settings: nextProps.packageInfo.settings\n    });\n  }\n\n  get settings() {\n    return this.state.settings;\n  }\n\n  handleUpdateSettings = (settings) => {\n    this.setState({ settings }, () => {\n      Meteor.call(\"revisions/settings/update\", settings);\n    });\n  }\n\n  /**\n   * Publish container is a stateless container component connected to Meteor data source.\n   * @param  {Object} props Component props\n   * @return {PropTypes.node} react node\n   */\n  render() {\n    // console.log(this.props.packageInfo);\n    return (\n      <div>\n        <TranslationProvider>\n          <SettingsComponent\n            onUpdateSettings={this.handleUpdateSettings}\n            settings={this.settings}\n          />\n        </TranslationProvider>\n      </div>\n    );\n  }\n}\n\nRevisionSettingsContainer.propTypes = {\n  packageInfo: PropTypes.object\n};\n\nexport function handlePublishClick(revisions) {\n  if (Array.isArray(revisions)) {\n    const documentIds = revisions.map((revision) => {\n      return revision.documentId;\n    });\n    Meteor.call(\"revisions/publish\", documentIds);\n  }\n}\n\nfunction composer(props, onData) {\n  const packageInfo = Packages.findOne({\n    name: \"reaction-revisions\"\n  });\n\n  onData(null, {\n    packageInfo\n  });\n}\n\nexport default composeWithTracker(composer)(RevisionSettingsContainer);\n"]},"hash":"3f37ea407773ea13578f8c503832cb14947d2783"}
