{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"faker","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"faker"}]},{"source":"./shops","imported":[],"specifiers":[]},{"source":"./shops","imported":["getShop"],"specifiers":[{"kind":"named","imported":"getShop","local":"getShop"}]},{"source":"moment","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"moment"}]}],"exports":{"exported":["getUser","getUsers","limit"],"specifiers":[{"kind":"local","local":"getUser","exported":"getUser"},{"kind":"local","local":"getUsers","exported":"getUsers"},{"kind":"local","local":"limit","exported":"limit"}]}}},"options":{"filename":"/server/imports/fixtures/users.js","filenameRelative":"/server/imports/fixtures/users.js","inputSourceMap":{"version":3,"sources":["/server/imports/fixtures/users.js"],"names":["faker","getShop","moment","getUser","existingUser","Meteor","users","findOne","Factory","create","getUsers","limit","existingUsers","find","fetch","i","user","push","username","internet","userName","_","random","name","findName","emails","email","address","verified","profile","profilePictureUrl","image","imageUrl","gender","description","lorem","paragraphs","startTime","add","toDate","createdAt","Date","registered","roles","_id","services","password","bcrypt","Random","id","resume","loginTokens","when","anonymous","define","Object","assign"],"mappings":";;AAAA,OAAA,AAAO;AAAW;;;;;;;;;;;;;;;;;;;;;;;;;GAClB,AAAO,AACP,AAAS,AAAe,AACxB,AAAO,AAAY,AAEnB,AAAO,AAAS,AAAU,AACxB;;AAAM,SAAe,UAArB,AAAqB,AAAO,AAAM,AAClC;MAAO,eAAgB,OAAQ,MAA/B,AAAuB,AAAe,AACvC;wCAED;AAAO,AAAS,AAAS,AAAQ,AAAG,AAClC,AAAM,AAAQ,AACd;;AAAM,SAAgB;AAAA,AAAa,AAAK,AAAI,AAAE,MAAjB;MAAwB,QAAT;AAAtB,AAAwC,MAA9D,AAAsB;;;;wCACtB;AAAK,QAAL,AAAS,AAAI,QAAb,AAAgB,AAAI,AAAO,cAAI,MAA/B,AAAmC,AAAG,eACpC;;UAAM,KAAN,AAAa,AAAc,AAAM,AAAQ,AAAO,AAChD;AAAA,AAAM,AAAK,AACZ;;;A,AACD,AAAO,AACR,AAGD;;AAIA,AAAM,AAAO;;;OACD;AACD,YAAM,YAFJ,AAET,AAAO,AAAe,AAAa,AAAE,AAAO,AAAG,AAChD;mDAED;AAAM,AAAY,AAChB,AAAO,AAAM,AAAK,AACnB;AAPU,oBASX;AAAQ,sBAAY,AAClB;AAAA,AAAM,AAAQ,AAAM,AAAS,AAC7B,AAAO,AAAC,AACN;UADM,AACG,YACT;QAAU,uBAFJ;AAAR,AAAO;eAMT;AAAS,gBAAY,AACnB,AAAO,AACL;AAnBO,AAeV;AAGQ,AACC,AAAK,AACX,AAAO,AAAM,AAAS,AACtB;uBAHK,AAGc,AAAM,AAAM;AAHjC;iBAOF;AAAQ,mBAAY,SAClB;AAAO,AAAC,AAAU,yBAAX,AAAmB,YA1BjB,AA0BT,AAAO,AAA6B,AAAE,AAAO,AAAG,AACjD,AAED;AA7BW,AAuBV;AAMY,AAAY,AACvB,AAAO,AAAM,AAAM,AAAW,AAC/B;AA/BU,sBAiCX;YAAW,UAAY,8BACrB;AACA,AACA;AAAO,eAAA,AAAS,AAAI,AAAE,YApCb,AAoCT,AAAO,AAAa,AAAS,AAAG,AAAK,AAAQ,AAAI,AAAE,AAAO,AAAG,AAC3D,AAAS,AACZ;kCAED;AAxCF,AAAa,AAwCA,AAAI,AAGjB;AAAM,aAAa,YACjB;AAAO,AACL;AAFe,AACV,AACL,AAAC,AAAU,AAAM,AACf,AACA,AACA,AACA,AACA,AACA,AACA;iEAGJ,KAAU,SACR;AAAU,AACR,AAAQ,AAAO,AAAG;AAFZ,iBAIR,AAAQ,AACN,AAAa,AACX;AA5DgB,AACpB,CADF;AA6DQ,IAAM;AAHJ,AACO,+CALP,CAZZ,AAAmB,mBA2BnB,SAAM,AAAY,AAChB,WAAO,AACL,AAAC,OADI,AACL,AAAW,AAAM,AACf,AACA,AACA,AACA,AACA,AACA,AACA,SATN,AAAkB,iBAclB,AAAe,AAAY,AACzB,AAAQ,AAAO,AAAQ,AAAO,AAAO,AACrC;AAAQ;AAGA;;AAAR,AAAe,AAAa,AAAO,AAAO,AAAO,AAAO,AAAI,AAAM,AACnE;;;;;;AAJC,AAAe,AAAkB,AAAO,AACtC,AAAO,AAAO,AAAI,AAAM,AAE1B;AA5BM,AACQ,AAAS,AAAI,AAAE,AAAO,AAAG,AAAK,AAAQ,AAAI,AAAE,AAAO,AAAG,AAC1D,AAAS;;;;yBAxFrB","file":"/server/imports/fixtures/users.js.map","sourcesContent":["import faker from \"faker\";\nimport \"./shops\";\nimport { getShop } from \"./shops\";\nimport moment from \"moment\";\n\nexport function getUser() {\n  const existingUser = Meteor.users.findOne();\n  return existingUser || Factory.create(\"user\");\n}\n\nexport function getUsers(limit = 2) {\n  const users = [];\n  const existingUsers = Meteor.users.find({}, { limit: limit }).fetch();\n  for (let i = 0; i < limit; i = i + 1) {\n    const user = existingUsers[i] || Factory.create(\"user\");\n    users.push(user);\n  }\n  return users;\n}\n\n\n/**\n * User Factory\n * @summary define user Factory\n */\nconst user = {\n  username: function () {\n    return faker.internet.userName() + _.random(0, 1000);\n  },\n\n  name: function () {\n    return faker.name.findName();\n  },\n\n  emails: function () {\n    const email = faker.internet.email();\n    return [{\n      address: email,\n      verified: true\n    }];\n  },\n\n  profile: function () {\n    return {\n      name: this.name,\n      email: faker.internet.email(),\n      profilePictureUrl: faker.image.imageUrl()\n    };\n  },\n\n  gender: function () {\n    return [\"Either\", \"Male\", \"Female\"][_.random(0, 2)];\n  },\n\n  description: function () {\n    return faker.lorem.paragraphs(3);\n  },\n\n  startTime: function () {\n    // needs moment.js package\n    // some date within the next month\n    return moment().add(_.random(0, 31), \"days\").add(_.random(0, 24),\n      \"hours\").toDate();\n  },\n\n  createdAt: new Date()\n};\n\nconst registered = {\n  roles: {\n    [getShop()._id]: [\n      \"account/profile\",\n      \"guest\",\n      \"product\",\n      \"tag\",\n      \"index\",\n      \"cart/checkout\",\n      \"cart/completed\"\n    ]\n  },\n  services: {\n    password: {\n      bcrypt: Random.id(29)\n    },\n    resume: {\n      loginTokens: [\n        {\n          when: moment().add(_.random(0, 31), \"days\").add(_.random(0, 24),\n            \"hours\").toDate()\n        }\n      ]\n    }\n  }\n};\n\nconst anonymous = {\n  roles: {\n    [getShop()._id]: [\n      \"guest\",\n      \"anonymous\",\n      \"product\",\n      \"tag\",\n      \"index\",\n      \"cart/checkout\",\n      \"cart/completed\"\n    ]\n  }\n};\n\nexport default function () {\n  Factory.define(\"user\", Meteor.users, user);\n  Factory.define(\"registeredUser\", Meteor.users,\n    Object.assign({}, user, registered));\n\n  Factory.define(\"anonymous\", Meteor.users, Object.assign({}, user, anonymous));\n}\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/server/imports/fixtures/users.js.map","sourceFileName":"/server/imports/fixtures/users.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"users"},"ignored":false,"code":"var _roles, _roles2;\n\nmodule.export({\n  getUser: function () {\n    return getUser;\n  },\n  getUsers: function () {\n    return getUsers;\n  }\n});\nvar faker = void 0;\nmodule.importSync(\"faker\", {\n  \"default\": function (v) {\n    faker = v;\n  }\n}, 0);\nmodule.importSync(\"./shops\");\nvar getShop = void 0;\nmodule.importSync(\"./shops\", {\n  getShop: function (v) {\n    getShop = v;\n  }\n}, 2);\nvar moment = void 0;\nmodule.importSync(\"moment\", {\n  \"default\": function (v) {\n    moment = v;\n  }\n}, 3);\n\nfunction getUser() {\n  var existingUser = Meteor.users.findOne();\n  return existingUser || Factory.create(\"user\");\n}\n\nfunction getUsers() {\n  var limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 2;\n  var users = [];\n  var existingUsers = Meteor.users.find({}, {\n    limit: limit\n  }).fetch();\n\n  for (var i = 0; i < limit; i = i + 1) {\n    var _user = existingUsers[i] || Factory.create(\"user\");\n\n    users.push(_user);\n  }\n\n  return users;\n}\n\n/**\n * User Factory\n * @summary define user Factory\n */var user = {\n  username: function () {\n    return faker.internet.userName() + _.random(0, 1000);\n  },\n  name: function () {\n    return faker.name.findName();\n  },\n  emails: function () {\n    var email = faker.internet.email();\n    return [{\n      address: email,\n      verified: true\n    }];\n  },\n  profile: function () {\n    return {\n      name: this.name,\n      email: faker.internet.email(),\n      profilePictureUrl: faker.image.imageUrl()\n    };\n  },\n  gender: function () {\n    return [\"Either\", \"Male\", \"Female\"][_.random(0, 2)];\n  },\n  description: function () {\n    return faker.lorem.paragraphs(3);\n  },\n  startTime: function () {\n    // needs moment.js package\n    // some date within the next month\n    return moment().add(_.random(0, 31), \"days\").add(_.random(0, 24), \"hours\").toDate();\n  },\n  createdAt: new Date()\n};\nvar registered = {\n  roles: (_roles = {}, _roles[getShop()._id] = [\"account/profile\", \"guest\", \"product\", \"tag\", \"index\", \"cart/checkout\", \"cart/completed\"], _roles),\n  services: {\n    password: {\n      bcrypt: Random.id(29)\n    },\n    resume: {\n      loginTokens: [{\n        when: moment().add(_.random(0, 31), \"days\").add(_.random(0, 24), \"hours\").toDate()\n      }]\n    }\n  }\n};\nvar anonymous = {\n  roles: (_roles2 = {}, _roles2[getShop()._id] = [\"guest\", \"anonymous\", \"product\", \"tag\", \"index\", \"cart/checkout\", \"cart/completed\"], _roles2)\n};\nmodule.export(\"default\", exports.default = function () {\n  Factory.define(\"user\", Meteor.users, user);\n  Factory.define(\"registeredUser\", Meteor.users, Object.assign({}, user, registered));\n  Factory.define(\"anonymous\", Meteor.users, Object.assign({}, user, anonymous));\n});","map":{"version":3,"sources":["/server/imports/fixtures/users.js"],"names":["faker","getShop","moment","getUser","existingUser","Meteor","users","findOne","Factory","create","getUsers","limit","existingUsers","find","fetch","i","user","push","username","internet","userName","_","random","name","findName","emails","email","address","verified","profile","profilePictureUrl","image","imageUrl","gender","description","lorem","paragraphs","startTime","add","toDate","createdAt","Date","registered","roles","_id","services","password","bcrypt","Random","id","resume","loginTokens","when","anonymous","define","Object","assign"],"mappings":";;AAAA,OAAA,AAAO;AAAW;;;;;;;;;;;;;;;;;;;;;;;;;GAClB,AAAO,AACP,AAAS,AAAe,AACxB,AAAO,AAAY,AAEnB,AAAO,AAAS,AAAU,AACxB;;AAAM,SAAe,UAArB,AAAqB,AAAO,AAAM,AAClC;MAAO,eAAgB,OAAQ,MAA/B,AAAuB,AAAe,AACvC;wCAED;AAAO,AAAS,AAAS,AAAQ,AAAG,AAClC,AAAM,AAAQ,AACd;;AAAM,SAAgB;AAAA,AAAa,AAAK,AAAI,AAAE,MAAjB;MAAwB,QAAT;AAAtB,AAAwC,MAA9D,AAAsB;;;;wCACtB;AAAK,QAAL,AAAS,AAAI,QAAb,AAAgB,AAAI,AAAO,cAAI,MAA/B,AAAmC,AAAG,eACpC;;UAAM,KAAN,AAAa,AAAc,AAAM,AAAQ,AAAO,AAChD;AAAA,AAAM,AAAK,AACZ;;;A,AACD,AAAO,AACR,AAGD;;AAIA,AAAM,AAAO;;;OACD;AACD,YAAM,YAFJ,AAET,AAAO,AAAe,AAAa,AAAE,AAAO,AAAG,AAChD;mDAED;AAAM,AAAY,AAChB,AAAO,AAAM,AAAK,AACnB;AAPU,oBASX;AAAQ,sBAAY,AAClB;AAAA,AAAM,AAAQ,AAAM,AAAS,AAC7B,AAAO,AAAC,AACN;UADM,AACG,YACT;QAAU,uBAFJ;AAAR,AAAO;eAMT;AAAS,gBAAY,AACnB,AAAO,AACL;AAnBO,AAeV;AAGQ,AACC,AAAK,AACX,AAAO,AAAM,AAAS,AACtB;uBAHK,AAGc,AAAM,AAAM;AAHjC;iBAOF;AAAQ,mBAAY,SAClB;AAAO,AAAC,AAAU,yBAAX,AAAmB,YA1BjB,AA0BT,AAAO,AAA6B,AAAE,AAAO,AAAG,AACjD,AAED;AA7BW,AAuBV;AAMY,AAAY,AACvB,AAAO,AAAM,AAAM,AAAW,AAC/B;AA/BU,sBAiCX;YAAW,UAAY,8BACrB;AACA,AACA;AAAO,eAAA,AAAS,AAAI,AAAE,YApCb,AAoCT,AAAO,AAAa,AAAS,AAAG,AAAK,AAAQ,AAAI,AAAE,AAAO,AAAG,AAC3D,AAAS,AACZ;kCAED;AAxCF,AAAa,AAwCA,AAAI,AAGjB;AAAM,aAAa,YACjB;AAAO,AACL;AAFe,AACV,AACL,AAAC,AAAU,AAAM,AACf,AACA,AACA,AACA,AACA,AACA,AACA;iEAGJ,KAAU,SACR;AAAU,AACR,AAAQ,AAAO,AAAG;AAFZ,iBAIR,AAAQ,AACN,AAAa,AACX;AA5DgB,AACpB,CADF;AA6DQ,IAAM;AAHJ,AACO,+CALP,CAZZ,AAAmB,mBA2BnB,SAAM,AAAY,AAChB,WAAO,AACL,AAAC,OADI,AACL,AAAW,AAAM,AACf,AACA,AACA,AACA,AACA,AACA,AACA,SATN,AAAkB,iBAclB,AAAe,AAAY,AACzB,AAAQ,AAAO,AAAQ,AAAO,AAAO,AACrC;AAAQ;AAGA;;AAAR,AAAe,AAAa,AAAO,AAAO,AAAO,AAAO,AAAI,AAAM,AACnE;;;;;;AAJC,AAAe,AAAkB,AAAO,AACtC,AAAO,AAAO,AAAI,AAAM,AAE1B;AA5BM,AACQ,AAAS,AAAI,AAAE,AAAO,AAAG,AAAK,AAAQ,AAAI,AAAE,AAAO,AAAG,AAC1D,AAAS;;;;yBAxFrB","file":"/server/imports/fixtures/users.js.map","sourcesContent":["import faker from \"faker\";\nimport \"./shops\";\nimport { getShop } from \"./shops\";\nimport moment from \"moment\";\n\nexport function getUser() {\n  const existingUser = Meteor.users.findOne();\n  return existingUser || Factory.create(\"user\");\n}\n\nexport function getUsers(limit = 2) {\n  const users = [];\n  const existingUsers = Meteor.users.find({}, { limit: limit }).fetch();\n  for (let i = 0; i < limit; i = i + 1) {\n    const user = existingUsers[i] || Factory.create(\"user\");\n    users.push(user);\n  }\n  return users;\n}\n\n\n/**\n * User Factory\n * @summary define user Factory\n */\nconst user = {\n  username: function () {\n    return faker.internet.userName() + _.random(0, 1000);\n  },\n\n  name: function () {\n    return faker.name.findName();\n  },\n\n  emails: function () {\n    const email = faker.internet.email();\n    return [{\n      address: email,\n      verified: true\n    }];\n  },\n\n  profile: function () {\n    return {\n      name: this.name,\n      email: faker.internet.email(),\n      profilePictureUrl: faker.image.imageUrl()\n    };\n  },\n\n  gender: function () {\n    return [\"Either\", \"Male\", \"Female\"][_.random(0, 2)];\n  },\n\n  description: function () {\n    return faker.lorem.paragraphs(3);\n  },\n\n  startTime: function () {\n    // needs moment.js package\n    // some date within the next month\n    return moment().add(_.random(0, 31), \"days\").add(_.random(0, 24),\n      \"hours\").toDate();\n  },\n\n  createdAt: new Date()\n};\n\nconst registered = {\n  roles: {\n    [getShop()._id]: [\n      \"account/profile\",\n      \"guest\",\n      \"product\",\n      \"tag\",\n      \"index\",\n      \"cart/checkout\",\n      \"cart/completed\"\n    ]\n  },\n  services: {\n    password: {\n      bcrypt: Random.id(29)\n    },\n    resume: {\n      loginTokens: [\n        {\n          when: moment().add(_.random(0, 31), \"days\").add(_.random(0, 24),\n            \"hours\").toDate()\n        }\n      ]\n    }\n  }\n};\n\nconst anonymous = {\n  roles: {\n    [getShop()._id]: [\n      \"guest\",\n      \"anonymous\",\n      \"product\",\n      \"tag\",\n      \"index\",\n      \"cart/checkout\",\n      \"cart/completed\"\n    ]\n  }\n};\n\nexport default function () {\n  Factory.define(\"user\", Meteor.users, user);\n  Factory.define(\"registeredUser\", Meteor.users,\n    Object.assign({}, user, registered));\n\n  Factory.define(\"anonymous\", Meteor.users, Object.assign({}, user, anonymous));\n}\n"]},"hash":"318c4b8e0a96aca90625912a9e1899478658d476"}
