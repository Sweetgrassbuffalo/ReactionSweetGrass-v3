{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/aldeed:simple-schema","imported":["SimpleSchema"],"specifiers":[{"kind":"named","imported":"SimpleSchema","local":"SimpleSchema"}]},{"source":"meteor/alanning:roles","imported":["Roles"],"specifiers":[{"kind":"named","imported":"Roles","local":"Roles"}]},{"source":"/lib/api","imported":["getShopId"],"specifiers":[{"kind":"named","imported":"getShopId","local":"getShopId"}]},{"source":"./registry","imported":["PackageConfig"],"specifiers":[{"kind":"named","imported":"PackageConfig","local":"PackageConfig"}]},{"source":"./helpers","imported":["shopIdAutoValue"],"specifiers":[{"kind":"named","imported":"shopIdAutoValue","local":"shopIdAutoValue"}]}],"exports":{"exported":["AnalyticsEvents","ReactionAnalyticsPackageConfig"],"specifiers":[{"kind":"local","local":"AnalyticsEvents","exported":"AnalyticsEvents"},{"kind":"local","local":"ReactionAnalyticsPackageConfig","exported":"ReactionAnalyticsPackageConfig"}]}}},"options":{"filename":"/lib/collections/schemas/analytics.js","filenameRelative":"/lib/collections/schemas/analytics.js","inputSourceMap":{"version":3,"sources":["/lib/collections/schemas/analytics.js"],"names":["SimpleSchema","Roles","getShopId","PackageConfig","shopIdAutoValue","AnalyticsEvents","type","String","optional","Object","regEx","RegEx","Id","autoValue","Meteor","userId","Boolean","userIsInRole","user","label","Date","blackbox","ReactionAnalyticsPackageConfig"],"mappings":"AAAA,OAAS;AAAT,AAA6B;;;AAA7B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GACA,AAAS,AAAa,AACtB,AAAS,AAAiB,AAC1B,AAAS,AAAqB,AAC9B,AAAS,AAAuB,AAEhC,AAAO,AAAM,AAAkB,AAAI,AAAa,AAC9C;IAAa;AACL;UAER,AAAY,AACV;AAL4C,AACjC;AAIL;UALsC,AAIlC,AAEA;cAEZ,AAAU,AACR;AALU,AAEV;AAGM;UATsC,AAQpC,AAEE;cAEZ,AAAS,AACP;AALQ,AAER;AAGM;UAbsC,AAYrC,AAEG;cAEZ,AAAS,AACP;AALO,AAEP;AAGM;UAjBsC,AAgBrC,AAEG;cAEZ,AAAQ,AACN;AALO,AAEP;;UAlB4C,AAoBtC,AAEI;cAEZ,AAAW,AACT;AALM,AACA,AACN;AAGM;UADG,AAEF,AAAa,AAAM,AAC1B;WAHS,AAGC,mBACV;cAAW,AAAY,AACrB;AAAO,eAAA,AAAO,YAAd,AACD;oBA9B2C,AAwBnC;AAQX,AAAoB,AAClB;AATS,AAET;AAMkB,AACZ;UADY,AAER,AACV;cAAW,AAAY,AACrB;AAAO,eAAM,YAAb,AAAO,AAAmB,AAAO,AAAQ,AAAa,AACvD;4DArC2C,AAgC1B;AAOpB,AAAU,AACR;AANA;AAMM;UADE,AAED,AAAa,AAAM,AAC1B;WAAW,mBAHH,AAIR;AAAO,eA3CqC,AAuCpC;WAMV,AAAa,AACX;AAPQ,AAER;AAIW,AACL;UACK,AAAY,AACrB;AAAO,eAAP,AAAO,AAAI,YACZ;iBAjD2C,AA6CjC;AAMb,AACA;AALE;AAKM,AACN;;UADM,AAEI,AACV;cAHM,AAGI;cAvDP,AAAwB,AAAiB,AAgEzC,AAAM,A,AALb,AAKA,AAA8C,AAAI,AAAa,AAC7D,AAAe,AACb,AAAqC,AACnC,AAAM,AACN,AAAO;AAhBH,AACA,AACN;AApDA;;AAoEqC,AAC7B;AACC,UAF4B,AAGnC;WARW,AAKwB,AAGzB,AAEZ;AAHE;;AAIM,UADmC,AAEzC;AAAO,WAZI,AAU8B;cAI3C,AAA2C,AACzC;AALyC,AACzC;AAGyC,AACnC;AACC,UAFkC,AAGzC;WAjBW,AAc8B,AAG/B,AAEZ;AAHE;AAGkC;AAC5B,UAD4B,AAElC;AAAO,WArBI,AAmBuB;cAIpC,AAAoC,AAClC;AAJA;AAGkC,AAC5B;AACC,UAF2B,AAGlC;WA3BC,AAAuC,AAAiB,AAC9C,AAuBuB,AAGxB;AADV;;;;;;AApBmC,AACnC,CADF","file":"/lib/collections/schemas/analytics.js.map","sourcesContent":["import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\nimport { Roles } from \"meteor/alanning:roles\";\nimport { getShopId } from \"/lib/api\";\nimport { PackageConfig } from \"./registry\";\nimport { shopIdAutoValue } from \"./helpers\";\n\nexport const AnalyticsEvents = new SimpleSchema({\n  \"eventType\": {\n    type: String\n  },\n  \"category\": {\n    type: String,\n    optional: true\n  },\n  \"action\": {\n    type: String,\n    optional: true\n  },\n  \"label\": {\n    type: String,\n    optional: true\n  },\n  \"value\": {\n    type: String,\n    optional: true\n  },\n  \"user\": {\n    type: Object,\n    optional: true\n  },\n  \"user.id\": {\n    type: String,\n    regEx: SimpleSchema.RegEx.Id,\n    optional: true,\n    autoValue: function () {\n      return Meteor.userId();\n    }\n  },\n  \"user.isAnonymous\": {\n    type: Boolean,\n    optional: true,\n    autoValue: function () {\n      return Roles.userIsInRole(Meteor.user(), \"anonymous\", getShopId());\n    }\n  },\n  \"shopId\": {\n    type: String,\n    regEx: SimpleSchema.RegEx.Id,\n    autoValue: shopIdAutoValue,\n    label: \"AnalyticsEvents shopId\"\n  },\n  \"createdAt\": {\n    type: Date,\n    autoValue: function () {\n      return new Date;\n    }\n  },\n  // Any additional data\n  \"data\": {\n    type: Object,\n    blackbox: true,\n    optional: true\n  }\n});\n\n/*\n *   Analytics\n *   api_key: \"UA-XXXXX-X\" (this is your tracking ID)\n */\n\nexport const ReactionAnalyticsPackageConfig = new SimpleSchema([\n  PackageConfig, {\n    \"settings.public.segmentio.enabled\": {\n      type: Boolean,\n      label: \"Enabled\"\n    },\n    \"settings.public.segmentio.api_key\": {\n      type: String,\n      label: \"Segment Write Key\",\n      optional: true\n    },\n    \"settings.public.googleAnalytics.enabled\": {\n      type: Boolean,\n      label: \"Enabled\"\n    },\n    \"settings.public.googleAnalytics.api_key\": {\n      type: String,\n      label: \"Google Analytics Tracking ID\",\n      optional: true\n    },\n    \"settings.public.mixpanel.enabled\": {\n      type: Boolean,\n      label: \"Enabled\"\n    },\n    \"settings.public.mixpanel.api_key\": {\n      type: String,\n      label: \"Mixpanel Token\",\n      optional: true\n    }\n  }\n]);\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/lib/collections/schemas/analytics.js.map","sourceFileName":"/lib/collections/schemas/analytics.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"analytics"},"ignored":false,"code":"module.export({\n  AnalyticsEvents: function () {\n    return AnalyticsEvents;\n  },\n  ReactionAnalyticsPackageConfig: function () {\n    return ReactionAnalyticsPackageConfig;\n  }\n});\nvar SimpleSchema = void 0;\nmodule.importSync(\"meteor/aldeed:simple-schema\", {\n  SimpleSchema: function (v) {\n    SimpleSchema = v;\n  }\n}, 0);\nvar Roles = void 0;\nmodule.importSync(\"meteor/alanning:roles\", {\n  Roles: function (v) {\n    Roles = v;\n  }\n}, 1);\nvar getShopId = void 0;\nmodule.importSync(\"/lib/api\", {\n  getShopId: function (v) {\n    getShopId = v;\n  }\n}, 2);\nvar PackageConfig = void 0;\nmodule.importSync(\"./registry\", {\n  PackageConfig: function (v) {\n    PackageConfig = v;\n  }\n}, 3);\nvar shopIdAutoValue = void 0;\nmodule.importSync(\"./helpers\", {\n  shopIdAutoValue: function (v) {\n    shopIdAutoValue = v;\n  }\n}, 4);\nvar AnalyticsEvents = new SimpleSchema({\n  \"eventType\": {\n    type: String\n  },\n  \"category\": {\n    type: String,\n    optional: true\n  },\n  \"action\": {\n    type: String,\n    optional: true\n  },\n  \"label\": {\n    type: String,\n    optional: true\n  },\n  \"value\": {\n    type: String,\n    optional: true\n  },\n  \"user\": {\n    type: Object,\n    optional: true\n  },\n  \"user.id\": {\n    type: String,\n    regEx: SimpleSchema.RegEx.Id,\n    optional: true,\n    autoValue: function () {\n      return Meteor.userId();\n    }\n  },\n  \"user.isAnonymous\": {\n    type: Boolean,\n    optional: true,\n    autoValue: function () {\n      return Roles.userIsInRole(Meteor.user(), \"anonymous\", getShopId());\n    }\n  },\n  \"shopId\": {\n    type: String,\n    regEx: SimpleSchema.RegEx.Id,\n    autoValue: shopIdAutoValue,\n    label: \"AnalyticsEvents shopId\"\n  },\n  \"createdAt\": {\n    type: Date,\n    autoValue: function () {\n      return new Date();\n    }\n  },\n  // Any additional data\n  \"data\": {\n    type: Object,\n    blackbox: true,\n    optional: true\n  }\n});\nvar ReactionAnalyticsPackageConfig = new SimpleSchema([PackageConfig, {\n  \"settings.public.segmentio.enabled\": {\n    type: Boolean,\n    label: \"Enabled\"\n  },\n  \"settings.public.segmentio.api_key\": {\n    type: String,\n    label: \"Segment Write Key\",\n    optional: true\n  },\n  \"settings.public.googleAnalytics.enabled\": {\n    type: Boolean,\n    label: \"Enabled\"\n  },\n  \"settings.public.googleAnalytics.api_key\": {\n    type: String,\n    label: \"Google Analytics Tracking ID\",\n    optional: true\n  },\n  \"settings.public.mixpanel.enabled\": {\n    type: Boolean,\n    label: \"Enabled\"\n  },\n  \"settings.public.mixpanel.api_key\": {\n    type: String,\n    label: \"Mixpanel Token\",\n    optional: true\n  }\n}]);","map":{"version":3,"sources":["/lib/collections/schemas/analytics.js"],"names":["SimpleSchema","Roles","getShopId","PackageConfig","shopIdAutoValue","AnalyticsEvents","type","String","optional","Object","regEx","RegEx","Id","autoValue","Meteor","userId","Boolean","userIsInRole","user","label","Date","blackbox","ReactionAnalyticsPackageConfig"],"mappings":"AAAA,OAAS;AAAT,AAA6B;;;AAA7B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GACA,AAAS,AAAa,AACtB,AAAS,AAAiB,AAC1B,AAAS,AAAqB,AAC9B,AAAS,AAAuB,AAEhC,AAAO,AAAM,AAAkB,AAAI,AAAa,AAC9C;IAAa;AACL;UAER,AAAY,AACV;AAL4C,AACjC;AAIL;UALsC,AAIlC,AAEA;cAEZ,AAAU,AACR;AALU,AAEV;AAGM;UATsC,AAQpC,AAEE;cAEZ,AAAS,AACP;AALQ,AAER;AAGM;UAbsC,AAYrC,AAEG;cAEZ,AAAS,AACP;AALO,AAEP;AAGM;UAjBsC,AAgBrC,AAEG;cAEZ,AAAQ,AACN;AALO,AAEP;;UAlB4C,AAoBtC,AAEI;cAEZ,AAAW,AACT;AALM,AACA,AACN;AAGM;UADG,AAEF,AAAa,AAAM,AAC1B;WAHS,AAGC,mBACV;cAAW,AAAY,AACrB;AAAO,eAAA,AAAO,YAAd,AACD;oBA9B2C,AAwBnC;AAQX,AAAoB,AAClB;AATS,AAET;AAMkB,AACZ;UADY,AAER,AACV;cAAW,AAAY,AACrB;AAAO,eAAM,YAAb,AAAO,AAAmB,AAAO,AAAQ,AAAa,AACvD;4DArC2C,AAgC1B;AAOpB,AAAU,AACR;AANA;AAMM;UADE,AAED,AAAa,AAAM,AAC1B;WAAW,mBAHH,AAIR;AAAO,eA3CqC,AAuCpC;WAMV,AAAa,AACX;AAPQ,AAER;AAIW,AACL;UACK,AAAY,AACrB;AAAO,eAAP,AAAO,AAAI,YACZ;iBAjD2C,AA6CjC;AAMb,AACA;AALE;AAKM,AACN;;UADM,AAEI,AACV;cAHM,AAGI;cAvDP,AAAwB,AAAiB,AAgEzC,AAAM,A,AALb,AAKA,AAA8C,AAAI,AAAa,AAC7D,AAAe,AACb,AAAqC,AACnC,AAAM,AACN,AAAO;AAhBH,AACA,AACN;AApDA;;AAoEqC,AAC7B;AACC,UAF4B,AAGnC;WARW,AAKwB,AAGzB,AAEZ;AAHE;;AAIM,UADmC,AAEzC;AAAO,WAZI,AAU8B;cAI3C,AAA2C,AACzC;AALyC,AACzC;AAGyC,AACnC;AACC,UAFkC,AAGzC;WAjBW,AAc8B,AAG/B,AAEZ;AAHE;AAGkC;AAC5B,UAD4B,AAElC;AAAO,WArBI,AAmBuB;cAIpC,AAAoC,AAClC;AAJA;AAGkC,AAC5B;AACC,UAF2B,AAGlC;WA3BC,AAAuC,AAAiB,AAC9C,AAuBuB,AAGxB;AADV;;;;;;AApBmC,AACnC,CADF","file":"/lib/collections/schemas/analytics.js.map","sourcesContent":["import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\nimport { Roles } from \"meteor/alanning:roles\";\nimport { getShopId } from \"/lib/api\";\nimport { PackageConfig } from \"./registry\";\nimport { shopIdAutoValue } from \"./helpers\";\n\nexport const AnalyticsEvents = new SimpleSchema({\n  \"eventType\": {\n    type: String\n  },\n  \"category\": {\n    type: String,\n    optional: true\n  },\n  \"action\": {\n    type: String,\n    optional: true\n  },\n  \"label\": {\n    type: String,\n    optional: true\n  },\n  \"value\": {\n    type: String,\n    optional: true\n  },\n  \"user\": {\n    type: Object,\n    optional: true\n  },\n  \"user.id\": {\n    type: String,\n    regEx: SimpleSchema.RegEx.Id,\n    optional: true,\n    autoValue: function () {\n      return Meteor.userId();\n    }\n  },\n  \"user.isAnonymous\": {\n    type: Boolean,\n    optional: true,\n    autoValue: function () {\n      return Roles.userIsInRole(Meteor.user(), \"anonymous\", getShopId());\n    }\n  },\n  \"shopId\": {\n    type: String,\n    regEx: SimpleSchema.RegEx.Id,\n    autoValue: shopIdAutoValue,\n    label: \"AnalyticsEvents shopId\"\n  },\n  \"createdAt\": {\n    type: Date,\n    autoValue: function () {\n      return new Date;\n    }\n  },\n  // Any additional data\n  \"data\": {\n    type: Object,\n    blackbox: true,\n    optional: true\n  }\n});\n\n/*\n *   Analytics\n *   api_key: \"UA-XXXXX-X\" (this is your tracking ID)\n */\n\nexport const ReactionAnalyticsPackageConfig = new SimpleSchema([\n  PackageConfig, {\n    \"settings.public.segmentio.enabled\": {\n      type: Boolean,\n      label: \"Enabled\"\n    },\n    \"settings.public.segmentio.api_key\": {\n      type: String,\n      label: \"Segment Write Key\",\n      optional: true\n    },\n    \"settings.public.googleAnalytics.enabled\": {\n      type: Boolean,\n      label: \"Enabled\"\n    },\n    \"settings.public.googleAnalytics.api_key\": {\n      type: String,\n      label: \"Google Analytics Tracking ID\",\n      optional: true\n    },\n    \"settings.public.mixpanel.enabled\": {\n      type: Boolean,\n      label: \"Enabled\"\n    },\n    \"settings.public.mixpanel.api_key\": {\n      type: String,\n      label: \"Mixpanel Token\",\n      optional: true\n    }\n  }\n]);\n"]},"hash":"548ec35a1a0be9cbe794fe482af9c3144f23e165"}
