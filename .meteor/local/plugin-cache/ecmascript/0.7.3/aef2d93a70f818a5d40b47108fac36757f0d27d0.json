{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/templating","imported":["Template"],"specifiers":[{"kind":"named","imported":"Template","local":"Template"}]},{"source":"/client/api","imported":["Reaction"],"specifiers":[{"kind":"named","imported":"Reaction","local":"Reaction"}]},{"source":"/lib/collections","imported":["Orders"],"specifiers":[{"kind":"named","imported":"Orders","local":"Orders"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/core/orders/client/templates/workflow/workflow.js","filenameRelative":"/imports/plugins/core/orders/client/templates/workflow/workflow.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/core/orders/client/templates/workflow/workflow.js"],"names":["Template","Reaction","Orders","coreOrderWorkflow","helpers","orderFulfillmentData","orderId","fulfillment","baseOrder","currentData","order","id","_id","Router","getQueryParam","findOne","fulfillmentNumber","index","isCompleted","parentData","status","workflow","isPending","template"],"mappings":"AAAA,IAAS;AAAT,OAAyB,WAAzB;;;;;;;;;;;;;;;;GACA,AAAS,AAAgB,A,AACzB,AAAS,AAAc,AAEvB;AAGA,AAAS,AAAkB,AAAQ,AACjC;;;AAOA,AAAqB,AAAS,AAAa,AACzC,AAAO,AACL,AAAS,AACT;;;;;;KAAa,sDAFR;AAAP;;mBAMF;AAfiC,AAahC;;AAbgC,AAoBjC,AAAY,AACV,AAAO,AAAS,AACjB,AAED;;;;;;AAIA,AAAQ,AACN;AAAA,AAAM,AAAK,AAAK,AAAM,AAAO,AAAS,AAAO,AAAc,AAC3D,AAAI,AAAI,AACN,AAAO,AAAO,AAAQ,AACvB;;;;6DACD;;QAAO,IAjCwB,AAiC/B,AACD;;AAED;;;;AApCiC,AAyCjC,AAAkB,AAAO,AACvB,AAAO,AAAQ,AAChB,AAED;;;;;;;AAKA,AAAc,AACZ,AAAM,AAAQ,AAAS,AAAW,AAClC,AAAI,AAAK,AAAW,AAAM,AACxB,AAAO,AAAM,AAAS,AACvB;;;;;oCACD;;QAAO,KAAP,iBAvD+B,AAwDhC;;AAED;;;;AAKA,AAAY,AACV,AAAI,AAAK,AAAW,AAAK,AAAU,AACjC,AAAO,AAAK,AACb;;;;4BACD;QAAO,KAAP,0BACD;;AApEH,AAAmC","file":"/imports/plugins/core/orders/client/templates/workflow/workflow.js.map","sourcesContent":["import { Template } from \"meteor/templating\";\nimport { Reaction } from \"/client/api\";\nimport { Orders } from \"/lib/collections\";\n\n/**\n * coreOrderWorkflowHelpers\n */\nTemplate.coreOrderWorkflow.helpers({\n  /**\n   * orderFulfillmentData\n   * @summary Creates an Object with order id and a fulfillment object\n   * @param  {String} orderId - An order id\n   * @param  {Object} fulfillment - An order fulfillment. e.g. a shipment\n   * @return {Object} An object witht the order id and fulfillment\n   */\n  orderFulfillmentData(orderId, fulfillment) {\n    return {\n      orderId: orderId,\n      fulfillment: fulfillment\n    };\n  },\n\n  /**\n   * baseOrder\n   * @todo may be unnecessary\n   * @return {Object} contents of Template.currentData(), non-reactive\n   */\n  baseOrder() {\n    return Template.currentData();\n  },\n\n  /**\n   * order\n   * @return {Object|Boolean} An order or false\n   */\n  order() {\n    const id = this.order._id || Reaction.Router.getQueryParam(\"_id\");\n    if (id) {\n      return Orders.findOne(id);\n    }\n    return false;\n  },\n\n  /**\n   * fulfillmentNumber\n   * @param  {Number} index - A number\n   * @return {Number} index + 1\n   */\n  fulfillmentNumber(index) {\n    return index + 1;\n  },\n\n  /**\n   * isCompleted\n   * @todo may need to be refactored\n   * @return {String|Boolean} order completion status or false\n   */\n  isCompleted() {\n    const order = Template.parentData(1);\n    if (this.status === true) {\n      return order.workflow.status;\n    }\n    return false;\n  },\n\n  /**\n   * isPending\n   * @todo may need to be refactored\n   * @return {String|Boolean} status or false\n   */\n  isPending() {\n    if (this.status === this.template) {\n      return this.status;\n    }\n    return false;\n  }\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/core/orders/client/templates/workflow/workflow.js.map","sourceFileName":"/imports/plugins/core/orders/client/templates/workflow/workflow.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"workflow"},"ignored":false,"code":"var Template = void 0;\nmodule.importSync(\"meteor/templating\", {\n  Template: function (v) {\n    Template = v;\n  }\n}, 0);\nvar Reaction = void 0;\nmodule.importSync(\"/client/api\", {\n  Reaction: function (v) {\n    Reaction = v;\n  }\n}, 1);\nvar Orders = void 0;\nmodule.importSync(\"/lib/collections\", {\n  Orders: function (v) {\n    Orders = v;\n  }\n}, 2);\n/**\n * coreOrderWorkflowHelpers\n */Template.coreOrderWorkflow.helpers({\n  /**\n   * orderFulfillmentData\n   * @summary Creates an Object with order id and a fulfillment object\n   * @param  {String} orderId - An order id\n   * @param  {Object} fulfillment - An order fulfillment. e.g. a shipment\n   * @return {Object} An object witht the order id and fulfillment\n   */orderFulfillmentData: function (orderId, fulfillment) {\n    return {\n      orderId: orderId,\n      fulfillment: fulfillment\n    };\n  },\n  /**\n   * baseOrder\n   * @todo may be unnecessary\n   * @return {Object} contents of Template.currentData(), non-reactive\n   */baseOrder: function () {\n    return Template.currentData();\n  },\n  /**\n   * order\n   * @return {Object|Boolean} An order or false\n   */order: function () {\n    var id = this.order._id || Reaction.Router.getQueryParam(\"_id\");\n\n    if (id) {\n      return Orders.findOne(id);\n    }\n\n    return false;\n  },\n  /**\n   * fulfillmentNumber\n   * @param  {Number} index - A number\n   * @return {Number} index + 1\n   */fulfillmentNumber: function (index) {\n    return index + 1;\n  },\n  /**\n   * isCompleted\n   * @todo may need to be refactored\n   * @return {String|Boolean} order completion status or false\n   */isCompleted: function () {\n    var order = Template.parentData(1);\n\n    if (this.status === true) {\n      return order.workflow.status;\n    }\n\n    return false;\n  },\n  /**\n   * isPending\n   * @todo may need to be refactored\n   * @return {String|Boolean} status or false\n   */isPending: function () {\n    if (this.status === this.template) {\n      return this.status;\n    }\n\n    return false;\n  }\n});","map":{"version":3,"sources":["/imports/plugins/core/orders/client/templates/workflow/workflow.js"],"names":["Template","Reaction","Orders","coreOrderWorkflow","helpers","orderFulfillmentData","orderId","fulfillment","baseOrder","currentData","order","id","_id","Router","getQueryParam","findOne","fulfillmentNumber","index","isCompleted","parentData","status","workflow","isPending","template"],"mappings":"AAAA,IAAS;AAAT,OAAyB,WAAzB;;;;;;;;;;;;;;;;GACA,AAAS,AAAgB,A,AACzB,AAAS,AAAc,AAEvB;AAGA,AAAS,AAAkB,AAAQ,AACjC;;;AAOA,AAAqB,AAAS,AAAa,AACzC,AAAO,AACL,AAAS,AACT;;;;;;KAAa,sDAFR;AAAP;;mBAMF;AAfiC,AAahC;;AAbgC,AAoBjC,AAAY,AACV,AAAO,AAAS,AACjB,AAED;;;;;;AAIA,AAAQ,AACN;AAAA,AAAM,AAAK,AAAK,AAAM,AAAO,AAAS,AAAO,AAAc,AAC3D,AAAI,AAAI,AACN,AAAO,AAAO,AAAQ,AACvB;;;;6DACD;;QAAO,IAjCwB,AAiC/B,AACD;;AAED;;;;AApCiC,AAyCjC,AAAkB,AAAO,AACvB,AAAO,AAAQ,AAChB,AAED;;;;;;;AAKA,AAAc,AACZ,AAAM,AAAQ,AAAS,AAAW,AAClC,AAAI,AAAK,AAAW,AAAM,AACxB,AAAO,AAAM,AAAS,AACvB;;;;;oCACD;;QAAO,KAAP,iBAvD+B,AAwDhC;;AAED;;;;AAKA,AAAY,AACV,AAAI,AAAK,AAAW,AAAK,AAAU,AACjC,AAAO,AAAK,AACb;;;;4BACD;QAAO,KAAP,0BACD;;AApEH,AAAmC","file":"/imports/plugins/core/orders/client/templates/workflow/workflow.js.map","sourcesContent":["import { Template } from \"meteor/templating\";\nimport { Reaction } from \"/client/api\";\nimport { Orders } from \"/lib/collections\";\n\n/**\n * coreOrderWorkflowHelpers\n */\nTemplate.coreOrderWorkflow.helpers({\n  /**\n   * orderFulfillmentData\n   * @summary Creates an Object with order id and a fulfillment object\n   * @param  {String} orderId - An order id\n   * @param  {Object} fulfillment - An order fulfillment. e.g. a shipment\n   * @return {Object} An object witht the order id and fulfillment\n   */\n  orderFulfillmentData(orderId, fulfillment) {\n    return {\n      orderId: orderId,\n      fulfillment: fulfillment\n    };\n  },\n\n  /**\n   * baseOrder\n   * @todo may be unnecessary\n   * @return {Object} contents of Template.currentData(), non-reactive\n   */\n  baseOrder() {\n    return Template.currentData();\n  },\n\n  /**\n   * order\n   * @return {Object|Boolean} An order or false\n   */\n  order() {\n    const id = this.order._id || Reaction.Router.getQueryParam(\"_id\");\n    if (id) {\n      return Orders.findOne(id);\n    }\n    return false;\n  },\n\n  /**\n   * fulfillmentNumber\n   * @param  {Number} index - A number\n   * @return {Number} index + 1\n   */\n  fulfillmentNumber(index) {\n    return index + 1;\n  },\n\n  /**\n   * isCompleted\n   * @todo may need to be refactored\n   * @return {String|Boolean} order completion status or false\n   */\n  isCompleted() {\n    const order = Template.parentData(1);\n    if (this.status === true) {\n      return order.workflow.status;\n    }\n    return false;\n  },\n\n  /**\n   * isPending\n   * @todo may need to be refactored\n   * @return {String|Boolean} status or false\n   */\n  isPending() {\n    if (this.status === this.template) {\n      return this.status;\n    }\n    return false;\n  }\n});\n"]},"hash":"aef2d93a70f818a5d40b47108fac36757f0d27d0"}
