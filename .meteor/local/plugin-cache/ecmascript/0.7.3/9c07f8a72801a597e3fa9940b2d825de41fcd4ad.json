{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","createClass","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component","PropTypes"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"},{"kind":"named","imported":"PropTypes","local":"PropTypes"}]},{"source":"velocity-animate","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Velocity"}]},{"source":"velocity-animate/velocity.ui","imported":[],"specifiers":[]},{"source":"../","imported":["TextField","Button"],"specifiers":[{"kind":"named","imported":"TextField","local":"TextField"},{"kind":"named","imported":"Button","local":"Button"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/core/ui/client/components/metadata/metafield.js","filenameRelative":"/imports/plugins/core/ui/client/components/metadata/metafield.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/core/ui/client/components/metadata/metafield.js"],"names":["React","Component","PropTypes","Velocity","TextField","Button","Metafield","componentWillReceiveProps","nextProps","metafield","key","props","input","refs","keyInput","RunSequence","e","p","backgroundColor","o","duration","value","valueInput","detailNamePlaceholder","i18nKeyDetailName","detailInfoPlaceholder","i18nKeyDetailInformation","i18nKeyDetailInfo","handleSubmit","event","preventDefault","handleChange","onChange","newMetadata","index","handleBlur","onBlur","handleRemove","onRemove","renderActionButton","blank","render","defaultProps","editable","propTypes","bool","func","number","object"],"mappings":"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","file":"/imports/plugins/core/ui/client/components/metadata/metafield.js.map","sourcesContent":["import React, { Component, PropTypes } from \"react\";\nimport Velocity from \"velocity-animate\";\nimport \"velocity-animate/velocity.ui\";\nimport { TextField, Button } from \"../\";\n\nclass Metafield extends Component {\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.metafield.key !== this.props.metafield.key) {\n      const input = this.refs.keyInput.refs.input;\n\n      Velocity.RunSequence([\n        { e: input, p: { backgroundColor: \"#e2f2e2\" }, o: { duration: 200 } },\n        { e: input, p: { backgroundColor: \"#fff\" }, o: { duration: 100 } }\n      ]);\n    }\n\n    if (nextProps.metafield.value !== this.props.metafield.value) {\n      const input = this.refs.valueInput.refs.input;\n\n      Velocity.RunSequence([\n        { e: input, p: { backgroundColor: \"#e2f2e2\" }, o: { duration: 200 } },\n        { e: input, p: { backgroundColor: \"#fff\" }, o: { duration: 100 } }\n      ]);\n    }\n  }\n\n  get detailNamePlaceholder() {\n    return this.props.detailNamePlaceholder || \"Detail Name\";\n  }\n\n  get i18nKeyDetailName() {\n    return this.props.i18nKeyDetailName || \"productDetailEdit.detailName\";\n  }\n\n  get detailInfoPlaceholder() {\n    return this.props.detailInfoPlaceholder || \"Detail Information\";\n  }\n\n  get i18nKeyDetailInformation() {\n    return this.props.i18nKeyDetailInfo || \"productDetail.detailsInfo\";\n  }\n\n  /**\n   * Handle form submit\n   * @param  {Event} event Event object\n   * @return {void} no return value\n   */\n  handleSubmit = (event) => {\n    event.preventDefault();\n  }\n\n  handleChange = (event) => {\n    if (this.props.onChange) {\n      const newMetadata = {\n        key: this.refs.keyInput.refs.input.value,\n        value: this.refs.valueInput.refs.input.value\n      };\n\n      this.props.onChange(event, newMetadata, this.props.index);\n    }\n  }\n\n  handleBlur = (event) => {\n    if (this.props.onBlur) {\n      const newMetadata = {\n        key: this.refs.keyInput.refs.input.value,\n        value: this.refs.valueInput.refs.input.value\n      };\n\n      if (newMetadata.key && newMetadata.value) {\n        this.props.onBlur(event, newMetadata, this.props.index);\n      }\n    }\n  }\n\n  handleRemove = (event) => {\n    if (this.props.onRemove) {\n      this.props.onRemove(event, this.props.metafield, this.props.index);\n    }\n  }\n\n  renderActionButton() {\n    if (this.props.blank === true) {\n      return (\n        <Button icon=\"plus\" onClick={this.handleSubmit} type=\"submit\" />\n      );\n    }\n    return (\n      <Button icon=\"times-circle\" onClick={this.handleRemove} type=\"button\" />\n    );\n  }\n\n  /**\n   * Render a metadata form\n   * @return {JSX} metadata forms for each row of metadata\n   */\n  render() {\n    if (this.props.metafield) {\n      return (\n        <div className=\"rui list-group-item metafield-list-item\">\n          <form className=\"form form-inline\" onSubmit={this.handleSubmit}>\n            <TextField\n              className=\"metafield-key-input\"\n              i18nKeyPlaceholder={this.i18nKeyDetailName}\n              name=\"key\"\n              onBlur={this.handleBlur}\n              onChange={this.handleChange}\n              onReturnKeyDown={this.handleBlur}\n              placeholder={this.detailNamePlaceholder}\n              ref=\"keyInput\"\n              value={this.props.metafield.key}\n            />\n            <TextField\n              className=\"metafield-value-input\"\n              i18nKeyPlaceholder={this.i18nKeyDetailInformation}\n              name=\"value\"\n              onBlur={this.handleBlur}\n              onChange={this.handleChange}\n              onReturnKeyDown={this.handleBlur}\n              placeholder={this.detailInfoPlaceholder}\n              ref=\"valueInput\"\n              value={this.props.metafield.value}\n            />\n            {this.renderActionButton()}\n          </form>\n        </div>\n      );\n    }\n    return null;\n  }\n}\n\nMetafield.defaultProps = {\n  editable: true\n};\n\n// Prop Types\nMetafield.propTypes = {\n  blank: PropTypes.bool,\n  detailInfoPlaceholder: PropTypes.func,\n  detailNamePlaceholder: PropTypes.func,\n  i18nKeyDetailInfo: PropTypes.func,\n  i18nKeyDetailName: PropTypes.func,\n  index: PropTypes.number,\n  metafield: PropTypes.object,\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func,\n  onRemove: PropTypes.func\n};\n\nexport default Metafield;\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/core/ui/client/components/metadata/metafield.js.map","sourceFileName":"/imports/plugins/core/ui/client/components/metadata/metafield.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"metafield"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0,\n    Component = void 0,\n    PropTypes = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  },\n  PropTypes: function (v) {\n    PropTypes = v;\n  }\n}, 0);\nvar Velocity = void 0;\nmodule.importSync(\"velocity-animate\", {\n  \"default\": function (v) {\n    Velocity = v;\n  }\n}, 1);\nmodule.importSync(\"velocity-animate/velocity.ui\");\nvar TextField = void 0,\n    Button = void 0;\nmodule.importSync(\"../\", {\n  TextField: function (v) {\n    TextField = v;\n  },\n  Button: function (v) {\n    Button = v;\n  }\n}, 3);\n\nvar Metafield = function (_Component) {\n  (0, _inherits3.default)(Metafield, _Component);\n\n  function Metafield() {\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, Metafield);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.handleSubmit = function (event) {\n      event.preventDefault();\n    }, _this.handleChange = function (event) {\n      if (_this.props.onChange) {\n        var newMetadata = {\n          key: _this.refs.keyInput.refs.input.value,\n          value: _this.refs.valueInput.refs.input.value\n        };\n\n        _this.props.onChange(event, newMetadata, _this.props.index);\n      }\n    }, _this.handleBlur = function (event) {\n      if (_this.props.onBlur) {\n        var newMetadata = {\n          key: _this.refs.keyInput.refs.input.value,\n          value: _this.refs.valueInput.refs.input.value\n        };\n\n        if (newMetadata.key && newMetadata.value) {\n          _this.props.onBlur(event, newMetadata, _this.props.index);\n        }\n      }\n    }, _this.handleRemove = function (event) {\n      if (_this.props.onRemove) {\n        _this.props.onRemove(event, _this.props.metafield, _this.props.index);\n      }\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  Metafield.prototype.componentWillReceiveProps = function () {\n    function componentWillReceiveProps(nextProps) {\n      if (nextProps.metafield.key !== this.props.metafield.key) {\n        var input = this.refs.keyInput.refs.input;\n        Velocity.RunSequence([{\n          e: input,\n          p: {\n            backgroundColor: \"#e2f2e2\"\n          },\n          o: {\n            duration: 200\n          }\n        }, {\n          e: input,\n          p: {\n            backgroundColor: \"#fff\"\n          },\n          o: {\n            duration: 100\n          }\n        }]);\n      }\n\n      if (nextProps.metafield.value !== this.props.metafield.value) {\n        var _input = this.refs.valueInput.refs.input;\n        Velocity.RunSequence([{\n          e: _input,\n          p: {\n            backgroundColor: \"#e2f2e2\"\n          },\n          o: {\n            duration: 200\n          }\n        }, {\n          e: _input,\n          p: {\n            backgroundColor: \"#fff\"\n          },\n          o: {\n            duration: 100\n          }\n        }]);\n      }\n    }\n\n    return componentWillReceiveProps;\n  }();\n\n  Metafield.prototype.renderActionButton = function () {\n    function renderActionButton() {\n      if (this.props.blank === true) {\n        return React.createElement(Button, {\n          icon: \"plus\",\n          onClick: this.handleSubmit,\n          type: \"submit\"\n        });\n      }\n\n      return React.createElement(Button, {\n        icon: \"times-circle\",\n        onClick: this.handleRemove,\n        type: \"button\"\n      });\n    }\n\n    return renderActionButton;\n  }(); /**\n        * Render a metadata form\n        * @return {JSX} metadata forms for each row of metadata\n        */\n\n  Metafield.prototype.render = function () {\n    function render() {\n      if (this.props.metafield) {\n        return React.createElement(\n          \"div\",\n          {\n            className: \"rui list-group-item metafield-list-item\"\n          },\n          React.createElement(\n            \"form\",\n            {\n              className: \"form form-inline\",\n              onSubmit: this.handleSubmit\n            },\n            React.createElement(TextField, {\n              className: \"metafield-key-input\",\n              i18nKeyPlaceholder: this.i18nKeyDetailName,\n              name: \"key\",\n              onBlur: this.handleBlur,\n              onChange: this.handleChange,\n              onReturnKeyDown: this.handleBlur,\n              placeholder: this.detailNamePlaceholder,\n              ref: \"keyInput\",\n              value: this.props.metafield.key\n            }),\n            React.createElement(TextField, {\n              className: \"metafield-value-input\",\n              i18nKeyPlaceholder: this.i18nKeyDetailInformation,\n              name: \"value\",\n              onBlur: this.handleBlur,\n              onChange: this.handleChange,\n              onReturnKeyDown: this.handleBlur,\n              placeholder: this.detailInfoPlaceholder,\n              ref: \"valueInput\",\n              value: this.props.metafield.value\n            }),\n            this.renderActionButton()\n          )\n        );\n      }\n\n      return null;\n    }\n\n    return render;\n  }();\n\n  (0, _createClass3.default)(Metafield, [{\n    key: \"detailNamePlaceholder\",\n    get: function () {\n      return this.props.detailNamePlaceholder || \"Detail Name\";\n    }\n  }, {\n    key: \"i18nKeyDetailName\",\n    get: function () {\n      return this.props.i18nKeyDetailName || \"productDetailEdit.detailName\";\n    }\n  }, {\n    key: \"detailInfoPlaceholder\",\n    get: function () {\n      return this.props.detailInfoPlaceholder || \"Detail Information\";\n    }\n  }, {\n    key: \"i18nKeyDetailInformation\",\n    get: function () {\n      return this.props.i18nKeyDetailInfo || \"productDetail.detailsInfo\";\n    } /**\n       * Handle form submit\n       * @param  {Event} event Event object\n       * @return {void} no return value\n       */\n  }]);\n  return Metafield;\n}(Component);\n\nMetafield.defaultProps = {\n  editable: true\n}; // Prop Types\n\nMetafield.propTypes = {\n  blank: PropTypes.bool,\n  detailInfoPlaceholder: PropTypes.func,\n  detailNamePlaceholder: PropTypes.func,\n  i18nKeyDetailInfo: PropTypes.func,\n  i18nKeyDetailName: PropTypes.func,\n  index: PropTypes.number,\n  metafield: PropTypes.object,\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func,\n  onRemove: PropTypes.func\n};\nmodule.export(\"default\", exports.default = Metafield);","map":{"version":3,"sources":["/imports/plugins/core/ui/client/components/metadata/metafield.js"],"names":["React","Component","PropTypes","Velocity","TextField","Button","Metafield","componentWillReceiveProps","nextProps","metafield","key","props","input","refs","keyInput","RunSequence","e","p","backgroundColor","o","duration","value","valueInput","detailNamePlaceholder","i18nKeyDetailName","detailInfoPlaceholder","i18nKeyDetailInformation","i18nKeyDetailInfo","handleSubmit","event","preventDefault","handleChange","onChange","newMetadata","index","handleBlur","onBlur","handleRemove","onRemove","renderActionButton","blank","render","defaultProps","editable","propTypes","bool","func","number","object"],"mappings":"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","file":"/imports/plugins/core/ui/client/components/metadata/metafield.js.map","sourcesContent":["import React, { Component, PropTypes } from \"react\";\nimport Velocity from \"velocity-animate\";\nimport \"velocity-animate/velocity.ui\";\nimport { TextField, Button } from \"../\";\n\nclass Metafield extends Component {\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.metafield.key !== this.props.metafield.key) {\n      const input = this.refs.keyInput.refs.input;\n\n      Velocity.RunSequence([\n        { e: input, p: { backgroundColor: \"#e2f2e2\" }, o: { duration: 200 } },\n        { e: input, p: { backgroundColor: \"#fff\" }, o: { duration: 100 } }\n      ]);\n    }\n\n    if (nextProps.metafield.value !== this.props.metafield.value) {\n      const input = this.refs.valueInput.refs.input;\n\n      Velocity.RunSequence([\n        { e: input, p: { backgroundColor: \"#e2f2e2\" }, o: { duration: 200 } },\n        { e: input, p: { backgroundColor: \"#fff\" }, o: { duration: 100 } }\n      ]);\n    }\n  }\n\n  get detailNamePlaceholder() {\n    return this.props.detailNamePlaceholder || \"Detail Name\";\n  }\n\n  get i18nKeyDetailName() {\n    return this.props.i18nKeyDetailName || \"productDetailEdit.detailName\";\n  }\n\n  get detailInfoPlaceholder() {\n    return this.props.detailInfoPlaceholder || \"Detail Information\";\n  }\n\n  get i18nKeyDetailInformation() {\n    return this.props.i18nKeyDetailInfo || \"productDetail.detailsInfo\";\n  }\n\n  /**\n   * Handle form submit\n   * @param  {Event} event Event object\n   * @return {void} no return value\n   */\n  handleSubmit = (event) => {\n    event.preventDefault();\n  }\n\n  handleChange = (event) => {\n    if (this.props.onChange) {\n      const newMetadata = {\n        key: this.refs.keyInput.refs.input.value,\n        value: this.refs.valueInput.refs.input.value\n      };\n\n      this.props.onChange(event, newMetadata, this.props.index);\n    }\n  }\n\n  handleBlur = (event) => {\n    if (this.props.onBlur) {\n      const newMetadata = {\n        key: this.refs.keyInput.refs.input.value,\n        value: this.refs.valueInput.refs.input.value\n      };\n\n      if (newMetadata.key && newMetadata.value) {\n        this.props.onBlur(event, newMetadata, this.props.index);\n      }\n    }\n  }\n\n  handleRemove = (event) => {\n    if (this.props.onRemove) {\n      this.props.onRemove(event, this.props.metafield, this.props.index);\n    }\n  }\n\n  renderActionButton() {\n    if (this.props.blank === true) {\n      return (\n        <Button icon=\"plus\" onClick={this.handleSubmit} type=\"submit\" />\n      );\n    }\n    return (\n      <Button icon=\"times-circle\" onClick={this.handleRemove} type=\"button\" />\n    );\n  }\n\n  /**\n   * Render a metadata form\n   * @return {JSX} metadata forms for each row of metadata\n   */\n  render() {\n    if (this.props.metafield) {\n      return (\n        <div className=\"rui list-group-item metafield-list-item\">\n          <form className=\"form form-inline\" onSubmit={this.handleSubmit}>\n            <TextField\n              className=\"metafield-key-input\"\n              i18nKeyPlaceholder={this.i18nKeyDetailName}\n              name=\"key\"\n              onBlur={this.handleBlur}\n              onChange={this.handleChange}\n              onReturnKeyDown={this.handleBlur}\n              placeholder={this.detailNamePlaceholder}\n              ref=\"keyInput\"\n              value={this.props.metafield.key}\n            />\n            <TextField\n              className=\"metafield-value-input\"\n              i18nKeyPlaceholder={this.i18nKeyDetailInformation}\n              name=\"value\"\n              onBlur={this.handleBlur}\n              onChange={this.handleChange}\n              onReturnKeyDown={this.handleBlur}\n              placeholder={this.detailInfoPlaceholder}\n              ref=\"valueInput\"\n              value={this.props.metafield.value}\n            />\n            {this.renderActionButton()}\n          </form>\n        </div>\n      );\n    }\n    return null;\n  }\n}\n\nMetafield.defaultProps = {\n  editable: true\n};\n\n// Prop Types\nMetafield.propTypes = {\n  blank: PropTypes.bool,\n  detailInfoPlaceholder: PropTypes.func,\n  detailNamePlaceholder: PropTypes.func,\n  i18nKeyDetailInfo: PropTypes.func,\n  i18nKeyDetailName: PropTypes.func,\n  index: PropTypes.number,\n  metafield: PropTypes.object,\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func,\n  onRemove: PropTypes.func\n};\n\nexport default Metafield;\n"]},"hash":"9c07f8a72801a597e3fa9940b2d825de41fcd4ad"}
