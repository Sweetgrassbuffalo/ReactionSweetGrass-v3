{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/templating","imported":["Template"],"specifiers":[{"kind":"named","imported":"Template","local":"Template"}]},{"source":"/client/api","imported":["Reaction"],"specifiers":[{"kind":"named","imported":"Reaction","local":"Reaction"}]},{"source":"./methods.html","imported":[],"specifiers":[]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/core/payments/client/checkout/payment/methods.js","filenameRelative":"/imports/plugins/core/payments/client/checkout/payment/methods.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/core/payments/client/checkout/payment/methods.js"],"names":["Template","Reaction","corePaymentMethods","helpers","enabledPayments","onCreated","payments","paymentsEnabled","length","openActionView","events","event","preventDefault","enabledPaymentsArr","apps","Apps","provides","enabled","app","push","dashboardRegistryEntry","name","paymentRegistryEntry","showActionView"],"mappings":"AAAA,IAAS;AAAT,OAAyB,WAAzB;;;;;;;;;;;kBACA,AAAS,AAAgB,AACzB,AAAO,AAEP,AAAS,AAAmB,AAAQ;AAClC;AAGF,AAAS,AAAmB,AAAU,AAAY,AAChD,AAAM,AAAW;AALnB,AAAoC;AAMlC,AAAM,SAAkB,mBAAS,UAFe,AAEhD,AACA;iBACA;AAAI,AAAC,MAAL,AAAsB,2BACpB,QACD;;wBANH,AAOC;AAED;AAAA,AAAS,AAAmB,AAAO,AACjC;AAAA,AAAsD,AAAO,AAC3D,AAAM;AACN;;UAHJ,AAAmC;;AAOnC,AAAS,AAAkB,AACzB,AAAM,AAAqB;AAJ1B;;AAKD,AAAM,SAAO,AAAS,kBAAT,AAAc,AACzB;MAAU,qBADe,AAEzB;MAAS;AAFX;aAIA,AAAK,AAAO,AAAM,AAChB;AALW,AAAc;;uBAKrB;AAAJ,AAAoB,AAAM,AAAmB,AAAK,AACnD;;AADK,AAAI;;;;;;;;AAEV;;SAAA,AAAO,AACR;;;AAED,SAAA,AAAS,iBAAiB,AACxB;MAAM,kCAAyB,AAAS;;cAAO;AAAF,GAAd;MAAc,AAAQ;;cAAR,AAA8B,AAAU;;AAArF,AAA+B,0BAC/B,CAAM,uBAAuB,AAAS,AAAK,AAAE,IAAM,qBAAR,AAA6B,AAAU;AAAlF,AAA6B,AAE7B,AAAS,AAAe,AACtB,AAAuB,AACvB,AAAqB,AAExB","file":"/imports/plugins/core/payments/client/checkout/payment/methods.js.map","sourcesContent":["import { Template } from \"meteor/templating\";\nimport { Reaction } from \"/client/api\";\nimport \"./methods.html\";\n\nTemplate.corePaymentMethods.helpers({\n  enabledPayments\n});\n\nTemplate.corePaymentMethods.onCreated(function () {\n  const payments = enabledPayments();\n  const paymentsEnabled = payments.length;\n  // If no payments enabled, show payments settings dashboard\n  if (!paymentsEnabled) {\n    openActionView();\n  }\n});\n\nTemplate.corePaymentMethods.events({\n  \"click [data-event-action=configure-payment-methods]\"(event) {\n    event.preventDefault();\n    openActionView();\n  }\n});\n\nfunction enabledPayments() {\n  const enabledPaymentsArr = [];\n  const apps = Reaction.Apps({\n    provides: \"paymentMethod\",\n    enabled: true\n  });\n  for (app of apps) {\n    if (app.enabled === true) enabledPaymentsArr.push(app);\n  }\n  return enabledPaymentsArr;\n}\n\nfunction openActionView() {\n  const dashboardRegistryEntry = Reaction.Apps({ name: \"reaction-dashboard\", provides: \"shortcut\" });\n  const paymentRegistryEntry = Reaction.Apps({ name: \"reaction-payments\", provides: \"settings\" });\n\n  Reaction.showActionView([\n    dashboardRegistryEntry[0],\n    paymentRegistryEntry[0]\n  ]);\n}\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/core/payments/client/checkout/payment/methods.js.map","sourceFileName":"/imports/plugins/core/payments/client/checkout/payment/methods.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"methods"},"ignored":false,"code":"var Template = void 0;\nmodule.importSync(\"meteor/templating\", {\n  Template: function (v) {\n    Template = v;\n  }\n}, 0);\nvar Reaction = void 0;\nmodule.importSync(\"/client/api\", {\n  Reaction: function (v) {\n    Reaction = v;\n  }\n}, 1);\nmodule.importSync(\"./methods.html\");\nTemplate.corePaymentMethods.helpers({\n  enabledPayments: enabledPayments\n});\nTemplate.corePaymentMethods.onCreated(function () {\n  var payments = enabledPayments();\n  var paymentsEnabled = payments.length; // If no payments enabled, show payments settings dashboard\n\n  if (!paymentsEnabled) {\n    openActionView();\n  }\n});\nTemplate.corePaymentMethods.events({\n  \"click [data-event-action=configure-payment-methods]\": function (event) {\n    event.preventDefault();\n    openActionView();\n  }\n});\n\nfunction enabledPayments() {\n  var enabledPaymentsArr = [];\n  var apps = Reaction.Apps({\n    provides: \"paymentMethod\",\n    enabled: true\n  });\n\n  for (var _iterator = apps, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      app = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      app = _i.value;\n    }\n\n    if (app.enabled === true) enabledPaymentsArr.push(app);\n  }\n\n  return enabledPaymentsArr;\n}\n\nfunction openActionView() {\n  var dashboardRegistryEntry = Reaction.Apps({\n    name: \"reaction-dashboard\",\n    provides: \"shortcut\"\n  });\n  var paymentRegistryEntry = Reaction.Apps({\n    name: \"reaction-payments\",\n    provides: \"settings\"\n  });\n  Reaction.showActionView([dashboardRegistryEntry[0], paymentRegistryEntry[0]]);\n}","map":{"version":3,"sources":["/imports/plugins/core/payments/client/checkout/payment/methods.js"],"names":["Template","Reaction","corePaymentMethods","helpers","enabledPayments","onCreated","payments","paymentsEnabled","length","openActionView","events","event","preventDefault","enabledPaymentsArr","apps","Apps","provides","enabled","app","push","dashboardRegistryEntry","name","paymentRegistryEntry","showActionView"],"mappings":"AAAA,IAAS;AAAT,OAAyB,WAAzB;;;;;;;;;;;kBACA,AAAS,AAAgB,AACzB,AAAO,AAEP,AAAS,AAAmB,AAAQ;AAClC;AAGF,AAAS,AAAmB,AAAU,AAAY,AAChD,AAAM,AAAW;AALnB,AAAoC;AAMlC,AAAM,SAAkB,mBAAS,UAFe,AAEhD,AACA;iBACA;AAAI,AAAC,MAAL,AAAsB,2BACpB,QACD;;wBANH,AAOC;AAED;AAAA,AAAS,AAAmB,AAAO,AACjC;AAAA,AAAsD,AAAO,AAC3D,AAAM;AACN;;UAHJ,AAAmC;;AAOnC,AAAS,AAAkB,AACzB,AAAM,AAAqB;AAJ1B;;AAKD,AAAM,SAAO,AAAS,kBAAT,AAAc,AACzB;MAAU,qBADe,AAEzB;MAAS;AAFX;aAIA,AAAK,AAAO,AAAM,AAChB;AALW,AAAc;;uBAKrB;AAAJ,AAAoB,AAAM,AAAmB,AAAK,AACnD;;AADK,AAAI;;;;;;;;AAEV;;SAAA,AAAO,AACR;;;AAED,SAAA,AAAS,iBAAiB,AACxB;MAAM,kCAAyB,AAAS;;cAAO;AAAF,GAAd;MAAc,AAAQ;;cAAR,AAA8B,AAAU;;AAArF,AAA+B,0BAC/B,CAAM,uBAAuB,AAAS,AAAK,AAAE,IAAM,qBAAR,AAA6B,AAAU;AAAlF,AAA6B,AAE7B,AAAS,AAAe,AACtB,AAAuB,AACvB,AAAqB,AAExB","file":"/imports/plugins/core/payments/client/checkout/payment/methods.js.map","sourcesContent":["import { Template } from \"meteor/templating\";\nimport { Reaction } from \"/client/api\";\nimport \"./methods.html\";\n\nTemplate.corePaymentMethods.helpers({\n  enabledPayments\n});\n\nTemplate.corePaymentMethods.onCreated(function () {\n  const payments = enabledPayments();\n  const paymentsEnabled = payments.length;\n  // If no payments enabled, show payments settings dashboard\n  if (!paymentsEnabled) {\n    openActionView();\n  }\n});\n\nTemplate.corePaymentMethods.events({\n  \"click [data-event-action=configure-payment-methods]\"(event) {\n    event.preventDefault();\n    openActionView();\n  }\n});\n\nfunction enabledPayments() {\n  const enabledPaymentsArr = [];\n  const apps = Reaction.Apps({\n    provides: \"paymentMethod\",\n    enabled: true\n  });\n  for (app of apps) {\n    if (app.enabled === true) enabledPaymentsArr.push(app);\n  }\n  return enabledPaymentsArr;\n}\n\nfunction openActionView() {\n  const dashboardRegistryEntry = Reaction.Apps({ name: \"reaction-dashboard\", provides: \"shortcut\" });\n  const paymentRegistryEntry = Reaction.Apps({ name: \"reaction-payments\", provides: \"settings\" });\n\n  Reaction.showActionView([\n    dashboardRegistryEntry[0],\n    paymentRegistryEntry[0]\n  ]);\n}\n"]},"hash":"de73537763a8c5d8499197d46e2c2aceec3777bf"}
