{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/aldeed:simple-schema","imported":["SimpleSchema"],"specifiers":[{"kind":"named","imported":"SimpleSchema","local":"SimpleSchema"}]}],"exports":{"exported":["Emails"],"specifiers":[{"kind":"local","local":"Emails","exported":"Emails"}]}}},"options":{"filename":"/lib/collections/schemas/emails.js","filenameRelative":"/lib/collections/schemas/emails.js","inputSourceMap":{"version":3,"sources":["/lib/collections/schemas/emails.js"],"names":["SimpleSchema","Emails","to","type","String","from","subject","text","optional","html","userId","jobId","index","status","createdAt","Date","autoValue","isInsert","isUpsert","$setOnInsert","unset","updatedAt","isUpdate","denyInsert"],"mappings":"AAAA,OAAS;AAAT;WAA6B;;;;AAA7B;;;;GAEA,AAAO,AAAM,AAAS,AAAI,AAAa,AACrC,AAAI;;;UAIJ,AAAM,AACJ,AAAM;AAN6B,AACjC,AACI;AAF6B;UAAA,AAS5B,AACP,AAAM,AAGR;AAJA;AAIM;UAb+B,AAa/B,AACE,AACN,AAAU,AAGZ;AAJE;;UAII,AACE,AACN;cApBmC,AAkB/B,AAEM,AAGZ,AAAQ,AACN;AANI,AACJ;;UAnBmC,AAuB7B,AAEI;cAGZ,AAAO,AACL,AAAM,AACN;AAPM,AACA,AACN;;UAQF;AAAM,cAAA,AACJ,AAAM,AACN,AAAU;AAnCyB,AA4B9B,AAEE;AA9B4B;UAsC7B,AACN;AAAM,WAvC6B,AAsC7B,AAIR,AAAW,AACT;AALF;;UAME;cAAY,AACV,AAAI,AAAK,AAAU,AACjB,AAAO,AAAI,AACZ;AALM,AACH;AAEJ;UAGE,AAAO,AACL,AAAc,AAAI,AAErB;AAJM,AAAI,AAAK,AAAU,AACxB;;UAIF;AAAO,2BAAP,AAAO,AAAK,AACb;;mBArDkC,AA0C1B;gCAcX;AAAW;AAAA,AACH,4BACN;AADA;AACY,AACV;;AAAI,aAAK,KAAT,AAAmB,AACjB;AAAA,AAAO,AAAI,AACZ,AACD;;;AANO;2BAQT;eARS,AAQG,UACZ;AAAU,mBATD;AAxDN,AAAe,AAAiB;;;;;;AA8DjC,AAAO,AAAK,AACb;AA7DD","file":"/lib/collections/schemas/emails.js.map","sourcesContent":["import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\n\nexport const Emails = new SimpleSchema({\n  to: {\n    type: String\n  },\n\n  from: {\n    type: String\n  },\n\n  subject: {\n    type: String\n  },\n\n  text: {\n    type: String,\n    optional: true\n  },\n\n  html: {\n    type: String,\n    optional: true\n  },\n\n  userId: {\n    type: String,\n    optional: true\n  },\n\n  jobId: {\n    type: String,\n    index: true\n  },\n\n  type: {\n    type: String,\n    optional: true\n  },\n\n  status: {\n    type: String\n  },\n\n  createdAt: {\n    type: Date,\n    autoValue() {\n      if (this.isInsert) {\n        return new Date();\n      } else if (this.isUpsert) {\n        return {\n          $setOnInsert: new Date()\n        };\n      }\n      return this.unset();\n    }\n  },\n\n  updatedAt: {\n    type: Date,\n    autoValue() {\n      if (this.isUpdate) {\n        return new Date();\n      }\n      return this.unset();\n    },\n    denyInsert: true,\n    optional: true\n  }\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/lib/collections/schemas/emails.js.map","sourceFileName":"/lib/collections/schemas/emails.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"emails"},"ignored":false,"code":"module.export({\n  Emails: function () {\n    return Emails;\n  }\n});\nvar SimpleSchema = void 0;\nmodule.importSync(\"meteor/aldeed:simple-schema\", {\n  SimpleSchema: function (v) {\n    SimpleSchema = v;\n  }\n}, 0);\nvar Emails = new SimpleSchema({\n  to: {\n    type: String\n  },\n  from: {\n    type: String\n  },\n  subject: {\n    type: String\n  },\n  text: {\n    type: String,\n    optional: true\n  },\n  html: {\n    type: String,\n    optional: true\n  },\n  userId: {\n    type: String,\n    optional: true\n  },\n  jobId: {\n    type: String,\n    index: true\n  },\n  type: {\n    type: String,\n    optional: true\n  },\n  status: {\n    type: String\n  },\n  createdAt: {\n    type: Date,\n    autoValue: function () {\n      if (this.isInsert) {\n        return new Date();\n      } else if (this.isUpsert) {\n        return {\n          $setOnInsert: new Date()\n        };\n      }\n\n      return this.unset();\n    }\n  },\n  updatedAt: {\n    type: Date,\n    autoValue: function () {\n      if (this.isUpdate) {\n        return new Date();\n      }\n\n      return this.unset();\n    },\n    denyInsert: true,\n    optional: true\n  }\n});","map":{"version":3,"sources":["/lib/collections/schemas/emails.js"],"names":["SimpleSchema","Emails","to","type","String","from","subject","text","optional","html","userId","jobId","index","status","createdAt","Date","autoValue","isInsert","isUpsert","$setOnInsert","unset","updatedAt","isUpdate","denyInsert"],"mappings":"AAAA,OAAS;AAAT;WAA6B;;;;AAA7B;;;;GAEA,AAAO,AAAM,AAAS,AAAI,AAAa,AACrC,AAAI;;;UAIJ,AAAM,AACJ,AAAM;AAN6B,AACjC,AACI;AAF6B;UAAA,AAS5B,AACP,AAAM,AAGR;AAJA;AAIM;UAb+B,AAa/B,AACE,AACN,AAAU,AAGZ;AAJE;;UAII,AACE,AACN;cApBmC,AAkB/B,AAEM,AAGZ,AAAQ,AACN;AANI,AACJ;;UAnBmC,AAuB7B,AAEI;cAGZ,AAAO,AACL,AAAM,AACN;AAPM,AACA,AACN;;UAQF;AAAM,cAAA,AACJ,AAAM,AACN,AAAU;AAnCyB,AA4B9B,AAEE;AA9B4B;UAsC7B,AACN;AAAM,WAvC6B,AAsC7B,AAIR,AAAW,AACT;AALF;;UAME;cAAY,AACV,AAAI,AAAK,AAAU,AACjB,AAAO,AAAI,AACZ;AALM,AACH;AAEJ;UAGE,AAAO,AACL,AAAc,AAAI,AAErB;AAJM,AAAI,AAAK,AAAU,AACxB;;UAIF;AAAO,2BAAP,AAAO,AAAK,AACb;;mBArDkC,AA0C1B;gCAcX;AAAW;AAAA,AACH,4BACN;AADA;AACY,AACV;;AAAI,aAAK,KAAT,AAAmB,AACjB;AAAA,AAAO,AAAI,AACZ,AACD;;;AANO;2BAQT;eARS,AAQG,UACZ;AAAU,mBATD;AAxDN,AAAe,AAAiB;;;;;;AA8DjC,AAAO,AAAK,AACb;AA7DD","file":"/lib/collections/schemas/emails.js.map","sourcesContent":["import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\n\nexport const Emails = new SimpleSchema({\n  to: {\n    type: String\n  },\n\n  from: {\n    type: String\n  },\n\n  subject: {\n    type: String\n  },\n\n  text: {\n    type: String,\n    optional: true\n  },\n\n  html: {\n    type: String,\n    optional: true\n  },\n\n  userId: {\n    type: String,\n    optional: true\n  },\n\n  jobId: {\n    type: String,\n    index: true\n  },\n\n  type: {\n    type: String,\n    optional: true\n  },\n\n  status: {\n    type: String\n  },\n\n  createdAt: {\n    type: Date,\n    autoValue() {\n      if (this.isInsert) {\n        return new Date();\n      } else if (this.isUpsert) {\n        return {\n          $setOnInsert: new Date()\n        };\n      }\n      return this.unset();\n    }\n  },\n\n  updatedAt: {\n    type: Date,\n    autoValue() {\n      if (this.isUpdate) {\n        return new Date();\n      }\n      return this.unset();\n    },\n    denyInsert: true,\n    optional: true\n  }\n});\n"]},"hash":"0719d25160c60f47c82a5fef09b85010d8c76e0d"}
