{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"/client/api","imported":["Reaction","Router","i18next"],"specifiers":[{"kind":"named","imported":"Reaction","local":"Reaction"},{"kind":"named","imported":"Router","local":"Router"},{"kind":"named","imported":"i18next","local":"i18next"}]},{"source":"/lib/collections","imported":["Themes"],"specifiers":[{"kind":"named","imported":"Themes","local":"Themes"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/core/ui/client/templates/themeDetails/themeDetails.js","filenameRelative":"/imports/plugins/core/ui/client/templates/themeDetails/themeDetails.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/core/ui/client/templates/themeDetails/themeDetails.js"],"names":["Reaction","Router","i18next","Themes","Template","uiThemeDetails","onCreated","state","ReactiveDict","setDefault","selectedComponent","theme","subscribe","autorun","getQueryParam","set","showActionView","label","t","props","size","template","findOne","name","onRendered","helpers","activeClassName","componentName","instance","equals","components","get","map","component","defaultValue","publishTheme","Meteor","call","error","alertDescription","themeName","Alerts","toast","events","event","setQueryParams","currentTarget","dataset"],"mappings":"AAAA,IAAS;IAAT,AAAmB;IAAnB,AAA2B;AAA3B,OAA0C,WAA1C;;;;;;;;;;;;;;;;GACA,AAAS,AAAc,AAEvB,AAAS,AAAe,AAAU,AAAY;AAC5C,AAAK,SAAL,AAAa,AAAI,eAAjB,AAAa;AACb;;OAAA,AAAK,AAAM,YAAX,AAAsB,AACpB;aAAmB;AACZ,uBAFT,AAAsB;WAKtB,AAAK,AAAU,AAEf,AAAK,AAAQ,AAAM,AACjB;AARoB,AAEpB;OAMM,UAAN,AAA0B,AAAO,AAAc,AAC/C,AAAK,AAAM,AAAI,AAAqB;2BAEpC;AAAI,QAAJ,AAAuB,yCACrB;;gBAAS,IAAT,AAAwB,qBAAA,AACtB,AAAO,AAAQ,AAAE,AAAwB,AACzC;;QAAO,mBACL;eAAM;AAHc,iDAKtB;;gBAVN,AAYG,AACF;AARG,AAAwB,AAKZ;kBAKhB,AAAK,AAAQ,AAAM,AACjB;AATW;AASX,AAAK,AAAQ,AAAO,AAAQ,AAAE;AAA9B,AAAa,AAAe,AAAQ,AACpC;OAAA,AAAK,QAAL,AAAW,AAAI,YAFjB,AAEE,AAAwB,AAAK,AAC9B;;YA3BH,AA4BC;;;mCAED;AAAA,AAAS,AAAe,AAAW,AAAY,AAE9C,AAED;AAAA,AAAS,AAAe,AAAQ,AAC9B,AAAgB,AAAe;AAC7B,AAAI,SAAS,eAAT,AAAoB,AAAM,WAA1B,AAAiC,YAArC,AAAI,AAAsD,AAAgB,AACxE,AAAO,AACR;AACD,SAAA,AAAO;AALqB;8EAQ9B;aAAa,AACX;AAAA,AAAM,AAAW,AAAS,AAC1B;;AAAM,WAAN,AAAc,AAAS,AAAM,AAAI,AACjC;AAAA,AAAI,AAAa,AAEjB;AAAA,AAAI,0BAAO,AACT;QAAa,WAAM,SAAN,AAAiB,AAAI,AAAC,AAAc,AAC/C;QAAO,2BACL;QAAO,aAAA,AAAQ,AAAG,AAAwB,AAAU,AAAK,AAAG,AAC1D,AAAc,AAAU;;QAFrB,AACE,OAGP;AAAM,yBAAU,oCAJX;AAAP;;oCASJ;AAFC;AAEM,gBAAP,UAxB4B,AAyB7B;AAXG,AAAa,AAOZ;AAML;AAAe,AACb,AAAM,AAAW,AAAS,AAC1B;;WAAO,AAAM,AACX;AAAA,AAAM,AAAQ,AAAS,AAAM,AAAI,AAAY,AAC7C,AAAO,AAAK,AAAmB,AAAO,AAAC,AAAU,AAC/C;AAAI,4BAAJ,AAAW,AACT;QAAM,oBAAmB,AAAQ,AAAE,AAAgC,AACjE;uBADiE,AAClD,AAAyB,AAAM,AAAK,AACnD;kBAAW,SAAM,sBAFgD;AAAnE,AAAyB,6DAIzB;YAAO,OAAP,AAAa,AAAkB,AAChC;;4DATL,AAWC;6BACF;AAVG,AAQC;yCAvCP,AAAgC;AA4ChC;AAAA,AAAS,AAAe,AAAO,AAC7B;AAAA,AAA+C,AAAO,AACpD;AAAA,AAAO,AAAe,AACpB,AAAW,AAAM,AAAc,AAAQ;AAzC1C;AA2CA;mEALH,AAA+B","file":"/imports/plugins/core/ui/client/templates/themeDetails/themeDetails.js.map","sourcesContent":["import { Reaction, Router, i18next } from \"/client/api\";\nimport { Themes } from \"/lib/collections\";\n\nTemplate.uiThemeDetails.onCreated(function () {\n  this.state = new ReactiveDict();\n  this.state.setDefault({\n    selectedComponent: null,\n    theme: {}\n  });\n\n  this.subscribe(\"Themes\");\n\n  this.autorun(() => {\n    const selectedComponent = Router.getQueryParam(\"component\");\n    this.state.set(\"selectedComponent\", selectedComponent);\n\n    if (selectedComponent) {\n      Reaction.showActionView({\n        label: i18next.t(\"reactionUI.editTheme\", \"Edit Theme\"),\n        props: {\n          size: \"large\"\n        },\n        template: \"uiThemeEditor\"\n      });\n    }\n  });\n\n  this.autorun(() => {\n    this.theme = Themes.findOne({ name: \"base\" });\n    this.state.set(\"theme\", this.theme);\n  });\n});\n\nTemplate.uiThemeDetails.onRendered(function () {\n\n});\n\nTemplate.uiThemeDetails.helpers({\n  activeClassName(componentName) {\n    if (Template.instance().state.equals(\"selectedComponent\", componentName)) {\n      return \"active\";\n    }\n    return \"\";\n  },\n\n  components() {\n    const instance = Template.instance();\n    const theme = instance.state.get(\"theme\");\n    let components = [];\n\n    if (theme) {\n      components = theme.components.map((component) => {\n        return {\n          label: i18next.t(`reactionUI.components.${component.name}`, {\n            defaultValue: component.label\n          }),\n          name: component.name\n        };\n      });\n    }\n\n    return components;\n  },\n\n  publishTheme() {\n    const instance = Template.instance();\n    return () => {\n      const theme = instance.state.get(\"theme\") || {};\n      Meteor.call(\"ui/publishTheme\", theme, (error) => {\n        if (error) {\n          const alertDescription = i18next.t(\"reactionUI.publishThemeError\", {\n            defaultValue: `Couldn't publish theme ${theme.name}`,\n            themeName: theme.name\n          });\n          Alerts.toast(alertDescription, \"error\");\n        }\n      });\n    };\n  }\n});\n\nTemplate.uiThemeDetails.events({\n  \"click [data-event-action=editComponentTheme]\"(event) {\n    Router.setQueryParams({\n      component: event.currentTarget.dataset.component\n    });\n  }\n\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/core/ui/client/templates/themeDetails/themeDetails.js.map","sourceFileName":"/imports/plugins/core/ui/client/templates/themeDetails/themeDetails.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"themeDetails"},"ignored":false,"code":"var Reaction = void 0,\n    Router = void 0,\n    i18next = void 0;\nmodule.importSync(\"/client/api\", {\n  Reaction: function (v) {\n    Reaction = v;\n  },\n  Router: function (v) {\n    Router = v;\n  },\n  i18next: function (v) {\n    i18next = v;\n  }\n}, 0);\nvar Themes = void 0;\nmodule.importSync(\"/lib/collections\", {\n  Themes: function (v) {\n    Themes = v;\n  }\n}, 1);\nTemplate.uiThemeDetails.onCreated(function () {\n  var _this = this;\n\n  this.state = new ReactiveDict();\n  this.state.setDefault({\n    selectedComponent: null,\n    theme: {}\n  });\n  this.subscribe(\"Themes\");\n  this.autorun(function () {\n    var selectedComponent = Router.getQueryParam(\"component\");\n\n    _this.state.set(\"selectedComponent\", selectedComponent);\n\n    if (selectedComponent) {\n      Reaction.showActionView({\n        label: i18next.t(\"reactionUI.editTheme\", \"Edit Theme\"),\n        props: {\n          size: \"large\"\n        },\n        template: \"uiThemeEditor\"\n      });\n    }\n  });\n  this.autorun(function () {\n    _this.theme = Themes.findOne({\n      name: \"base\"\n    });\n\n    _this.state.set(\"theme\", _this.theme);\n  });\n});\nTemplate.uiThemeDetails.onRendered(function () {});\nTemplate.uiThemeDetails.helpers({\n  activeClassName: function (componentName) {\n    if (Template.instance().state.equals(\"selectedComponent\", componentName)) {\n      return \"active\";\n    }\n\n    return \"\";\n  },\n  components: function () {\n    var instance = Template.instance();\n    var theme = instance.state.get(\"theme\");\n    var components = [];\n\n    if (theme) {\n      components = theme.components.map(function (component) {\n        return {\n          label: i18next.t(\"reactionUI.components.\" + component.name, {\n            defaultValue: component.label\n          }),\n          name: component.name\n        };\n      });\n    }\n\n    return components;\n  },\n  publishTheme: function () {\n    var instance = Template.instance();\n    return function () {\n      var theme = instance.state.get(\"theme\") || {};\n      Meteor.call(\"ui/publishTheme\", theme, function (error) {\n        if (error) {\n          var alertDescription = i18next.t(\"reactionUI.publishThemeError\", {\n            defaultValue: \"Couldn't publish theme \" + theme.name,\n            themeName: theme.name\n          });\n          Alerts.toast(alertDescription, \"error\");\n        }\n      });\n    };\n  }\n});\nTemplate.uiThemeDetails.events({\n  \"click [data-event-action=editComponentTheme]\": function (event) {\n    Router.setQueryParams({\n      component: event.currentTarget.dataset.component\n    });\n  }\n});","map":{"version":3,"sources":["/imports/plugins/core/ui/client/templates/themeDetails/themeDetails.js"],"names":["Reaction","Router","i18next","Themes","Template","uiThemeDetails","onCreated","state","ReactiveDict","setDefault","selectedComponent","theme","subscribe","autorun","getQueryParam","set","showActionView","label","t","props","size","template","findOne","name","onRendered","helpers","activeClassName","componentName","instance","equals","components","get","map","component","defaultValue","publishTheme","Meteor","call","error","alertDescription","themeName","Alerts","toast","events","event","setQueryParams","currentTarget","dataset"],"mappings":"AAAA,IAAS;IAAT,AAAmB;IAAnB,AAA2B;AAA3B,OAA0C,WAA1C;;;;;;;;;;;;;;;;GACA,AAAS,AAAc,AAEvB,AAAS,AAAe,AAAU,AAAY;AAC5C,AAAK,SAAL,AAAa,AAAI,eAAjB,AAAa;AACb;;OAAA,AAAK,AAAM,YAAX,AAAsB,AACpB;aAAmB;AACZ,uBAFT,AAAsB;WAKtB,AAAK,AAAU,AAEf,AAAK,AAAQ,AAAM,AACjB;AARoB,AAEpB;OAMM,UAAN,AAA0B,AAAO,AAAc,AAC/C,AAAK,AAAM,AAAI,AAAqB;2BAEpC;AAAI,QAAJ,AAAuB,yCACrB;;gBAAS,IAAT,AAAwB,qBAAA,AACtB,AAAO,AAAQ,AAAE,AAAwB,AACzC;;QAAO,mBACL;eAAM;AAHc,iDAKtB;;gBAVN,AAYG,AACF;AARG,AAAwB,AAKZ;kBAKhB,AAAK,AAAQ,AAAM,AACjB;AATW;AASX,AAAK,AAAQ,AAAO,AAAQ,AAAE;AAA9B,AAAa,AAAe,AAAQ,AACpC;OAAA,AAAK,QAAL,AAAW,AAAI,YAFjB,AAEE,AAAwB,AAAK,AAC9B;;YA3BH,AA4BC;;;mCAED;AAAA,AAAS,AAAe,AAAW,AAAY,AAE9C,AAED;AAAA,AAAS,AAAe,AAAQ,AAC9B,AAAgB,AAAe;AAC7B,AAAI,SAAS,eAAT,AAAoB,AAAM,WAA1B,AAAiC,YAArC,AAAI,AAAsD,AAAgB,AACxE,AAAO,AACR;AACD,SAAA,AAAO;AALqB;8EAQ9B;aAAa,AACX;AAAA,AAAM,AAAW,AAAS,AAC1B;;AAAM,WAAN,AAAc,AAAS,AAAM,AAAI,AACjC;AAAA,AAAI,AAAa,AAEjB;AAAA,AAAI,0BAAO,AACT;QAAa,WAAM,SAAN,AAAiB,AAAI,AAAC,AAAc,AAC/C;QAAO,2BACL;QAAO,aAAA,AAAQ,AAAG,AAAwB,AAAU,AAAK,AAAG,AAC1D,AAAc,AAAU;;QAFrB,AACE,OAGP;AAAM,yBAAU,oCAJX;AAAP;;oCASJ;AAFC;AAEM,gBAAP,UAxB4B,AAyB7B;AAXG,AAAa,AAOZ;AAML;AAAe,AACb,AAAM,AAAW,AAAS,AAC1B;;WAAO,AAAM,AACX;AAAA,AAAM,AAAQ,AAAS,AAAM,AAAI,AAAY,AAC7C,AAAO,AAAK,AAAmB,AAAO,AAAC,AAAU,AAC/C;AAAI,4BAAJ,AAAW,AACT;QAAM,oBAAmB,AAAQ,AAAE,AAAgC,AACjE;uBADiE,AAClD,AAAyB,AAAM,AAAK,AACnD;kBAAW,SAAM,sBAFgD;AAAnE,AAAyB,6DAIzB;YAAO,OAAP,AAAa,AAAkB,AAChC;;4DATL,AAWC;6BACF;AAVG,AAQC;yCAvCP,AAAgC;AA4ChC;AAAA,AAAS,AAAe,AAAO,AAC7B;AAAA,AAA+C,AAAO,AACpD;AAAA,AAAO,AAAe,AACpB,AAAW,AAAM,AAAc,AAAQ;AAzC1C;AA2CA;mEALH,AAA+B","file":"/imports/plugins/core/ui/client/templates/themeDetails/themeDetails.js.map","sourcesContent":["import { Reaction, Router, i18next } from \"/client/api\";\nimport { Themes } from \"/lib/collections\";\n\nTemplate.uiThemeDetails.onCreated(function () {\n  this.state = new ReactiveDict();\n  this.state.setDefault({\n    selectedComponent: null,\n    theme: {}\n  });\n\n  this.subscribe(\"Themes\");\n\n  this.autorun(() => {\n    const selectedComponent = Router.getQueryParam(\"component\");\n    this.state.set(\"selectedComponent\", selectedComponent);\n\n    if (selectedComponent) {\n      Reaction.showActionView({\n        label: i18next.t(\"reactionUI.editTheme\", \"Edit Theme\"),\n        props: {\n          size: \"large\"\n        },\n        template: \"uiThemeEditor\"\n      });\n    }\n  });\n\n  this.autorun(() => {\n    this.theme = Themes.findOne({ name: \"base\" });\n    this.state.set(\"theme\", this.theme);\n  });\n});\n\nTemplate.uiThemeDetails.onRendered(function () {\n\n});\n\nTemplate.uiThemeDetails.helpers({\n  activeClassName(componentName) {\n    if (Template.instance().state.equals(\"selectedComponent\", componentName)) {\n      return \"active\";\n    }\n    return \"\";\n  },\n\n  components() {\n    const instance = Template.instance();\n    const theme = instance.state.get(\"theme\");\n    let components = [];\n\n    if (theme) {\n      components = theme.components.map((component) => {\n        return {\n          label: i18next.t(`reactionUI.components.${component.name}`, {\n            defaultValue: component.label\n          }),\n          name: component.name\n        };\n      });\n    }\n\n    return components;\n  },\n\n  publishTheme() {\n    const instance = Template.instance();\n    return () => {\n      const theme = instance.state.get(\"theme\") || {};\n      Meteor.call(\"ui/publishTheme\", theme, (error) => {\n        if (error) {\n          const alertDescription = i18next.t(\"reactionUI.publishThemeError\", {\n            defaultValue: `Couldn't publish theme ${theme.name}`,\n            themeName: theme.name\n          });\n          Alerts.toast(alertDescription, \"error\");\n        }\n      });\n    };\n  }\n});\n\nTemplate.uiThemeDetails.events({\n  \"click [data-event-action=editComponentTheme]\"(event) {\n    Router.setQueryParams({\n      component: event.currentTarget.dataset.component\n    });\n  }\n\n});\n"]},"hash":"a8bf7edf65bd4ef34fd10d1d532210637b68d6c6"}
