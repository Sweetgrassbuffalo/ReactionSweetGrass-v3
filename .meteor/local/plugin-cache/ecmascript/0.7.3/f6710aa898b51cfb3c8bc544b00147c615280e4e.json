{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","createClass","classCallCheck","extends","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component","PropTypes"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"},{"kind":"named","imported":"PropTypes","local":"PropTypes"}]},{"source":"react-dropzone","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Dropzone"}]},{"source":"react-measure","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Measure"}]},{"source":"./media","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"MediaItem"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/core/ui/client/components/media/mediaGallery.js","filenameRelative":"/imports/plugins/core/ui/client/components/media/mediaGallery.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/core/ui/client/components/media/mediaGallery.js"],"names":["React","Component","PropTypes","Dropzone","Measure","MediaItem","MediaGallery","state","dimensions","width","height","hasMedia","Array","isArray","props","media","length","allowFeaturedMediaHover","featuredMedia","handleDropClick","refs","dropzone","open","renderAddItem","editable","renderFeaturedMedia","map","index","setState","revision","metadata","onMouseEnterMedia","onMoveMedia","onRemoveMedia","renderMediaThumbnails","renderMediaGalleryUploader","containerWidth","mediaGalleryWidth","featured","gallery","onDrop","renderMediaGallery","render","propTypes","bool","oneOfType","string","object","arrayOf","mediaGalleryHeight","number","func","onMouseLeaveMedia"],"mappings":"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","file":"/imports/plugins/core/ui/client/components/media/mediaGallery.js.map","sourcesContent":["import React, { Component, PropTypes } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport Measure from \"react-measure\";\nimport MediaItem from \"./media\";\n\nclass MediaGallery extends Component {\n  state = {\n    dimensions: {\n      width: -1,\n      height: -1\n    }\n  };\n\n  get hasMedia() {\n    return Array.isArray(this.props.media) && this.props.media.length > 0;\n  }\n\n  get allowFeaturedMediaHover() {\n    if (this.props.allowFeaturedMediaHover && this.props.featuredMedia) {\n      return true;\n    }\n\n    return false;\n  }\n\n  get featuredMedia() {\n    return this.props.featuredMedia || this.props.media[0];\n  }\n\n  handleDropClick = () => {\n    this.refs.dropzone.open();\n  }\n\n  renderAddItem() {\n    if (this.props.editable) {\n      return (\n        <div\n          className=\"gallery-image add\"\n          onClick={this.handleDropClick}\n        >\n          <img\n            alt=\"\"\n            className=\"img-responsive\"\n            src={\"/resources/placeholder.gif\"}\n          />\n          <div className=\"rui badge-container\">\n            <i className=\"fa fa-plus fa-2x\" />\n          </div>\n        </div>\n      );\n    }\n\n    return null;\n  }\n\n  renderFeaturedMedia() {\n    const { width, height } = this.state.dimensions;\n\n    if (this.hasMedia) {\n      return this.props.media.map((media, index) => {\n        if (index === 0) {\n          return (\n            <Measure\n              key={index}\n              onMeasure={(dimensions) => {\n                this.setState({ dimensions });\n              }}\n            >\n              <MediaItem\n                editable={this.props.editable}\n                index={index}\n                key={index}\n                revision={this.featuredMedia.revision}\n                metadata={this.featuredMedia.metadata}\n                onMouseEnter={this.props.onMouseEnterMedia}\n                onMove={this.props.onMoveMedia}\n                onRemoveMedia={this.props.onRemoveMedia}\n                source={this.featuredMedia}\n                mediaHeight={height}\n                mediaWidth={width}\n                isFeatured={true}\n                {...this.props}\n              />\n            </Measure>\n          );\n        }\n      });\n    }\n\n    return (\n      <MediaItem />\n    );\n  }\n\n  renderMediaThumbnails() {\n    if (this.hasMedia) {\n      return this.props.media.map((media, index) => {\n        return (\n          <MediaItem\n            editable={this.props.editable}\n            index={index}\n            key={index}\n            revision={media.revision}\n            metadata={media.metadata}\n            onMouseEnter={this.props.onMouseEnterMedia}\n            onMove={this.props.onMoveMedia}\n            onRemoveMedia={this.props.onRemoveMedia}\n            source={media}\n          />\n        );\n      });\n    }\n    return null;\n  }\n\n  renderMediaGalleryUploader() {\n    const containerWidth = this.props.mediaGalleryWidth;\n    let featured = this.renderAddItem();\n    let gallery;\n\n    // Only render media only if there is any\n    if (this.hasMedia) {\n      featured = this.renderFeaturedMedia();\n      gallery = this.renderMediaThumbnails();\n    }\n\n    return (\n      <div className=\"rui media-gallery\">\n        <Dropzone\n          className=\"rui gallery-drop-pane\"\n          disableClick={true}\n          multiple={true}\n          onDrop={this.props.onDrop}\n          ref=\"dropzone\"\n        >\n          <div className=\"rui gallery\">\n            <div className=\"featuredImage\" style={{ height: containerWidth + \"px\" }}>\n              {featured}\n            </div>\n            <div className=\"rui gallery-thumbnails\">\n              {gallery}\n              {this.renderAddItem()}\n            </div>\n          </div>\n        </Dropzone>\n      </div>\n    );\n  }\n\n  renderMediaGallery() {\n    const containerWidth = this.props.mediaGalleryWidth;\n\n    return (\n      <div className=\"rui media-gallery\">\n        <div className=\"rui gallery\">\n          <div className=\"featuredImage\" style={{ height: containerWidth + \"px\" }}>\n            {this.renderFeaturedMedia()}\n          </div>\n          <div className=\"rui gallery-thumbnails\">\n            {this.renderMediaThumbnails()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    if (this.props.editable) {\n      return this.renderMediaGalleryUploader();\n    }\n\n    return this.renderMediaGallery();\n  }\n}\n\nMediaGallery.propTypes = {\n  allowFeaturedMediaHover: PropTypes.bool,\n  editable: PropTypes.bool,\n  featuredMedia: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  media: PropTypes.arrayOf(PropTypes.object),\n  mediaGalleryHeight: PropTypes.number,\n  mediaGalleryWidth: PropTypes.number,\n  onDrop: PropTypes.func,\n  onMouseEnterMedia: PropTypes.func,\n  onMouseLeaveMedia: PropTypes.func,\n  onMoveMedia: PropTypes.func,\n  onRemoveMedia: PropTypes.func\n};\n\nexport default MediaGallery;\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/core/ui/client/components/media/mediaGallery.js.map","sourceFileName":"/imports/plugins/core/ui/client/components/media/mediaGallery.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"mediaGallery"},"ignored":false,"code":"var _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0,\n    Component = void 0,\n    PropTypes = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  },\n  PropTypes: function (v) {\n    PropTypes = v;\n  }\n}, 0);\nvar Dropzone = void 0;\nmodule.importSync(\"react-dropzone\", {\n  \"default\": function (v) {\n    Dropzone = v;\n  }\n}, 1);\nvar Measure = void 0;\nmodule.importSync(\"react-measure\", {\n  \"default\": function (v) {\n    Measure = v;\n  }\n}, 2);\nvar MediaItem = void 0;\nmodule.importSync(\"./media\", {\n  \"default\": function (v) {\n    MediaItem = v;\n  }\n}, 3);\n\nvar MediaGallery = function (_Component) {\n  (0, _inherits3.default)(MediaGallery, _Component);\n\n  function MediaGallery() {\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, MediaGallery);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.state = {\n      dimensions: {\n        width: -1,\n        height: -1\n      }\n    }, _this.handleDropClick = function () {\n      _this.refs.dropzone.open();\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  MediaGallery.prototype.renderAddItem = function () {\n    function renderAddItem() {\n      if (this.props.editable) {\n        return React.createElement(\n          \"div\",\n          {\n            className: \"gallery-image add\",\n            onClick: this.handleDropClick\n          },\n          React.createElement(\"img\", {\n            alt: \"\",\n            className: \"img-responsive\",\n            src: \"/resources/placeholder.gif\"\n          }),\n          React.createElement(\n            \"div\",\n            {\n              className: \"rui badge-container\"\n            },\n            React.createElement(\"i\", {\n              className: \"fa fa-plus fa-2x\"\n            })\n          )\n        );\n      }\n\n      return null;\n    }\n\n    return renderAddItem;\n  }();\n\n  MediaGallery.prototype.renderFeaturedMedia = function () {\n    function renderFeaturedMedia() {\n      var _this2 = this;\n\n      var _state$dimensions = this.state.dimensions,\n          width = _state$dimensions.width,\n          height = _state$dimensions.height;\n\n      if (this.hasMedia) {\n        return this.props.media.map(function (media, index) {\n          if (index === 0) {\n            return React.createElement(\n              Measure,\n              {\n                key: index,\n                onMeasure: function (dimensions) {\n                  _this2.setState({\n                    dimensions: dimensions\n                  });\n                }\n              },\n              React.createElement(MediaItem, (0, _extends3.default)({\n                editable: _this2.props.editable,\n                index: index,\n                key: index,\n                revision: _this2.featuredMedia.revision,\n                metadata: _this2.featuredMedia.metadata,\n                onMouseEnter: _this2.props.onMouseEnterMedia,\n                onMove: _this2.props.onMoveMedia,\n                onRemoveMedia: _this2.props.onRemoveMedia,\n                source: _this2.featuredMedia,\n                mediaHeight: height,\n                mediaWidth: width,\n                isFeatured: true\n              }, _this2.props))\n            );\n          }\n        });\n      }\n\n      return React.createElement(MediaItem, null);\n    }\n\n    return renderFeaturedMedia;\n  }();\n\n  MediaGallery.prototype.renderMediaThumbnails = function () {\n    function renderMediaThumbnails() {\n      var _this3 = this;\n\n      if (this.hasMedia) {\n        return this.props.media.map(function (media, index) {\n          return React.createElement(MediaItem, {\n            editable: _this3.props.editable,\n            index: index,\n            key: index,\n            revision: media.revision,\n            metadata: media.metadata,\n            onMouseEnter: _this3.props.onMouseEnterMedia,\n            onMove: _this3.props.onMoveMedia,\n            onRemoveMedia: _this3.props.onRemoveMedia,\n            source: media\n          });\n        });\n      }\n\n      return null;\n    }\n\n    return renderMediaThumbnails;\n  }();\n\n  MediaGallery.prototype.renderMediaGalleryUploader = function () {\n    function renderMediaGalleryUploader() {\n      var containerWidth = this.props.mediaGalleryWidth;\n      var featured = this.renderAddItem();\n      var gallery = void 0; // Only render media only if there is any\n\n      if (this.hasMedia) {\n        featured = this.renderFeaturedMedia();\n        gallery = this.renderMediaThumbnails();\n      }\n\n      return React.createElement(\n        \"div\",\n        {\n          className: \"rui media-gallery\"\n        },\n        React.createElement(\n          Dropzone,\n          {\n            className: \"rui gallery-drop-pane\",\n            disableClick: true,\n            multiple: true,\n            onDrop: this.props.onDrop,\n            ref: \"dropzone\"\n          },\n          React.createElement(\n            \"div\",\n            {\n              className: \"rui gallery\"\n            },\n            React.createElement(\n              \"div\",\n              {\n                className: \"featuredImage\",\n                style: {\n                  height: containerWidth + \"px\"\n                }\n              },\n              featured\n            ),\n            React.createElement(\n              \"div\",\n              {\n                className: \"rui gallery-thumbnails\"\n              },\n              gallery,\n              this.renderAddItem()\n            )\n          )\n        )\n      );\n    }\n\n    return renderMediaGalleryUploader;\n  }();\n\n  MediaGallery.prototype.renderMediaGallery = function () {\n    function renderMediaGallery() {\n      var containerWidth = this.props.mediaGalleryWidth;\n      return React.createElement(\n        \"div\",\n        {\n          className: \"rui media-gallery\"\n        },\n        React.createElement(\n          \"div\",\n          {\n            className: \"rui gallery\"\n          },\n          React.createElement(\n            \"div\",\n            {\n              className: \"featuredImage\",\n              style: {\n                height: containerWidth + \"px\"\n              }\n            },\n            this.renderFeaturedMedia()\n          ),\n          React.createElement(\n            \"div\",\n            {\n              className: \"rui gallery-thumbnails\"\n            },\n            this.renderMediaThumbnails()\n          )\n        )\n      );\n    }\n\n    return renderMediaGallery;\n  }();\n\n  MediaGallery.prototype.render = function () {\n    function render() {\n      if (this.props.editable) {\n        return this.renderMediaGalleryUploader();\n      }\n\n      return this.renderMediaGallery();\n    }\n\n    return render;\n  }();\n\n  (0, _createClass3.default)(MediaGallery, [{\n    key: \"hasMedia\",\n    get: function () {\n      return Array.isArray(this.props.media) && this.props.media.length > 0;\n    }\n  }, {\n    key: \"allowFeaturedMediaHover\",\n    get: function () {\n      if (this.props.allowFeaturedMediaHover && this.props.featuredMedia) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"featuredMedia\",\n    get: function () {\n      return this.props.featuredMedia || this.props.media[0];\n    }\n  }]);\n  return MediaGallery;\n}(Component);\n\nMediaGallery.propTypes = {\n  allowFeaturedMediaHover: PropTypes.bool,\n  editable: PropTypes.bool,\n  featuredMedia: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  media: PropTypes.arrayOf(PropTypes.object),\n  mediaGalleryHeight: PropTypes.number,\n  mediaGalleryWidth: PropTypes.number,\n  onDrop: PropTypes.func,\n  onMouseEnterMedia: PropTypes.func,\n  onMouseLeaveMedia: PropTypes.func,\n  onMoveMedia: PropTypes.func,\n  onRemoveMedia: PropTypes.func\n};\nmodule.export(\"default\", exports.default = MediaGallery);","map":{"version":3,"sources":["/imports/plugins/core/ui/client/components/media/mediaGallery.js"],"names":["React","Component","PropTypes","Dropzone","Measure","MediaItem","MediaGallery","state","dimensions","width","height","hasMedia","Array","isArray","props","media","length","allowFeaturedMediaHover","featuredMedia","handleDropClick","refs","dropzone","open","renderAddItem","editable","renderFeaturedMedia","map","index","setState","revision","metadata","onMouseEnterMedia","onMoveMedia","onRemoveMedia","renderMediaThumbnails","renderMediaGalleryUploader","containerWidth","mediaGalleryWidth","featured","gallery","onDrop","renderMediaGallery","render","propTypes","bool","oneOfType","string","object","arrayOf","mediaGalleryHeight","number","func","onMouseLeaveMedia"],"mappings":"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","file":"/imports/plugins/core/ui/client/components/media/mediaGallery.js.map","sourcesContent":["import React, { Component, PropTypes } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport Measure from \"react-measure\";\nimport MediaItem from \"./media\";\n\nclass MediaGallery extends Component {\n  state = {\n    dimensions: {\n      width: -1,\n      height: -1\n    }\n  };\n\n  get hasMedia() {\n    return Array.isArray(this.props.media) && this.props.media.length > 0;\n  }\n\n  get allowFeaturedMediaHover() {\n    if (this.props.allowFeaturedMediaHover && this.props.featuredMedia) {\n      return true;\n    }\n\n    return false;\n  }\n\n  get featuredMedia() {\n    return this.props.featuredMedia || this.props.media[0];\n  }\n\n  handleDropClick = () => {\n    this.refs.dropzone.open();\n  }\n\n  renderAddItem() {\n    if (this.props.editable) {\n      return (\n        <div\n          className=\"gallery-image add\"\n          onClick={this.handleDropClick}\n        >\n          <img\n            alt=\"\"\n            className=\"img-responsive\"\n            src={\"/resources/placeholder.gif\"}\n          />\n          <div className=\"rui badge-container\">\n            <i className=\"fa fa-plus fa-2x\" />\n          </div>\n        </div>\n      );\n    }\n\n    return null;\n  }\n\n  renderFeaturedMedia() {\n    const { width, height } = this.state.dimensions;\n\n    if (this.hasMedia) {\n      return this.props.media.map((media, index) => {\n        if (index === 0) {\n          return (\n            <Measure\n              key={index}\n              onMeasure={(dimensions) => {\n                this.setState({ dimensions });\n              }}\n            >\n              <MediaItem\n                editable={this.props.editable}\n                index={index}\n                key={index}\n                revision={this.featuredMedia.revision}\n                metadata={this.featuredMedia.metadata}\n                onMouseEnter={this.props.onMouseEnterMedia}\n                onMove={this.props.onMoveMedia}\n                onRemoveMedia={this.props.onRemoveMedia}\n                source={this.featuredMedia}\n                mediaHeight={height}\n                mediaWidth={width}\n                isFeatured={true}\n                {...this.props}\n              />\n            </Measure>\n          );\n        }\n      });\n    }\n\n    return (\n      <MediaItem />\n    );\n  }\n\n  renderMediaThumbnails() {\n    if (this.hasMedia) {\n      return this.props.media.map((media, index) => {\n        return (\n          <MediaItem\n            editable={this.props.editable}\n            index={index}\n            key={index}\n            revision={media.revision}\n            metadata={media.metadata}\n            onMouseEnter={this.props.onMouseEnterMedia}\n            onMove={this.props.onMoveMedia}\n            onRemoveMedia={this.props.onRemoveMedia}\n            source={media}\n          />\n        );\n      });\n    }\n    return null;\n  }\n\n  renderMediaGalleryUploader() {\n    const containerWidth = this.props.mediaGalleryWidth;\n    let featured = this.renderAddItem();\n    let gallery;\n\n    // Only render media only if there is any\n    if (this.hasMedia) {\n      featured = this.renderFeaturedMedia();\n      gallery = this.renderMediaThumbnails();\n    }\n\n    return (\n      <div className=\"rui media-gallery\">\n        <Dropzone\n          className=\"rui gallery-drop-pane\"\n          disableClick={true}\n          multiple={true}\n          onDrop={this.props.onDrop}\n          ref=\"dropzone\"\n        >\n          <div className=\"rui gallery\">\n            <div className=\"featuredImage\" style={{ height: containerWidth + \"px\" }}>\n              {featured}\n            </div>\n            <div className=\"rui gallery-thumbnails\">\n              {gallery}\n              {this.renderAddItem()}\n            </div>\n          </div>\n        </Dropzone>\n      </div>\n    );\n  }\n\n  renderMediaGallery() {\n    const containerWidth = this.props.mediaGalleryWidth;\n\n    return (\n      <div className=\"rui media-gallery\">\n        <div className=\"rui gallery\">\n          <div className=\"featuredImage\" style={{ height: containerWidth + \"px\" }}>\n            {this.renderFeaturedMedia()}\n          </div>\n          <div className=\"rui gallery-thumbnails\">\n            {this.renderMediaThumbnails()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    if (this.props.editable) {\n      return this.renderMediaGalleryUploader();\n    }\n\n    return this.renderMediaGallery();\n  }\n}\n\nMediaGallery.propTypes = {\n  allowFeaturedMediaHover: PropTypes.bool,\n  editable: PropTypes.bool,\n  featuredMedia: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  media: PropTypes.arrayOf(PropTypes.object),\n  mediaGalleryHeight: PropTypes.number,\n  mediaGalleryWidth: PropTypes.number,\n  onDrop: PropTypes.func,\n  onMouseEnterMedia: PropTypes.func,\n  onMouseLeaveMedia: PropTypes.func,\n  onMoveMedia: PropTypes.func,\n  onRemoveMedia: PropTypes.func\n};\n\nexport default MediaGallery;\n"]},"hash":"f6710aa898b51cfb3c8bc544b00147c615280e4e"}
