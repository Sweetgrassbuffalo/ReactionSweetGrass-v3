{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/check","imported":["Match","check"],"specifiers":[{"kind":"named","imported":"Match","local":"Match"},{"kind":"named","imported":"check","local":"check"}]},{"source":"meteor/tmeasday:publish-counts","imported":["Counts"],"specifiers":[{"kind":"named","imported":"Counts","local":"Counts"}]},{"source":"/imports/plugins/core/discounts/lib/collections","imported":["Discounts"],"specifiers":[{"kind":"named","imported":"Discounts","local":"Discounts"}]},{"source":"/server/api","imported":["Reaction"],"specifiers":[{"kind":"named","imported":"Reaction","local":"Reaction"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/included/discount-codes/server/publications/discounts.js","filenameRelative":"/imports/plugins/included/discount-codes/server/publications/discounts.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/included/discount-codes/server/publications/discounts.js"],"names":["Mongo","Meteor","Match","check","Counts","Discounts","Reaction","publish","query","options","Optional","Object","shopId","getShopId","ready","select","discountMethod","find","Collection","_publishCursor"],"mappings":"AAAA,IAAS;AAAT,OAAsB,WAAtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GACA,AAAS,AAAc,AACvB,AAAS,AAAoB,A,AAAb,AAChB,AAAS,AAAc,AACvB,AAAS,AAAiB,AAC1B,AAAS,AAAgB,AAEzB;AAMA,AAAO,AAAQ,AAAiB,AAAU,AAAO,AAAS,AACxD,AAAM,AAAO,AAAM,AAAS;;;;;UACtB,QAAN,AAAe,AAAM,iBAFmC,AAExD,AAAe,AAAe,UAE9B;8BACA;QAAM,SAAS,MAAS,SAAxB,AAAe,AACf,UAAA,AAAI,AAAC,AAAQ,AACX;;MAAO,AAAK,SAAZ,AAAO,SACR;;;gBAED;AAVwD,AAUxD,AAAM,AAAS,AAAS,AACxB,AACA;;MAAA,AAAO,SAZiD,AAYxD,AAAgB,SAChB,IACA;;AAAI,AAAC,SAAO,SAAZ,AAA4B,AAC1B,QAAA,AAAO,AAAiB,AACzB;;AAhBuD,AAkBxD,8BACA;;AACA,IApBwD,AAoBxD,AAAO,AAAQ,AAAM,AAAwB,AAAU,AACrD,AACA,AAGF;AACA;;;AAAM,iBAAN,AAAiB,MAAjB,AAAgC,AAAU,wBAAV,AAAe,UAA/C,AAAgC,AAAuB,AAAU,AAAM,KAEvE,QA5BF,AA4BE,AAAO,AAAK,AACb;;;;;CA3BC","file":"/imports/plugins/included/discount-codes/server/publications/discounts.js.map","sourcesContent":["import { Mongo } from \"meteor/mongo\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Match, check } from \"meteor/check\";\nimport { Counts } from \"meteor/tmeasday:publish-counts\";\nimport { Discounts } from \"/imports/plugins/core/discounts/lib/collections\";\nimport { Reaction } from \"/server/api\";\n\n/**\n * Discounts\n * @type {Publication}\n * @param {Object} query\n * @param {Object} options\n */\nMeteor.publish(\"DiscountCodes\", function (query, options) {\n  check(query, Match.Optional(Object));\n  check(options, Match.Optional(Object));\n\n  // check shopId\n  const shopId = Reaction.getShopId();\n  if (!shopId) {\n    return this.ready();\n  }\n\n  const select = query || {};\n  // append shopId to query\n  select.shopId = shopId;\n  // select.cartId = cartId;\n  if (!select.discountMethod) {\n    select.discountMethod = \"code\";\n  }\n\n  // appends a count to the collection\n  // we're doing this for use with griddleTable\n  Counts.publish(this, \"discount-codes-count\", Discounts.find(\n    select,\n    options\n  ));\n\n  // Publishing our Discounts to a client side collection \"DiscountCodes\"\n  Mongo.Collection._publishCursor(Discounts.find(select, options), this, \"DiscountCodes\");\n\n  return this.ready();\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/included/discount-codes/server/publications/discounts.js.map","sourceFileName":"/imports/plugins/included/discount-codes/server/publications/discounts.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"discounts"},"ignored":false,"code":"var Mongo = void 0;\nmodule.importSync(\"meteor/mongo\", {\n  Mongo: function (v) {\n    Mongo = v;\n  }\n}, 0);\nvar Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\nvar Match = void 0,\n    check = void 0;\nmodule.importSync(\"meteor/check\", {\n  Match: function (v) {\n    Match = v;\n  },\n  check: function (v) {\n    check = v;\n  }\n}, 2);\nvar Counts = void 0;\nmodule.importSync(\"meteor/tmeasday:publish-counts\", {\n  Counts: function (v) {\n    Counts = v;\n  }\n}, 3);\nvar Discounts = void 0;\nmodule.importSync(\"/imports/plugins/core/discounts/lib/collections\", {\n  Discounts: function (v) {\n    Discounts = v;\n  }\n}, 4);\nvar Reaction = void 0;\nmodule.importSync(\"/server/api\", {\n  Reaction: function (v) {\n    Reaction = v;\n  }\n}, 5);\n/**\n * Discounts\n * @type {Publication}\n * @param {Object} query\n * @param {Object} options\n */Meteor.publish(\"DiscountCodes\", function (query, options) {\n  check(query, Match.Optional(Object));\n  check(options, Match.Optional(Object)); // check shopId\n\n  var shopId = Reaction.getShopId();\n\n  if (!shopId) {\n    return this.ready();\n  }\n\n  var select = query || {}; // append shopId to query\n\n  select.shopId = shopId; // select.cartId = cartId;\n\n  if (!select.discountMethod) {\n    select.discountMethod = \"code\";\n  } // appends a count to the collection\n  // we're doing this for use with griddleTable\n\n\n  Counts.publish(this, \"discount-codes-count\", Discounts.find(select, options)); // Publishing our Discounts to a client side collection \"DiscountCodes\"\n\n  Mongo.Collection._publishCursor(Discounts.find(select, options), this, \"DiscountCodes\");\n\n  return this.ready();\n});","map":{"version":3,"sources":["/imports/plugins/included/discount-codes/server/publications/discounts.js"],"names":["Mongo","Meteor","Match","check","Counts","Discounts","Reaction","publish","query","options","Optional","Object","shopId","getShopId","ready","select","discountMethod","find","Collection","_publishCursor"],"mappings":"AAAA,IAAS;AAAT,OAAsB,WAAtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GACA,AAAS,AAAc,AACvB,AAAS,AAAoB,A,AAAb,AAChB,AAAS,AAAc,AACvB,AAAS,AAAiB,AAC1B,AAAS,AAAgB,AAEzB;AAMA,AAAO,AAAQ,AAAiB,AAAU,AAAO,AAAS,AACxD,AAAM,AAAO,AAAM,AAAS;;;;;UACtB,QAAN,AAAe,AAAM,iBAFmC,AAExD,AAAe,AAAe,UAE9B;8BACA;QAAM,SAAS,MAAS,SAAxB,AAAe,AACf,UAAA,AAAI,AAAC,AAAQ,AACX;;MAAO,AAAK,SAAZ,AAAO,SACR;;;gBAED;AAVwD,AAUxD,AAAM,AAAS,AAAS,AACxB,AACA;;MAAA,AAAO,SAZiD,AAYxD,AAAgB,SAChB,IACA;;AAAI,AAAC,SAAO,SAAZ,AAA4B,AAC1B,QAAA,AAAO,AAAiB,AACzB;;AAhBuD,AAkBxD,8BACA;;AACA,IApBwD,AAoBxD,AAAO,AAAQ,AAAM,AAAwB,AAAU,AACrD,AACA,AAGF;AACA;;;AAAM,iBAAN,AAAiB,MAAjB,AAAgC,AAAU,wBAAV,AAAe,UAA/C,AAAgC,AAAuB,AAAU,AAAM,KAEvE,QA5BF,AA4BE,AAAO,AAAK,AACb;;;;;CA3BC","file":"/imports/plugins/included/discount-codes/server/publications/discounts.js.map","sourcesContent":["import { Mongo } from \"meteor/mongo\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Match, check } from \"meteor/check\";\nimport { Counts } from \"meteor/tmeasday:publish-counts\";\nimport { Discounts } from \"/imports/plugins/core/discounts/lib/collections\";\nimport { Reaction } from \"/server/api\";\n\n/**\n * Discounts\n * @type {Publication}\n * @param {Object} query\n * @param {Object} options\n */\nMeteor.publish(\"DiscountCodes\", function (query, options) {\n  check(query, Match.Optional(Object));\n  check(options, Match.Optional(Object));\n\n  // check shopId\n  const shopId = Reaction.getShopId();\n  if (!shopId) {\n    return this.ready();\n  }\n\n  const select = query || {};\n  // append shopId to query\n  select.shopId = shopId;\n  // select.cartId = cartId;\n  if (!select.discountMethod) {\n    select.discountMethod = \"code\";\n  }\n\n  // appends a count to the collection\n  // we're doing this for use with griddleTable\n  Counts.publish(this, \"discount-codes-count\", Discounts.find(\n    select,\n    options\n  ));\n\n  // Publishing our Discounts to a client side collection \"DiscountCodes\"\n  Mongo.Collection._publishCursor(Discounts.find(select, options), this, \"DiscountCodes\");\n\n  return this.ready();\n});\n"]},"hash":"f6838624bc51143fdf8f7f48a86b39944eb70d87"}
