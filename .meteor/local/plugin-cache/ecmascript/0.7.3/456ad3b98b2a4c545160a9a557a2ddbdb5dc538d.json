{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"react-taco-table","imported":["DataType"],"specifiers":[{"kind":"named","imported":"DataType","local":"DataType"}]},{"source":"meteor/templating","imported":["Template"],"specifiers":[{"kind":"named","imported":"Template","local":"Template"}]},{"source":"/client/api","imported":["Reaction","i18next"],"specifiers":[{"kind":"named","imported":"Reaction","local":"Reaction"},{"kind":"named","imported":"i18next","local":"i18next"}]},{"source":"/imports/plugins/core/ui/client/components","imported":["SortableTable"],"specifiers":[{"kind":"named","imported":"SortableTable","local":"SortableTable"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/included/ui-search/client/templates/accountSearch/accountResults.js","filenameRelative":"/imports/plugins/included/ui-search/client/templates/accountSearch/accountResults.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/included/ui-search/client/templates/accountSearch/accountResults.js"],"names":["React","DataType","Template","Reaction","i18next","SortableTable","userPermissions","userId","hasPermission","shopId","getShopId","user","Meteor","users","findOne","member","_id","emails","length","email","address","username","isAdmin","Roles","userIsInRole","roles","services","role","searchModal","onCreated","autorun","subscribe","helpers","accountSearchResults","instance","results","state","get","accountTable","columns","id","type","String","header","t","defaultValue","value","rowData","profile","firstName","undefined","lastName","phone","tdClassName","renderer","cellData","component","data","events","event","view","$","target","showActionView","label","i18nKeyLabel","template","Router","go","delay","fadeOut","Blaze","remove"],"mappings":"AAAA,IAAO;AAAP,OAAA,AAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAClB,AAAS,AAAgB,AACzB,AAAS,AAAgB,AACzB,AAAS,AAAU,AAAe,AAClC,AAAS,AAAqB;;AAE9B,SAAA,AAAS,gBAAT,AAAyB,QAAQ,AAC/B;MAAI,SAAA,AAAS,cAAb,AAAI,AAAuB;QACnB,SAAS,SAAf,AAAe,AAAS,AACxB;QAAM,OAAO,OAAA,AAAO,MAAP,AAAa,QAA1B,AAAa,AAAqB,AAClC;QAAM,SAAN,AAAe,AAEf,AAAO,AAAS,AAAK;yBAErB,AAAI,AAAK,AAAU,AAAK,AAAO,AAAQ,AACrC;;2CACA;AACA;AACA;AAAA,AAAO,AAAS,AAAK,AACrB;aAAA,AAAO,AAAQ,SAAK,KAZyB,AAY7C,AAAe,AAAY,AAAG,AAC/B;AACD;KAd+C,AAC/C,CAcA;;;WAAA,AAAO,WAAW,KAAlB,AAAuB,AACvB;WAAA,AAAO,UAAU,MAAA,AAAM,aAAa,KAAnB,AAAwB,KAAxB,AAA6B,SAA9C,AAAiB,AAAsC,AACvD;WAAA,AAAO,QAAQ,KAAf,AAAoB,AACpB;WAAA,AAAO,WAAW,KAAlB,AAAuB,AAEvB;;QAAI,MAAA,AAAM,aAAa,OAAnB,AAA0B,QAA1B,AAAkC,SAAtC,AAAI,AAA2C,SAAS,AACtD;aAAA,AAAO,OAAP,AAAc,AACf;AAFD,eAEW,MAAA,AAAM,aAAa,OAAnB,AAA0B,QAA1B,AAAkC,SAAtC,AAAI,AAA2C,SAAS,AAC7D;aAAA,AAAO,OAAP,AAAc,AACf;AAFM,KAAA,UAEI,MAAA,AAAM,aAAa,OAAnB,AAA0B,QAA1B,AAAkC,aAAtC,AAAI,AAA+C,SAAS,AACjE;aAAA,AAAO,OAAP,AAAc,AACf;AAFM,KAAA,MAEA,IAAI,MAAA,AAAM,aAAa,OAAnB,AAA0B,QAA1B,AAAkC,SAAtC,AAAI,AAA2C,SAAS,AAC7D;aAAA,AAAO,OAAP,AAAc,AACf;AAED;;WAAA,AAAO,AACR;AACF;AAGD,AAAS,AAAY,AAAU,AAAY;;AACzC,AAAK,SAAL,AAAa,YAAM;AACjB;;OAAK,QAAL,AAAe,YADjB,AACE,AACD;oBAHH,AAIC;A,AAED;IAGA,AAAS,AAAY,AAAQ,AAC3B,AAAuB,AACrB,AAAM,AAAW,AAAS;;;AAC1B,SAAM,AAAU;AAChB,AAAO,oCAJkB,AAK1B;;qCACD;WAAe,AACb;AAAA,AAAM,AAAW,AAAS,AAC1B;AAAM,4BAAN,AAAgB,AAAS,AAAM,AAAI,AAEnC;QAAM,AAAU,WACd,SACE;QADF,AACM,6BADN,AAEE,AAAM,AAAS,AACf;QAAQ;AAHV,UAIE;AAAO,qBAAW,AAChB;AAAO,wBAAP;sBACD;OADgB;gCANL,AACd,AAQA;uBACE;AADF,AACM,AACJ,AAAM,AAAS,AACf;AARQ,AAAmD,AAAgB,KAAnE,AAAQ,AAAE,AAAyC,AAAE;UAQrD,AAAgD,AAAgB;AAH1E,qBAIE;AAAO,sBAAW;sBAChB;;aAAO,AAAQ,mBAAf,AACD;uBAfW,AASd,AAQA;AAAA,AACE,AAAI,AACJ;AAPQ,AAAQ,AAAE,AAAsC,AAAE;UAQlD,AAAQ,AAAE,AAAyC,AAAE;YAAc,SAAnE,AAAmD;AAH7D;sBAIE;;AAAO,aAAW,mBAChB;AAAI,YAAQ,QAAZ,AAAqB,SACnB;AAAO,iBAAQ,QAAR,AAAgB,QAAvB,AACD;;;eACD;AAzBU,AAiBd,AAQI,AAAO,AACR;AATH,AAEQ,AAAS,AACf;AASI,UADN,AAEE;AAAM,YAAS,SAFjB,AAGE;AAAQ,sBAAU,EAAV,AAAkD;sBAAE;OAApD,AAAQ;aAA0D,mBAH5E,AAGU,AAAkD;6BAC1D;AAAO,iBAAW,gBAChB;AAAA,AAAI,AAAQ,AAAS,AACnB;;eAAA,AAAO,AAAQ,AAAQ,AACxB;AACD;AARJ,AACE;UA7BY,AA4Bd,AAWA;qBACE;AAAI;sBACJ;OAFF;AAEQ,aAAS,mBAFjB,AAGE;YAAQ,QAAA,AAAQ,AAAE,SAAV,AAA+C,AAAE;iBAAc,gBAHzE,AAGU,AAA+C;AACvD;;AAAO,eAAW,AAChB;AAAA,AAAI,AAAQ,AAAS,AACnB,AAAO,AAAQ,AAAQ,AACxB;AAVD,AAAO,AACR;UAUC;YAAO,SAAP,AACD;;sBAhDW,AAuCd,AAWA;;gCACE;AAAI,eADN,eAEE;AAFF,AAEQ,AAAS,AACf,AAAQ,AAAQ,AAAE,AAAsC,AAAE;;AAH5D,UAIE;AAAO,qBAAW,AAChB;AAAO,wBAAP,AAAO,AAAe;sBACvB;OADgB;gCAvDL,AAkDd,AAQA;8BACE;AADF,AACM,AACJ;AAAM,mBAFR,AAEiB,AACf;AAAQ,0BAAA,AAAQ,AAAE;AAAV,AAAsD,AAAE;;AAAc;;;uCAHhF,AAGU,AAAsD;;;;AAHhE,AAIE,AAAO,AAAW,AAChB,AAAO,AAAQ,AAAO,AACvB,AACD;AAZQ,AAAgD,AAAgB;;iBAaxE;YAAA,AAAS,AAAU,AAAE;eAArB,AAAmB,AAAa,AAC9B;AATJ,AAOe;AAjEjB,AAAgB,AA0Dd,AASI,AAAO,AAAC,AAAK,AAAkB,AAAgB,AAAgB,AAAC,AAAQ,AAAK,AAAM,AAAE,AACtF;AA3EL,AAAgB,AAAS,AAAM,AAAI,AACnC,IA8EA,AAAO,AACL,AAAW,AACX,AAAM;;;AACN,SAAS;AAHX,8DAKD;;wBAvFH,A,AAA6B,AA2F7B;sCAGA;AAAS,aAAT,AAAqB;aACwB,AAAU,AAAO,AAC1D;AAAM,oBAAN,AAAiB,AAAS,AAC1B;AAAM,YAAO,AAAS,gBAAtB,AAEA;AAAM,gBAAN,AAAe,AAAE,AAAM,AAAQ,AAAK,AAEpC,AAAS,AAAe,AACtB,AAAO,AACP;AATsB,AAC1B;oBAQkB,6BAFQ,AAGtB,AAAM,AAAgB,AACtB;MAAU,wDAJZ,AAAwB;mBAOxB;AAAA,AAAS,AAAO,AAAG,AAAsB,AAAI,AAE7C;AAhBJ,AAA4B,AAgBxB,AAAE,AAAoB,AAAM,AAAK,AAAQ,AAAK,AAAM,AAClD,AAAM,AAAO,AACd,AACF;AA/BQ","file":"/imports/plugins/included/ui-search/client/templates/accountSearch/accountResults.js.map","sourcesContent":["import React from \"react\";\nimport { DataType } from \"react-taco-table\";\nimport { Template } from \"meteor/templating\";\nimport { Reaction, i18next } from \"/client/api\";\nimport { SortableTable } from \"/imports/plugins/core/ui/client/components\";\n\nfunction userPermissions(userId) {\n  if (Reaction.hasPermission(\"reaction-accounts\")) {\n    const shopId = Reaction.getShopId();\n    const user = Meteor.users.findOne(userId);\n    const member = {};\n\n    member.userId = user._id;\n\n    if (user.emails && user.emails.length) {\n      // this is some kind of denormalization. It is helpful to have both\n      // of this string and array. Array goes to avatar, string goes to\n      // template\n      member.emails = user.emails;\n      member.email = user.emails[0].address;\n    }\n    // member.user = user;\n    member.username = user.username;\n    member.isAdmin = Roles.userIsInRole(user._id, \"admin\", shopId);\n    member.roles = user.roles;\n    member.services = user.services;\n\n    if (Roles.userIsInRole(member.userId, \"owner\", shopId)) {\n      member.role = \"owner\";\n    } else if (Roles.userIsInRole(member.userId, \"admin\", shopId)) {\n      member.role = \"admin\";\n    } else if (Roles.userIsInRole(member.userId, \"dashboard\", shopId)) {\n      member.role = \"dashboard\";\n    } else if (Roles.userIsInRole(member.userId, \"guest\", shopId)) {\n      member.role = \"guest\";\n    }\n\n    return member;\n  }\n}\n\n\nTemplate.searchModal.onCreated(function () {\n  this.autorun(() => {\n    this.subscribe(\"ShopMembers\");\n  });\n});\n\n/**\n * accountSearch helpers\n */\nTemplate.searchModal.helpers({\n  accountSearchResults() {\n    const instance = Template.instance();\n    const results = instance.state.get(\"accountSearchResults\");\n    return results;\n  },\n  accountTable() {\n    const instance = Template.instance();\n    const results = instance.state.get(\"accountSearchResults\");\n\n    const columns = [\n      {\n        id: \"_id\",\n        type: DataType.String,\n        header: i18next.t(\"search.accountSearchResults.accountId\", { defaultValue: \"Account ID\" }),\n        value: rowData => {\n          return rowData._id;\n        }\n      },\n      {\n        id: \"shopId\",\n        type: DataType.String,\n        header: i18next.t(\"search.accountSearchResults.shopId\", { defaultValue: \"Shop ID\" }),\n        value: rowData => {\n          return rowData.shopId;\n        }\n      },\n      {\n        id: \"firstName\",\n        type: DataType.String,\n        header: i18next.t(\"search.accountSearchResults.firstName\", { defaultValue: \"First Name\" }),\n        value: rowData => {\n          if (rowData.profile) {\n            return rowData.profile.firstName;\n          }\n          return undefined;\n        }\n      },\n      {\n        id: \"lastName\",\n        type: DataType.String,\n        header: i18next.t(\"search.accountSearchResults.lastName\", { defaultValue: \"Last Name\" }),\n        value: rowData => {\n          if (rowData.profile) {\n            return rowData.profile.lastName;\n          }\n          return undefined;\n        }\n      },\n      {\n        id: \"phone\",\n        type: DataType.String,\n        header: i18next.t(\"search.accountSearchResults.phone\", { defaultValue: \"Phone\" }),\n        value: rowData => {\n          if (rowData.profile) {\n            return rowData.profile.phone;\n          }\n          return undefined;\n        }\n      },\n      {\n        id: \"email\",\n        type: DataType.String,\n        header: i18next.t(\"search.accountSearchResults.emails\", { defaultValue: \"Email\" }),\n        value: rowData => {\n          return rowData.emails[0];\n        }\n      },\n      {\n        id: \"manageAccount\",\n        type: DataType.String,\n        header: i18next.t(\"search.orderSearchResults.shippingStatus\", { defaultValue: \"Shipping Status\" }),\n        value: rowData => {\n          return rowData.emails[0];\n        },\n        tdClassName: \"account-manage\",\n        renderer(cellData, { rowData }) {\n          return <span data-event-action=\"manageAccount\" data-event-data={rowData._id}>Manage</span>;\n        }\n      }\n    ];\n\n    return {\n      component: SortableTable,\n      data: results,\n      columns: columns\n    };\n  }\n});\n\n\n/**\n * orderResults events\n */\nTemplate.searchModal.events({\n  \"click [data-event-action=manageAccount]\": function (event) {\n    const instance = Template.instance();\n    const view = instance.view;\n\n    const userId = $(event.target).data(\"event-data\");\n\n    Reaction.showActionView({\n      label: \"Permissions\",\n      i18nKeyLabel: \"admin.settings.permissionsSettingsLabel\",\n      data: userPermissions(userId),\n      template: \"memberSettings\"\n    });\n\n    Reaction.Router.go(\"dashboard/accounts\", {}, {});\n\n    $(\".js-search-modal\").delay(400).fadeOut(400, () => {\n      Blaze.remove(view);\n    });\n  }\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/included/ui-search/client/templates/accountSearch/accountResults.js.map","sourceFileName":"/imports/plugins/included/ui-search/client/templates/accountSearch/accountResults.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"accountResults"},"ignored":false,"code":"var React = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar DataType = void 0;\nmodule.importSync(\"react-taco-table\", {\n  DataType: function (v) {\n    DataType = v;\n  }\n}, 1);\nvar Template = void 0;\nmodule.importSync(\"meteor/templating\", {\n  Template: function (v) {\n    Template = v;\n  }\n}, 2);\nvar Reaction = void 0,\n    i18next = void 0;\nmodule.importSync(\"/client/api\", {\n  Reaction: function (v) {\n    Reaction = v;\n  },\n  i18next: function (v) {\n    i18next = v;\n  }\n}, 3);\nvar SortableTable = void 0;\nmodule.importSync(\"/imports/plugins/core/ui/client/components\", {\n  SortableTable: function (v) {\n    SortableTable = v;\n  }\n}, 4);\n\nfunction userPermissions(userId) {\n  if (Reaction.hasPermission(\"reaction-accounts\")) {\n    var shopId = Reaction.getShopId();\n    var user = Meteor.users.findOne(userId);\n    var member = {};\n    member.userId = user._id;\n\n    if (user.emails && user.emails.length) {\n      // this is some kind of denormalization. It is helpful to have both\n      // of this string and array. Array goes to avatar, string goes to\n      // template\n      member.emails = user.emails;\n      member.email = user.emails[0].address;\n    } // member.user = user;\n\n\n    member.username = user.username;\n    member.isAdmin = Roles.userIsInRole(user._id, \"admin\", shopId);\n    member.roles = user.roles;\n    member.services = user.services;\n\n    if (Roles.userIsInRole(member.userId, \"owner\", shopId)) {\n      member.role = \"owner\";\n    } else if (Roles.userIsInRole(member.userId, \"admin\", shopId)) {\n      member.role = \"admin\";\n    } else if (Roles.userIsInRole(member.userId, \"dashboard\", shopId)) {\n      member.role = \"dashboard\";\n    } else if (Roles.userIsInRole(member.userId, \"guest\", shopId)) {\n      member.role = \"guest\";\n    }\n\n    return member;\n  }\n}\n\nTemplate.searchModal.onCreated(function () {\n  var _this = this;\n\n  this.autorun(function () {\n    _this.subscribe(\"ShopMembers\");\n  });\n}); /**\n     * accountSearch helpers\n     */\nTemplate.searchModal.helpers({\n  accountSearchResults: function () {\n    var instance = Template.instance();\n    var results = instance.state.get(\"accountSearchResults\");\n    return results;\n  },\n  accountTable: function () {\n    var instance = Template.instance();\n    var results = instance.state.get(\"accountSearchResults\");\n    var columns = [{\n      id: \"_id\",\n      type: DataType.String,\n      header: i18next.t(\"search.accountSearchResults.accountId\", {\n        defaultValue: \"Account ID\"\n      }),\n      value: function (rowData) {\n        return rowData._id;\n      }\n    }, {\n      id: \"shopId\",\n      type: DataType.String,\n      header: i18next.t(\"search.accountSearchResults.shopId\", {\n        defaultValue: \"Shop ID\"\n      }),\n      value: function (rowData) {\n        return rowData.shopId;\n      }\n    }, {\n      id: \"firstName\",\n      type: DataType.String,\n      header: i18next.t(\"search.accountSearchResults.firstName\", {\n        defaultValue: \"First Name\"\n      }),\n      value: function (rowData) {\n        if (rowData.profile) {\n          return rowData.profile.firstName;\n        }\n\n        return undefined;\n      }\n    }, {\n      id: \"lastName\",\n      type: DataType.String,\n      header: i18next.t(\"search.accountSearchResults.lastName\", {\n        defaultValue: \"Last Name\"\n      }),\n      value: function (rowData) {\n        if (rowData.profile) {\n          return rowData.profile.lastName;\n        }\n\n        return undefined;\n      }\n    }, {\n      id: \"phone\",\n      type: DataType.String,\n      header: i18next.t(\"search.accountSearchResults.phone\", {\n        defaultValue: \"Phone\"\n      }),\n      value: function (rowData) {\n        if (rowData.profile) {\n          return rowData.profile.phone;\n        }\n\n        return undefined;\n      }\n    }, {\n      id: \"email\",\n      type: DataType.String,\n      header: i18next.t(\"search.accountSearchResults.emails\", {\n        defaultValue: \"Email\"\n      }),\n      value: function (rowData) {\n        return rowData.emails[0];\n      }\n    }, {\n      id: \"manageAccount\",\n      type: DataType.String,\n      header: i18next.t(\"search.orderSearchResults.shippingStatus\", {\n        defaultValue: \"Shipping Status\"\n      }),\n      value: function (rowData) {\n        return rowData.emails[0];\n      },\n      tdClassName: \"account-manage\",\n      renderer: function (cellData, _ref) {\n        var rowData = _ref.rowData;\n        return React.createElement(\n          \"span\",\n          {\n            \"data-event-action\": \"manageAccount\",\n            \"data-event-data\": rowData._id\n          },\n          \"Manage\"\n        );\n      }\n    }];\n    return {\n      component: SortableTable,\n      data: results,\n      columns: columns\n    };\n  }\n}); /**\n     * orderResults events\n     */\nTemplate.searchModal.events({\n  \"click [data-event-action=manageAccount]\": function (event) {\n    var instance = Template.instance();\n    var view = instance.view;\n    var userId = $(event.target).data(\"event-data\");\n    Reaction.showActionView({\n      label: \"Permissions\",\n      i18nKeyLabel: \"admin.settings.permissionsSettingsLabel\",\n      data: userPermissions(userId),\n      template: \"memberSettings\"\n    });\n    Reaction.Router.go(\"dashboard/accounts\", {}, {});\n    $(\".js-search-modal\").delay(400).fadeOut(400, function () {\n      Blaze.remove(view);\n    });\n  }\n});","map":{"version":3,"sources":["/imports/plugins/included/ui-search/client/templates/accountSearch/accountResults.js"],"names":["React","DataType","Template","Reaction","i18next","SortableTable","userPermissions","userId","hasPermission","shopId","getShopId","user","Meteor","users","findOne","member","_id","emails","length","email","address","username","isAdmin","Roles","userIsInRole","roles","services","role","searchModal","onCreated","autorun","subscribe","helpers","accountSearchResults","instance","results","state","get","accountTable","columns","id","type","String","header","t","defaultValue","value","rowData","profile","firstName","undefined","lastName","phone","tdClassName","renderer","cellData","component","data","events","event","view","$","target","showActionView","label","i18nKeyLabel","template","Router","go","delay","fadeOut","Blaze","remove"],"mappings":"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","file":"/imports/plugins/included/ui-search/client/templates/accountSearch/accountResults.js.map","sourcesContent":["import React from \"react\";\nimport { DataType } from \"react-taco-table\";\nimport { Template } from \"meteor/templating\";\nimport { Reaction, i18next } from \"/client/api\";\nimport { SortableTable } from \"/imports/plugins/core/ui/client/components\";\n\nfunction userPermissions(userId) {\n  if (Reaction.hasPermission(\"reaction-accounts\")) {\n    const shopId = Reaction.getShopId();\n    const user = Meteor.users.findOne(userId);\n    const member = {};\n\n    member.userId = user._id;\n\n    if (user.emails && user.emails.length) {\n      // this is some kind of denormalization. It is helpful to have both\n      // of this string and array. Array goes to avatar, string goes to\n      // template\n      member.emails = user.emails;\n      member.email = user.emails[0].address;\n    }\n    // member.user = user;\n    member.username = user.username;\n    member.isAdmin = Roles.userIsInRole(user._id, \"admin\", shopId);\n    member.roles = user.roles;\n    member.services = user.services;\n\n    if (Roles.userIsInRole(member.userId, \"owner\", shopId)) {\n      member.role = \"owner\";\n    } else if (Roles.userIsInRole(member.userId, \"admin\", shopId)) {\n      member.role = \"admin\";\n    } else if (Roles.userIsInRole(member.userId, \"dashboard\", shopId)) {\n      member.role = \"dashboard\";\n    } else if (Roles.userIsInRole(member.userId, \"guest\", shopId)) {\n      member.role = \"guest\";\n    }\n\n    return member;\n  }\n}\n\n\nTemplate.searchModal.onCreated(function () {\n  this.autorun(() => {\n    this.subscribe(\"ShopMembers\");\n  });\n});\n\n/**\n * accountSearch helpers\n */\nTemplate.searchModal.helpers({\n  accountSearchResults() {\n    const instance = Template.instance();\n    const results = instance.state.get(\"accountSearchResults\");\n    return results;\n  },\n  accountTable() {\n    const instance = Template.instance();\n    const results = instance.state.get(\"accountSearchResults\");\n\n    const columns = [\n      {\n        id: \"_id\",\n        type: DataType.String,\n        header: i18next.t(\"search.accountSearchResults.accountId\", { defaultValue: \"Account ID\" }),\n        value: rowData => {\n          return rowData._id;\n        }\n      },\n      {\n        id: \"shopId\",\n        type: DataType.String,\n        header: i18next.t(\"search.accountSearchResults.shopId\", { defaultValue: \"Shop ID\" }),\n        value: rowData => {\n          return rowData.shopId;\n        }\n      },\n      {\n        id: \"firstName\",\n        type: DataType.String,\n        header: i18next.t(\"search.accountSearchResults.firstName\", { defaultValue: \"First Name\" }),\n        value: rowData => {\n          if (rowData.profile) {\n            return rowData.profile.firstName;\n          }\n          return undefined;\n        }\n      },\n      {\n        id: \"lastName\",\n        type: DataType.String,\n        header: i18next.t(\"search.accountSearchResults.lastName\", { defaultValue: \"Last Name\" }),\n        value: rowData => {\n          if (rowData.profile) {\n            return rowData.profile.lastName;\n          }\n          return undefined;\n        }\n      },\n      {\n        id: \"phone\",\n        type: DataType.String,\n        header: i18next.t(\"search.accountSearchResults.phone\", { defaultValue: \"Phone\" }),\n        value: rowData => {\n          if (rowData.profile) {\n            return rowData.profile.phone;\n          }\n          return undefined;\n        }\n      },\n      {\n        id: \"email\",\n        type: DataType.String,\n        header: i18next.t(\"search.accountSearchResults.emails\", { defaultValue: \"Email\" }),\n        value: rowData => {\n          return rowData.emails[0];\n        }\n      },\n      {\n        id: \"manageAccount\",\n        type: DataType.String,\n        header: i18next.t(\"search.orderSearchResults.shippingStatus\", { defaultValue: \"Shipping Status\" }),\n        value: rowData => {\n          return rowData.emails[0];\n        },\n        tdClassName: \"account-manage\",\n        renderer(cellData, { rowData }) {\n          return <span data-event-action=\"manageAccount\" data-event-data={rowData._id}>Manage</span>;\n        }\n      }\n    ];\n\n    return {\n      component: SortableTable,\n      data: results,\n      columns: columns\n    };\n  }\n});\n\n\n/**\n * orderResults events\n */\nTemplate.searchModal.events({\n  \"click [data-event-action=manageAccount]\": function (event) {\n    const instance = Template.instance();\n    const view = instance.view;\n\n    const userId = $(event.target).data(\"event-data\");\n\n    Reaction.showActionView({\n      label: \"Permissions\",\n      i18nKeyLabel: \"admin.settings.permissionsSettingsLabel\",\n      data: userPermissions(userId),\n      template: \"memberSettings\"\n    });\n\n    Reaction.Router.go(\"dashboard/accounts\", {}, {});\n\n    $(\".js-search-modal\").delay(400).fadeOut(400, () => {\n      Blaze.remove(view);\n    });\n  }\n});\n"]},"hash":"456ad3b98b2a4c545160a9a557a2ddbdb5dc538d"}
