{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"lodash/includes","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_includes"}]},{"source":"lodash/filter","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_filter"}]},{"source":"lodash/uniq","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_uniq"}]},{"source":"lodash/without","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_without"}]},{"source":"meteor/session","imported":["Session"],"specifiers":[{"kind":"named","imported":"Session","local":"Session"}]},{"source":"meteor/templating","imported":["Template"],"specifiers":[{"kind":"named","imported":"Template","local":"Template"}]},{"source":"/client/api","imported":["Reaction"],"specifiers":[{"kind":"named","imported":"Reaction","local":"Reaction"}]},{"source":"/client/modules/logger","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Logger"}]},{"source":"/lib/api","imported":["ReactionProduct"],"specifiers":[{"kind":"named","imported":"ReactionProduct","local":"ReactionProduct"}]},{"source":"sortablejs","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Sortable"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/included/ui-search/client/templates/productSearch/productResults.js","filenameRelative":"/imports/plugins/included/ui-search/client/templates/productSearch/productResults.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/included/ui-search/client/templates/productSearch/productResults.js"],"names":["Session","Template","Reaction","Logger","ReactionProduct","Sortable","productResults","onCreated","set","onRendered","instance","hasPermission","productSort","$","sortable","create","group","handle","onUpdate","tag","getTag","toArray","map","element","index","productId","getAttribute","position","updatedAt","Date","Meteor","call","error","warn","Error","Tracker","flush","events","event","preventDefault","loadMoreProducts","selectedProducts","get","target","checked","push","value","productCursor","currentData","products","fetch","filteredProducts","product","_id","showActionView","label","i18nKeyLabel","template","type","data","helpers","state","equals"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GACA,AAAS,AAAe,AACxB,AAAS,AAAgB,AACzB,AAAS,AAAgB,AACzB,AAAO,AAAY;AACnB,AAAS,A,AAAuB,AAChC,AAAO,AAAc,AAErB;;YAIA,AAAS,eAAT,AAAwB,UAAU,YAAY,AAC5C;UAAA,AAAQ,IAAR,AAAY,gCAAZ,AAA4C,AAC7C;AAFD,AAIA,AAAS,AAAe,AAAW,AAAY,CAJ/C;AAKE,AAAM,SAAN,AAAiB;iBAEjB,AAAI,AAAS,AAAc,AAAkB,AAC3C;;MAAM,SAAc,AAAE,cAAF,kBAApB,AAAoB,AAAwB,AAE5C;AAAK,QAAL,AAAgB,gBAAA,AAAS,AAAO,sBAAa,AAC3C,AAAO,AACP;SAAQ,oBAFmC;aAG3C;cAAW,AACT;AAAM,4BAAN,AAAY,AAAgB,AAE5B;YAAA,AAAS,AAAE,sBAAX,AACG,AACA,AAAI,AAAC,AAAS,AAAU,AACvB,AAAM,AAAY,AAAQ,AAAa,AACvC;AAAM,mBAAW,AACf,sBADe,AACL,AACV,wBAAW,SAAA,AAAI,OAFjB,AAAiB;+CAKjB;AAAO,cAAP,AAAY;AAER,AAAI,AAAO,sBACT;AAAO,uBAAP,AAAY,IAHlB,AAGM,AACA,AAAM,AAAI,AAAO,AAAM,AAAK,AAC7B,AACF;AANH,AAA8C,AAAW,AAAU,AACjE,AAAS,AACP;6EAXR,AAgBG,sBAEH;AAAQ,gBAAR,OACD;;0CAzBH,AAAgB,AAA6B;AA2B9C;AAjCH,AAkCC;AAED,AAAS,AAAe,AAAO,AAC7B;gBAA8C,AAAC,AAAU,AACvD;AAAA,AAAM,AACN,AACD;;AAJ4B,AAK7B;AAAoC,AAAC,AAAU,AAC7C,AAAI,AAAmB,AAAQ,AAAI;;AAEnC,AAAI,AAAM,AAAO,AAAS,iEACxB;UAAA,AAAiB,AAAK,AAAM,AAAO,AACpC;AAFD,AAEO,AACL;AAAA,AAAmB,AAAU,AAAkB,AAAM,AAAO,AAC7D;;uCAED,AAAQ,AAAI,AAAgC,AAAO,AAEnD;;QAAM,aAAgB,SAAtB,AAAsB,AAAS,AAAc;yCAE7C;AAAI,WAAJ,AAAmB,AACjB;AAAM,AAAW,kCAAjB,AAAiB,AAAc;AAE/B,AAAM,AAAmB,AAAS,AAAU,AAAC,AAAY,AACvD;;YAAO,IAAA,AAAW,AAAkB,gCAA7B,AAAqC,MAD9C,AAAyB,AACvB,AACD;+CAED,AAAS,AAAe,AACtB;;QAAO,eADe,AAEtB;UAAc,yBAFQ,AAGtB,AAAU,AACV;;UAJsB,AAIhB,wDACN;AAAM,mDACJ;AANoB,AAKhB,AACM;;AANd;eAUH;sBAnCH,AAA+B;kBAsC/B;AAAS,cAAT,AAAwB,AAAQ,AAC9B;;AACS,oBAFqB,AAE5B,AAAO,AAAS,AAAW,AAAM,AAAO,AAAuB,AAChE,AACD;AAHmB,AACjB;AANC;AAQQ,AACT;AAAA,AAAO,AAAS,AAAc,AAC/B;AApCC;AA8BJ,AAAgC","file":"/imports/plugins/included/ui-search/client/templates/productSearch/productResults.js.map","sourcesContent":["import _ from \"lodash\";\nimport { Session } from \"meteor/session\";\nimport { Template } from \"meteor/templating\";\nimport { Reaction } from \"/client/api\";\nimport Logger from \"/client/modules/logger\";\nimport { ReactionProduct } from \"/lib/api\";\nimport Sortable from \"sortablejs\";\n\n/**\n * productGrid helpers\n */\n\nTemplate.productResults.onCreated(function () {\n  Session.set(\"productGrid/selectedProducts\", []);\n});\n\nTemplate.productResults.onRendered(function () {\n  const instance = this;\n\n  if (Reaction.hasPermission(\"createProduct\")) {\n    const productSort = $(\".product-grid-list\")[0];\n\n    this.sortable = Sortable.create(productSort, {\n      group: \"products\",\n      handle: \".product-grid-item\",\n      onUpdate() {\n        const tag = ReactionProduct.getTag();\n\n        instance.$(\".product-grid-item\")\n          .toArray()\n          .map((element, index) => {\n            const productId = element.getAttribute(\"id\");\n            const position = {\n              position: index,\n              updatedAt: new Date()\n            };\n\n            Meteor.call(\"products/updateProductPosition\", productId, position, tag,\n              error => {\n                if (error) {\n                  Logger.warn(error);\n                  throw new Meteor.Error(403, error);\n                }\n              });\n          });\n\n        Tracker.flush();\n      }\n    });\n  }\n});\n\nTemplate.productResults.events({\n  \"click [data-event-action=loadMoreProducts]\": (event) => {\n    event.preventDefault();\n    loadMoreProducts();\n  },\n  \"change input[name=selectProduct]\": (event) => {\n    let selectedProducts = Session.get(\"productGrid/selectedProducts\");\n\n    if (event.target.checked) {\n      selectedProducts.push(event.target.value);\n    } else {\n      selectedProducts = _.without(selectedProducts, event.target.value);\n    }\n\n    Session.set(\"productGrid/selectedProducts\", _.uniq(selectedProducts));\n\n    const productCursor = Template.currentData().products;\n\n    if (productCursor) {\n      const products = productCursor.fetch();\n\n      const filteredProducts = _.filter(products, (product) => {\n        return _.includes(selectedProducts, product._id);\n      });\n\n      Reaction.showActionView({\n        label: \"Product Settings\",\n        i18nKeyLabel: \"productDetailEdit.productSettings\",\n        template: \"productSettings\",\n        type: \"product\",\n        data: {\n          products: filteredProducts\n        }\n      });\n    }\n  }\n});\n\nTemplate.productResults.helpers({\n  loadMoreProducts() {\n    return Template.instance().state.equals(\"canLoadMoreProducts\", true);\n  },\n  products() {\n    return Template.currentData().products;\n  }\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/included/ui-search/client/templates/productSearch/productResults.js.map","sourceFileName":"/imports/plugins/included/ui-search/client/templates/productSearch/productResults.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"productResults"},"ignored":false,"code":"var _includes = void 0;\n\nmodule.importSync(\"lodash/includes\", {\n  \"default\": function (v) {\n    _includes = v;\n  }\n}, 0);\n\nvar _filter = void 0;\n\nmodule.importSync(\"lodash/filter\", {\n  \"default\": function (v) {\n    _filter = v;\n  }\n}, 1);\n\nvar _uniq = void 0;\n\nmodule.importSync(\"lodash/uniq\", {\n  \"default\": function (v) {\n    _uniq = v;\n  }\n}, 2);\n\nvar _without = void 0;\n\nmodule.importSync(\"lodash/without\", {\n  \"default\": function (v) {\n    _without = v;\n  }\n}, 3);\nvar Session = void 0;\nmodule.importSync(\"meteor/session\", {\n  Session: function (v) {\n    Session = v;\n  }\n}, 4);\nvar Template = void 0;\nmodule.importSync(\"meteor/templating\", {\n  Template: function (v) {\n    Template = v;\n  }\n}, 5);\nvar Reaction = void 0;\nmodule.importSync(\"/client/api\", {\n  Reaction: function (v) {\n    Reaction = v;\n  }\n}, 6);\nvar Logger = void 0;\nmodule.importSync(\"/client/modules/logger\", {\n  \"default\": function (v) {\n    Logger = v;\n  }\n}, 7);\nvar ReactionProduct = void 0;\nmodule.importSync(\"/lib/api\", {\n  ReactionProduct: function (v) {\n    ReactionProduct = v;\n  }\n}, 8);\nvar Sortable = void 0;\nmodule.importSync(\"sortablejs\", {\n  \"default\": function (v) {\n    Sortable = v;\n  }\n}, 9);\n/**\n * productGrid helpers\n */Template.productResults.onCreated(function () {\n  Session.set(\"productGrid/selectedProducts\", []);\n});\nTemplate.productResults.onRendered(function () {\n  var instance = this;\n\n  if (Reaction.hasPermission(\"createProduct\")) {\n    var productSort = $(\".product-grid-list\")[0];\n    this.sortable = Sortable.create(productSort, {\n      group: \"products\",\n      handle: \".product-grid-item\",\n      onUpdate: function () {\n        var tag = ReactionProduct.getTag();\n        instance.$(\".product-grid-item\").toArray().map(function (element, index) {\n          var productId = element.getAttribute(\"id\");\n          var position = {\n            position: index,\n            updatedAt: new Date()\n          };\n          Meteor.call(\"products/updateProductPosition\", productId, position, tag, function (error) {\n            if (error) {\n              Logger.warn(error);\n              throw new Meteor.Error(403, error);\n            }\n          });\n        });\n        Tracker.flush();\n      }\n    });\n  }\n});\nTemplate.productResults.events({\n  \"click [data-event-action=loadMoreProducts]\": function (event) {\n    event.preventDefault();\n    loadMoreProducts();\n  },\n  \"change input[name=selectProduct]\": function (event) {\n    var selectedProducts = Session.get(\"productGrid/selectedProducts\");\n\n    if (event.target.checked) {\n      selectedProducts.push(event.target.value);\n    } else {\n      selectedProducts = _without(selectedProducts, event.target.value);\n    }\n\n    Session.set(\"productGrid/selectedProducts\", _uniq(selectedProducts));\n    var productCursor = Template.currentData().products;\n\n    if (productCursor) {\n      var products = productCursor.fetch();\n\n      var filteredProducts = _filter(products, function (product) {\n        return _includes(selectedProducts, product._id);\n      });\n\n      Reaction.showActionView({\n        label: \"Product Settings\",\n        i18nKeyLabel: \"productDetailEdit.productSettings\",\n        template: \"productSettings\",\n        type: \"product\",\n        data: {\n          products: filteredProducts\n        }\n      });\n    }\n  }\n});\nTemplate.productResults.helpers({\n  loadMoreProducts: function () {\n    return Template.instance().state.equals(\"canLoadMoreProducts\", true);\n  },\n  products: function () {\n    return Template.currentData().products;\n  }\n});","map":{"version":3,"sources":["/imports/plugins/included/ui-search/client/templates/productSearch/productResults.js"],"names":["Session","Template","Reaction","Logger","ReactionProduct","Sortable","productResults","onCreated","set","onRendered","instance","hasPermission","productSort","$","sortable","create","group","handle","onUpdate","tag","getTag","toArray","map","element","index","productId","getAttribute","position","updatedAt","Date","Meteor","call","error","warn","Error","Tracker","flush","events","event","preventDefault","loadMoreProducts","selectedProducts","get","target","checked","push","value","productCursor","currentData","products","fetch","filteredProducts","product","_id","showActionView","label","i18nKeyLabel","template","type","data","helpers","state","equals"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GACA,AAAS,AAAe,AACxB,AAAS,AAAgB,AACzB,AAAS,AAAgB,AACzB,AAAO,AAAY;AACnB,AAAS,A,AAAuB,AAChC,AAAO,AAAc,AAErB;;YAIA,AAAS,eAAT,AAAwB,UAAU,YAAY,AAC5C;UAAA,AAAQ,IAAR,AAAY,gCAAZ,AAA4C,AAC7C;AAFD,AAIA,AAAS,AAAe,AAAW,AAAY,CAJ/C;AAKE,AAAM,SAAN,AAAiB;iBAEjB,AAAI,AAAS,AAAc,AAAkB,AAC3C;;MAAM,SAAc,AAAE,cAAF,kBAApB,AAAoB,AAAwB,AAE5C;AAAK,QAAL,AAAgB,gBAAA,AAAS,AAAO,sBAAa,AAC3C,AAAO,AACP;SAAQ,oBAFmC;aAG3C;cAAW,AACT;AAAM,4BAAN,AAAY,AAAgB,AAE5B;YAAA,AAAS,AAAE,sBAAX,AACG,AACA,AAAI,AAAC,AAAS,AAAU,AACvB,AAAM,AAAY,AAAQ,AAAa,AACvC;AAAM,mBAAW,AACf,sBADe,AACL,AACV,wBAAW,SAAA,AAAI,OAFjB,AAAiB;+CAKjB;AAAO,cAAP,AAAY;AAER,AAAI,AAAO,sBACT;AAAO,uBAAP,AAAY,IAHlB,AAGM,AACA,AAAM,AAAI,AAAO,AAAM,AAAK,AAC7B,AACF;AANH,AAA8C,AAAW,AAAU,AACjE,AAAS,AACP;6EAXR,AAgBG,sBAEH;AAAQ,gBAAR,OACD;;0CAzBH,AAAgB,AAA6B;AA2B9C;AAjCH,AAkCC;AAED,AAAS,AAAe,AAAO,AAC7B;gBAA8C,AAAC,AAAU,AACvD;AAAA,AAAM,AACN,AACD;;AAJ4B,AAK7B;AAAoC,AAAC,AAAU,AAC7C,AAAI,AAAmB,AAAQ,AAAI;;AAEnC,AAAI,AAAM,AAAO,AAAS,iEACxB;UAAA,AAAiB,AAAK,AAAM,AAAO,AACpC;AAFD,AAEO,AACL;AAAA,AAAmB,AAAU,AAAkB,AAAM,AAAO,AAC7D;;uCAED,AAAQ,AAAI,AAAgC,AAAO,AAEnD;;QAAM,aAAgB,SAAtB,AAAsB,AAAS,AAAc;yCAE7C;AAAI,WAAJ,AAAmB,AACjB;AAAM,AAAW,kCAAjB,AAAiB,AAAc;AAE/B,AAAM,AAAmB,AAAS,AAAU,AAAC,AAAY,AACvD;;YAAO,IAAA,AAAW,AAAkB,gCAA7B,AAAqC,MAD9C,AAAyB,AACvB,AACD;+CAED,AAAS,AAAe,AACtB;;QAAO,eADe,AAEtB;UAAc,yBAFQ,AAGtB,AAAU,AACV;;UAJsB,AAIhB,wDACN;AAAM,mDACJ;AANoB,AAKhB,AACM;;AANd;eAUH;sBAnCH,AAA+B;kBAsC/B;AAAS,cAAT,AAAwB,AAAQ,AAC9B;;AACS,oBAFqB,AAE5B,AAAO,AAAS,AAAW,AAAM,AAAO,AAAuB,AAChE,AACD;AAHmB,AACjB;AANC;AAQQ,AACT;AAAA,AAAO,AAAS,AAAc,AAC/B;AApCC;AA8BJ,AAAgC","file":"/imports/plugins/included/ui-search/client/templates/productSearch/productResults.js.map","sourcesContent":["import _ from \"lodash\";\nimport { Session } from \"meteor/session\";\nimport { Template } from \"meteor/templating\";\nimport { Reaction } from \"/client/api\";\nimport Logger from \"/client/modules/logger\";\nimport { ReactionProduct } from \"/lib/api\";\nimport Sortable from \"sortablejs\";\n\n/**\n * productGrid helpers\n */\n\nTemplate.productResults.onCreated(function () {\n  Session.set(\"productGrid/selectedProducts\", []);\n});\n\nTemplate.productResults.onRendered(function () {\n  const instance = this;\n\n  if (Reaction.hasPermission(\"createProduct\")) {\n    const productSort = $(\".product-grid-list\")[0];\n\n    this.sortable = Sortable.create(productSort, {\n      group: \"products\",\n      handle: \".product-grid-item\",\n      onUpdate() {\n        const tag = ReactionProduct.getTag();\n\n        instance.$(\".product-grid-item\")\n          .toArray()\n          .map((element, index) => {\n            const productId = element.getAttribute(\"id\");\n            const position = {\n              position: index,\n              updatedAt: new Date()\n            };\n\n            Meteor.call(\"products/updateProductPosition\", productId, position, tag,\n              error => {\n                if (error) {\n                  Logger.warn(error);\n                  throw new Meteor.Error(403, error);\n                }\n              });\n          });\n\n        Tracker.flush();\n      }\n    });\n  }\n});\n\nTemplate.productResults.events({\n  \"click [data-event-action=loadMoreProducts]\": (event) => {\n    event.preventDefault();\n    loadMoreProducts();\n  },\n  \"change input[name=selectProduct]\": (event) => {\n    let selectedProducts = Session.get(\"productGrid/selectedProducts\");\n\n    if (event.target.checked) {\n      selectedProducts.push(event.target.value);\n    } else {\n      selectedProducts = _.without(selectedProducts, event.target.value);\n    }\n\n    Session.set(\"productGrid/selectedProducts\", _.uniq(selectedProducts));\n\n    const productCursor = Template.currentData().products;\n\n    if (productCursor) {\n      const products = productCursor.fetch();\n\n      const filteredProducts = _.filter(products, (product) => {\n        return _.includes(selectedProducts, product._id);\n      });\n\n      Reaction.showActionView({\n        label: \"Product Settings\",\n        i18nKeyLabel: \"productDetailEdit.productSettings\",\n        template: \"productSettings\",\n        type: \"product\",\n        data: {\n          products: filteredProducts\n        }\n      });\n    }\n  }\n});\n\nTemplate.productResults.helpers({\n  loadMoreProducts() {\n    return Template.instance().state.equals(\"canLoadMoreProducts\", true);\n  },\n  products() {\n    return Template.currentData().products;\n  }\n});\n"]},"hash":"31bfe902149adb9434e98b17f179a9ff113a1824"}
