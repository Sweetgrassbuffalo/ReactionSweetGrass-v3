{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"/lib/api","imported":["ReactionProduct"],"specifiers":[{"kind":"named","imported":"ReactionProduct","local":"ReactionProduct"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/tracker","imported":["Tracker"],"specifiers":[{"kind":"named","imported":"Tracker","local":"Tracker"}]},{"source":"meteor/templating","imported":["Template"],"specifiers":[{"kind":"named","imported":"Template","local":"Template"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/included/product-variant/client/templates/products/productDetail/attributes.js","filenameRelative":"/imports/plugins/included/product-variant/client/templates/products/productDetail/attributes.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/included/product-variant/client/templates/products/productDetail/attributes.js"],"names":["ReactionProduct","Meteor","Tracker","Template","metaComponent","helpers","buttonProps","currentData","icon","createNew","onClick","productId","selectedProductId","call","events","event","updateMeta","key","instance","$","currentTarget","parent","children","val","value","index","closest","animate","backgroundColor","flush","focus"],"mappings":"AAAA,IAAS;AAAT,OAAgC,WAAhC;;;;;;;;;;;;;;;;;;;;;;GACA,A,AAAS,AAAc,AACvB,AAAS,AAAe,AACxB,AAAS,AAAgB,AAEzB;AAIA,AAAS,AAAc,AAAQ,AAC7B,AAAc,AACZ,AAAM,AAAc,AAAS;;YAEtB;AACE,2BACL;QAAI,cAAY,SAAhB,AAA2B,AACzB,AAAO,AACR;;wBAED;YAAO,YAAP,WANG,AAOJ;;AACD,AAAU,AACR;;AAAI,AAAC,eAAL,AAAiB,AAAW,AAC1B;AAAA,AAAM,AAAY,AAAgB,AAClC;2BAAA,AAAO,AAAK,AAA6B,AAAW,AACrD;oCACF;;8DAbH,AAAO;AAeR;AAnBH,AAA+B;;AAuB/B,AAAS,AAAc,AAAO,AAC5B,AAAgB,AAAU,AAAO,AAC/B,AAAM,AAAY,AAAgB;AApBhC,CADF;AAsBA,SAAM,cAAa;AACZ,kBAAS,UAAT,AAAoB,AAAE,OADV,AACZ,AAA4B,AAAe,AAAS,AAAS,AAAwB,AAC1F;QAAO,YAAA,AAAS,AAAW,AAAE,gBAFZ,AAEV,AAA4B,AAAe,AAAS,AAAS,AAA0B;AAFhG;gGAKA;AAAI,aAAJ,AAAS,AAAK,uFACZ,AAAM,AAAQ,AAAS,AAAW,AAAE,AAAM,AAAe,AAAQ,AAAwB,AACzF,AAAO,AAAK,AAA6B,AAAW,AAAY,AAChE;;;aAAS,KAAT,AAAoB,AAAE,AAAM,AAAe,AAAQ,AACjD;kBAAiB,2EADgC;AAAnD,AAEG,aAFH,AAEW,yDACT;eAAiB;yBAEnB;AALA,AAEW,SAGJ;yBAGT;AAHE,AAAO,AAAQ,AAChB;AAEG,aAAW,QAAf,AAAI,AAAoB,AAAC,AAAW,AAAK,AACvC;AAAA,AAAS,AAAW,AAAE,AAAM,AAAe,AAAS,AAAS,AAAwB,AAAI,AAAI,AAC9F;;6CACD;AAAI,eAAA,AAAW,WAAO,QAAtB,AAAiC,AAAO,iEACtC;AAAA,AAAO,AAAK,AAA6B,AAAW,AACpD;;QAAQ,WAAR,yBACA;aAAS,KAAT,AAAoB,AAAE,AAAM,6BAA5B,AAA2C,WAA3C,AAAoD,AAAS,AAAwB,AAAI,AAAI,AAC7F;AAAO,cAAP,AAAO,AAAS,AAAW,AAAE,AAAM,AAAe,AAAS,AAAS,AAA0B,AAAI,AACnG;mGACF;wGA5BH,AAA8B;;;AAIxB","file":"/imports/plugins/included/product-variant/client/templates/products/productDetail/attributes.js.map","sourcesContent":["import { ReactionProduct } from \"/lib/api\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Tracker } from \"meteor/tracker\";\nimport { Template } from \"meteor/templating\";\n\n/**\n * metaComponent helpers\n */\n\nTemplate.metaComponent.helpers({\n  buttonProps() {\n    const currentData = Template.currentData();\n\n    return {\n      icon() {\n        if (currentData.createNew) {\n          return \"plus\";\n        }\n\n        return \"times-circle\";\n      },\n      onClick() {\n        if (!currentData.createNew) {\n          const productId = ReactionProduct.selectedProductId();\n          Meteor.call(\"products/removeMetaFields\", productId, currentData);\n        }\n      }\n    };\n  }\n});\n\n\nTemplate.metaComponent.events({\n  \"change input\": function (event) {\n    const productId = ReactionProduct.selectedProductId();\n    const updateMeta = {\n      key: Template.instance().$(event.currentTarget).parent().children(\".metafield-key-input\").val(),\n      value: Template.instance().$(event.currentTarget).parent().children(\".metafield-value-input\").val()\n    };\n\n    if (this.key) {\n      const index = Template.instance().$(event.currentTarget).closest(\".metafield-list-item\").index();\n      Meteor.call(\"products/updateMetaFields\", productId, updateMeta, index);\n      Template.instance().$(event.currentTarget).animate({\n        backgroundColor: \"#e2f2e2\"\n      }).animate({\n        backgroundColor: \"#fff\"\n      });\n      return Tracker.flush();\n    }\n\n    if (updateMeta.value && !updateMeta.key) {\n      Template.instance().$(event.currentTarget).parent().children(\".metafield-key-input\").val(\"\").focus();\n    }\n    if (updateMeta.key && updateMeta.value) {\n      Meteor.call(\"products/updateMetaFields\", productId, updateMeta);\n      Tracker.flush();\n      Template.instance().$(event.currentTarget).parent().children(\".metafield-key-input\").val(\"\").focus();\n      return Template.instance().$(event.currentTarget).parent().children(\".metafield-value-input\").val(\"\");\n    }\n  }\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/included/product-variant/client/templates/products/productDetail/attributes.js.map","sourceFileName":"/imports/plugins/included/product-variant/client/templates/products/productDetail/attributes.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"attributes"},"ignored":false,"code":"var ReactionProduct = void 0;\nmodule.importSync(\"/lib/api\", {\n  ReactionProduct: function (v) {\n    ReactionProduct = v;\n  }\n}, 0);\nvar Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\nvar Tracker = void 0;\nmodule.importSync(\"meteor/tracker\", {\n  Tracker: function (v) {\n    Tracker = v;\n  }\n}, 2);\nvar Template = void 0;\nmodule.importSync(\"meteor/templating\", {\n  Template: function (v) {\n    Template = v;\n  }\n}, 3);\n/**\n * metaComponent helpers\n */Template.metaComponent.helpers({\n  buttonProps: function () {\n    var currentData = Template.currentData();\n    return {\n      icon: function () {\n        if (currentData.createNew) {\n          return \"plus\";\n        }\n\n        return \"times-circle\";\n      },\n      onClick: function () {\n        if (!currentData.createNew) {\n          var productId = ReactionProduct.selectedProductId();\n          Meteor.call(\"products/removeMetaFields\", productId, currentData);\n        }\n      }\n    };\n  }\n});\nTemplate.metaComponent.events({\n  \"change input\": function (event) {\n    var productId = ReactionProduct.selectedProductId();\n    var updateMeta = {\n      key: Template.instance().$(event.currentTarget).parent().children(\".metafield-key-input\").val(),\n      value: Template.instance().$(event.currentTarget).parent().children(\".metafield-value-input\").val()\n    };\n\n    if (this.key) {\n      var index = Template.instance().$(event.currentTarget).closest(\".metafield-list-item\").index();\n      Meteor.call(\"products/updateMetaFields\", productId, updateMeta, index);\n      Template.instance().$(event.currentTarget).animate({\n        backgroundColor: \"#e2f2e2\"\n      }).animate({\n        backgroundColor: \"#fff\"\n      });\n      return Tracker.flush();\n    }\n\n    if (updateMeta.value && !updateMeta.key) {\n      Template.instance().$(event.currentTarget).parent().children(\".metafield-key-input\").val(\"\").focus();\n    }\n\n    if (updateMeta.key && updateMeta.value) {\n      Meteor.call(\"products/updateMetaFields\", productId, updateMeta);\n      Tracker.flush();\n      Template.instance().$(event.currentTarget).parent().children(\".metafield-key-input\").val(\"\").focus();\n      return Template.instance().$(event.currentTarget).parent().children(\".metafield-value-input\").val(\"\");\n    }\n  }\n});","map":{"version":3,"sources":["/imports/plugins/included/product-variant/client/templates/products/productDetail/attributes.js"],"names":["ReactionProduct","Meteor","Tracker","Template","metaComponent","helpers","buttonProps","currentData","icon","createNew","onClick","productId","selectedProductId","call","events","event","updateMeta","key","instance","$","currentTarget","parent","children","val","value","index","closest","animate","backgroundColor","flush","focus"],"mappings":"AAAA,IAAS;AAAT,OAAgC,WAAhC;;;;;;;;;;;;;;;;;;;;;;GACA,A,AAAS,AAAc,AACvB,AAAS,AAAe,AACxB,AAAS,AAAgB,AAEzB;AAIA,AAAS,AAAc,AAAQ,AAC7B,AAAc,AACZ,AAAM,AAAc,AAAS;;YAEtB;AACE,2BACL;QAAI,cAAY,SAAhB,AAA2B,AACzB,AAAO,AACR;;wBAED;YAAO,YAAP,WANG,AAOJ;;AACD,AAAU,AACR;;AAAI,AAAC,eAAL,AAAiB,AAAW,AAC1B;AAAA,AAAM,AAAY,AAAgB,AAClC;2BAAA,AAAO,AAAK,AAA6B,AAAW,AACrD;oCACF;;8DAbH,AAAO;AAeR;AAnBH,AAA+B;;AAuB/B,AAAS,AAAc,AAAO,AAC5B,AAAgB,AAAU,AAAO,AAC/B,AAAM,AAAY,AAAgB;AApBhC,CADF;AAsBA,SAAM,cAAa;AACZ,kBAAS,UAAT,AAAoB,AAAE,OADV,AACZ,AAA4B,AAAe,AAAS,AAAS,AAAwB,AAC1F;QAAO,YAAA,AAAS,AAAW,AAAE,gBAFZ,AAEV,AAA4B,AAAe,AAAS,AAAS,AAA0B;AAFhG;gGAKA;AAAI,aAAJ,AAAS,AAAK,uFACZ,AAAM,AAAQ,AAAS,AAAW,AAAE,AAAM,AAAe,AAAQ,AAAwB,AACzF,AAAO,AAAK,AAA6B,AAAW,AAAY,AAChE;;;aAAS,KAAT,AAAoB,AAAE,AAAM,AAAe,AAAQ,AACjD;kBAAiB,2EADgC;AAAnD,AAEG,aAFH,AAEW,yDACT;eAAiB;yBAEnB;AALA,AAEW,SAGJ;yBAGT;AAHE,AAAO,AAAQ,AAChB;AAEG,aAAW,QAAf,AAAI,AAAoB,AAAC,AAAW,AAAK,AACvC;AAAA,AAAS,AAAW,AAAE,AAAM,AAAe,AAAS,AAAS,AAAwB,AAAI,AAAI,AAC9F;;6CACD;AAAI,eAAA,AAAW,WAAO,QAAtB,AAAiC,AAAO,iEACtC;AAAA,AAAO,AAAK,AAA6B,AAAW,AACpD;;QAAQ,WAAR,yBACA;aAAS,KAAT,AAAoB,AAAE,AAAM,6BAA5B,AAA2C,WAA3C,AAAoD,AAAS,AAAwB,AAAI,AAAI,AAC7F;AAAO,cAAP,AAAO,AAAS,AAAW,AAAE,AAAM,AAAe,AAAS,AAAS,AAA0B,AAAI,AACnG;mGACF;wGA5BH,AAA8B;;;AAIxB","file":"/imports/plugins/included/product-variant/client/templates/products/productDetail/attributes.js.map","sourcesContent":["import { ReactionProduct } from \"/lib/api\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Tracker } from \"meteor/tracker\";\nimport { Template } from \"meteor/templating\";\n\n/**\n * metaComponent helpers\n */\n\nTemplate.metaComponent.helpers({\n  buttonProps() {\n    const currentData = Template.currentData();\n\n    return {\n      icon() {\n        if (currentData.createNew) {\n          return \"plus\";\n        }\n\n        return \"times-circle\";\n      },\n      onClick() {\n        if (!currentData.createNew) {\n          const productId = ReactionProduct.selectedProductId();\n          Meteor.call(\"products/removeMetaFields\", productId, currentData);\n        }\n      }\n    };\n  }\n});\n\n\nTemplate.metaComponent.events({\n  \"change input\": function (event) {\n    const productId = ReactionProduct.selectedProductId();\n    const updateMeta = {\n      key: Template.instance().$(event.currentTarget).parent().children(\".metafield-key-input\").val(),\n      value: Template.instance().$(event.currentTarget).parent().children(\".metafield-value-input\").val()\n    };\n\n    if (this.key) {\n      const index = Template.instance().$(event.currentTarget).closest(\".metafield-list-item\").index();\n      Meteor.call(\"products/updateMetaFields\", productId, updateMeta, index);\n      Template.instance().$(event.currentTarget).animate({\n        backgroundColor: \"#e2f2e2\"\n      }).animate({\n        backgroundColor: \"#fff\"\n      });\n      return Tracker.flush();\n    }\n\n    if (updateMeta.value && !updateMeta.key) {\n      Template.instance().$(event.currentTarget).parent().children(\".metafield-key-input\").val(\"\").focus();\n    }\n    if (updateMeta.key && updateMeta.value) {\n      Meteor.call(\"products/updateMetaFields\", productId, updateMeta);\n      Tracker.flush();\n      Template.instance().$(event.currentTarget).parent().children(\".metafield-key-input\").val(\"\").focus();\n      return Template.instance().$(event.currentTarget).parent().children(\".metafield-value-input\").val(\"\");\n    }\n  }\n});\n"]},"hash":"c2b76f34038b52397839e50742e92eec27746c6f"}
