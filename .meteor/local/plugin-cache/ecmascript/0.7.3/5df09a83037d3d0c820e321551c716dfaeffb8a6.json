{"metadata":{"usedHelpers":["typeof","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"meteor/session","imported":["Session"],"specifiers":[{"kind":"named","imported":"Session","local":"Session"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"/client/collections","imported":["Countries"],"specifiers":[{"kind":"named","imported":"Countries","local":"Countries"}]},{"source":"/lib/collections","imported":["*"],"specifiers":[{"kind":"namespace","local":"Collections"}]},{"source":"meteor/templating","imported":["Template"],"specifiers":[{"kind":"named","imported":"Template","local":"Template"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/client/modules/accounts/templates/addressBook/form/form.js","filenameRelative":"/client/modules/accounts/templates/addressBook/form/form.js","inputSourceMap":{"version":3,"sources":["/client/modules/accounts/templates/addressBook/form/form.js"],"names":["Session","Meteor","Countries","Collections","Template","addressBookForm","helpers","countryOptions","find","fetch","statesForCountry","locale","shop","Shops","findOne","selectedCountry","get","AutoForm","getFieldValue","locales","countries","states","options","ref","state","hasOwnProperty","call","push","label","name","value","isBillingDefault","address","isShippingDefault","hasAddressBookEntries","account","Accounts","userId","profile","addressBook","length","events","set"],"mappings":";;;;;;AAAA,IAAS;AAAT,OAAwB,WAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;GACA,AAAS,AAAc,AACvB,AAAS,AAAiB,AAC1B,AAAO,AAAK,AAAiB,AAC7B,AAAS,AAAgB,AAEzB,AAAS,AAAgB,AAAQ;AAE/B;AAF+B,AAK/B,AAAgB,AAAY,AAC1B,AAAO,AAAU,AAAO,AACzB,AACD;;qBAAkB,YAAY,AAC5B;AAAI,WAAJ,iBACA;AAAA,AAAM,AAAO,AAAY,AAAM,AAC/B;AAAM,oBAAkB,YAAxB,AAAwB,AAAQ,AAAI,AAAyB,AAAS,AAAc;QACpF;AAAI,AAAC,eAAL,AAAsB,kBACpB;QAAA,AAAO,8EACR;;;aACD;AAAA,AAAI,AAAC,AAAS,AAAO,AAAK,AAAQ,AAAU,AAAiB,AAAS,AAAK,AAAO,AAAM,AACtF;;SAAO,SAAP,0EACD;;AACD;;cAAA,AAAU,AACV;QAAM,MAAM,SAAA,AAAS,OAAO,KAAA,AAAK,QAAL,AAAa,UAAb,AAAuB,iBAAvC,AAAwD,SAAS,KAA7E,AAAkF;;mEAClF;AAAK,aAAL,AAAW,AAAS,eAAK,kBACvB;AAAI,AAAG,qBAAP,AAAI,AAAkB,AAAK,AAAK,AAAQ,AACtC;gBAAS;AACD,iBAAR,AAAa,OACX;iBADW,AACJ,AAAO,AACd,AAAO;AAHT,AAAS,AAAI,AACb;AAAA,AAID;AACF;;;AACD,AAAO,AACR;AA9B8B,AAgC/B;;KAGA,kBAAkB,YAAY,AAC5B;WAAO,sBAAO,KAAP,AAAY,aAAZ,AAAwB,WAAW,KAAA,AAAK,QAAxC,AAAgD,mBAAvD,AAA0E,AAC3E;AArC8B,AAsC/B;qBAAmB,YAAY,AAC7B;WAAO,sBAAO,KAAP,AAAY,aAAZ,AAAwB,WAAW,KAAA,AAAK,QAAxC,AAAgD,oBAAvD,AAA2E,AAC5E;AAxC8B,AAyC/B;yBAAuB,YAAY,AACjC;QAAM,sBAAU,AAAY,SAAZ,AAAqB;cAC3B,OADV,AAAgB,AAA6B,AACnC,AAAO;AAD4B,AAC3C,KADc;;iBAGhB;AAAI,UAAJ,AAAa,iBACX;AAAI,YAAQ,QAAZ,AAAqB,qBACnB;AAAI,iBAAQ,QAAR,AAAgB,QAApB,AAAiC,qBAC/B;AAAA,AAAO,AAAQ,AAAQ,AAAY,AAAS,AAC7C;AACF;AACF;;WAED;AArDJ,AAAiC,AAqD7B,AAAO,AACR;;AAGH,SAAA,AAAS,gBAAT,AAAyB;6BACI,YAAY,AACrC;WAAO,QAAA,AAAQ,IAAR,AAAY,sBAAsB,SAAA,AAAS,cAAlD,AAAO,AAAkC,AAAuB,AACjE;AAHH,AAAgC;AAAA,AAC9B","file":"/client/modules/accounts/templates/addressBook/form/form.js.map","sourcesContent":["import { Session } from \"meteor/session\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Countries } from \"/client/collections\";\nimport * as Collections from \"/lib/collections\";\nimport { Template } from \"meteor/templating\";\n\nTemplate.addressBookForm.helpers({\n\n  /*\n   * TODO: update for i18n\n   */\n  countryOptions: function () {\n    return Countries.find().fetch();\n  },\n  statesForCountry: function () {\n    let locale;\n    const shop = Collections.Shops.findOne();\n    const selectedCountry = Session.get(\"addressBookCountry\") || AutoForm.getFieldValue(\"country\");\n    if (!selectedCountry) {\n      return false;\n    }\n    if ((shop !== null ? shop.locales.countries[selectedCountry].states : void 0) === null) {\n      return false;\n    }\n    options = [];\n    const ref = shop !== null ? shop.locales.countries[selectedCountry].states : void 0;\n    for (const state in ref) {\n      if ({}.hasOwnProperty.call(ref, state)) {\n        locale = ref[state];\n        options.push({\n          label: locale.name,\n          value: state\n        });\n      }\n    }\n    return options;\n  },\n\n  /*\n   *  Defaults billing/shipping when 1st new address.\n   */\n  isBillingDefault: function () {\n    return typeof this.address === \"object\" ? this.address.isBillingDefault : true;\n  },\n  isShippingDefault: function () {\n    return typeof this.address === \"object\" ? this.address.isShippingDefault : true;\n  },\n  hasAddressBookEntries: function () {\n    const account = Collections.Accounts.findOne({\n      userId: Meteor.userId()\n    });\n    if (account) {\n      if (account.profile) {\n        if (account.profile.addressBook) {\n          return account.profile.addressBook.length > 0;\n        }\n      }\n    }\n\n    return false;\n  }\n});\n\nTemplate.addressBookForm.events({\n  \"change [name='country']\": function () {\n    return Session.set(\"addressBookCountry\", AutoForm.getFieldValue(\"country\"));\n  }\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/modules/accounts/templates/addressBook/form/form.js.map","sourceFileName":"/client/modules/accounts/templates/addressBook/form/form.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"form"},"ignored":false,"code":"var _typeof2 = require(\"babel-runtime/helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar Session = void 0;\nmodule.importSync(\"meteor/session\", {\n  Session: function (v) {\n    Session = v;\n  }\n}, 0);\nvar Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\nvar Countries = void 0;\nmodule.importSync(\"/client/collections\", {\n  Countries: function (v) {\n    Countries = v;\n  }\n}, 2);\nvar Collections = Object.create(null);\nmodule.importSync(\"/lib/collections\", {\n  \"*\": function (v, n) {\n    Collections[n] = v;\n  }\n}, 3);\nvar Template = void 0;\nmodule.importSync(\"meteor/templating\", {\n  Template: function (v) {\n    Template = v;\n  }\n}, 4);\nTemplate.addressBookForm.helpers({\n  /*\n   * TODO: update for i18n\n   */countryOptions: function () {\n    return Countries.find().fetch();\n  },\n  statesForCountry: function () {\n    var locale = void 0;\n    var shop = Collections.Shops.findOne();\n    var selectedCountry = Session.get(\"addressBookCountry\") || AutoForm.getFieldValue(\"country\");\n\n    if (!selectedCountry) {\n      return false;\n    }\n\n    if ((shop !== null ? shop.locales.countries[selectedCountry].states : void 0) === null) {\n      return false;\n    }\n\n    options = [];\n    var ref = shop !== null ? shop.locales.countries[selectedCountry].states : void 0;\n\n    for (var state in meteorBabelHelpers.sanitizeForInObject(ref)) {\n      if ({}.hasOwnProperty.call(ref, state)) {\n        locale = ref[state];\n        options.push({\n          label: locale.name,\n          value: state\n        });\n      }\n    }\n\n    return options;\n  },\n  /*\n   *  Defaults billing/shipping when 1st new address.\n   */isBillingDefault: function () {\n    return (0, _typeof3.default)(this.address) === \"object\" ? this.address.isBillingDefault : true;\n  },\n  isShippingDefault: function () {\n    return (0, _typeof3.default)(this.address) === \"object\" ? this.address.isShippingDefault : true;\n  },\n  hasAddressBookEntries: function () {\n    var account = Collections.Accounts.findOne({\n      userId: Meteor.userId()\n    });\n\n    if (account) {\n      if (account.profile) {\n        if (account.profile.addressBook) {\n          return account.profile.addressBook.length > 0;\n        }\n      }\n    }\n\n    return false;\n  }\n});\nTemplate.addressBookForm.events({\n  \"change [name='country']\": function () {\n    return Session.set(\"addressBookCountry\", AutoForm.getFieldValue(\"country\"));\n  }\n});","map":{"version":3,"sources":["/client/modules/accounts/templates/addressBook/form/form.js"],"names":["Session","Meteor","Countries","Collections","Template","addressBookForm","helpers","countryOptions","find","fetch","statesForCountry","locale","shop","Shops","findOne","selectedCountry","get","AutoForm","getFieldValue","locales","countries","states","options","ref","state","hasOwnProperty","call","push","label","name","value","isBillingDefault","address","isShippingDefault","hasAddressBookEntries","account","Accounts","userId","profile","addressBook","length","events","set"],"mappings":";;;;;;AAAA,IAAS;AAAT,OAAwB,WAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;GACA,AAAS,AAAc,AACvB,AAAS,AAAiB,AAC1B,AAAO,AAAK,AAAiB,AAC7B,AAAS,AAAgB,AAEzB,AAAS,AAAgB,AAAQ;AAE/B;AAF+B,AAK/B,AAAgB,AAAY,AAC1B,AAAO,AAAU,AAAO,AACzB,AACD;;qBAAkB,YAAY,AAC5B;AAAI,WAAJ,iBACA;AAAA,AAAM,AAAO,AAAY,AAAM,AAC/B;AAAM,oBAAkB,YAAxB,AAAwB,AAAQ,AAAI,AAAyB,AAAS,AAAc;QACpF;AAAI,AAAC,eAAL,AAAsB,kBACpB;QAAA,AAAO,8EACR;;;aACD;AAAA,AAAI,AAAC,AAAS,AAAO,AAAK,AAAQ,AAAU,AAAiB,AAAS,AAAK,AAAO,AAAM,AACtF;;SAAO,SAAP,0EACD;;AACD;;cAAA,AAAU,AACV;QAAM,MAAM,SAAA,AAAS,OAAO,KAAA,AAAK,QAAL,AAAa,UAAb,AAAuB,iBAAvC,AAAwD,SAAS,KAA7E,AAAkF;;mEAClF;AAAK,aAAL,AAAW,AAAS,eAAK,kBACvB;AAAI,AAAG,qBAAP,AAAI,AAAkB,AAAK,AAAK,AAAQ,AACtC;gBAAS;AACD,iBAAR,AAAa,OACX;iBADW,AACJ,AAAO,AACd,AAAO;AAHT,AAAS,AAAI,AACb;AAAA,AAID;AACF;;;AACD,AAAO,AACR;AA9B8B,AAgC/B;;KAGA,kBAAkB,YAAY,AAC5B;WAAO,sBAAO,KAAP,AAAY,aAAZ,AAAwB,WAAW,KAAA,AAAK,QAAxC,AAAgD,mBAAvD,AAA0E,AAC3E;AArC8B,AAsC/B;qBAAmB,YAAY,AAC7B;WAAO,sBAAO,KAAP,AAAY,aAAZ,AAAwB,WAAW,KAAA,AAAK,QAAxC,AAAgD,oBAAvD,AAA2E,AAC5E;AAxC8B,AAyC/B;yBAAuB,YAAY,AACjC;QAAM,sBAAU,AAAY,SAAZ,AAAqB;cAC3B,OADV,AAAgB,AAA6B,AACnC,AAAO;AAD4B,AAC3C,KADc;;iBAGhB;AAAI,UAAJ,AAAa,iBACX;AAAI,YAAQ,QAAZ,AAAqB,qBACnB;AAAI,iBAAQ,QAAR,AAAgB,QAApB,AAAiC,qBAC/B;AAAA,AAAO,AAAQ,AAAQ,AAAY,AAAS,AAC7C;AACF;AACF;;WAED;AArDJ,AAAiC,AAqD7B,AAAO,AACR;;AAGH,SAAA,AAAS,gBAAT,AAAyB;6BACI,YAAY,AACrC;WAAO,QAAA,AAAQ,IAAR,AAAY,sBAAsB,SAAA,AAAS,cAAlD,AAAO,AAAkC,AAAuB,AACjE;AAHH,AAAgC;AAAA,AAC9B","file":"/client/modules/accounts/templates/addressBook/form/form.js.map","sourcesContent":["import { Session } from \"meteor/session\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Countries } from \"/client/collections\";\nimport * as Collections from \"/lib/collections\";\nimport { Template } from \"meteor/templating\";\n\nTemplate.addressBookForm.helpers({\n\n  /*\n   * TODO: update for i18n\n   */\n  countryOptions: function () {\n    return Countries.find().fetch();\n  },\n  statesForCountry: function () {\n    let locale;\n    const shop = Collections.Shops.findOne();\n    const selectedCountry = Session.get(\"addressBookCountry\") || AutoForm.getFieldValue(\"country\");\n    if (!selectedCountry) {\n      return false;\n    }\n    if ((shop !== null ? shop.locales.countries[selectedCountry].states : void 0) === null) {\n      return false;\n    }\n    options = [];\n    const ref = shop !== null ? shop.locales.countries[selectedCountry].states : void 0;\n    for (const state in ref) {\n      if ({}.hasOwnProperty.call(ref, state)) {\n        locale = ref[state];\n        options.push({\n          label: locale.name,\n          value: state\n        });\n      }\n    }\n    return options;\n  },\n\n  /*\n   *  Defaults billing/shipping when 1st new address.\n   */\n  isBillingDefault: function () {\n    return typeof this.address === \"object\" ? this.address.isBillingDefault : true;\n  },\n  isShippingDefault: function () {\n    return typeof this.address === \"object\" ? this.address.isShippingDefault : true;\n  },\n  hasAddressBookEntries: function () {\n    const account = Collections.Accounts.findOne({\n      userId: Meteor.userId()\n    });\n    if (account) {\n      if (account.profile) {\n        if (account.profile.addressBook) {\n          return account.profile.addressBook.length > 0;\n        }\n      }\n    }\n\n    return false;\n  }\n});\n\nTemplate.addressBookForm.events({\n  \"change [name='country']\": function () {\n    return Session.set(\"addressBookCountry\", AutoForm.getFieldValue(\"country\"));\n  }\n});\n"]},"hash":"5df09a83037d3d0c820e321551c716dfaeffb8a6"}
