{"metadata":{"usedHelpers":["typeof","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"../","imported":["Reaction"],"specifiers":[{"kind":"named","imported":"Reaction","local":"Reaction"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/templating","imported":["Template"],"specifiers":[{"kind":"named","imported":"Template","local":"Template"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/client/modules/core/helpers/permissions.js","filenameRelative":"/client/modules/core/helpers/permissions.js","inputSourceMap":{"version":3,"sources":["/client/modules/core/helpers/permissions.js"],"names":["Reaction","Meteor","Template","registerHelper","permissions","options","userId","shopId","getShopId","hash","hasPermission","hasOwnerAccess","hasAdminAccess","hasDashboardAccess","allowGuestCheckout"],"mappings":";;;;;;AAAA,IAAS;AAAT,OAAA,AAAyB;;;;;;;;;;;;;;;;GACzB,AAAS,AAAc,AACvB,AAAS,AAAgB,A,AAEzB;AAOA;;;;;IAOA,AAAS,AAAe,AAAiB,AAAU,AAAa,AAAS,AACvE,AACA,AAAI,AAAS,AAAO,AACpB,AAAM,AAAS,AAAS,AACxB;;;;;;;;sBAGA;AAAI,MAAO,SAAP,AAAmB,SAAvB,AAAiC,AAC/B,YAFF,CAEE,AAAI,AAAQ,AAAK,AAAQ,AACvB;AAAA,AAAS,AAAQ,AAAK,AACtB;AAAA,AAAO,AAAS,AAAc,AAAa,AAAQ,AACpD;;oGACF;;4BACD;AAAO,aAAS,SAAT,AAAuB,cAAvB,AAAoC,aAApC,AAA4C,QAbrD,AAaE,AACD,A,AADQ,AAGT;;;;;CAXE,GAgBF,A,AAAA,AAAS,AAAe,AAAkB,AAAY,AACpD,AAAO,AAAS,AACjB,AAED;;;;;;kBAKA;AAAA,AAAS,AAAe,AAAkB,AAAY,AACpD,AAAO,AAAS,IADlB,AAIA,A,AAFC;;;;;AAOD,SAAA,AAAS,eAAe,kBAAxB,AAA8C,YAAY,AACxD;SAAO,SAAP,AAAO,AAAS,AACjB;AAFD,A,AAIA,IAKA,AAAS,AAAe,AAAsB,AAAY,AACxD,AAAO,AAAS;;;;;AADlB,AAEC","file":"/client/modules/core/helpers/permissions.js.map","sourcesContent":["import { Reaction } from \"../\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Template } from \"meteor/templating\";\n\n/*\n * Methods for the reaction permissions\n * helpers for roles, uses alanning:meteor-roles\n * see: http://alanning.github.io/meteor-roles/classes/Roles.html\n * use: {{hasPermission admin userId}}\n */\n\n/**\n * hasPermission template helper\n * @summary check current user hasPermission\n * @param  {String|Array} \"permissions\"\n * @param  {String} checkUserId - optional Meteor.userId, default to current\n * @return {Boolean}\n */\nTemplate.registerHelper(\"hasPermission\", function (permissions, options) {\n  // default to checking this.userId\n  let userId = Meteor.userId();\n  const shopId = Reaction.getShopId();\n  // we don't necessarily need to check here\n  // as these same checks and defaults are\n  // also performed in Reaction.hasPermission\n  if (typeof options === \"object\") {\n    if (options.hash.userId) {\n      userId = options.hash.userId;\n      return Reaction.hasPermission(permissions, userId, shopId);\n    }\n  }\n  return Reaction.hasPermission(permissions, userId, shopId);\n});\n\n/**\n * hasOwnerAccess template helper\n * @summary check if user has owner access\n * @return {Boolean} return true if owner\n */\nTemplate.registerHelper(\"hasOwnerAccess\", function () {\n  return Reaction.hasOwnerAccess();\n});\n\n/**\n * hasAdminAccess template helper\n * @summary check if user has admin access\n * @return {Boolean} return true if admin\n */\nTemplate.registerHelper(\"hasAdminAccess\", function () {\n  return Reaction.hasAdminAccess();\n});\n\n/**\n * hasDashboardAccess template helper\n * @summary check if user has dashboard access\n * @return {Boolean} return true if user has dashboard permission\n */\nTemplate.registerHelper(\"hasDashboardAccess\", function () {\n  return Reaction.hasDashboardAccess();\n});\n\n/**\n * allowGuestCheckout template helper\n * @summary check if guest users are allowed to checkout\n * @return {Boolean} return true if shop has guest checkout enabled\n */\nTemplate.registerHelper(\"allowGuestCheckout\", function () {\n  return Reaction.allowGuestCheckout();\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/modules/core/helpers/permissions.js.map","sourceFileName":"/client/modules/core/helpers/permissions.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"permissions"},"ignored":false,"code":"var _typeof2 = require(\"babel-runtime/helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar Reaction = void 0;\nmodule.importSync(\"../\", {\n  Reaction: function (v) {\n    Reaction = v;\n  }\n}, 0);\nvar Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\nvar Template = void 0;\nmodule.importSync(\"meteor/templating\", {\n  Template: function (v) {\n    Template = v;\n  }\n}, 2);\n/*\n * Methods for the reaction permissions\n * helpers for roles, uses alanning:meteor-roles\n * see: http://alanning.github.io/meteor-roles/classes/Roles.html\n * use: {{hasPermission admin userId}}\n */ /**\n     * hasPermission template helper\n     * @summary check current user hasPermission\n     * @param  {String|Array} \"permissions\"\n     * @param  {String} checkUserId - optional Meteor.userId, default to current\n     * @return {Boolean}\n     */Template.registerHelper(\"hasPermission\", function (permissions, options) {\n  // default to checking this.userId\n  var userId = Meteor.userId();\n  var shopId = Reaction.getShopId(); // we don't necessarily need to check here\n  // as these same checks and defaults are\n  // also performed in Reaction.hasPermission\n\n  if ((typeof options === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(options)) === \"object\") {\n    if (options.hash.userId) {\n      userId = options.hash.userId;\n      return Reaction.hasPermission(permissions, userId, shopId);\n    }\n  }\n\n  return Reaction.hasPermission(permissions, userId, shopId);\n}); /**\n     * hasOwnerAccess template helper\n     * @summary check if user has owner access\n     * @return {Boolean} return true if owner\n     */\nTemplate.registerHelper(\"hasOwnerAccess\", function () {\n  return Reaction.hasOwnerAccess();\n}); /**\n     * hasAdminAccess template helper\n     * @summary check if user has admin access\n     * @return {Boolean} return true if admin\n     */\nTemplate.registerHelper(\"hasAdminAccess\", function () {\n  return Reaction.hasAdminAccess();\n}); /**\n     * hasDashboardAccess template helper\n     * @summary check if user has dashboard access\n     * @return {Boolean} return true if user has dashboard permission\n     */\nTemplate.registerHelper(\"hasDashboardAccess\", function () {\n  return Reaction.hasDashboardAccess();\n}); /**\n     * allowGuestCheckout template helper\n     * @summary check if guest users are allowed to checkout\n     * @return {Boolean} return true if shop has guest checkout enabled\n     */\nTemplate.registerHelper(\"allowGuestCheckout\", function () {\n  return Reaction.allowGuestCheckout();\n});","map":{"version":3,"sources":["/client/modules/core/helpers/permissions.js"],"names":["Reaction","Meteor","Template","registerHelper","permissions","options","userId","shopId","getShopId","hash","hasPermission","hasOwnerAccess","hasAdminAccess","hasDashboardAccess","allowGuestCheckout"],"mappings":";;;;;;AAAA,IAAS;AAAT,OAAA,AAAyB;;;;;;;;;;;;;;;;GACzB,AAAS,AAAc,AACvB,AAAS,AAAgB,A,AAEzB;AAOA;;;;;IAOA,AAAS,AAAe,AAAiB,AAAU,AAAa,AAAS,AACvE,AACA,AAAI,AAAS,AAAO,AACpB,AAAM,AAAS,AAAS,AACxB;;;;;;;;sBAGA;AAAI,MAAO,SAAP,AAAmB,SAAvB,AAAiC,AAC/B,YAFF,CAEE,AAAI,AAAQ,AAAK,AAAQ,AACvB;AAAA,AAAS,AAAQ,AAAK,AACtB;AAAA,AAAO,AAAS,AAAc,AAAa,AAAQ,AACpD;;oGACF;;4BACD;AAAO,aAAS,SAAT,AAAuB,cAAvB,AAAoC,aAApC,AAA4C,QAbrD,AAaE,AACD,A,AADQ,AAGT;;;;;CAXE,GAgBF,A,AAAA,AAAS,AAAe,AAAkB,AAAY,AACpD,AAAO,AAAS,AACjB,AAED;;;;;;kBAKA;AAAA,AAAS,AAAe,AAAkB,AAAY,AACpD,AAAO,AAAS,IADlB,AAIA,A,AAFC;;;;;AAOD,SAAA,AAAS,eAAe,kBAAxB,AAA8C,YAAY,AACxD;SAAO,SAAP,AAAO,AAAS,AACjB;AAFD,A,AAIA,IAKA,AAAS,AAAe,AAAsB,AAAY,AACxD,AAAO,AAAS;;;;;AADlB,AAEC","file":"/client/modules/core/helpers/permissions.js.map","sourcesContent":["import { Reaction } from \"../\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Template } from \"meteor/templating\";\n\n/*\n * Methods for the reaction permissions\n * helpers for roles, uses alanning:meteor-roles\n * see: http://alanning.github.io/meteor-roles/classes/Roles.html\n * use: {{hasPermission admin userId}}\n */\n\n/**\n * hasPermission template helper\n * @summary check current user hasPermission\n * @param  {String|Array} \"permissions\"\n * @param  {String} checkUserId - optional Meteor.userId, default to current\n * @return {Boolean}\n */\nTemplate.registerHelper(\"hasPermission\", function (permissions, options) {\n  // default to checking this.userId\n  let userId = Meteor.userId();\n  const shopId = Reaction.getShopId();\n  // we don't necessarily need to check here\n  // as these same checks and defaults are\n  // also performed in Reaction.hasPermission\n  if (typeof options === \"object\") {\n    if (options.hash.userId) {\n      userId = options.hash.userId;\n      return Reaction.hasPermission(permissions, userId, shopId);\n    }\n  }\n  return Reaction.hasPermission(permissions, userId, shopId);\n});\n\n/**\n * hasOwnerAccess template helper\n * @summary check if user has owner access\n * @return {Boolean} return true if owner\n */\nTemplate.registerHelper(\"hasOwnerAccess\", function () {\n  return Reaction.hasOwnerAccess();\n});\n\n/**\n * hasAdminAccess template helper\n * @summary check if user has admin access\n * @return {Boolean} return true if admin\n */\nTemplate.registerHelper(\"hasAdminAccess\", function () {\n  return Reaction.hasAdminAccess();\n});\n\n/**\n * hasDashboardAccess template helper\n * @summary check if user has dashboard access\n * @return {Boolean} return true if user has dashboard permission\n */\nTemplate.registerHelper(\"hasDashboardAccess\", function () {\n  return Reaction.hasDashboardAccess();\n});\n\n/**\n * allowGuestCheckout template helper\n * @summary check if guest users are allowed to checkout\n * @return {Boolean} return true if shop has guest checkout enabled\n */\nTemplate.registerHelper(\"allowGuestCheckout\", function () {\n  return Reaction.allowGuestCheckout();\n});\n"]},"hash":"a0a951587e4867f12916a6977f71492236c86ae9"}
