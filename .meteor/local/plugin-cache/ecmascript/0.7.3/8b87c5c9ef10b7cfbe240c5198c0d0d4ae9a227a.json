{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"/server/api","imported":["Reaction"],"specifiers":[{"kind":"named","imported":"Reaction","local":"Reaction"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/server/methods/accounts/serviceConfiguration.js","filenameRelative":"/server/methods/accounts/serviceConfiguration.js","inputSourceMap":{"version":3,"sources":["/server/methods/accounts/serviceConfiguration.js"],"names":["Meteor","Reaction","methods","service","fields","check","String","Array","dataToSave","_","each","field","property","value","hasPermission","ServiceConfiguration","configurations","upsert","$set"],"mappings":"AAAA,IAAS;AAAT,OAAuB,WAAvB;;;;;;;;;;GACA,AAAS,AAAgB,AAGzB,AAAO,AAAQ,AACb,AAAuC,AAAU,AAAS,AAAQ;AAChE,OAAM;AACN,AAAM,AAAQ,oEACd;UAAM,SAAN,AAAmB;kBAEnB;AAAE,QAAF,AAAO,AAAQ,aAAA,AAAU,AAAO,AAC9B,AAAW,AAAM,AAAY,AAAM,AACpC;;AAFD;yCAIA;AAAA,AAAI,AAAS,AAAc,AAAC,AAAwB,AAClD,AAAO,AAAqB,AAAe,AAAO,AAChD;;iBAAS,uCADuC;AAA3C,AAEJ;AACK,iBAHR,AAAO,AAEJ;AACD;cAGJ;AADC;AACD,AAAO,AACR;;WAlBH,AAAe;;AAEX,AAAe,AACf","file":"/server/methods/accounts/serviceConfiguration.js.map","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport { Reaction } from \"/server/api\";\n\n\nMeteor.methods({\n  \"accounts/updateServiceConfiguration\": function (service, fields) {\n    check(service, String);\n    check(fields, Array);\n    const dataToSave = {};\n\n    _.each(fields, function (field) {\n      dataToSave[field.property] = field.value;\n    });\n\n    if (Reaction.hasPermission([\"dashboard/accounts\"])) {\n      return ServiceConfiguration.configurations.upsert({\n        service: service\n      }, {\n        $set: dataToSave\n      });\n    }\n    return false;\n  }\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/server/methods/accounts/serviceConfiguration.js.map","sourceFileName":"/server/methods/accounts/serviceConfiguration.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"serviceConfiguration"},"ignored":false,"code":"var Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Reaction = void 0;\nmodule.importSync(\"/server/api\", {\n  Reaction: function (v) {\n    Reaction = v;\n  }\n}, 1);\nMeteor.methods({\n  \"accounts/updateServiceConfiguration\": function (service, fields) {\n    check(service, String);\n    check(fields, Array);\n    var dataToSave = {};\n\n    _.each(fields, function (field) {\n      dataToSave[field.property] = field.value;\n    });\n\n    if (Reaction.hasPermission([\"dashboard/accounts\"])) {\n      return ServiceConfiguration.configurations.upsert({\n        service: service\n      }, {\n        $set: dataToSave\n      });\n    }\n\n    return false;\n  }\n});","map":{"version":3,"sources":["/server/methods/accounts/serviceConfiguration.js"],"names":["Meteor","Reaction","methods","service","fields","check","String","Array","dataToSave","_","each","field","property","value","hasPermission","ServiceConfiguration","configurations","upsert","$set"],"mappings":"AAAA,IAAS;AAAT,OAAuB,WAAvB;;;;;;;;;;GACA,AAAS,AAAgB,AAGzB,AAAO,AAAQ,AACb,AAAuC,AAAU,AAAS,AAAQ;AAChE,OAAM;AACN,AAAM,AAAQ,oEACd;UAAM,SAAN,AAAmB;kBAEnB;AAAE,QAAF,AAAO,AAAQ,aAAA,AAAU,AAAO,AAC9B,AAAW,AAAM,AAAY,AAAM,AACpC;;AAFD;yCAIA;AAAA,AAAI,AAAS,AAAc,AAAC,AAAwB,AAClD,AAAO,AAAqB,AAAe,AAAO,AAChD;;iBAAS,uCADuC;AAA3C,AAEJ;AACK,iBAHR,AAAO,AAEJ;AACD;cAGJ;AADC;AACD,AAAO,AACR;;WAlBH,AAAe;;AAEX,AAAe,AACf","file":"/server/methods/accounts/serviceConfiguration.js.map","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport { Reaction } from \"/server/api\";\n\n\nMeteor.methods({\n  \"accounts/updateServiceConfiguration\": function (service, fields) {\n    check(service, String);\n    check(fields, Array);\n    const dataToSave = {};\n\n    _.each(fields, function (field) {\n      dataToSave[field.property] = field.value;\n    });\n\n    if (Reaction.hasPermission([\"dashboard/accounts\"])) {\n      return ServiceConfiguration.configurations.upsert({\n        service: service\n      }, {\n        $set: dataToSave\n      });\n    }\n    return false;\n  }\n});\n"]},"hash":"8b87c5c9ef10b7cfbe240c5198c0d0d4ae9a227a"}
