{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/tracker","imported":["Tracker"],"specifiers":[{"kind":"named","imported":"Tracker","local":"Tracker"}]},{"source":"/client/api","imported":["Reaction","Router"],"specifiers":[{"kind":"named","imported":"Reaction","local":"Reaction"},{"kind":"named","imported":"Router","local":"Router"}]},{"source":"/lib/collections","imported":["Packages","Shops"],"specifiers":[{"kind":"named","imported":"Packages","local":"Packages"},{"kind":"named","imported":"Shops","local":"Shops"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/core/layout/client/templates/theme/theme.js","filenameRelative":"/imports/plugins/core/layout/client/templates/theme/theme.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/core/layout/client/templates/theme/theme.js"],"names":["Meteor","Tracker","Reaction","Router","Packages","Shops","getRouteLayout","context","pkg","findOne","route","name","registryRoute","registry","find","x","layout","Session","get","shop","getShopId","currentLayout","workflow","enabled","addBodyClasses","classes","undefined","replace","theme","push","join","$","removeClass","addClass","set","Hooks","onEnter","startup","autorun","subscription","Subscriptions","ready","text","styles"],"mappings":"AAAA,IAAS;AAAT,OAAuB,WAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GACA,A,AAAA,AAAS,AAAe,AACxB,AAAS,AAAU,AAAc,AACjC,AAAS,AAAU,AAAa,AAEhC;;AAMA,AAAS,AAAe,AAAS;;;;;GAC/B,AAAM,SAAM,AAAS,eAAT,AAAiB,SAAE;qBAAyB;AAA3B,AAAmB,AAAc;eAAjC,AAAuC,AAAW;GAA/B;;AAAhD,AAAY;uDAEZ;AAAA,AAAI,AAAK,sCACP;AAAM,AAAgB,AAAI,AAAS,AAAK,AAAC,AAAM,AAC7C,AAAO,AAAE,AAAS,AAAQ,AAAM,AACjC;;AAFD,AAAsB;AAItB;AAAI,WAAJ,AAAmB,sBACjB;gEACA;AAAA,AAAI,AAAC,AAAc,AAAQ,AACzB,AAAc,AAAS,AAAQ,AAAI,AAAqB,AACzD;;;wDAED;YAAM,EAAO,WAAA,AAAM,AAAQ,cAAS,YAApC,AAAa,AAAc,2DAC3B;AAAM,iBAAgB,AAAK,AAAO,AAAK,AAAC,AAAM,AAC5C;AAAA,AAAI,AAAE,AAAW,AAAc,AAAU,AAAE,AAAa,AAAc,AAAY,AAAE,AAAY,AAAM,AACpG;AAAA,AAAO,AACR,AACF;AAJD,AAAsB,aAMtB;AAAA,AAAO,AACR;AACF;;SAED;AAAO,AACR,A,AADC,AAGF;;;;;;;AAMA,SAAA,AAAS,eAAT,AAAwB;MACtB,AAAI,AAEJ;;MAAI,QAAA,AAAQ,MAAR,AAAc,SAAlB,AAA2B,WAAW,AACpC;cADF,AACE,AAAU,AACR,AAEH,CAAM,AACL,AAAU,AACR,AACA;SAV2B,AAQ7B,AAAU,AAEC,AAAQ,AAAM,AAAK,AAAQ,AAAU,AAEjD;AAED;kDAd+B,AAe/B,AAAM,AAAgB,AAAe,AAErC;AACA,AAAI,AAAiB,AAAc,AAAO,AACxC,GAnB6B,AAC/B,CAkBE,AAAQ,AAAK,AAAc,AAC5B;;;AAFD,MAEO,+BACL,AAAQ,AAAK,AACd;;4CAED;YAAU,KAAV,AAAU,AAAQ,AAAK,cAEvB;AAAE,SA1B6B,AA0B/B,AAAU,AAAY,AAAQ,AAAI,AAAe,AAAS,AAE1D;iBACA;AAAA,AAAQ,AAAI,AAAc,AAC3B;;yBAED,AAAO,AAAM,AAAQ,AAErB;IAAO,QAAP,AAAe,AAAM,gDACnB,AAAQ,AAAQ,AAAM,AACpB,UAAA,AAAM,AAAe,AAAS,AAAc;;4BAC5C;AAAA,AAAI,AAAa,AAAS,AACxB,AAAM,AAAO,AAAM,AAAQ;;qBAE3B,AAAI,AAAM;AACR,OAAI,QAAK,YAAT,AAAgB,AACd;UAAE,oBAAF,AAA2B,AAAK,AAAK,AAAM,AAAU,AACtD;AAFD,QAEO,sCACL;;QAAE,sBAAF,AAA2B,AAAK,AACjC;+BACF,AACF;;gBAZH,AAaC;wBAdH,AAeC","file":"/imports/plugins/core/layout/client/templates/theme/theme.js.map","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport { Tracker } from \"meteor/tracker\";\nimport { Reaction, Router } from \"/client/api\";\nimport { Packages, Shops } from \"/lib/collections\";\n\n/**\n * getRouteLayout\n * Gets layout combo based on current route context\n * @param  {Object} context - route context\n * @returns {Object|null} The layout hash\n */\nfunction getRouteLayout(context) {\n  const pkg = Packages.findOne({ \"registry.name\": context.route.name, \"enabled\": true });\n\n  if (pkg) {\n    const registryRoute = pkg.registry.find((x) => {\n      return x.name === context.route.name;\n    });\n\n    if (registryRoute) {\n      // set a default layout if none is given\n      if (!registryRoute.layout) {\n        registryRoute.layout = Session.get(\"DEFAULT_LAYOUT\") || \"coreLayout\";\n      }\n\n      const shop = Shops.findOne(Reaction.getShopId());\n      const currentLayout = shop.layout.find((x) => {\n        if (x.layout === registryRoute.layout && x.workflow === registryRoute.workflow && x.enabled === true) {\n          return true;\n        }\n      });\n\n      return currentLayout;\n    }\n  }\n\n  return null;\n}\n\n/**\n * addBodyClasses\n * Adds body classes to help themes distinguish pages and components based on the current route name and layout theme\n * @param  {Object} context - route context\n * @returns {undefined}\n */\nfunction addBodyClasses(context) {\n  let classes;\n\n  if (context.route.name === undefined) {\n    classes = [\n      \"app-not-found\"\n    ];\n  } else {\n    classes = [\n      // push clean route-name\n      \"app-\" + context.route.name.replace(/[\\/_]/i, \"-\")\n    ];\n  }\n\n  // find the layout combo for this route\n  const currentLayout = getRouteLayout(context);\n\n  // add theme class for route layout or default\n  if (currentLayout && currentLayout.theme) {\n    classes.push(currentLayout.theme);\n  } else {\n    classes.push(\"default\");\n  }\n\n  classes = classes.join(\" \");\n\n  $(\"body\").removeClass(Session.get(\"BODY_CLASS\")).addClass(classes);\n\n  // save for removal on next enter\n  Session.set(\"BODY_CLASS\", classes);\n}\n\nRouter.Hooks.onEnter(addBodyClasses);\n\nMeteor.startup(() => {\n  Tracker.autorun(() => {\n    const subscription = Reaction.Subscriptions.Shops;\n    if (subscription.ready()) {\n      const shop = Shops.findOne({});\n\n      if (shop) {\n        if (shop.theme) {\n          $(\"#reactionLayoutStyles\").text(shop.theme.styles || \"\");\n        } else {\n          $(\"#reactionLayoutStyles\").text(\"\");\n        }\n      }\n    }\n  });\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/core/layout/client/templates/theme/theme.js.map","sourceFileName":"/imports/plugins/core/layout/client/templates/theme/theme.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"theme"},"ignored":false,"code":"var Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Tracker = void 0;\nmodule.importSync(\"meteor/tracker\", {\n  Tracker: function (v) {\n    Tracker = v;\n  }\n}, 1);\nvar Reaction = void 0,\n    Router = void 0;\nmodule.importSync(\"/client/api\", {\n  Reaction: function (v) {\n    Reaction = v;\n  },\n  Router: function (v) {\n    Router = v;\n  }\n}, 2);\nvar Packages = void 0,\n    Shops = void 0;\nmodule.importSync(\"/lib/collections\", {\n  Packages: function (v) {\n    Packages = v;\n  },\n  Shops: function (v) {\n    Shops = v;\n  }\n}, 3);\n\n/**\n * getRouteLayout\n * Gets layout combo based on current route context\n * @param  {Object} context - route context\n * @returns {Object|null} The layout hash\n */function getRouteLayout(context) {\n  var pkg = Packages.findOne({\n    \"registry.name\": context.route.name,\n    \"enabled\": true\n  });\n\n  if (pkg) {\n    var registryRoute = pkg.registry.find(function (x) {\n      return x.name === context.route.name;\n    });\n\n    if (registryRoute) {\n      // set a default layout if none is given\n      if (!registryRoute.layout) {\n        registryRoute.layout = Session.get(\"DEFAULT_LAYOUT\") || \"coreLayout\";\n      }\n\n      var shop = Shops.findOne(Reaction.getShopId());\n      var currentLayout = shop.layout.find(function (x) {\n        if (x.layout === registryRoute.layout && x.workflow === registryRoute.workflow && x.enabled === true) {\n          return true;\n        }\n      });\n      return currentLayout;\n    }\n  }\n\n  return null;\n} /**\n   * addBodyClasses\n   * Adds body classes to help themes distinguish pages and components based on the current route name and layout theme\n   * @param  {Object} context - route context\n   * @returns {undefined}\n   */\n\nfunction addBodyClasses(context) {\n  var classes = void 0;\n\n  if (context.route.name === undefined) {\n    classes = [\"app-not-found\"];\n  } else {\n    classes = [// push clean route-name\n    \"app-\" + context.route.name.replace(/[\\/_]/i, \"-\")];\n  } // find the layout combo for this route\n\n\n  var currentLayout = getRouteLayout(context); // add theme class for route layout or default\n\n  if (currentLayout && currentLayout.theme) {\n    classes.push(currentLayout.theme);\n  } else {\n    classes.push(\"default\");\n  }\n\n  classes = classes.join(\" \");\n  $(\"body\").removeClass(Session.get(\"BODY_CLASS\")).addClass(classes); // save for removal on next enter\n\n  Session.set(\"BODY_CLASS\", classes);\n}\n\nRouter.Hooks.onEnter(addBodyClasses);\nMeteor.startup(function () {\n  Tracker.autorun(function () {\n    var subscription = Reaction.Subscriptions.Shops;\n\n    if (subscription.ready()) {\n      var shop = Shops.findOne({});\n\n      if (shop) {\n        if (shop.theme) {\n          $(\"#reactionLayoutStyles\").text(shop.theme.styles || \"\");\n        } else {\n          $(\"#reactionLayoutStyles\").text(\"\");\n        }\n      }\n    }\n  });\n});","map":{"version":3,"sources":["/imports/plugins/core/layout/client/templates/theme/theme.js"],"names":["Meteor","Tracker","Reaction","Router","Packages","Shops","getRouteLayout","context","pkg","findOne","route","name","registryRoute","registry","find","x","layout","Session","get","shop","getShopId","currentLayout","workflow","enabled","addBodyClasses","classes","undefined","replace","theme","push","join","$","removeClass","addClass","set","Hooks","onEnter","startup","autorun","subscription","Subscriptions","ready","text","styles"],"mappings":"AAAA,IAAS;AAAT,OAAuB,WAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GACA,A,AAAA,AAAS,AAAe,AACxB,AAAS,AAAU,AAAc,AACjC,AAAS,AAAU,AAAa,AAEhC;;AAMA,AAAS,AAAe,AAAS;;;;;GAC/B,AAAM,SAAM,AAAS,eAAT,AAAiB,SAAE;qBAAyB;AAA3B,AAAmB,AAAc;eAAjC,AAAuC,AAAW;GAA/B;;AAAhD,AAAY;uDAEZ;AAAA,AAAI,AAAK,sCACP;AAAM,AAAgB,AAAI,AAAS,AAAK,AAAC,AAAM,AAC7C,AAAO,AAAE,AAAS,AAAQ,AAAM,AACjC;;AAFD,AAAsB;AAItB;AAAI,WAAJ,AAAmB,sBACjB;gEACA;AAAA,AAAI,AAAC,AAAc,AAAQ,AACzB,AAAc,AAAS,AAAQ,AAAI,AAAqB,AACzD;;;wDAED;YAAM,EAAO,WAAA,AAAM,AAAQ,cAAS,YAApC,AAAa,AAAc,2DAC3B;AAAM,iBAAgB,AAAK,AAAO,AAAK,AAAC,AAAM,AAC5C;AAAA,AAAI,AAAE,AAAW,AAAc,AAAU,AAAE,AAAa,AAAc,AAAY,AAAE,AAAY,AAAM,AACpG;AAAA,AAAO,AACR,AACF;AAJD,AAAsB,aAMtB;AAAA,AAAO,AACR;AACF;;SAED;AAAO,AACR,A,AADC,AAGF;;;;;;;AAMA,SAAA,AAAS,eAAT,AAAwB;MACtB,AAAI,AAEJ;;MAAI,QAAA,AAAQ,MAAR,AAAc,SAAlB,AAA2B,WAAW,AACpC;cADF,AACE,AAAU,AACR,AAEH,CAAM,AACL,AAAU,AACR,AACA;SAV2B,AAQ7B,AAAU,AAEC,AAAQ,AAAM,AAAK,AAAQ,AAAU,AAEjD;AAED;kDAd+B,AAe/B,AAAM,AAAgB,AAAe,AAErC;AACA,AAAI,AAAiB,AAAc,AAAO,AACxC,GAnB6B,AAC/B,CAkBE,AAAQ,AAAK,AAAc,AAC5B;;;AAFD,MAEO,+BACL,AAAQ,AAAK,AACd;;4CAED;YAAU,KAAV,AAAU,AAAQ,AAAK,cAEvB;AAAE,SA1B6B,AA0B/B,AAAU,AAAY,AAAQ,AAAI,AAAe,AAAS,AAE1D;iBACA;AAAA,AAAQ,AAAI,AAAc,AAC3B;;yBAED,AAAO,AAAM,AAAQ,AAErB;IAAO,QAAP,AAAe,AAAM,gDACnB,AAAQ,AAAQ,AAAM,AACpB,UAAA,AAAM,AAAe,AAAS,AAAc;;4BAC5C;AAAA,AAAI,AAAa,AAAS,AACxB,AAAM,AAAO,AAAM,AAAQ;;qBAE3B,AAAI,AAAM;AACR,OAAI,QAAK,YAAT,AAAgB,AACd;UAAE,oBAAF,AAA2B,AAAK,AAAK,AAAM,AAAU,AACtD;AAFD,QAEO,sCACL;;QAAE,sBAAF,AAA2B,AAAK,AACjC;+BACF,AACF;;gBAZH,AAaC;wBAdH,AAeC","file":"/imports/plugins/core/layout/client/templates/theme/theme.js.map","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport { Tracker } from \"meteor/tracker\";\nimport { Reaction, Router } from \"/client/api\";\nimport { Packages, Shops } from \"/lib/collections\";\n\n/**\n * getRouteLayout\n * Gets layout combo based on current route context\n * @param  {Object} context - route context\n * @returns {Object|null} The layout hash\n */\nfunction getRouteLayout(context) {\n  const pkg = Packages.findOne({ \"registry.name\": context.route.name, \"enabled\": true });\n\n  if (pkg) {\n    const registryRoute = pkg.registry.find((x) => {\n      return x.name === context.route.name;\n    });\n\n    if (registryRoute) {\n      // set a default layout if none is given\n      if (!registryRoute.layout) {\n        registryRoute.layout = Session.get(\"DEFAULT_LAYOUT\") || \"coreLayout\";\n      }\n\n      const shop = Shops.findOne(Reaction.getShopId());\n      const currentLayout = shop.layout.find((x) => {\n        if (x.layout === registryRoute.layout && x.workflow === registryRoute.workflow && x.enabled === true) {\n          return true;\n        }\n      });\n\n      return currentLayout;\n    }\n  }\n\n  return null;\n}\n\n/**\n * addBodyClasses\n * Adds body classes to help themes distinguish pages and components based on the current route name and layout theme\n * @param  {Object} context - route context\n * @returns {undefined}\n */\nfunction addBodyClasses(context) {\n  let classes;\n\n  if (context.route.name === undefined) {\n    classes = [\n      \"app-not-found\"\n    ];\n  } else {\n    classes = [\n      // push clean route-name\n      \"app-\" + context.route.name.replace(/[\\/_]/i, \"-\")\n    ];\n  }\n\n  // find the layout combo for this route\n  const currentLayout = getRouteLayout(context);\n\n  // add theme class for route layout or default\n  if (currentLayout && currentLayout.theme) {\n    classes.push(currentLayout.theme);\n  } else {\n    classes.push(\"default\");\n  }\n\n  classes = classes.join(\" \");\n\n  $(\"body\").removeClass(Session.get(\"BODY_CLASS\")).addClass(classes);\n\n  // save for removal on next enter\n  Session.set(\"BODY_CLASS\", classes);\n}\n\nRouter.Hooks.onEnter(addBodyClasses);\n\nMeteor.startup(() => {\n  Tracker.autorun(() => {\n    const subscription = Reaction.Subscriptions.Shops;\n    if (subscription.ready()) {\n      const shop = Shops.findOne({});\n\n      if (shop) {\n        if (shop.theme) {\n          $(\"#reactionLayoutStyles\").text(shop.theme.styles || \"\");\n        } else {\n          $(\"#reactionLayoutStyles\").text(\"\");\n        }\n      }\n    }\n  });\n});\n"]},"hash":"ae93dba9c068dde39f97ac5b756cccc5b86ccae5"}
