{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"lodash/indexOf","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_indexOf"}]},{"source":"/lib/collections","imported":["Cart"],"specifiers":[{"kind":"named","imported":"Cart","local":"Cart"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/core/discounts/server/hooks/cart.js","filenameRelative":"/imports/plugins/core/discounts/server/hooks/cart.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/core/discounts/server/hooks/cart.js"],"names":["Cart","after","update","userId","cart","fieldNames","trigger","discount","field","Meteor","call","direct","_id","$set"],"mappings":";;;;;;;;;;;;GACA,A,AAAA,AAAS,AAAY,AAErB;AAWA,AAAK,AAAM,AAAO,AAAC,AAAQ,AAAM,AAAe,AAC9C,AAAM,AAAU,AAAC,AAAY,AAAW;;;;;;;;;;OACpC,MAAW,OAAf;wCACA;MAAA,AAAI,AAAM,WACR;;MAAK;AACC,yBAAA,AAAiB;AAArB,AAAgC,AAAC,AAAG,AAClC;;;;;;;;;;;UADU;;mBACC,AAAO,SAAP,AAAY,eAAvB,AAAW,AAAmC,AAC/C;sDAJK,AAKP,AACD;;KALA,AAAW,AAAS,AAAY,AAC9B,CAKF;;;SAAA,AAAK,OAAL,AAAY;;AAAO;;kBAAE;;;AAAF,AAAO,AAAK;AAVnC,AAUI,AAAsC,AAAE,AAAM,AAAE,AAAU,AAC3D,AACF,CAVC","file":"/imports/plugins/core/discounts/server/hooks/cart.js.map","sourcesContent":["import { indexOf } from \"lodash\";\nimport { Cart } from \"/lib/collections\";\n\n/**\n* Cart Hooks for Discounts\n* @type {Object}\n* @desc After cart update apply discounts.\n* if items are changed, recalculating discounts\n* we could have done this in the core/cart transform\n* but this way this file controls the events from\n* the core/discounts plugin.\n* @todo just move so a single Hook.event and move all the\n* cart hooks to a single location.\n*/\nCart.after.update((userId, cart, fieldNames) => {\n  const trigger = [\"discount\", \"billing\", \"shipping\"];\n  let discount = 0;\n  if (cart) {\n    for (const field of fieldNames) {\n      if (indexOf(trigger, field) !== -1) {\n        discount = Meteor.call(\"discounts/calculate\", cart);\n      }\n    }\n    // Update cart (without triggering more updates.)\n    Cart.direct.update({ _id: cart._id }, { $set: { discount: discount } });\n  }\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/core/discounts/server/hooks/cart.js.map","sourceFileName":"/imports/plugins/core/discounts/server/hooks/cart.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"cart"},"ignored":false,"code":"var _indexOf = void 0;\n\nmodule.importSync(\"lodash/indexOf\", {\n  \"default\": function (v) {\n    _indexOf = v;\n  }\n}, 0);\nvar Cart = void 0;\nmodule.importSync(\"/lib/collections\", {\n  Cart: function (v) {\n    Cart = v;\n  }\n}, 1);\n/**\n* Cart Hooks for Discounts\n* @type {Object}\n* @desc After cart update apply discounts.\n* if items are changed, recalculating discounts\n* we could have done this in the core/cart transform\n* but this way this file controls the events from\n* the core/discounts plugin.\n* @todo just move so a single Hook.event and move all the\n* cart hooks to a single location.\n*/Cart.after.update(function (userId, cart, fieldNames) {\n  var trigger = [\"discount\", \"billing\", \"shipping\"];\n  var discount = 0;\n\n  if (cart) {\n    for (var _iterator = fieldNames, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var field = _ref;\n\n      if (_indexOf(trigger, field) !== -1) {\n        discount = Meteor.call(\"discounts/calculate\", cart);\n      }\n    } // Update cart (without triggering more updates.)\n\n\n    Cart.direct.update({\n      _id: cart._id\n    }, {\n      $set: {\n        discount: discount\n      }\n    });\n  }\n});","map":{"version":3,"sources":["/imports/plugins/core/discounts/server/hooks/cart.js"],"names":["Cart","after","update","userId","cart","fieldNames","trigger","discount","field","Meteor","call","direct","_id","$set"],"mappings":";;;;;;;;;;;;GACA,A,AAAA,AAAS,AAAY,AAErB;AAWA,AAAK,AAAM,AAAO,AAAC,AAAQ,AAAM,AAAe,AAC9C,AAAM,AAAU,AAAC,AAAY,AAAW;;;;;;;;;;OACpC,MAAW,OAAf;wCACA;MAAA,AAAI,AAAM,WACR;;MAAK;AACC,yBAAA,AAAiB;AAArB,AAAgC,AAAC,AAAG,AAClC;;;;;;;;;;;UADU;;mBACC,AAAO,SAAP,AAAY,eAAvB,AAAW,AAAmC,AAC/C;sDAJK,AAKP,AACD;;KALA,AAAW,AAAS,AAAY,AAC9B,CAKF;;;SAAA,AAAK,OAAL,AAAY;;AAAO;;kBAAE;;;AAAF,AAAO,AAAK;AAVnC,AAUI,AAAsC,AAAE,AAAM,AAAE,AAAU,AAC3D,AACF,CAVC","file":"/imports/plugins/core/discounts/server/hooks/cart.js.map","sourcesContent":["import { indexOf } from \"lodash\";\nimport { Cart } from \"/lib/collections\";\n\n/**\n* Cart Hooks for Discounts\n* @type {Object}\n* @desc After cart update apply discounts.\n* if items are changed, recalculating discounts\n* we could have done this in the core/cart transform\n* but this way this file controls the events from\n* the core/discounts plugin.\n* @todo just move so a single Hook.event and move all the\n* cart hooks to a single location.\n*/\nCart.after.update((userId, cart, fieldNames) => {\n  const trigger = [\"discount\", \"billing\", \"shipping\"];\n  let discount = 0;\n  if (cart) {\n    for (const field of fieldNames) {\n      if (indexOf(trigger, field) !== -1) {\n        discount = Meteor.call(\"discounts/calculate\", cart);\n      }\n    }\n    // Update cart (without triggering more updates.)\n    Cart.direct.update({ _id: cart._id }, { $set: { discount: discount } });\n  }\n});\n"]},"hash":"4d788bb0d8841e8a0c365600bf6842906b903067"}
