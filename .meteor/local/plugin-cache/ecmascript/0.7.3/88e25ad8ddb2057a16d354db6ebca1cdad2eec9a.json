{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"/client/api","imported":["i18next"],"specifiers":[{"kind":"named","imported":"i18next","local":"i18next"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"../add/add","imported":["setValidatedAddress"],"specifiers":[{"kind":"named","imported":"setValidatedAddress","local":"setValidatedAddress"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/client/modules/accounts/templates/addressBook/edit/edit.js","filenameRelative":"/client/modules/accounts/templates/addressBook/edit/edit.js","inputSourceMap":{"version":3,"sources":["/client/modules/accounts/templates/addressBook/edit/edit.js"],"names":["i18next","Meteor","setValidatedAddress","AutoForm","hooks","addressBookEditForm","onSubmit","insertDoc","that","event","preventDefault","addressBook","$","template","firstNode","closest","call","err","res","validated","error","result","Alerts","toast","t","message","done","Error","trigger","Event","validatedAddress","inline","placement","i18nKey","formErrors","details"],"mappings":"AAAA,IAAS;AAAT,OAAwB,WAAxB;;;;;;;;;;;;;;;;GACA,AAAS,AAAc,A,AACvB,AAAS,AAA2B,AAEpC;AAKA,AAAS,AAAM,AACb,AAAqB,AACnB,AAAU,AAAU,AAAW;;;YACvB;AACN,AAAK,AAAM;AACL,wBAAc,AAAE,AAAK,WAA3B,AAAoB,AAAE,AAAc,AAAW,AAAQ,AAEvD;UAAA,AAAO,AAAK,OAAZ,AAAwC,AAAW,AAAU,AAAK,AAAK,AACrE;WAAI,AAAI,MAAR,AAAmB,AACjB;UAAA,AAAO,AAAK,8BAAZ,AAA0C,mBAA1C,AAAqD,AAAC,AAAO,AAAW,AACtE,AAAI,AAAO,AACT;kBAAA,AAAO,AAAM,AAAQ,AAAE,sDAAV,AAAgD;AAAE;;gBAAK,WAAP,AAAa;AAA1E,AAAa,iBAAyE,KAAtF,kEACA;gBAAK,OAAL,AAAU,AAAI,AAAM,AACpB;qBAAA,AAAO;;kBACR;;;;qBACD;AAAA,AAAI,AAAQ,AACV;;gBAAA,AAAK,QADK,AAGV;mBACA,AAAY,AAAQ,AAAE,AAAM,AAC7B,QAXH,AAYC;;0CAbH,AAcC;AAAM,AACL;AAAA,AAAI,AAAI,AAAkB,AACxB;eAAA,AAAoB,AACpB;kBAAA,AAAO,AAAO,kBAAd,AAAmG,AAAW,AAC5G;AAAW,gCADiG,AAE5G;mBAAS;yBAEZ;uBACD;AALE,AAA8G;AAKhH,AAAI,AAAI,AAAY,AAClB;;cAAK,IAAL,AAAW,YAAX,AAAoB,AAAI,AAAY,AAClC;AAAO,iCAAa,IAApB,AAA6B;AAA7B,AAAsC,AACpC;;;;;;;;;;;kBADF,AAAc;qBACD;2BAEd,AACF;AAJG,AAAsC;;AAK1C;;eAAA,AAAK,KAfA,AAeL,AAAU,sBAAsB,AACjC;AACF;AAhCD,AAiCD;AAxCL,AAAe,AACQ;AAGjB,AACA;AAFA,AAAa,AACb,CADA","file":"/client/modules/accounts/templates/addressBook/edit/edit.js.map","sourcesContent":["import { i18next } from \"/client/api\";\nimport { Meteor } from \"meteor/meteor\";\nimport { setValidatedAddress } from \"../add/add\";\n\n/*\n * update address book (cart) form handling\n * onSubmit we need to add accountId which is not in context\n */\n\nAutoForm.hooks({\n  addressBookEditForm: {\n    onSubmit: function (insertDoc) {\n      const that = this;\n      this.event.preventDefault();\n      const addressBook = $(this.template.firstNode).closest(\".address-book\");\n\n      Meteor.call(\"accounts/validateAddress\", insertDoc, function (err, res) {\n        if (res.validated) {\n          Meteor.call(\"accounts/addressBookUpdate\", insertDoc, (error, result) => {\n            if (error) {\n              Alerts.toast(i18next.t(\"addressBookEdit.somethingWentWrong\", { err: error.message }), \"error\");\n              this.done(new Error(error));\n              return false;\n            }\n            if (result) {\n              that.done();\n\n              // Show the grid\n              addressBook.trigger($.Event(\"showMainView\"));\n            }\n          });\n        } else {\n          if (res.validatedAddress) {\n            setValidatedAddress(res);\n            Alerts.inline(\"Made changes to your address based upon validation. Please ensure this is correct\", \"warning\", {\n              placement: \"addressBookEdit\",\n              i18nKey: \"addressBookAdd.validatedAddress\"\n            });\n          }\n          if (res.formErrors) {\n            for (const error of res.formErrors) {\n              Alerts.inline(error.details, \"error\", {\n                placement: \"addressBookEdit\"\n              });\n            }\n          }\n          that.done(\"Validation failed\"); // renable Save and Continue button\n        }\n      });\n    }\n  }\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/modules/accounts/templates/addressBook/edit/edit.js.map","sourceFileName":"/client/modules/accounts/templates/addressBook/edit/edit.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"edit"},"ignored":false,"code":"var i18next = void 0;\nmodule.importSync(\"/client/api\", {\n  i18next: function (v) {\n    i18next = v;\n  }\n}, 0);\nvar Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\nvar setValidatedAddress = void 0;\nmodule.importSync(\"../add/add\", {\n  setValidatedAddress: function (v) {\n    setValidatedAddress = v;\n  }\n}, 2);\n/*\n * update address book (cart) form handling\n * onSubmit we need to add accountId which is not in context\n */AutoForm.hooks({\n  addressBookEditForm: {\n    onSubmit: function (insertDoc) {\n      var that = this;\n      this.event.preventDefault();\n      var addressBook = $(this.template.firstNode).closest(\".address-book\");\n      Meteor.call(\"accounts/validateAddress\", insertDoc, function (err, res) {\n        var _this = this;\n\n        if (res.validated) {\n          Meteor.call(\"accounts/addressBookUpdate\", insertDoc, function (error, result) {\n            if (error) {\n              Alerts.toast(i18next.t(\"addressBookEdit.somethingWentWrong\", {\n                err: error.message\n              }), \"error\");\n\n              _this.done(new Error(error));\n\n              return false;\n            }\n\n            if (result) {\n              that.done(); // Show the grid\n\n              addressBook.trigger($.Event(\"showMainView\"));\n            }\n          });\n        } else {\n          if (res.validatedAddress) {\n            setValidatedAddress(res);\n            Alerts.inline(\"Made changes to your address based upon validation. Please ensure this is correct\", \"warning\", {\n              placement: \"addressBookEdit\",\n              i18nKey: \"addressBookAdd.validatedAddress\"\n            });\n          }\n\n          if (res.formErrors) {\n            for (var _iterator = res.formErrors, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n              var _ref;\n\n              if (_isArray) {\n                if (_i >= _iterator.length) break;\n                _ref = _iterator[_i++];\n              } else {\n                _i = _iterator.next();\n                if (_i.done) break;\n                _ref = _i.value;\n              }\n\n              var error = _ref;\n              Alerts.inline(error.details, \"error\", {\n                placement: \"addressBookEdit\"\n              });\n            }\n          }\n\n          that.done(\"Validation failed\"); // renable Save and Continue button\n        }\n      });\n    }\n  }\n});","map":{"version":3,"sources":["/client/modules/accounts/templates/addressBook/edit/edit.js"],"names":["i18next","Meteor","setValidatedAddress","AutoForm","hooks","addressBookEditForm","onSubmit","insertDoc","that","event","preventDefault","addressBook","$","template","firstNode","closest","call","err","res","validated","error","result","Alerts","toast","t","message","done","Error","trigger","Event","validatedAddress","inline","placement","i18nKey","formErrors","details"],"mappings":"AAAA,IAAS;AAAT,OAAwB,WAAxB;;;;;;;;;;;;;;;;GACA,AAAS,AAAc,A,AACvB,AAAS,AAA2B,AAEpC;AAKA,AAAS,AAAM,AACb,AAAqB,AACnB,AAAU,AAAU,AAAW;;;YACvB;AACN,AAAK,AAAM;AACL,wBAAc,AAAE,AAAK,WAA3B,AAAoB,AAAE,AAAc,AAAW,AAAQ,AAEvD;UAAA,AAAO,AAAK,OAAZ,AAAwC,AAAW,AAAU,AAAK,AAAK,AACrE;WAAI,AAAI,MAAR,AAAmB,AACjB;UAAA,AAAO,AAAK,8BAAZ,AAA0C,mBAA1C,AAAqD,AAAC,AAAO,AAAW,AACtE,AAAI,AAAO,AACT;kBAAA,AAAO,AAAM,AAAQ,AAAE,sDAAV,AAAgD;AAAE;;gBAAK,WAAP,AAAa;AAA1E,AAAa,iBAAyE,KAAtF,kEACA;gBAAK,OAAL,AAAU,AAAI,AAAM,AACpB;qBAAA,AAAO;;kBACR;;;;qBACD;AAAA,AAAI,AAAQ,AACV;;gBAAA,AAAK,QADK,AAGV;mBACA,AAAY,AAAQ,AAAE,AAAM,AAC7B,QAXH,AAYC;;0CAbH,AAcC;AAAM,AACL;AAAA,AAAI,AAAI,AAAkB,AACxB;eAAA,AAAoB,AACpB;kBAAA,AAAO,AAAO,kBAAd,AAAmG,AAAW,AAC5G;AAAW,gCADiG,AAE5G;mBAAS;yBAEZ;uBACD;AALE,AAA8G;AAKhH,AAAI,AAAI,AAAY,AAClB;;cAAK,IAAL,AAAW,YAAX,AAAoB,AAAI,AAAY,AAClC;AAAO,iCAAa,IAApB,AAA6B;AAA7B,AAAsC,AACpC;;;;;;;;;;;kBADF,AAAc;qBACD;2BAEd,AACF;AAJG,AAAsC;;AAK1C;;eAAA,AAAK,KAfA,AAeL,AAAU,sBAAsB,AACjC;AACF;AAhCD,AAiCD;AAxCL,AAAe,AACQ;AAGjB,AACA;AAFA,AAAa,AACb,CADA","file":"/client/modules/accounts/templates/addressBook/edit/edit.js.map","sourcesContent":["import { i18next } from \"/client/api\";\nimport { Meteor } from \"meteor/meteor\";\nimport { setValidatedAddress } from \"../add/add\";\n\n/*\n * update address book (cart) form handling\n * onSubmit we need to add accountId which is not in context\n */\n\nAutoForm.hooks({\n  addressBookEditForm: {\n    onSubmit: function (insertDoc) {\n      const that = this;\n      this.event.preventDefault();\n      const addressBook = $(this.template.firstNode).closest(\".address-book\");\n\n      Meteor.call(\"accounts/validateAddress\", insertDoc, function (err, res) {\n        if (res.validated) {\n          Meteor.call(\"accounts/addressBookUpdate\", insertDoc, (error, result) => {\n            if (error) {\n              Alerts.toast(i18next.t(\"addressBookEdit.somethingWentWrong\", { err: error.message }), \"error\");\n              this.done(new Error(error));\n              return false;\n            }\n            if (result) {\n              that.done();\n\n              // Show the grid\n              addressBook.trigger($.Event(\"showMainView\"));\n            }\n          });\n        } else {\n          if (res.validatedAddress) {\n            setValidatedAddress(res);\n            Alerts.inline(\"Made changes to your address based upon validation. Please ensure this is correct\", \"warning\", {\n              placement: \"addressBookEdit\",\n              i18nKey: \"addressBookAdd.validatedAddress\"\n            });\n          }\n          if (res.formErrors) {\n            for (const error of res.formErrors) {\n              Alerts.inline(error.details, \"error\", {\n                placement: \"addressBookEdit\"\n              });\n            }\n          }\n          that.done(\"Validation failed\"); // renable Save and Continue button\n        }\n      });\n    }\n  }\n});\n"]},"hash":"88e25ad8ddb2057a16d354db6ebca1cdad2eec9a"}
