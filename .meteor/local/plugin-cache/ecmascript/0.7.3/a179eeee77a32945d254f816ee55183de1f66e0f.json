{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/check","imported":["Match","check"],"specifiers":[{"kind":"named","imported":"Match","local":"Match"},{"kind":"named","imported":"check","local":"check"}]},{"source":"meteor/tmeasday:publish-counts","imported":["Counts"],"specifiers":[{"kind":"named","imported":"Counts","local":"Counts"}]},{"source":"../../lib/collections","imported":["Discounts"],"specifiers":[{"kind":"named","imported":"Discounts","local":"Discounts"}]},{"source":"/server/api","imported":["Reaction"],"specifiers":[{"kind":"named","imported":"Reaction","local":"Reaction"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/core/discounts/server/publications/discounts.js","filenameRelative":"/imports/plugins/core/discounts/server/publications/discounts.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/core/discounts/server/publications/discounts.js"],"names":["Meteor","Match","check","Counts","Discounts","Reaction","publish","query","options","Optional","Object","shopId","getShopId","ready","select","find"],"mappings":"AAAA,IAAS;AAAT,OAAuB,WAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GACA,AAAgB,AAAa,A,AAApB,AACT,AAAS,AAAc,AACvB,AAAS,AAAiB,AAC1B,AAAS,AAAgB,AAEzB;AAMA,AAAO,AAAQ,AAAa,AAAU,AAAO,AAAS,AACpD,AAAM,AAAO,AAAM,AAAS;;;;;UACtB,QAAN,AAAe,AAAM,aAAN,AAAe,UAFsB,AAEpD,AAAe,AAEf;8BACA;QAAM,SAAS,MAAS,SAAxB,AAAe,AACf,UAAA,AAAI,AAAC,AAAU,AAAO,AACpB;;MAAO,AAAK,SAAZ,AAAO,SACR;;;gBAED;AAVoD,AAUpD,AAAM,AAAS,AAAS,AACxB,AACA,AACA;;4BACA;AAdoD,AAcpD,AAAO,AAAS,AAChB,AAEA;AACA;;0BACA,AAAO,AAAQ,AAAM,AAAmB,AAAU,AAChD,AACA,AAGF;AAxBF,AAwBE,AAAO,AAAU,AACf,AACA,AAEH;;;;;CA1BC","file":"/imports/plugins/core/discounts/server/publications/discounts.js.map","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport { Match, check } from \"meteor/check\";\nimport { Counts } from \"meteor/tmeasday:publish-counts\";\nimport { Discounts } from \"../../lib/collections\";\nimport { Reaction } from \"/server/api\";\n\n/**\n * Discounts\n * @type {Publication}\n * @param {Object} query\n * @param {Object} options\n */\nMeteor.publish(\"Discounts\", function (query, options) {\n  check(query, Match.Optional(Object));\n  check(options, Match.Optional(Object));\n\n  // check shopId\n  const shopId = Reaction.getShopId();\n  if (!shopId && query) {\n    return this.ready();\n  }\n\n  const select = query || {};\n  // append shopId to query\n  // applicable discounts are published\n  // for this users cartId;\n  select.shopId = shopId;\n  // select.cartId = cartId;\n\n  // appends a count to the collection\n  // we're doing this for use with griddleTable\n  Counts.publish(this, \"discounts-count\", Discounts.find(\n    select,\n    options\n  ));\n\n  return Discounts.find(\n    select,\n    options\n  );\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/core/discounts/server/publications/discounts.js.map","sourceFileName":"/imports/plugins/core/discounts/server/publications/discounts.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"discounts"},"ignored":false,"code":"var Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Match = void 0,\n    check = void 0;\nmodule.importSync(\"meteor/check\", {\n  Match: function (v) {\n    Match = v;\n  },\n  check: function (v) {\n    check = v;\n  }\n}, 1);\nvar Counts = void 0;\nmodule.importSync(\"meteor/tmeasday:publish-counts\", {\n  Counts: function (v) {\n    Counts = v;\n  }\n}, 2);\nvar Discounts = void 0;\nmodule.importSync(\"../../lib/collections\", {\n  Discounts: function (v) {\n    Discounts = v;\n  }\n}, 3);\nvar Reaction = void 0;\nmodule.importSync(\"/server/api\", {\n  Reaction: function (v) {\n    Reaction = v;\n  }\n}, 4);\n/**\n * Discounts\n * @type {Publication}\n * @param {Object} query\n * @param {Object} options\n */Meteor.publish(\"Discounts\", function (query, options) {\n  check(query, Match.Optional(Object));\n  check(options, Match.Optional(Object)); // check shopId\n\n  var shopId = Reaction.getShopId();\n\n  if (!shopId && query) {\n    return this.ready();\n  }\n\n  var select = query || {}; // append shopId to query\n  // applicable discounts are published\n  // for this users cartId;\n\n  select.shopId = shopId; // select.cartId = cartId;\n  // appends a count to the collection\n  // we're doing this for use with griddleTable\n\n  Counts.publish(this, \"discounts-count\", Discounts.find(select, options));\n  return Discounts.find(select, options);\n});","map":{"version":3,"sources":["/imports/plugins/core/discounts/server/publications/discounts.js"],"names":["Meteor","Match","check","Counts","Discounts","Reaction","publish","query","options","Optional","Object","shopId","getShopId","ready","select","find"],"mappings":"AAAA,IAAS;AAAT,OAAuB,WAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GACA,AAAgB,AAAa,A,AAApB,AACT,AAAS,AAAc,AACvB,AAAS,AAAiB,AAC1B,AAAS,AAAgB,AAEzB;AAMA,AAAO,AAAQ,AAAa,AAAU,AAAO,AAAS,AACpD,AAAM,AAAO,AAAM,AAAS;;;;;UACtB,QAAN,AAAe,AAAM,aAAN,AAAe,UAFsB,AAEpD,AAAe,AAEf;8BACA;QAAM,SAAS,MAAS,SAAxB,AAAe,AACf,UAAA,AAAI,AAAC,AAAU,AAAO,AACpB;;MAAO,AAAK,SAAZ,AAAO,SACR;;;gBAED;AAVoD,AAUpD,AAAM,AAAS,AAAS,AACxB,AACA,AACA;;4BACA;AAdoD,AAcpD,AAAO,AAAS,AAChB,AAEA;AACA;;0BACA,AAAO,AAAQ,AAAM,AAAmB,AAAU,AAChD,AACA,AAGF;AAxBF,AAwBE,AAAO,AAAU,AACf,AACA,AAEH;;;;;CA1BC","file":"/imports/plugins/core/discounts/server/publications/discounts.js.map","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport { Match, check } from \"meteor/check\";\nimport { Counts } from \"meteor/tmeasday:publish-counts\";\nimport { Discounts } from \"../../lib/collections\";\nimport { Reaction } from \"/server/api\";\n\n/**\n * Discounts\n * @type {Publication}\n * @param {Object} query\n * @param {Object} options\n */\nMeteor.publish(\"Discounts\", function (query, options) {\n  check(query, Match.Optional(Object));\n  check(options, Match.Optional(Object));\n\n  // check shopId\n  const shopId = Reaction.getShopId();\n  if (!shopId && query) {\n    return this.ready();\n  }\n\n  const select = query || {};\n  // append shopId to query\n  // applicable discounts are published\n  // for this users cartId;\n  select.shopId = shopId;\n  // select.cartId = cartId;\n\n  // appends a count to the collection\n  // we're doing this for use with griddleTable\n  Counts.publish(this, \"discounts-count\", Discounts.find(\n    select,\n    options\n  ));\n\n  return Discounts.find(\n    select,\n    options\n  );\n});\n"]},"hash":"a179eeee77a32945d254f816ee55183de1f66e0f"}
