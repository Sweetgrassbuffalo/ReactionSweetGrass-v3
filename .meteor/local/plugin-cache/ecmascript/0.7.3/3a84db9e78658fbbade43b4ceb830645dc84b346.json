{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"lodash/includes","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_includes"}]},{"source":"bunyan","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"bunyan"}]},{"source":"bunyan-format","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"bunyanFormat"}]},{"source":"bunyan-loggly","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Bunyan2Loggly"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/server/api/logger.js","filenameRelative":"/server/api/logger.js","inputSourceMap":{"version":3,"sources":["/server/api/logger.js"],"names":["bunyan","bunyanFormat","Bunyan2Loggly","levels","level","process","env","REACTION_LOG_LEVEL","Meteor","settings","outputMode","toUpperCase","streams","stream","logglyToken","LOGGLY_TOKEN","logglySubdomain","LOGGLY_SUBDOMAIN","logglyStream","type","LOGGLY_LOG_LEVEL","token","subdomain","push","Logger","createLogger","name"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;GAAA,AAAO,AAAY,AACnB,AAAO,AAAkB,AACzB,AAAO,AAAmB,AAG1B;AACA;AACM,A,AAAN,AAAe,AAAC,AAAS,AAAS,AAAQ,AAAQ,AAAS,AAE3D;yDACA,AAAI,AAAQ,AAAQ,AAAI,AAAsB,AAAO,AAAS,AAAsB,UACpF,AAAI,AAAa;;AAEjB,IAAQ,QAAM,YAAd,AAAQ;iBAER,AAAI,AAAC,AAAS,AAAQ,AAAQ;AAC5B,QAAQ,MAAR,AACD;;+BAED;AAAI,UAAJ,AAAc,AAAS,AACrB;A,AAAA,AAAa,AACd,AAED;;;eACA;AAAM,AAAU,AAAC,AACf,EACA,AAAQ,AAAa;;;AAAE;AAFT,AAAC,AAEP;AAFV,A,AAKA;AACA,AAAM,AAAc,AAAQ,AAAI;;AAJT,IAKvB,AAAM,AAAkB,AAAQ,AAAI;;;AAEpC,AAAI,IAAe,0BAAnB,IAAoC,AAClC,AAAM,AAAe;;AACnB,IADmB,AACb,gCACN;MAAO,AAAQ;UACP,AAAI,AAAc,AACxB;WAAO,YADiB,oBAExB;gBAAW;aALf,AAAqB;iBAQrB,AAAQ,AAAK,A,AAAb,AACD,AAED;AARY,AAAkB;AAHP,AAEZ,AAAY,AAAoB,AACvC;;AASJ,AAAM,AAAS,AAAO,AAAa,EAAA,AACjC,AAAM;;;AACN;AAFF,QAKA;AAAA,AAAe;AALA,AAAoB","file":"/server/api/logger.js.map","sourcesContent":["import bunyan from \"bunyan\";\nimport bunyanFormat from \"bunyan-format\";\nimport Bunyan2Loggly from \"bunyan-loggly\";\nimport { includes } from \"lodash\";\n\n// configure bunyan logging module for reaction server\n// See: https://github.com/trentm/node-bunyan#levels\nconst levels = [\"FATAL\", \"ERROR\", \"WARN\", \"INFO\", \"DEBUG\", \"TRACE\"];\n\n// set stdout log level\nlet level = process.env.REACTION_LOG_LEVEL || Meteor.settings.REACTION_LOG_LEVEL || \"INFO\";\nlet outputMode = \"short\";\n\nlevel = level.toUpperCase();\n\nif (!includes(levels, level)) {\n  level = \"INFO\";\n}\n\nif (level === \"TRACE\") {\n  outputMode = \"json\";\n}\n\n// default console config (stdout)\nconst streams = [{\n  level,\n  stream: bunyanFormat({ outputMode })\n}];\n\n// Loggly config (only used if configured)\nconst logglyToken = process.env.LOGGLY_TOKEN;\nconst logglySubdomain = process.env.LOGGLY_SUBDOMAIN;\n\nif (logglyToken && logglySubdomain) {\n  const logglyStream = {\n    type: \"raw\",\n    level: process.env.LOGGLY_LOG_LEVEL || \"DEBUG\",\n    stream: new Bunyan2Loggly({\n      token: logglyToken,\n      subdomain: logglySubdomain\n    })\n  };\n  streams.push(logglyStream);\n}\n\n// create default logger instance\nconst Logger = bunyan.createLogger({\n  name: \"Reaction\",\n  streams\n});\n\nexport default Logger;\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/server/api/logger.js.map","sourceFileName":"/server/api/logger.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"logger"},"ignored":false,"code":"var _includes = void 0;\n\nmodule.importSync(\"lodash/includes\", {\n  \"default\": function (v) {\n    _includes = v;\n  }\n}, 0);\nvar bunyan = void 0;\nmodule.importSync(\"bunyan\", {\n  \"default\": function (v) {\n    bunyan = v;\n  }\n}, 1);\nvar bunyanFormat = void 0;\nmodule.importSync(\"bunyan-format\", {\n  \"default\": function (v) {\n    bunyanFormat = v;\n  }\n}, 2);\nvar Bunyan2Loggly = void 0;\nmodule.importSync(\"bunyan-loggly\", {\n  \"default\": function (v) {\n    Bunyan2Loggly = v;\n  }\n}, 3);\n// configure bunyan logging module for reaction server\n// See: https://github.com/trentm/node-bunyan#levels\nvar levels = [\"FATAL\", \"ERROR\", \"WARN\", \"INFO\", \"DEBUG\", \"TRACE\"]; // set stdout log level\n\nvar level = process.env.REACTION_LOG_LEVEL || Meteor.settings.REACTION_LOG_LEVEL || \"INFO\";\nvar outputMode = \"short\";\nlevel = level.toUpperCase();\n\nif (!_includes(levels, level)) {\n  level = \"INFO\";\n}\n\nif (level === \"TRACE\") {\n  outputMode = \"json\";\n} // default console config (stdout)\n\n\nvar streams = [{\n  level: level,\n  stream: bunyanFormat({\n    outputMode: outputMode\n  })\n}]; // Loggly config (only used if configured)\n\nvar logglyToken = process.env.LOGGLY_TOKEN;\nvar logglySubdomain = process.env.LOGGLY_SUBDOMAIN;\n\nif (logglyToken && logglySubdomain) {\n  var logglyStream = {\n    type: \"raw\",\n    level: process.env.LOGGLY_LOG_LEVEL || \"DEBUG\",\n    stream: new Bunyan2Loggly({\n      token: logglyToken,\n      subdomain: logglySubdomain\n    })\n  };\n  streams.push(logglyStream);\n} // create default logger instance\n\n\nvar Logger = bunyan.createLogger({\n  name: \"Reaction\",\n  streams: streams\n});\nmodule.export(\"default\", exports.default = Logger);","map":{"version":3,"sources":["/server/api/logger.js"],"names":["bunyan","bunyanFormat","Bunyan2Loggly","levels","level","process","env","REACTION_LOG_LEVEL","Meteor","settings","outputMode","toUpperCase","streams","stream","logglyToken","LOGGLY_TOKEN","logglySubdomain","LOGGLY_SUBDOMAIN","logglyStream","type","LOGGLY_LOG_LEVEL","token","subdomain","push","Logger","createLogger","name"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;GAAA,AAAO,AAAY,AACnB,AAAO,AAAkB,AACzB,AAAO,AAAmB,AAG1B;AACA;AACM,A,AAAN,AAAe,AAAC,AAAS,AAAS,AAAQ,AAAQ,AAAS,AAE3D;yDACA,AAAI,AAAQ,AAAQ,AAAI,AAAsB,AAAO,AAAS,AAAsB,UACpF,AAAI,AAAa;;AAEjB,IAAQ,QAAM,YAAd,AAAQ;iBAER,AAAI,AAAC,AAAS,AAAQ,AAAQ;AAC5B,QAAQ,MAAR,AACD;;+BAED;AAAI,UAAJ,AAAc,AAAS,AACrB;A,AAAA,AAAa,AACd,AAED;;;eACA;AAAM,AAAU,AAAC,AACf,EACA,AAAQ,AAAa;;;AAAE;AAFT,AAAC,AAEP;AAFV,A,AAKA;AACA,AAAM,AAAc,AAAQ,AAAI;;AAJT,IAKvB,AAAM,AAAkB,AAAQ,AAAI;;;AAEpC,AAAI,IAAe,0BAAnB,IAAoC,AAClC,AAAM,AAAe;;AACnB,IADmB,AACb,gCACN;MAAO,AAAQ;UACP,AAAI,AAAc,AACxB;WAAO,YADiB,oBAExB;gBAAW;aALf,AAAqB;iBAQrB,AAAQ,AAAK,A,AAAb,AACD,AAED;AARY,AAAkB;AAHP,AAEZ,AAAY,AAAoB,AACvC;;AASJ,AAAM,AAAS,AAAO,AAAa,EAAA,AACjC,AAAM;;;AACN;AAFF,QAKA;AAAA,AAAe;AALA,AAAoB","file":"/server/api/logger.js.map","sourcesContent":["import bunyan from \"bunyan\";\nimport bunyanFormat from \"bunyan-format\";\nimport Bunyan2Loggly from \"bunyan-loggly\";\nimport { includes } from \"lodash\";\n\n// configure bunyan logging module for reaction server\n// See: https://github.com/trentm/node-bunyan#levels\nconst levels = [\"FATAL\", \"ERROR\", \"WARN\", \"INFO\", \"DEBUG\", \"TRACE\"];\n\n// set stdout log level\nlet level = process.env.REACTION_LOG_LEVEL || Meteor.settings.REACTION_LOG_LEVEL || \"INFO\";\nlet outputMode = \"short\";\n\nlevel = level.toUpperCase();\n\nif (!includes(levels, level)) {\n  level = \"INFO\";\n}\n\nif (level === \"TRACE\") {\n  outputMode = \"json\";\n}\n\n// default console config (stdout)\nconst streams = [{\n  level,\n  stream: bunyanFormat({ outputMode })\n}];\n\n// Loggly config (only used if configured)\nconst logglyToken = process.env.LOGGLY_TOKEN;\nconst logglySubdomain = process.env.LOGGLY_SUBDOMAIN;\n\nif (logglyToken && logglySubdomain) {\n  const logglyStream = {\n    type: \"raw\",\n    level: process.env.LOGGLY_LOG_LEVEL || \"DEBUG\",\n    stream: new Bunyan2Loggly({\n      token: logglyToken,\n      subdomain: logglySubdomain\n    })\n  };\n  streams.push(logglyStream);\n}\n\n// create default logger instance\nconst Logger = bunyan.createLogger({\n  name: \"Reaction\",\n  streams\n});\n\nexport default Logger;\n"]},"hash":"3a84db9e78658fbbade43b4ceb830645dc84b346"}
