{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"lodash/isArray","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_isArray"}]},{"source":"meteor/reactive-dict","imported":["ReactiveDict"],"specifiers":[{"kind":"named","imported":"ReactiveDict","local":"ReactiveDict"}]},{"source":"/client/api","imported":["Reaction"],"specifiers":[{"kind":"named","imported":"Reaction","local":"Reaction"}]},{"source":"/client/modules/logger","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Logger"}]},{"source":"/lib/api","imported":["ReactionProduct"],"specifiers":[{"kind":"named","imported":"ReactionProduct","local":"ReactionProduct"}]},{"source":"/lib/collections","imported":["Media","Products"],"specifiers":[{"kind":"named","imported":"Media","local":"Media"},{"kind":"named","imported":"Products","local":"Products"}]},{"source":"/imports/plugins/core/revisions/lib/api","imported":["isRevisionControlEnabled"],"specifiers":[{"kind":"named","imported":"isRevisionControlEnabled","local":"isRevisionControlEnabled"}]},{"source":"/lib/api/products","imported":["applyProductRevision"],"specifiers":[{"kind":"named","imported":"applyProductRevision","local":"applyProductRevision"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/included/product-variant/client/templates/products/productSettings/productSettings.js","filenameRelative":"/imports/plugins/included/product-variant/client/templates/products/productSettings/productSettings.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/included/product-variant/client/templates/products/productSettings/productSettings.js"],"names":["ReactiveDict","Reaction","Logger","ReactionProduct","Media","Products","isRevisionControlEnabled","applyProductRevision","updateVariantProductField","variants","field","value","map","variant","Meteor","call","_id","Template","productSettings","onCreated","state","setDefault","products","productIds","autorun","currentData","product","find","$in","set","helpers","isVisible","instance","get","Array","isArray","length","hasSelectedProducts","itemWeightActive","weight","tag","getTag","positions","currentWeight","productSettingsListItem","pdpPath","handle","__published","Router","pathFor","hash","displayPrice","getProductPriceRange","range","media","findOne","sort","uploadedAt","FS","File","listItemActiveClassName","productId","current","params","equals","events","ancestors","publishProduct","cloneProduct","archiveProduct","event","preventDefault","$","currentTarget","data","updatedAt","Date","error","warn","Error"],"mappings":"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","file":"/imports/plugins/included/product-variant/client/templates/products/productSettings/productSettings.js.map","sourcesContent":["import _ from \"lodash\";\nimport { ReactiveDict } from \"meteor/reactive-dict\";\nimport { Reaction } from \"/client/api\";\nimport Logger from \"/client/modules/logger\";\nimport { ReactionProduct } from \"/lib/api\";\nimport { Media, Products } from \"/lib/collections\";\nimport { isRevisionControlEnabled } from \"/imports/plugins/core/revisions/lib/api\";\nimport { applyProductRevision } from \"/lib/api/products\";\n\nfunction updateVariantProductField(variants, field, value) {\n  return variants.map(variant => {\n    Meteor.call(\"products/updateProductField\", variant._id, field, value);\n  });\n}\n\nTemplate.productSettings.onCreated(function () {\n  this.state = new ReactiveDict();\n  this.state.setDefault({\n    products: [],\n    productIds: []\n  });\n\n  this.autorun(() => {\n    const currentData = Template.currentData();\n\n    if (_.isArray(currentData.products)) {\n      const productIds = currentData.products.map((product) => {\n        return product._id;\n      });\n\n      const products = Products.find({\n        _id: {\n          $in: productIds\n        }\n      }).map((product) => {\n        return applyProductRevision(product);\n      });\n\n      this.state.set(\"productIds\", productIds);\n      this.state.set(\"products\", products);\n    }\n  });\n});\n\nTemplate.productSettings.helpers({\n  isVisible() {\n    const instance = Template.instance();\n    const products = instance.state.get(\"products\") || [];\n\n    // Use the first selected product to determin status of bulk, isVisible button\n    if (Array.isArray(products) && products.length) {\n      return products[0].isVisible;\n    }\n\n    return false;\n  },\n  hasSelectedProducts() {\n    return this.products && this.products.length > 0;\n  },\n  itemWeightActive: function (weight) {\n    const instance = Template.instance();\n    const products = instance.state.get(\"products\");\n    const tag = ReactionProduct.getTag();\n\n    for (const product of products) {\n      const positions = product.positions && product.positions[tag] || {};\n      const currentWeight = positions.weight || 0;\n      if (currentWeight === weight) {\n        return \"active\";\n      }\n    }\n    return \"\";\n  }\n});\n\nTemplate.productSettingsListItem.helpers({\n  pdpPath() {\n    const product = this;\n\n    if (product) {\n      let handle = product.handle;\n\n      if (product.__published) {\n        handle = product.__published.handle;\n      }\n\n      return Reaction.Router.pathFor(\"product\", {\n        hash: {\n          handle\n        }\n      });\n    }\n\n    return \"/\";\n  },\n\n  displayPrice() {\n    if (this._id) {\n      return ReactionProduct.getProductPriceRange(this._id).range;\n    }\n    return null;\n  },\n\n  media() {\n    const media = Media.findOne({\n      \"metadata.productId\": this._id,\n      \"metadata.priority\": 0,\n      \"metadata.toGrid\": 1\n    }, { sort: { uploadedAt: 1 } });\n\n    return media instanceof FS.File ? media : false;\n  },\n\n  listItemActiveClassName(productId) {\n    const handle = Reaction.Router.current().params.handle;\n\n    if (ReactionProduct.equals(\"productId\", productId) && handle) {\n      return \"active\";\n    }\n\n    return \"\";\n  }\n});\n\n/**\n * productExtendedControls events\n */\n\nTemplate.productSettings.events({\n  \"click [data-event-action=publishProduct]\": function () {\n    const instance = Template.instance();\n    const products = instance.state.get(\"products\") || [];\n\n    if (isRevisionControlEnabled()) {\n      for (const product of products) {\n        // Update the visibility using the first selected product to determine the proper\n        // visibility toggle. This is to ensure that all selected products will become visible or not visible\n        // at the same time so it's not confusing.\n        Meteor.call(\"products/updateProductField\", product._id, \"isVisible\", !products[0].isVisible);\n        // update the variants visibility\n        const variants = Products.find({\n          ancestors: {\n            $in: [product._id]\n          }\n        });\n        updateVariantProductField(variants, \"isVisible\", !products[0].isVisible);\n      }\n    } else {\n      // The legacy behavior will bulk toggle visibilty of each product seperatly.\n      //\n      // Example:\n      // If you selected 10 products, and 5 were visible and 5 were not visible, and then\n      // clicked the visibility button, 5 products would switched from not visible to visible, and the other 5\n      // would be swiched from visible to not visible.\n      ReactionProduct.publishProduct(products);\n    }\n  },\n  \"click [data-event-action=cloneProduct]\": function () {\n    ReactionProduct.cloneProduct(this.products);\n  },\n  \"click [data-event-action=archiveProduct]\": function () {\n    ReactionProduct.archiveProduct(this.products);\n  },\n  \"click [data-event-action=changeProductWeight]\": function (event) {\n    event.preventDefault();\n    const tag = ReactionProduct.getTag();\n    for (const product of this.products) {\n      const weight = Template.instance().$(event.currentTarget).data(\"event-data\") || 0;\n      const positions = {\n        weight: weight,\n        updatedAt: new Date()\n      };\n      /* eslint no-loop-func: 1 */\n      //\n      //\n      Meteor.call(\"products/updateProductPosition\", product._id, positions, tag,\n        (error) => { // eslint-disable-line no-loop-func\n          if (error) {\n            Logger.warn(error);\n            throw new Meteor.Error(403, error);\n          }\n        }\n      );\n    }\n  }\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/included/product-variant/client/templates/products/productSettings/productSettings.js.map","sourceFileName":"/imports/plugins/included/product-variant/client/templates/products/productSettings/productSettings.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"productSettings"},"ignored":false,"code":"var _isArray = void 0;\n\nmodule.importSync(\"lodash/isArray\", {\n  \"default\": function (v) {\n    _isArray = v;\n  }\n}, 0);\nvar ReactiveDict = void 0;\nmodule.importSync(\"meteor/reactive-dict\", {\n  ReactiveDict: function (v) {\n    ReactiveDict = v;\n  }\n}, 1);\nvar Reaction = void 0;\nmodule.importSync(\"/client/api\", {\n  Reaction: function (v) {\n    Reaction = v;\n  }\n}, 2);\nvar Logger = void 0;\nmodule.importSync(\"/client/modules/logger\", {\n  \"default\": function (v) {\n    Logger = v;\n  }\n}, 3);\nvar ReactionProduct = void 0;\nmodule.importSync(\"/lib/api\", {\n  ReactionProduct: function (v) {\n    ReactionProduct = v;\n  }\n}, 4);\nvar Media = void 0,\n    Products = void 0;\nmodule.importSync(\"/lib/collections\", {\n  Media: function (v) {\n    Media = v;\n  },\n  Products: function (v) {\n    Products = v;\n  }\n}, 5);\nvar isRevisionControlEnabled = void 0;\nmodule.importSync(\"/imports/plugins/core/revisions/lib/api\", {\n  isRevisionControlEnabled: function (v) {\n    isRevisionControlEnabled = v;\n  }\n}, 6);\nvar applyProductRevision = void 0;\nmodule.importSync(\"/lib/api/products\", {\n  applyProductRevision: function (v) {\n    applyProductRevision = v;\n  }\n}, 7);\n\nfunction updateVariantProductField(variants, field, value) {\n  return variants.map(function (variant) {\n    Meteor.call(\"products/updateProductField\", variant._id, field, value);\n  });\n}\n\nTemplate.productSettings.onCreated(function () {\n  var _this = this;\n\n  this.state = new ReactiveDict();\n  this.state.setDefault({\n    products: [],\n    productIds: []\n  });\n  this.autorun(function () {\n    var currentData = Template.currentData();\n\n    if (_isArray(currentData.products)) {\n      var productIds = currentData.products.map(function (product) {\n        return product._id;\n      });\n      var products = Products.find({\n        _id: {\n          $in: productIds\n        }\n      }).map(function (product) {\n        return applyProductRevision(product);\n      });\n\n      _this.state.set(\"productIds\", productIds);\n\n      _this.state.set(\"products\", products);\n    }\n  });\n});\nTemplate.productSettings.helpers({\n  isVisible: function () {\n    var instance = Template.instance();\n    var products = instance.state.get(\"products\") || []; // Use the first selected product to determin status of bulk, isVisible button\n\n    if (Array.isArray(products) && products.length) {\n      return products[0].isVisible;\n    }\n\n    return false;\n  },\n  hasSelectedProducts: function () {\n    return this.products && this.products.length > 0;\n  },\n  itemWeightActive: function (weight) {\n    var instance = Template.instance();\n    var products = instance.state.get(\"products\");\n    var tag = ReactionProduct.getTag();\n\n    for (var _iterator = products, _isArray2 = Array.isArray(_iterator), _i = 0, _iterator = _isArray2 ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray2) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var product = _ref;\n      var positions = product.positions && product.positions[tag] || {};\n      var currentWeight = positions.weight || 0;\n\n      if (currentWeight === weight) {\n        return \"active\";\n      }\n    }\n\n    return \"\";\n  }\n});\nTemplate.productSettingsListItem.helpers({\n  pdpPath: function () {\n    var product = this;\n\n    if (product) {\n      var handle = product.handle;\n\n      if (product.__published) {\n        handle = product.__published.handle;\n      }\n\n      return Reaction.Router.pathFor(\"product\", {\n        hash: {\n          handle: handle\n        }\n      });\n    }\n\n    return \"/\";\n  },\n  displayPrice: function () {\n    if (this._id) {\n      return ReactionProduct.getProductPriceRange(this._id).range;\n    }\n\n    return null;\n  },\n  media: function () {\n    var media = Media.findOne({\n      \"metadata.productId\": this._id,\n      \"metadata.priority\": 0,\n      \"metadata.toGrid\": 1\n    }, {\n      sort: {\n        uploadedAt: 1\n      }\n    });\n    return media instanceof FS.File ? media : false;\n  },\n  listItemActiveClassName: function (productId) {\n    var handle = Reaction.Router.current().params.handle;\n\n    if (ReactionProduct.equals(\"productId\", productId) && handle) {\n      return \"active\";\n    }\n\n    return \"\";\n  }\n}); /**\n     * productExtendedControls events\n     */\nTemplate.productSettings.events({\n  \"click [data-event-action=publishProduct]\": function () {\n    var instance = Template.instance();\n    var products = instance.state.get(\"products\") || [];\n\n    if (isRevisionControlEnabled()) {\n      for (var _iterator2 = products, _isArray3 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray3 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray3) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var product = _ref2;\n        // Update the visibility using the first selected product to determine the proper\n        // visibility toggle. This is to ensure that all selected products will become visible or not visible\n        // at the same time so it's not confusing.\n        Meteor.call(\"products/updateProductField\", product._id, \"isVisible\", !products[0].isVisible); // update the variants visibility\n\n        var variants = Products.find({\n          ancestors: {\n            $in: [product._id]\n          }\n        });\n        updateVariantProductField(variants, \"isVisible\", !products[0].isVisible);\n      }\n    } else {\n      // The legacy behavior will bulk toggle visibilty of each product seperatly.\n      //\n      // Example:\n      // If you selected 10 products, and 5 were visible and 5 were not visible, and then\n      // clicked the visibility button, 5 products would switched from not visible to visible, and the other 5\n      // would be swiched from visible to not visible.\n      ReactionProduct.publishProduct(products);\n    }\n  },\n  \"click [data-event-action=cloneProduct]\": function () {\n    ReactionProduct.cloneProduct(this.products);\n  },\n  \"click [data-event-action=archiveProduct]\": function () {\n    ReactionProduct.archiveProduct(this.products);\n  },\n  \"click [data-event-action=changeProductWeight]\": function (event) {\n    event.preventDefault();\n    var tag = ReactionProduct.getTag();\n\n    for (var _iterator3 = this.products, _isArray4 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray4 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n      var _ref3;\n\n      if (_isArray4) {\n        if (_i3 >= _iterator3.length) break;\n        _ref3 = _iterator3[_i3++];\n      } else {\n        _i3 = _iterator3.next();\n        if (_i3.done) break;\n        _ref3 = _i3.value;\n      }\n\n      var product = _ref3;\n      var weight = Template.instance().$(event.currentTarget).data(\"event-data\") || 0;\n      var positions = {\n        weight: weight,\n        updatedAt: new Date()\n      }; /* eslint no-loop-func: 1 */ //\n      //\n\n      Meteor.call(\"products/updateProductPosition\", product._id, positions, tag, function (error) {\n        // eslint-disable-line no-loop-func\n        if (error) {\n          Logger.warn(error);\n          throw new Meteor.Error(403, error);\n        }\n      });\n    }\n  }\n});","map":{"version":3,"sources":["/imports/plugins/included/product-variant/client/templates/products/productSettings/productSettings.js"],"names":["ReactiveDict","Reaction","Logger","ReactionProduct","Media","Products","isRevisionControlEnabled","applyProductRevision","updateVariantProductField","variants","field","value","map","variant","Meteor","call","_id","Template","productSettings","onCreated","state","setDefault","products","productIds","autorun","currentData","product","find","$in","set","helpers","isVisible","instance","get","Array","isArray","length","hasSelectedProducts","itemWeightActive","weight","tag","getTag","positions","currentWeight","productSettingsListItem","pdpPath","handle","__published","Router","pathFor","hash","displayPrice","getProductPriceRange","range","media","findOne","sort","uploadedAt","FS","File","listItemActiveClassName","productId","current","params","equals","events","ancestors","publishProduct","cloneProduct","archiveProduct","event","preventDefault","$","currentTarget","data","updatedAt","Date","error","warn","Error"],"mappings":"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","file":"/imports/plugins/included/product-variant/client/templates/products/productSettings/productSettings.js.map","sourcesContent":["import _ from \"lodash\";\nimport { ReactiveDict } from \"meteor/reactive-dict\";\nimport { Reaction } from \"/client/api\";\nimport Logger from \"/client/modules/logger\";\nimport { ReactionProduct } from \"/lib/api\";\nimport { Media, Products } from \"/lib/collections\";\nimport { isRevisionControlEnabled } from \"/imports/plugins/core/revisions/lib/api\";\nimport { applyProductRevision } from \"/lib/api/products\";\n\nfunction updateVariantProductField(variants, field, value) {\n  return variants.map(variant => {\n    Meteor.call(\"products/updateProductField\", variant._id, field, value);\n  });\n}\n\nTemplate.productSettings.onCreated(function () {\n  this.state = new ReactiveDict();\n  this.state.setDefault({\n    products: [],\n    productIds: []\n  });\n\n  this.autorun(() => {\n    const currentData = Template.currentData();\n\n    if (_.isArray(currentData.products)) {\n      const productIds = currentData.products.map((product) => {\n        return product._id;\n      });\n\n      const products = Products.find({\n        _id: {\n          $in: productIds\n        }\n      }).map((product) => {\n        return applyProductRevision(product);\n      });\n\n      this.state.set(\"productIds\", productIds);\n      this.state.set(\"products\", products);\n    }\n  });\n});\n\nTemplate.productSettings.helpers({\n  isVisible() {\n    const instance = Template.instance();\n    const products = instance.state.get(\"products\") || [];\n\n    // Use the first selected product to determin status of bulk, isVisible button\n    if (Array.isArray(products) && products.length) {\n      return products[0].isVisible;\n    }\n\n    return false;\n  },\n  hasSelectedProducts() {\n    return this.products && this.products.length > 0;\n  },\n  itemWeightActive: function (weight) {\n    const instance = Template.instance();\n    const products = instance.state.get(\"products\");\n    const tag = ReactionProduct.getTag();\n\n    for (const product of products) {\n      const positions = product.positions && product.positions[tag] || {};\n      const currentWeight = positions.weight || 0;\n      if (currentWeight === weight) {\n        return \"active\";\n      }\n    }\n    return \"\";\n  }\n});\n\nTemplate.productSettingsListItem.helpers({\n  pdpPath() {\n    const product = this;\n\n    if (product) {\n      let handle = product.handle;\n\n      if (product.__published) {\n        handle = product.__published.handle;\n      }\n\n      return Reaction.Router.pathFor(\"product\", {\n        hash: {\n          handle\n        }\n      });\n    }\n\n    return \"/\";\n  },\n\n  displayPrice() {\n    if (this._id) {\n      return ReactionProduct.getProductPriceRange(this._id).range;\n    }\n    return null;\n  },\n\n  media() {\n    const media = Media.findOne({\n      \"metadata.productId\": this._id,\n      \"metadata.priority\": 0,\n      \"metadata.toGrid\": 1\n    }, { sort: { uploadedAt: 1 } });\n\n    return media instanceof FS.File ? media : false;\n  },\n\n  listItemActiveClassName(productId) {\n    const handle = Reaction.Router.current().params.handle;\n\n    if (ReactionProduct.equals(\"productId\", productId) && handle) {\n      return \"active\";\n    }\n\n    return \"\";\n  }\n});\n\n/**\n * productExtendedControls events\n */\n\nTemplate.productSettings.events({\n  \"click [data-event-action=publishProduct]\": function () {\n    const instance = Template.instance();\n    const products = instance.state.get(\"products\") || [];\n\n    if (isRevisionControlEnabled()) {\n      for (const product of products) {\n        // Update the visibility using the first selected product to determine the proper\n        // visibility toggle. This is to ensure that all selected products will become visible or not visible\n        // at the same time so it's not confusing.\n        Meteor.call(\"products/updateProductField\", product._id, \"isVisible\", !products[0].isVisible);\n        // update the variants visibility\n        const variants = Products.find({\n          ancestors: {\n            $in: [product._id]\n          }\n        });\n        updateVariantProductField(variants, \"isVisible\", !products[0].isVisible);\n      }\n    } else {\n      // The legacy behavior will bulk toggle visibilty of each product seperatly.\n      //\n      // Example:\n      // If you selected 10 products, and 5 were visible and 5 were not visible, and then\n      // clicked the visibility button, 5 products would switched from not visible to visible, and the other 5\n      // would be swiched from visible to not visible.\n      ReactionProduct.publishProduct(products);\n    }\n  },\n  \"click [data-event-action=cloneProduct]\": function () {\n    ReactionProduct.cloneProduct(this.products);\n  },\n  \"click [data-event-action=archiveProduct]\": function () {\n    ReactionProduct.archiveProduct(this.products);\n  },\n  \"click [data-event-action=changeProductWeight]\": function (event) {\n    event.preventDefault();\n    const tag = ReactionProduct.getTag();\n    for (const product of this.products) {\n      const weight = Template.instance().$(event.currentTarget).data(\"event-data\") || 0;\n      const positions = {\n        weight: weight,\n        updatedAt: new Date()\n      };\n      /* eslint no-loop-func: 1 */\n      //\n      //\n      Meteor.call(\"products/updateProductPosition\", product._id, positions, tag,\n        (error) => { // eslint-disable-line no-loop-func\n          if (error) {\n            Logger.warn(error);\n            throw new Meteor.Error(403, error);\n          }\n        }\n      );\n    }\n  }\n});\n"]},"hash":"efd5f884fc1811c3e9340dfff9c66e9f65d6ad8a"}
