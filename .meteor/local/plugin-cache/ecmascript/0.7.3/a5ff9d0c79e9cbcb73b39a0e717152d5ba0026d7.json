{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"lodash/includes","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_includes"}]},{"source":"lodash/filter","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_filter"}]},{"source":"lodash/find","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_find"}]},{"source":"/client/modules/logger","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Logger"}]},{"source":"../","imported":["Reaction"],"specifiers":[{"kind":"named","imported":"Reaction","local":"Reaction"}]},{"source":"/lib/collections","imported":["*"],"specifiers":[{"kind":"namespace","local":"Collections"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/templating","imported":["Template"],"specifiers":[{"kind":"named","imported":"Template","local":"Template"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/client/modules/core/helpers/layout.js","filenameRelative":"/client/modules/core/helpers/layout.js","inputSourceMap":{"version":3,"sources":["/client/modules/core/helpers/layout.js"],"names":["Logger","Reaction","Collections","Meteor","Template","registerHelper","options","shopId","hash","getShopId","Shop","Shops","findOne","reactionTemplates","layout","workflow","layoutConfigCollection","currentId","collection","error","currentData","_id","currentCart","Cart","userId","id","workflowTargetCollection","currentCollection","currentStatus","status","currentCollectionWorkflow","packages","Packages","find","$elemMatch","forEach","reactionPackage","layoutWorkflows","audience","undefined","defaultRoles","hasPermission","template","push"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GACA,AAAO,AAAY,AACnB,AAAS,AAAgB,AACzB,AAAO,AAAK,AAAiB,AAC7B,AAAS,AAAc;AACvB,A,AAAA,AAAS,AAAgB,AAEzB;;;;;;;;;YAUA,AAAS,eAAT,AAAwB,oBAAoB,UAAA,AAAU;MAC9C,SAAS,QAAA,AAAQ,KAAR,AAAa,UAAU,SADuB,AAC7D,AAAsC,AAAS,AAC/C,aACA;;MAAM,OAAO,YAAA,AAAY,MAAZ,AAAkB,QAA/B,AAAa,AAA0B,AACvC;MAAM,oBAJuD,AAI7D,AAA0B,AAC1B,IACA;;MAAI,eAAqB,KAAZ,AAAoB;cACrB,QAAA,AAAQ,KAAR,AAAa,YADzB,AAAa,AAAoB,AACI,AAGrC;AAHE,GADW,AAAO;;MAIpB,AAAI,AACJ;MAX6D,AAW7D,AAAI,AAEJ,AACA,AACA;AACA;AAAA,AAAI,AAAQ,AACV;;cADF,AACE,AAAyB,AAAO,AAAc,AAC/C;AAAM,kDACL;SAAA,AAAO,AAAM,AACb;iBApB2D,AAoB3D,AAAyB,AAC1B;AAED,6BACA;GAxB6D,AAC7D,CAwBA;AAAA,AAAI,AAAS,AAAiB,AAAS,AAAc,AAAK,AACxD;;;eAAY,AAAS,iBAAT,AAAuB,SAAnC,mBADF,AAEC;AAAM,uCACL;SAAM,AAAc,AAAY,AAAK,AAAQ,AAC3C;QAAQ,AAAO;AADjB,qBA5B2D,AA+B3D,AAAY,AAAe,AAAY,AACxC;AAJqB,AAAyB,KACnC;AAIZ,2CACA;;AACA;;;cAAY,QAAA,AAAQ,KAAR,AAAa,MAnCoC,AAmC7D,AAA+B,AAE/B,AACA,WACA;AAAA,AAAM,AAA2B,AAAY,AAC7C;;MAAM,AAAoB,uCAA1B,AAA0B,AAAyB,AAAQ,AAC3D;MAAM,AAAgB,oBAAA,AAAkB,AAAS,yBAAjD,QACA;MAAM,gBAA4B,2BAAlC,AAAkC,AAAkB,AAAS,AAC7D;MAAM,AAAW,AAAY,4BAAZ,AAAqB,AAAK,2BACzC;MAAQ;;0BADO,AAA0B,AAIzC,AAAQ;AAJiC,AACjC,AACM,AAAQ;AA7CqC,AA2C7D,AAOA,YACA,AAAS,AAAQ,AAAU,AAAiB,AAC1C;AAPE,MAMwC,AAC1C,AAAM,AAAkB,AAAS,AAAgB,AAAQ,AAAQ,AACjE;;;kEACA,OAAA,AAAK,AAAU,AAAiB,AAC9B;;;;AACA;;;;;;;;;AAAA,AAAI,AAAO,AAAa,AAAW,AACjC;UAAO,OAAP,AAAkB,aAAK,WAHK,AAG5B,AAAkB,AAAqB,AACxC;AAED;AACA,QAAA,AAAI,AAAS,AAAc,AAAO,AAAW,AAC3C;;;mDACA;AACA;AAAA,AAAI,AAAC,AAAO,AAAQ,AAClB;;AAEA;AACA;AACA;AALkB,AAKlB,AAAO,AAAS,AAAW,AAA2B,AAAO,AAC7D;sEACA,WAAA,AAAI,AAAO,AAAa,AAAe,AACrC;;cAAO,OAAP,AAAgB,aAAhB,eARgB,AASjB;AACD;WARA,CASA;;;4BAAA,AAAkB,KAAlB,AAAuB,AACxB;AACF;AACF;AACF;AA5BD,AA6BA;SAAA,AAAO,AACR;AAjFD,CAAA","file":"/client/modules/core/helpers/layout.js.map","sourcesContent":["import _ from \"lodash\";\nimport Logger from \"/client/modules/logger\";\nimport { Reaction } from \"../\";\nimport * as Collections from \"/lib/collections\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Template } from \"meteor/templating\";\n\n/**\n * reactionTemplate helper\n * use the reactionTemplate helper when you are using templates defined\n * as workflow templates in the package registery.Layout\n * use \"collection\" on the layout to indicate a workflow source\n *\n * @summary reactionTemplate provides templates as defined in ReactionRegistry.Layout\n * @param {Object} options - workflow defaults to \"coreLayout/coreWorkflow\"\n * @returns {Array} returns an array with labels, templates that match workflow\n */\nTemplate.registerHelper(\"reactionTemplate\", function (options) {\n  const shopId = options.hash.shopId || Reaction.getShopId();\n  // get shop info, defaults to current\n  const Shop = Collections.Shops.findOne(shopId);\n  const reactionTemplates = [];\n  // fetch collection from shop.layout configuration\n  let layout = _.find(Shop.layout, {\n    workflow: options.hash.workflow || \"coreWorkflow\"\n  });\n\n  let layoutConfigCollection;\n  let currentId;\n\n  // determine if workflow has a target\n  // collection defined. This is where we'll\n  // fetch/save workflow changes.\n  if (layout) {\n    layoutConfigCollection = layout.collection || \"Cart\";\n  } else {\n    Logger.error(\"Shop Layout Undefined\");\n    layoutConfigCollection = \"Cart\";\n  }\n\n  // if we've got an id, we'll use it with the layout's collection\n  // and get the current status of the workflowTargetCollection\n  if (Template.currentData() && Template.currentData()._id) {\n    currentId = Template.currentData()._id;\n  } else {\n    const currentCart = Collections.Cart.findOne({\n      userId: Meteor.userId()\n    });\n    currentId = currentCart && currentCart._id;\n  }\n  // we'll get current cart status by default, as the most common case\n  // TODO: expand query options\n  currentId = options.hash.id || currentId;\n\n  // The currentCollection must have workflow schema attached.\n  // layoutConfigCollection is the collection defined in Shops.workflow\n  const workflowTargetCollection = Collections[layoutConfigCollection];\n  const currentCollection = workflowTargetCollection.findOne(currentId);\n  const currentStatus = currentCollection.workflow.status;\n  const currentCollectionWorkflow = currentCollection.workflow.workflow;\n  const packages = Collections.Packages.find({\n    layout: {\n      $elemMatch: options.hash\n    },\n    shopId: shopId\n  });\n\n  //  we can have multiple packages contributing to the layout / workflow\n  packages.forEach(function (reactionPackage) {\n    const layoutWorkflows = _.filter(reactionPackage.layout, options.hash);\n    // check the packages for layout workflow templates\n    for (layout of layoutWorkflows) {\n      // audience is layout permissions\n      if (layout.audience === undefined) {\n        layout.audience = Shop.defaultRoles || \"owner\";\n      }\n\n      // check permissions so you don't have to on template.\n      if (Reaction.hasPermission(layout.audience)) {\n        // todo: review this hack to remove layout\n        // from the workflow\n        if (!layout.layout) {\n          // default is boolean false status\n          // true = we've completed this workflow\n          // false = pending (future) step\n          // <template> = in process (current) step.\n          layout.status = _.includes(currentCollectionWorkflow, layout.template);\n          // if the current template is already the current status\n          if (layout.template === currentStatus) {\n            layout.status = currentStatus;\n          }\n          // push to reactionTemplates\n          reactionTemplates.push(layout);\n        }\n      }\n    }\n  });\n  return reactionTemplates;\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/modules/core/helpers/layout.js.map","sourceFileName":"/client/modules/core/helpers/layout.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"layout"},"ignored":false,"code":"var _includes = void 0;\n\nmodule.importSync(\"lodash/includes\", {\n  \"default\": function (v) {\n    _includes = v;\n  }\n}, 0);\n\nvar _filter = void 0;\n\nmodule.importSync(\"lodash/filter\", {\n  \"default\": function (v) {\n    _filter = v;\n  }\n}, 1);\n\nvar _find = void 0;\n\nmodule.importSync(\"lodash/find\", {\n  \"default\": function (v) {\n    _find = v;\n  }\n}, 2);\nvar Logger = void 0;\nmodule.importSync(\"/client/modules/logger\", {\n  \"default\": function (v) {\n    Logger = v;\n  }\n}, 3);\nvar Reaction = void 0;\nmodule.importSync(\"../\", {\n  Reaction: function (v) {\n    Reaction = v;\n  }\n}, 4);\nvar Collections = Object.create(null);\nmodule.importSync(\"/lib/collections\", {\n  \"*\": function (v, n) {\n    Collections[n] = v;\n  }\n}, 5);\nvar Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 6);\nvar Template = void 0;\nmodule.importSync(\"meteor/templating\", {\n  Template: function (v) {\n    Template = v;\n  }\n}, 7);\n/**\n * reactionTemplate helper\n * use the reactionTemplate helper when you are using templates defined\n * as workflow templates in the package registery.Layout\n * use \"collection\" on the layout to indicate a workflow source\n *\n * @summary reactionTemplate provides templates as defined in ReactionRegistry.Layout\n * @param {Object} options - workflow defaults to \"coreLayout/coreWorkflow\"\n * @returns {Array} returns an array with labels, templates that match workflow\n */Template.registerHelper(\"reactionTemplate\", function (options) {\n  var shopId = options.hash.shopId || Reaction.getShopId(); // get shop info, defaults to current\n\n  var Shop = Collections.Shops.findOne(shopId);\n  var reactionTemplates = []; // fetch collection from shop.layout configuration\n\n  var layout = _find(Shop.layout, {\n    workflow: options.hash.workflow || \"coreWorkflow\"\n  });\n\n  var layoutConfigCollection = void 0;\n  var currentId = void 0; // determine if workflow has a target\n  // collection defined. This is where we'll\n  // fetch/save workflow changes.\n\n  if (layout) {\n    layoutConfigCollection = layout.collection || \"Cart\";\n  } else {\n    Logger.error(\"Shop Layout Undefined\");\n    layoutConfigCollection = \"Cart\";\n  } // if we've got an id, we'll use it with the layout's collection\n  // and get the current status of the workflowTargetCollection\n\n\n  if (Template.currentData() && Template.currentData()._id) {\n    currentId = Template.currentData()._id;\n  } else {\n    var currentCart = Collections.Cart.findOne({\n      userId: Meteor.userId()\n    });\n    currentId = currentCart && currentCart._id;\n  } // we'll get current cart status by default, as the most common case\n  // TODO: expand query options\n\n\n  currentId = options.hash.id || currentId; // The currentCollection must have workflow schema attached.\n  // layoutConfigCollection is the collection defined in Shops.workflow\n\n  var workflowTargetCollection = Collections[layoutConfigCollection];\n  var currentCollection = workflowTargetCollection.findOne(currentId);\n  var currentStatus = currentCollection.workflow.status;\n  var currentCollectionWorkflow = currentCollection.workflow.workflow;\n  var packages = Collections.Packages.find({\n    layout: {\n      $elemMatch: options.hash\n    },\n    shopId: shopId\n  }); //  we can have multiple packages contributing to the layout / workflow\n\n  packages.forEach(function (reactionPackage) {\n    var layoutWorkflows = _filter(reactionPackage.layout, options.hash); // check the packages for layout workflow templates\n\n\n    for (var _iterator = layoutWorkflows, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        layout = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        layout = _i.value;\n      }\n\n      // audience is layout permissions\n      if (layout.audience === undefined) {\n        layout.audience = Shop.defaultRoles || \"owner\";\n      } // check permissions so you don't have to on template.\n\n\n      if (Reaction.hasPermission(layout.audience)) {\n        // todo: review this hack to remove layout\n        // from the workflow\n        if (!layout.layout) {\n          // default is boolean false status\n          // true = we've completed this workflow\n          // false = pending (future) step\n          // <template> = in process (current) step.\n          layout.status = _includes(currentCollectionWorkflow, layout.template); // if the current template is already the current status\n\n          if (layout.template === currentStatus) {\n            layout.status = currentStatus;\n          } // push to reactionTemplates\n\n\n          reactionTemplates.push(layout);\n        }\n      }\n    }\n  });\n  return reactionTemplates;\n});","map":{"version":3,"sources":["/client/modules/core/helpers/layout.js"],"names":["Logger","Reaction","Collections","Meteor","Template","registerHelper","options","shopId","hash","getShopId","Shop","Shops","findOne","reactionTemplates","layout","workflow","layoutConfigCollection","currentId","collection","error","currentData","_id","currentCart","Cart","userId","id","workflowTargetCollection","currentCollection","currentStatus","status","currentCollectionWorkflow","packages","Packages","find","$elemMatch","forEach","reactionPackage","layoutWorkflows","audience","undefined","defaultRoles","hasPermission","template","push"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GACA,AAAO,AAAY,AACnB,AAAS,AAAgB,AACzB,AAAO,AAAK,AAAiB,AAC7B,AAAS,AAAc;AACvB,A,AAAA,AAAS,AAAgB,AAEzB;;;;;;;;;YAUA,AAAS,eAAT,AAAwB,oBAAoB,UAAA,AAAU;MAC9C,SAAS,QAAA,AAAQ,KAAR,AAAa,UAAU,SADuB,AAC7D,AAAsC,AAAS,AAC/C,aACA;;MAAM,OAAO,YAAA,AAAY,MAAZ,AAAkB,QAA/B,AAAa,AAA0B,AACvC;MAAM,oBAJuD,AAI7D,AAA0B,AAC1B,IACA;;MAAI,eAAqB,KAAZ,AAAoB;cACrB,QAAA,AAAQ,KAAR,AAAa,YADzB,AAAa,AAAoB,AACI,AAGrC;AAHE,GADW,AAAO;;MAIpB,AAAI,AACJ;MAX6D,AAW7D,AAAI,AAEJ,AACA,AACA;AACA;AAAA,AAAI,AAAQ,AACV;;cADF,AACE,AAAyB,AAAO,AAAc,AAC/C;AAAM,kDACL;SAAA,AAAO,AAAM,AACb;iBApB2D,AAoB3D,AAAyB,AAC1B;AAED,6BACA;GAxB6D,AAC7D,CAwBA;AAAA,AAAI,AAAS,AAAiB,AAAS,AAAc,AAAK,AACxD;;;eAAY,AAAS,iBAAT,AAAuB,SAAnC,mBADF,AAEC;AAAM,uCACL;SAAM,AAAc,AAAY,AAAK,AAAQ,AAC3C;QAAQ,AAAO;AADjB,qBA5B2D,AA+B3D,AAAY,AAAe,AAAY,AACxC;AAJqB,AAAyB,KACnC;AAIZ,2CACA;;AACA;;;cAAY,QAAA,AAAQ,KAAR,AAAa,MAnCoC,AAmC7D,AAA+B,AAE/B,AACA,WACA;AAAA,AAAM,AAA2B,AAAY,AAC7C;;MAAM,AAAoB,uCAA1B,AAA0B,AAAyB,AAAQ,AAC3D;MAAM,AAAgB,oBAAA,AAAkB,AAAS,yBAAjD,QACA;MAAM,gBAA4B,2BAAlC,AAAkC,AAAkB,AAAS,AAC7D;MAAM,AAAW,AAAY,4BAAZ,AAAqB,AAAK,2BACzC;MAAQ;;0BADO,AAA0B,AAIzC,AAAQ;AAJiC,AACjC,AACM,AAAQ;AA7CqC,AA2C7D,AAOA,YACA,AAAS,AAAQ,AAAU,AAAiB,AAC1C;AAPE,MAMwC,AAC1C,AAAM,AAAkB,AAAS,AAAgB,AAAQ,AAAQ,AACjE;;;kEACA,OAAA,AAAK,AAAU,AAAiB,AAC9B;;;;AACA;;;;;;;;;AAAA,AAAI,AAAO,AAAa,AAAW,AACjC;UAAO,OAAP,AAAkB,aAAK,WAHK,AAG5B,AAAkB,AAAqB,AACxC;AAED;AACA,QAAA,AAAI,AAAS,AAAc,AAAO,AAAW,AAC3C;;;mDACA;AACA;AAAA,AAAI,AAAC,AAAO,AAAQ,AAClB;;AAEA;AACA;AACA;AALkB,AAKlB,AAAO,AAAS,AAAW,AAA2B,AAAO,AAC7D;sEACA,WAAA,AAAI,AAAO,AAAa,AAAe,AACrC;;cAAO,OAAP,AAAgB,aAAhB,eARgB,AASjB;AACD;WARA,CASA;;;4BAAA,AAAkB,KAAlB,AAAuB,AACxB;AACF;AACF;AACF;AA5BD,AA6BA;SAAA,AAAO,AACR;AAjFD,CAAA","file":"/client/modules/core/helpers/layout.js.map","sourcesContent":["import _ from \"lodash\";\nimport Logger from \"/client/modules/logger\";\nimport { Reaction } from \"../\";\nimport * as Collections from \"/lib/collections\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Template } from \"meteor/templating\";\n\n/**\n * reactionTemplate helper\n * use the reactionTemplate helper when you are using templates defined\n * as workflow templates in the package registery.Layout\n * use \"collection\" on the layout to indicate a workflow source\n *\n * @summary reactionTemplate provides templates as defined in ReactionRegistry.Layout\n * @param {Object} options - workflow defaults to \"coreLayout/coreWorkflow\"\n * @returns {Array} returns an array with labels, templates that match workflow\n */\nTemplate.registerHelper(\"reactionTemplate\", function (options) {\n  const shopId = options.hash.shopId || Reaction.getShopId();\n  // get shop info, defaults to current\n  const Shop = Collections.Shops.findOne(shopId);\n  const reactionTemplates = [];\n  // fetch collection from shop.layout configuration\n  let layout = _.find(Shop.layout, {\n    workflow: options.hash.workflow || \"coreWorkflow\"\n  });\n\n  let layoutConfigCollection;\n  let currentId;\n\n  // determine if workflow has a target\n  // collection defined. This is where we'll\n  // fetch/save workflow changes.\n  if (layout) {\n    layoutConfigCollection = layout.collection || \"Cart\";\n  } else {\n    Logger.error(\"Shop Layout Undefined\");\n    layoutConfigCollection = \"Cart\";\n  }\n\n  // if we've got an id, we'll use it with the layout's collection\n  // and get the current status of the workflowTargetCollection\n  if (Template.currentData() && Template.currentData()._id) {\n    currentId = Template.currentData()._id;\n  } else {\n    const currentCart = Collections.Cart.findOne({\n      userId: Meteor.userId()\n    });\n    currentId = currentCart && currentCart._id;\n  }\n  // we'll get current cart status by default, as the most common case\n  // TODO: expand query options\n  currentId = options.hash.id || currentId;\n\n  // The currentCollection must have workflow schema attached.\n  // layoutConfigCollection is the collection defined in Shops.workflow\n  const workflowTargetCollection = Collections[layoutConfigCollection];\n  const currentCollection = workflowTargetCollection.findOne(currentId);\n  const currentStatus = currentCollection.workflow.status;\n  const currentCollectionWorkflow = currentCollection.workflow.workflow;\n  const packages = Collections.Packages.find({\n    layout: {\n      $elemMatch: options.hash\n    },\n    shopId: shopId\n  });\n\n  //  we can have multiple packages contributing to the layout / workflow\n  packages.forEach(function (reactionPackage) {\n    const layoutWorkflows = _.filter(reactionPackage.layout, options.hash);\n    // check the packages for layout workflow templates\n    for (layout of layoutWorkflows) {\n      // audience is layout permissions\n      if (layout.audience === undefined) {\n        layout.audience = Shop.defaultRoles || \"owner\";\n      }\n\n      // check permissions so you don't have to on template.\n      if (Reaction.hasPermission(layout.audience)) {\n        // todo: review this hack to remove layout\n        // from the workflow\n        if (!layout.layout) {\n          // default is boolean false status\n          // true = we've completed this workflow\n          // false = pending (future) step\n          // <template> = in process (current) step.\n          layout.status = _.includes(currentCollectionWorkflow, layout.template);\n          // if the current template is already the current status\n          if (layout.template === currentStatus) {\n            layout.status = currentStatus;\n          }\n          // push to reactionTemplates\n          reactionTemplates.push(layout);\n        }\n      }\n    }\n  });\n  return reactionTemplates;\n});\n"]},"hash":"a5ff9d0c79e9cbcb73b39a0e717152d5ba0026d7"}
