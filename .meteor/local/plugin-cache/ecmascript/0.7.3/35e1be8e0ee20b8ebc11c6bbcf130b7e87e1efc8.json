{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/templating","imported":["Template"],"specifiers":[{"kind":"named","imported":"Template","local":"Template"}]},{"source":"/lib/collections","imported":["Media"],"specifiers":[{"kind":"named","imported":"Media","local":"Media"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/core/orders/client/templates/list/items.js","filenameRelative":"/imports/plugins/core/orders/client/templates/list/items.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/core/orders/client/templates/list/items.js"],"names":["Template","Media","ordersListItems","helpers","media","variantImage","findOne","productId","variants","_id","productImage","items","order","instance","data","combinedItems","orderItem","foundItem","find","combinedItem","quantity","push"],"mappings":"AAAA,IAAS;AAAT,OAAyB,WAAzB;;;;;;;;;;GACA,AAAsB,A,AAAtB,AAAS,AAET;AAIA,AAAS,AAAgB,AAAQ,AAC/B,AAAO,AAAY;;;YACX,gBAAe,AAAM;;6BAEE;AAHZ,AACjB,AAIA;0CACA,AAAI,AAAc,AAChB;AANmB,AAAc,AAEX,AAAc,KAAd,GAItB,AAAO,AACR;;AARgB,AASjB;;AACA,KATmC,AACX,AAAK,AAC3B,CAOI,AAAe,AAAM,AAAQ,AACjC;;;6BAA2B;AAD7B,iCAGA;AAHqB,AAAc,KACX;;QAExB,AAAI,cAAc,AAChB;aAAA,AAAO,AACR;;;WACD;AAjB6B,AAiB7B,AAAO,AACR;;AAED,AAAQ,oCACN;QAAM,gBAAN,AAAM,AAAE,AAAU,AAAS,AAAW,AACtC;;QAAM;AAAN,AAAsB;AAKpB;AAAK,YAAM,0BAAX,AAAqC,6BACnC;AACA;cAAM,AAAY,uBAAA,AAAc,AAAK,AAAC,AAAiB,AACrD;oEACA;AAAA,AAAI,AAAa,AAAU,AACzB,AAAO,AAAa,AAAS,AAAQ,AAAU,AAAS,AACzD;;;AAED,AAAO,AACR,SATH,AAAwB,AAAM,GAAO,AAEnC,AAAkB,AASlB;;uBACA;AAAI,oBAAJ,AAAe,AACb;eADF,AACE,AAAU,AACX;AAAM,AACL;6BACA;AAAA,AAAc,AAAK,AACpB;;;AAnBL;AAAA,AAAI,AAAO;AACT;;;;;;;;;;;;;;AAmBC;;aAED;AAAA,AAAO,AACR;;WAED;AAlDJ,AAAiC,AAkD7B,AAAO,AACR;AAjDsB,AAAc,AACjC,CADF","file":"/imports/plugins/core/orders/client/templates/list/items.js.map","sourcesContent":["import { Template } from \"meteor/templating\";\nimport { Media } from \"/lib/collections\";\n\n/**\n * ordersListItems helpers\n *\n */\nTemplate.ordersListItems.helpers({\n  media: function () {\n    const variantImage = Media.findOne({\n      \"metadata.productId\": this.productId,\n      \"metadata.variantId\": this.variants._id\n    });\n    // variant image\n    if (variantImage) {\n      return variantImage;\n    }\n    // find a default image\n    const productImage = Media.findOne({\n      \"metadata.productId\": this.productId\n    });\n    if (productImage) {\n      return productImage;\n    }\n    return false;\n  },\n\n  items() {\n    const { order } = Template.instance().data;\n    const combinedItems = [];\n\n\n    if (order) {\n      // Lopp through all items in the order. The items are split into indivital items\n      for (const orderItem of order.items) {\n        // Find an exising item in the combinedItems array\n        const foundItem = combinedItems.find((combinedItem) => {\n          // If and item variant exists, then we return true\n          if (combinedItem.variants) {\n            return combinedItem.variants._id === orderItem.variants._id;\n          }\n\n          return false;\n        });\n\n        // Increment the quantity count for the duplicate product variants\n        if (foundItem) {\n          foundItem.quantity++;\n        } else {\n          // Otherwise push the unique item into the combinedItems array\n          combinedItems.push(orderItem);\n        }\n      }\n\n      return combinedItems;\n    }\n\n    return false;\n  }\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/core/orders/client/templates/list/items.js.map","sourceFileName":"/imports/plugins/core/orders/client/templates/list/items.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"items"},"ignored":false,"code":"var Template = void 0;\nmodule.importSync(\"meteor/templating\", {\n  Template: function (v) {\n    Template = v;\n  }\n}, 0);\nvar Media = void 0;\nmodule.importSync(\"/lib/collections\", {\n  Media: function (v) {\n    Media = v;\n  }\n}, 1);\n/**\n * ordersListItems helpers\n *\n */Template.ordersListItems.helpers({\n  media: function () {\n    var variantImage = Media.findOne({\n      \"metadata.productId\": this.productId,\n      \"metadata.variantId\": this.variants._id\n    }); // variant image\n\n    if (variantImage) {\n      return variantImage;\n    } // find a default image\n\n\n    var productImage = Media.findOne({\n      \"metadata.productId\": this.productId\n    });\n\n    if (productImage) {\n      return productImage;\n    }\n\n    return false;\n  },\n  items: function () {\n    var order = Template.instance().data.order;\n    var combinedItems = [];\n\n    if (order) {\n      var _loop = function (orderItem) {\n        // Find an exising item in the combinedItems array\n        var foundItem = combinedItems.find(function (combinedItem) {\n          // If and item variant exists, then we return true\n          if (combinedItem.variants) {\n            return combinedItem.variants._id === orderItem.variants._id;\n          }\n\n          return false;\n        }); // Increment the quantity count for the duplicate product variants\n\n        if (foundItem) {\n          foundItem.quantity++;\n        } else {\n          // Otherwise push the unique item into the combinedItems array\n          combinedItems.push(orderItem);\n        }\n      };\n\n      // Lopp through all items in the order. The items are split into indivital items\n      for (var _iterator = order.items, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var orderItem = _ref;\n\n        _loop(orderItem);\n      }\n\n      return combinedItems;\n    }\n\n    return false;\n  }\n});","map":{"version":3,"sources":["/imports/plugins/core/orders/client/templates/list/items.js"],"names":["Template","Media","ordersListItems","helpers","media","variantImage","findOne","productId","variants","_id","productImage","items","order","instance","data","combinedItems","orderItem","foundItem","find","combinedItem","quantity","push"],"mappings":"AAAA,IAAS;AAAT,OAAyB,WAAzB;;;;;;;;;;GACA,AAAsB,A,AAAtB,AAAS,AAET;AAIA,AAAS,AAAgB,AAAQ,AAC/B,AAAO,AAAY;;;YACX,gBAAe,AAAM;;6BAEE;AAHZ,AACjB,AAIA;0CACA,AAAI,AAAc,AAChB;AANmB,AAAc,AAEX,AAAc,KAAd,GAItB,AAAO,AACR;;AARgB,AASjB;;AACA,KATmC,AACX,AAAK,AAC3B,CAOI,AAAe,AAAM,AAAQ,AACjC;;;6BAA2B;AAD7B,iCAGA;AAHqB,AAAc,KACX;;QAExB,AAAI,cAAc,AAChB;aAAA,AAAO,AACR;;;WACD;AAjB6B,AAiB7B,AAAO,AACR;;AAED,AAAQ,oCACN;QAAM,gBAAN,AAAM,AAAE,AAAU,AAAS,AAAW,AACtC;;QAAM;AAAN,AAAsB;AAKpB;AAAK,YAAM,0BAAX,AAAqC,6BACnC;AACA;cAAM,AAAY,uBAAA,AAAc,AAAK,AAAC,AAAiB,AACrD;oEACA;AAAA,AAAI,AAAa,AAAU,AACzB,AAAO,AAAa,AAAS,AAAQ,AAAU,AAAS,AACzD;;;AAED,AAAO,AACR,SATH,AAAwB,AAAM,GAAO,AAEnC,AAAkB,AASlB;;uBACA;AAAI,oBAAJ,AAAe,AACb;eADF,AACE,AAAU,AACX;AAAM,AACL;6BACA;AAAA,AAAc,AAAK,AACpB;;;AAnBL;AAAA,AAAI,AAAO;AACT;;;;;;;;;;;;;;AAmBC;;aAED;AAAA,AAAO,AACR;;WAED;AAlDJ,AAAiC,AAkD7B,AAAO,AACR;AAjDsB,AAAc,AACjC,CADF","file":"/imports/plugins/core/orders/client/templates/list/items.js.map","sourcesContent":["import { Template } from \"meteor/templating\";\nimport { Media } from \"/lib/collections\";\n\n/**\n * ordersListItems helpers\n *\n */\nTemplate.ordersListItems.helpers({\n  media: function () {\n    const variantImage = Media.findOne({\n      \"metadata.productId\": this.productId,\n      \"metadata.variantId\": this.variants._id\n    });\n    // variant image\n    if (variantImage) {\n      return variantImage;\n    }\n    // find a default image\n    const productImage = Media.findOne({\n      \"metadata.productId\": this.productId\n    });\n    if (productImage) {\n      return productImage;\n    }\n    return false;\n  },\n\n  items() {\n    const { order } = Template.instance().data;\n    const combinedItems = [];\n\n\n    if (order) {\n      // Lopp through all items in the order. The items are split into indivital items\n      for (const orderItem of order.items) {\n        // Find an exising item in the combinedItems array\n        const foundItem = combinedItems.find((combinedItem) => {\n          // If and item variant exists, then we return true\n          if (combinedItem.variants) {\n            return combinedItem.variants._id === orderItem.variants._id;\n          }\n\n          return false;\n        });\n\n        // Increment the quantity count for the duplicate product variants\n        if (foundItem) {\n          foundItem.quantity++;\n        } else {\n          // Otherwise push the unique item into the combinedItems array\n          combinedItems.push(orderItem);\n        }\n      }\n\n      return combinedItems;\n    }\n\n    return false;\n  }\n});\n"]},"hash":"35e1be8e0ee20b8ebc11c6bbcf130b7e87e1efc8"}
