{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component","PropTypes"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"},{"kind":"named","imported":"PropTypes","local":"PropTypes"}]},{"source":"moment","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"moment"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/included/notifications/client/components/notificationRoute.js","filenameRelative":"/imports/plugins/included/notifications/client/components/notificationRoute.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/included/notifications/client/components/notificationRoute.js"],"names":["React","Component","PropTypes","moment","NotificationRoute","constructor","props","handleNoNotifications","bind","renderDropdownHead","handleClick","notifyArr","length","notify","markOneAsRead","_id","notificationList","unread","markAllAsRead","render","map","key","timeNow","timeSent","fromNow","read","status","i18n","type","url","message","propTypes","func","array","number"],"mappings":";;;;;;;;;;;;;;AAAA;IAAA;;OAA4C,WAA5C;;;;;;;;;;;;;;;;GACA,AAAO,AAAY,AAGnB,AAAM,AAA0B,AAAU,AACxC;;IAAA,AAAY,AAAO;;;AACX,6BAAN;AAEA;;+DAAK,sBAAL,AAA6B,AAAK,AAAsB,AAAK,AAC7D,AAAK,AAAqB,AAAK,AAAmB,AAAK,AACvD;;UAAA,AAAK,AAAc,AAAK,8BAAxB,AAAmB,AAAiB,AAAK,sBAC1C;;0CAED;;AAAA,AAAsB,AAAW,AAC/B,AAAI,AAAU,AAAU,AAAG,AACzB;;8BACI,AAAC,AAAG;mCAAU,WAAd;UACI,AAAC,UAAD,AAAK,UAAU,GAAf;AACG,AAAC,AAAI,AAAU;;;AACZ,AAAC,uBAAD,AAAQ,AAAU,AAAqB,AAAU,AAAoC,AAAoB,AAAE;;AAC9G;;;AAAA,AAAE,yBACL,AAAE;;AAAF;;;2BANR,AAOI,AAAE;;;;;;+BAEP,AACD,AAAO,AACR;;;;;;;AAED;;aAAA,AAAY,AAAQ,AAClB;AAAM,AAAE;;;;;8BAAkB,AAAK;yBAA/B;AACA,AAAO,UAAc,gBAAO,KAA5B,AAAO,AACR;;AAED,AAAqB,AACnB;;;;;8BAAM;;AAAE,wBAAkB;UAApB;;;AAAA,AAA4B;;;qBAA5B,AAA8C;;AAAK;;;AAAzD,uBACA,AACI,AAAC;;AAAI;;;AAAU,mCAAf,AACI,AAAC,AAAI;AAAU,8BAAf,AACI;AAAA,AAAC,AAAE,AAAQ,AAAC,AAAM,AAChB;AAAc,2BADhB,AAAW,AACT,AACD,AACC,AAAU,AACX,AAAiB,AAAE,AACxB,AAAE;;;;;AACF,AAAC;;;AAAG,uBAAJ,AAAc;;AAAyB,AAAC;;;AAAK,2BAAN,AAAgB,AAA4B,AAAM,AAAE,AAAK,AAAE;;;;;AAT1G,AAS0G,AAAC,AAAO,AAAC,AAAE,AACjH,AAAE,AAEP;;;;AAED,AAAS,AACP;;;;;8BAAM;;AAAE;;kCAAF;AAAN,AAA6B,AAAK,AAClC;AACI,AAAC;;AAAD,AAAK,qBAAL,AAAe,AACX,AAAE;;AAAK,aAAP,AAAE;AACD,AAAC;;;AAAG,uBAAJ,AAAc,AACX,AAAE;;AAAK,eAAL,AAA2B,sBAA7B,AAAE,AACF,AAAE;AAAiB,2BAAjB,AAAqB,IAAC,UAAD,AAAS,QAAT,AAAiB,KACtC,AAAM;gBAAU,AAAO,UAAO,cAAd,AAAwB,UAAxC,AACA,AAAM;AAAQ,gBAAe,AAAO,yBAAO,OAA3C,AACA,AAAM;AAAQ,gBAAyB,AAAO,mCAA9C,AAAmD,OACnD,AACM;AAAA,AAAC,AAAG,AAAU,AAAC,AAAM,AAAI,AAAC;;;AACtB,AAAC,AAAE,AAAK,AAAC,2BAAO;AAAhB,AAAQ,AAAa,qBAAQ,AAAC,AAAM,AAClC,AAAK;;AAAL;;;AAAiB,wBAAjB;uCADF,AAA6B,AAE5B;;AAEG,AAAC,AAAI,AAAU,AACX,AAAC,AAAI,AAAU;;AACf;;;AAAA,AAAC,AAAO,+BAAR,AAAkB,AAAqB,AAAU,AAAC,AAAM,AAAC,AAAO,AAAQ,AAAE;;AAC1E,AAAC;;;AAAI,iCAAL,AAAe;;AACX,AAAC;;;AAAD,AAAO,mCAAP,AAAiB,AAAY,AAAC;AAAD,AAAS,AAAE;;;;AAC5C,AAAE;;;AAAF,mCACA,AAAE;;AAAF;;;;;AArBhC,AAKY,AAAE,AAIA,AAac,AAAE,AACN,AAAE,AACN,AAAE,AAET,AACJ,AAAE,AACP,AAAE,AAEP;;;;;;;AA7EuC,AAgF1C;;;AAAA,AAAkB,AAAY,AAC5B,AAAe,AAAU,AACzB,AAAe,AAAU;;;;;;EAhFvB;;AAiFF,kBAAkB;AACV,iBAAU,UAJpB,AAA8B;2BAO9B;AAAe,8BAAf;;AAP8B,AAGA,AAC5B;OAxFK,OAAS,WAAhB,AAA2B,QAA3B","file":"/imports/plugins/included/notifications/client/components/notificationRoute.js.map","sourcesContent":["import React, { Component, PropTypes } from \"react\";\nimport moment from \"moment\";\n\n\nclass NotificationRoute extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNoNotifications = this.handleNoNotifications.bind(this);\n    this.renderDropdownHead = this.renderDropdownHead.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleNoNotifications(notifyArr) {\n    if (notifyArr.length <= 0) {\n      return (\n          <li className=\"notification\">\n              <div className=\"media\">\n                 <div className=\"media-body\">\n                    <strong className=\"notification-title\" data-i18n=\"notifications.body.noNotifcations\">No notifications yet</strong>\n                 </div>\n              </div>\n          </li>\n      );\n    }\n    return null;\n  }\n\n  handleClick(notify) {\n    const { markOneAsRead } = this.props;\n    return markOneAsRead(notify._id);\n  }\n\n  renderDropdownHead() {\n    const { notificationList, unread, markAllAsRead } = this.props;\n    return (\n        <div className=\"dropdown-toolbar\">\n            <div className=\"dropdown-toolbar-actions\">\n                <a onClick={() => {\n                  markAllAsRead(notificationList);\n                }}\n                  data-i18n=\"notifications.body.markAllAsRead\"\n                > Mark all as read</a>\n            </div>\n            <h3 className=\"dropdown-toolbar-title\"><span data-i18n=\"notifications.body.recent\">Recent</span> ({unread})</h3>\n        </div>\n    );\n  }\n\n  render() {\n    const { notificationList } = this.props;\n    return (\n        <div className=\"notify-bar\">\n            { this.renderDropdownHead() }\n             <ul className=\"dropdown-notify notifications\">\n                { this.handleNoNotifications(notificationList) }\n                { notificationList.map((notify, key) => {\n                  const timeNow = moment(notify.timeSent).fromNow();\n                  const read = `notification ${notify.status}`;\n                  const i18n = `notifications.messages.${notify.type}`;\n                  return (\n                        <li className={read} key={key}>\n                            <a href={notify.url} onClick={() => {\n                              this.handleClick(notify);\n                            }}\n                            >\n                                <div className=\"media\">\n                                    <div className=\"media-body\">\n                                    <strong className=\"notification-title\" data-i18n={i18n}>{notify.message}</strong>\n                                    <div className=\"notification-meta\">\n                                        <small className=\"timestamp\">{timeNow}</small>\n                                    </div>\n                                    </div>\n                                </div>\n                            </a>\n                        </li>\n                  );\n                })}\n             </ul>\n        </div>\n    );\n  }\n}\n\nNotificationRoute.propTypes = {\n  markAllAsRead: PropTypes.func,\n  markOneAsRead: PropTypes.func,\n  notificationList: PropTypes.array,\n  unread: PropTypes.number\n};\n\nexport default NotificationRoute;\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/included/notifications/client/components/notificationRoute.js.map","sourceFileName":"/imports/plugins/included/notifications/client/components/notificationRoute.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"notificationRoute"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0,\n    Component = void 0,\n    PropTypes = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  },\n  PropTypes: function (v) {\n    PropTypes = v;\n  }\n}, 0);\nvar moment = void 0;\nmodule.importSync(\"moment\", {\n  \"default\": function (v) {\n    moment = v;\n  }\n}, 1);\n\nvar NotificationRoute = function (_Component) {\n  (0, _inherits3.default)(NotificationRoute, _Component);\n\n  function NotificationRoute(props) {\n    (0, _classCallCheck3.default)(this, NotificationRoute);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));\n\n    _this.handleNoNotifications = _this.handleNoNotifications.bind(_this);\n    _this.renderDropdownHead = _this.renderDropdownHead.bind(_this);\n    _this.handleClick = _this.handleClick.bind(_this);\n    return _this;\n  }\n\n  NotificationRoute.prototype.handleNoNotifications = function () {\n    function handleNoNotifications(notifyArr) {\n      if (notifyArr.length <= 0) {\n        return React.createElement(\n          \"li\",\n          {\n            className: \"notification\"\n          },\n          React.createElement(\n            \"div\",\n            {\n              className: \"media\"\n            },\n            React.createElement(\n              \"div\",\n              {\n                className: \"media-body\"\n              },\n              React.createElement(\n                \"strong\",\n                {\n                  className: \"notification-title\",\n                  \"data-i18n\": \"notifications.body.noNotifcations\"\n                },\n                \"No notifications yet\"\n              )\n            )\n          )\n        );\n      }\n\n      return null;\n    }\n\n    return handleNoNotifications;\n  }();\n\n  NotificationRoute.prototype.handleClick = function () {\n    function handleClick(notify) {\n      var markOneAsRead = this.props.markOneAsRead;\n      return markOneAsRead(notify._id);\n    }\n\n    return handleClick;\n  }();\n\n  NotificationRoute.prototype.renderDropdownHead = function () {\n    function renderDropdownHead() {\n      var _props = this.props,\n          notificationList = _props.notificationList,\n          unread = _props.unread,\n          markAllAsRead = _props.markAllAsRead;\n      return React.createElement(\n        \"div\",\n        {\n          className: \"dropdown-toolbar\"\n        },\n        React.createElement(\n          \"div\",\n          {\n            className: \"dropdown-toolbar-actions\"\n          },\n          React.createElement(\n            \"a\",\n            {\n              onClick: function () {\n                markAllAsRead(notificationList);\n              },\n              \"data-i18n\": \"notifications.body.markAllAsRead\"\n            },\n            \" Mark all as read\"\n          )\n        ),\n        React.createElement(\n          \"h3\",\n          {\n            className: \"dropdown-toolbar-title\"\n          },\n          React.createElement(\n            \"span\",\n            {\n              \"data-i18n\": \"notifications.body.recent\"\n            },\n            \"Recent\"\n          ),\n          \" (\",\n          unread,\n          \")\"\n        )\n      );\n    }\n\n    return renderDropdownHead;\n  }();\n\n  NotificationRoute.prototype.render = function () {\n    function render() {\n      var _this2 = this;\n\n      var notificationList = this.props.notificationList;\n      return React.createElement(\n        \"div\",\n        {\n          className: \"notify-bar\"\n        },\n        this.renderDropdownHead(),\n        React.createElement(\n          \"ul\",\n          {\n            className: \"dropdown-notify notifications\"\n          },\n          this.handleNoNotifications(notificationList),\n          notificationList.map(function (notify, key) {\n            var timeNow = moment(notify.timeSent).fromNow();\n            var read = \"notification \" + notify.status;\n            var i18n = \"notifications.messages.\" + notify.type;\n            return React.createElement(\n              \"li\",\n              {\n                className: read,\n                key: key\n              },\n              React.createElement(\n                \"a\",\n                {\n                  href: notify.url,\n                  onClick: function () {\n                    _this2.handleClick(notify);\n                  }\n                },\n                React.createElement(\n                  \"div\",\n                  {\n                    className: \"media\"\n                  },\n                  React.createElement(\n                    \"div\",\n                    {\n                      className: \"media-body\"\n                    },\n                    React.createElement(\n                      \"strong\",\n                      {\n                        className: \"notification-title\",\n                        \"data-i18n\": i18n\n                      },\n                      notify.message\n                    ),\n                    React.createElement(\n                      \"div\",\n                      {\n                        className: \"notification-meta\"\n                      },\n                      React.createElement(\n                        \"small\",\n                        {\n                          className: \"timestamp\"\n                        },\n                        timeNow\n                      )\n                    )\n                  )\n                )\n              )\n            );\n          })\n        )\n      );\n    }\n\n    return render;\n  }();\n\n  return NotificationRoute;\n}(Component);\n\nNotificationRoute.propTypes = {\n  markAllAsRead: PropTypes.func,\n  markOneAsRead: PropTypes.func,\n  notificationList: PropTypes.array,\n  unread: PropTypes.number\n};\nmodule.export(\"default\", exports.default = NotificationRoute);","map":{"version":3,"sources":["/imports/plugins/included/notifications/client/components/notificationRoute.js"],"names":["React","Component","PropTypes","moment","NotificationRoute","constructor","props","handleNoNotifications","bind","renderDropdownHead","handleClick","notifyArr","length","notify","markOneAsRead","_id","notificationList","unread","markAllAsRead","render","map","key","timeNow","timeSent","fromNow","read","status","i18n","type","url","message","propTypes","func","array","number"],"mappings":";;;;;;;;;;;;;;AAAA;IAAA;;OAA4C,WAA5C;;;;;;;;;;;;;;;;GACA,AAAO,AAAY,AAGnB,AAAM,AAA0B,AAAU,AACxC;;IAAA,AAAY,AAAO;;;AACX,6BAAN;AAEA;;+DAAK,sBAAL,AAA6B,AAAK,AAAsB,AAAK,AAC7D,AAAK,AAAqB,AAAK,AAAmB,AAAK,AACvD;;UAAA,AAAK,AAAc,AAAK,8BAAxB,AAAmB,AAAiB,AAAK,sBAC1C;;0CAED;;AAAA,AAAsB,AAAW,AAC/B,AAAI,AAAU,AAAU,AAAG,AACzB;;8BACI,AAAC,AAAG;mCAAU,WAAd;UACI,AAAC,UAAD,AAAK,UAAU,GAAf;AACG,AAAC,AAAI,AAAU;;;AACZ,AAAC,uBAAD,AAAQ,AAAU,AAAqB,AAAU,AAAoC,AAAoB,AAAE;;AAC9G;;;AAAA,AAAE,yBACL,AAAE;;AAAF;;;2BANR,AAOI,AAAE;;;;;;+BAEP,AACD,AAAO,AACR;;;;;;;AAED;;aAAA,AAAY,AAAQ,AAClB;AAAM,AAAE;;;;;8BAAkB,AAAK;yBAA/B;AACA,AAAO,UAAc,gBAAO,KAA5B,AAAO,AACR;;AAED,AAAqB,AACnB;;;;;8BAAM;;AAAE,wBAAkB;UAApB;;;AAAA,AAA4B;;;qBAA5B,AAA8C;;AAAK;;;AAAzD,uBACA,AACI,AAAC;;AAAI;;;AAAU,mCAAf,AACI,AAAC,AAAI;AAAU,8BAAf,AACI;AAAA,AAAC,AAAE,AAAQ,AAAC,AAAM,AAChB;AAAc,2BADhB,AAAW,AACT,AACD,AACC,AAAU,AACX,AAAiB,AAAE,AACxB,AAAE;;;;;AACF,AAAC;;;AAAG,uBAAJ,AAAc;;AAAyB,AAAC;;;AAAK,2BAAN,AAAgB,AAA4B,AAAM,AAAE,AAAK,AAAE;;;;;AAT1G,AAS0G,AAAC,AAAO,AAAC,AAAE,AACjH,AAAE,AAEP;;;;AAED,AAAS,AACP;;;;;8BAAM;;AAAE;;kCAAF;AAAN,AAA6B,AAAK,AAClC;AACI,AAAC;;AAAD,AAAK,qBAAL,AAAe,AACX,AAAE;;AAAK,aAAP,AAAE;AACD,AAAC;;;AAAG,uBAAJ,AAAc,AACX,AAAE;;AAAK,eAAL,AAA2B,sBAA7B,AAAE,AACF,AAAE;AAAiB,2BAAjB,AAAqB,IAAC,UAAD,AAAS,QAAT,AAAiB,KACtC,AAAM;gBAAU,AAAO,UAAO,cAAd,AAAwB,UAAxC,AACA,AAAM;AAAQ,gBAAe,AAAO,yBAAO,OAA3C,AACA,AAAM;AAAQ,gBAAyB,AAAO,mCAA9C,AAAmD,OACnD,AACM;AAAA,AAAC,AAAG,AAAU,AAAC,AAAM,AAAI,AAAC;;;AACtB,AAAC,AAAE,AAAK,AAAC,2BAAO;AAAhB,AAAQ,AAAa,qBAAQ,AAAC,AAAM,AAClC,AAAK;;AAAL;;;AAAiB,wBAAjB;uCADF,AAA6B,AAE5B;;AAEG,AAAC,AAAI,AAAU,AACX,AAAC,AAAI,AAAU;;AACf;;;AAAA,AAAC,AAAO,+BAAR,AAAkB,AAAqB,AAAU,AAAC,AAAM,AAAC,AAAO,AAAQ,AAAE;;AAC1E,AAAC;;;AAAI,iCAAL,AAAe;;AACX,AAAC;;;AAAD,AAAO,mCAAP,AAAiB,AAAY,AAAC;AAAD,AAAS,AAAE;;;;AAC5C,AAAE;;;AAAF,mCACA,AAAE;;AAAF;;;;;AArBhC,AAKY,AAAE,AAIA,AAac,AAAE,AACN,AAAE,AACN,AAAE,AAET,AACJ,AAAE,AACP,AAAE,AAEP;;;;;;;AA7EuC,AAgF1C;;;AAAA,AAAkB,AAAY,AAC5B,AAAe,AAAU,AACzB,AAAe,AAAU;;;;;;EAhFvB;;AAiFF,kBAAkB;AACV,iBAAU,UAJpB,AAA8B;2BAO9B;AAAe,8BAAf;;AAP8B,AAGA,AAC5B;OAxFK,OAAS,WAAhB,AAA2B,QAA3B","file":"/imports/plugins/included/notifications/client/components/notificationRoute.js.map","sourcesContent":["import React, { Component, PropTypes } from \"react\";\nimport moment from \"moment\";\n\n\nclass NotificationRoute extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNoNotifications = this.handleNoNotifications.bind(this);\n    this.renderDropdownHead = this.renderDropdownHead.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleNoNotifications(notifyArr) {\n    if (notifyArr.length <= 0) {\n      return (\n          <li className=\"notification\">\n              <div className=\"media\">\n                 <div className=\"media-body\">\n                    <strong className=\"notification-title\" data-i18n=\"notifications.body.noNotifcations\">No notifications yet</strong>\n                 </div>\n              </div>\n          </li>\n      );\n    }\n    return null;\n  }\n\n  handleClick(notify) {\n    const { markOneAsRead } = this.props;\n    return markOneAsRead(notify._id);\n  }\n\n  renderDropdownHead() {\n    const { notificationList, unread, markAllAsRead } = this.props;\n    return (\n        <div className=\"dropdown-toolbar\">\n            <div className=\"dropdown-toolbar-actions\">\n                <a onClick={() => {\n                  markAllAsRead(notificationList);\n                }}\n                  data-i18n=\"notifications.body.markAllAsRead\"\n                > Mark all as read</a>\n            </div>\n            <h3 className=\"dropdown-toolbar-title\"><span data-i18n=\"notifications.body.recent\">Recent</span> ({unread})</h3>\n        </div>\n    );\n  }\n\n  render() {\n    const { notificationList } = this.props;\n    return (\n        <div className=\"notify-bar\">\n            { this.renderDropdownHead() }\n             <ul className=\"dropdown-notify notifications\">\n                { this.handleNoNotifications(notificationList) }\n                { notificationList.map((notify, key) => {\n                  const timeNow = moment(notify.timeSent).fromNow();\n                  const read = `notification ${notify.status}`;\n                  const i18n = `notifications.messages.${notify.type}`;\n                  return (\n                        <li className={read} key={key}>\n                            <a href={notify.url} onClick={() => {\n                              this.handleClick(notify);\n                            }}\n                            >\n                                <div className=\"media\">\n                                    <div className=\"media-body\">\n                                    <strong className=\"notification-title\" data-i18n={i18n}>{notify.message}</strong>\n                                    <div className=\"notification-meta\">\n                                        <small className=\"timestamp\">{timeNow}</small>\n                                    </div>\n                                    </div>\n                                </div>\n                            </a>\n                        </li>\n                  );\n                })}\n             </ul>\n        </div>\n    );\n  }\n}\n\nNotificationRoute.propTypes = {\n  markAllAsRead: PropTypes.func,\n  markOneAsRead: PropTypes.func,\n  notificationList: PropTypes.array,\n  unread: PropTypes.number\n};\n\nexport default NotificationRoute;\n"]},"hash":"379f51fbdfbaad9a367bffb1c2d2eef515c15d7e"}
