{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/templating","imported":["Template"],"specifiers":[{"kind":"named","imported":"Template","local":"Template"}]},{"source":"/lib/collections","imported":["Packages"],"specifiers":[{"kind":"named","imported":"Packages","local":"Packages"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/included/launchdock-connect/client/templates/settings.js","filenameRelative":"/imports/plugins/included/launchdock-connect/client/templates/settings.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/included/launchdock-connect/client/templates/settings.js"],"names":["Template","Packages","launchdockSettings","onCreated","subscribe","helpers","packageData","findOne","name","events","event","tmpl","preventDefault","opts","domain","find","value","privateKey","publicCert","Meteor","call","err","Alerts","removeSeen","add","reason","autoHide"],"mappings":"AAAA,IAAS;AAAT,OAAyB,WAAzB;;;;;;;;;;GACA,AAAS,AAAgB,AAGzB,AAAS,AAAmB,AAAU,AAAY,AAChD,AAAK,AAAU;AADjB,AAEC,kDAGD;OAAS,UAAT,AAA4B,AAAQ,AAClC;AAAc,AACZ,AAAO,AAAS,AAAQ,AACtB,AAAM;AADR,AAAO,AAAiB;;;YAO5B,AAAS,AAAmB,AAAO,AACjC;AAVF,AAAoC;AAUlC,AAAqC,AAAO,AAAM,AAChD,AAAM,AAEN,AAAM,AAAO,AACX,AAAQ,AAAK,AAAK,AAA4B;AATjD;AAUG,SAAY,AAAK,mBAAK;AACV,AAAK,AAAK,+DAHX,AAGC,AAA8C;AAH5D,UAMA,AAAO,AAAK,AAA2B,AAAM,AAAC,AAAQ,AACpD;QAAA,AAAI,AAAK;cACA,UAAP,4BACA;AAAO,kBAAP,AAAW,UAAX,AAA4C,AAAI,oCAAhD,AAAwD,AACxD;gEACD,AACD;AAJE;WAIK,KAAP,AAAW,gDAAX,AAA8D,AAAW,AACvE;eADF,AAAyE,AAC7D;eAPd,AASC;gEACF;;AApBH,AAAmC;;;;;;;AAIlB,AAEC,AAA8C,AAC1D","file":"/imports/plugins/included/launchdock-connect/client/templates/settings.js.map","sourcesContent":["import { Template } from \"meteor/templating\";\nimport { Packages } from \"/lib/collections\";\n\n\nTemplate.launchdockSettings.onCreated(function () {\n  this.subscribe(\"launchdock-auth\");\n});\n\n\nTemplate.launchdockSettings.helpers({\n  packageData() {\n    return Packages.findOne({\n      name: \"reaction-connect\"\n    });\n  }\n});\n\n\nTemplate.launchdockSettings.events({\n  \"submit #launchdock-ssl-update-form\"(event, tmpl) {\n    event.preventDefault();\n\n    const opts = {\n      domain: tmpl.find(\"input[name='ssl-domain']\").value,\n      privateKey: tmpl.find(\"textarea[name='ssl-private-key']\").value,\n      publicCert: tmpl.find(\"textarea[name='ssl-certificate']\").value\n    };\n\n    Meteor.call(\"launchdock/setCustomSsl\", opts, (err) => {\n      if (err) {\n        Alerts.removeSeen();\n        Alerts.add(\"SSL settings update failed. \" + err.reason, \"danger\");\n        return;\n      }\n      Alerts.add(\"SSL settings saved. Connecting to Launckdock...\", \"success\", {\n        autoHide: true\n      });\n    });\n  }\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/included/launchdock-connect/client/templates/settings.js.map","sourceFileName":"/imports/plugins/included/launchdock-connect/client/templates/settings.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"settings"},"ignored":false,"code":"var Template = void 0;\nmodule.importSync(\"meteor/templating\", {\n  Template: function (v) {\n    Template = v;\n  }\n}, 0);\nvar Packages = void 0;\nmodule.importSync(\"/lib/collections\", {\n  Packages: function (v) {\n    Packages = v;\n  }\n}, 1);\nTemplate.launchdockSettings.onCreated(function () {\n  this.subscribe(\"launchdock-auth\");\n});\nTemplate.launchdockSettings.helpers({\n  packageData: function () {\n    return Packages.findOne({\n      name: \"reaction-connect\"\n    });\n  }\n});\nTemplate.launchdockSettings.events({\n  \"submit #launchdock-ssl-update-form\": function (event, tmpl) {\n    event.preventDefault();\n    var opts = {\n      domain: tmpl.find(\"input[name='ssl-domain']\").value,\n      privateKey: tmpl.find(\"textarea[name='ssl-private-key']\").value,\n      publicCert: tmpl.find(\"textarea[name='ssl-certificate']\").value\n    };\n    Meteor.call(\"launchdock/setCustomSsl\", opts, function (err) {\n      if (err) {\n        Alerts.removeSeen();\n        Alerts.add(\"SSL settings update failed. \" + err.reason, \"danger\");\n        return;\n      }\n\n      Alerts.add(\"SSL settings saved. Connecting to Launckdock...\", \"success\", {\n        autoHide: true\n      });\n    });\n  }\n});","map":{"version":3,"sources":["/imports/plugins/included/launchdock-connect/client/templates/settings.js"],"names":["Template","Packages","launchdockSettings","onCreated","subscribe","helpers","packageData","findOne","name","events","event","tmpl","preventDefault","opts","domain","find","value","privateKey","publicCert","Meteor","call","err","Alerts","removeSeen","add","reason","autoHide"],"mappings":"AAAA,IAAS;AAAT,OAAyB,WAAzB;;;;;;;;;;GACA,AAAS,AAAgB,AAGzB,AAAS,AAAmB,AAAU,AAAY,AAChD,AAAK,AAAU;AADjB,AAEC,kDAGD;OAAS,UAAT,AAA4B,AAAQ,AAClC;AAAc,AACZ,AAAO,AAAS,AAAQ,AACtB,AAAM;AADR,AAAO,AAAiB;;;YAO5B,AAAS,AAAmB,AAAO,AACjC;AAVF,AAAoC;AAUlC,AAAqC,AAAO,AAAM,AAChD,AAAM,AAEN,AAAM,AAAO,AACX,AAAQ,AAAK,AAAK,AAA4B;AATjD;AAUG,SAAY,AAAK,mBAAK;AACV,AAAK,AAAK,+DAHX,AAGC,AAA8C;AAH5D,UAMA,AAAO,AAAK,AAA2B,AAAM,AAAC,AAAQ,AACpD;QAAA,AAAI,AAAK;cACA,UAAP,4BACA;AAAO,kBAAP,AAAW,UAAX,AAA4C,AAAI,oCAAhD,AAAwD,AACxD;gEACD,AACD;AAJE;WAIK,KAAP,AAAW,gDAAX,AAA8D,AAAW,AACvE;eADF,AAAyE,AAC7D;eAPd,AASC;gEACF;;AApBH,AAAmC;;;;;;;AAIlB,AAEC,AAA8C,AAC1D","file":"/imports/plugins/included/launchdock-connect/client/templates/settings.js.map","sourcesContent":["import { Template } from \"meteor/templating\";\nimport { Packages } from \"/lib/collections\";\n\n\nTemplate.launchdockSettings.onCreated(function () {\n  this.subscribe(\"launchdock-auth\");\n});\n\n\nTemplate.launchdockSettings.helpers({\n  packageData() {\n    return Packages.findOne({\n      name: \"reaction-connect\"\n    });\n  }\n});\n\n\nTemplate.launchdockSettings.events({\n  \"submit #launchdock-ssl-update-form\"(event, tmpl) {\n    event.preventDefault();\n\n    const opts = {\n      domain: tmpl.find(\"input[name='ssl-domain']\").value,\n      privateKey: tmpl.find(\"textarea[name='ssl-private-key']\").value,\n      publicCert: tmpl.find(\"textarea[name='ssl-certificate']\").value\n    };\n\n    Meteor.call(\"launchdock/setCustomSsl\", opts, (err) => {\n      if (err) {\n        Alerts.removeSeen();\n        Alerts.add(\"SSL settings update failed. \" + err.reason, \"danger\");\n        return;\n      }\n      Alerts.add(\"SSL settings saved. Connecting to Launckdock...\", \"success\", {\n        autoHide: true\n      });\n    });\n  }\n});\n"]},"hash":"2e906139621d80e84de0b53b5e38e8fbf8670166"}
