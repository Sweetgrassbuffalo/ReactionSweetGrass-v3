{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"lodash/find","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_find"}]},{"source":"/client/api","imported":["Reaction"],"specifiers":[{"kind":"named","imported":"Reaction","local":"Reaction"}]},{"source":"/lib/collections","imported":["Packages"],"specifiers":[{"kind":"named","imported":"Packages","local":"Packages"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/core/dashboard/client/templates/settings/settings.js","filenameRelative":"/imports/plugins/core/dashboard/client/templates/settings/settings.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/core/dashboard/client/templates/settings/settings.js"],"names":["Reaction","Packages","Template","settingsHeader","helpers","registry","getActionView","isActionViewAtRootView","thisApp","reactionApp","findOne","Router","getRouteName","enabled","name","route","settingsData","item","provides","events","hideActionView","popActionView","settingsSidebar","pkgPermissions","hasPermission","settingsSidebarItem","label","parentData"],"mappings":";;;;;;;;;;;;;;;;;;GACA,A,AAAS,AAAgB,AACzB,AAAS,AAAgB,AAEzB;AAGA,AAAS,AAAe,AAAQ,AAE9B;;;AAF8B,AAM9B,AAAW,AACT,AAAO,AAAS,AAAmB,AACpC,AAED;;;2BAAyB,AACvB;WAAO,SAAS,mBAAhB,AAAO,AACR;AAZ6B,AAc9B;;;AAIA,AAAU,AACR;AAAM,AAAc,AAAS,AAAQ,AACnC,AAAqB,AACrB,AAAkB,AAAS,AAAO,AACjC,AACD;;;0BADC,AACQ,AACT;QAFC,AAES;AAFT,AAGK,2BACN;AAAO,wCAPT,AAAoB,AAGjB;AAGD;eAIF;AAAI,gBAAJ,AAAiB,AACf;YAAM,AAAe,AAAO,AAAY,AAAU,AAAU,AAAM,AAChE;aADF,AAAqB,AACnB,AAAO,AAAK,AAAU,AAAS,AAAO,AAAkB,AAAK,AAAa,AAC3E,AAED;;;QAAO,aAAP,AACD;;kFACD;AAAA,AAAO,AACR;;aArCH,AAAgC,AAyChC,A;;;;AAGA,AAAS,AAAe,AAAO,AAC7B,AAA2C,AAAM,AAC/C,AAAS;IAFkB,AAG5B,AAED,AAA0B;;;AACxB,SAAS,eAAT;;aANJ,AAA+B;A,AAU/B;uCAGA;AAAS,aAAT,AAAyB,AAAQ,AAE/B;;AARC,IAYD,AAAiB,AACf,AAAI,AAAS,AAAc,AAAc,AACvC,AAAI,AAAK,AAAM;;;AACb,SAAO,AAAS;AAGlB,AAAO,AAAS,AAAc,AAAK,AACpC,AAED;;;KAAA,AAAO,4BACR;;qBAhBH,AAAiC;2CAmBjC;AAAA,AAAS,AAAoB,AAAQ,AAEnC;;;AAIA,AAAQ,AACN;;WAAA,AAAO,AAAS,AAAW,AAAG,AAAS,AAAK,AAC7C;AARH,AAAqC;AAV7B,AAAO,AAAuB,AAAK,AACpC","file":"/imports/plugins/core/dashboard/client/templates/settings/settings.js.map","sourcesContent":["import _ from \"lodash\";\nimport { Reaction } from \"/client/api\";\nimport { Packages } from \"/lib/collections\";\n\n/**\n * Helpers for Settings Header (actionView)\n */\nTemplate.settingsHeader.helpers({\n\n  /**\n   * Data pased to action view\n   * @return {Object} Registry entry for item\n   */\n  registry() {\n    return Reaction.getActionView() || {};\n  },\n\n  isActionViewAtRootView() {\n    return Reaction.isActionViewAtRootView();\n  },\n\n  /**\n   * thisApp\n   * @return {Object} Registry entry for item\n   */\n  thisApp() {\n    const reactionApp = Packages.findOne({\n      \"registry.provides\": \"settings\",\n      \"registry.route\": Reaction.Router.getRouteName()\n    }, {\n      enabled: 1,\n      registry: 1,\n      name: 1,\n      route: 1\n    });\n\n    if (reactionApp) {\n      const settingsData = _.find(reactionApp.registry, function (item) {\n        return item.route === Reaction.Router.getRouteName() && item.provides === \"settings\";\n      });\n\n      return settingsData;\n    }\n    return reactionApp;\n  }\n\n});\n\n/**\n * Events for Setting Header (actionView)\n */\nTemplate.settingsHeader.events({\n  \"click [data-event-action=closeSettings]\": () => {\n    Reaction.hideActionView();\n  },\n\n  \"click .js-back-button\"() {\n    Reaction.popActionView();\n  }\n});\n\n/**\n * Helpers for Settings Sidebar (actionView)\n */\nTemplate.settingsSidebar.helpers({\n\n  /**\n   * pkgPermissions Check package permissions\n   * @return {Boolean} user has permission to see settings for this package\n   */\n  pkgPermissions() {\n    if (Reaction.hasPermission(\"dashboard\")) {\n      if (this.name) {\n        return Reaction.hasPermission(this.name);\n      }\n\n      return Reaction.hasPermission(this.name);\n    }\n\n    return false;\n  }\n});\n\nTemplate.settingsSidebarItem.helpers({\n\n  /**\n   * label\n   * @return {String} Label for item\n   */\n  label() {\n    return Template.parentData(1).label || this.label;\n  }\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/core/dashboard/client/templates/settings/settings.js.map","sourceFileName":"/imports/plugins/core/dashboard/client/templates/settings/settings.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"settings"},"ignored":false,"code":"var _find = void 0;\n\nmodule.importSync(\"lodash/find\", {\n  \"default\": function (v) {\n    _find = v;\n  }\n}, 0);\nvar Reaction = void 0;\nmodule.importSync(\"/client/api\", {\n  Reaction: function (v) {\n    Reaction = v;\n  }\n}, 1);\nvar Packages = void 0;\nmodule.importSync(\"/lib/collections\", {\n  Packages: function (v) {\n    Packages = v;\n  }\n}, 2);\n/**\n * Helpers for Settings Header (actionView)\n */Template.settingsHeader.helpers({\n  /**\n   * Data pased to action view\n   * @return {Object} Registry entry for item\n   */registry: function () {\n    return Reaction.getActionView() || {};\n  },\n  isActionViewAtRootView: function () {\n    return Reaction.isActionViewAtRootView();\n  },\n  /**\n   * thisApp\n   * @return {Object} Registry entry for item\n   */thisApp: function () {\n    var reactionApp = Packages.findOne({\n      \"registry.provides\": \"settings\",\n      \"registry.route\": Reaction.Router.getRouteName()\n    }, {\n      enabled: 1,\n      registry: 1,\n      name: 1,\n      route: 1\n    });\n\n    if (reactionApp) {\n      var settingsData = _find(reactionApp.registry, function (item) {\n        return item.route === Reaction.Router.getRouteName() && item.provides === \"settings\";\n      });\n\n      return settingsData;\n    }\n\n    return reactionApp;\n  }\n}); /**\n     * Events for Setting Header (actionView)\n     */\nTemplate.settingsHeader.events({\n  \"click [data-event-action=closeSettings]\": function () {\n    Reaction.hideActionView();\n  },\n  \"click .js-back-button\": function () {\n    Reaction.popActionView();\n  }\n}); /**\n     * Helpers for Settings Sidebar (actionView)\n     */\nTemplate.settingsSidebar.helpers({\n  /**\n   * pkgPermissions Check package permissions\n   * @return {Boolean} user has permission to see settings for this package\n   */pkgPermissions: function () {\n    if (Reaction.hasPermission(\"dashboard\")) {\n      if (this.name) {\n        return Reaction.hasPermission(this.name);\n      }\n\n      return Reaction.hasPermission(this.name);\n    }\n\n    return false;\n  }\n});\nTemplate.settingsSidebarItem.helpers({\n  /**\n   * label\n   * @return {String} Label for item\n   */label: function () {\n    return Template.parentData(1).label || this.label;\n  }\n});","map":{"version":3,"sources":["/imports/plugins/core/dashboard/client/templates/settings/settings.js"],"names":["Reaction","Packages","Template","settingsHeader","helpers","registry","getActionView","isActionViewAtRootView","thisApp","reactionApp","findOne","Router","getRouteName","enabled","name","route","settingsData","item","provides","events","hideActionView","popActionView","settingsSidebar","pkgPermissions","hasPermission","settingsSidebarItem","label","parentData"],"mappings":";;;;;;;;;;;;;;;;;;GACA,A,AAAS,AAAgB,AACzB,AAAS,AAAgB,AAEzB;AAGA,AAAS,AAAe,AAAQ,AAE9B;;;AAF8B,AAM9B,AAAW,AACT,AAAO,AAAS,AAAmB,AACpC,AAED;;;2BAAyB,AACvB;WAAO,SAAS,mBAAhB,AAAO,AACR;AAZ6B,AAc9B;;;AAIA,AAAU,AACR;AAAM,AAAc,AAAS,AAAQ,AACnC,AAAqB,AACrB,AAAkB,AAAS,AAAO,AACjC,AACD;;;0BADC,AACQ,AACT;QAFC,AAES;AAFT,AAGK,2BACN;AAAO,wCAPT,AAAoB,AAGjB;AAGD;eAIF;AAAI,gBAAJ,AAAiB,AACf;YAAM,AAAe,AAAO,AAAY,AAAU,AAAU,AAAM,AAChE;aADF,AAAqB,AACnB,AAAO,AAAK,AAAU,AAAS,AAAO,AAAkB,AAAK,AAAa,AAC3E,AAED;;;QAAO,aAAP,AACD;;kFACD;AAAA,AAAO,AACR;;aArCH,AAAgC,AAyChC,A;;;;AAGA,AAAS,AAAe,AAAO,AAC7B,AAA2C,AAAM,AAC/C,AAAS;IAFkB,AAG5B,AAED,AAA0B;;;AACxB,SAAS,eAAT;;aANJ,AAA+B;A,AAU/B;uCAGA;AAAS,aAAT,AAAyB,AAAQ,AAE/B;;AARC,IAYD,AAAiB,AACf,AAAI,AAAS,AAAc,AAAc,AACvC,AAAI,AAAK,AAAM;;;AACb,SAAO,AAAS;AAGlB,AAAO,AAAS,AAAc,AAAK,AACpC,AAED;;;KAAA,AAAO,4BACR;;qBAhBH,AAAiC;2CAmBjC;AAAA,AAAS,AAAoB,AAAQ,AAEnC;;;AAIA,AAAQ,AACN;;WAAA,AAAO,AAAS,AAAW,AAAG,AAAS,AAAK,AAC7C;AARH,AAAqC;AAV7B,AAAO,AAAuB,AAAK,AACpC","file":"/imports/plugins/core/dashboard/client/templates/settings/settings.js.map","sourcesContent":["import _ from \"lodash\";\nimport { Reaction } from \"/client/api\";\nimport { Packages } from \"/lib/collections\";\n\n/**\n * Helpers for Settings Header (actionView)\n */\nTemplate.settingsHeader.helpers({\n\n  /**\n   * Data pased to action view\n   * @return {Object} Registry entry for item\n   */\n  registry() {\n    return Reaction.getActionView() || {};\n  },\n\n  isActionViewAtRootView() {\n    return Reaction.isActionViewAtRootView();\n  },\n\n  /**\n   * thisApp\n   * @return {Object} Registry entry for item\n   */\n  thisApp() {\n    const reactionApp = Packages.findOne({\n      \"registry.provides\": \"settings\",\n      \"registry.route\": Reaction.Router.getRouteName()\n    }, {\n      enabled: 1,\n      registry: 1,\n      name: 1,\n      route: 1\n    });\n\n    if (reactionApp) {\n      const settingsData = _.find(reactionApp.registry, function (item) {\n        return item.route === Reaction.Router.getRouteName() && item.provides === \"settings\";\n      });\n\n      return settingsData;\n    }\n    return reactionApp;\n  }\n\n});\n\n/**\n * Events for Setting Header (actionView)\n */\nTemplate.settingsHeader.events({\n  \"click [data-event-action=closeSettings]\": () => {\n    Reaction.hideActionView();\n  },\n\n  \"click .js-back-button\"() {\n    Reaction.popActionView();\n  }\n});\n\n/**\n * Helpers for Settings Sidebar (actionView)\n */\nTemplate.settingsSidebar.helpers({\n\n  /**\n   * pkgPermissions Check package permissions\n   * @return {Boolean} user has permission to see settings for this package\n   */\n  pkgPermissions() {\n    if (Reaction.hasPermission(\"dashboard\")) {\n      if (this.name) {\n        return Reaction.hasPermission(this.name);\n      }\n\n      return Reaction.hasPermission(this.name);\n    }\n\n    return false;\n  }\n});\n\nTemplate.settingsSidebarItem.helpers({\n\n  /**\n   * label\n   * @return {String} Label for item\n   */\n  label() {\n    return Template.parentData(1).label || this.label;\n  }\n});\n"]},"hash":"07898964bbb58c78b35f8fc51b2f2cb25456a3f0"}
