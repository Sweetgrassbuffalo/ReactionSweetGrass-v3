{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/aldeed:simple-schema","imported":["SimpleSchema"],"specifiers":[{"kind":"named","imported":"SimpleSchema","local":"SimpleSchema"}]}],"exports":{"exported":["Notification"],"specifiers":[{"kind":"local","local":"Notification","exported":"Notification"}]}}},"options":{"filename":"/lib/collections/schemas/notifications.js","filenameRelative":"/lib/collections/schemas/notifications.js","inputSourceMap":{"version":3,"sources":["/lib/collections/schemas/notifications.js"],"names":["SimpleSchema","Notification","message","type","String","optional","url","to","hasDetails","Boolean","details","status","defaultValue","timeSent","Date","autoValue","isInsert","isUpsert","$setOnInsert","unset"],"mappings":"AAAA,OAAS;AAAT;AAA6B;;;IAA7B;;;;;GAGA,AAAO,AAAM,AAAe,AAAI,AAAa,AAC3C,AAAS,AACP;AAAM,IADC;;UAIT;;AAL2C,AAClC,AAEG;AAYZ,AAAM,AACJ,AAAM,AACN,AAAU;;;;;;;;;KAjB+B;AAmBtC,UACH;AAAM,cADH,AAEH,AAAU;AAFZ;AAnB2C;AAuBvC,UACF;AAAM,cADJ,AAEF,AAAU;AAFZ;AAvB2C;UA2B/B,AACV;AAAM,cADI,AAEV,AAAU;AAFZ;AA3B2C;UA+BlC,AACP;AAAM,cADC,AAEP,AAAU;AAFZ;AA/B2C;UAmCnC,AACN;AAAM,cADA,AAEN,AAAU,AACV;AAHF;;UAKA;AAAU,cACR;AADQ,AACF,kBADE,AAER,AAAU,AACV;AA3CyC,AAmCnC,AAGQ;;UAMZ,AAAI,AAAK,AAAU,AACjB;cAAA,AAAO,AAAI,AACZ;AAFD,AAEO,eAAI,AAAK,YAAT,AAAmB,AACxB;eAAO,UAAE;mBAAF,AAAgB,AAAI;AAA3B,gCACD;;;;AACD;;WAAA,AAAK,AACN;AAlDE,AAAqB,AAAiB,AAwCjC;AAGG,AAAY,AACrB;AAzCF","file":"/lib/collections/schemas/notifications.js.map","sourcesContent":["import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\n\n\nexport const Notification = new SimpleSchema({\n  message: {\n    type: String,\n    optional: false\n  },\n  /**\n   * Type              Message(This would be the corresponding message)\n   * ----------------| -----------------------------------------------\n   * orderCancelled  | \"Your order was canceled.\"\n   * forAdmin:       | \"You have a new order.\"\n   * newOrder:       | \"Your order is being processed.\"\n   * orderDelivered: | \"Your order has been delivered.\"\n   * orderAccepted:  | \"Your order has been accepted.\"\n   * orderShipped:   | \"Your order has been shipped.\"\n   */\n  type: {\n    type: String,\n    optional: false\n  },\n  url: {\n    type: String,\n    optional: false\n  },\n  to: {\n    type: String,\n    optional: false\n  },\n  hasDetails: {\n    type: Boolean,\n    optional: false\n  },\n  details: {\n    type: String,\n    optional: true\n  },\n  status: {\n    type: String,\n    optional: false,\n    defaultValue: \"unread\"\n  },\n  timeSent: {\n    type: Date,\n    optional: false,\n    autoValue: function () {\n      if (this.isInsert) {\n        return new Date();\n      } else if (this.isUpsert) {\n        return { $setOnInsert: new Date() };\n      }\n      this.unset();\n    }\n  }\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/lib/collections/schemas/notifications.js.map","sourceFileName":"/lib/collections/schemas/notifications.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"notifications"},"ignored":false,"code":"module.export({\n  Notification: function () {\n    return Notification;\n  }\n});\nvar SimpleSchema = void 0;\nmodule.importSync(\"meteor/aldeed:simple-schema\", {\n  SimpleSchema: function (v) {\n    SimpleSchema = v;\n  }\n}, 0);\nvar Notification = new SimpleSchema({\n  message: {\n    type: String,\n    optional: false\n  },\n  /**\n   * Type              Message(This would be the corresponding message)\n   * ----------------| -----------------------------------------------\n   * orderCancelled  | \"Your order was canceled.\"\n   * forAdmin:       | \"You have a new order.\"\n   * newOrder:       | \"Your order is being processed.\"\n   * orderDelivered: | \"Your order has been delivered.\"\n   * orderAccepted:  | \"Your order has been accepted.\"\n   * orderShipped:   | \"Your order has been shipped.\"\n   */type: {\n    type: String,\n    optional: false\n  },\n  url: {\n    type: String,\n    optional: false\n  },\n  to: {\n    type: String,\n    optional: false\n  },\n  hasDetails: {\n    type: Boolean,\n    optional: false\n  },\n  details: {\n    type: String,\n    optional: true\n  },\n  status: {\n    type: String,\n    optional: false,\n    defaultValue: \"unread\"\n  },\n  timeSent: {\n    type: Date,\n    optional: false,\n    autoValue: function () {\n      if (this.isInsert) {\n        return new Date();\n      } else if (this.isUpsert) {\n        return {\n          $setOnInsert: new Date()\n        };\n      }\n\n      this.unset();\n    }\n  }\n});","map":{"version":3,"sources":["/lib/collections/schemas/notifications.js"],"names":["SimpleSchema","Notification","message","type","String","optional","url","to","hasDetails","Boolean","details","status","defaultValue","timeSent","Date","autoValue","isInsert","isUpsert","$setOnInsert","unset"],"mappings":"AAAA,OAAS;AAAT;AAA6B;;;IAA7B;;;;;GAGA,AAAO,AAAM,AAAe,AAAI,AAAa,AAC3C,AAAS,AACP;AAAM,IADC;;UAIT;;AAL2C,AAClC,AAEG;AAYZ,AAAM,AACJ,AAAM,AACN,AAAU;;;;;;;;;KAjB+B;AAmBtC,UACH;AAAM,cADH,AAEH,AAAU;AAFZ;AAnB2C;AAuBvC,UACF;AAAM,cADJ,AAEF,AAAU;AAFZ;AAvB2C;UA2B/B,AACV;AAAM,cADI,AAEV,AAAU;AAFZ;AA3B2C;UA+BlC,AACP;AAAM,cADC,AAEP,AAAU;AAFZ;AA/B2C;UAmCnC,AACN;AAAM,cADA,AAEN,AAAU,AACV;AAHF;;UAKA;AAAU,cACR;AADQ,AACF,kBADE,AAER,AAAU,AACV;AA3CyC,AAmCnC,AAGQ;;UAMZ,AAAI,AAAK,AAAU,AACjB;cAAA,AAAO,AAAI,AACZ;AAFD,AAEO,eAAI,AAAK,YAAT,AAAmB,AACxB;eAAO,UAAE;mBAAF,AAAgB,AAAI;AAA3B,gCACD;;;;AACD;;WAAA,AAAK,AACN;AAlDE,AAAqB,AAAiB,AAwCjC;AAGG,AAAY,AACrB;AAzCF","file":"/lib/collections/schemas/notifications.js.map","sourcesContent":["import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\n\n\nexport const Notification = new SimpleSchema({\n  message: {\n    type: String,\n    optional: false\n  },\n  /**\n   * Type              Message(This would be the corresponding message)\n   * ----------------| -----------------------------------------------\n   * orderCancelled  | \"Your order was canceled.\"\n   * forAdmin:       | \"You have a new order.\"\n   * newOrder:       | \"Your order is being processed.\"\n   * orderDelivered: | \"Your order has been delivered.\"\n   * orderAccepted:  | \"Your order has been accepted.\"\n   * orderShipped:   | \"Your order has been shipped.\"\n   */\n  type: {\n    type: String,\n    optional: false\n  },\n  url: {\n    type: String,\n    optional: false\n  },\n  to: {\n    type: String,\n    optional: false\n  },\n  hasDetails: {\n    type: Boolean,\n    optional: false\n  },\n  details: {\n    type: String,\n    optional: true\n  },\n  status: {\n    type: String,\n    optional: false,\n    defaultValue: \"unread\"\n  },\n  timeSent: {\n    type: Date,\n    optional: false,\n    autoValue: function () {\n      if (this.isInsert) {\n        return new Date();\n      } else if (this.isUpsert) {\n        return { $setOnInsert: new Date() };\n      }\n      this.unset();\n    }\n  }\n});\n"]},"hash":"4adc90f394888f1ec9b2984cd2e13500bf1ea8e7"}
