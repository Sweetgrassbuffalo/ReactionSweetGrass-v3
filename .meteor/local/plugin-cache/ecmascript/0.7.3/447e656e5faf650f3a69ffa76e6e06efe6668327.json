{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","typeof","extends","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"react-dom","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"ReactDOM"}]},{"source":"meteor/blaze","imported":["Blaze"],"specifiers":[{"kind":"named","imported":"Blaze","local":"Blaze"}]},{"source":"meteor/reactive-var","imported":["ReactiveVar"],"specifiers":[{"kind":"named","imported":"ReactiveVar","local":"ReactiveVar"}]},{"source":"meteor/templating","imported":["Template"],"specifiers":[{"kind":"named","imported":"Template","local":"Template"}]}],"exports":{"exported":["blazeToReact"],"specifiers":[{"kind":"local","local":"blazeToReact","exported":"blazeToReact"}]}}},"options":{"filename":"/packages/gadicc:blaze-react-component/blaze-react-component-client.js","filenameRelative":"/packages/gadicc:blaze-react-component/blaze-react-component-client.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/gadicc:blaze-react-component/blaze-react-component-client.js.map","sourceFileName":"/packages/gadicc:blaze-react-component/blaze-react-component-client.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"blaze-react-component-client"},"ignored":false,"code":"var _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _typeof2 = require(\"babel-runtime/helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.export({\n  blazeToReact: function () {\n    return blazeToReact;\n  }\n});\nvar React = void 0,\n    Component = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  }\n}, 0);\nvar ReactDOM = void 0;\nmodule.importSync(\"react-dom\", {\n  \"default\": function (v) {\n    ReactDOM = v;\n  }\n}, 1);\nvar Blaze = void 0;\nmodule.importSync(\"meteor/blaze\", {\n  Blaze: function (v) {\n    Blaze = v;\n  }\n}, 2);\nvar ReactiveVar = void 0;\nmodule.importSync(\"meteor/reactive-var\", {\n  ReactiveVar: function (v) {\n    ReactiveVar = v;\n  }\n}, 3);\nvar Template = void 0;\nmodule.importSync(\"meteor/templating\", {\n  Template: function (v) {\n    Template = v;\n  }\n}, 4);\n\nvar BlazeComponent = function (_Component) {\n  (0, _inherits3.default)(BlazeComponent, _Component);\n\n  function BlazeComponent() {\n    (0, _classCallCheck3.default)(this, BlazeComponent);\n    return (0, _possibleConstructorReturn3.default)(this, _Component.apply(this, arguments));\n  }\n\n  BlazeComponent.prototype.componentDidMount = function () {\n    function componentDidMount() {\n      this.renderBlazeView();\n    }\n\n    return componentDidMount;\n  }();\n\n  BlazeComponent.prototype.componentDidUpdate = function () {\n    function componentDidUpdate(prevProps) {\n      if (prevProps.template != this.props.template) {\n        Blaze.remove(this._blazeView);\n        this.renderBlazeView();\n      }\n    }\n\n    return componentDidUpdate;\n  }();\n\n  BlazeComponent.prototype.renderBlazeView = function () {\n    function renderBlazeView() {\n      var _this2 = this;\n\n      this._blazeData = new ReactiveVar(_.omit(this.props, 'template'));\n      var template = void 0,\n          tArg = this.props.template;\n\n      if (typeof tArg === 'string') {\n        template = Template[tArg];\n        if (!template) throw new Error(\"No Template[\\\"\" + tArg + \"\\\"] exists.  If this template \" + \"originates in your app, make sure you have the `templating` \" + \"package installed (and not, for e.g. `static-html`)\");\n      } else if (tArg instanceof Blaze.Template) {\n        template = tArg;\n      } else {\n        throw new Error(\"Invalid template= argument specified.  Expected \" + \"the string name of an existing Template, or the template \" + \"itself, instead got ''\" + (typeof tArg === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(tArg)) + \": \" + JSON.stringify(tArg));\n      }\n\n      this._blazeView = Blaze.renderWithData(template, function () {\n        return _this2._blazeData.get();\n      }, ReactDOM.findDOMNode(this._blazeRef));\n    }\n\n    return renderBlazeView;\n  }();\n\n  BlazeComponent.prototype.shouldComponentUpdate = function () {\n    function shouldComponentUpdate(nextProps) {\n      // Never call render() for props except template again; Blaze will do what's necessary.\n      return nextProps.template !== this.props.template;\n    }\n\n    return shouldComponentUpdate;\n  }();\n\n  BlazeComponent.prototype.componentWillReceiveProps = function () {\n    function componentWillReceiveProps(nextProps) {\n      this._blazeData.set(_.omit(nextProps, 'template'));\n    }\n\n    return componentWillReceiveProps;\n  }();\n\n  BlazeComponent.prototype.componentWillUnmount = function () {\n    function componentWillUnmount() {\n      Blaze.remove(this._blazeView);\n    }\n\n    return componentWillUnmount;\n  }();\n\n  BlazeComponent.prototype.render = function () {\n    function render() {\n      var _this3 = this;\n\n      return React.createElement(\"span\", {\n        className: this.props.className || '',\n        ref: function (c) {\n          return _this3._blazeRef = c;\n        }\n      });\n    }\n\n    return render;\n  }();\n\n  return BlazeComponent;\n}(Component);\n\nmodule.runModuleSetters(blazeToReact = function (template) {\n  return function (props) {\n    return React.createElement(BlazeComponent, (0, _extends3.default)({}, props, {\n      template: template\n    }));\n  };\n});\nmodule.export(\"default\", exports.default = BlazeComponent);","map":{"version":3,"sources":["/packages/gadicc:blaze-react-component/blaze-react-component-client.js"],"names":["module","export","blazeToReact","React","Component","importSync","v","ReactDOM","Blaze","ReactiveVar","Template","BlazeComponent","componentDidMount","renderBlazeView","componentDidUpdate","prevProps","template","props","remove","_blazeView","_blazeData","_","omit","tArg","Error","JSON","stringify","renderWithData","get","findDOMNode","_blazeRef","shouldComponentUpdate","nextProps","componentWillReceiveProps","set","componentWillUnmount","render","className","c","exports","default"],"mappings":"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","file":"/packages/gadicc:blaze-react-component/blaze-react-component-client.js.map","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Blaze } from 'meteor/blaze';\nimport { ReactiveVar } from 'meteor/reactive-var';\nimport { Template } from 'meteor/templating';\n\nclass BlazeComponent extends Component {\n\n  componentDidMount() {\n    this.renderBlazeView();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.template != this.props.template) {\n      Blaze.remove(this._blazeView);\n      this.renderBlazeView();\n    }\n  }\n\n  renderBlazeView() {\n    this._blazeData = new ReactiveVar(_.omit(this.props, 'template'));\n\n    let template, tArg = this.props.template;\n    if (typeof tArg === 'string') {\n      template = Template[tArg];\n      if (!template)\n        throw new Error(`No Template[\"${tArg}\"] exists.  If this template `\n          + \"originates in your app, make sure you have the `templating` \"\n          + \"package installed (and not, for e.g. `static-html`)\");\n    } else if (tArg instanceof Blaze.Template) {\n      template = tArg;\n    } else {\n        throw new Error(\"Invalid template= argument specified.  Expected \"\n          + \"the string name of an existing Template, or the template \"\n          + \"itself, instead got ''\" + typeof tArg + \": \"\n          + JSON.stringify(tArg));\n    }\n\n    this._blazeView = Blaze.renderWithData(\n      template,\n      () => this._blazeData.get(),\n      ReactDOM.findDOMNode(this._blazeRef)\n    );\n  }\n\n  shouldComponentUpdate(nextProps) {\n    // Never call render() for props except template again; Blaze will do what's necessary.\n    return nextProps.template !== this.props.template;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this._blazeData.set(_.omit(nextProps, 'template'));\n  }\n\n  componentWillUnmount() {\n    Blaze.remove(this._blazeView);\n  }\n\n  render() {\n    return ( <span className={this.props.className || ''} ref={(c) => this._blazeRef = c} /> );\n  }\n\n}\n\nblazeToReact = function(template) {\n  return (props) => <BlazeComponent {...props} template={template} />;\n}\n\nexport { blazeToReact };\nexport default BlazeComponent;\n"]},"hash":"447e656e5faf650f3a69ffa76e6e06efe6668327"}
