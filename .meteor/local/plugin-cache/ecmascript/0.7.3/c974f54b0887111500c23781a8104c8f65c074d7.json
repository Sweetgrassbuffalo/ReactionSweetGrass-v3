{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","createClass","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component","PropTypes"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"},{"kind":"named","imported":"PropTypes","local":"PropTypes"}]},{"source":"/imports/plugins/core/ui/client/components","imported":["Alert","Translation"],"specifiers":[{"kind":"named","imported":"Alert","local":"Alert"},{"kind":"named","imported":"Translation","local":"Translation"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/included/product-detail-simple/client/components/addToCartButton.js","filenameRelative":"/imports/plugins/included/product-detail-simple/client/components/addToCartButton.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/included/product-detail-simple/client/components/addToCartButton.js"],"names":["React","Component","PropTypes","Alert","Translation","AddToCartButton","hasVariants","Array","isArray","props","variants","length","handleCartQuantityChange","event","onCartQuantityChange","target","value","render","cartQuantity","onClick","onAddToCart","editable","propTypes","number","bool","func","arrayOf","object"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;IAAA;;OAA4C,WAA5C;;;;;;;;;;;;;;;;;;;;GACA,AAAS,AAAO,AAAmB,AAGnC,AAAM,AAAwB,AAAU,AACtC;;IAAA,AAAI,AAAc;;;;;;;;;;;;qLAGU,UAAD,AAAW,OACpC;UAAI,MAAA,AAAK,MAAT,AAAe,sBAAsB,AACnC;cAAA,AAAK,MAAL,AAAW,qBAAX,AAAgC,OAAO,MAAA,AAAM,OAA7C,AAAoD,AACrD;AACF;AAJD,AAMA;;;;sBAAS,AACP;UAAI,KAAJ,AAAS,aAAa,AACpB;AACE,AAAC,AAAI,AAAU;AACb,AAAC;;AAAD,AACE,uBADF,AACY,AACV,AAAG,AACH,AAAI,AACJ,AAAK,AACL,AAAS,AAAC,AAAK,AACf,AAAK,AACL,AAAM,AAAC,AAAK,AAAM;;AAEpB,AAAC,AACC,AAAU,AACV,AAAU,AACV,AAAQ,AAAC,AAAK,AAAM,AAAW,AAAK,AAAM;AAE1C,AAAC,uBAAD,AAAa,AAAa,AAAc,AAAQ,AAClD;AAAE,gBAAF,AACF,AAAE;AAlBJ,AAkBE,iBAEH;;2BAED,AAAI;AAAK,kBAAT,AAAI,AAAW,AAAY,AAAK,AAAgB,AAAO,AACrD;AACE,AAAC,mBAAD,WACE,AAAC,AAAY,AAAa,AAA6C,AAAQ,AACjF;;AAHF,AAGE,AAAE,AAEL;;;;2BACD,AAAO;AAAP,wDACD;;;;uBA1CqC,AA6CxC,AAAgB,AAAY,AAC1B;;;;AAD0B,AACZ,AAAU,AACxB,AAAU,AAAU,AACpB;;eAAa,MAHa,AAGH,wCACvB;AAJ0B,AAIJ,AAAU,AAChC;AAL0B,AAKjB,AAAU,AACnB;;8BAAU,AAAU;AAAV,AAAkB,0BAAlB,AAA4B;qBANxC,AAA4B,AAS5B,AAAe;;;;;;;;;;;;;qBApDX,AAAO,AAAc,AAAK,AAAM,AAAa,AAAK,AAAM,AAAS,AAAS,AAC3E;;AACD;;;EAFE,AAAO,AAAM;;;;;;;;;;OANV,OAAS,WAAhB,AAA2B,QAA3B","file":"/imports/plugins/included/product-detail-simple/client/components/addToCartButton.js.map","sourcesContent":["import React, { Component, PropTypes } from \"react\";\nimport { Alert, Translation } from \"/imports/plugins/core/ui/client/components\";\n\n\nclass AddToCartButton extends Component {\n  get hasVariants() {\n    return Array.isArray(this.props.variants) && this.props.variants.length > 0;\n  }\n  handleCartQuantityChange = (event) => {\n    if (this.props.onCartQuantityChange) {\n      this.props.onCartQuantityChange(event, event.target.value);\n    }\n  }\n\n  render() {\n    if (this.hasVariants) {\n      return (\n        <div className=\"pdp add-to-cart block\">\n          <input\n            className=\"form-control input-md\"\n            id=\"add-to-cart-quantity\"\n            min=\"1\"\n            name=\"addToCartQty\"\n            onChange={this.handleCartQuantityChange}\n            type=\"number\"\n            value={this.props.cartQuantity}\n          />\n          <button\n            className=\"input-group-addon add-to-cart-text js-add-to-cart\"\n            data-i18n=\"productDetail.addToCart\"\n            onClick={this.props.onClick || this.props.onAddToCart}\n          >\n            <Translation defaultValue=\"Add to cart\" i18nKey=\"productDetail.addToCart\" />\n          </button>\n        </div>\n      );\n    }\n\n    if (this.props.editable && this.hasVariants === false) {\n      return (\n        <Alert>\n          <Translation defaultValue=\"Add options to enable 'Add to Cart' button\" i18nkey=\"productVariant.addVariantOptions\" />\n        </Alert>\n      );\n    }\n    return null;\n  }\n}\n\nAddToCartButton.propTypes = {\n  cartQuantity: PropTypes.number,\n  editable: PropTypes.bool,\n  onAddToCart: PropTypes.func,\n  onCartQuantityChange: PropTypes.func,\n  onClick: PropTypes.func,\n  variants: PropTypes.arrayOf(PropTypes.object)\n};\n\nexport default AddToCartButton;\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/included/product-detail-simple/client/components/addToCartButton.js.map","sourceFileName":"/imports/plugins/included/product-detail-simple/client/components/addToCartButton.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"addToCartButton"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0,\n    Component = void 0,\n    PropTypes = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  },\n  PropTypes: function (v) {\n    PropTypes = v;\n  }\n}, 0);\nvar Alert = void 0,\n    Translation = void 0;\nmodule.importSync(\"/imports/plugins/core/ui/client/components\", {\n  Alert: function (v) {\n    Alert = v;\n  },\n  Translation: function (v) {\n    Translation = v;\n  }\n}, 1);\n\nvar AddToCartButton = function (_Component) {\n  (0, _inherits3.default)(AddToCartButton, _Component);\n\n  function AddToCartButton() {\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, AddToCartButton);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.handleCartQuantityChange = function (event) {\n      if (_this.props.onCartQuantityChange) {\n        _this.props.onCartQuantityChange(event, event.target.value);\n      }\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  AddToCartButton.prototype.render = function () {\n    function render() {\n      if (this.hasVariants) {\n        return React.createElement(\n          \"div\",\n          {\n            className: \"pdp add-to-cart block\"\n          },\n          React.createElement(\"input\", {\n            className: \"form-control input-md\",\n            id: \"add-to-cart-quantity\",\n            min: \"1\",\n            name: \"addToCartQty\",\n            onChange: this.handleCartQuantityChange,\n            type: \"number\",\n            value: this.props.cartQuantity\n          }),\n          React.createElement(\n            \"button\",\n            {\n              className: \"input-group-addon add-to-cart-text js-add-to-cart\",\n              \"data-i18n\": \"productDetail.addToCart\",\n              onClick: this.props.onClick || this.props.onAddToCart\n            },\n            React.createElement(Translation, {\n              defaultValue: \"Add to cart\",\n              i18nKey: \"productDetail.addToCart\"\n            })\n          )\n        );\n      }\n\n      if (this.props.editable && this.hasVariants === false) {\n        return React.createElement(\n          Alert,\n          null,\n          React.createElement(Translation, {\n            defaultValue: \"Add options to enable 'Add to Cart' button\",\n            i18nkey: \"productVariant.addVariantOptions\"\n          })\n        );\n      }\n\n      return null;\n    }\n\n    return render;\n  }();\n\n  (0, _createClass3.default)(AddToCartButton, [{\n    key: \"hasVariants\",\n    get: function () {\n      return Array.isArray(this.props.variants) && this.props.variants.length > 0;\n    }\n  }]);\n  return AddToCartButton;\n}(Component);\n\nAddToCartButton.propTypes = {\n  cartQuantity: PropTypes.number,\n  editable: PropTypes.bool,\n  onAddToCart: PropTypes.func,\n  onCartQuantityChange: PropTypes.func,\n  onClick: PropTypes.func,\n  variants: PropTypes.arrayOf(PropTypes.object)\n};\nmodule.export(\"default\", exports.default = AddToCartButton);","map":{"version":3,"sources":["/imports/plugins/included/product-detail-simple/client/components/addToCartButton.js"],"names":["React","Component","PropTypes","Alert","Translation","AddToCartButton","hasVariants","Array","isArray","props","variants","length","handleCartQuantityChange","event","onCartQuantityChange","target","value","render","cartQuantity","onClick","onAddToCart","editable","propTypes","number","bool","func","arrayOf","object"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;IAAA;;OAA4C,WAA5C;;;;;;;;;;;;;;;;;;;;GACA,AAAS,AAAO,AAAmB,AAGnC,AAAM,AAAwB,AAAU,AACtC;;IAAA,AAAI,AAAc;;;;;;;;;;;;qLAGU,UAAD,AAAW,OACpC;UAAI,MAAA,AAAK,MAAT,AAAe,sBAAsB,AACnC;cAAA,AAAK,MAAL,AAAW,qBAAX,AAAgC,OAAO,MAAA,AAAM,OAA7C,AAAoD,AACrD;AACF;AAJD,AAMA;;;;sBAAS,AACP;UAAI,KAAJ,AAAS,aAAa,AACpB;AACE,AAAC,AAAI,AAAU;AACb,AAAC;;AAAD,AACE,uBADF,AACY,AACV,AAAG,AACH,AAAI,AACJ,AAAK,AACL,AAAS,AAAC,AAAK,AACf,AAAK,AACL,AAAM,AAAC,AAAK,AAAM;;AAEpB,AAAC,AACC,AAAU,AACV,AAAU,AACV,AAAQ,AAAC,AAAK,AAAM,AAAW,AAAK,AAAM;AAE1C,AAAC,uBAAD,AAAa,AAAa,AAAc,AAAQ,AAClD;AAAE,gBAAF,AACF,AAAE;AAlBJ,AAkBE,iBAEH;;2BAED,AAAI;AAAK,kBAAT,AAAI,AAAW,AAAY,AAAK,AAAgB,AAAO,AACrD;AACE,AAAC,mBAAD,WACE,AAAC,AAAY,AAAa,AAA6C,AAAQ,AACjF;;AAHF,AAGE,AAAE,AAEL;;;;2BACD,AAAO;AAAP,wDACD;;;;uBA1CqC,AA6CxC,AAAgB,AAAY,AAC1B;;;;AAD0B,AACZ,AAAU,AACxB,AAAU,AAAU,AACpB;;eAAa,MAHa,AAGH,wCACvB;AAJ0B,AAIJ,AAAU,AAChC;AAL0B,AAKjB,AAAU,AACnB;;8BAAU,AAAU;AAAV,AAAkB,0BAAlB,AAA4B;qBANxC,AAA4B,AAS5B,AAAe;;;;;;;;;;;;;qBApDX,AAAO,AAAc,AAAK,AAAM,AAAa,AAAK,AAAM,AAAS,AAAS,AAC3E;;AACD;;;EAFE,AAAO,AAAM;;;;;;;;;;OANV,OAAS,WAAhB,AAA2B,QAA3B","file":"/imports/plugins/included/product-detail-simple/client/components/addToCartButton.js.map","sourcesContent":["import React, { Component, PropTypes } from \"react\";\nimport { Alert, Translation } from \"/imports/plugins/core/ui/client/components\";\n\n\nclass AddToCartButton extends Component {\n  get hasVariants() {\n    return Array.isArray(this.props.variants) && this.props.variants.length > 0;\n  }\n  handleCartQuantityChange = (event) => {\n    if (this.props.onCartQuantityChange) {\n      this.props.onCartQuantityChange(event, event.target.value);\n    }\n  }\n\n  render() {\n    if (this.hasVariants) {\n      return (\n        <div className=\"pdp add-to-cart block\">\n          <input\n            className=\"form-control input-md\"\n            id=\"add-to-cart-quantity\"\n            min=\"1\"\n            name=\"addToCartQty\"\n            onChange={this.handleCartQuantityChange}\n            type=\"number\"\n            value={this.props.cartQuantity}\n          />\n          <button\n            className=\"input-group-addon add-to-cart-text js-add-to-cart\"\n            data-i18n=\"productDetail.addToCart\"\n            onClick={this.props.onClick || this.props.onAddToCart}\n          >\n            <Translation defaultValue=\"Add to cart\" i18nKey=\"productDetail.addToCart\" />\n          </button>\n        </div>\n      );\n    }\n\n    if (this.props.editable && this.hasVariants === false) {\n      return (\n        <Alert>\n          <Translation defaultValue=\"Add options to enable 'Add to Cart' button\" i18nkey=\"productVariant.addVariantOptions\" />\n        </Alert>\n      );\n    }\n    return null;\n  }\n}\n\nAddToCartButton.propTypes = {\n  cartQuantity: PropTypes.number,\n  editable: PropTypes.bool,\n  onAddToCart: PropTypes.func,\n  onCartQuantityChange: PropTypes.func,\n  onClick: PropTypes.func,\n  variants: PropTypes.arrayOf(PropTypes.object)\n};\n\nexport default AddToCartButton;\n"]},"hash":"c974f54b0887111500c23781a8104c8f65c074d7"}
