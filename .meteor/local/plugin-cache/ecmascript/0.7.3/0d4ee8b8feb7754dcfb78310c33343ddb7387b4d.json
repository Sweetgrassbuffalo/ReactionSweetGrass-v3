{"metadata":{"usedHelpers":["typeof","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"/lib/collections","imported":["Cart"],"specifiers":[{"kind":"named","imported":"Cart","local":"Cart"}]},{"source":"meteor/session","imported":["Session"],"specifiers":[{"kind":"named","imported":"Session","local":"Session"}]},{"source":"meteor/templating","imported":["Template"],"specifiers":[{"kind":"named","imported":"Template","local":"Template"}]},{"source":"swiper","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Swiper"}]},{"source":"../../container/cartDrawerContainer","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"CartDrawerContainer"}]},{"source":"../../container/emptyCartContainer","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"EmptyCartDrawer"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/core/checkout/client/templates/cartDrawer/cartDrawer.js","filenameRelative":"/imports/plugins/core/checkout/client/templates/cartDrawer/cartDrawer.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/core/checkout/client/templates/cartDrawer/cartDrawer.js"],"names":["Cart","Session","Template","Swiper","CartDrawerContainer","EmptyCartDrawer","cartDrawer","helpers","displayCartDrawer","equals","storedCart","findOne","count","items","quantity","emptyCartDrawer","openCartDrawer","onRendered","swiper","$","fadeIn","direction","setWrapperSize","loop","grabCursor","slidesPerView","wrapperClass","slideClass","slideActiveClass","pagination","paginationClickable"],"mappings":";;;;;;AAAA;AAAA,AAAS,OAAY,WAArB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GACA,AAAS,AAAe,AACxB,AAAS,AAAgB,AACzB,AAAmB,AACnB,AAAO,AAAyB,A,AADzB,AAEP,AAAO,AAAqB,AAC5B;AAOA,AAAS,AAAW,AAAQ,AAC1B,AAAmB,AAAY;;;;;YACxB,AAAQ,WAAR,AAAe;AAClB,AAAO,iCACR;;aAED;AAAA,AAAM,AAAa,AAAK,AACxB,AAAI,AAAQ;;0BAEZ;QAAI,AAAO,QAAX,AAAI,AAAsB,AAAY,AAAW,AAAO,AACtD,AAAK,AAAM,AAAS,AAAW,AAAO,AACpC;;gBAAS,AAAM,kFAAf,8BACD;;AACF;;;;;;;;;;;;;AAED;AAAA,AAAI,AAAU,AAAG,AACf,AAAO,AAAS,AACjB;;;sBACD;AAAA,AAAO,AAAS,AACjB;;oBAnBH,AAA4B;AAsB5B,A;AApBI,AAAK,AAA8B,AAAO,AACxC,CADF,AAAI,GAwBR,AAAS,AAAe,AAAW,AAAY,AAC7C;;;;;AAKA,AAAI,AAEJ,AAAE,AAA0B,AAAO,AAAM,AACvC,AAAI,AAAC,AAAQ,AACX,AAAS,AAAI,AAAO,AAAiC,AACnD,AAAW,AACX;;;SAFmD,AAEnC,AAChB,AAAM,AACN;IAJmD,AAIvC,6CACZ;iBALmD,AAKpC,AACf;mBAAc,OANqC;mBAAA,AAOvC,AACZ;wBARmD,AAQjC,AAClB;cATmD,AASvC,AACZ;oBAVO,AAA4C,AAU9B;AAVvB,uBAYD;sBAdH,AAeC;oBAvBH,AAwBC;0BAED;AAAS,oBAAT,AAAwB,AAAQ,AAC9B;AAAsB,6BACpB,AAAO,AACR;AAZK;;AASwB;AAAhC,AAMA,AAAS,AAAgB,AAAW,AAAY;AAC9C,SAAO,AAAE;mCAGX;AAAS,WAAT,AAAyB,AAAQ,AAC/B;AAAkB,AAChB,AAAO,AACR;AAPH,AACE,AAAO,AAA4B,AACpC;gDAED,AAAiC","file":"/imports/plugins/core/checkout/client/templates/cartDrawer/cartDrawer.js.map","sourcesContent":["import { Cart } from \"/lib/collections\";\nimport { Session } from \"meteor/session\";\nimport { Template } from \"meteor/templating\";\nimport Swiper from \"swiper\";\nimport CartDrawerContainer from \"../../container/cartDrawerContainer\";\nimport EmptyCartDrawer from \"../../container/emptyCartContainer\";\n/**\n * cartDrawer helpers\n *\n * @provides displayCartDrawer\n * @returns  open or closed cart drawer template\n */\n\nTemplate.cartDrawer.helpers({\n  displayCartDrawer: function () {\n    if (!Session.equals(\"displayCart\", true)) {\n      return null;\n    }\n\n    const storedCart = Cart.findOne();\n    let count = 0;\n\n    if (typeof storedCart === \"object\" && storedCart.items) {\n      for (const items of storedCart.items) {\n        count += items.quantity;\n      }\n    }\n\n    if (count === 0) {\n      return Template.emptyCartDrawer;\n    }\n    return Template.openCartDrawer;\n  }\n});\n\n/**\n * openCartDrawer helpers\n *\n */\nTemplate.openCartDrawer.onRendered(function () {\n  /**\n   * Add swiper to openCartDrawer\n   *\n   */\n\n  let swiper;\n\n  $(\"#cart-drawer-container\").fadeIn(() => {\n    if (!swiper) {\n      swiper = new Swiper(\".cart-drawer-swiper-container\", {\n        direction: \"horizontal\",\n        setWrapperSize: true,\n        loop: false,\n        grabCursor: true,\n        slidesPerView: \"auto\",\n        wrapperClass: \"cart-drawer-swiper-wrapper\",\n        slideClass: \"cart-drawer-swiper-slide\",\n        slideActiveClass: \"cart-drawer-swiper-slide-active\",\n        pagination: \".cart-drawer-pagination\",\n        paginationClickable: true\n      });\n    }\n  });\n});\n\nTemplate.openCartDrawer.helpers({\n  CartDrawerContainer() {\n    return CartDrawerContainer;\n  }\n});\n\nTemplate.emptyCartDrawer.onRendered(function () {\n  return $(\"#cart-drawer-container\").fadeIn();\n});\n\nTemplate.emptyCartDrawer.helpers({\n  EmptyCartDrawer() {\n    return EmptyCartDrawer;\n  }\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/core/checkout/client/templates/cartDrawer/cartDrawer.js.map","sourceFileName":"/imports/plugins/core/checkout/client/templates/cartDrawer/cartDrawer.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"cartDrawer"},"ignored":false,"code":"var _typeof2 = require(\"babel-runtime/helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar Cart = void 0;\nmodule.importSync(\"/lib/collections\", {\n  Cart: function (v) {\n    Cart = v;\n  }\n}, 0);\nvar Session = void 0;\nmodule.importSync(\"meteor/session\", {\n  Session: function (v) {\n    Session = v;\n  }\n}, 1);\nvar Template = void 0;\nmodule.importSync(\"meteor/templating\", {\n  Template: function (v) {\n    Template = v;\n  }\n}, 2);\nvar Swiper = void 0;\nmodule.importSync(\"swiper\", {\n  \"default\": function (v) {\n    Swiper = v;\n  }\n}, 3);\nvar CartDrawerContainer = void 0;\nmodule.importSync(\"../../container/cartDrawerContainer\", {\n  \"default\": function (v) {\n    CartDrawerContainer = v;\n  }\n}, 4);\nvar EmptyCartDrawer = void 0;\nmodule.importSync(\"../../container/emptyCartContainer\", {\n  \"default\": function (v) {\n    EmptyCartDrawer = v;\n  }\n}, 5);\n/**\n * cartDrawer helpers\n *\n * @provides displayCartDrawer\n * @returns  open or closed cart drawer template\n */Template.cartDrawer.helpers({\n  displayCartDrawer: function () {\n    if (!Session.equals(\"displayCart\", true)) {\n      return null;\n    }\n\n    var storedCart = Cart.findOne();\n    var count = 0;\n\n    if ((typeof storedCart === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(storedCart)) === \"object\" && storedCart.items) {\n      for (var _iterator = storedCart.items, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var items = _ref;\n        count += items.quantity;\n      }\n    }\n\n    if (count === 0) {\n      return Template.emptyCartDrawer;\n    }\n\n    return Template.openCartDrawer;\n  }\n}); /**\n     * openCartDrawer helpers\n     *\n     */\nTemplate.openCartDrawer.onRendered(function () {\n  /**\n   * Add swiper to openCartDrawer\n   *\n   */var swiper = void 0;\n  $(\"#cart-drawer-container\").fadeIn(function () {\n    if (!swiper) {\n      swiper = new Swiper(\".cart-drawer-swiper-container\", {\n        direction: \"horizontal\",\n        setWrapperSize: true,\n        loop: false,\n        grabCursor: true,\n        slidesPerView: \"auto\",\n        wrapperClass: \"cart-drawer-swiper-wrapper\",\n        slideClass: \"cart-drawer-swiper-slide\",\n        slideActiveClass: \"cart-drawer-swiper-slide-active\",\n        pagination: \".cart-drawer-pagination\",\n        paginationClickable: true\n      });\n    }\n  });\n});\nTemplate.openCartDrawer.helpers({\n  CartDrawerContainer: function () {\n    return CartDrawerContainer;\n  }\n});\nTemplate.emptyCartDrawer.onRendered(function () {\n  return $(\"#cart-drawer-container\").fadeIn();\n});\nTemplate.emptyCartDrawer.helpers({\n  EmptyCartDrawer: function () {\n    return EmptyCartDrawer;\n  }\n});","map":{"version":3,"sources":["/imports/plugins/core/checkout/client/templates/cartDrawer/cartDrawer.js"],"names":["Cart","Session","Template","Swiper","CartDrawerContainer","EmptyCartDrawer","cartDrawer","helpers","displayCartDrawer","equals","storedCart","findOne","count","items","quantity","emptyCartDrawer","openCartDrawer","onRendered","swiper","$","fadeIn","direction","setWrapperSize","loop","grabCursor","slidesPerView","wrapperClass","slideClass","slideActiveClass","pagination","paginationClickable"],"mappings":";;;;;;AAAA;AAAA,AAAS,OAAY,WAArB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GACA,AAAS,AAAe,AACxB,AAAS,AAAgB,AACzB,AAAmB,AACnB,AAAO,AAAyB,A,AADzB,AAEP,AAAO,AAAqB,AAC5B;AAOA,AAAS,AAAW,AAAQ,AAC1B,AAAmB,AAAY;;;;;YACxB,AAAQ,WAAR,AAAe;AAClB,AAAO,iCACR;;aAED;AAAA,AAAM,AAAa,AAAK,AACxB,AAAI,AAAQ;;0BAEZ;QAAI,AAAO,QAAX,AAAI,AAAsB,AAAY,AAAW,AAAO,AACtD,AAAK,AAAM,AAAS,AAAW,AAAO,AACpC;;gBAAS,AAAM,kFAAf,8BACD;;AACF;;;;;;;;;;;;;AAED;AAAA,AAAI,AAAU,AAAG,AACf,AAAO,AAAS,AACjB;;;sBACD;AAAA,AAAO,AAAS,AACjB;;oBAnBH,AAA4B;AAsB5B,A;AApBI,AAAK,AAA8B,AAAO,AACxC,CADF,AAAI,GAwBR,AAAS,AAAe,AAAW,AAAY,AAC7C;;;;;AAKA,AAAI,AAEJ,AAAE,AAA0B,AAAO,AAAM,AACvC,AAAI,AAAC,AAAQ,AACX,AAAS,AAAI,AAAO,AAAiC,AACnD,AAAW,AACX;;;SAFmD,AAEnC,AAChB,AAAM,AACN;IAJmD,AAIvC,6CACZ;iBALmD,AAKpC,AACf;mBAAc,OANqC;mBAAA,AAOvC,AACZ;wBARmD,AAQjC,AAClB;cATmD,AASvC,AACZ;oBAVO,AAA4C,AAU9B;AAVvB,uBAYD;sBAdH,AAeC;oBAvBH,AAwBC;0BAED;AAAS,oBAAT,AAAwB,AAAQ,AAC9B;AAAsB,6BACpB,AAAO,AACR;AAZK;;AASwB;AAAhC,AAMA,AAAS,AAAgB,AAAW,AAAY;AAC9C,SAAO,AAAE;mCAGX;AAAS,WAAT,AAAyB,AAAQ,AAC/B;AAAkB,AAChB,AAAO,AACR;AAPH,AACE,AAAO,AAA4B,AACpC;gDAED,AAAiC","file":"/imports/plugins/core/checkout/client/templates/cartDrawer/cartDrawer.js.map","sourcesContent":["import { Cart } from \"/lib/collections\";\nimport { Session } from \"meteor/session\";\nimport { Template } from \"meteor/templating\";\nimport Swiper from \"swiper\";\nimport CartDrawerContainer from \"../../container/cartDrawerContainer\";\nimport EmptyCartDrawer from \"../../container/emptyCartContainer\";\n/**\n * cartDrawer helpers\n *\n * @provides displayCartDrawer\n * @returns  open or closed cart drawer template\n */\n\nTemplate.cartDrawer.helpers({\n  displayCartDrawer: function () {\n    if (!Session.equals(\"displayCart\", true)) {\n      return null;\n    }\n\n    const storedCart = Cart.findOne();\n    let count = 0;\n\n    if (typeof storedCart === \"object\" && storedCart.items) {\n      for (const items of storedCart.items) {\n        count += items.quantity;\n      }\n    }\n\n    if (count === 0) {\n      return Template.emptyCartDrawer;\n    }\n    return Template.openCartDrawer;\n  }\n});\n\n/**\n * openCartDrawer helpers\n *\n */\nTemplate.openCartDrawer.onRendered(function () {\n  /**\n   * Add swiper to openCartDrawer\n   *\n   */\n\n  let swiper;\n\n  $(\"#cart-drawer-container\").fadeIn(() => {\n    if (!swiper) {\n      swiper = new Swiper(\".cart-drawer-swiper-container\", {\n        direction: \"horizontal\",\n        setWrapperSize: true,\n        loop: false,\n        grabCursor: true,\n        slidesPerView: \"auto\",\n        wrapperClass: \"cart-drawer-swiper-wrapper\",\n        slideClass: \"cart-drawer-swiper-slide\",\n        slideActiveClass: \"cart-drawer-swiper-slide-active\",\n        pagination: \".cart-drawer-pagination\",\n        paginationClickable: true\n      });\n    }\n  });\n});\n\nTemplate.openCartDrawer.helpers({\n  CartDrawerContainer() {\n    return CartDrawerContainer;\n  }\n});\n\nTemplate.emptyCartDrawer.onRendered(function () {\n  return $(\"#cart-drawer-container\").fadeIn();\n});\n\nTemplate.emptyCartDrawer.helpers({\n  EmptyCartDrawer() {\n    return EmptyCartDrawer;\n  }\n});\n"]},"hash":"0d4ee8b8feb7754dcfb78310c33343ddb7387b4d"}
