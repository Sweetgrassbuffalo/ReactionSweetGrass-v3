{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/aldeed:simple-schema","imported":["SimpleSchema"],"specifiers":[{"kind":"named","imported":"SimpleSchema","local":"SimpleSchema"}]},{"source":"/lib/collections/schemas/registry","imported":["PackageConfig"],"specifiers":[{"kind":"named","imported":"PackageConfig","local":"PackageConfig"}]}],"exports":{"exported":["AuthNetPackageConfig","AuthNetPayment"],"specifiers":[{"kind":"local","local":"AuthNetPackageConfig","exported":"AuthNetPackageConfig"},{"kind":"local","local":"AuthNetPayment","exported":"AuthNetPayment"}]}}},"options":{"filename":"/imports/plugins/included/payments-authnet/lib/collections/schemas/package.js","filenameRelative":"/imports/plugins/included/payments-authnet/lib/collections/schemas/package.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/included/payments-authnet/lib/collections/schemas/package.js"],"names":["SimpleSchema","PackageConfig","AuthNetPackageConfig","type","Boolean","defaultValue","Array","label","String","allowedValues","min","AuthNetPayment","payerName","regEx","cardNumber","max","expireMonth","expireYear","cvv","messages"],"mappings":"AAAA,OAAS;AAAT,AAA6B;WAA7B;;;;;;;;;;;;;;;;;GACA,AAAS,AAAqB,AAC9B,AASO,AAAM,A,AAAb,AAAoC,AAAI,AAAa,AACnD,AAAe,AACb,AAAiB,AACf;AAAM,IADS;;UAIqB,AACpC;AADoC,AAC9B,kBANK,AAKyB,AAEpC,AAAO;AAFT;;UAIwC,AACtC;AAAM,WAVK,AAS2B,AAEtC,AAAe,AAAC,AAAa,AAAgB,AAAW;AAF1D;;UAImB,AACjB;AADiB,AACX,4DADW,AAEjB,AAAO,AACP;AAHF;AAGO;UAEP;WAA4B,AAC1B;AAAM,SADoB,AAE1B,AAAO,AACP;AArBW,AAaM;AAQZ;UAtBJ,AAA6B,AAAiB,AACpC;WA0BjB;AAAO,SAAM,AAAiB,AAAI,AAAa,AAC7C,AAAW,AACT,AAAM,AACN,AAAO,AACP,AAAO;AAZqB;AAlBf,AACI,AAED,CAAd;;;UA6BQ,AACJ,AACN;WAFU,AAEH,AACP;AAAK,WAHK,AAIV,AAAK;AAJK,AACV;AAP2C;UAYhC,AACX;AAAM,WADK,AAEX;SAFW,AAEJ,AACP;SAf2C,AAYhC,AAGN,AAEP;AALA;AAKY;UAAA,AACJ,AACN;WAFU,AAEH,AACP;SApB2C,AAiBjC,AAGL,AAEP;AAJE;AAIG;UAAA,AACG,AACN;WAFG,AAEI,AACP;SAzB0B,AAAiB,AAsBxC,AAGE;AAFL;AAvBG;UA6BP,AAAe,AAAS,AACtB;WADF,AAAwB,AACH;;AADrB;AAvBE","file":"/imports/plugins/included/payments-authnet/lib/collections/schemas/package.js.map","sourcesContent":["import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\nimport { PackageConfig } from \"/lib/collections/schemas/registry\";\n/**\n * Meteor.settings.authnet =\n *   mode: false (sandbox)\n *   api_id: \"\"\n *   transaction_key: \"\"\n *   see: https://developer.authnet.com/webapps/developer/docs/api/\n *   see: https://github.com/authnet/rest-api-sdk-nodejs\n */\n\nexport const AuthNetPackageConfig = new SimpleSchema([\n  PackageConfig, {\n    \"settings.mode\": {\n      type: Boolean,\n      defaultValue: false\n    },\n    \"settings.reaction-auth-net.support\": {\n      type: Array,\n      label: \"Payment provider supported methods\"\n    },\n    \"settings.reaction-auth-net.support.$\": {\n      type: String,\n      allowedValues: [\"Authorize\", \"De-authorize\", \"Capture\", \"Refund\"]\n    },\n    \"settings.api_id\": {\n      type: String,\n      label: \"API Login ID\",\n      min: 60\n    },\n    \"settings.transaction_key\": {\n      type: String,\n      label: \"Transaction Key\",\n      min: 60\n    }\n  }\n]);\n\nexport const AuthNetPayment = new SimpleSchema({\n  payerName: {\n    type: String,\n    label: \"Cardholder name\",\n    regEx: /[A-Z][a-zA-Z]*/\n  },\n  cardNumber: {\n    type: String,\n    label: \"Card number\",\n    min: 12,\n    max: 19\n  },\n  expireMonth: {\n    type: String,\n    label: \"Expiration month\",\n    max: 2\n  },\n  expireYear: {\n    type: String,\n    label: \"Expiration year\",\n    max: 4\n  },\n  cvv: {\n    type: String,\n    label: \"CVV\",\n    max: 4\n  }\n});\n\nAuthNetPayment.messages({\n  \"regEx payerName\": \"[label] must include both first and last name\"\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/included/payments-authnet/lib/collections/schemas/package.js.map","sourceFileName":"/imports/plugins/included/payments-authnet/lib/collections/schemas/package.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"package"},"ignored":false,"code":"module.export({\n  AuthNetPackageConfig: function () {\n    return AuthNetPackageConfig;\n  },\n  AuthNetPayment: function () {\n    return AuthNetPayment;\n  }\n});\nvar SimpleSchema = void 0;\nmodule.importSync(\"meteor/aldeed:simple-schema\", {\n  SimpleSchema: function (v) {\n    SimpleSchema = v;\n  }\n}, 0);\nvar PackageConfig = void 0;\nmodule.importSync(\"/lib/collections/schemas/registry\", {\n  PackageConfig: function (v) {\n    PackageConfig = v;\n  }\n}, 1);\nvar AuthNetPackageConfig = new SimpleSchema([PackageConfig, {\n  \"settings.mode\": {\n    type: Boolean,\n    defaultValue: false\n  },\n  \"settings.reaction-auth-net.support\": {\n    type: Array,\n    label: \"Payment provider supported methods\"\n  },\n  \"settings.reaction-auth-net.support.$\": {\n    type: String,\n    allowedValues: [\"Authorize\", \"De-authorize\", \"Capture\", \"Refund\"]\n  },\n  \"settings.api_id\": {\n    type: String,\n    label: \"API Login ID\",\n    min: 60\n  },\n  \"settings.transaction_key\": {\n    type: String,\n    label: \"Transaction Key\",\n    min: 60\n  }\n}]);\nvar AuthNetPayment = new SimpleSchema({\n  payerName: {\n    type: String,\n    label: \"Cardholder name\",\n    regEx: /[A-Z][a-zA-Z]*/\n  },\n  cardNumber: {\n    type: String,\n    label: \"Card number\",\n    min: 12,\n    max: 19\n  },\n  expireMonth: {\n    type: String,\n    label: \"Expiration month\",\n    max: 2\n  },\n  expireYear: {\n    type: String,\n    label: \"Expiration year\",\n    max: 4\n  },\n  cvv: {\n    type: String,\n    label: \"CVV\",\n    max: 4\n  }\n});\nAuthNetPayment.messages({\n  \"regEx payerName\": \"[label] must include both first and last name\"\n});","map":{"version":3,"sources":["/imports/plugins/included/payments-authnet/lib/collections/schemas/package.js"],"names":["SimpleSchema","PackageConfig","AuthNetPackageConfig","type","Boolean","defaultValue","Array","label","String","allowedValues","min","AuthNetPayment","payerName","regEx","cardNumber","max","expireMonth","expireYear","cvv","messages"],"mappings":"AAAA,OAAS;AAAT,AAA6B;WAA7B;;;;;;;;;;;;;;;;;GACA,AAAS,AAAqB,AAC9B,AASO,AAAM,A,AAAb,AAAoC,AAAI,AAAa,AACnD,AAAe,AACb,AAAiB,AACf;AAAM,IADS;;UAIqB,AACpC;AADoC,AAC9B,kBANK,AAKyB,AAEpC,AAAO;AAFT;;UAIwC,AACtC;AAAM,WAVK,AAS2B,AAEtC,AAAe,AAAC,AAAa,AAAgB,AAAW;AAF1D;;UAImB,AACjB;AADiB,AACX,4DADW,AAEjB,AAAO,AACP;AAHF;AAGO;UAEP;WAA4B,AAC1B;AAAM,SADoB,AAE1B,AAAO,AACP;AArBW,AAaM;AAQZ;UAtBJ,AAA6B,AAAiB,AACpC;WA0BjB;AAAO,SAAM,AAAiB,AAAI,AAAa,AAC7C,AAAW,AACT,AAAM,AACN,AAAO,AACP,AAAO;AAZqB;AAlBf,AACI,AAED,CAAd;;;UA6BQ,AACJ,AACN;WAFU,AAEH,AACP;AAAK,WAHK,AAIV,AAAK;AAJK,AACV;AAP2C;UAYhC,AACX;AAAM,WADK,AAEX;SAFW,AAEJ,AACP;SAf2C,AAYhC,AAGN,AAEP;AALA;AAKY;UAAA,AACJ,AACN;WAFU,AAEH,AACP;SApB2C,AAiBjC,AAGL,AAEP;AAJE;AAIG;UAAA,AACG,AACN;WAFG,AAEI,AACP;SAzB0B,AAAiB,AAsBxC,AAGE;AAFL;AAvBG;UA6BP,AAAe,AAAS,AACtB;WADF,AAAwB,AACH;;AADrB;AAvBE","file":"/imports/plugins/included/payments-authnet/lib/collections/schemas/package.js.map","sourcesContent":["import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\nimport { PackageConfig } from \"/lib/collections/schemas/registry\";\n/**\n * Meteor.settings.authnet =\n *   mode: false (sandbox)\n *   api_id: \"\"\n *   transaction_key: \"\"\n *   see: https://developer.authnet.com/webapps/developer/docs/api/\n *   see: https://github.com/authnet/rest-api-sdk-nodejs\n */\n\nexport const AuthNetPackageConfig = new SimpleSchema([\n  PackageConfig, {\n    \"settings.mode\": {\n      type: Boolean,\n      defaultValue: false\n    },\n    \"settings.reaction-auth-net.support\": {\n      type: Array,\n      label: \"Payment provider supported methods\"\n    },\n    \"settings.reaction-auth-net.support.$\": {\n      type: String,\n      allowedValues: [\"Authorize\", \"De-authorize\", \"Capture\", \"Refund\"]\n    },\n    \"settings.api_id\": {\n      type: String,\n      label: \"API Login ID\",\n      min: 60\n    },\n    \"settings.transaction_key\": {\n      type: String,\n      label: \"Transaction Key\",\n      min: 60\n    }\n  }\n]);\n\nexport const AuthNetPayment = new SimpleSchema({\n  payerName: {\n    type: String,\n    label: \"Cardholder name\",\n    regEx: /[A-Z][a-zA-Z]*/\n  },\n  cardNumber: {\n    type: String,\n    label: \"Card number\",\n    min: 12,\n    max: 19\n  },\n  expireMonth: {\n    type: String,\n    label: \"Expiration month\",\n    max: 2\n  },\n  expireYear: {\n    type: String,\n    label: \"Expiration year\",\n    max: 4\n  },\n  cvv: {\n    type: String,\n    label: \"CVV\",\n    max: 4\n  }\n});\n\nAuthNetPayment.messages({\n  \"regEx payerName\": \"[label] must include both first and last name\"\n});\n"]},"hash":"5672464a6e36ed52bfc91e0ded9c1b6b76ea2f4d"}
