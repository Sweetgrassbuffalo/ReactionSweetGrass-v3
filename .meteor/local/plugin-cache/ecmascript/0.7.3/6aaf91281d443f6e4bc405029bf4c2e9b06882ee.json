{"metadata":{"usedHelpers":["typeof","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"sortablejs","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Sortable"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/session","imported":["Session"],"specifiers":[{"kind":"named","imported":"Session","local":"Session"}]},{"source":"meteor/templating","imported":["Template"],"specifiers":[{"kind":"named","imported":"Template","local":"Template"}]},{"source":"/client/api","imported":["Reaction"],"specifiers":[{"kind":"named","imported":"Reaction","local":"Reaction"}]},{"source":"/lib/api","imported":["ReactionProduct"],"specifiers":[{"kind":"named","imported":"ReactionProduct","local":"ReactionProduct"}]},{"source":"/lib/collections","imported":["Products","Media"],"specifiers":[{"kind":"named","imported":"Products","local":"Products"},{"kind":"named","imported":"Media","local":"Media"}]},{"source":"/imports/plugins/core/ui/client/components","imported":["EditButton","VisibilityButton"],"specifiers":[{"kind":"named","imported":"EditButton","local":"EditButton"},{"kind":"named","imported":"VisibilityButton","local":"VisibilityButton"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/included/product-variant/client/templates/products/productDetail/variants/variantList/variantList.js","filenameRelative":"/imports/plugins/included/product-variant/client/templates/products/productDetail/variants/variantList/variantList.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/included/product-variant/client/templates/products/productDetail/variants/variantList/variantList.js"],"names":["Sortable","Meteor","Session","Template","Reaction","ReactionProduct","Products","Media","EditButton","VisibilityButton","variantIsSelected","variantId","current","selectedVariant","_id","ancestors","indexOf","variantIsInActionView","actionViewVariant","getActionView","data","isActionViewOpen","variantList","onRendered","instance","autorun","hasPermission","variantSort","$","sortable","create","group","handle","onUpdate","positions","toArray","map","element","getAttribute","defer","call","Tracker","flush","helpers","media","findOne","sort","FS","File","variants","inventoryTotal","getTopVariants","length","variant","inventoryManagement","qty","getVariantQuantity","inventoryPercentage","parseInt","title","inventoryWidth","a","b","index","childVariants","getVariants","optionTitle","type","push","ChildVariantEditButton","currentData","parentVariant","component","toggleOn","onClick","setCurrentVariant","set","showActionView","label","i18nKeyLabel","template","ChildVariantRevisionButton","isVisible","toggleVisibility","events","event","templateInstance","removeClass","target","addClass","Alerts","removeSeen","selectedProduct","Router","go"],"mappings":";;;;;;AAAA,IAAO;AAAP,OAAqB,WAArB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GACA,AAAS,AAAc,AACvB,AAAS,AAAe,AACxB,AAAS,AAAgB,AACzB,AAAS,AAAgB,AACzB,AAAS,AAAuB,AAChC,AAAS,AAAU,AAAa,AAChC,AAAS,AAAY,AAAwB;;AAE7C,SAAA,AAAS,kBAAT,AAA2B,WAAW,AACpC;MAAM,UAAU,gBAAhB,AAAgB,AAAgB;;4KAChC;AAAI,WAAJ,AAAI,AAAO,AAAY,AAAa,AAAc,AAAQ,AAAO,AAAC,AAAQ,AAAU,AAAQ,AAAa,AACvG;AAAA,AAAO,AACR;;SAED;AAAA,AAAO,AACR;;0CAED;MAAS,oBAAT,AAA+B,SAA/B,AAA0C,gBACxC,AAAM,AAAoB,AAAS,AAAgB;;yBAEnD;AAAA,AAAI,AAAmB,AACrB;gGACA;AAAA,AAAO,AAAkB,AAAc,AAAkB,AAAkB,AAAQ,AAAS,AAC7F;;SAED;A,AAAA,AAAO,AACR,AAED,EAIA,AAAS,AAAY,AAAW,AAAY;;;;AAC1C,AAAM,SAAW,YAAjB,uBAEA;MAAO,AAAK,WAAL,AAAa,AAAY,AAC9B,AAAI,AAAS,AAAc,AAAkB,AAC3C;sBAAoB,AAAE,YAAtB,AAAoB,AAAmB,AAEvC;QAAK,SAAL,AAAgB,cAAA,AAAS,AAAO,kBAAhB,AAA6B,AAC3C;UAAO,gBADoC,iBAAA,AAE3C,AAAQ;;eACG,AACT;gBAAM,AAAY,AAAS,AAAE,AAC1B,AACA,AAAI,AAAC,AAAY,AAChB;8BAAA,AAAO,AAAQ,AAAa,AAC7B;AAJH,AAAkB,qCAMlB,sBAAA,AAAO,AAAM,AAAY,AACvB,wBAAA,AAAO,AAAK,SADd,AACE,AAA+C,AAChD;wCAED;AAAA,AAAQ,AACT;mCAfH,AAAgB,AAA6B;2DAiB9C;A,AAxBL,AAGE,AAAO,AAsBN,AACF,AAGD;;AAGA;AAtBQ;AAsBR,AAAS,AAAY,AAAQ,AAC3B;AAAO,AAAY,AACjB,GA7BQ;AA6BF,AAAQ,AAAM,AAAQ,AAC1B,AAAsB,AAAK,AAC1B,IACD,AAAM,AACJ,AAAqB;;;AAJzB,AAAc,AAEX;SAMI,YAVkB,AAUzB,AAAO,AAAiB,AAAG,AAAO,AAAQ,AAC3C;;AACS,AAAY,iCACpB;AADF;AAEQ;6BACN,AAAI,AAAS,AAAQ,AACnB,AACA,AAAK,AAAM,AAAW,AAAU,AAC9B;AAJJ,AAAiB,AAAgB;AADjC,AAAI,AAAiB,AACrB;WAIQ,AAAQ,2BAAZ,AAAiC,QAC/B;AAAA,AAAM,AAAM,AAAgB,AAAmB;wBAC/C;QAAI,AAAO,iBAAX,AAAmB,AAAU,AAC3B;mBAAA,AAAkB,gBACnB;;;AAEJ;AATkB,AAUnB;;;;;;;;;;;;;;;uDACA;;AAAK,cAAM,OAAX,AAAsB,QAAtB,AAAgC,UAC9B;AAAM,AAAM,8BAAZ,AAAY,AAAgB,AAAmB,AAC/C;AAAA,AAAQ,AAAiB;AACzB;AAAA,AAAI,AAAQ,AAAuB,AAAgB,AACjD,OAPD,CAOC,AAAQ,AAAsB,AAAS,AAAM,AAAiB,AAAK,AACpE;;;AAFD,AAEO;AACL;;;;;;;;;;;;qDACA;kCACA;;YAAQ,SAAR,AAA8B,uBAA9B,gBACD;;eACD;AAAA,AAAI,AAAQ,AAAO,AACjB;AADF,AACE,AAAQ,AAAiB,AAAS,AAAQ,AACxC,AAAQ,AAAM,AAAQ,AACzB;AAAM,yCACL;AAAA,AAAQ,AAAiB,AAC1B;;4BA1BgB,AA2BlB,AACD;;eACA;AAAS,mBAAT,AAAc,AAAC,AAAG,AAAM,AAAE,iBAA1B,AAAwB,AAAU,AAAE,AAEpC;AAAA,AAAO,AACR;QACD;;;AAAA,AAAO;2BAhDkB,AAiD1B,AACD;;aAAe,AAAY,AACzB;AAAA,AAAM,AAAgB,AACtB;;AAAM,WAAN,AAAiB,AAAgB;AACjC;AAAI,iBAAJ,AAAI,AAAS,AAAS,YAAG,AACvB;QAAM,AAAU,gBAAhB,AAAgB,AAAgB;mCAEhC;;QAAI,AAAC,SAAL,AAAc,YACZ;UAAA,AAAO,0BACR;;oBAED;AAAI,eAAJ,AAAI,AAAQ,AAAU,AAAW,AAAG,AAClC;AAAA,AAAS,AAAI,AAAW,AACtB,AAAI,AAAO,AAAQ,AAAU,AAAO,AAClC,AAAQ,AAAU,AAAO,AAAQ,AACjC,AAAQ,AACR,AAAQ,AAAS,AAAa,AAC9B;;kBAAc,UAAd,AAAmB,cACpB;wCANH,AAOC;8CARH,AASC,YAAM,iCACL,eACA,eAAS,QAAT,AAAa,SAAW,aACtB;AAAI,AAAO,0BAAQ,KAAnB,AAAI,AAAO,AAAkB,AAAO,AAClC,AAAQ,AAAU,AAAW,AAAQ,AAAU,AAC/C,AAAQ,AAAU,AAAO,AAAQ,AAAU,AAC3C,AAAQ,AACR,AACA;AAAA,AAAc,AAAK,AACpB;AACF;AARD,aASD;;wCAED;AAAO,qBAAP,yBACD,gHAED,AAAO,MAAP,QArFyB,AAsF1B;+BACD;AAAkB,AAChB,AAAI;AAAJ,AAAI,AAAkB,AAAK,AAAM,AAC/B;AAAA,AAAO,AACR;;aAED;AA5FyB,AA4FzB,AAAO,AACR;;WACD;AAAyB,AACvB;AAAM,+BAAN,AAAgB,AAAS,AACzB;QAAM,kBAAgB,KAAS,MAA/B,AAAsB,AAAiB,AAAQ,AAAU,AAEzD;AAAO,aACL;AADK,AACM,AACX,AAAU,AAAsB,AAAQ;;WACxC;AAAU,AACR;AAAgB,sCAAhB,AAAkC,AAAQ,AAC1C;QAAA,AAAQ,UAAI,SAAZ,AAA8B,AAAc,AAAK;2DAEjD,AAAI,AAAS,AAAc,AAAkB,AAC3C;;iBAAwB,AACf,AACP;gBAAc,8BAFQ,AAGtB;2BAHsB,AAGZ,AACV;AAAM,kDAJgB;AAAxB,yDAMD,AACF;;;;mBAjHsB,AAmH1B;;sBACD;kBAA6B,AAC3B,AAAM,AAAU,AAAS,AACzB;AApBA,AAAO;AAsBP;AAAO,AACL,AAAW,AACX;AAhBI,AAAS,AAAe,AACtB;AAaD,AAEK,AAAQ;;QACR,mBACR,cADF,CACE,AAAgB,AAAiB,AAClC;;;iBAEJ;;2BA/HH,AAA6B,A,AAkI7B;;AAIA;AAdI,AAAO;AAcX,AAAS,AAAY,AAAO,AAC1B,AAAyB,AAAY,AACnC,AAAO,AAAO,AAAK,AAA0B,AAAK;AA9HlD,IA4HwB,AAGzB,AACD,AAAgC,AAAU,AAAO,AAAkB,AACjE,AAAiB,AAAE,AAA0B,AAAY,AACzD,AAAE,AAAM,AAAQ,AAAS;;;AACzB,SAAO,YAAP;AAEM,2BAAkB,YAAxB,AAAwB,AAAgB,AACxC;WAAS,OAAT,AAAgB,KAAhB,AAAmB,AAAW,+BAAE;AAAF,AAAU,AAAgB,AAAQ;AAAW,AAAK,qEAAlD;AAA9B,6DAEA;MAAO,cAAgB,SAAvB,AAAO,AAAkC,AAAK,AAC/C;WAbH,AAA4B;;;;;;;;AASxB","file":"/imports/plugins/included/product-variant/client/templates/products/productDetail/variants/variantList/variantList.js.map","sourcesContent":["import Sortable from \"sortablejs\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Session } from \"meteor/session\";\nimport { Template } from \"meteor/templating\";\nimport { Reaction } from \"/client/api\";\nimport { ReactionProduct } from \"/lib/api\";\nimport { Products, Media } from \"/lib/collections\";\nimport { EditButton, VisibilityButton } from \"/imports/plugins/core/ui/client/components\";\n\nfunction variantIsSelected(variantId) {\n  const current = ReactionProduct.selectedVariant();\n  if (typeof current === \"object\" && (variantId === current._id || ~current.ancestors.indexOf(variantId))) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction variantIsInActionView(variantId) {\n  const actionViewVariant = Reaction.getActionView().data;\n\n  if (actionViewVariant) {\n    // Check if the variant is selected, and also visible & selected in the action view\n    return variantIsSelected(variantId) && variantIsSelected(actionViewVariant._id) && Reaction.isActionViewOpen();\n  }\n\n  return false;\n}\n\n/**\n * variant onRendered\n */\n\nTemplate.variantList.onRendered(function () {\n  const instance = this;\n\n  return this.autorun(function () {\n    if (Reaction.hasPermission(\"createProduct\")) {\n      const variantSort = $(\".variant-list\")[0];\n\n      this.sortable = Sortable.create(variantSort, {\n        group: \"variant-list\",\n        handle: \".variant-list-item\",\n        onUpdate() {\n          const positions = instance.$(\".variant-list-item\")\n            .toArray()\n            .map((element) => {\n              return element.getAttribute(\"data-id\");\n            });\n\n          Meteor.defer(function () {\n            Meteor.call(\"products/updateVariantsPosition\", positions);\n          });\n\n          Tracker.flush();\n        }\n      });\n    }\n  });\n});\n\n\n/**\n * variantList helpers\n */\nTemplate.variantList.helpers({\n  media: function () {\n    const media = Media.findOne({\n      \"metadata.variantId\": this._id\n    }, {\n      sort: {\n        \"metadata.priority\": 1\n      }\n    });\n\n    return media instanceof FS.File ? media : false;\n  },\n  variants: function () {\n    let inventoryTotal = 0;\n    const variants = ReactionProduct.getTopVariants();\n    if (variants.length) {\n      // calculate inventory total for all variants\n      for (const variant of variants) {\n        if (variant.inventoryManagement) {\n          const qty = ReactionProduct.getVariantQuantity(variant);\n          if (typeof qty === \"number\") {\n            inventoryTotal += qty;\n          }\n        }\n      }\n      // calculate percentage of total inventory of this product\n      for (const variant of variants) {\n        const qty = ReactionProduct.getVariantQuantity(variant);\n        variant.inventoryTotal = inventoryTotal;\n        if (variant.inventoryManagement && inventoryTotal) {\n          variant.inventoryPercentage = parseInt(qty / inventoryTotal * 100, 10);\n        } else {\n          // for cases when sellers doesn't use inventory we should always show\n          // \"green\" progress bar\n          variant.inventoryPercentage = 100;\n        }\n        if (variant.title) {\n          variant.inventoryWidth = parseInt(variant.inventoryPercentage -\n            variant.title.length, 10);\n        } else {\n          variant.inventoryWidth = 0;\n        }\n      }\n      // sort variants in correct order\n      variants.sort((a, b) => a.index - b.index);\n\n      return variants;\n    }\n    return [];\n  },\n  childVariants: function () {\n    const childVariants = [];\n    const variants = ReactionProduct.getVariants();\n    if (variants.length > 0) {\n      const current = ReactionProduct.selectedVariant();\n\n      if (!current) {\n        return [];\n      }\n\n      if (current.ancestors.length === 1) {\n        variants.map(variant => {\n          if (typeof variant.ancestors[1] === \"string\" &&\n            variant.ancestors[1] === current._id &&\n            variant.optionTitle &&\n            variant.type !== \"inventory\") {\n            childVariants.push(variant);\n          }\n        });\n      } else {\n        // TODO not sure we need this part...\n        variants.map(variant => {\n          if (typeof variant.ancestors[1] === \"string\" &&\n            variant.ancestors.length === current.ancestors.length &&\n            variant.ancestors[1] === current.ancestors[1] &&\n            variant.optionTitle\n          ) {\n            childVariants.push(variant);\n          }\n        });\n      }\n\n      return childVariants;\n    }\n\n    return null;\n  },\n  selectedVariant() {\n    if (variantIsSelected(this._id)) {\n      return \"variant-detail-selected\";\n    }\n\n    return null;\n  },\n  ChildVariantEditButton() {\n    const variant = Template.currentData();\n    const parentVariant = Products.findOne(variant.ancestors[1]);\n\n    return {\n      component: EditButton,\n      toggleOn: variantIsInActionView(variant._id),\n      onClick() {\n        ReactionProduct.setCurrentVariant(variant._id);\n        Session.set(\"variant-form-\" + parentVariant._id, true);\n\n        if (Reaction.hasPermission(\"createProduct\")) {\n          Reaction.showActionView({\n            label: \"Edit Variant\",\n            i18nKeyLabel: \"productDetailEdit.editVariant\",\n            template: \"variantForm\",\n            data: parentVariant\n          });\n        }\n      }\n    };\n  },\n  ChildVariantRevisionButton() {\n    const variant = Template.currentData();\n    // const parentVariant = Products.findOne(variant.ancestors[1]);\n\n    return {\n      component: VisibilityButton,\n      toggleOn: variant.isVisible,\n      onClick() {\n        ReactionProduct.toggleVisibility(variant);\n      }\n    };\n  }\n});\n\n/**\n * variantList events\n */\n\nTemplate.variantList.events({\n  \"click #create-variant\": function () {\n    return Meteor.call(\"products/createVariant\", this._id);\n  },\n  \"click .variant-select-option\": function (event, templateInstance) {\n    templateInstance.$(\".variant-select-option\").removeClass(\"active\");\n    $(event.target).addClass(\"active\");\n    Alerts.removeSeen();\n\n    const selectedProduct = ReactionProduct.selectedProduct();\n    Reaction.Router.go(\"product\", { handle: selectedProduct.handle, variantId: this._id });\n\n    return ReactionProduct.setCurrentVariant(this._id);\n  }\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/included/product-variant/client/templates/products/productDetail/variants/variantList/variantList.js.map","sourceFileName":"/imports/plugins/included/product-variant/client/templates/products/productDetail/variants/variantList/variantList.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"variantList"},"ignored":false,"code":"var _typeof2 = require(\"babel-runtime/helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar Sortable = void 0;\nmodule.importSync(\"sortablejs\", {\n  \"default\": function (v) {\n    Sortable = v;\n  }\n}, 0);\nvar Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\nvar Session = void 0;\nmodule.importSync(\"meteor/session\", {\n  Session: function (v) {\n    Session = v;\n  }\n}, 2);\nvar Template = void 0;\nmodule.importSync(\"meteor/templating\", {\n  Template: function (v) {\n    Template = v;\n  }\n}, 3);\nvar Reaction = void 0;\nmodule.importSync(\"/client/api\", {\n  Reaction: function (v) {\n    Reaction = v;\n  }\n}, 4);\nvar ReactionProduct = void 0;\nmodule.importSync(\"/lib/api\", {\n  ReactionProduct: function (v) {\n    ReactionProduct = v;\n  }\n}, 5);\nvar Products = void 0,\n    Media = void 0;\nmodule.importSync(\"/lib/collections\", {\n  Products: function (v) {\n    Products = v;\n  },\n  Media: function (v) {\n    Media = v;\n  }\n}, 6);\nvar EditButton = void 0,\n    VisibilityButton = void 0;\nmodule.importSync(\"/imports/plugins/core/ui/client/components\", {\n  EditButton: function (v) {\n    EditButton = v;\n  },\n  VisibilityButton: function (v) {\n    VisibilityButton = v;\n  }\n}, 7);\n\nfunction variantIsSelected(variantId) {\n  var current = ReactionProduct.selectedVariant();\n\n  if ((typeof current === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(current)) === \"object\" && (variantId === current._id || ~current.ancestors.indexOf(variantId))) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction variantIsInActionView(variantId) {\n  var actionViewVariant = Reaction.getActionView().data;\n\n  if (actionViewVariant) {\n    // Check if the variant is selected, and also visible & selected in the action view\n    return variantIsSelected(variantId) && variantIsSelected(actionViewVariant._id) && Reaction.isActionViewOpen();\n  }\n\n  return false;\n} /**\n   * variant onRendered\n   */\n\nTemplate.variantList.onRendered(function () {\n  var instance = this;\n  return this.autorun(function () {\n    if (Reaction.hasPermission(\"createProduct\")) {\n      var variantSort = $(\".variant-list\")[0];\n      this.sortable = Sortable.create(variantSort, {\n        group: \"variant-list\",\n        handle: \".variant-list-item\",\n        onUpdate: function () {\n          var positions = instance.$(\".variant-list-item\").toArray().map(function (element) {\n            return element.getAttribute(\"data-id\");\n          });\n          Meteor.defer(function () {\n            Meteor.call(\"products/updateVariantsPosition\", positions);\n          });\n          Tracker.flush();\n        }\n      });\n    }\n  });\n}); /**\n     * variantList helpers\n     */\nTemplate.variantList.helpers({\n  media: function () {\n    var media = Media.findOne({\n      \"metadata.variantId\": this._id\n    }, {\n      sort: {\n        \"metadata.priority\": 1\n      }\n    });\n    return media instanceof FS.File ? media : false;\n  },\n  variants: function () {\n    var inventoryTotal = 0;\n    var variants = ReactionProduct.getTopVariants();\n\n    if (variants.length) {\n      // calculate inventory total for all variants\n      for (var _iterator = variants, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var variant = _ref;\n\n        if (variant.inventoryManagement) {\n          var qty = ReactionProduct.getVariantQuantity(variant);\n\n          if (typeof qty === \"number\") {\n            inventoryTotal += qty;\n          }\n        }\n      } // calculate percentage of total inventory of this product\n\n\n      for (var _iterator2 = variants, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var _variant = _ref2;\n        var qty = ReactionProduct.getVariantQuantity(_variant);\n        _variant.inventoryTotal = inventoryTotal;\n\n        if (_variant.inventoryManagement && inventoryTotal) {\n          _variant.inventoryPercentage = parseInt(qty / inventoryTotal * 100, 10);\n        } else {\n          // for cases when sellers doesn't use inventory we should always show\n          // \"green\" progress bar\n          _variant.inventoryPercentage = 100;\n        }\n\n        if (_variant.title) {\n          _variant.inventoryWidth = parseInt(_variant.inventoryPercentage - _variant.title.length, 10);\n        } else {\n          _variant.inventoryWidth = 0;\n        }\n      } // sort variants in correct order\n\n\n      variants.sort(function (a, b) {\n        return a.index - b.index;\n      });\n      return variants;\n    }\n\n    return [];\n  },\n  childVariants: function () {\n    var childVariants = [];\n    var variants = ReactionProduct.getVariants();\n\n    if (variants.length > 0) {\n      var current = ReactionProduct.selectedVariant();\n\n      if (!current) {\n        return [];\n      }\n\n      if (current.ancestors.length === 1) {\n        variants.map(function (variant) {\n          if (typeof variant.ancestors[1] === \"string\" && variant.ancestors[1] === current._id && variant.optionTitle && variant.type !== \"inventory\") {\n            childVariants.push(variant);\n          }\n        });\n      } else {\n        // TODO not sure we need this part...\n        variants.map(function (variant) {\n          if (typeof variant.ancestors[1] === \"string\" && variant.ancestors.length === current.ancestors.length && variant.ancestors[1] === current.ancestors[1] && variant.optionTitle) {\n            childVariants.push(variant);\n          }\n        });\n      }\n\n      return childVariants;\n    }\n\n    return null;\n  },\n  selectedVariant: function () {\n    if (variantIsSelected(this._id)) {\n      return \"variant-detail-selected\";\n    }\n\n    return null;\n  },\n  ChildVariantEditButton: function () {\n    var variant = Template.currentData();\n    var parentVariant = Products.findOne(variant.ancestors[1]);\n    return {\n      component: EditButton,\n      toggleOn: variantIsInActionView(variant._id),\n      onClick: function () {\n        ReactionProduct.setCurrentVariant(variant._id);\n        Session.set(\"variant-form-\" + parentVariant._id, true);\n\n        if (Reaction.hasPermission(\"createProduct\")) {\n          Reaction.showActionView({\n            label: \"Edit Variant\",\n            i18nKeyLabel: \"productDetailEdit.editVariant\",\n            template: \"variantForm\",\n            data: parentVariant\n          });\n        }\n      }\n    };\n  },\n  ChildVariantRevisionButton: function () {\n    var variant = Template.currentData(); // const parentVariant = Products.findOne(variant.ancestors[1]);\n\n    return {\n      component: VisibilityButton,\n      toggleOn: variant.isVisible,\n      onClick: function () {\n        ReactionProduct.toggleVisibility(variant);\n      }\n    };\n  }\n}); /**\n     * variantList events\n     */\nTemplate.variantList.events({\n  \"click #create-variant\": function () {\n    return Meteor.call(\"products/createVariant\", this._id);\n  },\n  \"click .variant-select-option\": function (event, templateInstance) {\n    templateInstance.$(\".variant-select-option\").removeClass(\"active\");\n    $(event.target).addClass(\"active\");\n    Alerts.removeSeen();\n    var selectedProduct = ReactionProduct.selectedProduct();\n    Reaction.Router.go(\"product\", {\n      handle: selectedProduct.handle,\n      variantId: this._id\n    });\n    return ReactionProduct.setCurrentVariant(this._id);\n  }\n});","map":{"version":3,"sources":["/imports/plugins/included/product-variant/client/templates/products/productDetail/variants/variantList/variantList.js"],"names":["Sortable","Meteor","Session","Template","Reaction","ReactionProduct","Products","Media","EditButton","VisibilityButton","variantIsSelected","variantId","current","selectedVariant","_id","ancestors","indexOf","variantIsInActionView","actionViewVariant","getActionView","data","isActionViewOpen","variantList","onRendered","instance","autorun","hasPermission","variantSort","$","sortable","create","group","handle","onUpdate","positions","toArray","map","element","getAttribute","defer","call","Tracker","flush","helpers","media","findOne","sort","FS","File","variants","inventoryTotal","getTopVariants","length","variant","inventoryManagement","qty","getVariantQuantity","inventoryPercentage","parseInt","title","inventoryWidth","a","b","index","childVariants","getVariants","optionTitle","type","push","ChildVariantEditButton","currentData","parentVariant","component","toggleOn","onClick","setCurrentVariant","set","showActionView","label","i18nKeyLabel","template","ChildVariantRevisionButton","isVisible","toggleVisibility","events","event","templateInstance","removeClass","target","addClass","Alerts","removeSeen","selectedProduct","Router","go"],"mappings":"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","file":"/imports/plugins/included/product-variant/client/templates/products/productDetail/variants/variantList/variantList.js.map","sourcesContent":["import Sortable from \"sortablejs\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Session } from \"meteor/session\";\nimport { Template } from \"meteor/templating\";\nimport { Reaction } from \"/client/api\";\nimport { ReactionProduct } from \"/lib/api\";\nimport { Products, Media } from \"/lib/collections\";\nimport { EditButton, VisibilityButton } from \"/imports/plugins/core/ui/client/components\";\n\nfunction variantIsSelected(variantId) {\n  const current = ReactionProduct.selectedVariant();\n  if (typeof current === \"object\" && (variantId === current._id || ~current.ancestors.indexOf(variantId))) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction variantIsInActionView(variantId) {\n  const actionViewVariant = Reaction.getActionView().data;\n\n  if (actionViewVariant) {\n    // Check if the variant is selected, and also visible & selected in the action view\n    return variantIsSelected(variantId) && variantIsSelected(actionViewVariant._id) && Reaction.isActionViewOpen();\n  }\n\n  return false;\n}\n\n/**\n * variant onRendered\n */\n\nTemplate.variantList.onRendered(function () {\n  const instance = this;\n\n  return this.autorun(function () {\n    if (Reaction.hasPermission(\"createProduct\")) {\n      const variantSort = $(\".variant-list\")[0];\n\n      this.sortable = Sortable.create(variantSort, {\n        group: \"variant-list\",\n        handle: \".variant-list-item\",\n        onUpdate() {\n          const positions = instance.$(\".variant-list-item\")\n            .toArray()\n            .map((element) => {\n              return element.getAttribute(\"data-id\");\n            });\n\n          Meteor.defer(function () {\n            Meteor.call(\"products/updateVariantsPosition\", positions);\n          });\n\n          Tracker.flush();\n        }\n      });\n    }\n  });\n});\n\n\n/**\n * variantList helpers\n */\nTemplate.variantList.helpers({\n  media: function () {\n    const media = Media.findOne({\n      \"metadata.variantId\": this._id\n    }, {\n      sort: {\n        \"metadata.priority\": 1\n      }\n    });\n\n    return media instanceof FS.File ? media : false;\n  },\n  variants: function () {\n    let inventoryTotal = 0;\n    const variants = ReactionProduct.getTopVariants();\n    if (variants.length) {\n      // calculate inventory total for all variants\n      for (const variant of variants) {\n        if (variant.inventoryManagement) {\n          const qty = ReactionProduct.getVariantQuantity(variant);\n          if (typeof qty === \"number\") {\n            inventoryTotal += qty;\n          }\n        }\n      }\n      // calculate percentage of total inventory of this product\n      for (const variant of variants) {\n        const qty = ReactionProduct.getVariantQuantity(variant);\n        variant.inventoryTotal = inventoryTotal;\n        if (variant.inventoryManagement && inventoryTotal) {\n          variant.inventoryPercentage = parseInt(qty / inventoryTotal * 100, 10);\n        } else {\n          // for cases when sellers doesn't use inventory we should always show\n          // \"green\" progress bar\n          variant.inventoryPercentage = 100;\n        }\n        if (variant.title) {\n          variant.inventoryWidth = parseInt(variant.inventoryPercentage -\n            variant.title.length, 10);\n        } else {\n          variant.inventoryWidth = 0;\n        }\n      }\n      // sort variants in correct order\n      variants.sort((a, b) => a.index - b.index);\n\n      return variants;\n    }\n    return [];\n  },\n  childVariants: function () {\n    const childVariants = [];\n    const variants = ReactionProduct.getVariants();\n    if (variants.length > 0) {\n      const current = ReactionProduct.selectedVariant();\n\n      if (!current) {\n        return [];\n      }\n\n      if (current.ancestors.length === 1) {\n        variants.map(variant => {\n          if (typeof variant.ancestors[1] === \"string\" &&\n            variant.ancestors[1] === current._id &&\n            variant.optionTitle &&\n            variant.type !== \"inventory\") {\n            childVariants.push(variant);\n          }\n        });\n      } else {\n        // TODO not sure we need this part...\n        variants.map(variant => {\n          if (typeof variant.ancestors[1] === \"string\" &&\n            variant.ancestors.length === current.ancestors.length &&\n            variant.ancestors[1] === current.ancestors[1] &&\n            variant.optionTitle\n          ) {\n            childVariants.push(variant);\n          }\n        });\n      }\n\n      return childVariants;\n    }\n\n    return null;\n  },\n  selectedVariant() {\n    if (variantIsSelected(this._id)) {\n      return \"variant-detail-selected\";\n    }\n\n    return null;\n  },\n  ChildVariantEditButton() {\n    const variant = Template.currentData();\n    const parentVariant = Products.findOne(variant.ancestors[1]);\n\n    return {\n      component: EditButton,\n      toggleOn: variantIsInActionView(variant._id),\n      onClick() {\n        ReactionProduct.setCurrentVariant(variant._id);\n        Session.set(\"variant-form-\" + parentVariant._id, true);\n\n        if (Reaction.hasPermission(\"createProduct\")) {\n          Reaction.showActionView({\n            label: \"Edit Variant\",\n            i18nKeyLabel: \"productDetailEdit.editVariant\",\n            template: \"variantForm\",\n            data: parentVariant\n          });\n        }\n      }\n    };\n  },\n  ChildVariantRevisionButton() {\n    const variant = Template.currentData();\n    // const parentVariant = Products.findOne(variant.ancestors[1]);\n\n    return {\n      component: VisibilityButton,\n      toggleOn: variant.isVisible,\n      onClick() {\n        ReactionProduct.toggleVisibility(variant);\n      }\n    };\n  }\n});\n\n/**\n * variantList events\n */\n\nTemplate.variantList.events({\n  \"click #create-variant\": function () {\n    return Meteor.call(\"products/createVariant\", this._id);\n  },\n  \"click .variant-select-option\": function (event, templateInstance) {\n    templateInstance.$(\".variant-select-option\").removeClass(\"active\");\n    $(event.target).addClass(\"active\");\n    Alerts.removeSeen();\n\n    const selectedProduct = ReactionProduct.selectedProduct();\n    Reaction.Router.go(\"product\", { handle: selectedProduct.handle, variantId: this._id });\n\n    return ReactionProduct.setCurrentVariant(this._id);\n  }\n});\n"]},"hash":"6aaf91281d443f6e4bc405029bf4c2e9b06882ee"}
