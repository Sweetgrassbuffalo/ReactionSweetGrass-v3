{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"lodash/includes","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_includes"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/session","imported":["Session"],"specifiers":[{"kind":"named","imported":"Session","local":"Session"}]},{"source":"meteor/templating","imported":["Template"],"specifiers":[{"kind":"named","imported":"Template","local":"Template"}]},{"source":"meteor/tracker","imported":["Tracker"],"specifiers":[{"kind":"named","imported":"Tracker","local":"Tracker"}]},{"source":"meteor/jquery","imported":["$"],"specifiers":[{"kind":"named","imported":"$","local":"$"}]},{"source":"/client/modules/logger","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Logger"}]},{"source":"/lib/api","imported":["ReactionProduct"],"specifiers":[{"kind":"named","imported":"ReactionProduct","local":"ReactionProduct"}]},{"source":"/lib/collections","imported":["Media","Products"],"specifiers":[{"kind":"named","imported":"Media","local":"Media"},{"kind":"named","imported":"Products","local":"Products"}]},{"source":"/client/api","imported":["Reaction"],"specifiers":[{"kind":"named","imported":"Reaction","local":"Reaction"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/included/ui-search/client/templates/productSearch/productItem.js","filenameRelative":"/imports/plugins/included/ui-search/client/templates/productSearch/productItem.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/included/ui-search/client/templates/productSearch/productItem.js"],"names":["Meteor","Session","Template","Tracker","$","Logger","ReactionProduct","Media","Products","Reaction","productItem","helpers","controlProps","instance","product","data","onEditButtonClick","$checkbox","_id","set","prop","trigger","onPublishButtonClick","publishProduct","media","findOne","sort","uploadedAt","FS","File","additionalMedia","mediaArray","find","$gt","limit","count","weightClass","tag","getTag","positions","weight","isSelected","get","isMediumWeight","isLargeWeight","shouldShowAdditionalImages","events","event","preventDefault","view","currentTarget","dataset","eventValue","handle","__published","Router","go","delay","fadeOut","css","Blaze","remove","template","archiveProduct","position","updatedAt","Date","call","error","warn","Error","flush"],"mappings":"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","file":"/imports/plugins/included/ui-search/client/templates/productSearch/productItem.js.map","sourcesContent":["import _ from \"lodash\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Session } from \"meteor/session\";\nimport { Template } from \"meteor/templating\";\nimport { Tracker } from \"meteor/tracker\";\nimport { $ } from \"meteor/jquery\";\nimport Logger from \"/client/modules/logger\";\nimport { ReactionProduct } from \"/lib/api\";\nimport { Media, Products } from \"/lib/collections\";\nimport { Reaction } from \"/client/api\";\n\n/**\n * productGridItems helpers\n */\n\nTemplate.productItem.helpers({\n  controlProps() {\n    const instance = Template.instance();\n\n    return {\n      product: instance.data,\n      onEditButtonClick() {\n        const data = instance.data.product;\n        const $checkbox = instance.$(`input[type=checkbox][value=${data._id}]`);\n\n        Session.set(\"productGrid/selectedProducts\", []);\n        $checkbox.prop(\"checked\", true).trigger(\"change\");\n      },\n      onPublishButtonClick() {\n        ReactionProduct.publishProduct(instance.data);\n      }\n    };\n  },\n  media: function () {\n    const media = Media.findOne({\n      \"metadata.productId\": this.product._id,\n      \"metadata.priority\": 0,\n      \"metadata.toGrid\": 1\n    }, { sort: { uploadedAt: 1 } });\n\n    return media instanceof FS.File ? media : false;\n  },\n  additionalMedia: function () {\n    const mediaArray = Media.find({\n      \"metadata.productId\": this._id,\n      \"metadata.priority\": {\n        $gt: 0\n      },\n      \"metadata.toGrid\": 1\n    }, { limit: 3 });\n\n    if (mediaArray.count() > 1) {\n      return mediaArray;\n    }\n\n    return false;\n  },\n  weightClass: function () {\n    const tag = ReactionProduct.getTag();\n    const positions = this.positions && this.positions[tag] || {};\n    const weight = positions.weight || 0;\n    switch (weight) {\n      case 1:\n        return \"product-medium\";\n      case 2:\n        return \"product-large\";\n      default:\n        return \"product-small\";\n    }\n  },\n  isSelected: function () {\n    return _.includes(Session.get(\"productGrid/selectedProducts\"), this._id) ? \"active\" : \"\";\n  },\n  isMediumWeight: function () {\n    const tag = ReactionProduct.getTag();\n    const positions = this.positions && this.positions[tag] || {};\n    const weight = positions.weight || 0;\n\n    return weight === 1;\n  },\n  isLargeWeight: function () {\n    const tag = ReactionProduct.getTag();\n    const positions = this.positions && this.positions[tag] || {};\n    const weight = positions.weight || 0;\n\n    return weight === 3;\n  },\n  shouldShowAdditionalImages: function () {\n    if (this.isMediumWeight && this.mediaArray) {\n      return true;\n    }\n    return false;\n  },\n  // this is needed to get `pinned` from the item template\n  positions() {\n    const tag = ReactionProduct.getTag();\n    return this.positions && this.positions[tag] || {};\n  }\n});\n\n/**\n * productGridItems events\n */\n\nTemplate.productItem.events({\n  \"click [data-event-action=productClick]\": function (event) {\n    event.preventDefault();\n    const instance = Template.instance();\n    const view = instance.view;\n    const product = Products.findOne(event.currentTarget.dataset.eventValue);\n\n    let handle = product.handle;\n    if (product.__published) {\n      handle = product.__published.handle;\n    }\n\n    Reaction.Router.go(\"product\", {\n      handle: handle\n    });\n\n    $(\".js-search-modal\").delay(400).fadeOut(400, () => {\n      $(\"body\").css(\"overflow-y\", \"inherit\");\n      Blaze.remove(view);\n    });\n  },\n  \"click [data-event-action=selectSingleProduct]\": function (event, template) {\n    event.preventDefault();\n    const { data } = Template.instance();\n\n    const $checkbox = template.$(`input[type=checkbox][value=${data._id}]`);\n\n    Session.set(\"productGrid/selectedProducts\", []);\n    $checkbox.prop(\"checked\", true).trigger(\"change\");\n  },\n  \"click .publish-product\"(event, instance) {\n    ReactionProduct.publishProduct(instance.data);\n  },\n  \"click .delete-product\": function (event) {\n    event.preventDefault();\n    ReactionProduct.archiveProduct(this);\n  },\n  \"click .update-product-weight\": function (event) {\n    event.preventDefault();\n\n    const tag = ReactionProduct.getTag();\n    const positions = this.positions && this.positions[tag] || {};\n    let weight = positions.weight || 0;\n\n    if (weight < 2) {\n      weight++;\n    } else {\n      weight = 0;\n    }\n\n    const position = {\n      weight: weight,\n      updatedAt: new Date()\n    };\n    Meteor.call(\"products/updateProductPosition\", this._id, position, tag, error => {\n      if (error) {\n        Logger.warn(error);\n        throw new Meteor.Error(403, error);\n      }\n    });\n    return Tracker.flush();\n  }\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/included/ui-search/client/templates/productSearch/productItem.js.map","sourceFileName":"/imports/plugins/included/ui-search/client/templates/productSearch/productItem.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"productItem"},"ignored":false,"code":"var _includes = void 0;\n\nmodule.importSync(\"lodash/includes\", {\n  \"default\": function (v) {\n    _includes = v;\n  }\n}, 0);\nvar Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\nvar Session = void 0;\nmodule.importSync(\"meteor/session\", {\n  Session: function (v) {\n    Session = v;\n  }\n}, 2);\nvar Template = void 0;\nmodule.importSync(\"meteor/templating\", {\n  Template: function (v) {\n    Template = v;\n  }\n}, 3);\nvar Tracker = void 0;\nmodule.importSync(\"meteor/tracker\", {\n  Tracker: function (v) {\n    Tracker = v;\n  }\n}, 4);\nvar $ = void 0;\nmodule.importSync(\"meteor/jquery\", {\n  $: function (v) {\n    $ = v;\n  }\n}, 5);\nvar Logger = void 0;\nmodule.importSync(\"/client/modules/logger\", {\n  \"default\": function (v) {\n    Logger = v;\n  }\n}, 6);\nvar ReactionProduct = void 0;\nmodule.importSync(\"/lib/api\", {\n  ReactionProduct: function (v) {\n    ReactionProduct = v;\n  }\n}, 7);\nvar Media = void 0,\n    Products = void 0;\nmodule.importSync(\"/lib/collections\", {\n  Media: function (v) {\n    Media = v;\n  },\n  Products: function (v) {\n    Products = v;\n  }\n}, 8);\nvar Reaction = void 0;\nmodule.importSync(\"/client/api\", {\n  Reaction: function (v) {\n    Reaction = v;\n  }\n}, 9);\n/**\n * productGridItems helpers\n */Template.productItem.helpers({\n  controlProps: function () {\n    var instance = Template.instance();\n    return {\n      product: instance.data,\n      onEditButtonClick: function () {\n        var data = instance.data.product;\n        var $checkbox = instance.$(\"input[type=checkbox][value=\" + data._id + \"]\");\n        Session.set(\"productGrid/selectedProducts\", []);\n        $checkbox.prop(\"checked\", true).trigger(\"change\");\n      },\n      onPublishButtonClick: function () {\n        ReactionProduct.publishProduct(instance.data);\n      }\n    };\n  },\n  media: function () {\n    var media = Media.findOne({\n      \"metadata.productId\": this.product._id,\n      \"metadata.priority\": 0,\n      \"metadata.toGrid\": 1\n    }, {\n      sort: {\n        uploadedAt: 1\n      }\n    });\n    return media instanceof FS.File ? media : false;\n  },\n  additionalMedia: function () {\n    var mediaArray = Media.find({\n      \"metadata.productId\": this._id,\n      \"metadata.priority\": {\n        $gt: 0\n      },\n      \"metadata.toGrid\": 1\n    }, {\n      limit: 3\n    });\n\n    if (mediaArray.count() > 1) {\n      return mediaArray;\n    }\n\n    return false;\n  },\n  weightClass: function () {\n    var tag = ReactionProduct.getTag();\n    var positions = this.positions && this.positions[tag] || {};\n    var weight = positions.weight || 0;\n\n    switch (weight) {\n      case 1:\n        return \"product-medium\";\n\n      case 2:\n        return \"product-large\";\n\n      default:\n        return \"product-small\";\n    }\n  },\n  isSelected: function () {\n    return _includes(Session.get(\"productGrid/selectedProducts\"), this._id) ? \"active\" : \"\";\n  },\n  isMediumWeight: function () {\n    var tag = ReactionProduct.getTag();\n    var positions = this.positions && this.positions[tag] || {};\n    var weight = positions.weight || 0;\n    return weight === 1;\n  },\n  isLargeWeight: function () {\n    var tag = ReactionProduct.getTag();\n    var positions = this.positions && this.positions[tag] || {};\n    var weight = positions.weight || 0;\n    return weight === 3;\n  },\n  shouldShowAdditionalImages: function () {\n    if (this.isMediumWeight && this.mediaArray) {\n      return true;\n    }\n\n    return false;\n  },\n  // this is needed to get `pinned` from the item template\n  positions: function () {\n    var tag = ReactionProduct.getTag();\n    return this.positions && this.positions[tag] || {};\n  }\n}); /**\n     * productGridItems events\n     */\nTemplate.productItem.events({\n  \"click [data-event-action=productClick]\": function (event) {\n    event.preventDefault();\n    var instance = Template.instance();\n    var view = instance.view;\n    var product = Products.findOne(event.currentTarget.dataset.eventValue);\n    var handle = product.handle;\n\n    if (product.__published) {\n      handle = product.__published.handle;\n    }\n\n    Reaction.Router.go(\"product\", {\n      handle: handle\n    });\n    $(\".js-search-modal\").delay(400).fadeOut(400, function () {\n      $(\"body\").css(\"overflow-y\", \"inherit\");\n      Blaze.remove(view);\n    });\n  },\n  \"click [data-event-action=selectSingleProduct]\": function (event, template) {\n    event.preventDefault();\n\n    var _Template$instance = Template.instance(),\n        data = _Template$instance.data;\n\n    var $checkbox = template.$(\"input[type=checkbox][value=\" + data._id + \"]\");\n    Session.set(\"productGrid/selectedProducts\", []);\n    $checkbox.prop(\"checked\", true).trigger(\"change\");\n  },\n  \"click .publish-product\": function (event, instance) {\n    ReactionProduct.publishProduct(instance.data);\n  },\n  \"click .delete-product\": function (event) {\n    event.preventDefault();\n    ReactionProduct.archiveProduct(this);\n  },\n  \"click .update-product-weight\": function (event) {\n    event.preventDefault();\n    var tag = ReactionProduct.getTag();\n    var positions = this.positions && this.positions[tag] || {};\n    var weight = positions.weight || 0;\n\n    if (weight < 2) {\n      weight++;\n    } else {\n      weight = 0;\n    }\n\n    var position = {\n      weight: weight,\n      updatedAt: new Date()\n    };\n    Meteor.call(\"products/updateProductPosition\", this._id, position, tag, function (error) {\n      if (error) {\n        Logger.warn(error);\n        throw new Meteor.Error(403, error);\n      }\n    });\n    return Tracker.flush();\n  }\n});","map":{"version":3,"sources":["/imports/plugins/included/ui-search/client/templates/productSearch/productItem.js"],"names":["Meteor","Session","Template","Tracker","$","Logger","ReactionProduct","Media","Products","Reaction","productItem","helpers","controlProps","instance","product","data","onEditButtonClick","$checkbox","_id","set","prop","trigger","onPublishButtonClick","publishProduct","media","findOne","sort","uploadedAt","FS","File","additionalMedia","mediaArray","find","$gt","limit","count","weightClass","tag","getTag","positions","weight","isSelected","get","isMediumWeight","isLargeWeight","shouldShowAdditionalImages","events","event","preventDefault","view","currentTarget","dataset","eventValue","handle","__published","Router","go","delay","fadeOut","css","Blaze","remove","template","archiveProduct","position","updatedAt","Date","call","error","warn","Error","flush"],"mappings":"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","file":"/imports/plugins/included/ui-search/client/templates/productSearch/productItem.js.map","sourcesContent":["import _ from \"lodash\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Session } from \"meteor/session\";\nimport { Template } from \"meteor/templating\";\nimport { Tracker } from \"meteor/tracker\";\nimport { $ } from \"meteor/jquery\";\nimport Logger from \"/client/modules/logger\";\nimport { ReactionProduct } from \"/lib/api\";\nimport { Media, Products } from \"/lib/collections\";\nimport { Reaction } from \"/client/api\";\n\n/**\n * productGridItems helpers\n */\n\nTemplate.productItem.helpers({\n  controlProps() {\n    const instance = Template.instance();\n\n    return {\n      product: instance.data,\n      onEditButtonClick() {\n        const data = instance.data.product;\n        const $checkbox = instance.$(`input[type=checkbox][value=${data._id}]`);\n\n        Session.set(\"productGrid/selectedProducts\", []);\n        $checkbox.prop(\"checked\", true).trigger(\"change\");\n      },\n      onPublishButtonClick() {\n        ReactionProduct.publishProduct(instance.data);\n      }\n    };\n  },\n  media: function () {\n    const media = Media.findOne({\n      \"metadata.productId\": this.product._id,\n      \"metadata.priority\": 0,\n      \"metadata.toGrid\": 1\n    }, { sort: { uploadedAt: 1 } });\n\n    return media instanceof FS.File ? media : false;\n  },\n  additionalMedia: function () {\n    const mediaArray = Media.find({\n      \"metadata.productId\": this._id,\n      \"metadata.priority\": {\n        $gt: 0\n      },\n      \"metadata.toGrid\": 1\n    }, { limit: 3 });\n\n    if (mediaArray.count() > 1) {\n      return mediaArray;\n    }\n\n    return false;\n  },\n  weightClass: function () {\n    const tag = ReactionProduct.getTag();\n    const positions = this.positions && this.positions[tag] || {};\n    const weight = positions.weight || 0;\n    switch (weight) {\n      case 1:\n        return \"product-medium\";\n      case 2:\n        return \"product-large\";\n      default:\n        return \"product-small\";\n    }\n  },\n  isSelected: function () {\n    return _.includes(Session.get(\"productGrid/selectedProducts\"), this._id) ? \"active\" : \"\";\n  },\n  isMediumWeight: function () {\n    const tag = ReactionProduct.getTag();\n    const positions = this.positions && this.positions[tag] || {};\n    const weight = positions.weight || 0;\n\n    return weight === 1;\n  },\n  isLargeWeight: function () {\n    const tag = ReactionProduct.getTag();\n    const positions = this.positions && this.positions[tag] || {};\n    const weight = positions.weight || 0;\n\n    return weight === 3;\n  },\n  shouldShowAdditionalImages: function () {\n    if (this.isMediumWeight && this.mediaArray) {\n      return true;\n    }\n    return false;\n  },\n  // this is needed to get `pinned` from the item template\n  positions() {\n    const tag = ReactionProduct.getTag();\n    return this.positions && this.positions[tag] || {};\n  }\n});\n\n/**\n * productGridItems events\n */\n\nTemplate.productItem.events({\n  \"click [data-event-action=productClick]\": function (event) {\n    event.preventDefault();\n    const instance = Template.instance();\n    const view = instance.view;\n    const product = Products.findOne(event.currentTarget.dataset.eventValue);\n\n    let handle = product.handle;\n    if (product.__published) {\n      handle = product.__published.handle;\n    }\n\n    Reaction.Router.go(\"product\", {\n      handle: handle\n    });\n\n    $(\".js-search-modal\").delay(400).fadeOut(400, () => {\n      $(\"body\").css(\"overflow-y\", \"inherit\");\n      Blaze.remove(view);\n    });\n  },\n  \"click [data-event-action=selectSingleProduct]\": function (event, template) {\n    event.preventDefault();\n    const { data } = Template.instance();\n\n    const $checkbox = template.$(`input[type=checkbox][value=${data._id}]`);\n\n    Session.set(\"productGrid/selectedProducts\", []);\n    $checkbox.prop(\"checked\", true).trigger(\"change\");\n  },\n  \"click .publish-product\"(event, instance) {\n    ReactionProduct.publishProduct(instance.data);\n  },\n  \"click .delete-product\": function (event) {\n    event.preventDefault();\n    ReactionProduct.archiveProduct(this);\n  },\n  \"click .update-product-weight\": function (event) {\n    event.preventDefault();\n\n    const tag = ReactionProduct.getTag();\n    const positions = this.positions && this.positions[tag] || {};\n    let weight = positions.weight || 0;\n\n    if (weight < 2) {\n      weight++;\n    } else {\n      weight = 0;\n    }\n\n    const position = {\n      weight: weight,\n      updatedAt: new Date()\n    };\n    Meteor.call(\"products/updateProductPosition\", this._id, position, tag, error => {\n      if (error) {\n        Logger.warn(error);\n        throw new Meteor.Error(403, error);\n      }\n    });\n    return Tracker.flush();\n  }\n});\n"]},"hash":"03fbdcb7d802c3ae272c0189297ca5ebdd7bc20c"}
