{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"lodash/includes","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_includes"}]},{"source":"lodash/isArray","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_isArray"}]},{"source":"lodash/every","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_every"}]},{"source":"lodash/find","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_find"}]},{"source":"accounting-js","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"accounting"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/templating","imported":["Template"],"specifiers":[{"kind":"named","imported":"Template","local":"Template"}]},{"source":"/client/api","imported":["Reaction","i18next"],"specifiers":[{"kind":"named","imported":"Reaction","local":"Reaction"},{"kind":"named","imported":"i18next","local":"i18next"}]},{"source":"/lib/collections","imported":["Orders","Shops"],"specifiers":[{"kind":"named","imported":"Orders","local":"Orders"},{"kind":"named","imported":"Shops","local":"Shops"}]},{"source":"../containers/ordersActionContainer","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"OrdersActionContainer"}]},{"source":"../../lib/constants","imported":["PACKAGE_NAME","ORDER_LIST_FILTERS_PREFERENCE_NAME","ORDER_LIST_SELECTED_ORDER_PREFERENCE_NAME","DEFAULT_FILTER_NAME","orderFilters"],"specifiers":[{"kind":"named","imported":"PACKAGE_NAME","local":"PACKAGE_NAME"},{"kind":"named","imported":"ORDER_LIST_FILTERS_PREFERENCE_NAME","local":"ORDER_LIST_FILTERS_PREFERENCE_NAME"},{"kind":"named","imported":"ORDER_LIST_SELECTED_ORDER_PREFERENCE_NAME","local":"ORDER_LIST_SELECTED_ORDER_PREFERENCE_NAME"},{"kind":"named","imported":"DEFAULT_FILTER_NAME","local":"DEFAULT_FILTER_NAME"},{"kind":"named","imported":"orderFilters","local":"orderFilters"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/core/orders/client/templates/orders.js","filenameRelative":"/imports/plugins/core/orders/client/templates/orders.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/core/orders/client/templates/orders.js"],"names":["accounting","Meteor","Template","Reaction","i18next","Orders","Shops","OrdersActionContainer","PACKAGE_NAME","ORDER_LIST_FILTERS_PREFERENCE_NAME","ORDER_LIST_SELECTED_ORDER_PREFERENCE_NAME","DEFAULT_FILTER_NAME","orderFilters","OrderHelper","makeQuery","filter","query","$in","orders","onCreated","state","ReactiveDict","orderLimits","setDefault","new","processing","completed","set","filterName","data","name","setUserPreferences","autorun","getUserPreferences","limit","get","subscription","subscribe","ready","find","fetch","shop","findOne","currencies","currency","helpers","orderSubscription","instance","FilterComponent","orderFilter","component","onActionClick","itemProps","order","currencyFormat","hasMoreOrders","Counts","currentFilterLabel","foundFilter","Router","getQueryParam","label","activeClassname","orderId","events","event","preventDefault","ordersListItem","currentData","selectedOrderId","orderIsNew","workflow","status","_id","setActionViewDetail","i18nKeyLabel","props","size","template","isActionViewOpen","call","userId","type","prefix","getShopPrefix","url","sms","showActionView","orderStatusDetail","formatAmount","value","amount","toFixed","orderAge","moment","createdAt","fromNow","shipmentMethod","shipping","shipmentTracking","tracking","shipmentStatus","self","shipment","delivered","shipped","t","items","shipmentItem","fullItem","canceled"],"mappings":"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","file":"/imports/plugins/core/orders/client/templates/orders.js.map","sourcesContent":["import _ from \"lodash\";\nimport accounting from \"accounting-js\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Template } from \"meteor/templating\";\nimport { Reaction, i18next } from \"/client/api\";\nimport { Orders, Shops } from \"/lib/collections\";\nimport OrdersActionContainer from \"../containers/ordersActionContainer\";\nimport {\n  PACKAGE_NAME,\n  ORDER_LIST_FILTERS_PREFERENCE_NAME,\n  ORDER_LIST_SELECTED_ORDER_PREFERENCE_NAME,\n  DEFAULT_FILTER_NAME,\n  orderFilters\n} from \"../../lib/constants\";\n\nconst OrderHelper =  {\n  makeQuery(filter) {\n    let query = {};\n\n    switch (filter) {\n      // New orders\n      case \"new\":\n        query = {\n          \"workflow.status\": \"new\"\n        };\n        break;\n\n      // Orders that have yet to be captured & shipped\n      case \"processing\":\n        query = {\n          \"workflow.status\": \"coreOrderWorkflow/processing\"\n        };\n        break;\n\n      // Orders that have been shipped, based on if the items have been shipped\n      case \"shipped\":\n        query = {\n          \"items.workflow.status\": \"coreOrderItemWorkflow/shipped\"\n        };\n        break;\n\n      // Orders that are complete, including all items with complete status\n      case \"completed\":\n        query = {\n          \"workflow.status\": {\n            $in: [\"coreOrderWorkflow/completed\", \"coreOrderWorkflow/canceled\"]\n          },\n          \"items.workflow.status\": {\n            $in: [\"coreOrderItemWorkflow/completed\", \"coreOrderItemWorkflow/canceled\"]\n          }\n        };\n        break;\n\n      // Orders that have been captured, but not yet shipped\n      case \"captured\":\n        query = {\n          \"billing.paymentMethod.status\": \"completed\",\n          \"shipping.shipped\": false\n        };\n        break;\n\n      case \"canceled\":\n        query = {\n          \"workflow.status\": \"coreOrderWorkflow/canceled\"\n        };\n        break;\n\n      // Orders that have been refunded partially or fully\n      case \"refunded\":\n        query = {\n          \"billing.paymentMethod.status\": \"captured\",\n          \"shipping.shipped\": true\n        };\n        break;\n      default:\n    }\n\n    return query;\n  }\n};\n\nTemplate.orders.onCreated(function () {\n  this.state = new ReactiveDict();\n  this.orderLimits = new ReactiveDict();\n  this.state.setDefault({\n    orders: []\n  });\n  this.orderLimits.setDefault({\n    new: 10,\n    processing: 10,\n    completed: 10\n  });\n  this.state.set(\"count\", 0);\n\n  const filterName = this.data && this.data.filter && this.data.filter.name || \"new\";\n  Reaction.setUserPreferences(PACKAGE_NAME, ORDER_LIST_FILTERS_PREFERENCE_NAME, filterName);\n\n  this.autorun(() => {\n    const filter = Reaction.getUserPreferences(PACKAGE_NAME, ORDER_LIST_FILTERS_PREFERENCE_NAME, DEFAULT_FILTER_NAME);\n    const limit = this.orderLimits.get(filter);\n    const query = OrderHelper.makeQuery(filter);\n    this.subscription = this.subscribe(\"PaginatedOrders\", filter, limit);\n\n    if (this.subscription.ready()) {\n      const orders = Orders.find(query, { limit: limit }).fetch();\n      this.state.set(\"orders\", orders);\n    }\n  });\n\n  // Watch for updates to shop collection\n  this.autorun(() => {\n    const shop = Shops.findOne({});\n\n    // Update currency information, this is passed to child components containing\n    // Numeric inputs\n    this.state.set(\"currency\", shop.currencies[shop.currency]);\n  });\n});\n\n/**\n * orders helpers\n */\nTemplate.orders.helpers({\n  orderSubscription() {\n    return Template.instance().subscription.ready();\n  },\n  FilterComponent() {\n    const orderFilter = Reaction.getUserPreferences(PACKAGE_NAME, ORDER_LIST_FILTERS_PREFERENCE_NAME, DEFAULT_FILTER_NAME);\n    return {\n      component: OrdersActionContainer,\n      limit: Template.instance().orderLimits.get(orderFilter),\n      onActionClick(filter) {\n        Reaction.setUserPreferences(PACKAGE_NAME, ORDER_LIST_FILTERS_PREFERENCE_NAME, filter.name);\n        Reaction.setUserPreferences(PACKAGE_NAME, ORDER_LIST_SELECTED_ORDER_PREFERENCE_NAME, null);\n      }\n    };\n  },\n  itemProps(order) {\n    return {\n      order,\n      currencyFormat: Template.instance().state.get(\"currency\")\n    };\n  },\n\n  orders() {\n    return Template.instance().state.get(\"orders\") || false;\n  },\n\n  hasMoreOrders() {\n    const filter = Reaction.getUserPreferences(PACKAGE_NAME, ORDER_LIST_FILTERS_PREFERENCE_NAME, DEFAULT_FILTER_NAME);\n    const instance = Template.instance();\n\n    if (filter === \"new\") {\n      instance.state.set(\"count\", Counts.get(\"newOrder-count\"));\n    } else if (filter === \"processing\") {\n      instance.state.set(\"count\", Counts.get(\"processingOrder-count\"));\n    } else if (filter === \"completed\") {\n      instance.state.set(\"count\", Counts.get(\"completedOrder-count\"));\n    }\n\n    return instance.state.get(\"count\") > instance.orderLimits.get(filter);\n  },\n\n  currentFilterLabel() {\n    const foundFilter = _.find(orderFilters, (filter) => {\n      return filter.name === Reaction.Router.getQueryParam(\"filter\");\n    });\n\n    if (foundFilter) {\n      return foundFilter.label;\n    }\n\n    return \"\";\n  },\n  activeClassname(orderId) {\n    if (Reaction.Router.getQueryParam(\"_id\") === orderId) {\n      return \"panel-info\";\n    }\n    return \"panel-default\";\n  }\n});\n\n/**\n * orders events\n */\nTemplate.orders.events({\n  \"click .show-more-orders\": function (event, instance) {\n    event.preventDefault();\n    const filter = Reaction.getUserPreferences(PACKAGE_NAME, ORDER_LIST_FILTERS_PREFERENCE_NAME, DEFAULT_FILTER_NAME);\n    let limit = instance.orderLimits.get(filter);\n    limit += 10;\n    instance.orderLimits.set(filter, limit);\n  }\n});\n\nTemplate.ordersListItem.helpers({\n  order() {\n    return Template.currentData().order;\n  },\n  activeClassname(orderId) {\n    // const Reaction.setUserPreferences(PACKAGE_NAME, ORDER_LIST_FILTERS_PREFERENCE_NAME, filter.name)\n    const selectedOrderId = Reaction.getUserPreferences(PACKAGE_NAME, ORDER_LIST_SELECTED_ORDER_PREFERENCE_NAME);\n\n    if (selectedOrderId === orderId) {\n      return \"active\";\n    }\n    return \"\";\n  },\n\n  orderIsNew(order) {\n    return order.workflow.status === \"new\";\n  }\n});\n\nTemplate.ordersListItem.events({\n  \"click [data-event-action=selectOrder]\": function (event) {\n    event.preventDefault();\n    const instance = Template.instance();\n\n    // Set selected order in user preference\n    Reaction.setUserPreferences(PACKAGE_NAME, ORDER_LIST_SELECTED_ORDER_PREFERENCE_NAME, instance.data.order._id);\n\n    // Show the action view - detail view\n    Reaction.setActionViewDetail({\n      label: \"Order Details\",\n      i18nKeyLabel: \"orderWorkflow.orderDetails\",\n      data: {\n        order: instance.data.order\n      },\n      props: {\n        size: \"large\"\n      },\n      template: \"coreOrderWorkflow\"\n    });\n  },\n  \"click [data-event-action=startProcessingOrder]\": function (event) {\n    event.preventDefault();\n    const instance = Template.instance();\n    const isActionViewOpen = Reaction.isActionViewOpen();\n    const { order } = instance.data;\n\n\n    if (order.workflow.status === \"new\") {\n      Meteor.call(\"workflow/pushOrderWorkflow\", \"coreOrderWorkflow\", \"processing\", order);\n\n      // send notification to order owner\n      const userId = order.userId;\n      const type = \"orderAccepted\";\n      const prefix = Reaction.getShopPrefix();\n      const url = `${prefix}/notifications`;\n      const sms = true;\n      Meteor.call(\"notification/send\", userId, type, url, sms);\n    }\n\n    Reaction.setUserPreferences(PACKAGE_NAME, ORDER_LIST_FILTERS_PREFERENCE_NAME, \"processing\");\n\n    // toggle detail views\n    if (isActionViewOpen === false) {\n      Reaction.showActionView({\n        label: \"Order Details\",\n        i18nKeyLabel: \"orderWorkflow.orderDetails\",\n        data: { order },\n        props: {\n          size: \"large\"\n        },\n        template: \"coreOrderWorkflow\"\n      });\n    }\n  }\n});\n\n/**\n * orderStatusDetail\n *\n * order state tracking\n *\n * @returns orderStatusDetails\n */\n\nTemplate.orderStatusDetail.helpers({\n  // helper to format currency\n  formatAmount(value) {\n    let amount = value || \"\";\n    if (typeof value === \"number\") {\n      amount = accounting.toFixed(value, 2);\n    }\n    return amount;\n  },\n  // order age helper\n  orderAge: function () {\n    return moment(this.createdAt).fromNow();\n  },\n\n  shipmentMethod: function () {\n    return this.shipping[0].shipmentMethod;\n  },\n\n  shipmentTracking: function () {\n    if (this.shipping[0].tracking) {\n      return this.shipping[0].tracking;\n    }\n    return \"\";\n  },\n\n  shipmentStatus() {\n    const self = this;\n    const shipment = this.shipping[0];\n\n    // check first if it was delivered\n    if (shipment.delivered) {\n      return {\n        delivered: true,\n        shipped: true,\n        status: \"success\",\n        label: i18next.t(\"orderShipping.delivered\")\n      };\n    }\n\n    const shipped = _.every(shipment.items, (shipmentItem) => {\n      for (const fullItem of self.items) {\n        if (fullItem._id === shipmentItem._id) {\n          if (fullItem.workflow) {\n            if (_.isArray(fullItem.workflow.workflow)) {\n              return _.includes(fullItem.workflow.workflow, \"coreOrderItemWorkflow/completed\");\n            }\n          }\n        }\n      }\n    });\n\n    const canceled = _.every(shipment.items, (shipmentItem) => {\n      for (const fullItem of self.items) {\n        if (fullItem._id === shipmentItem._id) {\n          if (fullItem.workflow) {\n            return fullItem.workflow.status === \"coreOrderItemWorkflow/canceled\";\n          }\n        }\n      }\n    });\n\n    if (shipped) {\n      return {\n        delivered: false,\n        shipped: true,\n        status: \"success\",\n        label: i18next.t(\"orderShipping.shipped\")\n      };\n    }\n\n    if (canceled) {\n      return {\n        delivered: false,\n        shipped: false,\n        status: \"danger\",\n        label: i18next.t(\"order.canceledLabel\")\n      };\n    }\n\n    return {\n      delivered: false,\n      shipped: false,\n      status: \"info\",\n      label: i18next.t(\"orderShipping.notShipped\")\n    };\n  }\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/core/orders/client/templates/orders.js.map","sourceFileName":"/imports/plugins/core/orders/client/templates/orders.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"orders"},"ignored":false,"code":"var _includes = void 0;\n\nmodule.importSync(\"lodash/includes\", {\n  \"default\": function (v) {\n    _includes = v;\n  }\n}, 0);\n\nvar _isArray = void 0;\n\nmodule.importSync(\"lodash/isArray\", {\n  \"default\": function (v) {\n    _isArray = v;\n  }\n}, 1);\n\nvar _every = void 0;\n\nmodule.importSync(\"lodash/every\", {\n  \"default\": function (v) {\n    _every = v;\n  }\n}, 2);\n\nvar _find = void 0;\n\nmodule.importSync(\"lodash/find\", {\n  \"default\": function (v) {\n    _find = v;\n  }\n}, 3);\nvar accounting = void 0;\nmodule.importSync(\"accounting-js\", {\n  \"default\": function (v) {\n    accounting = v;\n  }\n}, 4);\nvar Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 5);\nvar Template = void 0;\nmodule.importSync(\"meteor/templating\", {\n  Template: function (v) {\n    Template = v;\n  }\n}, 6);\nvar Reaction = void 0,\n    i18next = void 0;\nmodule.importSync(\"/client/api\", {\n  Reaction: function (v) {\n    Reaction = v;\n  },\n  i18next: function (v) {\n    i18next = v;\n  }\n}, 7);\nvar Orders = void 0,\n    Shops = void 0;\nmodule.importSync(\"/lib/collections\", {\n  Orders: function (v) {\n    Orders = v;\n  },\n  Shops: function (v) {\n    Shops = v;\n  }\n}, 8);\nvar OrdersActionContainer = void 0;\nmodule.importSync(\"../containers/ordersActionContainer\", {\n  \"default\": function (v) {\n    OrdersActionContainer = v;\n  }\n}, 9);\nvar PACKAGE_NAME = void 0,\n    ORDER_LIST_FILTERS_PREFERENCE_NAME = void 0,\n    ORDER_LIST_SELECTED_ORDER_PREFERENCE_NAME = void 0,\n    DEFAULT_FILTER_NAME = void 0,\n    orderFilters = void 0;\nmodule.importSync(\"../../lib/constants\", {\n  PACKAGE_NAME: function (v) {\n    PACKAGE_NAME = v;\n  },\n  ORDER_LIST_FILTERS_PREFERENCE_NAME: function (v) {\n    ORDER_LIST_FILTERS_PREFERENCE_NAME = v;\n  },\n  ORDER_LIST_SELECTED_ORDER_PREFERENCE_NAME: function (v) {\n    ORDER_LIST_SELECTED_ORDER_PREFERENCE_NAME = v;\n  },\n  DEFAULT_FILTER_NAME: function (v) {\n    DEFAULT_FILTER_NAME = v;\n  },\n  orderFilters: function (v) {\n    orderFilters = v;\n  }\n}, 10);\nvar OrderHelper = {\n  makeQuery: function (filter) {\n    var query = {};\n\n    switch (filter) {\n      // New orders\n      case \"new\":\n        query = {\n          \"workflow.status\": \"new\"\n        };\n        break;\n      // Orders that have yet to be captured & shipped\n\n      case \"processing\":\n        query = {\n          \"workflow.status\": \"coreOrderWorkflow/processing\"\n        };\n        break;\n      // Orders that have been shipped, based on if the items have been shipped\n\n      case \"shipped\":\n        query = {\n          \"items.workflow.status\": \"coreOrderItemWorkflow/shipped\"\n        };\n        break;\n      // Orders that are complete, including all items with complete status\n\n      case \"completed\":\n        query = {\n          \"workflow.status\": {\n            $in: [\"coreOrderWorkflow/completed\", \"coreOrderWorkflow/canceled\"]\n          },\n          \"items.workflow.status\": {\n            $in: [\"coreOrderItemWorkflow/completed\", \"coreOrderItemWorkflow/canceled\"]\n          }\n        };\n        break;\n      // Orders that have been captured, but not yet shipped\n\n      case \"captured\":\n        query = {\n          \"billing.paymentMethod.status\": \"completed\",\n          \"shipping.shipped\": false\n        };\n        break;\n\n      case \"canceled\":\n        query = {\n          \"workflow.status\": \"coreOrderWorkflow/canceled\"\n        };\n        break;\n      // Orders that have been refunded partially or fully\n\n      case \"refunded\":\n        query = {\n          \"billing.paymentMethod.status\": \"captured\",\n          \"shipping.shipped\": true\n        };\n        break;\n\n      default:}\n\n    return query;\n  }\n};\nTemplate.orders.onCreated(function () {\n  var _this = this;\n\n  this.state = new ReactiveDict();\n  this.orderLimits = new ReactiveDict();\n  this.state.setDefault({\n    orders: []\n  });\n  this.orderLimits.setDefault({\n    \"new\": 10,\n    processing: 10,\n    completed: 10\n  });\n  this.state.set(\"count\", 0);\n  var filterName = this.data && this.data.filter && this.data.filter.name || \"new\";\n  Reaction.setUserPreferences(PACKAGE_NAME, ORDER_LIST_FILTERS_PREFERENCE_NAME, filterName);\n  this.autorun(function () {\n    var filter = Reaction.getUserPreferences(PACKAGE_NAME, ORDER_LIST_FILTERS_PREFERENCE_NAME, DEFAULT_FILTER_NAME);\n\n    var limit = _this.orderLimits.get(filter);\n\n    var query = OrderHelper.makeQuery(filter);\n    _this.subscription = _this.subscribe(\"PaginatedOrders\", filter, limit);\n\n    if (_this.subscription.ready()) {\n      var orders = Orders.find(query, {\n        limit: limit\n      }).fetch();\n\n      _this.state.set(\"orders\", orders);\n    }\n  }); // Watch for updates to shop collection\n\n  this.autorun(function () {\n    var shop = Shops.findOne({}); // Update currency information, this is passed to child components containing\n    // Numeric inputs\n\n    _this.state.set(\"currency\", shop.currencies[shop.currency]);\n  });\n}); /**\n     * orders helpers\n     */\nTemplate.orders.helpers({\n  orderSubscription: function () {\n    return Template.instance().subscription.ready();\n  },\n  FilterComponent: function () {\n    var orderFilter = Reaction.getUserPreferences(PACKAGE_NAME, ORDER_LIST_FILTERS_PREFERENCE_NAME, DEFAULT_FILTER_NAME);\n    return {\n      component: OrdersActionContainer,\n      limit: Template.instance().orderLimits.get(orderFilter),\n      onActionClick: function (filter) {\n        Reaction.setUserPreferences(PACKAGE_NAME, ORDER_LIST_FILTERS_PREFERENCE_NAME, filter.name);\n        Reaction.setUserPreferences(PACKAGE_NAME, ORDER_LIST_SELECTED_ORDER_PREFERENCE_NAME, null);\n      }\n    };\n  },\n  itemProps: function (order) {\n    return {\n      order: order,\n      currencyFormat: Template.instance().state.get(\"currency\")\n    };\n  },\n  orders: function () {\n    return Template.instance().state.get(\"orders\") || false;\n  },\n  hasMoreOrders: function () {\n    var filter = Reaction.getUserPreferences(PACKAGE_NAME, ORDER_LIST_FILTERS_PREFERENCE_NAME, DEFAULT_FILTER_NAME);\n    var instance = Template.instance();\n\n    if (filter === \"new\") {\n      instance.state.set(\"count\", Counts.get(\"newOrder-count\"));\n    } else if (filter === \"processing\") {\n      instance.state.set(\"count\", Counts.get(\"processingOrder-count\"));\n    } else if (filter === \"completed\") {\n      instance.state.set(\"count\", Counts.get(\"completedOrder-count\"));\n    }\n\n    return instance.state.get(\"count\") > instance.orderLimits.get(filter);\n  },\n  currentFilterLabel: function () {\n    var foundFilter = _find(orderFilters, function (filter) {\n      return filter.name === Reaction.Router.getQueryParam(\"filter\");\n    });\n\n    if (foundFilter) {\n      return foundFilter.label;\n    }\n\n    return \"\";\n  },\n  activeClassname: function (orderId) {\n    if (Reaction.Router.getQueryParam(\"_id\") === orderId) {\n      return \"panel-info\";\n    }\n\n    return \"panel-default\";\n  }\n}); /**\n     * orders events\n     */\nTemplate.orders.events({\n  \"click .show-more-orders\": function (event, instance) {\n    event.preventDefault();\n    var filter = Reaction.getUserPreferences(PACKAGE_NAME, ORDER_LIST_FILTERS_PREFERENCE_NAME, DEFAULT_FILTER_NAME);\n    var limit = instance.orderLimits.get(filter);\n    limit += 10;\n    instance.orderLimits.set(filter, limit);\n  }\n});\nTemplate.ordersListItem.helpers({\n  order: function () {\n    return Template.currentData().order;\n  },\n  activeClassname: function (orderId) {\n    // const Reaction.setUserPreferences(PACKAGE_NAME, ORDER_LIST_FILTERS_PREFERENCE_NAME, filter.name)\n    var selectedOrderId = Reaction.getUserPreferences(PACKAGE_NAME, ORDER_LIST_SELECTED_ORDER_PREFERENCE_NAME);\n\n    if (selectedOrderId === orderId) {\n      return \"active\";\n    }\n\n    return \"\";\n  },\n  orderIsNew: function (order) {\n    return order.workflow.status === \"new\";\n  }\n});\nTemplate.ordersListItem.events({\n  \"click [data-event-action=selectOrder]\": function (event) {\n    event.preventDefault();\n    var instance = Template.instance(); // Set selected order in user preference\n\n    Reaction.setUserPreferences(PACKAGE_NAME, ORDER_LIST_SELECTED_ORDER_PREFERENCE_NAME, instance.data.order._id); // Show the action view - detail view\n\n    Reaction.setActionViewDetail({\n      label: \"Order Details\",\n      i18nKeyLabel: \"orderWorkflow.orderDetails\",\n      data: {\n        order: instance.data.order\n      },\n      props: {\n        size: \"large\"\n      },\n      template: \"coreOrderWorkflow\"\n    });\n  },\n  \"click [data-event-action=startProcessingOrder]\": function (event) {\n    event.preventDefault();\n    var instance = Template.instance();\n    var isActionViewOpen = Reaction.isActionViewOpen();\n    var order = instance.data.order;\n\n    if (order.workflow.status === \"new\") {\n      Meteor.call(\"workflow/pushOrderWorkflow\", \"coreOrderWorkflow\", \"processing\", order); // send notification to order owner\n\n      var userId = order.userId;\n      var type = \"orderAccepted\";\n      var prefix = Reaction.getShopPrefix();\n      var url = prefix + \"/notifications\";\n      var sms = true;\n      Meteor.call(\"notification/send\", userId, type, url, sms);\n    }\n\n    Reaction.setUserPreferences(PACKAGE_NAME, ORDER_LIST_FILTERS_PREFERENCE_NAME, \"processing\"); // toggle detail views\n\n    if (isActionViewOpen === false) {\n      Reaction.showActionView({\n        label: \"Order Details\",\n        i18nKeyLabel: \"orderWorkflow.orderDetails\",\n        data: {\n          order: order\n        },\n        props: {\n          size: \"large\"\n        },\n        template: \"coreOrderWorkflow\"\n      });\n    }\n  }\n}); /**\n     * orderStatusDetail\n     *\n     * order state tracking\n     *\n     * @returns orderStatusDetails\n     */\nTemplate.orderStatusDetail.helpers({\n  // helper to format currency\n  formatAmount: function (value) {\n    var amount = value || \"\";\n\n    if (typeof value === \"number\") {\n      amount = accounting.toFixed(value, 2);\n    }\n\n    return amount;\n  },\n  // order age helper\n  orderAge: function () {\n    return moment(this.createdAt).fromNow();\n  },\n  shipmentMethod: function () {\n    return this.shipping[0].shipmentMethod;\n  },\n  shipmentTracking: function () {\n    if (this.shipping[0].tracking) {\n      return this.shipping[0].tracking;\n    }\n\n    return \"\";\n  },\n  shipmentStatus: function () {\n    var self = this;\n    var shipment = this.shipping[0]; // check first if it was delivered\n\n    if (shipment.delivered) {\n      return {\n        delivered: true,\n        shipped: true,\n        status: \"success\",\n        label: i18next.t(\"orderShipping.delivered\")\n      };\n    }\n\n    var shipped = _every(shipment.items, function (shipmentItem) {\n      for (var _iterator = self.items, _isArray2 = Array.isArray(_iterator), _i = 0, _iterator = _isArray2 ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray2) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var fullItem = _ref;\n\n        if (fullItem._id === shipmentItem._id) {\n          if (fullItem.workflow) {\n            if (_isArray(fullItem.workflow.workflow)) {\n              return _includes(fullItem.workflow.workflow, \"coreOrderItemWorkflow/completed\");\n            }\n          }\n        }\n      }\n    });\n\n    var canceled = _every(shipment.items, function (shipmentItem) {\n      for (var _iterator2 = self.items, _isArray3 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray3 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray3) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var fullItem = _ref2;\n\n        if (fullItem._id === shipmentItem._id) {\n          if (fullItem.workflow) {\n            return fullItem.workflow.status === \"coreOrderItemWorkflow/canceled\";\n          }\n        }\n      }\n    });\n\n    if (shipped) {\n      return {\n        delivered: false,\n        shipped: true,\n        status: \"success\",\n        label: i18next.t(\"orderShipping.shipped\")\n      };\n    }\n\n    if (canceled) {\n      return {\n        delivered: false,\n        shipped: false,\n        status: \"danger\",\n        label: i18next.t(\"order.canceledLabel\")\n      };\n    }\n\n    return {\n      delivered: false,\n      shipped: false,\n      status: \"info\",\n      label: i18next.t(\"orderShipping.notShipped\")\n    };\n  }\n});","map":{"version":3,"sources":["/imports/plugins/core/orders/client/templates/orders.js"],"names":["accounting","Meteor","Template","Reaction","i18next","Orders","Shops","OrdersActionContainer","PACKAGE_NAME","ORDER_LIST_FILTERS_PREFERENCE_NAME","ORDER_LIST_SELECTED_ORDER_PREFERENCE_NAME","DEFAULT_FILTER_NAME","orderFilters","OrderHelper","makeQuery","filter","query","$in","orders","onCreated","state","ReactiveDict","orderLimits","setDefault","new","processing","completed","set","filterName","data","name","setUserPreferences","autorun","getUserPreferences","limit","get","subscription","subscribe","ready","find","fetch","shop","findOne","currencies","currency","helpers","orderSubscription","instance","FilterComponent","orderFilter","component","onActionClick","itemProps","order","currencyFormat","hasMoreOrders","Counts","currentFilterLabel","foundFilter","Router","getQueryParam","label","activeClassname","orderId","events","event","preventDefault","ordersListItem","currentData","selectedOrderId","orderIsNew","workflow","status","_id","setActionViewDetail","i18nKeyLabel","props","size","template","isActionViewOpen","call","userId","type","prefix","getShopPrefix","url","sms","showActionView","orderStatusDetail","formatAmount","value","amount","toFixed","orderAge","moment","createdAt","fromNow","shipmentMethod","shipping","shipmentTracking","tracking","shipmentStatus","self","shipment","delivered","shipped","t","items","shipmentItem","fullItem","canceled"],"mappings":"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","file":"/imports/plugins/core/orders/client/templates/orders.js.map","sourcesContent":["import _ from \"lodash\";\nimport accounting from \"accounting-js\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Template } from \"meteor/templating\";\nimport { Reaction, i18next } from \"/client/api\";\nimport { Orders, Shops } from \"/lib/collections\";\nimport OrdersActionContainer from \"../containers/ordersActionContainer\";\nimport {\n  PACKAGE_NAME,\n  ORDER_LIST_FILTERS_PREFERENCE_NAME,\n  ORDER_LIST_SELECTED_ORDER_PREFERENCE_NAME,\n  DEFAULT_FILTER_NAME,\n  orderFilters\n} from \"../../lib/constants\";\n\nconst OrderHelper =  {\n  makeQuery(filter) {\n    let query = {};\n\n    switch (filter) {\n      // New orders\n      case \"new\":\n        query = {\n          \"workflow.status\": \"new\"\n        };\n        break;\n\n      // Orders that have yet to be captured & shipped\n      case \"processing\":\n        query = {\n          \"workflow.status\": \"coreOrderWorkflow/processing\"\n        };\n        break;\n\n      // Orders that have been shipped, based on if the items have been shipped\n      case \"shipped\":\n        query = {\n          \"items.workflow.status\": \"coreOrderItemWorkflow/shipped\"\n        };\n        break;\n\n      // Orders that are complete, including all items with complete status\n      case \"completed\":\n        query = {\n          \"workflow.status\": {\n            $in: [\"coreOrderWorkflow/completed\", \"coreOrderWorkflow/canceled\"]\n          },\n          \"items.workflow.status\": {\n            $in: [\"coreOrderItemWorkflow/completed\", \"coreOrderItemWorkflow/canceled\"]\n          }\n        };\n        break;\n\n      // Orders that have been captured, but not yet shipped\n      case \"captured\":\n        query = {\n          \"billing.paymentMethod.status\": \"completed\",\n          \"shipping.shipped\": false\n        };\n        break;\n\n      case \"canceled\":\n        query = {\n          \"workflow.status\": \"coreOrderWorkflow/canceled\"\n        };\n        break;\n\n      // Orders that have been refunded partially or fully\n      case \"refunded\":\n        query = {\n          \"billing.paymentMethod.status\": \"captured\",\n          \"shipping.shipped\": true\n        };\n        break;\n      default:\n    }\n\n    return query;\n  }\n};\n\nTemplate.orders.onCreated(function () {\n  this.state = new ReactiveDict();\n  this.orderLimits = new ReactiveDict();\n  this.state.setDefault({\n    orders: []\n  });\n  this.orderLimits.setDefault({\n    new: 10,\n    processing: 10,\n    completed: 10\n  });\n  this.state.set(\"count\", 0);\n\n  const filterName = this.data && this.data.filter && this.data.filter.name || \"new\";\n  Reaction.setUserPreferences(PACKAGE_NAME, ORDER_LIST_FILTERS_PREFERENCE_NAME, filterName);\n\n  this.autorun(() => {\n    const filter = Reaction.getUserPreferences(PACKAGE_NAME, ORDER_LIST_FILTERS_PREFERENCE_NAME, DEFAULT_FILTER_NAME);\n    const limit = this.orderLimits.get(filter);\n    const query = OrderHelper.makeQuery(filter);\n    this.subscription = this.subscribe(\"PaginatedOrders\", filter, limit);\n\n    if (this.subscription.ready()) {\n      const orders = Orders.find(query, { limit: limit }).fetch();\n      this.state.set(\"orders\", orders);\n    }\n  });\n\n  // Watch for updates to shop collection\n  this.autorun(() => {\n    const shop = Shops.findOne({});\n\n    // Update currency information, this is passed to child components containing\n    // Numeric inputs\n    this.state.set(\"currency\", shop.currencies[shop.currency]);\n  });\n});\n\n/**\n * orders helpers\n */\nTemplate.orders.helpers({\n  orderSubscription() {\n    return Template.instance().subscription.ready();\n  },\n  FilterComponent() {\n    const orderFilter = Reaction.getUserPreferences(PACKAGE_NAME, ORDER_LIST_FILTERS_PREFERENCE_NAME, DEFAULT_FILTER_NAME);\n    return {\n      component: OrdersActionContainer,\n      limit: Template.instance().orderLimits.get(orderFilter),\n      onActionClick(filter) {\n        Reaction.setUserPreferences(PACKAGE_NAME, ORDER_LIST_FILTERS_PREFERENCE_NAME, filter.name);\n        Reaction.setUserPreferences(PACKAGE_NAME, ORDER_LIST_SELECTED_ORDER_PREFERENCE_NAME, null);\n      }\n    };\n  },\n  itemProps(order) {\n    return {\n      order,\n      currencyFormat: Template.instance().state.get(\"currency\")\n    };\n  },\n\n  orders() {\n    return Template.instance().state.get(\"orders\") || false;\n  },\n\n  hasMoreOrders() {\n    const filter = Reaction.getUserPreferences(PACKAGE_NAME, ORDER_LIST_FILTERS_PREFERENCE_NAME, DEFAULT_FILTER_NAME);\n    const instance = Template.instance();\n\n    if (filter === \"new\") {\n      instance.state.set(\"count\", Counts.get(\"newOrder-count\"));\n    } else if (filter === \"processing\") {\n      instance.state.set(\"count\", Counts.get(\"processingOrder-count\"));\n    } else if (filter === \"completed\") {\n      instance.state.set(\"count\", Counts.get(\"completedOrder-count\"));\n    }\n\n    return instance.state.get(\"count\") > instance.orderLimits.get(filter);\n  },\n\n  currentFilterLabel() {\n    const foundFilter = _.find(orderFilters, (filter) => {\n      return filter.name === Reaction.Router.getQueryParam(\"filter\");\n    });\n\n    if (foundFilter) {\n      return foundFilter.label;\n    }\n\n    return \"\";\n  },\n  activeClassname(orderId) {\n    if (Reaction.Router.getQueryParam(\"_id\") === orderId) {\n      return \"panel-info\";\n    }\n    return \"panel-default\";\n  }\n});\n\n/**\n * orders events\n */\nTemplate.orders.events({\n  \"click .show-more-orders\": function (event, instance) {\n    event.preventDefault();\n    const filter = Reaction.getUserPreferences(PACKAGE_NAME, ORDER_LIST_FILTERS_PREFERENCE_NAME, DEFAULT_FILTER_NAME);\n    let limit = instance.orderLimits.get(filter);\n    limit += 10;\n    instance.orderLimits.set(filter, limit);\n  }\n});\n\nTemplate.ordersListItem.helpers({\n  order() {\n    return Template.currentData().order;\n  },\n  activeClassname(orderId) {\n    // const Reaction.setUserPreferences(PACKAGE_NAME, ORDER_LIST_FILTERS_PREFERENCE_NAME, filter.name)\n    const selectedOrderId = Reaction.getUserPreferences(PACKAGE_NAME, ORDER_LIST_SELECTED_ORDER_PREFERENCE_NAME);\n\n    if (selectedOrderId === orderId) {\n      return \"active\";\n    }\n    return \"\";\n  },\n\n  orderIsNew(order) {\n    return order.workflow.status === \"new\";\n  }\n});\n\nTemplate.ordersListItem.events({\n  \"click [data-event-action=selectOrder]\": function (event) {\n    event.preventDefault();\n    const instance = Template.instance();\n\n    // Set selected order in user preference\n    Reaction.setUserPreferences(PACKAGE_NAME, ORDER_LIST_SELECTED_ORDER_PREFERENCE_NAME, instance.data.order._id);\n\n    // Show the action view - detail view\n    Reaction.setActionViewDetail({\n      label: \"Order Details\",\n      i18nKeyLabel: \"orderWorkflow.orderDetails\",\n      data: {\n        order: instance.data.order\n      },\n      props: {\n        size: \"large\"\n      },\n      template: \"coreOrderWorkflow\"\n    });\n  },\n  \"click [data-event-action=startProcessingOrder]\": function (event) {\n    event.preventDefault();\n    const instance = Template.instance();\n    const isActionViewOpen = Reaction.isActionViewOpen();\n    const { order } = instance.data;\n\n\n    if (order.workflow.status === \"new\") {\n      Meteor.call(\"workflow/pushOrderWorkflow\", \"coreOrderWorkflow\", \"processing\", order);\n\n      // send notification to order owner\n      const userId = order.userId;\n      const type = \"orderAccepted\";\n      const prefix = Reaction.getShopPrefix();\n      const url = `${prefix}/notifications`;\n      const sms = true;\n      Meteor.call(\"notification/send\", userId, type, url, sms);\n    }\n\n    Reaction.setUserPreferences(PACKAGE_NAME, ORDER_LIST_FILTERS_PREFERENCE_NAME, \"processing\");\n\n    // toggle detail views\n    if (isActionViewOpen === false) {\n      Reaction.showActionView({\n        label: \"Order Details\",\n        i18nKeyLabel: \"orderWorkflow.orderDetails\",\n        data: { order },\n        props: {\n          size: \"large\"\n        },\n        template: \"coreOrderWorkflow\"\n      });\n    }\n  }\n});\n\n/**\n * orderStatusDetail\n *\n * order state tracking\n *\n * @returns orderStatusDetails\n */\n\nTemplate.orderStatusDetail.helpers({\n  // helper to format currency\n  formatAmount(value) {\n    let amount = value || \"\";\n    if (typeof value === \"number\") {\n      amount = accounting.toFixed(value, 2);\n    }\n    return amount;\n  },\n  // order age helper\n  orderAge: function () {\n    return moment(this.createdAt).fromNow();\n  },\n\n  shipmentMethod: function () {\n    return this.shipping[0].shipmentMethod;\n  },\n\n  shipmentTracking: function () {\n    if (this.shipping[0].tracking) {\n      return this.shipping[0].tracking;\n    }\n    return \"\";\n  },\n\n  shipmentStatus() {\n    const self = this;\n    const shipment = this.shipping[0];\n\n    // check first if it was delivered\n    if (shipment.delivered) {\n      return {\n        delivered: true,\n        shipped: true,\n        status: \"success\",\n        label: i18next.t(\"orderShipping.delivered\")\n      };\n    }\n\n    const shipped = _.every(shipment.items, (shipmentItem) => {\n      for (const fullItem of self.items) {\n        if (fullItem._id === shipmentItem._id) {\n          if (fullItem.workflow) {\n            if (_.isArray(fullItem.workflow.workflow)) {\n              return _.includes(fullItem.workflow.workflow, \"coreOrderItemWorkflow/completed\");\n            }\n          }\n        }\n      }\n    });\n\n    const canceled = _.every(shipment.items, (shipmentItem) => {\n      for (const fullItem of self.items) {\n        if (fullItem._id === shipmentItem._id) {\n          if (fullItem.workflow) {\n            return fullItem.workflow.status === \"coreOrderItemWorkflow/canceled\";\n          }\n        }\n      }\n    });\n\n    if (shipped) {\n      return {\n        delivered: false,\n        shipped: true,\n        status: \"success\",\n        label: i18next.t(\"orderShipping.shipped\")\n      };\n    }\n\n    if (canceled) {\n      return {\n        delivered: false,\n        shipped: false,\n        status: \"danger\",\n        label: i18next.t(\"order.canceledLabel\")\n      };\n    }\n\n    return {\n      delivered: false,\n      shipped: false,\n      status: \"info\",\n      label: i18next.t(\"orderShipping.notShipped\")\n    };\n  }\n});\n"]},"hash":"84e6953c9b8ac2232d0e31182b845f18c89d64cf"}
