{"metadata":{"usedHelpers":["extends","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","PropTypes"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"PropTypes","local":"PropTypes"}]},{"source":"../icon","imported":["Icon"],"specifiers":[{"kind":"named","imported":"Icon","local":"Icon"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/core/ui/client/components/button/handle.js","filenameRelative":"/imports/plugins/core/ui/client/components/button/handle.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/core/ui/client/components/button/handle.js"],"names":["React","PropTypes","Icon","Handle","props","handle","connectDragSource","propTypes","func"],"mappings":";;;;;;AAAA;IAAA;kBAAA;;;;;;;;;;;;;G,AACA,AAAS,AAAY,AAErB;;AASA,AAAM,AAAS,AAAC,AAAU;;;;;;;;OAClB,mBACJ,AAAC,AAAI,OAAL,AAAe;AACb,AAAC,MAAD,AACE,AAAK,AACL,AAAI;AAER,AAAE;;AANJ,AAME;;wBAGF,AAAI;AAAM,YAAV,AAA6B,AAC3B,AAAO;OAXX,AAWI,AAAO,AAAM,AAAkB,AAChC,AAED,AAAO,AACR;;;+BAED;AAAO,WAAP,MAAmB,kBACjB;AADF,AAAmB,AACE,AAAU,AAG/B;;SAAA,AAAe;CApBb;;;;;OAbK,OAAS,WAAhB,QAAiC","file":"/imports/plugins/core/ui/client/components/button/handle.js.map","sourcesContent":["import React, { PropTypes } from \"react\";\nimport { Icon } from \"../icon\";\n\n/**\n * Handle is a special type of button used for drag handles.\n * It uses the fa-bars icon by default, and does not have click or hover states\n *\n * Use this button in places where you need a pre-styled button for drag handles\n *\n * @param {Object} props Props passed into component\n * @returns {node} component with pre-configured icon for dragging\n */\nconst Handle = (props) => {\n  const handle = (\n    <div className=\"rui drag-handle btn btn-drag-handle\">\n      <Icon\n        icon=\"fa fa-bars\"\n        {...props}\n      />\n    </div>\n  );\n\n  if (props.connectDragSource) {\n    return props.connectDragSource(handle);\n  }\n\n  return handle;\n};\n\nHandle.propTypes = {\n  connectDragSource: PropTypes.func\n};\n\nexport default Handle;\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/core/ui/client/components/button/handle.js.map","sourceFileName":"/imports/plugins/core/ui/client/components/button/handle.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"handle"},"ignored":false,"code":"var _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0,\n    PropTypes = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  PropTypes: function (v) {\n    PropTypes = v;\n  }\n}, 0);\nvar Icon = void 0;\nmodule.importSync(\"../icon\", {\n  Icon: function (v) {\n    Icon = v;\n  }\n}, 1);\n\n/**\n * Handle is a special type of button used for drag handles.\n * It uses the fa-bars icon by default, and does not have click or hover states\n *\n * Use this button in places where you need a pre-styled button for drag handles\n *\n * @param {Object} props Props passed into component\n * @returns {node} component with pre-configured icon for dragging\n */var Handle = function (props) {\n  var handle = React.createElement(\n    \"div\",\n    {\n      className: \"rui drag-handle btn btn-drag-handle\"\n    },\n    React.createElement(Icon, (0, _extends3.default)({\n      icon: \"fa fa-bars\"\n    }, props))\n  );\n\n  if (props.connectDragSource) {\n    return props.connectDragSource(handle);\n  }\n\n  return handle;\n};\n\nHandle.propTypes = {\n  connectDragSource: PropTypes.func\n};\nmodule.export(\"default\", exports.default = Handle);","map":{"version":3,"sources":["/imports/plugins/core/ui/client/components/button/handle.js"],"names":["React","PropTypes","Icon","Handle","props","handle","connectDragSource","propTypes","func"],"mappings":";;;;;;AAAA;IAAA;kBAAA;;;;;;;;;;;;;G,AACA,AAAS,AAAY,AAErB;;AASA,AAAM,AAAS,AAAC,AAAU;;;;;;;;OAClB,mBACJ,AAAC,AAAI,OAAL,AAAe;AACb,AAAC,MAAD,AACE,AAAK,AACL,AAAI;AAER,AAAE;;AANJ,AAME;;wBAGF,AAAI;AAAM,YAAV,AAA6B,AAC3B,AAAO;OAXX,AAWI,AAAO,AAAM,AAAkB,AAChC,AAED,AAAO,AACR;;;+BAED;AAAO,WAAP,MAAmB,kBACjB;AADF,AAAmB,AACE,AAAU,AAG/B;;SAAA,AAAe;CApBb;;;;;OAbK,OAAS,WAAhB,QAAiC","file":"/imports/plugins/core/ui/client/components/button/handle.js.map","sourcesContent":["import React, { PropTypes } from \"react\";\nimport { Icon } from \"../icon\";\n\n/**\n * Handle is a special type of button used for drag handles.\n * It uses the fa-bars icon by default, and does not have click or hover states\n *\n * Use this button in places where you need a pre-styled button for drag handles\n *\n * @param {Object} props Props passed into component\n * @returns {node} component with pre-configured icon for dragging\n */\nconst Handle = (props) => {\n  const handle = (\n    <div className=\"rui drag-handle btn btn-drag-handle\">\n      <Icon\n        icon=\"fa fa-bars\"\n        {...props}\n      />\n    </div>\n  );\n\n  if (props.connectDragSource) {\n    return props.connectDragSource(handle);\n  }\n\n  return handle;\n};\n\nHandle.propTypes = {\n  connectDragSource: PropTypes.func\n};\n\nexport default Handle;\n"]},"hash":"8d6b0fdcb736c8cdf17f78d060a2c8dd34294dc8"}
