{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/aldeed:simple-schema","imported":["SimpleSchema"],"specifiers":[{"kind":"named","imported":"SimpleSchema","local":"SimpleSchema"}]},{"source":"./layouts","imported":["Layout"],"specifiers":[{"kind":"named","imported":"Layout","local":"Layout"}]}],"exports":{"exported":["Permissions","Registry","PackageConfig","CorePackageConfig"],"specifiers":[{"kind":"local","local":"Permissions","exported":"Permissions"},{"kind":"local","local":"Registry","exported":"Registry"},{"kind":"local","local":"PackageConfig","exported":"PackageConfig"},{"kind":"local","local":"CorePackageConfig","exported":"CorePackageConfig"}]}}},"options":{"filename":"/lib/collections/schemas/registry.js","filenameRelative":"/lib/collections/schemas/registry.js","inputSourceMap":{"version":3,"sources":["/lib/collections/schemas/registry.js"],"names":["SimpleSchema","Layout","Permissions","permission","type","String","label","Registry","provides","index","route","optional","name","template","workflow","layout","triggersEnter","triggersExit","options","Object","description","icon","container","priority","Number","enabled","Boolean","permissions","audience","meta","blackbox","PackageConfig","shopId","defaultValue","settings","registry","CorePackageConfig"],"mappings":"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","file":"/lib/collections/schemas/registry.js.map","sourcesContent":["import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\nimport { Layout } from \"./layouts\";\n\n/**\n * Permissions Schema\n */\n\nexport const Permissions = new SimpleSchema({\n  permission: {\n    type: String\n  },\n  label: {\n    type: String\n  }\n});\n\n/**\n * Permissions Registry\n * the registry entries in the Package registry\n */\n\nexport const Registry = new SimpleSchema({\n  provides: {\n    type: String,\n    index: true\n  },\n  route: {\n    type: String,\n    optional: true,\n    index: true\n  },\n  name: {\n    type: String,\n    label: \"Registry Name\",\n    index: true\n  },\n  template: {\n    type: String,\n    optional: true\n  },\n  workflow: {\n    type: String,\n    optional: true\n  },\n  layout: {\n    type: String,\n    optional: true\n  },\n  triggersEnter: {\n    label: \"Trigger on Entry\",\n    type: [String],\n    optional: true\n  },\n  triggersExit: {\n    label: \"Trigger on Exit\",\n    type: [String],\n    optional: true\n  },\n  options: {\n    label: \"Routing Options\",\n    type: Object,\n    optional: true\n  },\n  description: {\n    type: String,\n    optional: true\n  },\n  icon: {\n    type: String,\n    optional: true\n  },\n  label: {\n    type: String,\n    optional: true\n  },\n  container: {\n    type: String,\n    optional: true\n  },\n  priority: {\n    type: Number,\n    optional: true\n  },\n  enabled: {\n    type: Boolean,\n    optional: true\n  },\n  permissions: {\n    type: [Permissions],\n    optional: true\n  },\n  audience: {\n    type: [String],\n    optional: true,\n    label: \"Audience\"\n  },\n  meta: {\n    label: \"Meta\",\n    type: Object,\n    optional: true,\n    blackbox: true\n  }\n});\n\n\n/**\n * PackageConfig Schema\n */\nexport const PackageConfig = new SimpleSchema({\n  shopId: {\n    type: String,\n    index: 1,\n    // see: https://github.com/reactioncommerce/reaction/issues/646#issuecomment-169351842\n    // autoValue: shopIdAutoValue,\n    label: \"PackageConfig ShopId\",\n    optional: true\n  },\n  name: {\n    type: String,\n    index: 1\n  },\n  enabled: {\n    type: Boolean,\n    defaultValue: true\n  },\n  icon: {\n    type: String,\n    optional: true\n  },\n  settings: {\n    type: Object,\n    optional: true,\n    blackbox: true\n  },\n  registry: {\n    type: [Registry],\n    optional: true\n  },\n  layout: {\n    type: [Layout],\n    optional: true\n  }\n});\n\n/**\n * CorePackageConfig Schema\n * Core Reaction Settings\n */\n\nexport const CorePackageConfig = new SimpleSchema([\n  PackageConfig, {\n    \"settings.mail\": {\n      type: Object,\n      optional: true,\n      label: \"Mail Settings\"\n    },\n    \"settings.mail.user\": {\n      type: String,\n      label: \"Username\"\n    },\n    \"settings.mail.password\": {\n      type: String,\n      label: \"Password\"\n    },\n    \"settings.mail.host\": {\n      type: String,\n      label: \"Host\"\n    },\n    \"settings.mail.port\": {\n      type: String,\n      label: \"Port\"\n    },\n    \"settings.openexchangerates.appId\": {\n      type: String,\n      label: \"Open Exchange Rates App Id\"\n    },\n    \"settings.openexchangerates.refreshPeriod\": {\n      type: String,\n      label: \"Open Exchange Rates refresh period\",\n      defaultValue: \"every 1 hour\"\n    },\n    \"settings.google.clientId\": {\n      type: String,\n      label: \"Google Client Id\",\n      defaultValue: null\n    },\n    \"settings.google.apiKey\": {\n      type: String,\n      label: \"Google Api Key\",\n      defaultValue: null\n    },\n    \"settings.public\": {\n      type: Object,\n      optional: true\n    },\n    \"settings.public.allowGuestCheckout\": {\n      type: Boolean,\n      label: \"Allow Guest Checkout\"\n    },\n    \"settings.cart.cleanupDurationDays\": {\n      type: String,\n      label: \"Cleanup Schedule\",\n      defaultValue: \"older than 3 days\"\n    }\n  }\n]);\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/lib/collections/schemas/registry.js.map","sourceFileName":"/lib/collections/schemas/registry.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"registry"},"ignored":false,"code":"module.export({\n  Permissions: function () {\n    return Permissions;\n  },\n  Registry: function () {\n    return Registry;\n  },\n  PackageConfig: function () {\n    return PackageConfig;\n  },\n  CorePackageConfig: function () {\n    return CorePackageConfig;\n  }\n});\nvar SimpleSchema = void 0;\nmodule.importSync(\"meteor/aldeed:simple-schema\", {\n  SimpleSchema: function (v) {\n    SimpleSchema = v;\n  }\n}, 0);\nvar Layout = void 0;\nmodule.importSync(\"./layouts\", {\n  Layout: function (v) {\n    Layout = v;\n  }\n}, 1);\nvar Permissions = new SimpleSchema({\n  permission: {\n    type: String\n  },\n  label: {\n    type: String\n  }\n});\nvar Registry = new SimpleSchema({\n  provides: {\n    type: String,\n    index: true\n  },\n  route: {\n    type: String,\n    optional: true,\n    index: true\n  },\n  name: {\n    type: String,\n    label: \"Registry Name\",\n    index: true\n  },\n  template: {\n    type: String,\n    optional: true\n  },\n  workflow: {\n    type: String,\n    optional: true\n  },\n  layout: {\n    type: String,\n    optional: true\n  },\n  triggersEnter: {\n    label: \"Trigger on Entry\",\n    type: [String],\n    optional: true\n  },\n  triggersExit: {\n    label: \"Trigger on Exit\",\n    type: [String],\n    optional: true\n  },\n  options: {\n    label: \"Routing Options\",\n    type: Object,\n    optional: true\n  },\n  description: {\n    type: String,\n    optional: true\n  },\n  icon: {\n    type: String,\n    optional: true\n  },\n  label: {\n    type: String,\n    optional: true\n  },\n  container: {\n    type: String,\n    optional: true\n  },\n  priority: {\n    type: Number,\n    optional: true\n  },\n  enabled: {\n    type: Boolean,\n    optional: true\n  },\n  permissions: {\n    type: [Permissions],\n    optional: true\n  },\n  audience: {\n    type: [String],\n    optional: true,\n    label: \"Audience\"\n  },\n  meta: {\n    label: \"Meta\",\n    type: Object,\n    optional: true,\n    blackbox: true\n  }\n});\nvar PackageConfig = new SimpleSchema({\n  shopId: {\n    type: String,\n    index: 1,\n    // see: https://github.com/reactioncommerce/reaction/issues/646#issuecomment-169351842\n    // autoValue: shopIdAutoValue,\n    label: \"PackageConfig ShopId\",\n    optional: true\n  },\n  name: {\n    type: String,\n    index: 1\n  },\n  enabled: {\n    type: Boolean,\n    defaultValue: true\n  },\n  icon: {\n    type: String,\n    optional: true\n  },\n  settings: {\n    type: Object,\n    optional: true,\n    blackbox: true\n  },\n  registry: {\n    type: [Registry],\n    optional: true\n  },\n  layout: {\n    type: [Layout],\n    optional: true\n  }\n});\nvar CorePackageConfig = new SimpleSchema([PackageConfig, {\n  \"settings.mail\": {\n    type: Object,\n    optional: true,\n    label: \"Mail Settings\"\n  },\n  \"settings.mail.user\": {\n    type: String,\n    label: \"Username\"\n  },\n  \"settings.mail.password\": {\n    type: String,\n    label: \"Password\"\n  },\n  \"settings.mail.host\": {\n    type: String,\n    label: \"Host\"\n  },\n  \"settings.mail.port\": {\n    type: String,\n    label: \"Port\"\n  },\n  \"settings.openexchangerates.appId\": {\n    type: String,\n    label: \"Open Exchange Rates App Id\"\n  },\n  \"settings.openexchangerates.refreshPeriod\": {\n    type: String,\n    label: \"Open Exchange Rates refresh period\",\n    defaultValue: \"every 1 hour\"\n  },\n  \"settings.google.clientId\": {\n    type: String,\n    label: \"Google Client Id\",\n    defaultValue: null\n  },\n  \"settings.google.apiKey\": {\n    type: String,\n    label: \"Google Api Key\",\n    defaultValue: null\n  },\n  \"settings.public\": {\n    type: Object,\n    optional: true\n  },\n  \"settings.public.allowGuestCheckout\": {\n    type: Boolean,\n    label: \"Allow Guest Checkout\"\n  },\n  \"settings.cart.cleanupDurationDays\": {\n    type: String,\n    label: \"Cleanup Schedule\",\n    defaultValue: \"older than 3 days\"\n  }\n}]);","map":{"version":3,"sources":["/lib/collections/schemas/registry.js"],"names":["SimpleSchema","Layout","Permissions","permission","type","String","label","Registry","provides","index","route","optional","name","template","workflow","layout","triggersEnter","triggersExit","options","Object","description","icon","container","priority","Number","enabled","Boolean","permissions","audience","meta","blackbox","PackageConfig","shopId","defaultValue","settings","registry","CorePackageConfig"],"mappings":"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","file":"/lib/collections/schemas/registry.js.map","sourcesContent":["import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\nimport { Layout } from \"./layouts\";\n\n/**\n * Permissions Schema\n */\n\nexport const Permissions = new SimpleSchema({\n  permission: {\n    type: String\n  },\n  label: {\n    type: String\n  }\n});\n\n/**\n * Permissions Registry\n * the registry entries in the Package registry\n */\n\nexport const Registry = new SimpleSchema({\n  provides: {\n    type: String,\n    index: true\n  },\n  route: {\n    type: String,\n    optional: true,\n    index: true\n  },\n  name: {\n    type: String,\n    label: \"Registry Name\",\n    index: true\n  },\n  template: {\n    type: String,\n    optional: true\n  },\n  workflow: {\n    type: String,\n    optional: true\n  },\n  layout: {\n    type: String,\n    optional: true\n  },\n  triggersEnter: {\n    label: \"Trigger on Entry\",\n    type: [String],\n    optional: true\n  },\n  triggersExit: {\n    label: \"Trigger on Exit\",\n    type: [String],\n    optional: true\n  },\n  options: {\n    label: \"Routing Options\",\n    type: Object,\n    optional: true\n  },\n  description: {\n    type: String,\n    optional: true\n  },\n  icon: {\n    type: String,\n    optional: true\n  },\n  label: {\n    type: String,\n    optional: true\n  },\n  container: {\n    type: String,\n    optional: true\n  },\n  priority: {\n    type: Number,\n    optional: true\n  },\n  enabled: {\n    type: Boolean,\n    optional: true\n  },\n  permissions: {\n    type: [Permissions],\n    optional: true\n  },\n  audience: {\n    type: [String],\n    optional: true,\n    label: \"Audience\"\n  },\n  meta: {\n    label: \"Meta\",\n    type: Object,\n    optional: true,\n    blackbox: true\n  }\n});\n\n\n/**\n * PackageConfig Schema\n */\nexport const PackageConfig = new SimpleSchema({\n  shopId: {\n    type: String,\n    index: 1,\n    // see: https://github.com/reactioncommerce/reaction/issues/646#issuecomment-169351842\n    // autoValue: shopIdAutoValue,\n    label: \"PackageConfig ShopId\",\n    optional: true\n  },\n  name: {\n    type: String,\n    index: 1\n  },\n  enabled: {\n    type: Boolean,\n    defaultValue: true\n  },\n  icon: {\n    type: String,\n    optional: true\n  },\n  settings: {\n    type: Object,\n    optional: true,\n    blackbox: true\n  },\n  registry: {\n    type: [Registry],\n    optional: true\n  },\n  layout: {\n    type: [Layout],\n    optional: true\n  }\n});\n\n/**\n * CorePackageConfig Schema\n * Core Reaction Settings\n */\n\nexport const CorePackageConfig = new SimpleSchema([\n  PackageConfig, {\n    \"settings.mail\": {\n      type: Object,\n      optional: true,\n      label: \"Mail Settings\"\n    },\n    \"settings.mail.user\": {\n      type: String,\n      label: \"Username\"\n    },\n    \"settings.mail.password\": {\n      type: String,\n      label: \"Password\"\n    },\n    \"settings.mail.host\": {\n      type: String,\n      label: \"Host\"\n    },\n    \"settings.mail.port\": {\n      type: String,\n      label: \"Port\"\n    },\n    \"settings.openexchangerates.appId\": {\n      type: String,\n      label: \"Open Exchange Rates App Id\"\n    },\n    \"settings.openexchangerates.refreshPeriod\": {\n      type: String,\n      label: \"Open Exchange Rates refresh period\",\n      defaultValue: \"every 1 hour\"\n    },\n    \"settings.google.clientId\": {\n      type: String,\n      label: \"Google Client Id\",\n      defaultValue: null\n    },\n    \"settings.google.apiKey\": {\n      type: String,\n      label: \"Google Api Key\",\n      defaultValue: null\n    },\n    \"settings.public\": {\n      type: Object,\n      optional: true\n    },\n    \"settings.public.allowGuestCheckout\": {\n      type: Boolean,\n      label: \"Allow Guest Checkout\"\n    },\n    \"settings.cart.cleanupDurationDays\": {\n      type: String,\n      label: \"Cleanup Schedule\",\n      defaultValue: \"older than 3 days\"\n    }\n  }\n]);\n"]},"hash":"9e06d43532e36974bb5771e13f7b6e6e92499c80"}
