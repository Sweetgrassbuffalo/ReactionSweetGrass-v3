{"metadata":{"usedHelpers":["typeof","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"/lib/collections","imported":["Packages"],"specifiers":[{"kind":"named","imported":"Packages","local":"Packages"}]},{"source":"/client/api","imported":["i18next"],"specifiers":[{"kind":"named","imported":"i18next","local":"i18next"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/included/analytics/client/templates/reactionAnalytics.js","filenameRelative":"/imports/plugins/included/analytics/client/templates/reactionAnalytics.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/included/analytics/client/templates/reactionAnalytics.js"],"names":["Packages","i18next","Template","reactionAnalyticsSettings","helpers","packageData","findOne","name","googleAnalyticsEnabled","ga","segmentioEnabled","analytics","mixpanelEnabled","mixpanel","AutoForm","hooks","onSuccess","Alerts","removeType","toast","t","onError","operation","error","msg","message","reason"],"mappings":";;;;;;AAAA,IAAS;AAAT,OAAyB,WAAzB;;;;;;;;;;GACA,AAAS,AAAe,AAExB,AAAS,AAA0B,AAAQ;AACzC,SAAc;AACL,2BAAA,AAAS,AAAQ,AACtB;;AADF,YAFuC,AAKxC;AAHQ,AAAiB,KAChB;AAGV;sCAAyB,AACvB;WAAO,OAAA,AAAO,OAAd,AAAqB,AACtB;AARwC;gCASzC;mBAAmB,gFACjB;AAAA,AAAO,AAAO,AAAc,AAC7B;AAXwC;iGAYzC;AAAkB,AAChB,AAAO,AAAO,AAAa,AAC5B;AAZC;AAFJ,AAA2C;AAkB3C,AAAS,AAAM;2BACY,AACvB;aAAY,WACV;aAAO,OAAP,AAAkB,gBAAlB,0CACA;AAAA,AAAO,AAAO,AAAM,AAAQ,AAAE,AAA0C,AACzE;AAJsB;iDAKvB;AAAQ,oBAAR,AAAmB,MAAO,iEACxB;AAPN,AAAe,AACY,AAMrB,AAAM,AAAM,AAAM,AAAW,AAAM,AAAU,AAC7C,AAAO,AAAO,AAAO,AAAE,AAAQ,AAAE,AAA0C,AAAG,AAAI,AAAG,AACtF;AARH;AADF","file":"/imports/plugins/included/analytics/client/templates/reactionAnalytics.js.map","sourcesContent":["import { Packages } from \"/lib/collections\";\nimport { i18next } from \"/client/api\";\n\nTemplate.reactionAnalyticsSettings.helpers({\n  packageData() {\n    return Packages.findOne({\n      name: \"reaction-analytics\"\n    });\n  },\n  googleAnalyticsEnabled() {\n    return typeof ga === \"function\";\n  },\n  segmentioEnabled() {\n    return typeof analytics === \"object\";\n  },\n  mixpanelEnabled() {\n    return typeof mixpanel === \"object\";\n  }\n});\n\n\nAutoForm.hooks({\n  \"analytics-update-form\": {\n    onSuccess() {\n      Alerts.removeType(\"analytics-not-configured\");\n      return Alerts.toast(i18next.t(\"admin.settings.analyticsSettingsSaved\"), \"success\");\n    },\n    onError(operation, error) {\n      const msg = error.message || error.reason || \"Unknown error\";\n      return Alerts.toast(`${i18next.t(\"admin.settings.analyticsSettingsFailed\")} ${msg}`, \"error\");\n    }\n  }\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/included/analytics/client/templates/reactionAnalytics.js.map","sourceFileName":"/imports/plugins/included/analytics/client/templates/reactionAnalytics.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"reactionAnalytics"},"ignored":false,"code":"var _typeof2 = require(\"babel-runtime/helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar Packages = void 0;\nmodule.importSync(\"/lib/collections\", {\n  Packages: function (v) {\n    Packages = v;\n  }\n}, 0);\nvar i18next = void 0;\nmodule.importSync(\"/client/api\", {\n  i18next: function (v) {\n    i18next = v;\n  }\n}, 1);\nTemplate.reactionAnalyticsSettings.helpers({\n  packageData: function () {\n    return Packages.findOne({\n      name: \"reaction-analytics\"\n    });\n  },\n  googleAnalyticsEnabled: function () {\n    return typeof ga === \"function\";\n  },\n  segmentioEnabled: function () {\n    return (typeof analytics === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(analytics)) === \"object\";\n  },\n  mixpanelEnabled: function () {\n    return (typeof mixpanel === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(mixpanel)) === \"object\";\n  }\n});\nAutoForm.hooks({\n  \"analytics-update-form\": {\n    onSuccess: function () {\n      Alerts.removeType(\"analytics-not-configured\");\n      return Alerts.toast(i18next.t(\"admin.settings.analyticsSettingsSaved\"), \"success\");\n    },\n    onError: function (operation, error) {\n      var msg = error.message || error.reason || \"Unknown error\";\n      return Alerts.toast(i18next.t(\"admin.settings.analyticsSettingsFailed\") + \" \" + msg, \"error\");\n    }\n  }\n});","map":{"version":3,"sources":["/imports/plugins/included/analytics/client/templates/reactionAnalytics.js"],"names":["Packages","i18next","Template","reactionAnalyticsSettings","helpers","packageData","findOne","name","googleAnalyticsEnabled","ga","segmentioEnabled","analytics","mixpanelEnabled","mixpanel","AutoForm","hooks","onSuccess","Alerts","removeType","toast","t","onError","operation","error","msg","message","reason"],"mappings":";;;;;;AAAA,IAAS;AAAT,OAAyB,WAAzB;;;;;;;;;;GACA,AAAS,AAAe,AAExB,AAAS,AAA0B,AAAQ;AACzC,SAAc;AACL,2BAAA,AAAS,AAAQ,AACtB;;AADF,YAFuC,AAKxC;AAHQ,AAAiB,KAChB;AAGV;sCAAyB,AACvB;WAAO,OAAA,AAAO,OAAd,AAAqB,AACtB;AARwC;gCASzC;mBAAmB,gFACjB;AAAA,AAAO,AAAO,AAAc,AAC7B;AAXwC;iGAYzC;AAAkB,AAChB,AAAO,AAAO,AAAa,AAC5B;AAZC;AAFJ,AAA2C;AAkB3C,AAAS,AAAM;2BACY,AACvB;aAAY,WACV;aAAO,OAAP,AAAkB,gBAAlB,0CACA;AAAA,AAAO,AAAO,AAAM,AAAQ,AAAE,AAA0C,AACzE;AAJsB;iDAKvB;AAAQ,oBAAR,AAAmB,MAAO,iEACxB;AAPN,AAAe,AACY,AAMrB,AAAM,AAAM,AAAM,AAAW,AAAM,AAAU,AAC7C,AAAO,AAAO,AAAO,AAAE,AAAQ,AAAE,AAA0C,AAAG,AAAI,AAAG,AACtF;AARH;AADF","file":"/imports/plugins/included/analytics/client/templates/reactionAnalytics.js.map","sourcesContent":["import { Packages } from \"/lib/collections\";\nimport { i18next } from \"/client/api\";\n\nTemplate.reactionAnalyticsSettings.helpers({\n  packageData() {\n    return Packages.findOne({\n      name: \"reaction-analytics\"\n    });\n  },\n  googleAnalyticsEnabled() {\n    return typeof ga === \"function\";\n  },\n  segmentioEnabled() {\n    return typeof analytics === \"object\";\n  },\n  mixpanelEnabled() {\n    return typeof mixpanel === \"object\";\n  }\n});\n\n\nAutoForm.hooks({\n  \"analytics-update-form\": {\n    onSuccess() {\n      Alerts.removeType(\"analytics-not-configured\");\n      return Alerts.toast(i18next.t(\"admin.settings.analyticsSettingsSaved\"), \"success\");\n    },\n    onError(operation, error) {\n      const msg = error.message || error.reason || \"Unknown error\";\n      return Alerts.toast(`${i18next.t(\"admin.settings.analyticsSettingsFailed\")} ${msg}`, \"error\");\n    }\n  }\n});\n"]},"hash":"8a8353211dc791851676c6d0f62aa60cfdb40a56"}
