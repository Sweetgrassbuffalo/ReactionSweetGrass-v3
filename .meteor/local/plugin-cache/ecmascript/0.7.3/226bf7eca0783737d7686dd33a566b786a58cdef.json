{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/aldeed:simple-schema","imported":["SimpleSchema"],"specifiers":[{"kind":"named","imported":"SimpleSchema","local":"SimpleSchema"}]},{"source":"/lib/collections/schemas/registry","imported":["PackageConfig"],"specifiers":[{"kind":"named","imported":"PackageConfig","local":"PackageConfig"}]}],"exports":{"exported":["PaypalPackageConfig","PaypalPayment"],"specifiers":[{"kind":"local","local":"PaypalPackageConfig","exported":"PaypalPackageConfig"},{"kind":"local","local":"PaypalPayment","exported":"PaypalPayment"}]}}},"options":{"filename":"/imports/plugins/included/payments-paypal/lib/collections/schemas/paypal.js","filenameRelative":"/imports/plugins/included/payments-paypal/lib/collections/schemas/paypal.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/included/payments-paypal/lib/collections/schemas/paypal.js"],"names":["SimpleSchema","PackageConfig","PaypalPackageConfig","type","Boolean","label","defaultValue","Array","String","allowedValues","optional","min","PaypalPayment","payerName","regEx","cardNumber","max","expireMonth","expireYear","cvv","messages"],"mappings":"AAAA,OAAS;AAAT,AAA6B;WAA7B;;;;;;;;;;;;;;;;;GACA,AAAS,AAAqB,AAE9B,AAAO,AAAM,AAAsB,AAAI,AAAa,AAClD,AAAe,AACb;8BAAqC,cAC7B;AAD6B,AAE5B;UAHI,AACwB,AAGrB;WAEhB;kBAA4B,AAC1B,AAAM,AACN;AAJA;AAIO;UAET;WAA8B,AAC5B,AAAM,AACN;AAZW,AAMe;AAMX,AAAC,AAAa;UAE/B;oBAA4B,wCAAA,AAC1B,AAAM,AACN;AAhBW,AAUiB,AAEb,AAA8B,AAAW;AAIjD;UAET;WAA8B,AAC5B,AAAM,AACN;AApBW,AAce;AAMX,AAAC,AAAa;UAE/B;oBAAuB,wCAAA,AACrB,AAAM,AACN;AAxBW,AAkBiB,AAEb,AAA8B,AAAW;AAEnC,AAEd;UAxBI,AAsBU,AAGX;WAEZ;cAAqB,AACnB,AAAM,AACN;AAJA;AAEmB,AAEZ;UA7BI,AA2BQ,AAGT;WAEZ;cAAqB,AACnB,AAAM,AACN;AAJA;AAEmB,AAEZ;UAlCI,AAgCQ,AAGT;WAEZ;cAAsB,AACpB,AAAM,AACN;AAJA;AAEoB,AAEb;UAvCI,AAqCS,AAGV;WAEZ;cAAyB,AACvB,AAAM,AACN;AAJA;AAIc;UAEhB;kBAA4B,AAC1B,AAAM,AACN;AAhDW,AA0CY;AAMT;UAEhB;kBAAsB,AACpB,AAAM,AACN;AApDW,AA8Ce;AAMnB;AAFa,AAGf,UACL;WAtDW,AAkDS,AAIV;SAEZ;cAA0B,AACxB,AAAM,AACN;AARoB,AAGpB;AAGwB,AAEjB;AAFiB,AAGnB,UACL;WA5DW,AAwDa,AAId;SAEZ;cAAyB,AACvB,AAAM,AACN;AALA;AAKc;UAjEb,AAA4B,AAAiB,AACnC;kBAqEjB,AAAO,AAAM,AAAgB,AAAI,AAAa,AAC5C,AAAW,AACT,AAAM,AACN,AAAO,AACP;AAXyB;AA7DY,AAEnC,CADA;AAuEK;AAJmC;UAMhC,AACV;AAAM,WADI,AAEV;AAAK,WAFK,AAGV,AAAK,AACL;AAJF;AAIS;UAET;SAAa,AACX;SADW,AACL,AACN;AAFW,AAEN,WAFM,AAGX,AAAO;AAfmC,AAMhC;AANgC;UAiBhC,AACV;SADU,AACJ,AACN;AAFU,AAEL,WAFK,AAGV,AAAO;AAHT;AAjB4C;AAsBvC,UACH;SADG,AACG,AACN;AAFG,AAEE,WAFF,AAGH,AAAO;AAHT;;UAOF;SAAA,AAAc,AAAS,AACrB;WADF,AAAuB,AACF;AA9Bd,AAAsB,AAAiB;AACjC","file":"/imports/plugins/included/payments-paypal/lib/collections/schemas/paypal.js.map","sourcesContent":["import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\nimport { PackageConfig } from \"/lib/collections/schemas/registry\";\n\nexport const PaypalPackageConfig = new SimpleSchema([\n  PackageConfig, {\n    \"settings.express_auth_and_capture\": {\n      type: Boolean,\n      label: \"Capture at time of Auth\",\n      defaultValue: false\n    },\n    \"settings.express.support\": {\n      type: Array,\n      label: \"Payment provider supported methods\"\n    },\n    \"settings.express.support.$\": {\n      type: String,\n      allowedValues: [\"authorize\", \"de-authorize\", \"capture\", \"refund\"]\n    },\n    \"settings.payflow.support\": {\n      type: Array,\n      label: \"Payment provider supported methods\"\n    },\n    \"settings.payflow.support.$\": {\n      type: String,\n      allowedValues: [\"Authorize\", \"De-authorize\", \"Capture\", \"Refund\"]\n    },\n    \"settings.merchantId\": {\n      type: String,\n      label: \"Merchant ID\",\n      optional: true\n    },\n    \"settings.username\": {\n      type: String,\n      label: \"Username\",\n      optional: true\n    },\n    \"settings.password\": {\n      type: String,\n      label: \"Password\",\n      optional: true\n    },\n    \"settings.signature\": {\n      type: String,\n      label: \"Signature\",\n      optional: true\n    },\n    \"settings.express_mode\": {\n      type: Boolean,\n      defaultValue: false\n    },\n    \"settings.payflow_enabled\": {\n      type: Boolean,\n      defaultValue: true\n    },\n    \"settings.client_id\": {\n      type: String,\n      label: \"API Client ID\",\n      min: 60,\n      optional: true\n    },\n    \"settings.client_secret\": {\n      type: String,\n      label: \"API Secret\",\n      min: 60,\n      optional: true\n    },\n    \"settings.payflow_mode\": {\n      type: Boolean,\n      defaultValue: false\n    }\n  }\n]);\n\nexport const PaypalPayment = new SimpleSchema({\n  payerName: {\n    type: String,\n    label: \"Cardholder name\",\n    regEx: /[A-Z][a-zA-Z]*/\n  },\n  cardNumber: {\n    type: String,\n    min: 12,\n    max: 19,\n    label: \"Card number\"\n  },\n  expireMonth: {\n    type: String,\n    max: 2,\n    label: \"Expiration month\"\n  },\n  expireYear: {\n    type: String,\n    max: 4,\n    label: \"Expiration year\"\n  },\n  cvv: {\n    type: String,\n    max: 4,\n    label: \"CVV\"\n  }\n});\n\nPaypalPayment.messages({\n  \"regEx payerName\": \"[label] must include both first and last name\"\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/included/payments-paypal/lib/collections/schemas/paypal.js.map","sourceFileName":"/imports/plugins/included/payments-paypal/lib/collections/schemas/paypal.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"paypal"},"ignored":false,"code":"module.export({\n  PaypalPackageConfig: function () {\n    return PaypalPackageConfig;\n  },\n  PaypalPayment: function () {\n    return PaypalPayment;\n  }\n});\nvar SimpleSchema = void 0;\nmodule.importSync(\"meteor/aldeed:simple-schema\", {\n  SimpleSchema: function (v) {\n    SimpleSchema = v;\n  }\n}, 0);\nvar PackageConfig = void 0;\nmodule.importSync(\"/lib/collections/schemas/registry\", {\n  PackageConfig: function (v) {\n    PackageConfig = v;\n  }\n}, 1);\nvar PaypalPackageConfig = new SimpleSchema([PackageConfig, {\n  \"settings.express_auth_and_capture\": {\n    type: Boolean,\n    label: \"Capture at time of Auth\",\n    defaultValue: false\n  },\n  \"settings.express.support\": {\n    type: Array,\n    label: \"Payment provider supported methods\"\n  },\n  \"settings.express.support.$\": {\n    type: String,\n    allowedValues: [\"authorize\", \"de-authorize\", \"capture\", \"refund\"]\n  },\n  \"settings.payflow.support\": {\n    type: Array,\n    label: \"Payment provider supported methods\"\n  },\n  \"settings.payflow.support.$\": {\n    type: String,\n    allowedValues: [\"Authorize\", \"De-authorize\", \"Capture\", \"Refund\"]\n  },\n  \"settings.merchantId\": {\n    type: String,\n    label: \"Merchant ID\",\n    optional: true\n  },\n  \"settings.username\": {\n    type: String,\n    label: \"Username\",\n    optional: true\n  },\n  \"settings.password\": {\n    type: String,\n    label: \"Password\",\n    optional: true\n  },\n  \"settings.signature\": {\n    type: String,\n    label: \"Signature\",\n    optional: true\n  },\n  \"settings.express_mode\": {\n    type: Boolean,\n    defaultValue: false\n  },\n  \"settings.payflow_enabled\": {\n    type: Boolean,\n    defaultValue: true\n  },\n  \"settings.client_id\": {\n    type: String,\n    label: \"API Client ID\",\n    min: 60,\n    optional: true\n  },\n  \"settings.client_secret\": {\n    type: String,\n    label: \"API Secret\",\n    min: 60,\n    optional: true\n  },\n  \"settings.payflow_mode\": {\n    type: Boolean,\n    defaultValue: false\n  }\n}]);\nvar PaypalPayment = new SimpleSchema({\n  payerName: {\n    type: String,\n    label: \"Cardholder name\",\n    regEx: /[A-Z][a-zA-Z]*/\n  },\n  cardNumber: {\n    type: String,\n    min: 12,\n    max: 19,\n    label: \"Card number\"\n  },\n  expireMonth: {\n    type: String,\n    max: 2,\n    label: \"Expiration month\"\n  },\n  expireYear: {\n    type: String,\n    max: 4,\n    label: \"Expiration year\"\n  },\n  cvv: {\n    type: String,\n    max: 4,\n    label: \"CVV\"\n  }\n});\nPaypalPayment.messages({\n  \"regEx payerName\": \"[label] must include both first and last name\"\n});","map":{"version":3,"sources":["/imports/plugins/included/payments-paypal/lib/collections/schemas/paypal.js"],"names":["SimpleSchema","PackageConfig","PaypalPackageConfig","type","Boolean","label","defaultValue","Array","String","allowedValues","optional","min","PaypalPayment","payerName","regEx","cardNumber","max","expireMonth","expireYear","cvv","messages"],"mappings":"AAAA,OAAS;AAAT,AAA6B;WAA7B;;;;;;;;;;;;;;;;;GACA,AAAS,AAAqB,AAE9B,AAAO,AAAM,AAAsB,AAAI,AAAa,AAClD,AAAe,AACb;8BAAqC,cAC7B;AAD6B,AAE5B;UAHI,AACwB,AAGrB;WAEhB;kBAA4B,AAC1B,AAAM,AACN;AAJA;AAIO;UAET;WAA8B,AAC5B,AAAM,AACN;AAZW,AAMe;AAMX,AAAC,AAAa;UAE/B;oBAA4B,wCAAA,AAC1B,AAAM,AACN;AAhBW,AAUiB,AAEb,AAA8B,AAAW;AAIjD;UAET;WAA8B,AAC5B,AAAM,AACN;AApBW,AAce;AAMX,AAAC,AAAa;UAE/B;oBAAuB,wCAAA,AACrB,AAAM,AACN;AAxBW,AAkBiB,AAEb,AAA8B,AAAW;AAEnC,AAEd;UAxBI,AAsBU,AAGX;WAEZ;cAAqB,AACnB,AAAM,AACN;AAJA;AAEmB,AAEZ;UA7BI,AA2BQ,AAGT;WAEZ;cAAqB,AACnB,AAAM,AACN;AAJA;AAEmB,AAEZ;UAlCI,AAgCQ,AAGT;WAEZ;cAAsB,AACpB,AAAM,AACN;AAJA;AAEoB,AAEb;UAvCI,AAqCS,AAGV;WAEZ;cAAyB,AACvB,AAAM,AACN;AAJA;AAIc;UAEhB;kBAA4B,AAC1B,AAAM,AACN;AAhDW,AA0CY;AAMT;UAEhB;kBAAsB,AACpB,AAAM,AACN;AApDW,AA8Ce;AAMnB;AAFa,AAGf,UACL;WAtDW,AAkDS,AAIV;SAEZ;cAA0B,AACxB,AAAM,AACN;AARoB,AAGpB;AAGwB,AAEjB;AAFiB,AAGnB,UACL;WA5DW,AAwDa,AAId;SAEZ;cAAyB,AACvB,AAAM,AACN;AALA;AAKc;UAjEb,AAA4B,AAAiB,AACnC;kBAqEjB,AAAO,AAAM,AAAgB,AAAI,AAAa,AAC5C,AAAW,AACT,AAAM,AACN,AAAO,AACP;AAXyB;AA7DY,AAEnC,CADA;AAuEK;AAJmC;UAMhC,AACV;AAAM,WADI,AAEV;AAAK,WAFK,AAGV,AAAK,AACL;AAJF;AAIS;UAET;SAAa,AACX;SADW,AACL,AACN;AAFW,AAEN,WAFM,AAGX,AAAO;AAfmC,AAMhC;AANgC;UAiBhC,AACV;SADU,AACJ,AACN;AAFU,AAEL,WAFK,AAGV,AAAO;AAHT;AAjB4C;AAsBvC,UACH;SADG,AACG,AACN;AAFG,AAEE,WAFF,AAGH,AAAO;AAHT;;UAOF;SAAA,AAAc,AAAS,AACrB;WADF,AAAuB,AACF;AA9Bd,AAAsB,AAAiB;AACjC","file":"/imports/plugins/included/payments-paypal/lib/collections/schemas/paypal.js.map","sourcesContent":["import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\nimport { PackageConfig } from \"/lib/collections/schemas/registry\";\n\nexport const PaypalPackageConfig = new SimpleSchema([\n  PackageConfig, {\n    \"settings.express_auth_and_capture\": {\n      type: Boolean,\n      label: \"Capture at time of Auth\",\n      defaultValue: false\n    },\n    \"settings.express.support\": {\n      type: Array,\n      label: \"Payment provider supported methods\"\n    },\n    \"settings.express.support.$\": {\n      type: String,\n      allowedValues: [\"authorize\", \"de-authorize\", \"capture\", \"refund\"]\n    },\n    \"settings.payflow.support\": {\n      type: Array,\n      label: \"Payment provider supported methods\"\n    },\n    \"settings.payflow.support.$\": {\n      type: String,\n      allowedValues: [\"Authorize\", \"De-authorize\", \"Capture\", \"Refund\"]\n    },\n    \"settings.merchantId\": {\n      type: String,\n      label: \"Merchant ID\",\n      optional: true\n    },\n    \"settings.username\": {\n      type: String,\n      label: \"Username\",\n      optional: true\n    },\n    \"settings.password\": {\n      type: String,\n      label: \"Password\",\n      optional: true\n    },\n    \"settings.signature\": {\n      type: String,\n      label: \"Signature\",\n      optional: true\n    },\n    \"settings.express_mode\": {\n      type: Boolean,\n      defaultValue: false\n    },\n    \"settings.payflow_enabled\": {\n      type: Boolean,\n      defaultValue: true\n    },\n    \"settings.client_id\": {\n      type: String,\n      label: \"API Client ID\",\n      min: 60,\n      optional: true\n    },\n    \"settings.client_secret\": {\n      type: String,\n      label: \"API Secret\",\n      min: 60,\n      optional: true\n    },\n    \"settings.payflow_mode\": {\n      type: Boolean,\n      defaultValue: false\n    }\n  }\n]);\n\nexport const PaypalPayment = new SimpleSchema({\n  payerName: {\n    type: String,\n    label: \"Cardholder name\",\n    regEx: /[A-Z][a-zA-Z]*/\n  },\n  cardNumber: {\n    type: String,\n    min: 12,\n    max: 19,\n    label: \"Card number\"\n  },\n  expireMonth: {\n    type: String,\n    max: 2,\n    label: \"Expiration month\"\n  },\n  expireYear: {\n    type: String,\n    max: 4,\n    label: \"Expiration year\"\n  },\n  cvv: {\n    type: String,\n    max: 4,\n    label: \"CVV\"\n  }\n});\n\nPaypalPayment.messages({\n  \"regEx payerName\": \"[label] must include both first and last name\"\n});\n"]},"hash":"226bf7eca0783737d7686dd33a566b786a58cdef"}
