{"metadata":{"usedHelpers":["typeof","extends","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"lodash/find","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_find"}]},{"source":"lodash/uniq","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_uniq"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/session","imported":["Session"],"specifiers":[{"kind":"named","imported":"Session","local":"Session"}]},{"source":"meteor/check","imported":["check"],"specifiers":[{"kind":"named","imported":"check","local":"check"}]},{"source":"meteor/tracker","imported":["Tracker"],"specifiers":[{"kind":"named","imported":"Tracker","local":"Tracker"}]},{"source":"meteor/reactive-var","imported":["ReactiveVar"],"specifiers":[{"kind":"named","imported":"ReactiveVar","local":"ReactiveVar"}]},{"source":"meteor/reactive-dict","imported":["ReactiveDict"],"specifiers":[{"kind":"named","imported":"ReactiveDict","local":"ReactiveDict"}]},{"source":"/client/modules/logger","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Logger"}]},{"source":"/client/collections","imported":["Countries"],"specifiers":[{"kind":"named","imported":"Countries","local":"Countries"}]},{"source":"/client/modules/i18n","imported":["localeDep"],"specifiers":[{"kind":"named","imported":"localeDep","local":"localeDep"}]},{"source":"/lib/collections","imported":["Packages","Shops"],"specifiers":[{"kind":"named","imported":"Packages","local":"Packages"},{"kind":"named","imported":"Shops","local":"Shops"}]},{"source":"/client/modules/router","imported":["Router"],"specifiers":[{"kind":"named","imported":"Router","local":"Router"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/client/modules/core/main.js","filenameRelative":"/client/modules/core/main.js","inputSourceMap":{"version":3,"sources":["/client/modules/core/main.js"],"names":["Meteor","Session","check","Tracker","ReactiveVar","ReactiveDict","Logger","Countries","localeDep","Packages","Shops","Router","reactionState","shopId","Locale","init","autorun","domain","shop","Subscriptions","ready","absoluteUrl","split","findOne","domains","_id","shopName","name","createCountryCollection","locales","countries","locale","get","currency","localeCurrency","currencies","rate","changed","shopCurrency","state","hasPermission","checkPermissions","checkUserId","checkGroup","group","getShopId","permissions","id","userId","roleCheck","undefined","push","Roles","userIsInRole","sellerShopPermissions","getGroupsForUser","key","validateUserId","clearTimeout","reload","loggingIn","setTimeout","GLOBAL_GROUP","hasOwnerAccess","ownerPermissions","hasAdminAccess","adminPermissions","hasDashboardAccess","dashboardPermissions","getUserPreferences","packageName","preference","defaultValue","user","profile","preferences","setUserPreferences","value","users","update","$set","updateUserPreferences","values","currentPreference","getShopName","getShopPrefix","getSlug","toLowerCase","getShopSettings","settings","getShopCurrency","isPreview","viewAs","getPackageSettings","allowGuestCheckout","allowGuest","public","getSellerShopId","showActionView","viewData","set","setActionView","isActionViewOpen","equals","isActionViewDetailOpen","viewStack","Array","isArray","registryItem","getRegistryForCurrentRoute","template","pushActionView","actionViewStack","isActionViewAtRootView","length","popActionView","pop","setActionViewDetail","open","options","pushActionViewDetail","detailViewStack","popActionViewDetail","isActionViewDetailAtRootView","actionViewDetailStack","getActionView","getActionViewDetail","hideActionView","clearActionView","hideActionViewDetail","clearActionViewDetail","label","i18nKeyLabel","getCurrentTag","getRouteName","current","params","slug","provides","watchPathChange","currentRouteName","currentRoute","route","reactionApp","enabled","registry","settingsData","item","debug","Object","countryOptions","hasOwnProperty","call","country","sort","a","b","insert"],"mappings":"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","file":"/client/modules/core/main.js.map","sourcesContent":["import _ from \"lodash\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Session } from \"meteor/session\";\nimport { check } from \"meteor/check\";\nimport { Tracker } from \"meteor/tracker\";\nimport { ReactiveVar } from \"meteor/reactive-var\";\nimport { ReactiveDict } from \"meteor/reactive-dict\";\nimport Logger from \"/client/modules/logger\";\nimport { Countries } from \"/client/collections\";\nimport { localeDep } from  \"/client/modules/i18n\";\nimport { Packages, Shops } from \"/lib/collections\";\nimport { Router } from \"/client/modules/router\";\n\n// Global, private state object for client side\n// This is placed outside the main object to make it a private variable.\n// access using `Reaction.state`\nconst reactionState = new ReactiveDict();\n\n/**\n * Reaction namespace\n * Global reaction shop permissions methods and shop initialization\n */\nexport default {\n  shopId: null,\n\n  Locale: new ReactiveVar({}),\n\n  init() {\n    // keep an eye out for shop change\n    return Tracker.autorun(() => {\n      let domain;\n      let shop;\n\n      if (this.Subscriptions.Shops.ready()) {\n        domain = Meteor.absoluteUrl().split(\"/\")[2].split(\":\")[0];\n        shop = Shops.findOne({\n          domains: domain\n        });\n\n        if (shop) {\n          this.shopId = shop._id;\n          this.shopName = shop.name;\n          // initialize local client Countries collection\n          if (!Countries.findOne()) {\n            createCountryCollection(shop.locales.countries);\n          }\n\n          const locale = this.Locale.get() || {};\n\n          // fix for https://github.com/reactioncommerce/reaction/issues/248\n          // we need to keep an eye for rates changes\n          if (typeof locale.locale === \"object\" &&\n            typeof locale.currency === \"object\" &&\n            typeof locale.locale.currency === \"string\") {\n            const localeCurrency = locale.locale.currency.split(\",\")[0];\n            if (typeof shop.currencies[localeCurrency] === \"object\") {\n              if (typeof shop.currencies[localeCurrency].rate === \"number\") {\n                locale.currency.rate = shop.currencies[localeCurrency].rate;\n                localeDep.changed();\n              }\n            }\n          }\n          // we are looking for a shopCurrency changes here\n          if (typeof locale.shopCurrency === \"object\") {\n            locale.shopCurrency = shop.currencies[shop.currency];\n            localeDep.changed();\n          }\n          return this;\n        }\n      }\n    });\n  },\n\n  // Return global \"reactionState\" Reactive Dict\n  get state() {\n    return reactionState;\n  },\n\n  /**\n   * hasPermission - client\n   * client permissions checks\n   * hasPermission exists on both the server and the client.\n   *\n   * @param {String | Array} checkPermissions -String or Array of permissions if empty, defaults to \"admin, owner\"\n   * @param {String} checkUserId - userId, defaults to Meteor.userId()\n   * @param {String} checkGroup group - default to shopId\n   * @return {Boolean} Boolean - true if has permission\n   */\n  hasPermission(checkPermissions, checkUserId, checkGroup) {\n    let group = this.getShopId();\n    let permissions = [\"owner\"];\n    let id = \"\";\n    const userId = checkUserId || this.userId || Meteor.userId();\n    //\n    // local roleCheck function\n    // is the bulk of the logic\n    // called out a userId is validated.\n    //\n    function roleCheck() {\n      // permissions can be either a string or an array\n      // we'll force it into an array and use that\n      if (checkPermissions === undefined) {\n        permissions = [\"owner\"];\n      } else if (typeof checkPermissions === \"string\") {\n        permissions = [checkPermissions];\n      } else {\n        permissions = checkPermissions;\n      }\n      // if the user has admin, owner permissions we'll always check if those roles are enough\n      permissions.push(\"owner\");\n      permissions = _.uniq(permissions);\n\n      //\n      // return if user has permissions in the group\n      //\n      if (Roles.userIsInRole(userId, permissions, group)) {\n        return true;\n      }\n      // global roles check\n      const sellerShopPermissions = Roles.getGroupsForUser(userId, \"admin\");\n      // we're looking for seller permissions.\n      if (sellerShopPermissions) {\n        // loop through shops roles and check permissions\n        for (const key in sellerShopPermissions) {\n          if (key) {\n            const shop = sellerShopPermissions[key];\n            if (Roles.userIsInRole(userId, permissions, shop)) {\n              return true;\n            }\n          }\n        }\n      }\n      // no specific permissions found returning false\n      return false;\n    }\n\n    //\n    // check if a user id has been found\n    // in line 156 setTimeout\n    //\n    function validateUserId() {\n      if (Meteor.userId()) {\n        Meteor.clearTimeout(id);\n        Router.reload();\n        return roleCheck();\n      }\n      return false;\n    }\n\n    //\n    // actual logic block to check permissions\n    // we'll bypass unecessary checks during\n    // a user logging, as we'll check again\n    // when everything is ready\n    //\n    if (Meteor.loggingIn() === false) {\n      //\n      // this userId check happens because when logout\n      // occurs it takes a few cycles for a new anonymous user\n      // to get created and during this time the user has no\n      // permission, not even guest permissions so we\n      // need to wait and reload the routes. This\n      // mainly affects the logout from dashboard pages\n      //\n      if (!userId) {\n        id = Meteor.setTimeout(validateUserId, 5000);\n      } else {\n        return roleCheck();\n      }\n\n      // default group to the shop or global if shop\n      // isn't defined for some reason.\n      if (checkGroup !== undefined && typeof checkGroup === \"string\") {\n        group = checkGroup;\n      }\n      if (!group) {\n        group = Roles.GLOBAL_GROUP;\n      }\n    }\n    // return false to be safe\n    return false;\n  },\n\n  hasOwnerAccess() {\n    const ownerPermissions = [\"owner\"];\n    return this.hasPermission(ownerPermissions);\n  },\n\n  hasAdminAccess() {\n    const adminPermissions = [\"owner\", \"admin\"];\n    return this.hasPermission(adminPermissions);\n  },\n\n  hasDashboardAccess() {\n    const dashboardPermissions = [\"owner\", \"admin\", \"dashboard\"];\n    return this.hasPermission(dashboardPermissions);\n  },\n\n  getUserPreferences(packageName, preference, defaultValue) {\n    const user = Meteor.user();\n\n    if (user) {\n      const profile = Meteor.user().profile;\n      if (profile && profile.preferences && profile.preferences[packageName] && profile.preferences[packageName][preference]) {\n        return profile.preferences[packageName][preference];\n      }\n    }\n\n    return defaultValue || undefined;\n  },\n\n  setUserPreferences(packageName, preference, value) {\n    if (Meteor.user()) {\n      return Meteor.users.update(Meteor.userId(), {\n        $set: {\n          [`profile.preferences.${packageName}.${preference}`]: value\n        }\n      });\n    }\n    return false;\n  },\n\n  updateUserPreferences(packageName, preference, values) {\n    const currentPreference = this.getUserPreferences(packageName, preference, {});\n    return this.setUserPreferences(packageName, preference, {\n      ...currentPreference,\n      ...values\n    });\n  },\n\n  getShopId() {\n    return this.shopId;\n  },\n\n  getShopName() {\n    return this.shopName;\n  },\n\n  getShopPrefix() {\n    return \"/\" + this.getSlug(this.getShopName().toLowerCase());\n  },\n\n  getShopSettings() {\n    const settings = Packages.findOne({\n      name: \"core\",\n      shopId: this.shopId\n    }) || {};\n    return settings.settings || {};\n  },\n\n  getShopCurrency() {\n    const shop = Shops.findOne({\n      _id: this.shopId\n    });\n\n    return shop && shop.currency || \"USD\";\n  },\n\n  isPreview() {\n    const viewAs = this.getUserPreferences(\"reaction-dashboard\", \"viewAs\", \"administrator\");\n\n    if (viewAs === \"customer\") {\n      return true;\n    }\n\n    return false;\n  },\n\n  getPackageSettings(name) {\n    return Packages.findOne({ name, shopId: this.getShopId() });\n  },\n\n  allowGuestCheckout() {\n    let allowGuest = false;\n    const settings = this.getShopSettings();\n    // we can disable in admin, let's check.\n    if (settings.public && settings.public.allowGuestCheckout) {\n      allowGuest = settings.public.allowGuestCheckout;\n    }\n    return allowGuest;\n  },\n\n  getSellerShopId() {\n    return Roles.getGroupsForUser(this.userId, \"admin\");\n  },\n\n  /**\n   * @description showActionView\n   *\n   * @param {String} viewData {label, template, data}\n   * @returns {String} Session \"admin/showActionView\"\n   */\n  showActionView(viewData) {\n    Session.set(\"admin/showActionView\", true);\n    this.setActionView(viewData);\n  },\n\n  isActionViewOpen() {\n    return Session.equals(\"admin/showActionView\", true);\n  },\n\n  isActionViewDetailOpen() {\n    return Session.equals(\"admin/showActionViewDetail\", true);\n  },\n\n\n  setActionView(viewData) {\n    if (viewData) {\n      let viewStack;\n\n      if (Array.isArray(viewData)) {\n        viewStack = viewData;\n      } else {\n        viewStack = [viewData];\n      }\n\n      Session.set(\"admin/actionView\", viewStack);\n    } else {\n      const registryItem = this.getRegistryForCurrentRoute(\n        \"settings\");\n\n      if (registryItem) {\n        this.setActionView(registryItem);\n      } else {\n        this.setActionView({\n          template: \"blankControls\"\n        });\n      }\n    }\n  },\n\n  pushActionView(viewData) {\n    Session.set(\"admin/showActionView\", true);\n\n    const actionViewStack = Session.get(\"admin/actionView\");\n\n    if (viewData) {\n      actionViewStack.push(viewData);\n      Session.set(\"admin/actionView\", actionViewStack);\n    } else {\n      const registryItem = this.getRegistryForCurrentRoute(\n        \"settings\");\n\n      if (registryItem) {\n        this.pushActionView(registryItem);\n      } else {\n        this.pushActionView({ template: \"blankControls\" });\n      }\n    }\n  },\n\n  isActionViewAtRootView() {\n    const actionViewStack = Session.get(\"admin/actionView\");\n\n    if (Array.isArray(actionViewStack) && actionViewStack.length === 1) {\n      return true;\n    }\n\n    return false;\n  },\n\n  popActionView() {\n    const actionViewStack = Session.get(\"admin/actionView\");\n    actionViewStack.pop();\n\n    Session.set(\"admin/actionView\", actionViewStack);\n\n    this.setActionViewDetail({}, { open: false });\n  },\n\n  setActionViewDetail(viewData, options = {}) {\n    const { open } = options;\n\n    Session.set(\"admin/showActionView\", true);\n    Session.set(\"admin/showActionViewDetail\", typeof open === \"boolean\" ? open : true);\n\n    if (viewData) {\n      Session.set(\"admin/detailView\", [viewData]);\n    }\n  },\n\n  pushActionViewDetail(viewData) {\n    Session.set(\"admin/showActionView\", true);\n    Session.set(\"admin/showActionViewDetail\", true);\n\n    const detailViewStack = Session.get(\"admin/detailView\");\n\n    if (viewData) {\n      detailViewStack.push(viewData);\n      Session.set(\"admin/detailView\", detailViewStack);\n    }\n  },\n\n  popActionViewDetail() {\n    const detailViewStack = Session.get(\"admin/detailView\");\n    detailViewStack.pop();\n\n    Session.set(\"admin/detailView\", detailViewStack);\n  },\n\n  isActionViewDetailAtRootView() {\n    const actionViewDetailStack = Session.get(\"admin/detailView\");\n\n    if (Array.isArray(actionViewDetailStack) && actionViewDetailStack.length === 1) {\n      return true;\n    }\n\n    return false;\n  },\n\n  getActionView() {\n    const actionViewStack = Session.get(\"admin/actionView\");\n\n    if (Array.isArray(actionViewStack) && actionViewStack.length) {\n      return actionViewStack.pop();\n    }\n\n    return {};\n  },\n\n  getActionViewDetail() {\n    const detailViewStack = Session.get(\"admin/detailView\");\n\n    if (Array.isArray(detailViewStack) && detailViewStack.length) {\n      return detailViewStack.pop();\n    }\n\n    return {};\n  },\n\n  hideActionView() {\n    Session.set(\"admin/showActionView\", false);\n    this.clearActionView();\n  },\n\n  hideActionViewDetail() {\n    Session.set(\"admin/showActionViewDetail\", false);\n    this.clearActionViewDetail();\n  },\n\n  clearActionView() {\n    Session.set(\"admin/actionView\", [{\n      label: \"\",\n      i18nKeyLabel: \"\"\n    }]);\n    Session.set(\"admin/detailView\", [{\n      label: \"\",\n      i18nKeyLabel: \"\"\n    }]);\n  },\n\n  clearActionViewDetail() {\n    Session.set(\"admin/detailView\", [{\n      label: \"\",\n      i18nKeyLabel: \"\"\n    }]);\n  },\n\n  getCurrentTag() {\n    if (this.Router.getRouteName() === \"tag\") {\n      return this.Router.current().params.slug;\n    }\n  },\n\n  getRegistryForCurrentRoute(provides = \"dashboard\") {\n    this.Router.watchPathChange();\n    const currentRouteName = this.Router.getRouteName();\n    const currentRoute = this.Router.current();\n    const template = currentRoute.route.options.template;\n    // find registry entries for routeName\n    const reactionApp = Packages.findOne({\n      \"registry.name\": currentRouteName,\n      \"registry.provides\": provides,\n      \"enabled\": true\n    }, {\n      enabled: 1,\n      registry: 1,\n      route: 1,\n      name: 1,\n      label: 1,\n      settings: 1\n    });\n\n    // valid application\n    if (reactionApp) {\n      const settingsData = _.find(reactionApp.registry, function (item) {\n        return item.provides === provides && item.template === template;\n      });\n      return settingsData;\n    }\n    Logger.debug(\"getRegistryForCurrentRoute not found\", template, provides);\n    return {};\n  }\n\n};\n\n/**\n * createCountryCollection\n * Create a client-side only collection of Countries for a dropdown form\n * properly sorted*\n * @param {Object} countries -  The countries array on the Shop collection\n * @returns {Array} countryOptions - Sorted array of countries\n */\nfunction createCountryCollection(countries) {\n  check(countries, Object);\n  const countryOptions = [];\n  for (const locale in countries) {\n    if ({}.hasOwnProperty.call(countries, locale)) {\n      const country = countries[locale];\n      countryOptions.push({\n        label: country.name,\n        value: locale\n      });\n    }\n  }\n  countryOptions.sort(function (a, b) {\n    if (a.label < b.label) {\n      return -1;\n    }\n    if (a.label > b.label) {\n      return 1;\n    }\n    return 0;\n  });\n\n  for (const country of countryOptions) {\n    Countries.insert(country);\n  }\n  return countryOptions;\n}\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/modules/core/main.js.map","sourceFileName":"/client/modules/core/main.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"main"},"ignored":false,"code":"var _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _typeof2 = require(\"babel-runtime/helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _find = void 0;\n\nmodule.importSync(\"lodash/find\", {\n  \"default\": function (v) {\n    _find = v;\n  }\n}, 0);\n\nvar _uniq = void 0;\n\nmodule.importSync(\"lodash/uniq\", {\n  \"default\": function (v) {\n    _uniq = v;\n  }\n}, 1);\nvar Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 2);\nvar Session = void 0;\nmodule.importSync(\"meteor/session\", {\n  Session: function (v) {\n    Session = v;\n  }\n}, 3);\nvar check = void 0;\nmodule.importSync(\"meteor/check\", {\n  check: function (v) {\n    check = v;\n  }\n}, 4);\nvar Tracker = void 0;\nmodule.importSync(\"meteor/tracker\", {\n  Tracker: function (v) {\n    Tracker = v;\n  }\n}, 5);\nvar ReactiveVar = void 0;\nmodule.importSync(\"meteor/reactive-var\", {\n  ReactiveVar: function (v) {\n    ReactiveVar = v;\n  }\n}, 6);\nvar ReactiveDict = void 0;\nmodule.importSync(\"meteor/reactive-dict\", {\n  ReactiveDict: function (v) {\n    ReactiveDict = v;\n  }\n}, 7);\nvar Logger = void 0;\nmodule.importSync(\"/client/modules/logger\", {\n  \"default\": function (v) {\n    Logger = v;\n  }\n}, 8);\nvar Countries = void 0;\nmodule.importSync(\"/client/collections\", {\n  Countries: function (v) {\n    Countries = v;\n  }\n}, 9);\nvar localeDep = void 0;\nmodule.importSync(\"/client/modules/i18n\", {\n  localeDep: function (v) {\n    localeDep = v;\n  }\n}, 10);\nvar Packages = void 0,\n    Shops = void 0;\nmodule.importSync(\"/lib/collections\", {\n  Packages: function (v) {\n    Packages = v;\n  },\n  Shops: function (v) {\n    Shops = v;\n  }\n}, 11);\nvar Router = void 0;\nmodule.importSync(\"/client/modules/router\", {\n  Router: function (v) {\n    Router = v;\n  }\n}, 12);\n// Global, private state object for client side\n// This is placed outside the main object to make it a private variable.\n// access using `Reaction.state`\nvar reactionState = new ReactiveDict(); /**\n                                         * Reaction namespace\n                                         * Global reaction shop permissions methods and shop initialization\n                                         */\nmodule.export(\"default\", exports.default = {\n  shopId: null,\n  Locale: new ReactiveVar({}),\n  init: function () {\n    var _this = this;\n\n    // keep an eye out for shop change\n    return Tracker.autorun(function () {\n      var domain = void 0;\n      var shop = void 0;\n\n      if (_this.Subscriptions.Shops.ready()) {\n        domain = Meteor.absoluteUrl().split(\"/\")[2].split(\":\")[0];\n        shop = Shops.findOne({\n          domains: domain\n        });\n\n        if (shop) {\n          _this.shopId = shop._id;\n          _this.shopName = shop.name; // initialize local client Countries collection\n\n          if (!Countries.findOne()) {\n            createCountryCollection(shop.locales.countries);\n          }\n\n          var locale = _this.Locale.get() || {}; // fix for https://github.com/reactioncommerce/reaction/issues/248\n          // we need to keep an eye for rates changes\n\n          if ((0, _typeof3.default)(locale.locale) === \"object\" && (0, _typeof3.default)(locale.currency) === \"object\" && typeof locale.locale.currency === \"string\") {\n            var localeCurrency = locale.locale.currency.split(\",\")[0];\n\n            if ((0, _typeof3.default)(shop.currencies[localeCurrency]) === \"object\") {\n              if (typeof shop.currencies[localeCurrency].rate === \"number\") {\n                locale.currency.rate = shop.currencies[localeCurrency].rate;\n                localeDep.changed();\n              }\n            }\n          } // we are looking for a shopCurrency changes here\n\n\n          if ((0, _typeof3.default)(locale.shopCurrency) === \"object\") {\n            locale.shopCurrency = shop.currencies[shop.currency];\n            localeDep.changed();\n          }\n\n          return _this;\n        }\n      }\n    });\n  },\n\n  // Return global \"reactionState\" Reactive Dict\n  get state() {\n    return reactionState;\n  },\n\n  /**\n   * hasPermission - client\n   * client permissions checks\n   * hasPermission exists on both the server and the client.\n   *\n   * @param {String | Array} checkPermissions -String or Array of permissions if empty, defaults to \"admin, owner\"\n   * @param {String} checkUserId - userId, defaults to Meteor.userId()\n   * @param {String} checkGroup group - default to shopId\n   * @return {Boolean} Boolean - true if has permission\n   */hasPermission: function (checkPermissions, checkUserId, checkGroup) {\n    var group = this.getShopId();\n    var permissions = [\"owner\"];\n    var id = \"\";\n    var userId = checkUserId || this.userId || Meteor.userId(); //\n    // local roleCheck function\n    // is the bulk of the logic\n    // called out a userId is validated.\n    //\n\n    function roleCheck() {\n      // permissions can be either a string or an array\n      // we'll force it into an array and use that\n      if (checkPermissions === undefined) {\n        permissions = [\"owner\"];\n      } else if (typeof checkPermissions === \"string\") {\n        permissions = [checkPermissions];\n      } else {\n        permissions = checkPermissions;\n      } // if the user has admin, owner permissions we'll always check if those roles are enough\n\n\n      permissions.push(\"owner\");\n      permissions = _uniq(permissions); //\n      // return if user has permissions in the group\n      //\n\n      if (Roles.userIsInRole(userId, permissions, group)) {\n        return true;\n      } // global roles check\n\n\n      var sellerShopPermissions = Roles.getGroupsForUser(userId, \"admin\"); // we're looking for seller permissions.\n\n      if (sellerShopPermissions) {\n        // loop through shops roles and check permissions\n        for (var key in meteorBabelHelpers.sanitizeForInObject(sellerShopPermissions)) {\n          if (key) {\n            var shop = sellerShopPermissions[key];\n\n            if (Roles.userIsInRole(userId, permissions, shop)) {\n              return true;\n            }\n          }\n        }\n      } // no specific permissions found returning false\n\n\n      return false;\n    } //\n    // check if a user id has been found\n    // in line 156 setTimeout\n    //\n\n\n    function validateUserId() {\n      if (Meteor.userId()) {\n        Meteor.clearTimeout(id);\n        Router.reload();\n        return roleCheck();\n      }\n\n      return false;\n    } //\n    // actual logic block to check permissions\n    // we'll bypass unecessary checks during\n    // a user logging, as we'll check again\n    // when everything is ready\n    //\n\n\n    if (Meteor.loggingIn() === false) {\n      //\n      // this userId check happens because when logout\n      // occurs it takes a few cycles for a new anonymous user\n      // to get created and during this time the user has no\n      // permission, not even guest permissions so we\n      // need to wait and reload the routes. This\n      // mainly affects the logout from dashboard pages\n      //\n      if (!userId) {\n        id = Meteor.setTimeout(validateUserId, 5000);\n      } else {\n        return roleCheck();\n      } // default group to the shop or global if shop\n      // isn't defined for some reason.\n\n\n      if (checkGroup !== undefined && typeof checkGroup === \"string\") {\n        group = checkGroup;\n      }\n\n      if (!group) {\n        group = Roles.GLOBAL_GROUP;\n      }\n    } // return false to be safe\n\n\n    return false;\n  },\n  hasOwnerAccess: function () {\n    var ownerPermissions = [\"owner\"];\n    return this.hasPermission(ownerPermissions);\n  },\n  hasAdminAccess: function () {\n    var adminPermissions = [\"owner\", \"admin\"];\n    return this.hasPermission(adminPermissions);\n  },\n  hasDashboardAccess: function () {\n    var dashboardPermissions = [\"owner\", \"admin\", \"dashboard\"];\n    return this.hasPermission(dashboardPermissions);\n  },\n  getUserPreferences: function (packageName, preference, defaultValue) {\n    var user = Meteor.user();\n\n    if (user) {\n      var profile = Meteor.user().profile;\n\n      if (profile && profile.preferences && profile.preferences[packageName] && profile.preferences[packageName][preference]) {\n        return profile.preferences[packageName][preference];\n      }\n    }\n\n    return defaultValue || undefined;\n  },\n  setUserPreferences: function (packageName, preference, value) {\n    if (Meteor.user()) {\n      var _$set;\n\n      return Meteor.users.update(Meteor.userId(), {\n        $set: (_$set = {}, _$set[\"profile.preferences.\" + packageName + \".\" + preference] = value, _$set)\n      });\n    }\n\n    return false;\n  },\n  updateUserPreferences: function (packageName, preference, values) {\n    var currentPreference = this.getUserPreferences(packageName, preference, {});\n    return this.setUserPreferences(packageName, preference, (0, _extends3.default)({}, currentPreference, values));\n  },\n  getShopId: function () {\n    return this.shopId;\n  },\n  getShopName: function () {\n    return this.shopName;\n  },\n  getShopPrefix: function () {\n    return \"/\" + this.getSlug(this.getShopName().toLowerCase());\n  },\n  getShopSettings: function () {\n    var settings = Packages.findOne({\n      name: \"core\",\n      shopId: this.shopId\n    }) || {};\n    return settings.settings || {};\n  },\n  getShopCurrency: function () {\n    var shop = Shops.findOne({\n      _id: this.shopId\n    });\n    return shop && shop.currency || \"USD\";\n  },\n  isPreview: function () {\n    var viewAs = this.getUserPreferences(\"reaction-dashboard\", \"viewAs\", \"administrator\");\n\n    if (viewAs === \"customer\") {\n      return true;\n    }\n\n    return false;\n  },\n  getPackageSettings: function (name) {\n    return Packages.findOne({\n      name: name,\n      shopId: this.getShopId()\n    });\n  },\n  allowGuestCheckout: function () {\n    var allowGuest = false;\n    var settings = this.getShopSettings(); // we can disable in admin, let's check.\n\n    if (settings.public && settings.public.allowGuestCheckout) {\n      allowGuest = settings.public.allowGuestCheckout;\n    }\n\n    return allowGuest;\n  },\n  getSellerShopId: function () {\n    return Roles.getGroupsForUser(this.userId, \"admin\");\n  },\n  /**\n   * @description showActionView\n   *\n   * @param {String} viewData {label, template, data}\n   * @returns {String} Session \"admin/showActionView\"\n   */showActionView: function (viewData) {\n    Session.set(\"admin/showActionView\", true);\n    this.setActionView(viewData);\n  },\n  isActionViewOpen: function () {\n    return Session.equals(\"admin/showActionView\", true);\n  },\n  isActionViewDetailOpen: function () {\n    return Session.equals(\"admin/showActionViewDetail\", true);\n  },\n  setActionView: function (viewData) {\n    if (viewData) {\n      var viewStack = void 0;\n\n      if (Array.isArray(viewData)) {\n        viewStack = viewData;\n      } else {\n        viewStack = [viewData];\n      }\n\n      Session.set(\"admin/actionView\", viewStack);\n    } else {\n      var registryItem = this.getRegistryForCurrentRoute(\"settings\");\n\n      if (registryItem) {\n        this.setActionView(registryItem);\n      } else {\n        this.setActionView({\n          template: \"blankControls\"\n        });\n      }\n    }\n  },\n  pushActionView: function (viewData) {\n    Session.set(\"admin/showActionView\", true);\n    var actionViewStack = Session.get(\"admin/actionView\");\n\n    if (viewData) {\n      actionViewStack.push(viewData);\n      Session.set(\"admin/actionView\", actionViewStack);\n    } else {\n      var registryItem = this.getRegistryForCurrentRoute(\"settings\");\n\n      if (registryItem) {\n        this.pushActionView(registryItem);\n      } else {\n        this.pushActionView({\n          template: \"blankControls\"\n        });\n      }\n    }\n  },\n  isActionViewAtRootView: function () {\n    var actionViewStack = Session.get(\"admin/actionView\");\n\n    if (Array.isArray(actionViewStack) && actionViewStack.length === 1) {\n      return true;\n    }\n\n    return false;\n  },\n  popActionView: function () {\n    var actionViewStack = Session.get(\"admin/actionView\");\n    actionViewStack.pop();\n    Session.set(\"admin/actionView\", actionViewStack);\n    this.setActionViewDetail({}, {\n      open: false\n    });\n  },\n  setActionViewDetail: function (viewData) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var open = options.open;\n    Session.set(\"admin/showActionView\", true);\n    Session.set(\"admin/showActionViewDetail\", typeof open === \"boolean\" ? open : true);\n\n    if (viewData) {\n      Session.set(\"admin/detailView\", [viewData]);\n    }\n  },\n  pushActionViewDetail: function (viewData) {\n    Session.set(\"admin/showActionView\", true);\n    Session.set(\"admin/showActionViewDetail\", true);\n    var detailViewStack = Session.get(\"admin/detailView\");\n\n    if (viewData) {\n      detailViewStack.push(viewData);\n      Session.set(\"admin/detailView\", detailViewStack);\n    }\n  },\n  popActionViewDetail: function () {\n    var detailViewStack = Session.get(\"admin/detailView\");\n    detailViewStack.pop();\n    Session.set(\"admin/detailView\", detailViewStack);\n  },\n  isActionViewDetailAtRootView: function () {\n    var actionViewDetailStack = Session.get(\"admin/detailView\");\n\n    if (Array.isArray(actionViewDetailStack) && actionViewDetailStack.length === 1) {\n      return true;\n    }\n\n    return false;\n  },\n  getActionView: function () {\n    var actionViewStack = Session.get(\"admin/actionView\");\n\n    if (Array.isArray(actionViewStack) && actionViewStack.length) {\n      return actionViewStack.pop();\n    }\n\n    return {};\n  },\n  getActionViewDetail: function () {\n    var detailViewStack = Session.get(\"admin/detailView\");\n\n    if (Array.isArray(detailViewStack) && detailViewStack.length) {\n      return detailViewStack.pop();\n    }\n\n    return {};\n  },\n  hideActionView: function () {\n    Session.set(\"admin/showActionView\", false);\n    this.clearActionView();\n  },\n  hideActionViewDetail: function () {\n    Session.set(\"admin/showActionViewDetail\", false);\n    this.clearActionViewDetail();\n  },\n  clearActionView: function () {\n    Session.set(\"admin/actionView\", [{\n      label: \"\",\n      i18nKeyLabel: \"\"\n    }]);\n    Session.set(\"admin/detailView\", [{\n      label: \"\",\n      i18nKeyLabel: \"\"\n    }]);\n  },\n  clearActionViewDetail: function () {\n    Session.set(\"admin/detailView\", [{\n      label: \"\",\n      i18nKeyLabel: \"\"\n    }]);\n  },\n  getCurrentTag: function () {\n    if (this.Router.getRouteName() === \"tag\") {\n      return this.Router.current().params.slug;\n    }\n  },\n  getRegistryForCurrentRoute: function () {\n    var provides = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"dashboard\";\n    this.Router.watchPathChange();\n    var currentRouteName = this.Router.getRouteName();\n    var currentRoute = this.Router.current();\n    var template = currentRoute.route.options.template; // find registry entries for routeName\n\n    var reactionApp = Packages.findOne({\n      \"registry.name\": currentRouteName,\n      \"registry.provides\": provides,\n      \"enabled\": true\n    }, {\n      enabled: 1,\n      registry: 1,\n      route: 1,\n      name: 1,\n      label: 1,\n      settings: 1\n    }); // valid application\n\n    if (reactionApp) {\n      var settingsData = _find(reactionApp.registry, function (item) {\n        return item.provides === provides && item.template === template;\n      });\n\n      return settingsData;\n    }\n\n    Logger.debug(\"getRegistryForCurrentRoute not found\", template, provides);\n    return {};\n  }\n});\n\n/**\n * createCountryCollection\n * Create a client-side only collection of Countries for a dropdown form\n * properly sorted*\n * @param {Object} countries -  The countries array on the Shop collection\n * @returns {Array} countryOptions - Sorted array of countries\n */function createCountryCollection(countries) {\n  check(countries, Object);\n  var countryOptions = [];\n\n  for (var locale in meteorBabelHelpers.sanitizeForInObject(countries)) {\n    if ({}.hasOwnProperty.call(countries, locale)) {\n      var country = countries[locale];\n      countryOptions.push({\n        label: country.name,\n        value: locale\n      });\n    }\n  }\n\n  countryOptions.sort(function (a, b) {\n    if (a.label < b.label) {\n      return -1;\n    }\n\n    if (a.label > b.label) {\n      return 1;\n    }\n\n    return 0;\n  });\n\n  for (var _iterator = countryOptions, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var _country = _ref;\n    Countries.insert(_country);\n  }\n\n  return countryOptions;\n}","map":{"version":3,"sources":["/client/modules/core/main.js"],"names":["Meteor","Session","check","Tracker","ReactiveVar","ReactiveDict","Logger","Countries","localeDep","Packages","Shops","Router","reactionState","shopId","Locale","init","autorun","domain","shop","Subscriptions","ready","absoluteUrl","split","findOne","domains","_id","shopName","name","createCountryCollection","locales","countries","locale","get","currency","localeCurrency","currencies","rate","changed","shopCurrency","state","hasPermission","checkPermissions","checkUserId","checkGroup","group","getShopId","permissions","id","userId","roleCheck","undefined","push","Roles","userIsInRole","sellerShopPermissions","getGroupsForUser","key","validateUserId","clearTimeout","reload","loggingIn","setTimeout","GLOBAL_GROUP","hasOwnerAccess","ownerPermissions","hasAdminAccess","adminPermissions","hasDashboardAccess","dashboardPermissions","getUserPreferences","packageName","preference","defaultValue","user","profile","preferences","setUserPreferences","value","users","update","$set","updateUserPreferences","values","currentPreference","getShopName","getShopPrefix","getSlug","toLowerCase","getShopSettings","settings","getShopCurrency","isPreview","viewAs","getPackageSettings","allowGuestCheckout","allowGuest","public","getSellerShopId","showActionView","viewData","set","setActionView","isActionViewOpen","equals","isActionViewDetailOpen","viewStack","Array","isArray","registryItem","getRegistryForCurrentRoute","template","pushActionView","actionViewStack","isActionViewAtRootView","length","popActionView","pop","setActionViewDetail","open","options","pushActionViewDetail","detailViewStack","popActionViewDetail","isActionViewDetailAtRootView","actionViewDetailStack","getActionView","getActionViewDetail","hideActionView","clearActionView","hideActionViewDetail","clearActionViewDetail","label","i18nKeyLabel","getCurrentTag","getRouteName","current","params","slug","provides","watchPathChange","currentRouteName","currentRoute","route","reactionApp","enabled","registry","settingsData","item","debug","Object","countryOptions","hasOwnProperty","call","country","sort","a","b","insert"],"mappings":"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","file":"/client/modules/core/main.js.map","sourcesContent":["import _ from \"lodash\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Session } from \"meteor/session\";\nimport { check } from \"meteor/check\";\nimport { Tracker } from \"meteor/tracker\";\nimport { ReactiveVar } from \"meteor/reactive-var\";\nimport { ReactiveDict } from \"meteor/reactive-dict\";\nimport Logger from \"/client/modules/logger\";\nimport { Countries } from \"/client/collections\";\nimport { localeDep } from  \"/client/modules/i18n\";\nimport { Packages, Shops } from \"/lib/collections\";\nimport { Router } from \"/client/modules/router\";\n\n// Global, private state object for client side\n// This is placed outside the main object to make it a private variable.\n// access using `Reaction.state`\nconst reactionState = new ReactiveDict();\n\n/**\n * Reaction namespace\n * Global reaction shop permissions methods and shop initialization\n */\nexport default {\n  shopId: null,\n\n  Locale: new ReactiveVar({}),\n\n  init() {\n    // keep an eye out for shop change\n    return Tracker.autorun(() => {\n      let domain;\n      let shop;\n\n      if (this.Subscriptions.Shops.ready()) {\n        domain = Meteor.absoluteUrl().split(\"/\")[2].split(\":\")[0];\n        shop = Shops.findOne({\n          domains: domain\n        });\n\n        if (shop) {\n          this.shopId = shop._id;\n          this.shopName = shop.name;\n          // initialize local client Countries collection\n          if (!Countries.findOne()) {\n            createCountryCollection(shop.locales.countries);\n          }\n\n          const locale = this.Locale.get() || {};\n\n          // fix for https://github.com/reactioncommerce/reaction/issues/248\n          // we need to keep an eye for rates changes\n          if (typeof locale.locale === \"object\" &&\n            typeof locale.currency === \"object\" &&\n            typeof locale.locale.currency === \"string\") {\n            const localeCurrency = locale.locale.currency.split(\",\")[0];\n            if (typeof shop.currencies[localeCurrency] === \"object\") {\n              if (typeof shop.currencies[localeCurrency].rate === \"number\") {\n                locale.currency.rate = shop.currencies[localeCurrency].rate;\n                localeDep.changed();\n              }\n            }\n          }\n          // we are looking for a shopCurrency changes here\n          if (typeof locale.shopCurrency === \"object\") {\n            locale.shopCurrency = shop.currencies[shop.currency];\n            localeDep.changed();\n          }\n          return this;\n        }\n      }\n    });\n  },\n\n  // Return global \"reactionState\" Reactive Dict\n  get state() {\n    return reactionState;\n  },\n\n  /**\n   * hasPermission - client\n   * client permissions checks\n   * hasPermission exists on both the server and the client.\n   *\n   * @param {String | Array} checkPermissions -String or Array of permissions if empty, defaults to \"admin, owner\"\n   * @param {String} checkUserId - userId, defaults to Meteor.userId()\n   * @param {String} checkGroup group - default to shopId\n   * @return {Boolean} Boolean - true if has permission\n   */\n  hasPermission(checkPermissions, checkUserId, checkGroup) {\n    let group = this.getShopId();\n    let permissions = [\"owner\"];\n    let id = \"\";\n    const userId = checkUserId || this.userId || Meteor.userId();\n    //\n    // local roleCheck function\n    // is the bulk of the logic\n    // called out a userId is validated.\n    //\n    function roleCheck() {\n      // permissions can be either a string or an array\n      // we'll force it into an array and use that\n      if (checkPermissions === undefined) {\n        permissions = [\"owner\"];\n      } else if (typeof checkPermissions === \"string\") {\n        permissions = [checkPermissions];\n      } else {\n        permissions = checkPermissions;\n      }\n      // if the user has admin, owner permissions we'll always check if those roles are enough\n      permissions.push(\"owner\");\n      permissions = _.uniq(permissions);\n\n      //\n      // return if user has permissions in the group\n      //\n      if (Roles.userIsInRole(userId, permissions, group)) {\n        return true;\n      }\n      // global roles check\n      const sellerShopPermissions = Roles.getGroupsForUser(userId, \"admin\");\n      // we're looking for seller permissions.\n      if (sellerShopPermissions) {\n        // loop through shops roles and check permissions\n        for (const key in sellerShopPermissions) {\n          if (key) {\n            const shop = sellerShopPermissions[key];\n            if (Roles.userIsInRole(userId, permissions, shop)) {\n              return true;\n            }\n          }\n        }\n      }\n      // no specific permissions found returning false\n      return false;\n    }\n\n    //\n    // check if a user id has been found\n    // in line 156 setTimeout\n    //\n    function validateUserId() {\n      if (Meteor.userId()) {\n        Meteor.clearTimeout(id);\n        Router.reload();\n        return roleCheck();\n      }\n      return false;\n    }\n\n    //\n    // actual logic block to check permissions\n    // we'll bypass unecessary checks during\n    // a user logging, as we'll check again\n    // when everything is ready\n    //\n    if (Meteor.loggingIn() === false) {\n      //\n      // this userId check happens because when logout\n      // occurs it takes a few cycles for a new anonymous user\n      // to get created and during this time the user has no\n      // permission, not even guest permissions so we\n      // need to wait and reload the routes. This\n      // mainly affects the logout from dashboard pages\n      //\n      if (!userId) {\n        id = Meteor.setTimeout(validateUserId, 5000);\n      } else {\n        return roleCheck();\n      }\n\n      // default group to the shop or global if shop\n      // isn't defined for some reason.\n      if (checkGroup !== undefined && typeof checkGroup === \"string\") {\n        group = checkGroup;\n      }\n      if (!group) {\n        group = Roles.GLOBAL_GROUP;\n      }\n    }\n    // return false to be safe\n    return false;\n  },\n\n  hasOwnerAccess() {\n    const ownerPermissions = [\"owner\"];\n    return this.hasPermission(ownerPermissions);\n  },\n\n  hasAdminAccess() {\n    const adminPermissions = [\"owner\", \"admin\"];\n    return this.hasPermission(adminPermissions);\n  },\n\n  hasDashboardAccess() {\n    const dashboardPermissions = [\"owner\", \"admin\", \"dashboard\"];\n    return this.hasPermission(dashboardPermissions);\n  },\n\n  getUserPreferences(packageName, preference, defaultValue) {\n    const user = Meteor.user();\n\n    if (user) {\n      const profile = Meteor.user().profile;\n      if (profile && profile.preferences && profile.preferences[packageName] && profile.preferences[packageName][preference]) {\n        return profile.preferences[packageName][preference];\n      }\n    }\n\n    return defaultValue || undefined;\n  },\n\n  setUserPreferences(packageName, preference, value) {\n    if (Meteor.user()) {\n      return Meteor.users.update(Meteor.userId(), {\n        $set: {\n          [`profile.preferences.${packageName}.${preference}`]: value\n        }\n      });\n    }\n    return false;\n  },\n\n  updateUserPreferences(packageName, preference, values) {\n    const currentPreference = this.getUserPreferences(packageName, preference, {});\n    return this.setUserPreferences(packageName, preference, {\n      ...currentPreference,\n      ...values\n    });\n  },\n\n  getShopId() {\n    return this.shopId;\n  },\n\n  getShopName() {\n    return this.shopName;\n  },\n\n  getShopPrefix() {\n    return \"/\" + this.getSlug(this.getShopName().toLowerCase());\n  },\n\n  getShopSettings() {\n    const settings = Packages.findOne({\n      name: \"core\",\n      shopId: this.shopId\n    }) || {};\n    return settings.settings || {};\n  },\n\n  getShopCurrency() {\n    const shop = Shops.findOne({\n      _id: this.shopId\n    });\n\n    return shop && shop.currency || \"USD\";\n  },\n\n  isPreview() {\n    const viewAs = this.getUserPreferences(\"reaction-dashboard\", \"viewAs\", \"administrator\");\n\n    if (viewAs === \"customer\") {\n      return true;\n    }\n\n    return false;\n  },\n\n  getPackageSettings(name) {\n    return Packages.findOne({ name, shopId: this.getShopId() });\n  },\n\n  allowGuestCheckout() {\n    let allowGuest = false;\n    const settings = this.getShopSettings();\n    // we can disable in admin, let's check.\n    if (settings.public && settings.public.allowGuestCheckout) {\n      allowGuest = settings.public.allowGuestCheckout;\n    }\n    return allowGuest;\n  },\n\n  getSellerShopId() {\n    return Roles.getGroupsForUser(this.userId, \"admin\");\n  },\n\n  /**\n   * @description showActionView\n   *\n   * @param {String} viewData {label, template, data}\n   * @returns {String} Session \"admin/showActionView\"\n   */\n  showActionView(viewData) {\n    Session.set(\"admin/showActionView\", true);\n    this.setActionView(viewData);\n  },\n\n  isActionViewOpen() {\n    return Session.equals(\"admin/showActionView\", true);\n  },\n\n  isActionViewDetailOpen() {\n    return Session.equals(\"admin/showActionViewDetail\", true);\n  },\n\n\n  setActionView(viewData) {\n    if (viewData) {\n      let viewStack;\n\n      if (Array.isArray(viewData)) {\n        viewStack = viewData;\n      } else {\n        viewStack = [viewData];\n      }\n\n      Session.set(\"admin/actionView\", viewStack);\n    } else {\n      const registryItem = this.getRegistryForCurrentRoute(\n        \"settings\");\n\n      if (registryItem) {\n        this.setActionView(registryItem);\n      } else {\n        this.setActionView({\n          template: \"blankControls\"\n        });\n      }\n    }\n  },\n\n  pushActionView(viewData) {\n    Session.set(\"admin/showActionView\", true);\n\n    const actionViewStack = Session.get(\"admin/actionView\");\n\n    if (viewData) {\n      actionViewStack.push(viewData);\n      Session.set(\"admin/actionView\", actionViewStack);\n    } else {\n      const registryItem = this.getRegistryForCurrentRoute(\n        \"settings\");\n\n      if (registryItem) {\n        this.pushActionView(registryItem);\n      } else {\n        this.pushActionView({ template: \"blankControls\" });\n      }\n    }\n  },\n\n  isActionViewAtRootView() {\n    const actionViewStack = Session.get(\"admin/actionView\");\n\n    if (Array.isArray(actionViewStack) && actionViewStack.length === 1) {\n      return true;\n    }\n\n    return false;\n  },\n\n  popActionView() {\n    const actionViewStack = Session.get(\"admin/actionView\");\n    actionViewStack.pop();\n\n    Session.set(\"admin/actionView\", actionViewStack);\n\n    this.setActionViewDetail({}, { open: false });\n  },\n\n  setActionViewDetail(viewData, options = {}) {\n    const { open } = options;\n\n    Session.set(\"admin/showActionView\", true);\n    Session.set(\"admin/showActionViewDetail\", typeof open === \"boolean\" ? open : true);\n\n    if (viewData) {\n      Session.set(\"admin/detailView\", [viewData]);\n    }\n  },\n\n  pushActionViewDetail(viewData) {\n    Session.set(\"admin/showActionView\", true);\n    Session.set(\"admin/showActionViewDetail\", true);\n\n    const detailViewStack = Session.get(\"admin/detailView\");\n\n    if (viewData) {\n      detailViewStack.push(viewData);\n      Session.set(\"admin/detailView\", detailViewStack);\n    }\n  },\n\n  popActionViewDetail() {\n    const detailViewStack = Session.get(\"admin/detailView\");\n    detailViewStack.pop();\n\n    Session.set(\"admin/detailView\", detailViewStack);\n  },\n\n  isActionViewDetailAtRootView() {\n    const actionViewDetailStack = Session.get(\"admin/detailView\");\n\n    if (Array.isArray(actionViewDetailStack) && actionViewDetailStack.length === 1) {\n      return true;\n    }\n\n    return false;\n  },\n\n  getActionView() {\n    const actionViewStack = Session.get(\"admin/actionView\");\n\n    if (Array.isArray(actionViewStack) && actionViewStack.length) {\n      return actionViewStack.pop();\n    }\n\n    return {};\n  },\n\n  getActionViewDetail() {\n    const detailViewStack = Session.get(\"admin/detailView\");\n\n    if (Array.isArray(detailViewStack) && detailViewStack.length) {\n      return detailViewStack.pop();\n    }\n\n    return {};\n  },\n\n  hideActionView() {\n    Session.set(\"admin/showActionView\", false);\n    this.clearActionView();\n  },\n\n  hideActionViewDetail() {\n    Session.set(\"admin/showActionViewDetail\", false);\n    this.clearActionViewDetail();\n  },\n\n  clearActionView() {\n    Session.set(\"admin/actionView\", [{\n      label: \"\",\n      i18nKeyLabel: \"\"\n    }]);\n    Session.set(\"admin/detailView\", [{\n      label: \"\",\n      i18nKeyLabel: \"\"\n    }]);\n  },\n\n  clearActionViewDetail() {\n    Session.set(\"admin/detailView\", [{\n      label: \"\",\n      i18nKeyLabel: \"\"\n    }]);\n  },\n\n  getCurrentTag() {\n    if (this.Router.getRouteName() === \"tag\") {\n      return this.Router.current().params.slug;\n    }\n  },\n\n  getRegistryForCurrentRoute(provides = \"dashboard\") {\n    this.Router.watchPathChange();\n    const currentRouteName = this.Router.getRouteName();\n    const currentRoute = this.Router.current();\n    const template = currentRoute.route.options.template;\n    // find registry entries for routeName\n    const reactionApp = Packages.findOne({\n      \"registry.name\": currentRouteName,\n      \"registry.provides\": provides,\n      \"enabled\": true\n    }, {\n      enabled: 1,\n      registry: 1,\n      route: 1,\n      name: 1,\n      label: 1,\n      settings: 1\n    });\n\n    // valid application\n    if (reactionApp) {\n      const settingsData = _.find(reactionApp.registry, function (item) {\n        return item.provides === provides && item.template === template;\n      });\n      return settingsData;\n    }\n    Logger.debug(\"getRegistryForCurrentRoute not found\", template, provides);\n    return {};\n  }\n\n};\n\n/**\n * createCountryCollection\n * Create a client-side only collection of Countries for a dropdown form\n * properly sorted*\n * @param {Object} countries -  The countries array on the Shop collection\n * @returns {Array} countryOptions - Sorted array of countries\n */\nfunction createCountryCollection(countries) {\n  check(countries, Object);\n  const countryOptions = [];\n  for (const locale in countries) {\n    if ({}.hasOwnProperty.call(countries, locale)) {\n      const country = countries[locale];\n      countryOptions.push({\n        label: country.name,\n        value: locale\n      });\n    }\n  }\n  countryOptions.sort(function (a, b) {\n    if (a.label < b.label) {\n      return -1;\n    }\n    if (a.label > b.label) {\n      return 1;\n    }\n    return 0;\n  });\n\n  for (const country of countryOptions) {\n    Countries.insert(country);\n  }\n  return countryOptions;\n}\n"]},"hash":"ae652354cbb6988620e1f166070c6b0385126f37"}
