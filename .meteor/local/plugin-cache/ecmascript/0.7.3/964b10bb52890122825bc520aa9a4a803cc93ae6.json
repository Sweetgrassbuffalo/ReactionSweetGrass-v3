{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/aldeed:simple-schema","imported":["SimpleSchema"],"specifiers":[{"kind":"named","imported":"SimpleSchema","local":"SimpleSchema"}]},{"source":"./helpers","imported":["shopIdAutoValue","schemaIdAutoValue"],"specifiers":[{"kind":"named","imported":"shopIdAutoValue","local":"shopIdAutoValue"},{"kind":"named","imported":"schemaIdAutoValue","local":"schemaIdAutoValue"}]},{"source":"./address","imported":["Address"],"specifiers":[{"kind":"named","imported":"Address","local":"Address"}]},{"source":"./payments","imported":["Invoice"],"specifiers":[{"kind":"named","imported":"Invoice","local":"Invoice"}]},{"source":"./registry","imported":["PackageConfig"],"specifiers":[{"kind":"named","imported":"PackageConfig","local":"PackageConfig"}]},{"source":"./workflow","imported":["Workflow"],"specifiers":[{"kind":"named","imported":"Workflow","local":"Workflow"}]}],"exports":{"exported":["ShippoShippingMethod","ShippingMethod","ShipmentQuote","ShipmentItem","ShippingParcel","ShippoShipment","Shipment","ShippoShippingProvider","ShippingProvider","Shipping","ShippingPackageConfig"],"specifiers":[{"kind":"local","local":"ShippoShippingMethod","exported":"ShippoShippingMethod"},{"kind":"local","local":"ShippingMethod","exported":"ShippingMethod"},{"kind":"local","local":"ShipmentQuote","exported":"ShipmentQuote"},{"kind":"local","local":"ShipmentItem","exported":"ShipmentItem"},{"kind":"local","local":"ShippingParcel","exported":"ShippingParcel"},{"kind":"local","local":"ShippoShipment","exported":"ShippoShipment"},{"kind":"local","local":"Shipment","exported":"Shipment"},{"kind":"local","local":"ShippoShippingProvider","exported":"ShippoShippingProvider"},{"kind":"local","local":"ShippingProvider","exported":"ShippingProvider"},{"kind":"local","local":"Shipping","exported":"Shipping"},{"kind":"local","local":"ShippingPackageConfig","exported":"ShippingPackageConfig"}]}}},"options":{"filename":"/lib/collections/schemas/shipping.js","filenameRelative":"/lib/collections/schemas/shipping.js","inputSourceMap":{"version":3,"sources":["/lib/collections/schemas/shipping.js"],"names":["SimpleSchema","shopIdAutoValue","schemaIdAutoValue","Address","Invoice","PackageConfig","Workflow","ShippoShippingMethod","serviceLevelToken","type","String","optional","rateId","ShippingMethod","label","autoValue","allowedValues","Number","decimal","defaultValue","min","Boolean","Array","Object","ShipmentQuote","carrier","method","rate","ShipmentItem","_id","productId","index","shopId","quantity","variantId","ShippingParcel","containers","length","width","height","weight","ShippoShipment","transactionId","trackingStatusStatus","trackingStatusDate","Shipment","paymentId","address","shipmentMethod","shipmentQuotes","tracking","parcel","items","workflow","packed","shipped","delivered","invoice","transactions","blackbox","shippingLabelUrl","customsLabelUrl","shippo","ShippoShippingProvider","carrierAccountId","ShippingProvider","name","enabled","serviceAuth","serviceSecret","serviceUrl","shippoProvider","Shipping","provider","methods","ShippingPackageConfig"],"mappings":"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","file":"/lib/collections/schemas/shipping.js.map","sourcesContent":["import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\nimport { shopIdAutoValue, schemaIdAutoValue } from \"./helpers\";\nimport { Address } from \"./address\";\nimport { Invoice } from \"./payments\";\nimport { PackageConfig } from \"./registry\";\nimport { Workflow } from \"./workflow\";\n\n/**\n * ShippoShippingMethod Schema\n * TODO move shippo related schema to shippo module\n * This will only exist in ShippingMethods Inside Cart/Order and not DB shipping Collection\n * as Shippo Methods are Dynamic.\n */\n\nexport const ShippoShippingMethod = new SimpleSchema({\n  serviceLevelToken: {\n    type: String,\n    optional: true\n  },\n  rateId: {\n    type: String,\n    optional: true\n  }\n});\n\n/**\n * ShippingMethod Schema\n */\n\nexport const ShippingMethod = new SimpleSchema({\n  \"_id\": {\n    type: String,\n    label: \"Shipment Method Id\",\n    autoValue: schemaIdAutoValue\n  },\n  \"name\": {\n    type: String,\n    label: \"Method Name\"\n  },\n  \"label\": {\n    type: String,\n    label: \"Public Label\"\n  },\n  \"group\": {\n    type: String,\n    label: \"Group\",\n    allowedValues: [\"Ground\", \"Priority\", \"One Day\", \"Free\"]\n  },\n  \"cost\": {\n    type: Number,\n    label: \"Cost\",\n    decimal: true,\n    optional: true\n  },\n  \"handling\": {\n    type: Number,\n    label: \"Handling\",\n    optional: true,\n    decimal: true,\n    defaultValue: 0,\n    min: 0\n  },\n  \"rate\": {\n    type: Number,\n    label: \"Rate\",\n    decimal: true,\n    min: 0\n  },\n  \"enabled\": {\n    type: Boolean,\n    label: \"Enabled\",\n    defaultValue: false\n  },\n  \"validRanges\": {\n    type: Array,\n    optional: true,\n    label: \"Matching Cart Ranges\"\n  },\n  \"validRanges.$\": {\n    type: Object,\n    optional: true\n  },\n  \"validRanges.$.begin\": {\n    type: Number,\n    decimal: true,\n    label: \"Begin\",\n    optional: true\n  },\n  \"validRanges.$.end\": {\n    type: Number,\n    decimal: true,\n    label: \"End\",\n    optional: true\n  },\n  \"validLocales\": {\n    type: Array,\n    optional: true,\n    label: \"Matching Locales\"\n  },\n  \"validLocales.$\": {\n    type: Object,\n    optional: true\n  },\n  \"validLocales.$.origination\": {\n    type: String,\n    label: \"From\",\n    optional: true\n  },\n  \"validLocales.$.destination\": {\n    type: String,\n    label: \"To\",\n    optional: true\n  },\n  \"validLocales.$.deliveryBegin\": {\n    type: Number,\n    label: \"Shipping Est.\",\n    optional: true\n  },\n  \"validLocales.$.deliveryEnd\": {\n    type: Number,\n    label: \"Delivery Est.\",\n    optional: true\n  },\n  \"carrier\": {     // kind of denormalizing, useful for having it in shipmentMethod( cart & order)\n    type: String,  // Alternatively we can make an extra Schema:ShipmentMethod, that inherits\n    optional: true // ShippingMethod and add the optional carrier field\n  },\n  \"settings\": {\n    type: ShippoShippingMethod,\n    optional: true\n  }\n});\n\n/**\n * ShipmentQuote Schema\n */\n\nexport const ShipmentQuote = new SimpleSchema({\n  carrier: {\n    type: String\n  },\n  method: {\n    type: ShippingMethod\n  },\n  rate: {\n    type: Number,\n    decimal: true,\n    defaultValue: \"0.00\"\n  }\n});\n\n// populate with order.items that are added to a shipment\nexport const ShipmentItem = new SimpleSchema({\n  _id: {\n    type: String,\n    label: \"Shipment Line Item\",\n    optional: true,\n    autoValue: schemaIdAutoValue\n  },\n  productId: {\n    type: String,\n    index: 1\n  },\n  shopId: {\n    type: String,\n    index: 1,\n    label: \"Shipment Item ShopId\",\n    optional: true\n  },\n  quantity: {\n    label: \"Quantity\",\n    type: Number,\n    min: 0\n  },\n  variantId: {\n    type: String\n  }\n});\n\n/**\n * ShippingParcel Schema\n */\n\nexport const ShippingParcel = new SimpleSchema({\n  containers: {\n    type: String,\n    optional: true\n  },\n  length: {\n    type: Number,\n    optional: true\n  },\n  width: {\n    type: Number,\n    optional: true\n  },\n  height: {\n    type: Number,\n    optional: true\n  },\n  weight: {\n    type: Number,\n    optional: true\n  }\n});\n\n/**\n * ShippoShipment Schema\n * Specific properties of Shipment for use with Shippo. We don't use\n */\n\nexport const ShippoShipment = new SimpleSchema({\n  transactionId: {\n    type: String,\n    optional: true\n  },\n  trackingStatusStatus: { // cause tracking_status.status\n    type: String,\n    optional: true\n  },\n  trackingStatusDate: {\n    type: String,\n    optional: true\n  }\n});\n\n\n/**\n * Shipment Schema\n * used for cart/order shipment tracking\n */\n\nexport const Shipment = new SimpleSchema({\n  _id: {\n    type: String,\n    label: \"Shipment Id\",\n    autoValue: schemaIdAutoValue\n  },\n  paymentId: {\n    type: String,\n    label: \"Payment Id\",\n    optional: true\n  },\n  address: {\n    type: Address,\n    optional: true\n  },\n  shipmentMethod: {\n    type: ShippingMethod,\n    optional: true\n  },\n  shipmentQuotes: {\n    type: [ShipmentQuote],\n    optional: true\n  },\n  tracking: {\n    type: String,\n    optional: true\n  },\n  parcel: {\n    type: ShippingParcel,\n    optional: true\n  },\n  items: {\n    type: [ShipmentItem],\n    optional: true\n  },\n  workflow: {\n    type: Workflow,\n    optional: true\n  },\n  packed: {\n    type: Boolean,\n    optional: true,\n    defaultValue: false\n  },\n  shipped: {\n    type: Boolean,\n    optional: true,\n    defaultValue: false\n  },\n  delivered: {\n    type: Boolean,\n    optional: true,\n    defaultValue: false\n  },\n  invoice: {\n    type: Invoice,\n    optional: true\n  },\n  transactions: {\n    type: [Object],\n    optional: true,\n    blackbox: true\n  }, // For printable Shipping label\n  shippingLabelUrl: {\n    type: String,\n    optional: true\n  }, // For Customs printable label\n  customsLabelUrl: {\n    type: String,\n    optional: true\n  }, // shippo specific properties\n  shippo: {\n    type: ShippoShipment,\n    optional: true\n  }\n});\n\n/**\n * ShippoShippingProvider Schema\n * Specific  properties for use with Shippo. We don't use\n * ShippingProvider service* fields because Shippo is on level\n * higher service than simple carrier's ,e.g Fedex api.\n */\n\nexport const ShippoShippingProvider = new SimpleSchema({\n  carrierAccountId: {\n    type: String,\n    optional: true\n  }\n});\n\n/**\n * ShippingProvider Schema\n */\n\nexport const ShippingProvider = new SimpleSchema({\n  _id: {\n    type: String,\n    label: \"Provider Id\",\n    optional: true,\n    autoValue: schemaIdAutoValue\n  },\n  name: {\n    type: String,\n    label: \"Service Code\",\n    optional: true\n  },\n  label: {\n    type: String,\n    label: \"Public Label\"\n  },\n  enabled: {\n    type: Boolean,\n    defaultValue: true\n  },\n  serviceAuth: {\n    type: String,\n    label: \"Auth\",\n    optional: true\n  },\n  serviceSecret: {\n    type: String,\n    label: \"Secret\",\n    optional: true\n  },\n  serviceUrl: {\n    type: String,\n    label: \"Service URL\",\n    optional: true\n  },\n  shippoProvider: {\n    type: ShippoShippingProvider,\n    optional: true\n  }\n});\n\n/**\n * Shipping Schema\n */\n\nexport const Shipping = new SimpleSchema({\n  _id: {\n    type: String,\n    label: \"Service Id\",\n    optional: true\n  },\n  shopId: {\n    type: String,\n    index: 1,\n    autoValue: shopIdAutoValue,\n    label: \"Shipping ShopId\"\n  },\n  name: {\n    type: String,\n    label: \"Service Name\",\n    optional: true,\n    index: 1\n  },\n  provider: {\n    type: ShippingProvider,\n    label: \"Shipping Provider\"\n  },\n  methods: {\n    type: [ShippingMethod],\n    optional: true,\n    label: \"Shipping Methods\"\n  },\n  shipmentQuotes: {\n    type: [ShipmentQuote],\n    optional: true,\n    label: \"Quoted Methods\"\n  }\n});\n\n/**\n * Shipping Package Schema\n */\nexport const ShippingPackageConfig = new SimpleSchema([\n  PackageConfig, {\n    \"settings.name\": {\n      type: String,\n      defaultValue: \"Flat Rate Service\"\n    }\n  }\n]);\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/lib/collections/schemas/shipping.js.map","sourceFileName":"/lib/collections/schemas/shipping.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"shipping"},"ignored":false,"code":"module.export({\n  ShippoShippingMethod: function () {\n    return ShippoShippingMethod;\n  },\n  ShippingMethod: function () {\n    return ShippingMethod;\n  },\n  ShipmentQuote: function () {\n    return ShipmentQuote;\n  },\n  ShipmentItem: function () {\n    return ShipmentItem;\n  },\n  ShippingParcel: function () {\n    return ShippingParcel;\n  },\n  ShippoShipment: function () {\n    return ShippoShipment;\n  },\n  Shipment: function () {\n    return Shipment;\n  },\n  ShippoShippingProvider: function () {\n    return ShippoShippingProvider;\n  },\n  ShippingProvider: function () {\n    return ShippingProvider;\n  },\n  Shipping: function () {\n    return Shipping;\n  },\n  ShippingPackageConfig: function () {\n    return ShippingPackageConfig;\n  }\n});\nvar SimpleSchema = void 0;\nmodule.importSync(\"meteor/aldeed:simple-schema\", {\n  SimpleSchema: function (v) {\n    SimpleSchema = v;\n  }\n}, 0);\nvar shopIdAutoValue = void 0,\n    schemaIdAutoValue = void 0;\nmodule.importSync(\"./helpers\", {\n  shopIdAutoValue: function (v) {\n    shopIdAutoValue = v;\n  },\n  schemaIdAutoValue: function (v) {\n    schemaIdAutoValue = v;\n  }\n}, 1);\nvar Address = void 0;\nmodule.importSync(\"./address\", {\n  Address: function (v) {\n    Address = v;\n  }\n}, 2);\nvar Invoice = void 0;\nmodule.importSync(\"./payments\", {\n  Invoice: function (v) {\n    Invoice = v;\n  }\n}, 3);\nvar PackageConfig = void 0;\nmodule.importSync(\"./registry\", {\n  PackageConfig: function (v) {\n    PackageConfig = v;\n  }\n}, 4);\nvar Workflow = void 0;\nmodule.importSync(\"./workflow\", {\n  Workflow: function (v) {\n    Workflow = v;\n  }\n}, 5);\nvar ShippoShippingMethod = new SimpleSchema({\n  serviceLevelToken: {\n    type: String,\n    optional: true\n  },\n  rateId: {\n    type: String,\n    optional: true\n  }\n});\nvar ShippingMethod = new SimpleSchema({\n  \"_id\": {\n    type: String,\n    label: \"Shipment Method Id\",\n    autoValue: schemaIdAutoValue\n  },\n  \"name\": {\n    type: String,\n    label: \"Method Name\"\n  },\n  \"label\": {\n    type: String,\n    label: \"Public Label\"\n  },\n  \"group\": {\n    type: String,\n    label: \"Group\",\n    allowedValues: [\"Ground\", \"Priority\", \"One Day\", \"Free\"]\n  },\n  \"cost\": {\n    type: Number,\n    label: \"Cost\",\n    decimal: true,\n    optional: true\n  },\n  \"handling\": {\n    type: Number,\n    label: \"Handling\",\n    optional: true,\n    decimal: true,\n    defaultValue: 0,\n    min: 0\n  },\n  \"rate\": {\n    type: Number,\n    label: \"Rate\",\n    decimal: true,\n    min: 0\n  },\n  \"enabled\": {\n    type: Boolean,\n    label: \"Enabled\",\n    defaultValue: false\n  },\n  \"validRanges\": {\n    type: Array,\n    optional: true,\n    label: \"Matching Cart Ranges\"\n  },\n  \"validRanges.$\": {\n    type: Object,\n    optional: true\n  },\n  \"validRanges.$.begin\": {\n    type: Number,\n    decimal: true,\n    label: \"Begin\",\n    optional: true\n  },\n  \"validRanges.$.end\": {\n    type: Number,\n    decimal: true,\n    label: \"End\",\n    optional: true\n  },\n  \"validLocales\": {\n    type: Array,\n    optional: true,\n    label: \"Matching Locales\"\n  },\n  \"validLocales.$\": {\n    type: Object,\n    optional: true\n  },\n  \"validLocales.$.origination\": {\n    type: String,\n    label: \"From\",\n    optional: true\n  },\n  \"validLocales.$.destination\": {\n    type: String,\n    label: \"To\",\n    optional: true\n  },\n  \"validLocales.$.deliveryBegin\": {\n    type: Number,\n    label: \"Shipping Est.\",\n    optional: true\n  },\n  \"validLocales.$.deliveryEnd\": {\n    type: Number,\n    label: \"Delivery Est.\",\n    optional: true\n  },\n  \"carrier\": {\n    // kind of denormalizing, useful for having it in shipmentMethod( cart & order)\n    type: String,\n    // Alternatively we can make an extra Schema:ShipmentMethod, that inherits\n    optional: true // ShippingMethod and add the optional carrier field\n\n  },\n  \"settings\": {\n    type: ShippoShippingMethod,\n    optional: true\n  }\n});\nvar ShipmentQuote = new SimpleSchema({\n  carrier: {\n    type: String\n  },\n  method: {\n    type: ShippingMethod\n  },\n  rate: {\n    type: Number,\n    decimal: true,\n    defaultValue: \"0.00\"\n  }\n});\nvar ShipmentItem = new SimpleSchema({\n  _id: {\n    type: String,\n    label: \"Shipment Line Item\",\n    optional: true,\n    autoValue: schemaIdAutoValue\n  },\n  productId: {\n    type: String,\n    index: 1\n  },\n  shopId: {\n    type: String,\n    index: 1,\n    label: \"Shipment Item ShopId\",\n    optional: true\n  },\n  quantity: {\n    label: \"Quantity\",\n    type: Number,\n    min: 0\n  },\n  variantId: {\n    type: String\n  }\n});\nvar ShippingParcel = new SimpleSchema({\n  containers: {\n    type: String,\n    optional: true\n  },\n  length: {\n    type: Number,\n    optional: true\n  },\n  width: {\n    type: Number,\n    optional: true\n  },\n  height: {\n    type: Number,\n    optional: true\n  },\n  weight: {\n    type: Number,\n    optional: true\n  }\n});\nvar ShippoShipment = new SimpleSchema({\n  transactionId: {\n    type: String,\n    optional: true\n  },\n  trackingStatusStatus: {\n    // cause tracking_status.status\n    type: String,\n    optional: true\n  },\n  trackingStatusDate: {\n    type: String,\n    optional: true\n  }\n});\nvar Shipment = new SimpleSchema({\n  _id: {\n    type: String,\n    label: \"Shipment Id\",\n    autoValue: schemaIdAutoValue\n  },\n  paymentId: {\n    type: String,\n    label: \"Payment Id\",\n    optional: true\n  },\n  address: {\n    type: Address,\n    optional: true\n  },\n  shipmentMethod: {\n    type: ShippingMethod,\n    optional: true\n  },\n  shipmentQuotes: {\n    type: [ShipmentQuote],\n    optional: true\n  },\n  tracking: {\n    type: String,\n    optional: true\n  },\n  parcel: {\n    type: ShippingParcel,\n    optional: true\n  },\n  items: {\n    type: [ShipmentItem],\n    optional: true\n  },\n  workflow: {\n    type: Workflow,\n    optional: true\n  },\n  packed: {\n    type: Boolean,\n    optional: true,\n    defaultValue: false\n  },\n  shipped: {\n    type: Boolean,\n    optional: true,\n    defaultValue: false\n  },\n  delivered: {\n    type: Boolean,\n    optional: true,\n    defaultValue: false\n  },\n  invoice: {\n    type: Invoice,\n    optional: true\n  },\n  transactions: {\n    type: [Object],\n    optional: true,\n    blackbox: true\n  },\n  // For printable Shipping label\n  shippingLabelUrl: {\n    type: String,\n    optional: true\n  },\n  // For Customs printable label\n  customsLabelUrl: {\n    type: String,\n    optional: true\n  },\n  // shippo specific properties\n  shippo: {\n    type: ShippoShipment,\n    optional: true\n  }\n});\nvar ShippoShippingProvider = new SimpleSchema({\n  carrierAccountId: {\n    type: String,\n    optional: true\n  }\n});\nvar ShippingProvider = new SimpleSchema({\n  _id: {\n    type: String,\n    label: \"Provider Id\",\n    optional: true,\n    autoValue: schemaIdAutoValue\n  },\n  name: {\n    type: String,\n    label: \"Service Code\",\n    optional: true\n  },\n  label: {\n    type: String,\n    label: \"Public Label\"\n  },\n  enabled: {\n    type: Boolean,\n    defaultValue: true\n  },\n  serviceAuth: {\n    type: String,\n    label: \"Auth\",\n    optional: true\n  },\n  serviceSecret: {\n    type: String,\n    label: \"Secret\",\n    optional: true\n  },\n  serviceUrl: {\n    type: String,\n    label: \"Service URL\",\n    optional: true\n  },\n  shippoProvider: {\n    type: ShippoShippingProvider,\n    optional: true\n  }\n});\nvar Shipping = new SimpleSchema({\n  _id: {\n    type: String,\n    label: \"Service Id\",\n    optional: true\n  },\n  shopId: {\n    type: String,\n    index: 1,\n    autoValue: shopIdAutoValue,\n    label: \"Shipping ShopId\"\n  },\n  name: {\n    type: String,\n    label: \"Service Name\",\n    optional: true,\n    index: 1\n  },\n  provider: {\n    type: ShippingProvider,\n    label: \"Shipping Provider\"\n  },\n  methods: {\n    type: [ShippingMethod],\n    optional: true,\n    label: \"Shipping Methods\"\n  },\n  shipmentQuotes: {\n    type: [ShipmentQuote],\n    optional: true,\n    label: \"Quoted Methods\"\n  }\n});\nvar ShippingPackageConfig = new SimpleSchema([PackageConfig, {\n  \"settings.name\": {\n    type: String,\n    defaultValue: \"Flat Rate Service\"\n  }\n}]);","map":{"version":3,"sources":["/lib/collections/schemas/shipping.js"],"names":["SimpleSchema","shopIdAutoValue","schemaIdAutoValue","Address","Invoice","PackageConfig","Workflow","ShippoShippingMethod","serviceLevelToken","type","String","optional","rateId","ShippingMethod","label","autoValue","allowedValues","Number","decimal","defaultValue","min","Boolean","Array","Object","ShipmentQuote","carrier","method","rate","ShipmentItem","_id","productId","index","shopId","quantity","variantId","ShippingParcel","containers","length","width","height","weight","ShippoShipment","transactionId","trackingStatusStatus","trackingStatusDate","Shipment","paymentId","address","shipmentMethod","shipmentQuotes","tracking","parcel","items","workflow","packed","shipped","delivered","invoice","transactions","blackbox","shippingLabelUrl","customsLabelUrl","shippo","ShippoShippingProvider","carrierAccountId","ShippingProvider","name","enabled","serviceAuth","serviceSecret","serviceUrl","shippoProvider","Shipping","provider","methods","ShippingPackageConfig"],"mappings":"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","file":"/lib/collections/schemas/shipping.js.map","sourcesContent":["import { SimpleSchema } from \"meteor/aldeed:simple-schema\";\nimport { shopIdAutoValue, schemaIdAutoValue } from \"./helpers\";\nimport { Address } from \"./address\";\nimport { Invoice } from \"./payments\";\nimport { PackageConfig } from \"./registry\";\nimport { Workflow } from \"./workflow\";\n\n/**\n * ShippoShippingMethod Schema\n * TODO move shippo related schema to shippo module\n * This will only exist in ShippingMethods Inside Cart/Order and not DB shipping Collection\n * as Shippo Methods are Dynamic.\n */\n\nexport const ShippoShippingMethod = new SimpleSchema({\n  serviceLevelToken: {\n    type: String,\n    optional: true\n  },\n  rateId: {\n    type: String,\n    optional: true\n  }\n});\n\n/**\n * ShippingMethod Schema\n */\n\nexport const ShippingMethod = new SimpleSchema({\n  \"_id\": {\n    type: String,\n    label: \"Shipment Method Id\",\n    autoValue: schemaIdAutoValue\n  },\n  \"name\": {\n    type: String,\n    label: \"Method Name\"\n  },\n  \"label\": {\n    type: String,\n    label: \"Public Label\"\n  },\n  \"group\": {\n    type: String,\n    label: \"Group\",\n    allowedValues: [\"Ground\", \"Priority\", \"One Day\", \"Free\"]\n  },\n  \"cost\": {\n    type: Number,\n    label: \"Cost\",\n    decimal: true,\n    optional: true\n  },\n  \"handling\": {\n    type: Number,\n    label: \"Handling\",\n    optional: true,\n    decimal: true,\n    defaultValue: 0,\n    min: 0\n  },\n  \"rate\": {\n    type: Number,\n    label: \"Rate\",\n    decimal: true,\n    min: 0\n  },\n  \"enabled\": {\n    type: Boolean,\n    label: \"Enabled\",\n    defaultValue: false\n  },\n  \"validRanges\": {\n    type: Array,\n    optional: true,\n    label: \"Matching Cart Ranges\"\n  },\n  \"validRanges.$\": {\n    type: Object,\n    optional: true\n  },\n  \"validRanges.$.begin\": {\n    type: Number,\n    decimal: true,\n    label: \"Begin\",\n    optional: true\n  },\n  \"validRanges.$.end\": {\n    type: Number,\n    decimal: true,\n    label: \"End\",\n    optional: true\n  },\n  \"validLocales\": {\n    type: Array,\n    optional: true,\n    label: \"Matching Locales\"\n  },\n  \"validLocales.$\": {\n    type: Object,\n    optional: true\n  },\n  \"validLocales.$.origination\": {\n    type: String,\n    label: \"From\",\n    optional: true\n  },\n  \"validLocales.$.destination\": {\n    type: String,\n    label: \"To\",\n    optional: true\n  },\n  \"validLocales.$.deliveryBegin\": {\n    type: Number,\n    label: \"Shipping Est.\",\n    optional: true\n  },\n  \"validLocales.$.deliveryEnd\": {\n    type: Number,\n    label: \"Delivery Est.\",\n    optional: true\n  },\n  \"carrier\": {     // kind of denormalizing, useful for having it in shipmentMethod( cart & order)\n    type: String,  // Alternatively we can make an extra Schema:ShipmentMethod, that inherits\n    optional: true // ShippingMethod and add the optional carrier field\n  },\n  \"settings\": {\n    type: ShippoShippingMethod,\n    optional: true\n  }\n});\n\n/**\n * ShipmentQuote Schema\n */\n\nexport const ShipmentQuote = new SimpleSchema({\n  carrier: {\n    type: String\n  },\n  method: {\n    type: ShippingMethod\n  },\n  rate: {\n    type: Number,\n    decimal: true,\n    defaultValue: \"0.00\"\n  }\n});\n\n// populate with order.items that are added to a shipment\nexport const ShipmentItem = new SimpleSchema({\n  _id: {\n    type: String,\n    label: \"Shipment Line Item\",\n    optional: true,\n    autoValue: schemaIdAutoValue\n  },\n  productId: {\n    type: String,\n    index: 1\n  },\n  shopId: {\n    type: String,\n    index: 1,\n    label: \"Shipment Item ShopId\",\n    optional: true\n  },\n  quantity: {\n    label: \"Quantity\",\n    type: Number,\n    min: 0\n  },\n  variantId: {\n    type: String\n  }\n});\n\n/**\n * ShippingParcel Schema\n */\n\nexport const ShippingParcel = new SimpleSchema({\n  containers: {\n    type: String,\n    optional: true\n  },\n  length: {\n    type: Number,\n    optional: true\n  },\n  width: {\n    type: Number,\n    optional: true\n  },\n  height: {\n    type: Number,\n    optional: true\n  },\n  weight: {\n    type: Number,\n    optional: true\n  }\n});\n\n/**\n * ShippoShipment Schema\n * Specific properties of Shipment for use with Shippo. We don't use\n */\n\nexport const ShippoShipment = new SimpleSchema({\n  transactionId: {\n    type: String,\n    optional: true\n  },\n  trackingStatusStatus: { // cause tracking_status.status\n    type: String,\n    optional: true\n  },\n  trackingStatusDate: {\n    type: String,\n    optional: true\n  }\n});\n\n\n/**\n * Shipment Schema\n * used for cart/order shipment tracking\n */\n\nexport const Shipment = new SimpleSchema({\n  _id: {\n    type: String,\n    label: \"Shipment Id\",\n    autoValue: schemaIdAutoValue\n  },\n  paymentId: {\n    type: String,\n    label: \"Payment Id\",\n    optional: true\n  },\n  address: {\n    type: Address,\n    optional: true\n  },\n  shipmentMethod: {\n    type: ShippingMethod,\n    optional: true\n  },\n  shipmentQuotes: {\n    type: [ShipmentQuote],\n    optional: true\n  },\n  tracking: {\n    type: String,\n    optional: true\n  },\n  parcel: {\n    type: ShippingParcel,\n    optional: true\n  },\n  items: {\n    type: [ShipmentItem],\n    optional: true\n  },\n  workflow: {\n    type: Workflow,\n    optional: true\n  },\n  packed: {\n    type: Boolean,\n    optional: true,\n    defaultValue: false\n  },\n  shipped: {\n    type: Boolean,\n    optional: true,\n    defaultValue: false\n  },\n  delivered: {\n    type: Boolean,\n    optional: true,\n    defaultValue: false\n  },\n  invoice: {\n    type: Invoice,\n    optional: true\n  },\n  transactions: {\n    type: [Object],\n    optional: true,\n    blackbox: true\n  }, // For printable Shipping label\n  shippingLabelUrl: {\n    type: String,\n    optional: true\n  }, // For Customs printable label\n  customsLabelUrl: {\n    type: String,\n    optional: true\n  }, // shippo specific properties\n  shippo: {\n    type: ShippoShipment,\n    optional: true\n  }\n});\n\n/**\n * ShippoShippingProvider Schema\n * Specific  properties for use with Shippo. We don't use\n * ShippingProvider service* fields because Shippo is on level\n * higher service than simple carrier's ,e.g Fedex api.\n */\n\nexport const ShippoShippingProvider = new SimpleSchema({\n  carrierAccountId: {\n    type: String,\n    optional: true\n  }\n});\n\n/**\n * ShippingProvider Schema\n */\n\nexport const ShippingProvider = new SimpleSchema({\n  _id: {\n    type: String,\n    label: \"Provider Id\",\n    optional: true,\n    autoValue: schemaIdAutoValue\n  },\n  name: {\n    type: String,\n    label: \"Service Code\",\n    optional: true\n  },\n  label: {\n    type: String,\n    label: \"Public Label\"\n  },\n  enabled: {\n    type: Boolean,\n    defaultValue: true\n  },\n  serviceAuth: {\n    type: String,\n    label: \"Auth\",\n    optional: true\n  },\n  serviceSecret: {\n    type: String,\n    label: \"Secret\",\n    optional: true\n  },\n  serviceUrl: {\n    type: String,\n    label: \"Service URL\",\n    optional: true\n  },\n  shippoProvider: {\n    type: ShippoShippingProvider,\n    optional: true\n  }\n});\n\n/**\n * Shipping Schema\n */\n\nexport const Shipping = new SimpleSchema({\n  _id: {\n    type: String,\n    label: \"Service Id\",\n    optional: true\n  },\n  shopId: {\n    type: String,\n    index: 1,\n    autoValue: shopIdAutoValue,\n    label: \"Shipping ShopId\"\n  },\n  name: {\n    type: String,\n    label: \"Service Name\",\n    optional: true,\n    index: 1\n  },\n  provider: {\n    type: ShippingProvider,\n    label: \"Shipping Provider\"\n  },\n  methods: {\n    type: [ShippingMethod],\n    optional: true,\n    label: \"Shipping Methods\"\n  },\n  shipmentQuotes: {\n    type: [ShipmentQuote],\n    optional: true,\n    label: \"Quoted Methods\"\n  }\n});\n\n/**\n * Shipping Package Schema\n */\nexport const ShippingPackageConfig = new SimpleSchema([\n  PackageConfig, {\n    \"settings.name\": {\n      type: String,\n      defaultValue: \"Flat Rate Service\"\n    }\n  }\n]);\n"]},"hash":"964b10bb52890122825bc520aa9a4a803cc93ae6"}
