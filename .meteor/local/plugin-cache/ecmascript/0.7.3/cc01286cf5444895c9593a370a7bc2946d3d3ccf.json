{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"/client/api","imported":["Reaction"],"specifiers":[{"kind":"named","imported":"Reaction","local":"Reaction"}]},{"source":"/lib/collections","imported":["Cart"],"specifiers":[{"kind":"named","imported":"Cart","local":"Cart"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/templating","imported":["Template"],"specifiers":[{"kind":"named","imported":"Template","local":"Template"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/core/checkout/client/templates/checkout/login/login.js","filenameRelative":"/imports/plugins/core/checkout/client/templates/checkout/login/login.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/core/checkout/client/templates/checkout/login/login.js"],"names":["Reaction","Cart","Meteor","Template","checkoutLogin","helpers","checkoutLoginCompleted","self","cart","findOne","workflow","currentStatus","status","guestUser","hasPermission","user","anonUser","Roles","userIsInRole","getShopId","template"],"mappings":"AAAA,IAAS;AAAT,OAAyB,WAAzB;;;;;;;;;;;;;;;;;;;;;;GACA,AAAS,AAAY,A,AACrB,AAAS,AAAc,AACvB,AAAS,AAAgB,AAEzB;AAMA,AAAS,AAAc,AAAQ,AAC7B,AAAwB,AAAY,AAClC,AAAM,AAAO;;;;YACP,AAAO,AAAK,cAAL;sCACb;AAAI,QAAQ,OAAZ,AAAiB,AAAU,AACzB;QAAM,YAAN,AAAsB,AAAK,AAAS,AACpC;;QAAM,aAAY,UAAlB,AAAkB,AAAS,AAAc,AAAS,AAAO,AACzD;UAAM,AAAW,gBAAM,KAAN,SAAjB,AAAiB,AAAmB,AAAa,AAAO,AAAQ,AAAS;6DAEzE;AAAI,qBAAkB,MAAlB,AAAuB,aAAY,aAAc,OAAjD,AAAyD,iBAA7D,AAA0E,AAAO,AAC/E,AAAO,AACR;;uFACF;;AACD;AAAA,AAAO,AACR;;WAdH,AAA+B;;AAG3B,CAAA","file":"/imports/plugins/core/checkout/client/templates/checkout/login/login.js.map","sourcesContent":["import { Reaction } from \"/client/api\";\nimport { Cart } from \"/lib/collections\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Template } from \"meteor/templating\";\n\n/**\n * checkoutLoginCompleted\n * returns true if we've already past this stage,\n * or if the user is a guest but not anonymous\n */\n\nTemplate.checkoutLogin.helpers({\n  checkoutLoginCompleted: function () {\n    const self = this;\n    const cart = Cart.findOne();\n    if (cart && cart.workflow) {\n      const currentStatus = cart.workflow.status;\n      const guestUser = Reaction.hasPermission(\"guest\", Meteor.user());\n      const anonUser = Roles.userIsInRole(\"anonymous\", Meteor.user(), Reaction.getShopId());\n\n      if (currentStatus !== self.template && guestUser === true && anonUser === false) {\n        return true;\n      }\n    }\n    return false;\n  }\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/core/checkout/client/templates/checkout/login/login.js.map","sourceFileName":"/imports/plugins/core/checkout/client/templates/checkout/login/login.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"login"},"ignored":false,"code":"var Reaction = void 0;\nmodule.importSync(\"/client/api\", {\n  Reaction: function (v) {\n    Reaction = v;\n  }\n}, 0);\nvar Cart = void 0;\nmodule.importSync(\"/lib/collections\", {\n  Cart: function (v) {\n    Cart = v;\n  }\n}, 1);\nvar Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 2);\nvar Template = void 0;\nmodule.importSync(\"meteor/templating\", {\n  Template: function (v) {\n    Template = v;\n  }\n}, 3);\n/**\n * checkoutLoginCompleted\n * returns true if we've already past this stage,\n * or if the user is a guest but not anonymous\n */Template.checkoutLogin.helpers({\n  checkoutLoginCompleted: function () {\n    var self = this;\n    var cart = Cart.findOne();\n\n    if (cart && cart.workflow) {\n      var currentStatus = cart.workflow.status;\n      var guestUser = Reaction.hasPermission(\"guest\", Meteor.user());\n      var anonUser = Roles.userIsInRole(\"anonymous\", Meteor.user(), Reaction.getShopId());\n\n      if (currentStatus !== self.template && guestUser === true && anonUser === false) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n});","map":{"version":3,"sources":["/imports/plugins/core/checkout/client/templates/checkout/login/login.js"],"names":["Reaction","Cart","Meteor","Template","checkoutLogin","helpers","checkoutLoginCompleted","self","cart","findOne","workflow","currentStatus","status","guestUser","hasPermission","user","anonUser","Roles","userIsInRole","getShopId","template"],"mappings":"AAAA,IAAS;AAAT,OAAyB,WAAzB;;;;;;;;;;;;;;;;;;;;;;GACA,AAAS,AAAY,A,AACrB,AAAS,AAAc,AACvB,AAAS,AAAgB,AAEzB;AAMA,AAAS,AAAc,AAAQ,AAC7B,AAAwB,AAAY,AAClC,AAAM,AAAO;;;;YACP,AAAO,AAAK,cAAL;sCACb;AAAI,QAAQ,OAAZ,AAAiB,AAAU,AACzB;QAAM,YAAN,AAAsB,AAAK,AAAS,AACpC;;QAAM,aAAY,UAAlB,AAAkB,AAAS,AAAc,AAAS,AAAO,AACzD;UAAM,AAAW,gBAAM,KAAN,SAAjB,AAAiB,AAAmB,AAAa,AAAO,AAAQ,AAAS;6DAEzE;AAAI,qBAAkB,MAAlB,AAAuB,aAAY,aAAc,OAAjD,AAAyD,iBAA7D,AAA0E,AAAO,AAC/E,AAAO,AACR;;uFACF;;AACD;AAAA,AAAO,AACR;;WAdH,AAA+B;;AAG3B,CAAA","file":"/imports/plugins/core/checkout/client/templates/checkout/login/login.js.map","sourcesContent":["import { Reaction } from \"/client/api\";\nimport { Cart } from \"/lib/collections\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Template } from \"meteor/templating\";\n\n/**\n * checkoutLoginCompleted\n * returns true if we've already past this stage,\n * or if the user is a guest but not anonymous\n */\n\nTemplate.checkoutLogin.helpers({\n  checkoutLoginCompleted: function () {\n    const self = this;\n    const cart = Cart.findOne();\n    if (cart && cart.workflow) {\n      const currentStatus = cart.workflow.status;\n      const guestUser = Reaction.hasPermission(\"guest\", Meteor.user());\n      const anonUser = Roles.userIsInRole(\"anonymous\", Meteor.user(), Reaction.getShopId());\n\n      if (currentStatus !== self.template && guestUser === true && anonUser === false) {\n        return true;\n      }\n    }\n    return false;\n  }\n});\n"]},"hash":"cc01286cf5444895c9593a370a7bc2946d3d3ccf"}
