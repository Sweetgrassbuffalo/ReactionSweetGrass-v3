{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/kadira:dochead","imported":["DocHead"],"specifiers":[{"kind":"named","imported":"DocHead","local":"DocHead"}]},{"source":"/lib/api","imported":["ReactionProduct"],"specifiers":[{"kind":"named","imported":"ReactionProduct","local":"ReactionProduct"}]},{"source":"/lib/collections","imported":["Shops"],"specifiers":[{"kind":"named","imported":"Shops","local":"Shops"}]},{"source":"/lib/api","imported":["getShopId"],"specifiers":[{"kind":"named","imported":"getShopId","local":"getShopId"}]}],"exports":{"exported":["MetaData"],"specifiers":[{"kind":"local","local":"MetaData","exported":"MetaData"}]}}},"options":{"filename":"/lib/api/router/metadata.js","filenameRelative":"/lib/api/router/metadata.js","inputSourceMap":{"version":3,"sources":["/lib/api/router/metadata.js"],"names":["DocHead","ReactionProduct","Shops","getShopId","MetaData","init","context","params","product","selectedProduct","shop","findOne","meta","title","keywords","titleCase","param","charAt","toUpperCase","substring","description","addMeta","name","content","toString","handle","slug","route","routeName","options","removeDocHeadAddedTags","metafields","key","push","value","setTitle"],"mappings":"AAAA,OAAS;AAAT;AAAwB;;;IAAxB;;;;;;;;;;;;;;;;;;;;;;;GACA,AAAS,AAAuB,AAChC,AAAS,AAAa,AACtB,AAAS,AAAiB,AAE1B,AAKA,AAAO,AAAM,AAAW,AACtB,AAAK,AAAS,AACZ,A;AAAM,IAAS;kBACT;QACA,AAAO,SAAM,QAAnB,AAAa,AAAc,AAC3B;QAAA,AAAM,AAAO,0BACb;AAAI,QAAQ,OAAZ,cACA;QAAM,OANM,AAMZ,AAAiB,AAEjB;gBACA;QAAM,WAAY,AAAC,AAAU,AAC3B,AAAO,AAAM,AAAO,AAAG,AAAgB,AAAM,AAAU,AACxD,IAXW,AASZ,AAIA;;;6DACA;AAAA,AAAI,AAAM,AACR,AACA,OACA;;;;AACA,AAAI,AAAQ,AAAK,AAAa,AAC5B;AAAA,AAAQ,AAAQ,AACd;AADc,AACR,AACN;kBAAS,KAAA,AAAK,aAFA,AAEL,AAAiB,AAAU,AAAG;AAFzC;;iDAKF,AAAI,AAAQ,AAAK,AAAU,AACzB;AAFD;AAEC,AAAQ,AAAQ,AACd;;UAAM,aADQ,UAEd;gBAAS;gBAbL,AAeP,AAED;iCACA,AACA;AARE,AAAgB,AAEL,AAAK,AAAS;OAT3B,CAgBA;AApBQ,AAoBR,AAAS,AAAO,AAAK,AACrB;AACA;;;AAAI,eAAU,YAAd,AAAqB,AAAQ,AAC3B,MAAA,AAAI,AAAW,AAAQ,AAAO,AAC5B;;UAAQ,iBAAU;AADpB,YAEO,0BACL;kBAAQ,UAAU,AAAO,QAAzB,AAAQ,AACT;AAL0B,AAM3B;mCANF,AAOC;AAAM,AAAI,AAAU,AAAO,AAAM,AAChC,SANE,AAAQ,AAAkB,AAC3B,CAI+B,AAChC,AAAQ,AAAU,AAAO,AACzB,AACD;;AAHM,iBAGI,AAAQ,UAAR,OAAiB;AACpB,gBAAQ,UAAQ,OAAtB,AACA,MAFK,AAAqB,AAAQ,AAAM,AAAM,AAC9C,CAD8C,AAE9C,AAAM,AAAY,AAAM,AACxB;OAHK;AAID,oBAAc,QAAlB,AAA2B,AACzB;YAAQ,YAAU,MADO,AACzB,AAAQ,AAAe,AACvB,AACD,KAHD,CAAA,AAGO,AAAI,AAAM,AAAQ,AAAQ,AAAM,AAAQ,AAAK,AAAO,AACzD;;YAAQ,cAAU,AAAM,SADnB,AACL,AAAQ,AAAU,AAAc,AAAK,AACtC;AAAM,iCACL,OACA;yBAAkB,QAAlB,AAAQ,kCACT;+CA5CK,AA6CP,AAED;SAJY,MAKZ;AACA;;;AACA,AAAI,AAAU,AAAO,AAAU,AAAS,AACtC,QACA;AAAA,AAAQ;AAER;;;UAAI,UAAQ,OAAZ,AAAyB,mBACvB;AAAA,AAAQ,AAAQ,AACd;gBADc,AACR,AACN,AAAS,AAAQ,AAAY,AAAU,AAAG;;AAF5C,iCAID;;kBAED;AAAI,qBAAW,QAAQ,YAAvB,AAAmC,aACjC,AAAK,AAAM,AAAO,AAAQ,AAAY,AACpC;;AAAA,AAAS,AAAK,AAAI,AACnB,AACF;;;;AAED;;;;;;;;;;;;AAAA,AAAI,qBAAU,SACZ;AAAA,AAAQ,AAAQ,AACd;AADc,AACR,AACN,AAAS,AAAS;;AAFpB,sBAID;;;8BAIH;AA5EQ,AAyEP,AAED;AACA,AAAQ,AAAS,AACjB;AAAA,AAAS,AAAQ,AACjB,AAAS,AAAO,AAChB,QA7FU,AA6FV,AAAO,AACR;;;AAAC;uBA/FkB,AAgGrB,AAAC;;;KA7FA,AAAgB,AAAgB,AAChC,CAJG,AAAiB;;;;AAEpB,AAAuB,AACvB","file":"/lib/api/router/metadata.js.map","sourcesContent":["import { DocHead } from \"meteor/kadira:dochead\";\nimport { ReactionProduct } from \"/lib/api\";\nimport { Shops } from \"/lib/collections\";\nimport { getShopId } from \"/lib/api\";\n\n/**\n * MetaData\n * populates title and meta tags for routes\n * init accepts Router.current() context\n */\nexport const MetaData = {\n  init(context) {\n    const params = context.params;\n    const product = ReactionProduct.selectedProduct();\n    const shop = Shops.findOne(getShopId());\n    const meta = [];\n    let title = \"\";\n    const keywords = [];\n\n    // case helper\n    const titleCase = (param) => {\n      return param.charAt(0).toUpperCase() + param.substring(1);\n    };\n\n    // populate meta from shop\n    if (shop) {\n      //\n      // shop defaults\n      //\n      if (shop && shop.description) {\n        DocHead.addMeta({\n          name: \"description\",\n          content: shop.description.substring(0, 160)\n        });\n      }\n      if (shop && shop.keywords) {\n        DocHead.addMeta({\n          name: \"keywords\",\n          content: shop.keywords.toString()\n        });\n      }\n\n      //\n      // set title defaults\n      //\n      MetaData.name = shop.name;\n      // product title default\n      if (params && params.handle) {\n        if (product && product.title) {\n          title = titleCase(product.title);\n        } else {\n          title = titleCase(params.handle);\n        }\n        // tag slugs\n      } else if (params && params.slug) {\n        title = titleCase(params.slug);\n        // fallback to route name\n      } else if (context.route && context.route.name) {\n        const route = context.route;\n        const routeName = route.name;\n        // default index to Shop Name\n        if (routeName === \"index\") {\n          title = titleCase(shop.name);\n          // check for meta in package route\n        } else if (route.options.meta && route.options.meta.title) {\n          title = titleCase(route.options.meta.title);\n        } else {\n          // default routes to route's name\n          title = titleCase(routeName);\n        }\n      }\n\n      //\n      //  product details\n      //\n      if (params && params.handle && product) {\n        // discard defaults\n        DocHead.removeDocHeadAddedTags();\n\n        if (product.description) {\n          DocHead.addMeta({\n            name: \"description\",\n            content: product.description.substring(0, 160)\n          });\n        }\n\n        if (product && product.metafields) {\n          for (const key of product.metafields) {\n            keywords.push(key.value);\n          }\n        }\n\n        if (keywords) {\n          DocHead.addMeta({\n            name: \"keywords\",\n            content: keywords.toString()\n          });\n        }\n      }\n\n      // set site defaults\n      DocHead.setTitle(title);\n      MetaData.title = title;\n      MetaData.meta = meta;\n      return meta;\n    } // end shop\n  } // end update\n};\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/lib/api/router/metadata.js.map","sourceFileName":"/lib/api/router/metadata.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"metadata"},"ignored":false,"code":"module.export({\n  MetaData: function () {\n    return MetaData;\n  }\n});\nvar DocHead = void 0;\nmodule.importSync(\"meteor/kadira:dochead\", {\n  DocHead: function (v) {\n    DocHead = v;\n  }\n}, 0);\nvar ReactionProduct = void 0;\nmodule.importSync(\"/lib/api\", {\n  ReactionProduct: function (v) {\n    ReactionProduct = v;\n  }\n}, 1);\nvar Shops = void 0;\nmodule.importSync(\"/lib/collections\", {\n  Shops: function (v) {\n    Shops = v;\n  }\n}, 2);\nvar getShopId = void 0;\nmodule.importSync(\"/lib/api\", {\n  getShopId: function (v) {\n    getShopId = v;\n  }\n}, 3);\nvar MetaData = {\n  init: function (context) {\n    var params = context.params;\n    var product = ReactionProduct.selectedProduct();\n    var shop = Shops.findOne(getShopId());\n    var meta = [];\n    var title = \"\";\n    var keywords = []; // case helper\n\n    var titleCase = function (param) {\n      return param.charAt(0).toUpperCase() + param.substring(1);\n    }; // populate meta from shop\n\n\n    if (shop) {\n      //\n      // shop defaults\n      //\n      if (shop && shop.description) {\n        DocHead.addMeta({\n          name: \"description\",\n          content: shop.description.substring(0, 160)\n        });\n      }\n\n      if (shop && shop.keywords) {\n        DocHead.addMeta({\n          name: \"keywords\",\n          content: shop.keywords.toString()\n        });\n      } //\n      // set title defaults\n      //\n\n\n      MetaData.name = shop.name; // product title default\n\n      if (params && params.handle) {\n        if (product && product.title) {\n          title = titleCase(product.title);\n        } else {\n          title = titleCase(params.handle);\n        } // tag slugs\n\n      } else if (params && params.slug) {\n        title = titleCase(params.slug); // fallback to route name\n      } else if (context.route && context.route.name) {\n        var route = context.route;\n        var routeName = route.name; // default index to Shop Name\n\n        if (routeName === \"index\") {\n          title = titleCase(shop.name); // check for meta in package route\n        } else if (route.options.meta && route.options.meta.title) {\n          title = titleCase(route.options.meta.title);\n        } else {\n          // default routes to route's name\n          title = titleCase(routeName);\n        }\n      } //\n      //  product details\n      //\n\n\n      if (params && params.handle && product) {\n        // discard defaults\n        DocHead.removeDocHeadAddedTags();\n\n        if (product.description) {\n          DocHead.addMeta({\n            name: \"description\",\n            content: product.description.substring(0, 160)\n          });\n        }\n\n        if (product && product.metafields) {\n          for (var _iterator = product.metafields, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n            var _ref;\n\n            if (_isArray) {\n              if (_i >= _iterator.length) break;\n              _ref = _iterator[_i++];\n            } else {\n              _i = _iterator.next();\n              if (_i.done) break;\n              _ref = _i.value;\n            }\n\n            var key = _ref;\n            keywords.push(key.value);\n          }\n        }\n\n        if (keywords) {\n          DocHead.addMeta({\n            name: \"keywords\",\n            content: keywords.toString()\n          });\n        }\n      } // set site defaults\n\n\n      DocHead.setTitle(title);\n      MetaData.title = title;\n      MetaData.meta = meta;\n      return meta;\n    } // end shop\n\n  } // end update\n\n};","map":{"version":3,"sources":["/lib/api/router/metadata.js"],"names":["DocHead","ReactionProduct","Shops","getShopId","MetaData","init","context","params","product","selectedProduct","shop","findOne","meta","title","keywords","titleCase","param","charAt","toUpperCase","substring","description","addMeta","name","content","toString","handle","slug","route","routeName","options","removeDocHeadAddedTags","metafields","key","push","value","setTitle"],"mappings":"AAAA,OAAS;AAAT;AAAwB;;;IAAxB;;;;;;;;;;;;;;;;;;;;;;;GACA,AAAS,AAAuB,AAChC,AAAS,AAAa,AACtB,AAAS,AAAiB,AAE1B,AAKA,AAAO,AAAM,AAAW,AACtB,AAAK,AAAS,AACZ,A;AAAM,IAAS;kBACT;QACA,AAAO,SAAM,QAAnB,AAAa,AAAc,AAC3B;QAAA,AAAM,AAAO,0BACb;AAAI,QAAQ,OAAZ,cACA;QAAM,OANM,AAMZ,AAAiB,AAEjB;gBACA;QAAM,WAAY,AAAC,AAAU,AAC3B,AAAO,AAAM,AAAO,AAAG,AAAgB,AAAM,AAAU,AACxD,IAXW,AASZ,AAIA;;;6DACA;AAAA,AAAI,AAAM,AACR,AACA,OACA;;;;AACA,AAAI,AAAQ,AAAK,AAAa,AAC5B;AAAA,AAAQ,AAAQ,AACd;AADc,AACR,AACN;kBAAS,KAAA,AAAK,aAFA,AAEL,AAAiB,AAAU,AAAG;AAFzC;;iDAKF,AAAI,AAAQ,AAAK,AAAU,AACzB;AAFD;AAEC,AAAQ,AAAQ,AACd;;UAAM,aADQ,UAEd;gBAAS;gBAbL,AAeP,AAED;iCACA,AACA;AARE,AAAgB,AAEL,AAAK,AAAS;OAT3B,CAgBA;AApBQ,AAoBR,AAAS,AAAO,AAAK,AACrB;AACA;;;AAAI,eAAU,YAAd,AAAqB,AAAQ,AAC3B,MAAA,AAAI,AAAW,AAAQ,AAAO,AAC5B;;UAAQ,iBAAU;AADpB,YAEO,0BACL;kBAAQ,UAAU,AAAO,QAAzB,AAAQ,AACT;AAL0B,AAM3B;mCANF,AAOC;AAAM,AAAI,AAAU,AAAO,AAAM,AAChC,SANE,AAAQ,AAAkB,AAC3B,CAI+B,AAChC,AAAQ,AAAU,AAAO,AACzB,AACD;;AAHM,iBAGI,AAAQ,UAAR,OAAiB;AACpB,gBAAQ,UAAQ,OAAtB,AACA,MAFK,AAAqB,AAAQ,AAAM,AAAM,AAC9C,CAD8C,AAE9C,AAAM,AAAY,AAAM,AACxB;OAHK;AAID,oBAAc,QAAlB,AAA2B,AACzB;YAAQ,YAAU,MADO,AACzB,AAAQ,AAAe,AACvB,AACD,KAHD,CAAA,AAGO,AAAI,AAAM,AAAQ,AAAQ,AAAM,AAAQ,AAAK,AAAO,AACzD;;YAAQ,cAAU,AAAM,SADnB,AACL,AAAQ,AAAU,AAAc,AAAK,AACtC;AAAM,iCACL,OACA;yBAAkB,QAAlB,AAAQ,kCACT;+CA5CK,AA6CP,AAED;SAJY,MAKZ;AACA;;;AACA,AAAI,AAAU,AAAO,AAAU,AAAS,AACtC,QACA;AAAA,AAAQ;AAER;;;UAAI,UAAQ,OAAZ,AAAyB,mBACvB;AAAA,AAAQ,AAAQ,AACd;gBADc,AACR,AACN,AAAS,AAAQ,AAAY,AAAU,AAAG;;AAF5C,iCAID;;kBAED;AAAI,qBAAW,QAAQ,YAAvB,AAAmC,aACjC,AAAK,AAAM,AAAO,AAAQ,AAAY,AACpC;;AAAA,AAAS,AAAK,AAAI,AACnB,AACF;;;;AAED;;;;;;;;;;;;AAAA,AAAI,qBAAU,SACZ;AAAA,AAAQ,AAAQ,AACd;AADc,AACR,AACN,AAAS,AAAS;;AAFpB,sBAID;;;8BAIH;AA5EQ,AAyEP,AAED;AACA,AAAQ,AAAS,AACjB;AAAA,AAAS,AAAQ,AACjB,AAAS,AAAO,AAChB,QA7FU,AA6FV,AAAO,AACR;;;AAAC;uBA/FkB,AAgGrB,AAAC;;;KA7FA,AAAgB,AAAgB,AAChC,CAJG,AAAiB;;;;AAEpB,AAAuB,AACvB","file":"/lib/api/router/metadata.js.map","sourcesContent":["import { DocHead } from \"meteor/kadira:dochead\";\nimport { ReactionProduct } from \"/lib/api\";\nimport { Shops } from \"/lib/collections\";\nimport { getShopId } from \"/lib/api\";\n\n/**\n * MetaData\n * populates title and meta tags for routes\n * init accepts Router.current() context\n */\nexport const MetaData = {\n  init(context) {\n    const params = context.params;\n    const product = ReactionProduct.selectedProduct();\n    const shop = Shops.findOne(getShopId());\n    const meta = [];\n    let title = \"\";\n    const keywords = [];\n\n    // case helper\n    const titleCase = (param) => {\n      return param.charAt(0).toUpperCase() + param.substring(1);\n    };\n\n    // populate meta from shop\n    if (shop) {\n      //\n      // shop defaults\n      //\n      if (shop && shop.description) {\n        DocHead.addMeta({\n          name: \"description\",\n          content: shop.description.substring(0, 160)\n        });\n      }\n      if (shop && shop.keywords) {\n        DocHead.addMeta({\n          name: \"keywords\",\n          content: shop.keywords.toString()\n        });\n      }\n\n      //\n      // set title defaults\n      //\n      MetaData.name = shop.name;\n      // product title default\n      if (params && params.handle) {\n        if (product && product.title) {\n          title = titleCase(product.title);\n        } else {\n          title = titleCase(params.handle);\n        }\n        // tag slugs\n      } else if (params && params.slug) {\n        title = titleCase(params.slug);\n        // fallback to route name\n      } else if (context.route && context.route.name) {\n        const route = context.route;\n        const routeName = route.name;\n        // default index to Shop Name\n        if (routeName === \"index\") {\n          title = titleCase(shop.name);\n          // check for meta in package route\n        } else if (route.options.meta && route.options.meta.title) {\n          title = titleCase(route.options.meta.title);\n        } else {\n          // default routes to route's name\n          title = titleCase(routeName);\n        }\n      }\n\n      //\n      //  product details\n      //\n      if (params && params.handle && product) {\n        // discard defaults\n        DocHead.removeDocHeadAddedTags();\n\n        if (product.description) {\n          DocHead.addMeta({\n            name: \"description\",\n            content: product.description.substring(0, 160)\n          });\n        }\n\n        if (product && product.metafields) {\n          for (const key of product.metafields) {\n            keywords.push(key.value);\n          }\n        }\n\n        if (keywords) {\n          DocHead.addMeta({\n            name: \"keywords\",\n            content: keywords.toString()\n          });\n        }\n      }\n\n      // set site defaults\n      DocHead.setTitle(title);\n      MetaData.title = title;\n      MetaData.meta = meta;\n      return meta;\n    } // end shop\n  } // end update\n};\n"]},"hash":"c5c859f7277ac4a894f741ed4ef990f113c8514a"}
