{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"/lib/collections","imported":["Cart"],"specifiers":[{"kind":"named","imported":"Cart","local":"Cart"}]},{"source":"/server/api","imported":["MethodHooks"],"specifiers":[{"kind":"named","imported":"MethodHooks","local":"MethodHooks"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/included/discount-codes/server/hooks/orders.js","filenameRelative":"/imports/plugins/included/discount-codes/server/hooks/orders.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/included/discount-codes/server/hooks/orders.js"],"names":["Cart","MethodHooks","before","options","cartId","arguments","cart","findOne","billing","paymentMethod","processor","Meteor","call","id"],"mappings":"AAAA;AAAA,AAAS,OAAY,WAArB;;;;;;;;;;GACA,AAA4B,A,AAAnB,AAET,AACA;AACA;;AACA,AAAY,AAAO,AAAwB,AAAU,AAAS;AAC5D,AAAM,YAAS,OAAf,AAAe,AAAQ,AAAU;MAC3B,AAAO,SAAK,QAAL,AAAa,UAFkC,AAE5D,AACA;0BACA,QAFA,CAEA,AAAI,AAAQ,AAAK,AAAS,AACxB;;MAAK,QAAM,KAAX,AAAsB,SAAtB,AAA2B,AAAS,AAClC;;AACA;;;;;;;;;;;;;AAAA,AAAI,AAAQ,AAAiB,AAAQ,AAAc,AAAc,AAAQ,AACvE;UAAO,QAAP,AAAY,yBAAZ,AAAqC,AAAQ,cAAQ,cAArD,AAA6C,AAAsB,QACpE;2EACF;AACF;AAXH,AAYC","file":"/imports/plugins/included/discount-codes/server/hooks/orders.js.map","sourcesContent":["import { Cart } from \"/lib/collections\";\nimport { MethodHooks } from \"/server/api\";\n\n// this hook runs before a cart is converted to an order\n// it looks at any discounts that have been applied to the cart\n// and updates the discount document with a transaction history\nMethodHooks.before(\"cart/copyCartToOrder\", function (options) {\n  const cartId = options.arguments[0];\n  const cart = Cart.findOne(cartId);\n  // record that discounts have been applied to order\n  if (cart && cart.billing) {\n    for (const billing of cart.billing) {\n      // TODO should we enable transactions for rates as well?\n      if (billing.paymentMethod && billing.paymentMethod.processor === \"code\") {\n        Meteor.call(\"discounts/transaction\", cartId, billing.paymentMethod.id);\n      }\n    }\n  }\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/included/discount-codes/server/hooks/orders.js.map","sourceFileName":"/imports/plugins/included/discount-codes/server/hooks/orders.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"orders"},"ignored":false,"code":"var Cart = void 0;\nmodule.importSync(\"/lib/collections\", {\n  Cart: function (v) {\n    Cart = v;\n  }\n}, 0);\nvar MethodHooks = void 0;\nmodule.importSync(\"/server/api\", {\n  MethodHooks: function (v) {\n    MethodHooks = v;\n  }\n}, 1);\n// this hook runs before a cart is converted to an order\n// it looks at any discounts that have been applied to the cart\n// and updates the discount document with a transaction history\nMethodHooks.before(\"cart/copyCartToOrder\", function (options) {\n  var cartId = options.arguments[0];\n  var cart = Cart.findOne(cartId); // record that discounts have been applied to order\n\n  if (cart && cart.billing) {\n    for (var _iterator = cart.billing, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var billing = _ref;\n\n      // TODO should we enable transactions for rates as well?\n      if (billing.paymentMethod && billing.paymentMethod.processor === \"code\") {\n        Meteor.call(\"discounts/transaction\", cartId, billing.paymentMethod.id);\n      }\n    }\n  }\n});","map":{"version":3,"sources":["/imports/plugins/included/discount-codes/server/hooks/orders.js"],"names":["Cart","MethodHooks","before","options","cartId","arguments","cart","findOne","billing","paymentMethod","processor","Meteor","call","id"],"mappings":"AAAA;AAAA,AAAS,OAAY,WAArB;;;;;;;;;;GACA,AAA4B,A,AAAnB,AAET,AACA;AACA;;AACA,AAAY,AAAO,AAAwB,AAAU,AAAS;AAC5D,AAAM,YAAS,OAAf,AAAe,AAAQ,AAAU;MAC3B,AAAO,SAAK,QAAL,AAAa,UAFkC,AAE5D,AACA;0BACA,QAFA,CAEA,AAAI,AAAQ,AAAK,AAAS,AACxB;;MAAK,QAAM,KAAX,AAAsB,SAAtB,AAA2B,AAAS,AAClC;;AACA;;;;;;;;;;;;;AAAA,AAAI,AAAQ,AAAiB,AAAQ,AAAc,AAAc,AAAQ,AACvE;UAAO,QAAP,AAAY,yBAAZ,AAAqC,AAAQ,cAAQ,cAArD,AAA6C,AAAsB,QACpE;2EACF;AACF;AAXH,AAYC","file":"/imports/plugins/included/discount-codes/server/hooks/orders.js.map","sourcesContent":["import { Cart } from \"/lib/collections\";\nimport { MethodHooks } from \"/server/api\";\n\n// this hook runs before a cart is converted to an order\n// it looks at any discounts that have been applied to the cart\n// and updates the discount document with a transaction history\nMethodHooks.before(\"cart/copyCartToOrder\", function (options) {\n  const cartId = options.arguments[0];\n  const cart = Cart.findOne(cartId);\n  // record that discounts have been applied to order\n  if (cart && cart.billing) {\n    for (const billing of cart.billing) {\n      // TODO should we enable transactions for rates as well?\n      if (billing.paymentMethod && billing.paymentMethod.processor === \"code\") {\n        Meteor.call(\"discounts/transaction\", cartId, billing.paymentMethod.id);\n      }\n    }\n  }\n});\n"]},"hash":"c4a9def241536015cd5283b28c7ba2ae05ba4419"}
