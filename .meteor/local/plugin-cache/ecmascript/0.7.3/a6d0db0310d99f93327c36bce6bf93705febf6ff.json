{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/templating","imported":["Template"],"specifiers":[{"kind":"named","imported":"Template","local":"Template"}]},{"source":"meteor/reactive-dict","imported":["ReactiveDict"],"specifiers":[{"kind":"named","imported":"ReactiveDict","local":"ReactiveDict"}]},{"source":"meteor/aldeed:autoform","imported":["AutoForm"],"specifiers":[{"kind":"named","imported":"AutoForm","local":"AutoForm"}]},{"source":"../collections/codes","imported":["DiscountCodes"],"specifiers":[{"kind":"named","imported":"DiscountCodes","local":"DiscountCodes"}]},{"source":"/client/api","imported":["i18next"],"specifiers":[{"kind":"named","imported":"i18next","local":"i18next"}]},{"source":"../../lib/collections/schemas","imported":["DiscountCodes"],"specifiers":[{"kind":"named","imported":"DiscountCodes","local":"DiscountSchema"}]},{"source":"/imports/plugins/core/ui-grid/client/griddle","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"MeteorGriddle"}]},{"source":"/imports/plugins/core/ui/client/components","imported":["IconButton","Loading"],"specifiers":[{"kind":"named","imported":"IconButton","local":"IconButton"},{"kind":"named","imported":"Loading","local":"Loading"}]},{"source":"./settings.html","imported":[],"specifiers":[]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/included/discount-codes/client/templates/settings.js","filenameRelative":"/imports/plugins/included/discount-codes/client/templates/settings.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/included/discount-codes/client/templates/settings.js"],"names":["Template","ReactiveDict","AutoForm","DiscountCodes","i18next","DiscountSchema","MeteorGriddle","IconButton","Loading","customDiscountCodes","onCreated","autorun","subscribe","state","setDefault","isEditing","editingId","helpers","editButton","instance","equals","get","component","icon","onIcon","toggle","toggleOn","style","position","top","right","onClick","$","removeClass","set","discountGrid","filteredFields","noDataMessage","t","editRow","options","currentId","props","data","_id","customRowMetaData","bodyCssClassName","customColumnMetadata","forEach","field","columnMeta","columnName","displayName","push","publication","collection","matchingResultsCount","showFilter","useGriddleStyles","rowMetadata","columns","onRowClick","columnMetadata","externalLoadingComponent","discountSchema","discountCode","id","discount","findOne","events","confirmTitle","confirmButtonText","Alerts","alert","title","type","showCancelButton","isConfirm","Meteor","call","event","currentTarget","addClass","hooks","onSuccess","toast","onError","operation","error"],"mappings":"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","file":"/imports/plugins/included/discount-codes/client/templates/settings.js.map","sourcesContent":["import { Template } from \"meteor/templating\";\nimport { ReactiveDict } from \"meteor/reactive-dict\";\nimport { AutoForm } from \"meteor/aldeed:autoform\";\nimport { DiscountCodes } from \"../collections/codes\";\nimport { i18next } from \"/client/api\";\nimport { DiscountCodes as DiscountSchema } from \"../../lib/collections/schemas\";\nimport MeteorGriddle from \"/imports/plugins/core/ui-grid/client/griddle\";\nimport { IconButton, Loading }  from \"/imports/plugins/core/ui/client/components\";\nimport \"./settings.html\";\n\n/* eslint no-shadow: [\"error\", { \"allow\": [\"options\"] }] */\n/* eslint no-unused-vars: [\"error\", { \"argsIgnorePattern\": \"[oO]ptions\" }] */\n\nTemplate.customDiscountCodes.onCreated(function () {\n  this.autorun(() => {\n    this.subscribe(\"DiscountCodes\");\n  });\n\n  this.state = new ReactiveDict();\n  this.state.setDefault({\n    isEditing: false,\n    editingId: null\n  });\n});\n\nTemplate.customDiscountCodes.helpers({\n  editButton() {\n    const instance = Template.instance();\n    const state = instance.state;\n    const isEditing = state.equals(\"isEditing\", true);\n    let editingId = state.get(\"editingId\");\n    // toggle edit state\n    if (!isEditing) {\n      editingId = null;\n    }\n    // return icon\n    return {\n      component: IconButton,\n      icon: \"fa fa-plus\",\n      onIcon: \"fa fa-pencil\",\n      toggle: true,\n      toggleOn: isEditing,\n      style: {\n        position: \"relative\",\n        top: \"-25px\",\n        right: \"8px\"\n      },\n      onClick() {\n        // remove active rows from grid\n        $(\".discount-codes-grid-row\").removeClass(\"active\");\n        return state.set({\n          isEditing: !isEditing,\n          editingId: editingId\n        });\n      }\n    };\n  },\n  discountGrid() {\n    const filteredFields = [\"code\", \"discount\", \"conditions.redemptionLimit\", \"calculation.method\"];\n    const noDataMessage = i18next.t(\"admin.settings.noCustomDiscountCodesFound\");\n    const instance = Template.instance();\n\n    //\n    // helper to get and select row from griddle\n    // into blaze for to select discount row for editing\n    //\n    function editRow(options) {\n      const currentId = instance.state.get(\"editingId\");\n      // isEditing is discount rate object\n      instance.state.set(\"isEditing\", options.props.data);\n      instance.state.set(\"editingId\", options.props.data._id);\n      // toggle edit mode clicking on same row\n      if (currentId === options.props.data._id) {\n        instance.state.set(\"isEditing\", null);\n        instance.state.set(\"editingId\", null);\n      }\n    }\n\n    //\n    // helper adds a class to every grid row\n    //\n    const customRowMetaData = {\n      bodyCssClassName: () =>  {\n        return \"discount-codes-grid-row\";\n      }\n    };\n\n    // add i18n handling to headers\n    const customColumnMetadata = [];\n    filteredFields.forEach(function (field) {\n      const columnMeta = {\n        columnName: field,\n        displayName: i18next.t(`admin.discountGrid.${field}`)\n      };\n      customColumnMetadata.push(columnMeta);\n    });\n\n    // return discount Grid\n    return {\n      component: MeteorGriddle,\n      publication: \"DiscountCodes\",\n      collection: DiscountCodes,\n      matchingResultsCount: \"discounts-count\",\n      showFilter: true,\n      useGriddleStyles: false,\n      rowMetadata: customRowMetaData,\n      filteredFields: filteredFields,\n      columns: filteredFields,\n      noDataMessage: noDataMessage,\n      onRowClick: editRow,\n      columnMetadata: customColumnMetadata,\n      externalLoadingComponent: Loading\n    };\n  },\n\n  instance() {\n    const instance = Template.instance();\n    return instance;\n  },\n  // schema for forms\n  discountSchema() {\n    return DiscountSchema;\n  },\n\n  discountCode() {\n    const instance = Template.instance();\n    const id = instance.state.get(\"editingId\");\n    const discount = DiscountCodes.findOne(id) || {};\n    return discount;\n  }\n});\n\n//\n// on submit lets clear the form state\n//\nTemplate.customDiscountCodes.events({\n  \"submit #discount-codes-update-form\": function () {\n    const instance = Template.instance();\n    instance.state.set({\n      isEditing: false,\n      editingId: null\n    });\n  },\n  \"submit #discount-codes-insert-form\": function () {\n    const instance = Template.instance();\n    instance.state.set({\n      isEditing: true,\n      editingId: null\n    });\n  },\n  \"click .cancel, .discount-codes-grid-row .active\": function () {\n    instance = Template.instance();\n    // remove active rows from grid\n    instance.state.set({\n      isEditing: false,\n      editingId: null\n    });\n    // ugly hack\n    $(\".discount-codes-grid-row\").removeClass(\"active\");\n  },\n  \"click .delete\": function () {\n    const confirmTitle = i18next.t(\"admin.settings.confirmRateDelete\");\n    const confirmButtonText = i18next.t(\"app.delete\");\n    const instance = Template.instance();\n    const id = instance.state.get(\"editingId\");\n    // confirm delete\n    Alerts.alert({\n      title: confirmTitle,\n      type: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: confirmButtonText\n    }, (isConfirm) => {\n      if (isConfirm) {\n        if (id) {\n          Meteor.call(\"discounts/deleteRate\", id);\n          instance.state.set({\n            isEditing: false,\n            editingId: null\n          });\n        }\n      }\n    });\n  },\n  \"click .discount-codes-grid-row\": function (event) {\n    // toggle all rows off, then add our active row\n    $(\".discount-codes-grid-row\").removeClass(\"active\");\n    Template.instance().$(event.currentTarget).addClass(\"active\");\n  }\n});\n\n//\n// Hooks for update and insert forms\n//\nAutoForm.hooks({\n  \"discount-codes-update-form\": {\n    onSuccess: function () {\n      return Alerts.toast(i18next.t(\"admin.settings.settingsSaveSuccess\"),\n        \"success\");\n    },\n    onError: function (operation, error) {\n      return Alerts.toast(\n        `${i18next.t(\"admin.settings.settingsSaveFailure\")} ${error}`, \"error\"\n      );\n    }\n  },\n  \"discount-codes-insert-form\": {\n    onSuccess: function () {\n      return Alerts.toast(i18next.t(\"admin.settings.settingsSaveSuccess\"), \"success\");\n    },\n    onError: function (operation, error) {\n      return Alerts.toast(\n        `${i18next.t(\"admin.settings.settingsSaveFailure\")} ${error}`, \"error\"\n      );\n    }\n  }\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/included/discount-codes/client/templates/settings.js.map","sourceFileName":"/imports/plugins/included/discount-codes/client/templates/settings.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"settings"},"ignored":false,"code":"var Template = void 0;\nmodule.importSync(\"meteor/templating\", {\n  Template: function (v) {\n    Template = v;\n  }\n}, 0);\nvar ReactiveDict = void 0;\nmodule.importSync(\"meteor/reactive-dict\", {\n  ReactiveDict: function (v) {\n    ReactiveDict = v;\n  }\n}, 1);\nvar AutoForm = void 0;\nmodule.importSync(\"meteor/aldeed:autoform\", {\n  AutoForm: function (v) {\n    AutoForm = v;\n  }\n}, 2);\nvar DiscountCodes = void 0;\nmodule.importSync(\"../collections/codes\", {\n  DiscountCodes: function (v) {\n    DiscountCodes = v;\n  }\n}, 3);\nvar i18next = void 0;\nmodule.importSync(\"/client/api\", {\n  i18next: function (v) {\n    i18next = v;\n  }\n}, 4);\nvar DiscountSchema = void 0;\nmodule.importSync(\"../../lib/collections/schemas\", {\n  DiscountCodes: function (v) {\n    DiscountSchema = v;\n  }\n}, 5);\nvar MeteorGriddle = void 0;\nmodule.importSync(\"/imports/plugins/core/ui-grid/client/griddle\", {\n  \"default\": function (v) {\n    MeteorGriddle = v;\n  }\n}, 6);\nvar IconButton = void 0,\n    Loading = void 0;\nmodule.importSync(\"/imports/plugins/core/ui/client/components\", {\n  IconButton: function (v) {\n    IconButton = v;\n  },\n  Loading: function (v) {\n    Loading = v;\n  }\n}, 7);\nmodule.importSync(\"./settings.html\");\n/* eslint no-shadow: [\"error\", { \"allow\": [\"options\"] }] */ /* eslint no-unused-vars: [\"error\", { \"argsIgnorePattern\": \"[oO]ptions\" }] */Template.customDiscountCodes.onCreated(function () {\n  var _this = this;\n\n  this.autorun(function () {\n    _this.subscribe(\"DiscountCodes\");\n  });\n  this.state = new ReactiveDict();\n  this.state.setDefault({\n    isEditing: false,\n    editingId: null\n  });\n});\nTemplate.customDiscountCodes.helpers({\n  editButton: function () {\n    var instance = Template.instance();\n    var state = instance.state;\n    var isEditing = state.equals(\"isEditing\", true);\n    var editingId = state.get(\"editingId\"); // toggle edit state\n\n    if (!isEditing) {\n      editingId = null;\n    } // return icon\n\n\n    return {\n      component: IconButton,\n      icon: \"fa fa-plus\",\n      onIcon: \"fa fa-pencil\",\n      toggle: true,\n      toggleOn: isEditing,\n      style: {\n        position: \"relative\",\n        top: \"-25px\",\n        right: \"8px\"\n      },\n      onClick: function () {\n        // remove active rows from grid\n        $(\".discount-codes-grid-row\").removeClass(\"active\");\n        return state.set({\n          isEditing: !isEditing,\n          editingId: editingId\n        });\n      }\n    };\n  },\n  discountGrid: function () {\n    var filteredFields = [\"code\", \"discount\", \"conditions.redemptionLimit\", \"calculation.method\"];\n    var noDataMessage = i18next.t(\"admin.settings.noCustomDiscountCodesFound\");\n    var instance = Template.instance(); //\n    // helper to get and select row from griddle\n    // into blaze for to select discount row for editing\n    //\n\n    function editRow(options) {\n      var currentId = instance.state.get(\"editingId\"); // isEditing is discount rate object\n\n      instance.state.set(\"isEditing\", options.props.data);\n      instance.state.set(\"editingId\", options.props.data._id); // toggle edit mode clicking on same row\n\n      if (currentId === options.props.data._id) {\n        instance.state.set(\"isEditing\", null);\n        instance.state.set(\"editingId\", null);\n      }\n    } //\n    // helper adds a class to every grid row\n    //\n\n\n    var customRowMetaData = {\n      bodyCssClassName: function () {\n        return \"discount-codes-grid-row\";\n      }\n    }; // add i18n handling to headers\n\n    var customColumnMetadata = [];\n    filteredFields.forEach(function (field) {\n      var columnMeta = {\n        columnName: field,\n        displayName: i18next.t(\"admin.discountGrid.\" + field)\n      };\n      customColumnMetadata.push(columnMeta);\n    }); // return discount Grid\n\n    return {\n      component: MeteorGriddle,\n      publication: \"DiscountCodes\",\n      collection: DiscountCodes,\n      matchingResultsCount: \"discounts-count\",\n      showFilter: true,\n      useGriddleStyles: false,\n      rowMetadata: customRowMetaData,\n      filteredFields: filteredFields,\n      columns: filteredFields,\n      noDataMessage: noDataMessage,\n      onRowClick: editRow,\n      columnMetadata: customColumnMetadata,\n      externalLoadingComponent: Loading\n    };\n  },\n  instance: function () {\n    var instance = Template.instance();\n    return instance;\n  },\n  // schema for forms\n  discountSchema: function () {\n    return DiscountSchema;\n  },\n  discountCode: function () {\n    var instance = Template.instance();\n    var id = instance.state.get(\"editingId\");\n    var discount = DiscountCodes.findOne(id) || {};\n    return discount;\n  }\n}); //\n// on submit lets clear the form state\n//\n\nTemplate.customDiscountCodes.events({\n  \"submit #discount-codes-update-form\": function () {\n    var instance = Template.instance();\n    instance.state.set({\n      isEditing: false,\n      editingId: null\n    });\n  },\n  \"submit #discount-codes-insert-form\": function () {\n    var instance = Template.instance();\n    instance.state.set({\n      isEditing: true,\n      editingId: null\n    });\n  },\n  \"click .cancel, .discount-codes-grid-row .active\": function () {\n    instance = Template.instance(); // remove active rows from grid\n\n    instance.state.set({\n      isEditing: false,\n      editingId: null\n    }); // ugly hack\n\n    $(\".discount-codes-grid-row\").removeClass(\"active\");\n  },\n  \"click .delete\": function () {\n    var confirmTitle = i18next.t(\"admin.settings.confirmRateDelete\");\n    var confirmButtonText = i18next.t(\"app.delete\");\n    var instance = Template.instance();\n    var id = instance.state.get(\"editingId\"); // confirm delete\n\n    Alerts.alert({\n      title: confirmTitle,\n      type: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: confirmButtonText\n    }, function (isConfirm) {\n      if (isConfirm) {\n        if (id) {\n          Meteor.call(\"discounts/deleteRate\", id);\n          instance.state.set({\n            isEditing: false,\n            editingId: null\n          });\n        }\n      }\n    });\n  },\n  \"click .discount-codes-grid-row\": function (event) {\n    // toggle all rows off, then add our active row\n    $(\".discount-codes-grid-row\").removeClass(\"active\");\n    Template.instance().$(event.currentTarget).addClass(\"active\");\n  }\n}); //\n// Hooks for update and insert forms\n//\n\nAutoForm.hooks({\n  \"discount-codes-update-form\": {\n    onSuccess: function () {\n      return Alerts.toast(i18next.t(\"admin.settings.settingsSaveSuccess\"), \"success\");\n    },\n    onError: function (operation, error) {\n      return Alerts.toast(i18next.t(\"admin.settings.settingsSaveFailure\") + \" \" + error, \"error\");\n    }\n  },\n  \"discount-codes-insert-form\": {\n    onSuccess: function () {\n      return Alerts.toast(i18next.t(\"admin.settings.settingsSaveSuccess\"), \"success\");\n    },\n    onError: function (operation, error) {\n      return Alerts.toast(i18next.t(\"admin.settings.settingsSaveFailure\") + \" \" + error, \"error\");\n    }\n  }\n});","map":{"version":3,"sources":["/imports/plugins/included/discount-codes/client/templates/settings.js"],"names":["Template","ReactiveDict","AutoForm","DiscountCodes","i18next","DiscountSchema","MeteorGriddle","IconButton","Loading","customDiscountCodes","onCreated","autorun","subscribe","state","setDefault","isEditing","editingId","helpers","editButton","instance","equals","get","component","icon","onIcon","toggle","toggleOn","style","position","top","right","onClick","$","removeClass","set","discountGrid","filteredFields","noDataMessage","t","editRow","options","currentId","props","data","_id","customRowMetaData","bodyCssClassName","customColumnMetadata","forEach","field","columnMeta","columnName","displayName","push","publication","collection","matchingResultsCount","showFilter","useGriddleStyles","rowMetadata","columns","onRowClick","columnMetadata","externalLoadingComponent","discountSchema","discountCode","id","discount","findOne","events","confirmTitle","confirmButtonText","Alerts","alert","title","type","showCancelButton","isConfirm","Meteor","call","event","currentTarget","addClass","hooks","onSuccess","toast","onError","operation","error"],"mappings":"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","file":"/imports/plugins/included/discount-codes/client/templates/settings.js.map","sourcesContent":["import { Template } from \"meteor/templating\";\nimport { ReactiveDict } from \"meteor/reactive-dict\";\nimport { AutoForm } from \"meteor/aldeed:autoform\";\nimport { DiscountCodes } from \"../collections/codes\";\nimport { i18next } from \"/client/api\";\nimport { DiscountCodes as DiscountSchema } from \"../../lib/collections/schemas\";\nimport MeteorGriddle from \"/imports/plugins/core/ui-grid/client/griddle\";\nimport { IconButton, Loading }  from \"/imports/plugins/core/ui/client/components\";\nimport \"./settings.html\";\n\n/* eslint no-shadow: [\"error\", { \"allow\": [\"options\"] }] */\n/* eslint no-unused-vars: [\"error\", { \"argsIgnorePattern\": \"[oO]ptions\" }] */\n\nTemplate.customDiscountCodes.onCreated(function () {\n  this.autorun(() => {\n    this.subscribe(\"DiscountCodes\");\n  });\n\n  this.state = new ReactiveDict();\n  this.state.setDefault({\n    isEditing: false,\n    editingId: null\n  });\n});\n\nTemplate.customDiscountCodes.helpers({\n  editButton() {\n    const instance = Template.instance();\n    const state = instance.state;\n    const isEditing = state.equals(\"isEditing\", true);\n    let editingId = state.get(\"editingId\");\n    // toggle edit state\n    if (!isEditing) {\n      editingId = null;\n    }\n    // return icon\n    return {\n      component: IconButton,\n      icon: \"fa fa-plus\",\n      onIcon: \"fa fa-pencil\",\n      toggle: true,\n      toggleOn: isEditing,\n      style: {\n        position: \"relative\",\n        top: \"-25px\",\n        right: \"8px\"\n      },\n      onClick() {\n        // remove active rows from grid\n        $(\".discount-codes-grid-row\").removeClass(\"active\");\n        return state.set({\n          isEditing: !isEditing,\n          editingId: editingId\n        });\n      }\n    };\n  },\n  discountGrid() {\n    const filteredFields = [\"code\", \"discount\", \"conditions.redemptionLimit\", \"calculation.method\"];\n    const noDataMessage = i18next.t(\"admin.settings.noCustomDiscountCodesFound\");\n    const instance = Template.instance();\n\n    //\n    // helper to get and select row from griddle\n    // into blaze for to select discount row for editing\n    //\n    function editRow(options) {\n      const currentId = instance.state.get(\"editingId\");\n      // isEditing is discount rate object\n      instance.state.set(\"isEditing\", options.props.data);\n      instance.state.set(\"editingId\", options.props.data._id);\n      // toggle edit mode clicking on same row\n      if (currentId === options.props.data._id) {\n        instance.state.set(\"isEditing\", null);\n        instance.state.set(\"editingId\", null);\n      }\n    }\n\n    //\n    // helper adds a class to every grid row\n    //\n    const customRowMetaData = {\n      bodyCssClassName: () =>  {\n        return \"discount-codes-grid-row\";\n      }\n    };\n\n    // add i18n handling to headers\n    const customColumnMetadata = [];\n    filteredFields.forEach(function (field) {\n      const columnMeta = {\n        columnName: field,\n        displayName: i18next.t(`admin.discountGrid.${field}`)\n      };\n      customColumnMetadata.push(columnMeta);\n    });\n\n    // return discount Grid\n    return {\n      component: MeteorGriddle,\n      publication: \"DiscountCodes\",\n      collection: DiscountCodes,\n      matchingResultsCount: \"discounts-count\",\n      showFilter: true,\n      useGriddleStyles: false,\n      rowMetadata: customRowMetaData,\n      filteredFields: filteredFields,\n      columns: filteredFields,\n      noDataMessage: noDataMessage,\n      onRowClick: editRow,\n      columnMetadata: customColumnMetadata,\n      externalLoadingComponent: Loading\n    };\n  },\n\n  instance() {\n    const instance = Template.instance();\n    return instance;\n  },\n  // schema for forms\n  discountSchema() {\n    return DiscountSchema;\n  },\n\n  discountCode() {\n    const instance = Template.instance();\n    const id = instance.state.get(\"editingId\");\n    const discount = DiscountCodes.findOne(id) || {};\n    return discount;\n  }\n});\n\n//\n// on submit lets clear the form state\n//\nTemplate.customDiscountCodes.events({\n  \"submit #discount-codes-update-form\": function () {\n    const instance = Template.instance();\n    instance.state.set({\n      isEditing: false,\n      editingId: null\n    });\n  },\n  \"submit #discount-codes-insert-form\": function () {\n    const instance = Template.instance();\n    instance.state.set({\n      isEditing: true,\n      editingId: null\n    });\n  },\n  \"click .cancel, .discount-codes-grid-row .active\": function () {\n    instance = Template.instance();\n    // remove active rows from grid\n    instance.state.set({\n      isEditing: false,\n      editingId: null\n    });\n    // ugly hack\n    $(\".discount-codes-grid-row\").removeClass(\"active\");\n  },\n  \"click .delete\": function () {\n    const confirmTitle = i18next.t(\"admin.settings.confirmRateDelete\");\n    const confirmButtonText = i18next.t(\"app.delete\");\n    const instance = Template.instance();\n    const id = instance.state.get(\"editingId\");\n    // confirm delete\n    Alerts.alert({\n      title: confirmTitle,\n      type: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: confirmButtonText\n    }, (isConfirm) => {\n      if (isConfirm) {\n        if (id) {\n          Meteor.call(\"discounts/deleteRate\", id);\n          instance.state.set({\n            isEditing: false,\n            editingId: null\n          });\n        }\n      }\n    });\n  },\n  \"click .discount-codes-grid-row\": function (event) {\n    // toggle all rows off, then add our active row\n    $(\".discount-codes-grid-row\").removeClass(\"active\");\n    Template.instance().$(event.currentTarget).addClass(\"active\");\n  }\n});\n\n//\n// Hooks for update and insert forms\n//\nAutoForm.hooks({\n  \"discount-codes-update-form\": {\n    onSuccess: function () {\n      return Alerts.toast(i18next.t(\"admin.settings.settingsSaveSuccess\"),\n        \"success\");\n    },\n    onError: function (operation, error) {\n      return Alerts.toast(\n        `${i18next.t(\"admin.settings.settingsSaveFailure\")} ${error}`, \"error\"\n      );\n    }\n  },\n  \"discount-codes-insert-form\": {\n    onSuccess: function () {\n      return Alerts.toast(i18next.t(\"admin.settings.settingsSaveSuccess\"), \"success\");\n    },\n    onError: function (operation, error) {\n      return Alerts.toast(\n        `${i18next.t(\"admin.settings.settingsSaveFailure\")} ${error}`, \"error\"\n      );\n    }\n  }\n});\n"]},"hash":"a6d0db0310d99f93327c36bce6bf93705febf6ff"}
