{"metadata":{"usedHelpers":["typeof","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"/lib/collections","imported":["Media","Products","Revisions"],"specifiers":[{"kind":"named","imported":"Media","local":"Media"},{"kind":"named","imported":"Products","local":"Products"},{"kind":"named","imported":"Revisions","local":"Revisions"}]},{"source":"/server/api","imported":["Logger","Reaction"],"specifiers":[{"kind":"named","imported":"Logger","local":"Logger"},{"kind":"named","imported":"Reaction","local":"Reaction"}]},{"source":"/imports/plugins/core/revisions/lib/api/revisions","imported":["RevisionApi"],"specifiers":[{"kind":"named","imported":"RevisionApi","local":"RevisionApi"}]}],"exports":{"exported":["findProductMedia","publicationInstance","productIds"],"specifiers":[{"kind":"local","local":"findProductMedia","exported":"findProductMedia"},{"kind":"local","local":"publicationInstance","exported":"publicationInstance"},{"kind":"local","local":"productIds","exported":"productIds"}]}}},"options":{"filename":"/server/publications/collections/product.js","filenameRelative":"/server/publications/collections/product.js","inputSourceMap":{"version":3,"sources":["/server/publications/collections/product.js"],"names":["Media","Products","Revisions","Logger","Reaction","RevisionApi","findProductMedia","publicationInstance","productIds","shopId","getShopId","selector","ready","Array","isArray","$in","$nin","hasPermission","userId","find","sort","Meteor","publish","productId","check","Match","OptionalOrNull","String","debug","_id","shop","getCurrentShop","isVisible","isDeleted","Roles","userIsInRole","match","handle","$regex","$options","products","fetch","length","$or","ancestors","undefined","isRevisionControlEnabled","productCursor","map","p","observeChanges","added","id","fields","revisions","__revisions","changed","removed","handle2","observe","revision","product","parentDocument","findOne","documentId","onStop","stop","mediaCursor"],"mappings":"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","file":"/server/publications/collections/product.js.map","sourcesContent":["import { Media, Products, Revisions } from \"/lib/collections\";\nimport { Logger, Reaction } from \"/server/api\";\nimport { RevisionApi } from \"/imports/plugins/core/revisions/lib/api/revisions\";\n\nexport function findProductMedia(publicationInstance, productIds) {\n  const shopId = Reaction.getShopId();\n  const selector = {};\n\n  if (!shopId) {\n    return publicationInstance.ready();\n  }\n\n  if (Array.isArray(productIds)) {\n    selector[\"metadata.productId\"] = {\n      $in: productIds\n    };\n  } else {\n    selector[\"metadata.productId\"] = productIds;\n  }\n\n  if (shopId) {\n    selector[\"metadata.shopId\"] = shopId;\n  }\n\n  // No one needs to see archived images on products\n  selector[\"metadata.workflow\"] = {\n    $nin: [\"archived\"]\n  };\n\n  // Product editors can see both published and unpublished images\n  if (!Reaction.hasPermission([\"createProduct\"], publicationInstance.userId)) {\n    selector[\"metadata.workflow\"].$in = [null, \"published\"];\n  }\n\n  return Media.find(selector, {\n    sort: {\n      \"metadata.priority\": 1\n    }\n  });\n}\n\n\n/**\n * product detail publication\n * @param {String} productId - productId or handle\n * @return {Object} return product cursor\n */\nMeteor.publish(\"Product\", function (productId) {\n  check(productId, Match.OptionalOrNull(String));\n  if (!productId) {\n    Logger.debug(\"ignoring null request on Product subscription\");\n    return this.ready();\n  }\n  let _id;\n  const shop = Reaction.getCurrentShop();\n  // verify that shop is ready\n  if (typeof shop !== \"object\") {\n    return this.ready();\n  }\n\n  let selector = {};\n  selector.isVisible = true;\n  selector.isDeleted = { $in: [null, false] };\n\n  if (Roles.userIsInRole(this.userId, [\"owner\", \"admin\", \"createProduct\"],\n      shop._id)) {\n    selector.isVisible = {\n      $in: [true, false]\n    };\n  }\n  // TODO review for REGEX / DOS vulnerabilities.\n  if (productId.match(/^[23456789ABCDEFGHJKLMNPQRSTWXYZabcdefghijkmnopqrstuvwxyz]{17}$/)) {\n    selector._id = productId;\n    // TODO try/catch here because we can have product handle passed by such regex\n    _id = productId;\n  } else {\n    selector.handle = {\n      $regex: productId,\n      $options: \"i\"\n    };\n    const products = Products.find(selector).fetch();\n    if (products.length > 0) {\n      _id = products[0]._id;\n    } else {\n      return this.ready();\n    }\n  }\n\n  // Selector for hih?\n  selector = {\n    isVisible: true,\n    isDeleted: { $in: [null, false] },\n    $or: [\n      { handle: _id },\n      { _id: _id },\n      {\n        ancestors: {\n          $in: [_id]\n        }\n      }\n    ]\n  };\n\n  // Authorized content curators fo the shop get special publication of the product\n  // all all relevant revisions all is one package\n  if (Roles.userIsInRole(this.userId, [\"owner\", \"admin\", \"createProduct\"], shop._id)) {\n    selector.isVisible = {\n      $in: [true, false, undefined]\n    };\n\n    if (RevisionApi.isRevisionControlEnabled()) {\n      const productCursor = Products.find(selector);\n      const productIds = productCursor.map(p => p._id);\n\n      const handle = productCursor.observeChanges({\n        added: (id, fields) => {\n          const revisions = Revisions.find({\n            \"documentId\": id,\n            \"workflow.status\": {\n              $nin: [\n                \"revision/published\"\n              ]\n            }\n          }).fetch();\n          fields.__revisions = revisions;\n\n          this.added(\"Products\", id, fields);\n        },\n        changed: (id, fields) => {\n          const revisions = Revisions.find({\n            \"documentId\": id,\n            \"workflow.status\": {\n              $nin: [\n                \"revision/published\"\n              ]\n            }\n          }).fetch();\n\n          fields.__revisions = revisions;\n          this.changed(\"Products\", id, fields);\n        },\n        removed: (id) => {\n          this.removed(\"Products\", id);\n        }\n      });\n\n      const handle2 = Revisions.find({\n        \"workflow.status\": {\n          $nin: [\n            \"revision/published\"\n          ]\n        }\n      }).observe({\n        added: (revision) => {\n          let product;\n          if (!revision.parentDocument) {\n            product = Products.findOne(revision.documentId);\n          } else {\n            product = Products.findOne(revision.parentDocument);\n          }\n          if (product) {\n            this.added(\"Products\", product._id, product);\n            this.added(\"Revisions\", revision._id, revision);\n          }\n        },\n        changed: (revision) => {\n          let product;\n          if (!revision.parentDocument) {\n            product = Products.findOne(revision.documentId);\n          } else {\n            product = Products.findOne(revision.parentDocument);\n          }\n\n          if (product) {\n            product.__revisions = [revision];\n            this.changed(\"Products\", product._id, product);\n            this.changed(\"Revisions\", revision._id, revision);\n          }\n        },\n        removed: (revision) => {\n          let product;\n          if (!revision.parentDocument) {\n            product = Products.findOne(revision.documentId);\n          } else {\n            product = Products.findOne(revision.parentDocument);\n          }\n          if (product) {\n            product.__revisions = [];\n            this.changed(\"Products\", product._id, product);\n            this.removed(\"Revisions\", revision._id, revision);\n          }\n        }\n      });\n\n      this.onStop(() => {\n        handle.stop();\n        handle2.stop();\n      });\n\n      return [\n        findProductMedia(this, productIds)\n      ];\n    }\n\n    // Revision control is disabled, but is an admin\n    const productCursor = Products.find(selector);\n    const productIds = productCursor.map(p => p._id);\n    const mediaCursor = findProductMedia(this, productIds);\n\n    return [\n      productCursor,\n      mediaCursor\n    ];\n  }\n\n  // Everyone else gets the standard, visibile products and variants\n  const productCursor = Products.find(selector);\n  const productIds = productCursor.map(p => p._id);\n  const mediaCursor = findProductMedia(this, productIds);\n\n  return [\n    productCursor,\n    mediaCursor\n  ];\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/server/publications/collections/product.js.map","sourceFileName":"/server/publications/collections/product.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"product"},"ignored":false,"code":"var _typeof2 = require(\"babel-runtime/helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.export({\n  findProductMedia: function () {\n    return findProductMedia;\n  }\n});\nvar Media = void 0,\n    Products = void 0,\n    Revisions = void 0;\nmodule.importSync(\"/lib/collections\", {\n  Media: function (v) {\n    Media = v;\n  },\n  Products: function (v) {\n    Products = v;\n  },\n  Revisions: function (v) {\n    Revisions = v;\n  }\n}, 0);\nvar Logger = void 0,\n    Reaction = void 0;\nmodule.importSync(\"/server/api\", {\n  Logger: function (v) {\n    Logger = v;\n  },\n  Reaction: function (v) {\n    Reaction = v;\n  }\n}, 1);\nvar RevisionApi = void 0;\nmodule.importSync(\"/imports/plugins/core/revisions/lib/api/revisions\", {\n  RevisionApi: function (v) {\n    RevisionApi = v;\n  }\n}, 2);\n\nfunction findProductMedia(publicationInstance, productIds) {\n  var shopId = Reaction.getShopId();\n  var selector = {};\n\n  if (!shopId) {\n    return publicationInstance.ready();\n  }\n\n  if (Array.isArray(productIds)) {\n    selector[\"metadata.productId\"] = {\n      $in: productIds\n    };\n  } else {\n    selector[\"metadata.productId\"] = productIds;\n  }\n\n  if (shopId) {\n    selector[\"metadata.shopId\"] = shopId;\n  } // No one needs to see archived images on products\n\n\n  selector[\"metadata.workflow\"] = {\n    $nin: [\"archived\"]\n  }; // Product editors can see both published and unpublished images\n\n  if (!Reaction.hasPermission([\"createProduct\"], publicationInstance.userId)) {\n    selector[\"metadata.workflow\"].$in = [null, \"published\"];\n  }\n\n  return Media.find(selector, {\n    sort: {\n      \"metadata.priority\": 1\n    }\n  });\n}\n\n/**\n * product detail publication\n * @param {String} productId - productId or handle\n * @return {Object} return product cursor\n */Meteor.publish(\"Product\", function (productId) {\n  var _this = this;\n\n  check(productId, Match.OptionalOrNull(String));\n\n  if (!productId) {\n    Logger.debug(\"ignoring null request on Product subscription\");\n    return this.ready();\n  }\n\n  var _id = void 0;\n\n  var shop = Reaction.getCurrentShop(); // verify that shop is ready\n\n  if ((typeof shop === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(shop)) !== \"object\") {\n    return this.ready();\n  }\n\n  var selector = {};\n  selector.isVisible = true;\n  selector.isDeleted = {\n    $in: [null, false]\n  };\n\n  if (Roles.userIsInRole(this.userId, [\"owner\", \"admin\", \"createProduct\"], shop._id)) {\n    selector.isVisible = {\n      $in: [true, false]\n    };\n  } // TODO review for REGEX / DOS vulnerabilities.\n\n\n  if (productId.match(/^[23456789ABCDEFGHJKLMNPQRSTWXYZabcdefghijkmnopqrstuvwxyz]{17}$/)) {\n    selector._id = productId; // TODO try/catch here because we can have product handle passed by such regex\n\n    _id = productId;\n  } else {\n    selector.handle = {\n      $regex: productId,\n      $options: \"i\"\n    };\n    var products = Products.find(selector).fetch();\n\n    if (products.length > 0) {\n      _id = products[0]._id;\n    } else {\n      return this.ready();\n    }\n  } // Selector for hih?\n\n\n  selector = {\n    isVisible: true,\n    isDeleted: {\n      $in: [null, false]\n    },\n    $or: [{\n      handle: _id\n    }, {\n      _id: _id\n    }, {\n      ancestors: {\n        $in: [_id]\n      }\n    }]\n  }; // Authorized content curators fo the shop get special publication of the product\n  // all all relevant revisions all is one package\n\n  if (Roles.userIsInRole(this.userId, [\"owner\", \"admin\", \"createProduct\"], shop._id)) {\n    selector.isVisible = {\n      $in: [true, false, undefined]\n    };\n\n    if (RevisionApi.isRevisionControlEnabled()) {\n      var _productCursor2 = Products.find(selector);\n\n      var _productIds2 = _productCursor2.map(function (p) {\n        return p._id;\n      });\n\n      var handle = _productCursor2.observeChanges({\n        added: function (id, fields) {\n          var revisions = Revisions.find({\n            \"documentId\": id,\n            \"workflow.status\": {\n              $nin: [\"revision/published\"]\n            }\n          }).fetch();\n          fields.__revisions = revisions;\n\n          _this.added(\"Products\", id, fields);\n        },\n        changed: function (id, fields) {\n          var revisions = Revisions.find({\n            \"documentId\": id,\n            \"workflow.status\": {\n              $nin: [\"revision/published\"]\n            }\n          }).fetch();\n          fields.__revisions = revisions;\n\n          _this.changed(\"Products\", id, fields);\n        },\n        removed: function (id) {\n          _this.removed(\"Products\", id);\n        }\n      });\n\n      var handle2 = Revisions.find({\n        \"workflow.status\": {\n          $nin: [\"revision/published\"]\n        }\n      }).observe({\n        added: function (revision) {\n          var product = void 0;\n\n          if (!revision.parentDocument) {\n            product = Products.findOne(revision.documentId);\n          } else {\n            product = Products.findOne(revision.parentDocument);\n          }\n\n          if (product) {\n            _this.added(\"Products\", product._id, product);\n\n            _this.added(\"Revisions\", revision._id, revision);\n          }\n        },\n        changed: function (revision) {\n          var product = void 0;\n\n          if (!revision.parentDocument) {\n            product = Products.findOne(revision.documentId);\n          } else {\n            product = Products.findOne(revision.parentDocument);\n          }\n\n          if (product) {\n            product.__revisions = [revision];\n\n            _this.changed(\"Products\", product._id, product);\n\n            _this.changed(\"Revisions\", revision._id, revision);\n          }\n        },\n        removed: function (revision) {\n          var product = void 0;\n\n          if (!revision.parentDocument) {\n            product = Products.findOne(revision.documentId);\n          } else {\n            product = Products.findOne(revision.parentDocument);\n          }\n\n          if (product) {\n            product.__revisions = [];\n\n            _this.changed(\"Products\", product._id, product);\n\n            _this.removed(\"Revisions\", revision._id, revision);\n          }\n        }\n      });\n      this.onStop(function () {\n        handle.stop();\n        handle2.stop();\n      });\n      return [findProductMedia(this, _productIds2)];\n    } // Revision control is disabled, but is an admin\n\n\n    var _productCursor = Products.find(selector);\n\n    var _productIds = _productCursor.map(function (p) {\n      return p._id;\n    });\n\n    var _mediaCursor = findProductMedia(this, _productIds);\n\n    return [_productCursor, _mediaCursor];\n  } // Everyone else gets the standard, visibile products and variants\n\n\n  var productCursor = Products.find(selector);\n  var productIds = productCursor.map(function (p) {\n    return p._id;\n  });\n  var mediaCursor = findProductMedia(this, productIds);\n  return [productCursor, mediaCursor];\n});","map":{"version":3,"sources":["/server/publications/collections/product.js"],"names":["Media","Products","Revisions","Logger","Reaction","RevisionApi","findProductMedia","publicationInstance","productIds","shopId","getShopId","selector","ready","Array","isArray","$in","$nin","hasPermission","userId","find","sort","Meteor","publish","productId","check","Match","OptionalOrNull","String","debug","_id","shop","getCurrentShop","isVisible","isDeleted","Roles","userIsInRole","match","handle","$regex","$options","products","fetch","length","$or","ancestors","undefined","isRevisionControlEnabled","productCursor","map","p","observeChanges","added","id","fields","revisions","__revisions","changed","removed","handle2","observe","revision","product","parentDocument","findOne","documentId","onStop","stop","mediaCursor"],"mappings":"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","file":"/server/publications/collections/product.js.map","sourcesContent":["import { Media, Products, Revisions } from \"/lib/collections\";\nimport { Logger, Reaction } from \"/server/api\";\nimport { RevisionApi } from \"/imports/plugins/core/revisions/lib/api/revisions\";\n\nexport function findProductMedia(publicationInstance, productIds) {\n  const shopId = Reaction.getShopId();\n  const selector = {};\n\n  if (!shopId) {\n    return publicationInstance.ready();\n  }\n\n  if (Array.isArray(productIds)) {\n    selector[\"metadata.productId\"] = {\n      $in: productIds\n    };\n  } else {\n    selector[\"metadata.productId\"] = productIds;\n  }\n\n  if (shopId) {\n    selector[\"metadata.shopId\"] = shopId;\n  }\n\n  // No one needs to see archived images on products\n  selector[\"metadata.workflow\"] = {\n    $nin: [\"archived\"]\n  };\n\n  // Product editors can see both published and unpublished images\n  if (!Reaction.hasPermission([\"createProduct\"], publicationInstance.userId)) {\n    selector[\"metadata.workflow\"].$in = [null, \"published\"];\n  }\n\n  return Media.find(selector, {\n    sort: {\n      \"metadata.priority\": 1\n    }\n  });\n}\n\n\n/**\n * product detail publication\n * @param {String} productId - productId or handle\n * @return {Object} return product cursor\n */\nMeteor.publish(\"Product\", function (productId) {\n  check(productId, Match.OptionalOrNull(String));\n  if (!productId) {\n    Logger.debug(\"ignoring null request on Product subscription\");\n    return this.ready();\n  }\n  let _id;\n  const shop = Reaction.getCurrentShop();\n  // verify that shop is ready\n  if (typeof shop !== \"object\") {\n    return this.ready();\n  }\n\n  let selector = {};\n  selector.isVisible = true;\n  selector.isDeleted = { $in: [null, false] };\n\n  if (Roles.userIsInRole(this.userId, [\"owner\", \"admin\", \"createProduct\"],\n      shop._id)) {\n    selector.isVisible = {\n      $in: [true, false]\n    };\n  }\n  // TODO review for REGEX / DOS vulnerabilities.\n  if (productId.match(/^[23456789ABCDEFGHJKLMNPQRSTWXYZabcdefghijkmnopqrstuvwxyz]{17}$/)) {\n    selector._id = productId;\n    // TODO try/catch here because we can have product handle passed by such regex\n    _id = productId;\n  } else {\n    selector.handle = {\n      $regex: productId,\n      $options: \"i\"\n    };\n    const products = Products.find(selector).fetch();\n    if (products.length > 0) {\n      _id = products[0]._id;\n    } else {\n      return this.ready();\n    }\n  }\n\n  // Selector for hih?\n  selector = {\n    isVisible: true,\n    isDeleted: { $in: [null, false] },\n    $or: [\n      { handle: _id },\n      { _id: _id },\n      {\n        ancestors: {\n          $in: [_id]\n        }\n      }\n    ]\n  };\n\n  // Authorized content curators fo the shop get special publication of the product\n  // all all relevant revisions all is one package\n  if (Roles.userIsInRole(this.userId, [\"owner\", \"admin\", \"createProduct\"], shop._id)) {\n    selector.isVisible = {\n      $in: [true, false, undefined]\n    };\n\n    if (RevisionApi.isRevisionControlEnabled()) {\n      const productCursor = Products.find(selector);\n      const productIds = productCursor.map(p => p._id);\n\n      const handle = productCursor.observeChanges({\n        added: (id, fields) => {\n          const revisions = Revisions.find({\n            \"documentId\": id,\n            \"workflow.status\": {\n              $nin: [\n                \"revision/published\"\n              ]\n            }\n          }).fetch();\n          fields.__revisions = revisions;\n\n          this.added(\"Products\", id, fields);\n        },\n        changed: (id, fields) => {\n          const revisions = Revisions.find({\n            \"documentId\": id,\n            \"workflow.status\": {\n              $nin: [\n                \"revision/published\"\n              ]\n            }\n          }).fetch();\n\n          fields.__revisions = revisions;\n          this.changed(\"Products\", id, fields);\n        },\n        removed: (id) => {\n          this.removed(\"Products\", id);\n        }\n      });\n\n      const handle2 = Revisions.find({\n        \"workflow.status\": {\n          $nin: [\n            \"revision/published\"\n          ]\n        }\n      }).observe({\n        added: (revision) => {\n          let product;\n          if (!revision.parentDocument) {\n            product = Products.findOne(revision.documentId);\n          } else {\n            product = Products.findOne(revision.parentDocument);\n          }\n          if (product) {\n            this.added(\"Products\", product._id, product);\n            this.added(\"Revisions\", revision._id, revision);\n          }\n        },\n        changed: (revision) => {\n          let product;\n          if (!revision.parentDocument) {\n            product = Products.findOne(revision.documentId);\n          } else {\n            product = Products.findOne(revision.parentDocument);\n          }\n\n          if (product) {\n            product.__revisions = [revision];\n            this.changed(\"Products\", product._id, product);\n            this.changed(\"Revisions\", revision._id, revision);\n          }\n        },\n        removed: (revision) => {\n          let product;\n          if (!revision.parentDocument) {\n            product = Products.findOne(revision.documentId);\n          } else {\n            product = Products.findOne(revision.parentDocument);\n          }\n          if (product) {\n            product.__revisions = [];\n            this.changed(\"Products\", product._id, product);\n            this.removed(\"Revisions\", revision._id, revision);\n          }\n        }\n      });\n\n      this.onStop(() => {\n        handle.stop();\n        handle2.stop();\n      });\n\n      return [\n        findProductMedia(this, productIds)\n      ];\n    }\n\n    // Revision control is disabled, but is an admin\n    const productCursor = Products.find(selector);\n    const productIds = productCursor.map(p => p._id);\n    const mediaCursor = findProductMedia(this, productIds);\n\n    return [\n      productCursor,\n      mediaCursor\n    ];\n  }\n\n  // Everyone else gets the standard, visibile products and variants\n  const productCursor = Products.find(selector);\n  const productIds = productCursor.map(p => p._id);\n  const mediaCursor = findProductMedia(this, productIds);\n\n  return [\n    productCursor,\n    mediaCursor\n  ];\n});\n"]},"hash":"2bc8ad3de5a1ed00547dbd66f01a94e240f172f4"}
