{"metadata":{"usedHelpers":["typeof","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"lodash/get","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_get"}]},{"source":"lodash/uniq","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_uniq"}]},{"source":"lodash/each","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_each"}]},{"source":"/client/api","imported":["Reaction"],"specifiers":[{"kind":"named","imported":"Reaction","local":"Reaction"}]},{"source":"/lib/collections","imported":["Packages","Shops"],"specifiers":[{"kind":"named","imported":"Packages","local":"Packages"},{"kind":"named","imported":"Shops","local":"Shops"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/templating","imported":["Template"],"specifiers":[{"kind":"named","imported":"Template","local":"Template"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/client/modules/accounts/templates/members/member.js","filenameRelative":"/client/modules/accounts/templates/members/member.js","inputSourceMap":{"version":3,"sources":["/client/modules/accounts/templates/members/member.js"],"names":["Reaction","Packages","Shops","Meteor","Template","getPermissionMap","permissions","permissionMap","existing","permission","label","member","events","$","val","addClass","setActionViewDetail","i18nKeyLabel","data","template","memberSettings","helpers","isOwnerDisabled","userId","Roles","userIsInRole","shopId","hasPermissionChecked","GLOBAL_GROUP","groupsForUser","groupUserId","parentData","getGroupsForUser","shopLabel","thisShopId","currentData","shop","findOne","_id","name","permissionGroups","packages","find","forEach","pkg","registry","enabled","registryItem","route","push","icon","provides","replace","x","toUpperCase","hasManyPermissions","Boolean","length","showAvalaraTaxSettings","avalara","getShopId","event","self","Error","pkgPermissions","instance","currentTarget","is","call","$icon","confirm","results","role","roles"],"mappings":"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","file":"/client/modules/accounts/templates/members/member.js.map","sourcesContent":["import _ from \"lodash\";\nimport { Reaction } from \"/client/api\";\nimport { Packages, Shops } from \"/lib/collections\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Template } from \"meteor/templating\";\n\nconst getPermissionMap = (permissions) => {\n  const permissionMap = {};\n  _.each(permissions, function (existing) {\n    permissionMap[existing.permission] = existing.label;\n  });\n  return permissionMap;\n};\n\n/**\n * shopMember helpers\n * permissions / roles controls\n * we use userInRole instead of Reaction intentionally\n * to check each users permissions\n */\nTemplate.member.events({\n  \"click [data-event-action=showMemberSettings]\": function () {\n    $(\".customerUsageType input\").val(\"\"); // form reset\n    $(\".customerUsageType\").addClass(\"hide\"); // form reset\n    Reaction.setActionViewDetail({\n      label: \"Permissions\",\n      i18nKeyLabel: \"admin.settings.permissionsSettingsLabel\",\n      data: this,\n      template: \"memberSettings\"\n    });\n  }\n});\n\nTemplate.memberSettings.helpers({\n  isOwnerDisabled: function () {\n    if (Meteor.userId() === this.userId) {\n      if (Roles.userIsInRole(this.userId, \"owner\", this.shopId)) {\n        return true;\n      }\n    }\n  },\n  userId: function () {\n    return Meteor.userId();\n  },\n  hasPermissionChecked: function (permission, userId) {\n    if (userId && Roles.userIsInRole(userId, permission, this.shopId || Roles.userIsInRole(userId, permission,\n        Roles.GLOBAL_GROUP))) {\n      return \"checked\";\n    }\n  },\n  groupsForUser: function (groupUserId) {\n    const userId = groupUserId || this.userId || Template.parentData(1).userId;\n    return Roles.getGroupsForUser(userId);\n  },\n  shopLabel: function (thisShopId) {\n    const shopId = thisShopId || Template.currentData();\n    const shop = Shops.findOne({\n      _id: shopId\n    });\n    if (shop && shop.name) {\n      return shop.name || \"Default Shop\";\n    }\n  },\n  permissionGroups: function (thisShopId) {\n    const permissionGroups = [];\n    const shopId = thisShopId || Template.currentData();\n    const packages = Packages.find({\n      shopId: shopId\n    });\n\n    packages.forEach(function (pkg) {\n      const permissions = [];\n      if (pkg.registry && pkg.enabled) {\n        for (const registryItem of pkg.registry) {\n          // Skip entires with missing routes\n          if (!registryItem.route) {\n            continue;\n          }\n\n          // Get all permissions, add them to an array\n          if (registryItem.permissions) {\n            for (const permission of registryItem.permissions) {\n              // check needed because of non-object perms in the permissions array (e.g \"admin\", \"owner\")\n              if (typeof permission === \"object\") {\n                permission.shopId = shopId;\n                permissions.push(permission);\n              }\n            }\n          }\n\n          // Also create an object map of those same permissions as above\n          const permissionMap = getPermissionMap(permissions);\n          if (!permissionMap[registryItem.route]) {\n            permissions.push({\n              shopId: pkg.shopId,\n              permission: registryItem.name || pkg.name + \"/\" + registryItem.template, // launchdock-connect/connectDashboard\n              icon: registryItem.icon,\n              label: registryItem.label || registryItem.provides || registryItem.route\n            });\n          }\n        }\n        // TODO review this, hardcoded WIP\n        const label = pkg.name.replace(\"reaction\", \"\").replace(/(-.)/g, function (x) {\n          return \" \" + x[1].toUpperCase();\n        });\n\n        return permissionGroups.push({\n          shopId: pkg.shopId,\n          icon: pkg.icon,\n          name: pkg.name,\n          label: label,\n          permissions: _.uniq(permissions)\n        });\n      }\n    });\n\n    return permissionGroups;\n  },\n\n  hasManyPermissions: function (permissions) {\n    return Boolean(permissions.length);\n  },\n  /**\n   * showAvalaraTaxSettings\n   * @return {Boolean} True if avalara is enabled. Defaults to false if not found\n   */\n  showAvalaraTaxSettings() {\n    const avalara = Packages.findOne({\n      name: \"taxes-avalara\",\n      shopId: Reaction.getShopId()\n    });\n\n    return _.get(avalara, \"settings.avalara.enabled\", false);\n  }\n});\n\n/**\n * shopMember events\n *\n */\nTemplate.memberSettings.events({\n  \"change [data-event-action=toggleMemberPermission]\": function (event, template) {\n    const self = this;\n    const permissions = [];\n    const member = template.data;\n    if (!this.shopId) {\n      throw new Meteor.Error(\"Shop is required\");\n    }\n    if (self.name) {\n      permissions.push(self.name);\n      for (const pkgPermissions of self.permissions) {\n        permissions.push(pkgPermissions.permission);\n      }\n    } else {\n      permissions.push(self.permission);\n    }\n    if (Template.instance().$(event.currentTarget).is(\":checked\")) {\n      Meteor.call(\"accounts/addUserPermissions\", member.userId, permissions, this.shopId);\n    } else {\n      Meteor.call(\"accounts/removeUserPermissions\", member.userId, permissions, this.shopId);\n    }\n  },\n  \"click [data-event-action=resetMemberPermission]\": function (event, template) {\n    const $icon = Template.instance().$(event.currentTarget);\n    if (confirm($icon.data(\"confirm\"))) { // eslint-disable-line no-alert\n      const results = [];\n      for (const role of template.data.roles) {\n        results.push(Meteor.call(\"accounts/setUserPermissions\", this.userId, [\"guest\", \"account/profile\"], role));\n      }\n      return results;\n    }\n  }\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/modules/accounts/templates/members/member.js.map","sourceFileName":"/client/modules/accounts/templates/members/member.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"member"},"ignored":false,"code":"var _typeof2 = require(\"babel-runtime/helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _get = void 0;\n\nmodule.importSync(\"lodash/get\", {\n  \"default\": function (v) {\n    _get = v;\n  }\n}, 0);\n\nvar _uniq = void 0;\n\nmodule.importSync(\"lodash/uniq\", {\n  \"default\": function (v) {\n    _uniq = v;\n  }\n}, 1);\n\nvar _each = void 0;\n\nmodule.importSync(\"lodash/each\", {\n  \"default\": function (v) {\n    _each = v;\n  }\n}, 2);\nvar Reaction = void 0;\nmodule.importSync(\"/client/api\", {\n  Reaction: function (v) {\n    Reaction = v;\n  }\n}, 3);\nvar Packages = void 0,\n    Shops = void 0;\nmodule.importSync(\"/lib/collections\", {\n  Packages: function (v) {\n    Packages = v;\n  },\n  Shops: function (v) {\n    Shops = v;\n  }\n}, 4);\nvar Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 5);\nvar Template = void 0;\nmodule.importSync(\"meteor/templating\", {\n  Template: function (v) {\n    Template = v;\n  }\n}, 6);\n\nvar getPermissionMap = function (permissions) {\n  var permissionMap = {};\n\n  _each(permissions, function (existing) {\n    permissionMap[existing.permission] = existing.label;\n  });\n\n  return permissionMap;\n}; /**\n    * shopMember helpers\n    * permissions / roles controls\n    * we use userInRole instead of Reaction intentionally\n    * to check each users permissions\n    */\n\nTemplate.member.events({\n  \"click [data-event-action=showMemberSettings]\": function () {\n    $(\".customerUsageType input\").val(\"\"); // form reset\n\n    $(\".customerUsageType\").addClass(\"hide\"); // form reset\n\n    Reaction.setActionViewDetail({\n      label: \"Permissions\",\n      i18nKeyLabel: \"admin.settings.permissionsSettingsLabel\",\n      data: this,\n      template: \"memberSettings\"\n    });\n  }\n});\nTemplate.memberSettings.helpers({\n  isOwnerDisabled: function () {\n    if (Meteor.userId() === this.userId) {\n      if (Roles.userIsInRole(this.userId, \"owner\", this.shopId)) {\n        return true;\n      }\n    }\n  },\n  userId: function () {\n    return Meteor.userId();\n  },\n  hasPermissionChecked: function (permission, userId) {\n    if (userId && Roles.userIsInRole(userId, permission, this.shopId || Roles.userIsInRole(userId, permission, Roles.GLOBAL_GROUP))) {\n      return \"checked\";\n    }\n  },\n  groupsForUser: function (groupUserId) {\n    var userId = groupUserId || this.userId || Template.parentData(1).userId;\n    return Roles.getGroupsForUser(userId);\n  },\n  shopLabel: function (thisShopId) {\n    var shopId = thisShopId || Template.currentData();\n    var shop = Shops.findOne({\n      _id: shopId\n    });\n\n    if (shop && shop.name) {\n      return shop.name || \"Default Shop\";\n    }\n  },\n  permissionGroups: function (thisShopId) {\n    var permissionGroups = [];\n    var shopId = thisShopId || Template.currentData();\n    var packages = Packages.find({\n      shopId: shopId\n    });\n    packages.forEach(function (pkg) {\n      var permissions = [];\n\n      if (pkg.registry && pkg.enabled) {\n        for (var _iterator = pkg.registry, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n          var _ref;\n\n          if (_isArray) {\n            if (_i >= _iterator.length) break;\n            _ref = _iterator[_i++];\n          } else {\n            _i = _iterator.next();\n            if (_i.done) break;\n            _ref = _i.value;\n          }\n\n          var registryItem = _ref;\n\n          // Skip entires with missing routes\n          if (!registryItem.route) {\n            continue;\n          } // Get all permissions, add them to an array\n\n\n          if (registryItem.permissions) {\n            for (var _iterator2 = registryItem.permissions, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n              var _ref2;\n\n              if (_isArray2) {\n                if (_i2 >= _iterator2.length) break;\n                _ref2 = _iterator2[_i2++];\n              } else {\n                _i2 = _iterator2.next();\n                if (_i2.done) break;\n                _ref2 = _i2.value;\n              }\n\n              var permission = _ref2;\n\n              // check needed because of non-object perms in the permissions array (e.g \"admin\", \"owner\")\n              if ((typeof permission === \"undefined\" ? \"undefined\" : (0, _typeof3.default)(permission)) === \"object\") {\n                permission.shopId = shopId;\n                permissions.push(permission);\n              }\n            }\n          } // Also create an object map of those same permissions as above\n\n\n          var permissionMap = getPermissionMap(permissions);\n\n          if (!permissionMap[registryItem.route]) {\n            permissions.push({\n              shopId: pkg.shopId,\n              permission: registryItem.name || pkg.name + \"/\" + registryItem.template,\n              // launchdock-connect/connectDashboard\n              icon: registryItem.icon,\n              label: registryItem.label || registryItem.provides || registryItem.route\n            });\n          }\n        } // TODO review this, hardcoded WIP\n\n\n        var label = pkg.name.replace(\"reaction\", \"\").replace(/(-.)/g, function (x) {\n          return \" \" + x[1].toUpperCase();\n        });\n        return permissionGroups.push({\n          shopId: pkg.shopId,\n          icon: pkg.icon,\n          name: pkg.name,\n          label: label,\n          permissions: _uniq(permissions)\n        });\n      }\n    });\n    return permissionGroups;\n  },\n  hasManyPermissions: function (permissions) {\n    return Boolean(permissions.length);\n  },\n  /**\n   * showAvalaraTaxSettings\n   * @return {Boolean} True if avalara is enabled. Defaults to false if not found\n   */showAvalaraTaxSettings: function () {\n    var avalara = Packages.findOne({\n      name: \"taxes-avalara\",\n      shopId: Reaction.getShopId()\n    });\n    return _get(avalara, \"settings.avalara.enabled\", false);\n  }\n}); /**\n     * shopMember events\n     *\n     */\nTemplate.memberSettings.events({\n  \"change [data-event-action=toggleMemberPermission]\": function (event, template) {\n    var self = this;\n    var permissions = [];\n    var member = template.data;\n\n    if (!this.shopId) {\n      throw new Meteor.Error(\"Shop is required\");\n    }\n\n    if (self.name) {\n      permissions.push(self.name);\n\n      for (var _iterator3 = self.permissions, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n        var _ref3;\n\n        if (_isArray3) {\n          if (_i3 >= _iterator3.length) break;\n          _ref3 = _iterator3[_i3++];\n        } else {\n          _i3 = _iterator3.next();\n          if (_i3.done) break;\n          _ref3 = _i3.value;\n        }\n\n        var pkgPermissions = _ref3;\n        permissions.push(pkgPermissions.permission);\n      }\n    } else {\n      permissions.push(self.permission);\n    }\n\n    if (Template.instance().$(event.currentTarget).is(\":checked\")) {\n      Meteor.call(\"accounts/addUserPermissions\", member.userId, permissions, this.shopId);\n    } else {\n      Meteor.call(\"accounts/removeUserPermissions\", member.userId, permissions, this.shopId);\n    }\n  },\n  \"click [data-event-action=resetMemberPermission]\": function (event, template) {\n    var $icon = Template.instance().$(event.currentTarget);\n\n    if (confirm($icon.data(\"confirm\"))) {\n      // eslint-disable-line no-alert\n      var results = [];\n\n      for (var _iterator4 = template.data.roles, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {\n        var _ref4;\n\n        if (_isArray4) {\n          if (_i4 >= _iterator4.length) break;\n          _ref4 = _iterator4[_i4++];\n        } else {\n          _i4 = _iterator4.next();\n          if (_i4.done) break;\n          _ref4 = _i4.value;\n        }\n\n        var role = _ref4;\n        results.push(Meteor.call(\"accounts/setUserPermissions\", this.userId, [\"guest\", \"account/profile\"], role));\n      }\n\n      return results;\n    }\n  }\n});","map":{"version":3,"sources":["/client/modules/accounts/templates/members/member.js"],"names":["Reaction","Packages","Shops","Meteor","Template","getPermissionMap","permissions","permissionMap","existing","permission","label","member","events","$","val","addClass","setActionViewDetail","i18nKeyLabel","data","template","memberSettings","helpers","isOwnerDisabled","userId","Roles","userIsInRole","shopId","hasPermissionChecked","GLOBAL_GROUP","groupsForUser","groupUserId","parentData","getGroupsForUser","shopLabel","thisShopId","currentData","shop","findOne","_id","name","permissionGroups","packages","find","forEach","pkg","registry","enabled","registryItem","route","push","icon","provides","replace","x","toUpperCase","hasManyPermissions","Boolean","length","showAvalaraTaxSettings","avalara","getShopId","event","self","Error","pkgPermissions","instance","currentTarget","is","call","$icon","confirm","results","role","roles"],"mappings":"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","file":"/client/modules/accounts/templates/members/member.js.map","sourcesContent":["import _ from \"lodash\";\nimport { Reaction } from \"/client/api\";\nimport { Packages, Shops } from \"/lib/collections\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Template } from \"meteor/templating\";\n\nconst getPermissionMap = (permissions) => {\n  const permissionMap = {};\n  _.each(permissions, function (existing) {\n    permissionMap[existing.permission] = existing.label;\n  });\n  return permissionMap;\n};\n\n/**\n * shopMember helpers\n * permissions / roles controls\n * we use userInRole instead of Reaction intentionally\n * to check each users permissions\n */\nTemplate.member.events({\n  \"click [data-event-action=showMemberSettings]\": function () {\n    $(\".customerUsageType input\").val(\"\"); // form reset\n    $(\".customerUsageType\").addClass(\"hide\"); // form reset\n    Reaction.setActionViewDetail({\n      label: \"Permissions\",\n      i18nKeyLabel: \"admin.settings.permissionsSettingsLabel\",\n      data: this,\n      template: \"memberSettings\"\n    });\n  }\n});\n\nTemplate.memberSettings.helpers({\n  isOwnerDisabled: function () {\n    if (Meteor.userId() === this.userId) {\n      if (Roles.userIsInRole(this.userId, \"owner\", this.shopId)) {\n        return true;\n      }\n    }\n  },\n  userId: function () {\n    return Meteor.userId();\n  },\n  hasPermissionChecked: function (permission, userId) {\n    if (userId && Roles.userIsInRole(userId, permission, this.shopId || Roles.userIsInRole(userId, permission,\n        Roles.GLOBAL_GROUP))) {\n      return \"checked\";\n    }\n  },\n  groupsForUser: function (groupUserId) {\n    const userId = groupUserId || this.userId || Template.parentData(1).userId;\n    return Roles.getGroupsForUser(userId);\n  },\n  shopLabel: function (thisShopId) {\n    const shopId = thisShopId || Template.currentData();\n    const shop = Shops.findOne({\n      _id: shopId\n    });\n    if (shop && shop.name) {\n      return shop.name || \"Default Shop\";\n    }\n  },\n  permissionGroups: function (thisShopId) {\n    const permissionGroups = [];\n    const shopId = thisShopId || Template.currentData();\n    const packages = Packages.find({\n      shopId: shopId\n    });\n\n    packages.forEach(function (pkg) {\n      const permissions = [];\n      if (pkg.registry && pkg.enabled) {\n        for (const registryItem of pkg.registry) {\n          // Skip entires with missing routes\n          if (!registryItem.route) {\n            continue;\n          }\n\n          // Get all permissions, add them to an array\n          if (registryItem.permissions) {\n            for (const permission of registryItem.permissions) {\n              // check needed because of non-object perms in the permissions array (e.g \"admin\", \"owner\")\n              if (typeof permission === \"object\") {\n                permission.shopId = shopId;\n                permissions.push(permission);\n              }\n            }\n          }\n\n          // Also create an object map of those same permissions as above\n          const permissionMap = getPermissionMap(permissions);\n          if (!permissionMap[registryItem.route]) {\n            permissions.push({\n              shopId: pkg.shopId,\n              permission: registryItem.name || pkg.name + \"/\" + registryItem.template, // launchdock-connect/connectDashboard\n              icon: registryItem.icon,\n              label: registryItem.label || registryItem.provides || registryItem.route\n            });\n          }\n        }\n        // TODO review this, hardcoded WIP\n        const label = pkg.name.replace(\"reaction\", \"\").replace(/(-.)/g, function (x) {\n          return \" \" + x[1].toUpperCase();\n        });\n\n        return permissionGroups.push({\n          shopId: pkg.shopId,\n          icon: pkg.icon,\n          name: pkg.name,\n          label: label,\n          permissions: _.uniq(permissions)\n        });\n      }\n    });\n\n    return permissionGroups;\n  },\n\n  hasManyPermissions: function (permissions) {\n    return Boolean(permissions.length);\n  },\n  /**\n   * showAvalaraTaxSettings\n   * @return {Boolean} True if avalara is enabled. Defaults to false if not found\n   */\n  showAvalaraTaxSettings() {\n    const avalara = Packages.findOne({\n      name: \"taxes-avalara\",\n      shopId: Reaction.getShopId()\n    });\n\n    return _.get(avalara, \"settings.avalara.enabled\", false);\n  }\n});\n\n/**\n * shopMember events\n *\n */\nTemplate.memberSettings.events({\n  \"change [data-event-action=toggleMemberPermission]\": function (event, template) {\n    const self = this;\n    const permissions = [];\n    const member = template.data;\n    if (!this.shopId) {\n      throw new Meteor.Error(\"Shop is required\");\n    }\n    if (self.name) {\n      permissions.push(self.name);\n      for (const pkgPermissions of self.permissions) {\n        permissions.push(pkgPermissions.permission);\n      }\n    } else {\n      permissions.push(self.permission);\n    }\n    if (Template.instance().$(event.currentTarget).is(\":checked\")) {\n      Meteor.call(\"accounts/addUserPermissions\", member.userId, permissions, this.shopId);\n    } else {\n      Meteor.call(\"accounts/removeUserPermissions\", member.userId, permissions, this.shopId);\n    }\n  },\n  \"click [data-event-action=resetMemberPermission]\": function (event, template) {\n    const $icon = Template.instance().$(event.currentTarget);\n    if (confirm($icon.data(\"confirm\"))) { // eslint-disable-line no-alert\n      const results = [];\n      for (const role of template.data.roles) {\n        results.push(Meteor.call(\"accounts/setUserPermissions\", this.userId, [\"guest\", \"account/profile\"], role));\n      }\n      return results;\n    }\n  }\n});\n"]},"hash":"22d67ca2cc575cc76f8119247ccf7ce7c862ac32"}
