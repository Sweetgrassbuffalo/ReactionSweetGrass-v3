{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/core/ui/client/components/sortable/sortable.jsx","filenameRelative":"/imports/plugins/core/ui/client/components/sortable/sortable.jsx","inputSourceMap":{"version":3,"sources":["/imports/plugins/core/ui/client/components/sortable/sortable.jsx"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/imports/plugins/core/ui/client/components/sortable/sortable.jsx.map","sourcesContent":["// import React from \"react\";\n//\n// const classnames = ReactionUI.Lib.classnames;\n// const Item = ReactionUI.Components.Item;\n// const ReactSortableMixin = ReactionUI.Lib.ReactSortableMixin;\n// const Sortable = ReactionUI.Lib.Sortable;\n// const ReactDOM = ReactionUI.Lib.ReactDOM;\n//\n// ReactionUI.Components.SortableItems = React.createClass({\n//   displayName: \"Sortable Items\",\n//   mixins: [ReactSortableMixin],\n//\n//   getInitialState: function() {\n//       return {\n//           items: []\n//       };\n//   },\n//\n//\n//\n//   componentDidMount() {\n//     // const list = ReactDOM.findDOMNode(this.refs.list)\n//\n//     // this.sortable = Sortable.create(list)\n//   },\n//\n//   componentWillReceiveProps(props) {\n//     this.setState({\n//       items: props.children\n//     });\n//   },\n//\n//   sortableOptions: {\n//     model: \"items\"\n//   },\n//\n//   handleSort(event) {\n//     console.log(event);\n//     console.log(this.state.items);\n//\n//     if (this.props.onSort) {\n//       this.props.onSort(this.state.items);\n//     }\n//   },\n//\n//   // render: function() {\n//   //     return <ul ref=\"list\">{\n//   //         this.state.items.map(function (text) {\n//   //             return <li className=\"item\">{text}</li>\n//   //         })\n//   //     }</ul>\n//   // }\n//\n//\n//   // sortableOptions: {\n//   //   handle: \".handle\",\n//   //   draggable: \".item\"\n//   // },\n//   //\n//   // handleSort(event) {\n//   //\n//   // },\n//\n//   renderItems() {\n//     if (this.state.items) {\n//       const items = React.Children.map(this.state.items, (child, index) => {\n//         // if (this.props.autoWrap) {\n//         //   return (\n//         //     <Item key={index} sortable={this.props.sortable}>\n//         //       {React.cloneElement(child)}\n//         //     </Item>\n//         //   );\n//         // }\n//\n//         return React.cloneElement(child);\n//       });\n//\n//       return items;\n//     }\n//   },\n//\n//   render() {\n//     const classes = classnames({\n//       rui: true,\n//       items: true,\n//       sortable: true,\n//\n//       flex: this.props.static === false,\n//       [`${this.props.direction}`]: true\n//     });\n//\n//     return (\n//       <div className={classes}>\n//         {this.renderItems()}\n//       </div>\n//     );\n//   }\n// });\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/core/ui/client/components/sortable/sortable.jsx.map","sourceFileName":"/imports/plugins/core/ui/client/components/sortable/sortable.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"sortable"},"ignored":false,"code":"// import React from \"react\";\n//\n// const classnames = ReactionUI.Lib.classnames;\n// const Item = ReactionUI.Components.Item;\n// const ReactSortableMixin = ReactionUI.Lib.ReactSortableMixin;\n// const Sortable = ReactionUI.Lib.Sortable;\n// const ReactDOM = ReactionUI.Lib.ReactDOM;\n//\n// ReactionUI.Components.SortableItems = React.createClass({\n//   displayName: \"Sortable Items\",\n//   mixins: [ReactSortableMixin],\n//\n//   getInitialState: function() {\n//       return {\n//           items: []\n//       };\n//   },\n//\n//\n//\n//   componentDidMount() {\n//     // const list = ReactDOM.findDOMNode(this.refs.list)\n//\n//     // this.sortable = Sortable.create(list)\n//   },\n//\n//   componentWillReceiveProps(props) {\n//     this.setState({\n//       items: props.children\n//     });\n//   },\n//\n//   sortableOptions: {\n//     model: \"items\"\n//   },\n//\n//   handleSort(event) {\n//     console.log(event);\n//     console.log(this.state.items);\n//\n//     if (this.props.onSort) {\n//       this.props.onSort(this.state.items);\n//     }\n//   },\n//\n//   // render: function() {\n//   //     return <ul ref=\"list\">{\n//   //         this.state.items.map(function (text) {\n//   //             return <li className=\"item\">{text}</li>\n//   //         })\n//   //     }</ul>\n//   // }\n//\n//\n//   // sortableOptions: {\n//   //   handle: \".handle\",\n//   //   draggable: \".item\"\n//   // },\n//   //\n//   // handleSort(event) {\n//   //\n//   // },\n//\n//   renderItems() {\n//     if (this.state.items) {\n//       const items = React.Children.map(this.state.items, (child, index) => {\n//         // if (this.props.autoWrap) {\n//         //   return (\n//         //     <Item key={index} sortable={this.props.sortable}>\n//         //       {React.cloneElement(child)}\n//         //     </Item>\n//         //   );\n//         // }\n//\n//         return React.cloneElement(child);\n//       });\n//\n//       return items;\n//     }\n//   },\n//\n//   render() {\n//     const classes = classnames({\n//       rui: true,\n//       items: true,\n//       sortable: true,\n//\n//       flex: this.props.static === false,\n//       [`${this.props.direction}`]: true\n//     });\n//\n//     return (\n//       <div className={classes}>\n//         {this.renderItems()}\n//       </div>\n//     );\n//   }\n// });","map":{"version":3,"sources":["/imports/plugins/core/ui/client/components/sortable/sortable.jsx"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/imports/plugins/core/ui/client/components/sortable/sortable.jsx.map","sourcesContent":["// import React from \"react\";\n//\n// const classnames = ReactionUI.Lib.classnames;\n// const Item = ReactionUI.Components.Item;\n// const ReactSortableMixin = ReactionUI.Lib.ReactSortableMixin;\n// const Sortable = ReactionUI.Lib.Sortable;\n// const ReactDOM = ReactionUI.Lib.ReactDOM;\n//\n// ReactionUI.Components.SortableItems = React.createClass({\n//   displayName: \"Sortable Items\",\n//   mixins: [ReactSortableMixin],\n//\n//   getInitialState: function() {\n//       return {\n//           items: []\n//       };\n//   },\n//\n//\n//\n//   componentDidMount() {\n//     // const list = ReactDOM.findDOMNode(this.refs.list)\n//\n//     // this.sortable = Sortable.create(list)\n//   },\n//\n//   componentWillReceiveProps(props) {\n//     this.setState({\n//       items: props.children\n//     });\n//   },\n//\n//   sortableOptions: {\n//     model: \"items\"\n//   },\n//\n//   handleSort(event) {\n//     console.log(event);\n//     console.log(this.state.items);\n//\n//     if (this.props.onSort) {\n//       this.props.onSort(this.state.items);\n//     }\n//   },\n//\n//   // render: function() {\n//   //     return <ul ref=\"list\">{\n//   //         this.state.items.map(function (text) {\n//   //             return <li className=\"item\">{text}</li>\n//   //         })\n//   //     }</ul>\n//   // }\n//\n//\n//   // sortableOptions: {\n//   //   handle: \".handle\",\n//   //   draggable: \".item\"\n//   // },\n//   //\n//   // handleSort(event) {\n//   //\n//   // },\n//\n//   renderItems() {\n//     if (this.state.items) {\n//       const items = React.Children.map(this.state.items, (child, index) => {\n//         // if (this.props.autoWrap) {\n//         //   return (\n//         //     <Item key={index} sortable={this.props.sortable}>\n//         //       {React.cloneElement(child)}\n//         //     </Item>\n//         //   );\n//         // }\n//\n//         return React.cloneElement(child);\n//       });\n//\n//       return items;\n//     }\n//   },\n//\n//   render() {\n//     const classes = classnames({\n//       rui: true,\n//       items: true,\n//       sortable: true,\n//\n//       flex: this.props.static === false,\n//       [`${this.props.direction}`]: true\n//     });\n//\n//     return (\n//       <div className={classes}>\n//         {this.renderItems()}\n//       </div>\n//     );\n//   }\n// });\n"]},"hash":"e9a7f51978a91c4c8e76348c58a9297cf4be57f5"}
