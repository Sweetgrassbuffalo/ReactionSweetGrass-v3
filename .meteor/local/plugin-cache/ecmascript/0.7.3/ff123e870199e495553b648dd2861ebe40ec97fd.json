{"metadata":{"usedHelpers":["objectDestructuringEmpty","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react-simple-di","imported":["useDeps"],"specifiers":[{"kind":"named","imported":"useDeps","local":"useDeps"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"/client/api","imported":["Reaction"],"specifiers":[{"kind":"named","imported":"Reaction","local":"Reaction"}]},{"source":"/imports/plugins/core/ui/client/components","imported":["Loading"],"specifiers":[{"kind":"named","imported":"Loading","local":"Loading"}]},{"source":"../actions","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"actions"}]},{"source":"../components/emailSettings","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"EmailSettings"}]},{"source":"/lib/api/compose","imported":["composeWithTracker","merge"],"specifiers":[{"kind":"named","imported":"composeWithTracker","local":"composeWithTracker"},{"kind":"named","imported":"merge","local":"merge"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/core/email/client/containers/emailSettings.js","filenameRelative":"/imports/plugins/core/email/client/containers/emailSettings.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/core/email/client/containers/emailSettings.js"],"names":["useDeps","Meteor","Reaction","Loading","actions","EmailSettings","composeWithTracker","merge","providers","Object","keys","require","composer","onData","subscribe","ready","settings","getShopSettings","mail","service","host","port","user","password","depsMapper","saveSettings"],"mappings":";;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GACA,AAAS,AAAc,AACvB,AAAS,AAAgB,AACzB,AAAS,AAAe,AACxB,AAAO,AAAa,AACpB,AAAO,AAAmB,AAC1B,AAAS,AAAoB,AAAa,AAE1C,AAAM,AAAY,AAAO,AAAK,AAAQ;oCAEtC,AAAM,AAAW,AAAC,AAAI,AAAW;;AAC/B,IAAI,AAAO,2BAAP,AAAiB;AAArB,AAAI,AAA6B,AAAS,AACxC;;MAAM,OAAW,UAAS;QAEpB,8CAAA,AAAE,AAAS;AAFjB,AAAiB,AAA2B,AAAQ,AAEpD;eAAM,AAAiB,AAAM;;;;;QAAvB,8CAA6B;yBAA7B;AAAN,AAAgD,AAEhD;;AAAI,WAAQ;AAAR,AAAgB;AAApB,AAAI,AAAwB,AAAY,AAAC,AAAS,AAChD;;AAAA,AAAS,AAAU,AACpB;;;AAED,IAAA,AAAO,AAAM;;AAAA,mCAAb,AAAa,AAAa,AAC3B;AADgB;;;OApBV,OAAT,WAAwB,QAAxB,UAUA,AAYC,qDAED,aAAA,AAAM,AAAa,AAAO,AACxB,AAAc,AAAQ,AAAS,AAGjC,AAAe,AACb,AAAmB,AAAU,AAC7B,AAAQ,AACR","file":"/imports/plugins/core/email/client/containers/emailSettings.js.map","sourcesContent":["import { useDeps } from \"react-simple-di\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Reaction } from \"/client/api\";\nimport { Loading } from \"/imports/plugins/core/ui/client/components\";\nimport actions from \"../actions\";\nimport EmailSettings from \"../components/emailSettings\";\nimport { composeWithTracker, merge } from \"/lib/api/compose\";\n\nconst providers = Object.keys(require(\"nodemailer-wellknown/services.json\"));\n\nconst composer = ({}, onData) => {\n  if (Meteor.subscribe(\"Packages\").ready()) {\n    const settings = Reaction.getShopSettings().mail || {};\n\n    const { service, host, port, user, password } = settings;\n\n    if (host && port && user && password && !service) {\n      settings.service = \"custom\";\n    }\n\n    onData(null, { providers, settings });\n  }\n};\n\nconst depsMapper = () => ({\n  saveSettings: actions.settings.saveSettings\n});\n\nexport default merge(\n  composeWithTracker(composer, Loading),\n  useDeps(depsMapper)\n)(EmailSettings);\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/core/email/client/containers/emailSettings.js.map","sourceFileName":"/imports/plugins/core/email/client/containers/emailSettings.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"emailSettings"},"ignored":false,"code":"var _objectDestructuringEmpty2 = require(\"babel-runtime/helpers/objectDestructuringEmpty\");\n\nvar _objectDestructuringEmpty3 = _interopRequireDefault(_objectDestructuringEmpty2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar useDeps = void 0;\nmodule.importSync(\"react-simple-di\", {\n  useDeps: function (v) {\n    useDeps = v;\n  }\n}, 0);\nvar Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\nvar Reaction = void 0;\nmodule.importSync(\"/client/api\", {\n  Reaction: function (v) {\n    Reaction = v;\n  }\n}, 2);\nvar Loading = void 0;\nmodule.importSync(\"/imports/plugins/core/ui/client/components\", {\n  Loading: function (v) {\n    Loading = v;\n  }\n}, 3);\nvar actions = void 0;\nmodule.importSync(\"../actions\", {\n  \"default\": function (v) {\n    actions = v;\n  }\n}, 4);\nvar EmailSettings = void 0;\nmodule.importSync(\"../components/emailSettings\", {\n  \"default\": function (v) {\n    EmailSettings = v;\n  }\n}, 5);\nvar composeWithTracker = void 0,\n    merge = void 0;\nmodule.importSync(\"/lib/api/compose\", {\n  composeWithTracker: function (v) {\n    composeWithTracker = v;\n  },\n  merge: function (v) {\n    merge = v;\n  }\n}, 6);\nvar providers = Object.keys(require(\"nodemailer-wellknown/services.json\"));\n\nvar composer = function (_ref, onData) {\n  (0, _objectDestructuringEmpty3.default)(_ref);\n\n  if (Meteor.subscribe(\"Packages\").ready()) {\n    var settings = Reaction.getShopSettings().mail || {};\n    var service = settings.service,\n        host = settings.host,\n        port = settings.port,\n        user = settings.user,\n        password = settings.password;\n\n    if (host && port && user && password && !service) {\n      settings.service = \"custom\";\n    }\n\n    onData(null, {\n      providers: providers,\n      settings: settings\n    });\n  }\n};\n\nvar depsMapper = function () {\n  return {\n    saveSettings: actions.settings.saveSettings\n  };\n};\n\nmodule.export(\"default\", exports.default = merge(composeWithTracker(composer, Loading), useDeps(depsMapper))(EmailSettings));","map":{"version":3,"sources":["/imports/plugins/core/email/client/containers/emailSettings.js"],"names":["useDeps","Meteor","Reaction","Loading","actions","EmailSettings","composeWithTracker","merge","providers","Object","keys","require","composer","onData","subscribe","ready","settings","getShopSettings","mail","service","host","port","user","password","depsMapper","saveSettings"],"mappings":";;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GACA,AAAS,AAAc,AACvB,AAAS,AAAgB,AACzB,AAAS,AAAe,AACxB,AAAO,AAAa,AACpB,AAAO,AAAmB,AAC1B,AAAS,AAAoB,AAAa,AAE1C,AAAM,AAAY,AAAO,AAAK,AAAQ;oCAEtC,AAAM,AAAW,AAAC,AAAI,AAAW;;AAC/B,IAAI,AAAO,2BAAP,AAAiB;AAArB,AAAI,AAA6B,AAAS,AACxC;;MAAM,OAAW,UAAS;QAEpB,8CAAA,AAAE,AAAS;AAFjB,AAAiB,AAA2B,AAAQ,AAEpD;eAAM,AAAiB,AAAM;;;;;QAAvB,8CAA6B;yBAA7B;AAAN,AAAgD,AAEhD;;AAAI,WAAQ;AAAR,AAAgB;AAApB,AAAI,AAAwB,AAAY,AAAC,AAAS,AAChD;;AAAA,AAAS,AAAU,AACpB;;;AAED,IAAA,AAAO,AAAM;;AAAA,mCAAb,AAAa,AAAa,AAC3B;AADgB;;;OApBV,OAAT,WAAwB,QAAxB,UAUA,AAYC,qDAED,aAAA,AAAM,AAAa,AAAO,AACxB,AAAc,AAAQ,AAAS,AAGjC,AAAe,AACb,AAAmB,AAAU,AAC7B,AAAQ,AACR","file":"/imports/plugins/core/email/client/containers/emailSettings.js.map","sourcesContent":["import { useDeps } from \"react-simple-di\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Reaction } from \"/client/api\";\nimport { Loading } from \"/imports/plugins/core/ui/client/components\";\nimport actions from \"../actions\";\nimport EmailSettings from \"../components/emailSettings\";\nimport { composeWithTracker, merge } from \"/lib/api/compose\";\n\nconst providers = Object.keys(require(\"nodemailer-wellknown/services.json\"));\n\nconst composer = ({}, onData) => {\n  if (Meteor.subscribe(\"Packages\").ready()) {\n    const settings = Reaction.getShopSettings().mail || {};\n\n    const { service, host, port, user, password } = settings;\n\n    if (host && port && user && password && !service) {\n      settings.service = \"custom\";\n    }\n\n    onData(null, { providers, settings });\n  }\n};\n\nconst depsMapper = () => ({\n  saveSettings: actions.settings.saveSettings\n});\n\nexport default merge(\n  composeWithTracker(composer, Loading),\n  useDeps(depsMapper)\n)(EmailSettings);\n"]},"hash":"ff123e870199e495553b648dd2861ebe40ec97fd"}
