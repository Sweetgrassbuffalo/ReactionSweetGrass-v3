{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","createClass","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"lodash/isEqual","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_isEqual"}]},{"source":"react","imported":["default","Component","PropTypes"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"},{"kind":"named","imported":"PropTypes","local":"PropTypes"}]},{"source":"velocity-animate","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Velocity"}]},{"source":"velocity-animate/velocity.ui","imported":[],"specifiers":[]},{"source":"react/lib/update","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"update"}]},{"source":"/client/api","imported":["formatPriceString"],"specifiers":[{"kind":"named","imported":"formatPriceString","local":"formatPriceString"}]},{"source":"/imports/plugins/core/ui/client/components","imported":["Button","Card","CardHeader","CardBody","CardGroup","Divider","Select","SettingsCard","Switch","TextField"],"specifiers":[{"kind":"named","imported":"Button","local":"Button"},{"kind":"named","imported":"Card","local":"Card"},{"kind":"named","imported":"CardHeader","local":"CardHeader"},{"kind":"named","imported":"CardBody","local":"CardBody"},{"kind":"named","imported":"CardGroup","local":"CardGroup"},{"kind":"named","imported":"Divider","local":"Divider"},{"kind":"named","imported":"Select","local":"Select"},{"kind":"named","imported":"SettingsCard","local":"SettingsCard"},{"kind":"named","imported":"Switch","local":"Switch"},{"kind":"named","imported":"TextField","local":"TextField"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/included/product-variant/client/components/variantForm.js","filenameRelative":"/imports/plugins/included/product-variant/client/components/variantForm.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/included/product-variant/client/components/variantForm.js"],"names":["React","Component","PropTypes","Velocity","update","formatPriceString","Button","Card","CardHeader","CardBody","CardGroup","Divider","Select","SettingsCard","Switch","TextField","fieldNames","fieldGroups","title","group","originCountry","compareAtPrice","price","width","length","height","weight","taxCode","taxDescription","inventoryQuantity","inventoryPolicy","lowInventoryWarningThreshold","VariantForm","constructor","props","state","expandedCard","fieldGroupForFieldName","editFocus","variant","taxable","inventoryManagement","componentWillReceiveProps","nextProps","nextVariant","currentVariant","fieldName","animateFieldFlash","cardGroupName","setState","field","Array","isArray","fieldData","fieldRef","refs","input","RunSequence","e","p","backgroundColor","o","duration","handleFieldChange","event","value","newState","$merge","handleFieldBlur","onVariantFieldSave","_id","handleSelectChange","handleCheckboxChange","handleCardExpand","cardName","onCardExpand","isExpanded","groupName","renderTaxCodeField","isProviderEnabled","fetchTaxCodes","renderArchiveButton","isDeleted","restoreVariant","removeVariant","renderArchivedLabel","renderQuantityField","hasChildVariants","onUpdateQuantityField","cursor","render","bind","cloneVariant","countries","greyDisabledFields","propTypes","func","arrayOf","object","oneOfType","string","bool","onFieldChange"],"mappings":"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","file":"/imports/plugins/included/product-variant/client/components/variantForm.js.map","sourcesContent":["import { isEqual } from \"lodash\";\nimport React, { Component, PropTypes } from \"react\";\nimport Velocity from \"velocity-animate\";\nimport \"velocity-animate/velocity.ui\";\nimport update from \"react/lib/update\";\nimport { formatPriceString } from \"/client/api\";\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardGroup,\n  Divider,\n  Select,\n  SettingsCard,\n  Switch,\n  TextField\n} from \"/imports/plugins/core/ui/client/components\";\n\nconst fieldNames = [\n  \"title\",\n  \"originCountry\",\n  \"compareAtPrice\",\n  \"price\",\n  \"width\",\n  \"length\",\n  \"height\",\n  \"weight\",\n  \"taxCode\",\n  \"taxDescription\",\n  \"inventoryQuantity\",\n  \"inventoryPolicy\",\n  \"lowInventoryWarningThreshold\"\n];\n\nconst fieldGroups = {\n  title: { group: \"variantDetails\" },\n  originCountry: { group: \"variantDetails\" },\n  compareAtPrice: { group: \"variantDetails\" },\n  price: { group: \"variantDetails\" },\n  width: { group: \"variantDetails\" },\n  length: { group: \"variantDetails\" },\n  height: { group: \"variantDetails\" },\n  weight: { group: \"variantDetails\" },\n  taxCode: { group: \"taxable\" },\n  taxDescription: { group: \"taxable\" },\n  inventoryQuantity: { group: \"inventoryManagement\" },\n  inventoryPolicy: { group: \"inventoryManagement\" },\n  lowInventoryWarningThreshold: { group: \"inventoryManagement\" }\n};\n\nclass VariantForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      expandedCard: this.fieldGroupForFieldName(props.editFocus),\n      variant: props.variant,\n      inventoryPolicy: props.variant.inventoryPolicy,\n      taxable: props.variant.taxable,\n      inventoryManagement: props.variant.inventoryManagement\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const nextVariant = nextProps.variant || {};\n    const currentVariant = this.props.variant || {};\n\n    if (!isEqual(nextVariant, currentVariant)) {\n      for (const fieldName of fieldNames) {\n        if (nextVariant[fieldName] !== currentVariant[fieldName]) {\n          this.animateFieldFlash(fieldName);\n        }\n      }\n    }\n    const cardGroupName = this.fieldGroupForFieldName(nextProps.editFocus);\n\n    this.setState({\n      expandedCard: cardGroupName,\n      variant: nextProps.variant\n    });\n  }\n\n  fieldGroupForFieldName(field) {\n    // Other wise, if a field was passed\n    // const fieldName = this.state.viewProps.field;\n\n    let fieldName;\n\n    // If the field is an array of field name\n    if (Array.isArray(field) && field.length) {\n      // Use the first field name\n      fieldName = field[0];\n    } else {\n      fieldName = field;\n    }\n\n    const fieldData = fieldGroups[fieldName];\n\n    if (fieldData && fieldData.group) {\n      return fieldData.group;\n    }\n\n    return fieldName;\n  }\n\n  animateFieldFlash(fieldName) {\n    const fieldRef = this.refs[`${fieldName}Input`];\n\n    if (fieldRef) {\n      const input = fieldRef.refs.input;\n\n      Velocity.RunSequence([\n        { e: input, p: { backgroundColor: \"#e2f2e2\" }, o: { duration: 200 } },\n        { e: input, p: { backgroundColor: \"#fff\" }, o: { duration: 100 } }\n      ]);\n    }\n  }\n\n  get variant() {\n    return this.state.variant || this.props.variant || {};\n  }\n\n  handleFieldChange = (event, value, field) => {\n    const newState = update(this.state, {\n      variant: {\n        $merge: {\n          [field]: value\n        }\n      }\n    });\n\n    this.setState(newState);\n  }\n\n  handleFieldBlur = (event, value, field) => {\n    if (this.props.onVariantFieldSave) {\n      this.props.onVariantFieldSave(this.variant._id, field, value);\n    }\n  }\n\n  handleSelectChange = (value, field) => {\n    this.handleFieldChange(event, value, field);\n\n    if (this.props.onVariantFieldSave) {\n      this.props.onVariantFieldSave(this.variant._id, field, value);\n    }\n  }\n\n  handleCheckboxChange = (event, value, field) => {\n    this.setState({\n      [field]: value\n    });\n\n    this.handleFieldBlur(event, value, field);\n  }\n\n  handleCardExpand(cardName) {\n    if (this.props.onCardExpand) {\n      this.props.onCardExpand(cardName);\n    }\n  }\n\n  isExpanded(groupName) {\n    if (this.state.expandedCard && this.state.expandedCard === groupName) {\n      return true;\n    }\n\n    return false;\n  }\n\n  renderTaxCodeField() {\n    if (this.props.isProviderEnabled()) {\n      return (\n        <Select\n          clearable={false}\n          i18nKeyLabel=\"productVariant.taxCode\"\n          i18nKeyPlaceholder=\"productVariant.selectTaxCode\"\n          label=\"Tax Code\"\n          name=\"taxCode\"\n          ref=\"taxCodeInput\"\n          options={this.props.fetchTaxCodes()}\n          onChange={this.handleSelectChange}\n          value={this.variant.taxCode}\n        />\n      );\n    }\n    return (\n      <TextField\n        i18nKeyLabel=\"productVariant.taxCode\"\n        i18nKeyPlaceholder=\"productVariant.selectTaxCode\"\n        placeholder=\"Select Tax Code\"\n        label=\"Tax Code\"\n        name=\"taxCode\"\n        ref=\"taxCodeInput\"\n        value={this.variant.taxCode}\n        onBlur={this.handleFieldBlur}\n        onChange={this.handleFieldChange}\n        onReturnKeyDown={this.handleFieldBlur}\n      />\n    );\n  }\n\n  renderArchiveButton() {\n    if (this.props.isDeleted) {\n      return (\n        <Button\n          icon=\"refresh\"\n          className=\"rui btn btn-default btn-restore-variant flat\"\n          tooltip=\"Restore\"\n          onClick={() => this.props.restoreVariant(this.variant)}\n        />\n      );\n    }\n    return (\n      <Button\n        icon=\"archive\"\n        className=\"rui btn btn-default btn-remove-variant flat\"\n        tooltip=\"Archive\"\n        onClick={() => this.props.removeVariant(this.variant)}\n      />\n    );\n  }\n\n  renderArchivedLabel() {\n    if (this.props.isDeleted) {\n      return (\n        <div className=\"panel-subheading\">\n          <span className=\"badge badge-danger\" data-i18n=\"app.archived\">\n            <span>Archived</span>\n          </span>\n        </div>\n      );\n    }\n  }\n\n  renderQuantityField() {\n    if (this.props.hasChildVariants(this.variant)) {\n      return (\n        <div className=\"col-sm-6\">\n          <TextField\n            i18nKeyLabel=\"productVariant.inventoryQuantity\"\n            i18nKeyPlaceholder=\"0\"\n            placeholder=\"0\"\n            label=\"Quantity\"\n            name=\"inventoryQuantity\"\n            ref=\"inventoryQuantityInput\"\n            value={this.props.onUpdateQuantityField(this.variant)}\n            style={{ backgroundColor: \"lightgrey\", cursor: \"not-allowed\" }}\n            disabled={true}\n          />\n        </div>\n      );\n    }\n    return (\n      <div className=\"col-sm-6\">\n        <TextField\n          i18nKeyLabel=\"productVariant.inventoryQuantity\"\n          i18nKeyPlaceholder=\"0\"\n          placeholder=\"0\"\n          label=\"Quantity\"\n          name=\"inventoryQuantity\"\n          ref=\"inventoryQuantityInput\"\n          value={this.variant.inventoryQuantity}\n          onChange={this.handleFieldChange}\n          onBlur={this.handleFieldBlur}\n          onReturnKeyDown={this.handleFieldBlur}\n        />\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <CardGroup>\n        <Card\n          expanded={this.isExpanded(\"variantDetails\")}\n          onExpand={this.handleCardExpand.bind(this, \"variantDetails\")}\n        >\n          <CardHeader\n            actAsExpander={true}\n            i18nKeyTitle=\"productDetailEdit.variantDetails\"\n            title=\"Variant Details\"\n          >\n            {this.renderArchivedLabel()}\n            <Button\n              icon=\"files-o\"\n              className=\"rui btn btn-default btn-clone-variant flat\"\n              tooltip=\"Duplicate\"\n              onClick={() => this.props.cloneVariant(this.variant)}\n            />\n            {this.renderArchiveButton()}\n          </CardHeader>\n          <CardBody expandable={true}>\n            <TextField\n              i18nKeyLabel=\"productVariant.title\"\n              i18nKeyPlaceholder=\"productVariant.title\"\n              placeholder=\"Label\"\n              label=\"Label\"\n              name=\"title\"\n              ref=\"titleInput\"\n              value={this.variant.title}\n              onBlur={this.handleFieldBlur}\n              onChange={this.handleFieldChange}\n              onReturnKeyDown={this.handleFieldBlur}\n            />\n            <Select\n              clearable={false}\n              i18nKeyLabel=\"productVariant.originCountry\"\n              i18nKeyPlaceholder=\"productVariant.originCountry\"\n              label=\"Origin Country\"\n              name=\"originCountry\"\n              ref=\"countryOfOriginInput\"\n              options={this.props.countries}\n              onChange={this.handleSelectChange}\n              value={this.variant.originCountry}\n            />\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <TextField\n                  i18nKeyLabel=\"productVariant.compareAtPrice\"\n                  i18nKeyPlaceholder={formatPriceString(\"0.00\")}\n                  placeholder={formatPriceString(\"0.00\")}\n                  label=\"MSRP\"\n                  name=\"compareAtPrice\"\n                  ref=\"compareAtPriceInput\"\n                  value={this.variant.compareAtPrice}\n                  onBlur={this.handleFieldBlur}\n                  onChange={this.handleFieldChange}\n                  onReturnKeyDown={this.handleFieldBlur}\n                />\n              </div>\n              <div className=\"col-sm-6\">\n                <TextField\n                  i18nKeyLabel=\"productVariant.price\"\n                  i18nKeyPlaceholder={formatPriceString(\"0.00\")}\n                  placeholder={formatPriceString(\"0.00\")}\n                  label=\"Price\"\n                  name=\"price\"\n                  ref=\"priceInput\"\n                  value={this.variant.price}\n                  style={this.props.greyDisabledFields(this.variant)}\n                  disabled={this.props.hasChildVariants(this.variant)}\n                  onBlur={this.handleFieldBlur}\n                  onChange={this.handleFieldChange}\n                  onReturnKeyDown={this.handleFieldBlur}\n                />\n              </div>\n            </div>\n            <Divider />\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <TextField\n                  i18nKeyLabel=\"productVariant.width\"\n                  i18nKeyPlaceholder=\"0\"\n                  placeholder=\"0\"\n                  label=\"Width\"\n                  name=\"width\"\n                  ref=\"widthInput\"\n                  value={this.variant.width}\n                  onBlur={this.handleFieldBlur}\n                  onChange={this.handleFieldChange}\n                  onReturnKeyDown={this.handleFieldBlur}\n                />\n              </div>\n              <div className=\"col-sm-6\">\n                <TextField\n                  i18nKeyLabel=\"productVariant.length\"\n                  i18nKeyPlaceholder=\"0\"\n                  placeholder=\"0\"\n                  label=\"Length\"\n                  name=\"length\"\n                  ref=\"lengthInput\"\n                  value={this.variant.length}\n                  onBlur={this.handleFieldBlur}\n                  onChange={this.handleFieldChange}\n                  onReturnKeyDown={this.handleFieldBlur}\n                />\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <TextField\n                  i18nKeyLabel=\"productVariant.height\"\n                  i18nKeyPlaceholder=\"0\"\n                  placeholder=\"0\"\n                  label=\"Height\"\n                  name=\"height\"\n                  ref=\"heightInput\"\n                  value={this.variant.height}\n                  onBlur={this.handleFieldBlur}\n                  onChange={this.handleFieldChange}\n                  onReturnKeyDown={this.handleFieldBlur}\n                />\n              </div>\n              <div className=\"col-sm-6\">\n                <TextField\n                  i18nKeyLabel=\"productVariant.weight\"\n                  i18nKeyPlaceholder=\"0\"\n                  placeholder=\"0\"\n                  label=\"Weight\"\n                  name=\"weight\"\n                  ref=\"weightInput\"\n                  value={this.variant.weight}\n                  onBlur={this.handleFieldBlur}\n                  onChange={this.handleFieldChange}\n                  onReturnKeyDown={this.handleFieldBlur}\n                />\n              </div>\n            </div>\n          </CardBody>\n        </Card>\n\n        <SettingsCard\n          enabled={this.state.taxable}\n          expandable={true}\n          expanded={this.isExpanded(\"taxable\")}\n          i18nKeyTitle=\"productVariant.taxable\"\n          name=\"taxable\"\n          showSwitch={true}\n          title=\"Taxable\"\n          onExpand={this.handleCardExpand.bind(this, \"taxable\")}\n          onSwitchChange={this.handleCheckboxChange}\n        >\n          {this.renderTaxCodeField()}\n          <TextField\n            i18nKeyLabel=\"productVariant.taxDescription\"\n            i18nKeyPlaceholder=\"productVariant.taxDescription\"\n            placeholder=\"Tax Description\"\n            label=\"Tax Description\"\n            name=\"taxDescription\"\n            ref=\"taxDescriptionInput\"\n            value={this.variant.taxDescription}\n            onBlur={this.handleFieldBlur}\n            onChange={this.handleFieldChange}\n            onReturnKeyDown={this.handleFieldBlur}\n          />\n        </SettingsCard>\n\n        <SettingsCard\n          enabled={this.state.inventoryManagement}\n          expandable={true}\n          expanded={this.isExpanded(\"inventoryManagement\")}\n          i18nKeyTitle=\"productVariant.inventoryManagement\"\n          name=\"inventoryManagement\"\n          showSwitch={true}\n          title=\"Inventory Tracking\"\n          onExpand={this.handleCardExpand.bind(this, \"inventoryManagement\")}\n          onSwitchChange={this.handleCheckboxChange}\n        >\n          <div className=\"row\">\n            {this.renderQuantityField()}\n            <div className=\"col-sm-6\">\n              <TextField\n                i18nKeyLabel=\"productVariant.lowInventoryWarningThreshold\"\n                i18nKeyPlaceholder=\"0\"\n                placeholder=\"0\"\n                label=\"Warn At\"\n                name=\"lowInventoryWarningThreshold\"\n                ref=\"lowInventoryWarningThresholdInput\"\n                value={this.variant.lowInventoryWarningThreshold}\n                onBlur={this.handleFieldBlur}\n                onChange={this.handleFieldChange}\n                onReturnKeyDown={this.handleFieldBlur}\n              />\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <Switch\n                i18nKeyLabel=\"productVariant.inventoryPolicy\"\n                i18nKeyOnLabel=\"productVariant.inventoryPolicy\"\n                name=\"inventoryPolicy\"\n                label={\"Allow Backorder\"}\n                onLabel={\"Allow Backorder\"}\n                checked={this.state.inventoryPolicy}\n                onChange={this.handleCheckboxChange}\n              />\n            </div>\n          </div>\n        </SettingsCard>\n      </CardGroup>\n    );\n  }\n}\n\nVariantForm.propTypes = {\n  cloneVariant: PropTypes.func,\n  countries: PropTypes.arrayOf(PropTypes.object),\n  editFocus: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  fetchTaxCodes: PropTypes.func,\n  greyDisabledFields: PropTypes.func,\n  hasChildVariants: PropTypes.func,\n  isDeleted: PropTypes.bool,\n  isProviderEnabled: PropTypes.func,\n  onCardExpand: PropTypes.func,\n  onFieldChange: PropTypes.func,\n  onUpdateQuantityField: PropTypes.func,\n  onVariantFieldSave: PropTypes.func,\n  removeVariant: PropTypes.func,\n  restoreVariant: PropTypes.func,\n  variant: PropTypes.object\n};\n\nexport default VariantForm;\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/included/product-variant/client/components/variantForm.js.map","sourceFileName":"/imports/plugins/included/product-variant/client/components/variantForm.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"variantForm"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _isEqual = void 0;\n\nmodule.importSync(\"lodash/isEqual\", {\n  \"default\": function (v) {\n    _isEqual = v;\n  }\n}, 0);\nvar React = void 0,\n    Component = void 0,\n    PropTypes = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  },\n  PropTypes: function (v) {\n    PropTypes = v;\n  }\n}, 1);\nvar Velocity = void 0;\nmodule.importSync(\"velocity-animate\", {\n  \"default\": function (v) {\n    Velocity = v;\n  }\n}, 2);\nmodule.importSync(\"velocity-animate/velocity.ui\");\nvar update = void 0;\nmodule.importSync(\"react/lib/update\", {\n  \"default\": function (v) {\n    update = v;\n  }\n}, 4);\nvar formatPriceString = void 0;\nmodule.importSync(\"/client/api\", {\n  formatPriceString: function (v) {\n    formatPriceString = v;\n  }\n}, 5);\nvar Button = void 0,\n    Card = void 0,\n    CardHeader = void 0,\n    CardBody = void 0,\n    CardGroup = void 0,\n    Divider = void 0,\n    Select = void 0,\n    SettingsCard = void 0,\n    Switch = void 0,\n    TextField = void 0;\nmodule.importSync(\"/imports/plugins/core/ui/client/components\", {\n  Button: function (v) {\n    Button = v;\n  },\n  Card: function (v) {\n    Card = v;\n  },\n  CardHeader: function (v) {\n    CardHeader = v;\n  },\n  CardBody: function (v) {\n    CardBody = v;\n  },\n  CardGroup: function (v) {\n    CardGroup = v;\n  },\n  Divider: function (v) {\n    Divider = v;\n  },\n  Select: function (v) {\n    Select = v;\n  },\n  SettingsCard: function (v) {\n    SettingsCard = v;\n  },\n  Switch: function (v) {\n    Switch = v;\n  },\n  TextField: function (v) {\n    TextField = v;\n  }\n}, 6);\nvar fieldNames = [\"title\", \"originCountry\", \"compareAtPrice\", \"price\", \"width\", \"length\", \"height\", \"weight\", \"taxCode\", \"taxDescription\", \"inventoryQuantity\", \"inventoryPolicy\", \"lowInventoryWarningThreshold\"];\nvar fieldGroups = {\n  title: {\n    group: \"variantDetails\"\n  },\n  originCountry: {\n    group: \"variantDetails\"\n  },\n  compareAtPrice: {\n    group: \"variantDetails\"\n  },\n  price: {\n    group: \"variantDetails\"\n  },\n  width: {\n    group: \"variantDetails\"\n  },\n  length: {\n    group: \"variantDetails\"\n  },\n  height: {\n    group: \"variantDetails\"\n  },\n  weight: {\n    group: \"variantDetails\"\n  },\n  taxCode: {\n    group: \"taxable\"\n  },\n  taxDescription: {\n    group: \"taxable\"\n  },\n  inventoryQuantity: {\n    group: \"inventoryManagement\"\n  },\n  inventoryPolicy: {\n    group: \"inventoryManagement\"\n  },\n  lowInventoryWarningThreshold: {\n    group: \"inventoryManagement\"\n  }\n};\n\nvar VariantForm = function (_Component) {\n  (0, _inherits3.default)(VariantForm, _Component);\n\n  function VariantForm(props) {\n    (0, _classCallCheck3.default)(this, VariantForm);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));\n\n    _this.handleFieldChange = function (event, value, field) {\n      var _$merge;\n\n      var newState = update(_this.state, {\n        variant: {\n          $merge: (_$merge = {}, _$merge[field] = value, _$merge)\n        }\n      });\n\n      _this.setState(newState);\n    };\n\n    _this.handleFieldBlur = function (event, value, field) {\n      if (_this.props.onVariantFieldSave) {\n        _this.props.onVariantFieldSave(_this.variant._id, field, value);\n      }\n    };\n\n    _this.handleSelectChange = function (value, field) {\n      _this.handleFieldChange(event, value, field);\n\n      if (_this.props.onVariantFieldSave) {\n        _this.props.onVariantFieldSave(_this.variant._id, field, value);\n      }\n    };\n\n    _this.handleCheckboxChange = function (event, value, field) {\n      var _this$setState;\n\n      _this.setState((_this$setState = {}, _this$setState[field] = value, _this$setState));\n\n      _this.handleFieldBlur(event, value, field);\n    };\n\n    _this.state = {\n      expandedCard: _this.fieldGroupForFieldName(props.editFocus),\n      variant: props.variant,\n      inventoryPolicy: props.variant.inventoryPolicy,\n      taxable: props.variant.taxable,\n      inventoryManagement: props.variant.inventoryManagement\n    };\n    return _this;\n  }\n\n  VariantForm.prototype.componentWillReceiveProps = function () {\n    function componentWillReceiveProps(nextProps) {\n      var nextVariant = nextProps.variant || {};\n      var currentVariant = this.props.variant || {};\n\n      if (!_isEqual(nextVariant, currentVariant)) {\n        for (var _iterator = fieldNames, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n          var _ref;\n\n          if (_isArray) {\n            if (_i >= _iterator.length) break;\n            _ref = _iterator[_i++];\n          } else {\n            _i = _iterator.next();\n            if (_i.done) break;\n            _ref = _i.value;\n          }\n\n          var fieldName = _ref;\n\n          if (nextVariant[fieldName] !== currentVariant[fieldName]) {\n            this.animateFieldFlash(fieldName);\n          }\n        }\n      }\n\n      var cardGroupName = this.fieldGroupForFieldName(nextProps.editFocus);\n      this.setState({\n        expandedCard: cardGroupName,\n        variant: nextProps.variant\n      });\n    }\n\n    return componentWillReceiveProps;\n  }();\n\n  VariantForm.prototype.fieldGroupForFieldName = function () {\n    function fieldGroupForFieldName(field) {\n      // Other wise, if a field was passed\n      // const fieldName = this.state.viewProps.field;\n      var fieldName = void 0; // If the field is an array of field name\n\n      if (Array.isArray(field) && field.length) {\n        // Use the first field name\n        fieldName = field[0];\n      } else {\n        fieldName = field;\n      }\n\n      var fieldData = fieldGroups[fieldName];\n\n      if (fieldData && fieldData.group) {\n        return fieldData.group;\n      }\n\n      return fieldName;\n    }\n\n    return fieldGroupForFieldName;\n  }();\n\n  VariantForm.prototype.animateFieldFlash = function () {\n    function animateFieldFlash(fieldName) {\n      var fieldRef = this.refs[fieldName + \"Input\"];\n\n      if (fieldRef) {\n        var input = fieldRef.refs.input;\n        Velocity.RunSequence([{\n          e: input,\n          p: {\n            backgroundColor: \"#e2f2e2\"\n          },\n          o: {\n            duration: 200\n          }\n        }, {\n          e: input,\n          p: {\n            backgroundColor: \"#fff\"\n          },\n          o: {\n            duration: 100\n          }\n        }]);\n      }\n    }\n\n    return animateFieldFlash;\n  }();\n\n  VariantForm.prototype.handleCardExpand = function () {\n    function handleCardExpand(cardName) {\n      if (this.props.onCardExpand) {\n        this.props.onCardExpand(cardName);\n      }\n    }\n\n    return handleCardExpand;\n  }();\n\n  VariantForm.prototype.isExpanded = function () {\n    function isExpanded(groupName) {\n      if (this.state.expandedCard && this.state.expandedCard === groupName) {\n        return true;\n      }\n\n      return false;\n    }\n\n    return isExpanded;\n  }();\n\n  VariantForm.prototype.renderTaxCodeField = function () {\n    function renderTaxCodeField() {\n      if (this.props.isProviderEnabled()) {\n        return React.createElement(Select, {\n          clearable: false,\n          i18nKeyLabel: \"productVariant.taxCode\",\n          i18nKeyPlaceholder: \"productVariant.selectTaxCode\",\n          label: \"Tax Code\",\n          name: \"taxCode\",\n          ref: \"taxCodeInput\",\n          options: this.props.fetchTaxCodes(),\n          onChange: this.handleSelectChange,\n          value: this.variant.taxCode\n        });\n      }\n\n      return React.createElement(TextField, {\n        i18nKeyLabel: \"productVariant.taxCode\",\n        i18nKeyPlaceholder: \"productVariant.selectTaxCode\",\n        placeholder: \"Select Tax Code\",\n        label: \"Tax Code\",\n        name: \"taxCode\",\n        ref: \"taxCodeInput\",\n        value: this.variant.taxCode,\n        onBlur: this.handleFieldBlur,\n        onChange: this.handleFieldChange,\n        onReturnKeyDown: this.handleFieldBlur\n      });\n    }\n\n    return renderTaxCodeField;\n  }();\n\n  VariantForm.prototype.renderArchiveButton = function () {\n    function renderArchiveButton() {\n      var _this2 = this;\n\n      if (this.props.isDeleted) {\n        return React.createElement(Button, {\n          icon: \"refresh\",\n          className: \"rui btn btn-default btn-restore-variant flat\",\n          tooltip: \"Restore\",\n          onClick: function () {\n            return _this2.props.restoreVariant(_this2.variant);\n          }\n        });\n      }\n\n      return React.createElement(Button, {\n        icon: \"archive\",\n        className: \"rui btn btn-default btn-remove-variant flat\",\n        tooltip: \"Archive\",\n        onClick: function () {\n          return _this2.props.removeVariant(_this2.variant);\n        }\n      });\n    }\n\n    return renderArchiveButton;\n  }();\n\n  VariantForm.prototype.renderArchivedLabel = function () {\n    function renderArchivedLabel() {\n      if (this.props.isDeleted) {\n        return React.createElement(\n          \"div\",\n          {\n            className: \"panel-subheading\"\n          },\n          React.createElement(\n            \"span\",\n            {\n              className: \"badge badge-danger\",\n              \"data-i18n\": \"app.archived\"\n            },\n            React.createElement(\n              \"span\",\n              null,\n              \"Archived\"\n            )\n          )\n        );\n      }\n    }\n\n    return renderArchivedLabel;\n  }();\n\n  VariantForm.prototype.renderQuantityField = function () {\n    function renderQuantityField() {\n      if (this.props.hasChildVariants(this.variant)) {\n        return React.createElement(\n          \"div\",\n          {\n            className: \"col-sm-6\"\n          },\n          React.createElement(TextField, {\n            i18nKeyLabel: \"productVariant.inventoryQuantity\",\n            i18nKeyPlaceholder: \"0\",\n            placeholder: \"0\",\n            label: \"Quantity\",\n            name: \"inventoryQuantity\",\n            ref: \"inventoryQuantityInput\",\n            value: this.props.onUpdateQuantityField(this.variant),\n            style: {\n              backgroundColor: \"lightgrey\",\n              cursor: \"not-allowed\"\n            },\n            disabled: true\n          })\n        );\n      }\n\n      return React.createElement(\n        \"div\",\n        {\n          className: \"col-sm-6\"\n        },\n        React.createElement(TextField, {\n          i18nKeyLabel: \"productVariant.inventoryQuantity\",\n          i18nKeyPlaceholder: \"0\",\n          placeholder: \"0\",\n          label: \"Quantity\",\n          name: \"inventoryQuantity\",\n          ref: \"inventoryQuantityInput\",\n          value: this.variant.inventoryQuantity,\n          onChange: this.handleFieldChange,\n          onBlur: this.handleFieldBlur,\n          onReturnKeyDown: this.handleFieldBlur\n        })\n      );\n    }\n\n    return renderQuantityField;\n  }();\n\n  VariantForm.prototype.render = function () {\n    function render() {\n      var _this3 = this;\n\n      return React.createElement(\n        CardGroup,\n        null,\n        React.createElement(\n          Card,\n          {\n            expanded: this.isExpanded(\"variantDetails\"),\n            onExpand: this.handleCardExpand.bind(this, \"variantDetails\")\n          },\n          React.createElement(\n            CardHeader,\n            {\n              actAsExpander: true,\n              i18nKeyTitle: \"productDetailEdit.variantDetails\",\n              title: \"Variant Details\"\n            },\n            this.renderArchivedLabel(),\n            React.createElement(Button, {\n              icon: \"files-o\",\n              className: \"rui btn btn-default btn-clone-variant flat\",\n              tooltip: \"Duplicate\",\n              onClick: function () {\n                return _this3.props.cloneVariant(_this3.variant);\n              }\n            }),\n            this.renderArchiveButton()\n          ),\n          React.createElement(\n            CardBody,\n            {\n              expandable: true\n            },\n            React.createElement(TextField, {\n              i18nKeyLabel: \"productVariant.title\",\n              i18nKeyPlaceholder: \"productVariant.title\",\n              placeholder: \"Label\",\n              label: \"Label\",\n              name: \"title\",\n              ref: \"titleInput\",\n              value: this.variant.title,\n              onBlur: this.handleFieldBlur,\n              onChange: this.handleFieldChange,\n              onReturnKeyDown: this.handleFieldBlur\n            }),\n            React.createElement(Select, {\n              clearable: false,\n              i18nKeyLabel: \"productVariant.originCountry\",\n              i18nKeyPlaceholder: \"productVariant.originCountry\",\n              label: \"Origin Country\",\n              name: \"originCountry\",\n              ref: \"countryOfOriginInput\",\n              options: this.props.countries,\n              onChange: this.handleSelectChange,\n              value: this.variant.originCountry\n            }),\n            React.createElement(\n              \"div\",\n              {\n                className: \"row\"\n              },\n              React.createElement(\n                \"div\",\n                {\n                  className: \"col-sm-6\"\n                },\n                React.createElement(TextField, {\n                  i18nKeyLabel: \"productVariant.compareAtPrice\",\n                  i18nKeyPlaceholder: formatPriceString(\"0.00\"),\n                  placeholder: formatPriceString(\"0.00\"),\n                  label: \"MSRP\",\n                  name: \"compareAtPrice\",\n                  ref: \"compareAtPriceInput\",\n                  value: this.variant.compareAtPrice,\n                  onBlur: this.handleFieldBlur,\n                  onChange: this.handleFieldChange,\n                  onReturnKeyDown: this.handleFieldBlur\n                })\n              ),\n              React.createElement(\n                \"div\",\n                {\n                  className: \"col-sm-6\"\n                },\n                React.createElement(TextField, {\n                  i18nKeyLabel: \"productVariant.price\",\n                  i18nKeyPlaceholder: formatPriceString(\"0.00\"),\n                  placeholder: formatPriceString(\"0.00\"),\n                  label: \"Price\",\n                  name: \"price\",\n                  ref: \"priceInput\",\n                  value: this.variant.price,\n                  style: this.props.greyDisabledFields(this.variant),\n                  disabled: this.props.hasChildVariants(this.variant),\n                  onBlur: this.handleFieldBlur,\n                  onChange: this.handleFieldChange,\n                  onReturnKeyDown: this.handleFieldBlur\n                })\n              )\n            ),\n            React.createElement(Divider, null),\n            React.createElement(\n              \"div\",\n              {\n                className: \"row\"\n              },\n              React.createElement(\n                \"div\",\n                {\n                  className: \"col-sm-6\"\n                },\n                React.createElement(TextField, {\n                  i18nKeyLabel: \"productVariant.width\",\n                  i18nKeyPlaceholder: \"0\",\n                  placeholder: \"0\",\n                  label: \"Width\",\n                  name: \"width\",\n                  ref: \"widthInput\",\n                  value: this.variant.width,\n                  onBlur: this.handleFieldBlur,\n                  onChange: this.handleFieldChange,\n                  onReturnKeyDown: this.handleFieldBlur\n                })\n              ),\n              React.createElement(\n                \"div\",\n                {\n                  className: \"col-sm-6\"\n                },\n                React.createElement(TextField, {\n                  i18nKeyLabel: \"productVariant.length\",\n                  i18nKeyPlaceholder: \"0\",\n                  placeholder: \"0\",\n                  label: \"Length\",\n                  name: \"length\",\n                  ref: \"lengthInput\",\n                  value: this.variant.length,\n                  onBlur: this.handleFieldBlur,\n                  onChange: this.handleFieldChange,\n                  onReturnKeyDown: this.handleFieldBlur\n                })\n              )\n            ),\n            React.createElement(\n              \"div\",\n              {\n                className: \"row\"\n              },\n              React.createElement(\n                \"div\",\n                {\n                  className: \"col-sm-6\"\n                },\n                React.createElement(TextField, {\n                  i18nKeyLabel: \"productVariant.height\",\n                  i18nKeyPlaceholder: \"0\",\n                  placeholder: \"0\",\n                  label: \"Height\",\n                  name: \"height\",\n                  ref: \"heightInput\",\n                  value: this.variant.height,\n                  onBlur: this.handleFieldBlur,\n                  onChange: this.handleFieldChange,\n                  onReturnKeyDown: this.handleFieldBlur\n                })\n              ),\n              React.createElement(\n                \"div\",\n                {\n                  className: \"col-sm-6\"\n                },\n                React.createElement(TextField, {\n                  i18nKeyLabel: \"productVariant.weight\",\n                  i18nKeyPlaceholder: \"0\",\n                  placeholder: \"0\",\n                  label: \"Weight\",\n                  name: \"weight\",\n                  ref: \"weightInput\",\n                  value: this.variant.weight,\n                  onBlur: this.handleFieldBlur,\n                  onChange: this.handleFieldChange,\n                  onReturnKeyDown: this.handleFieldBlur\n                })\n              )\n            )\n          )\n        ),\n        React.createElement(\n          SettingsCard,\n          {\n            enabled: this.state.taxable,\n            expandable: true,\n            expanded: this.isExpanded(\"taxable\"),\n            i18nKeyTitle: \"productVariant.taxable\",\n            name: \"taxable\",\n            showSwitch: true,\n            title: \"Taxable\",\n            onExpand: this.handleCardExpand.bind(this, \"taxable\"),\n            onSwitchChange: this.handleCheckboxChange\n          },\n          this.renderTaxCodeField(),\n          React.createElement(TextField, {\n            i18nKeyLabel: \"productVariant.taxDescription\",\n            i18nKeyPlaceholder: \"productVariant.taxDescription\",\n            placeholder: \"Tax Description\",\n            label: \"Tax Description\",\n            name: \"taxDescription\",\n            ref: \"taxDescriptionInput\",\n            value: this.variant.taxDescription,\n            onBlur: this.handleFieldBlur,\n            onChange: this.handleFieldChange,\n            onReturnKeyDown: this.handleFieldBlur\n          })\n        ),\n        React.createElement(\n          SettingsCard,\n          {\n            enabled: this.state.inventoryManagement,\n            expandable: true,\n            expanded: this.isExpanded(\"inventoryManagement\"),\n            i18nKeyTitle: \"productVariant.inventoryManagement\",\n            name: \"inventoryManagement\",\n            showSwitch: true,\n            title: \"Inventory Tracking\",\n            onExpand: this.handleCardExpand.bind(this, \"inventoryManagement\"),\n            onSwitchChange: this.handleCheckboxChange\n          },\n          React.createElement(\n            \"div\",\n            {\n              className: \"row\"\n            },\n            this.renderQuantityField(),\n            React.createElement(\n              \"div\",\n              {\n                className: \"col-sm-6\"\n              },\n              React.createElement(TextField, {\n                i18nKeyLabel: \"productVariant.lowInventoryWarningThreshold\",\n                i18nKeyPlaceholder: \"0\",\n                placeholder: \"0\",\n                label: \"Warn At\",\n                name: \"lowInventoryWarningThreshold\",\n                ref: \"lowInventoryWarningThresholdInput\",\n                value: this.variant.lowInventoryWarningThreshold,\n                onBlur: this.handleFieldBlur,\n                onChange: this.handleFieldChange,\n                onReturnKeyDown: this.handleFieldBlur\n              })\n            )\n          ),\n          React.createElement(\n            \"div\",\n            {\n              className: \"row\"\n            },\n            React.createElement(\n              \"div\",\n              {\n                className: \"col-sm-6\"\n              },\n              React.createElement(Switch, {\n                i18nKeyLabel: \"productVariant.inventoryPolicy\",\n                i18nKeyOnLabel: \"productVariant.inventoryPolicy\",\n                name: \"inventoryPolicy\",\n                label: \"Allow Backorder\",\n                onLabel: \"Allow Backorder\",\n                checked: this.state.inventoryPolicy,\n                onChange: this.handleCheckboxChange\n              })\n            )\n          )\n        )\n      );\n    }\n\n    return render;\n  }();\n\n  (0, _createClass3.default)(VariantForm, [{\n    key: \"variant\",\n    get: function () {\n      return this.state.variant || this.props.variant || {};\n    }\n  }]);\n  return VariantForm;\n}(Component);\n\nVariantForm.propTypes = {\n  cloneVariant: PropTypes.func,\n  countries: PropTypes.arrayOf(PropTypes.object),\n  editFocus: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  fetchTaxCodes: PropTypes.func,\n  greyDisabledFields: PropTypes.func,\n  hasChildVariants: PropTypes.func,\n  isDeleted: PropTypes.bool,\n  isProviderEnabled: PropTypes.func,\n  onCardExpand: PropTypes.func,\n  onFieldChange: PropTypes.func,\n  onUpdateQuantityField: PropTypes.func,\n  onVariantFieldSave: PropTypes.func,\n  removeVariant: PropTypes.func,\n  restoreVariant: PropTypes.func,\n  variant: PropTypes.object\n};\nmodule.export(\"default\", exports.default = VariantForm);","map":{"version":3,"sources":["/imports/plugins/included/product-variant/client/components/variantForm.js"],"names":["React","Component","PropTypes","Velocity","update","formatPriceString","Button","Card","CardHeader","CardBody","CardGroup","Divider","Select","SettingsCard","Switch","TextField","fieldNames","fieldGroups","title","group","originCountry","compareAtPrice","price","width","length","height","weight","taxCode","taxDescription","inventoryQuantity","inventoryPolicy","lowInventoryWarningThreshold","VariantForm","constructor","props","state","expandedCard","fieldGroupForFieldName","editFocus","variant","taxable","inventoryManagement","componentWillReceiveProps","nextProps","nextVariant","currentVariant","fieldName","animateFieldFlash","cardGroupName","setState","field","Array","isArray","fieldData","fieldRef","refs","input","RunSequence","e","p","backgroundColor","o","duration","handleFieldChange","event","value","newState","$merge","handleFieldBlur","onVariantFieldSave","_id","handleSelectChange","handleCheckboxChange","handleCardExpand","cardName","onCardExpand","isExpanded","groupName","renderTaxCodeField","isProviderEnabled","fetchTaxCodes","renderArchiveButton","isDeleted","restoreVariant","removeVariant","renderArchivedLabel","renderQuantityField","hasChildVariants","onUpdateQuantityField","cursor","render","bind","cloneVariant","countries","greyDisabledFields","propTypes","func","arrayOf","object","oneOfType","string","bool","onFieldChange"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GACA,AAAO,AAAS,AAAW,AAAiB,AAC5C,AAAO,AAAc,AACrB,AAAO,AACP,AAAO,AAAY,AACnB,AAAS,AAAyB,AAClC,AACE,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACK,AAEP,AAAM,AAAa,AACjB,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AAGF,AAAM,AAAc,AAClB,AAAO,AAAE,AAAO,AAChB,AAAe,AAAE,AAAO,AACxB,AAAgB,AAAE,AAAO,AACzB,AAAO;AAAE,IAAO,aAAT,CAJW,AAKlB,SAAO,AAAE,iBAAF,AAAS,kBALE,AAMlB,SAAQ,AAAE,SAAF,AAAS,UANC,AAOlB,UAAQ,AAAE,UAAF,AAAS,WAPC,AAQlB,kBAAQ,AAAE,qBAAF,AAAS,mBARC,AASlB,AAAS,AAAE,AAAO;AATA,AAST;;WACO,AAAE;;AAAO;WAAT;;AAVE;WAWlB;;;WAAmB,AAAE;;;AAAO,WAAT;;AAXD;WAYlB;;;WAAiB,AAAE;;;WAAF;AAAS;AAZR;WAalB;;;WAA8B,AAAE;;AAAO;WAAT;;;WAbhC,AAAoB;;;WAgBpB,AAAM,AAAoB,AAAU,AAClC;;AAPA;;IAOA,AAAY,AAAO;;;AACX,uBAAN;AAEA;;+DAAK,sBAAL,AAAa,AACX,AAAc,AAAK,AAAuB,AAAM,AAChD;;UAuDA,AAAqB;AAItB;;;;AAGH,AAAI,yCAAJ,AAAc,SACZ,AAAO,AAAK,AAAM,AAAW,AAAK,AAAM,AAAW,AACpD,AAED,AAAoB,AAAC,AAAO,AAAO,AAAU,AAC3C;;AAPD;;YAOO,SAAW,AAAO,AAAK,AAAO,AAClC;AAAS,AACP,AAAQ,AACN;;UAAA,AAAC,AAAQ,iDADH;0CADD;iEADyB;AAApC,AAAiB,AAQjB;AATF,AASE,AAAK,AAAS,AACf,AAED;;UAAkB,AAAC,+BAAD,AAAQ,OAAR,AAAe,OAAU,AACzC;AAAI,YAAA,AAAK,AAAM,yBAAf,AAAmC,OACjC,AAAK,AAAM,AAAmB,AAAK,AAAQ,AAAK,AAAO,AACxD;;0CAHH,AAIC;iEAED;AAAqB,AAAC,AAAO,AAAU,AACrC;AAAA,AAAK,AAAkB,AAAO,AAAO,AAErC;;UAAI,AAAK,AAAM,wCAAf,AAAmC;AACjC;;YAAA,AAAK,AAAM,AAAmB,AAAK,AAAQ,AAAK,AAAO,AACxD,uDALH,AAMC,AAED,AAAuB,AAAC,AAAO,AAAO,AAAU,AAC9C;;YAAA,AAAK,AAAS,8BACZ;AADF,AAAc,AACZ,AAAC,AAAQ,AAGX;;UAjGW;oBACQ,MAAA,AAAM,AAAQ,uBAHpB,MAIX;eAAS,MAJE,AAIF,AAAM,AAAQ,AACvB;uBAAqB,MAAM,QAL7B,AAAa,AAKU,AAAc;6BAEtC;yCAED;AATe,AAEI,AACf;;AAMJ,AAA0B,AAAW,AACnC,AAAM,AAAc,AAAU,AAAW,AACzC;;wBAAM,AAAiB;uCAAA,AAAK,AAAM,WAAlC,AAAuB,AAAsB;6CAE7C;AAAI,AAAC,UAAQ,iBAAR,AAAqB,WAA1B,AAAK,AAAsC,WACzC,AAAK,AAAM,AAAa,AAAY,AAClC;;WAAI,SAAY,aAAZ,AAA2B,iBAA/B,AAA+B,AAAe,AAAY,AACxD;AAAK,6BAAL,AAAuB;AAAvB,AACD;;;;;;;;;;;;;oEACF;mCACF;;AACD;AAAA,AAAM,AAAgB,AAAK,AAAuB,AAAU,AAE5D;;AAAK,UAAL,AAAc,sDAAA,AACZ,AAAc,AACd;WAAS;sBAEZ;2BAED;AANE,AAAc,AAEO;AAIvB,AAAuB,AAAO,AAC5B,AACA;;;;;;;AAF4B,AAI5B,AAAI,AAEJ;AACA,AAAI,AAAM,AAAQ,AAAU,AAAM,AAAQ,AACxC;UACA,AAAY,AAAM,AACnB,mBAND,CAGA,AAGO,AACL;;gBAAY,QAAZ,wBACD;;0BAED;AAAM,aAAN,AAAkB,AAAY;oBAE9B;AAAA,AAAI,AAAa,AAAU,AAAO,AAChC,AAAO,AAAU,AAClB;;kCAED;;UAAA,AAAO,8BACR;;AAED,AAAkB,AAAW,AAC3B;;AAAM,aAAN,AAAiB,AAAK,AAAM,AAAE,AAAU;AAExC,AAAI,AAAU,AACZ;;;;;wBAAM;+BAAQ,AAAS,WAAvB,AAAc,AAAc,AAE5B;UAAS,gBAAT,AAAqB,AACnB,KAAA,AAAE,AAAG,AAAO;;UAAG,UAAE;oBAAiB,cAAlC,AAAe,AAAgC;AAAG;;AAAY;;;;sBAAZ;;SAAE;;;;;;sBADjC,AACnB,AACA,AAAE;;;AAAF,AAAK,AAAO;AAAZ,AAAe,AAAE,AAAiB;;;;;wBAwCjC;8BAAL,AAAqB,UALvB,AAKE,AAA4B,AAAO,AACpC;;gCAED;AAAA,AAAiB,AAAU,AACzB;AAAA,AAAI,AAAK,AAAM,AAAc,AAC3B,AAAK,AAAM,AAAa,AACzB;;;;;;mCACF;;eAED;AAAA,AAAW,AAAW,AACpB,AAAI,AAAK,AAAM,AAAgB,AAAK,AAAM,AAAiB,AAAW,AACpE;;aAAA,AAAO,AACR;AAED;;;;;wBAAA,AAAO;kCACR;;AAED,mCAAqB,AACnB,AAAI;AAAA,AAAK,AAAM,qBAAf,AAAI,AAAgC,AAClC;AACE,AAAC,AACC,wBAFJ,AACE,AACY,AAAC,AACX,AAAa,AACb,AAAmB,AACnB,AAAM,AACN,AAAK,AACL,AAAI,AACJ,AAAQ,AAAC,AAAK,AAAM,AACpB,AAAS,AAAC,AAAK,AACf,AAAM,AAAC,AAAK,AAAQ,AAGzB;;iBACD;AACE,AAAC,gBADH,AACE,AACE,AAAa,AACb,AAAmB,AACnB,AAAY,AACZ,AAAM,AACN,AAAK,AACL,AAAI,AACJ,AAAM,AAAC,AAAK,AAAQ,AACpB,AAAO,AAAC,AAAK,AACb,AAAS,AAAC,AAAK,AACf,AAAgB,AAAC,AAAK,AAG3B;;8BAED;oBAAsB,KACpB,AAAI;AAAK,iBAAL,AAAW,KAAf,QAA0B,AACxB,AACE,AAAC,AACC,AAAK,AACL,AAAU,AACV,AAAQ,AACR,AAAQ,AAAC,AAAM,AAAK,AAAM,AAAe,AAAK,AAGnD;;AACD;;AAAA,AACE,AAAC,AACC,AAAK,AACL,AAAU,AACV,AAAQ,AACR,AAAQ,AAAC,AAAM,AAAK,AAAM,AAAc,AAAK,AAGlD;sBAED;AAAsB,4BACpB;AAAI,AAAK,AAAM,qBAAf,AAA0B,AACxB;AACE,eAAA,AAAC,AAAI,AAAU;AACb,AAAC,cAAD,AAAM,AAAU,AAAqB,AAAU;aAC7C,AAAC,AAAK,AAAQ,AAAE;AAClB,AAAE,eAAF;AAJJ,AAKE,AAAE,qBAEL;uBACF;8BAED,AAAsB,AACpB;;AAAA,AAAI,AAAK,AAAM,AAAiB,AAAK,AAAU,AAC7C,AACE,AAAC,AAAI,AAAU;;;;;wBACb,AAAC,AACC;;AADF,AACe,AACb,AAAmB,AACnB,AAAY,AACZ,AAAM,AACN,AAAK,AACL,AAAI,AACJ,AAAM,AAAC,AAAK,AAAM,AAAsB,AAAK,AAC7C,AAAM,AAAC,AAAE;;qBAAiB,WAAnB,AAAgC;AAAhC,AAAwC,mCARjD,AAQQ,AACN,AAAS,AAAC,AAEd;AAbF,AAaE,AAAE,gBAEL;;mBACD;AACE,AAAC,AAAI;mBAAU,aAAf,sBADF,AAEI,AAAC,AACC,AAAa,AACb,AAAmB,AACnB,AAAY,AACZ,AAAM,AACN,AAAK,AACL,AAAI,AACJ,AAAM,AAAC,AAAK,AAAQ,AACpB,AAAS,AAAC,AAAK,AACf,AAAO,AAAC,AAAK,AACb,AAAgB,AAAC,AAAK,AAE1B,AAAE,AAEL;;;;;AAED,iCAAS,AACP;AACE,AAAC,cAAD;AACE,AAAC,AACC,mBADF,AACW,AAAC,AAAK,AAAW,AAC1B,AAAS,AAAC,AAAK,AAAiB,AAAK,AAAM;AAE3C,AAAC,iBAAD,AACE,AAAc,AAAC,AACf,AAAa,AACb,AAAM;AAEN,AAAC;AAAK,8BAAN,AAAC,qBACD,AAAC,AACC,AAAK,AACL,AAAU,AACV,AAAQ,AACR,AAAQ,AAAC,AAAM,AAAK,AAAM,AAAa,AAAK,AAE9C,AAAC,AAAK;;;AACR,AAAE,AACF,AAAC,AAAS,AAAW,AAAC;;;;;wBACpB,AAAC,AACC;mCADF,AACe,AACb,AAAmB,AACnB,AAAY,AACZ,AAAM,AACN,AAAK,AACL,AAAI,AACJ,AAAM,AAAC,AAAK,AAAQ,AACpB,AAAO,AAAC,AAAK,AACb,AAAS,AAAC,AAAK,AACf,AAAgB,AAAC,AAAK;UAExB,KAAC,MAAD,AACE,WADF,AACY,AAAC,AACX,AAAa,AACb,AAAmB,AACnB,AAAM,AACN,AAAK,AACL,AAAI,AACJ,AAAQ,AAAC,AAAK,AAAM,AACpB,AAAS,AAAC,AAAK,AACf,AAAM,AAAC,AAAK,AAAQ;AAEtB,AAAC,AAAI,AAAU;;;AACb,AAAC,AAAI,uBAAL,AAAe;;;;;AACb,AAAC,yBAAD,AACE,AAAa;2BADf,AAEE,AAAmB,AAAC,AAAkB,AACtC,AAAY,AAAC,AAAkB,AAC/B,AAAM,AACN,AAAK,AACL,AAAI,AACJ,AAAM,AAAC,AAAK,AAAQ,AACpB,AAAO,AAAC,AAAK,AACb,AAAS,AAAC,AAAK,AACf,AAAgB,AAAC,AAAK;;AAE1B,AAAE,AACF,AAAC,AAAI,AAAU,AACb,AAAC,AACC,AAAa,AACb,AAAmB,AAAC,AAAkB,AACtC,AAAY,AAAC,AAAkB,AAC/B,AAAM,AACN,AAAK,AACL,AAAI,AACJ,AAAM,AAAC,AAAK,AAAQ,AACpB,AAAM,AAAC,AAAK,AAAM,AAAmB,AAAK,AAC1C,AAAS,AAAC,AAAK,AAAM,AAAiB,AAAK,AAC3C,AAAO,AAAC,AAAK,AACb,AAAS,AAAC,AAAK,AACf,AAAgB,AAAC,AAAK,AAE1B,AAAE;;;;;;;AACJ,AAAE;AACF,AAAC,AACD,AAAC,AAAI,AAAU;;;;;wBACb,AAAC,AAAI;mCAAL,AAAe;eACb,AAAC,MAAD,AACE,iBAAa,eADf,AAEE,AAAmB,AACnB,AAAY,AACZ,AAAM,AACN,AAAK,AACL,AAAI,AACJ,AAAM,AAAC,AAAK,AAAQ,AACpB,AAAO,AAAC,AAAK,AACb,AAAS,AAAC,AAAK,AACf,AAAgB,AAAC,AAAK;AAE1B,AAAE;;;AACF,AAAC,AAAI,uBAAL,AAAe;;8BACb,AAAC,AACC,AAAa,AACb,AAAmB,AACnB,AAAY,AACZ,AAAM,AACN,AAAK,AACL,AAAI,AACJ,AAAM,AAAC,AAAK,AAAQ,AACpB,AAAO,AAAC,AAAK,AACb,AAAS,AAAC,AAAK,AACf,AAAgB,AAAC,AAAK;AAE1B,AAAE;AACJ,AAAE;;AAEF,AAAC,AAAI,mBAAL,AAAe;AACb,AAAC,kBAAD,AAAK,AAAU;iBACb,AAAC,AACC,AAAa,AACb,AAAmB,AACnB,AAAY,AACZ,AAAM,AACN,AAAK,AACL,AAAI,AACJ,AAAM,AAAC,AAAK,AAAQ,AACpB,AAAO,AAAC,AAAK,AACb,AAAS,AAAC,AAAK,AACf,AAAgB,AAAC,AAAK;AAE1B,AAAE,mBAAF;AACA,AAAC;AAAc,+BAAf;;AAAK;AACH,AAAC,sBAAD,AACE,AAAa,AACb,AAAmB,AACnB,AAAY,AACZ,AAAM,AACN,AAAK,AACL,AAAI,AACJ,AAAM,AAAC,AAAK,AAAQ,AACpB,AAAO,AAAC,AAAK,AACb,AAAS,AAAC,AAAK,AACf,AAAgB,AAAC,AAAK,AAE1B,AAAE,AACJ,AAAE,AACJ,AAAE;;;AACJ,AAAE;;;AAEF,AAAC;;qBAAD,AACE,AAAQ,AAAC,AAAK,AAAM,AACpB,AAAW,AAAC,AACZ,AAAS,AAAC,AAAK,AAAW,AAC1B,AAAa,AACb,AAAK,AACL,AAAW,AAAC,AACZ,AAAM,AACN,AAAS,AAAC,AAAK,AAAiB,AAAK,AAAM,AAC3C,AAAe,AAAC,AAAK;;4BAErB,AAAC,AAAK;AACN,AAAC,AACC,wBADF,AACe,AACb,AAAmB,AACnB,AAAY,AACZ,AAAM,AACN,AAAK,AACL,AAAI,AACJ,AAAM,AAAC,AAAK,AAAQ,AACpB,AAAO,AAAC,AAAK,AACb,AAAS,AAAC,AAAK,AACf,AAAgB,AAAC,AAAK,AAE1B;AAAA,AAAE;uBAEF,AAAC;iBAAD,AACE,AAAQ,AAAC,AAAK,AAAM,AACpB,AAAW,AAAC,AACZ,AAAS,AAAC,AAAK,AAAW,AAC1B,AAAa,AACb,AAAK,AACL,AAAW,AAAC,AACZ,AAAM,AACN,AAAS,AAAC,AAAK,AAAiB,AAAK,AAAM,AAC3C,AAAe,AAAC,AAAK;AAErB,AAAC,gBAAD,AAAK,AAAU;AACb,AAAC,eAAD,AAAC,AAAK;AACN,AAAC,iBAAI,KAAU,QAAf;AACE,AAAC,oBAAD,KAAA,AACE,AAAa,AACb,AAAmB,AACnB,AAAY,AACZ,AAAM,AACN,AAAK,AACL,AAAI,AACJ,AAAM,AAAC,AAAK,AAAQ,AACpB,AAAO,AAAC,AAAK,AACb,AAAS,AAAC,AAAK,AACf,AAAgB,AAAC,AAAK;AAE1B,AAAE;AACJ,AAAE,gCACF,AAAC,AAAI,AAAU,AACb,AAAC,AAAI,AAAU,AACb,AAAC,AACC,AAAa,AACb,AAAe,AACf,AAAK,AACL,AAAM,AAAC,AACP,AAAQ,AAAC,AACT,AAAQ,AAAC,AAAK,AAAM,AACpB,AAAS,AAAC,AAAK;;;AAEnB,AAAE,AACJ,AAAE;;;;;wBACJ,AAAE;;AAAF;;AAhNJ,AAiNE,AAAE,AAEL;;;;AAjbiC;;;uDAobpC,AAAY,AAAY,AACtB;;;AADsB,AACR,AAAU,AACxB;;AAAW,AAAU,6BAFC,AAEX,AAAkB,AAAU,AACvC;AAAW,AAAU,4BAHC,AAGX,AAAoB,AAAC,AAAU,AAAQ,AAAU,AAAQ,AAAU,AAC9E;AAAe,qBAJO,AAIG,AACzB,AAAoB,AAAU,AAC9B;;iBANsB,AAMJ,AAAU,AAC5B;gCAPsB,AAOX,AAAU,AACrB;oBARsB,AAQH,AAAU,AAC7B;AAAc,yBATQ,AASE,AACxB;AAAe,uBAVO,AAUG,AACzB;;AAAuB,8BAXD,AAWW,0BAXX,AAYtB,AAAoB,AAAU,AAC9B;;;AAAe,iBAbO,AAaG,AACzB,AAAgB,AAAU,AAC1B;;;AAAS;;AAAU,0BAfrB,AAAwB;;gCAkBxB;AAAA,AAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qBAvYqC;aAAG,4CAAE;AAAjD,AAA+C,AAAY;;;EA7D/D","file":"/imports/plugins/included/product-variant/client/components/variantForm.js.map","sourcesContent":["import { isEqual } from \"lodash\";\nimport React, { Component, PropTypes } from \"react\";\nimport Velocity from \"velocity-animate\";\nimport \"velocity-animate/velocity.ui\";\nimport update from \"react/lib/update\";\nimport { formatPriceString } from \"/client/api\";\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardGroup,\n  Divider,\n  Select,\n  SettingsCard,\n  Switch,\n  TextField\n} from \"/imports/plugins/core/ui/client/components\";\n\nconst fieldNames = [\n  \"title\",\n  \"originCountry\",\n  \"compareAtPrice\",\n  \"price\",\n  \"width\",\n  \"length\",\n  \"height\",\n  \"weight\",\n  \"taxCode\",\n  \"taxDescription\",\n  \"inventoryQuantity\",\n  \"inventoryPolicy\",\n  \"lowInventoryWarningThreshold\"\n];\n\nconst fieldGroups = {\n  title: { group: \"variantDetails\" },\n  originCountry: { group: \"variantDetails\" },\n  compareAtPrice: { group: \"variantDetails\" },\n  price: { group: \"variantDetails\" },\n  width: { group: \"variantDetails\" },\n  length: { group: \"variantDetails\" },\n  height: { group: \"variantDetails\" },\n  weight: { group: \"variantDetails\" },\n  taxCode: { group: \"taxable\" },\n  taxDescription: { group: \"taxable\" },\n  inventoryQuantity: { group: \"inventoryManagement\" },\n  inventoryPolicy: { group: \"inventoryManagement\" },\n  lowInventoryWarningThreshold: { group: \"inventoryManagement\" }\n};\n\nclass VariantForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      expandedCard: this.fieldGroupForFieldName(props.editFocus),\n      variant: props.variant,\n      inventoryPolicy: props.variant.inventoryPolicy,\n      taxable: props.variant.taxable,\n      inventoryManagement: props.variant.inventoryManagement\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const nextVariant = nextProps.variant || {};\n    const currentVariant = this.props.variant || {};\n\n    if (!isEqual(nextVariant, currentVariant)) {\n      for (const fieldName of fieldNames) {\n        if (nextVariant[fieldName] !== currentVariant[fieldName]) {\n          this.animateFieldFlash(fieldName);\n        }\n      }\n    }\n    const cardGroupName = this.fieldGroupForFieldName(nextProps.editFocus);\n\n    this.setState({\n      expandedCard: cardGroupName,\n      variant: nextProps.variant\n    });\n  }\n\n  fieldGroupForFieldName(field) {\n    // Other wise, if a field was passed\n    // const fieldName = this.state.viewProps.field;\n\n    let fieldName;\n\n    // If the field is an array of field name\n    if (Array.isArray(field) && field.length) {\n      // Use the first field name\n      fieldName = field[0];\n    } else {\n      fieldName = field;\n    }\n\n    const fieldData = fieldGroups[fieldName];\n\n    if (fieldData && fieldData.group) {\n      return fieldData.group;\n    }\n\n    return fieldName;\n  }\n\n  animateFieldFlash(fieldName) {\n    const fieldRef = this.refs[`${fieldName}Input`];\n\n    if (fieldRef) {\n      const input = fieldRef.refs.input;\n\n      Velocity.RunSequence([\n        { e: input, p: { backgroundColor: \"#e2f2e2\" }, o: { duration: 200 } },\n        { e: input, p: { backgroundColor: \"#fff\" }, o: { duration: 100 } }\n      ]);\n    }\n  }\n\n  get variant() {\n    return this.state.variant || this.props.variant || {};\n  }\n\n  handleFieldChange = (event, value, field) => {\n    const newState = update(this.state, {\n      variant: {\n        $merge: {\n          [field]: value\n        }\n      }\n    });\n\n    this.setState(newState);\n  }\n\n  handleFieldBlur = (event, value, field) => {\n    if (this.props.onVariantFieldSave) {\n      this.props.onVariantFieldSave(this.variant._id, field, value);\n    }\n  }\n\n  handleSelectChange = (value, field) => {\n    this.handleFieldChange(event, value, field);\n\n    if (this.props.onVariantFieldSave) {\n      this.props.onVariantFieldSave(this.variant._id, field, value);\n    }\n  }\n\n  handleCheckboxChange = (event, value, field) => {\n    this.setState({\n      [field]: value\n    });\n\n    this.handleFieldBlur(event, value, field);\n  }\n\n  handleCardExpand(cardName) {\n    if (this.props.onCardExpand) {\n      this.props.onCardExpand(cardName);\n    }\n  }\n\n  isExpanded(groupName) {\n    if (this.state.expandedCard && this.state.expandedCard === groupName) {\n      return true;\n    }\n\n    return false;\n  }\n\n  renderTaxCodeField() {\n    if (this.props.isProviderEnabled()) {\n      return (\n        <Select\n          clearable={false}\n          i18nKeyLabel=\"productVariant.taxCode\"\n          i18nKeyPlaceholder=\"productVariant.selectTaxCode\"\n          label=\"Tax Code\"\n          name=\"taxCode\"\n          ref=\"taxCodeInput\"\n          options={this.props.fetchTaxCodes()}\n          onChange={this.handleSelectChange}\n          value={this.variant.taxCode}\n        />\n      );\n    }\n    return (\n      <TextField\n        i18nKeyLabel=\"productVariant.taxCode\"\n        i18nKeyPlaceholder=\"productVariant.selectTaxCode\"\n        placeholder=\"Select Tax Code\"\n        label=\"Tax Code\"\n        name=\"taxCode\"\n        ref=\"taxCodeInput\"\n        value={this.variant.taxCode}\n        onBlur={this.handleFieldBlur}\n        onChange={this.handleFieldChange}\n        onReturnKeyDown={this.handleFieldBlur}\n      />\n    );\n  }\n\n  renderArchiveButton() {\n    if (this.props.isDeleted) {\n      return (\n        <Button\n          icon=\"refresh\"\n          className=\"rui btn btn-default btn-restore-variant flat\"\n          tooltip=\"Restore\"\n          onClick={() => this.props.restoreVariant(this.variant)}\n        />\n      );\n    }\n    return (\n      <Button\n        icon=\"archive\"\n        className=\"rui btn btn-default btn-remove-variant flat\"\n        tooltip=\"Archive\"\n        onClick={() => this.props.removeVariant(this.variant)}\n      />\n    );\n  }\n\n  renderArchivedLabel() {\n    if (this.props.isDeleted) {\n      return (\n        <div className=\"panel-subheading\">\n          <span className=\"badge badge-danger\" data-i18n=\"app.archived\">\n            <span>Archived</span>\n          </span>\n        </div>\n      );\n    }\n  }\n\n  renderQuantityField() {\n    if (this.props.hasChildVariants(this.variant)) {\n      return (\n        <div className=\"col-sm-6\">\n          <TextField\n            i18nKeyLabel=\"productVariant.inventoryQuantity\"\n            i18nKeyPlaceholder=\"0\"\n            placeholder=\"0\"\n            label=\"Quantity\"\n            name=\"inventoryQuantity\"\n            ref=\"inventoryQuantityInput\"\n            value={this.props.onUpdateQuantityField(this.variant)}\n            style={{ backgroundColor: \"lightgrey\", cursor: \"not-allowed\" }}\n            disabled={true}\n          />\n        </div>\n      );\n    }\n    return (\n      <div className=\"col-sm-6\">\n        <TextField\n          i18nKeyLabel=\"productVariant.inventoryQuantity\"\n          i18nKeyPlaceholder=\"0\"\n          placeholder=\"0\"\n          label=\"Quantity\"\n          name=\"inventoryQuantity\"\n          ref=\"inventoryQuantityInput\"\n          value={this.variant.inventoryQuantity}\n          onChange={this.handleFieldChange}\n          onBlur={this.handleFieldBlur}\n          onReturnKeyDown={this.handleFieldBlur}\n        />\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <CardGroup>\n        <Card\n          expanded={this.isExpanded(\"variantDetails\")}\n          onExpand={this.handleCardExpand.bind(this, \"variantDetails\")}\n        >\n          <CardHeader\n            actAsExpander={true}\n            i18nKeyTitle=\"productDetailEdit.variantDetails\"\n            title=\"Variant Details\"\n          >\n            {this.renderArchivedLabel()}\n            <Button\n              icon=\"files-o\"\n              className=\"rui btn btn-default btn-clone-variant flat\"\n              tooltip=\"Duplicate\"\n              onClick={() => this.props.cloneVariant(this.variant)}\n            />\n            {this.renderArchiveButton()}\n          </CardHeader>\n          <CardBody expandable={true}>\n            <TextField\n              i18nKeyLabel=\"productVariant.title\"\n              i18nKeyPlaceholder=\"productVariant.title\"\n              placeholder=\"Label\"\n              label=\"Label\"\n              name=\"title\"\n              ref=\"titleInput\"\n              value={this.variant.title}\n              onBlur={this.handleFieldBlur}\n              onChange={this.handleFieldChange}\n              onReturnKeyDown={this.handleFieldBlur}\n            />\n            <Select\n              clearable={false}\n              i18nKeyLabel=\"productVariant.originCountry\"\n              i18nKeyPlaceholder=\"productVariant.originCountry\"\n              label=\"Origin Country\"\n              name=\"originCountry\"\n              ref=\"countryOfOriginInput\"\n              options={this.props.countries}\n              onChange={this.handleSelectChange}\n              value={this.variant.originCountry}\n            />\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <TextField\n                  i18nKeyLabel=\"productVariant.compareAtPrice\"\n                  i18nKeyPlaceholder={formatPriceString(\"0.00\")}\n                  placeholder={formatPriceString(\"0.00\")}\n                  label=\"MSRP\"\n                  name=\"compareAtPrice\"\n                  ref=\"compareAtPriceInput\"\n                  value={this.variant.compareAtPrice}\n                  onBlur={this.handleFieldBlur}\n                  onChange={this.handleFieldChange}\n                  onReturnKeyDown={this.handleFieldBlur}\n                />\n              </div>\n              <div className=\"col-sm-6\">\n                <TextField\n                  i18nKeyLabel=\"productVariant.price\"\n                  i18nKeyPlaceholder={formatPriceString(\"0.00\")}\n                  placeholder={formatPriceString(\"0.00\")}\n                  label=\"Price\"\n                  name=\"price\"\n                  ref=\"priceInput\"\n                  value={this.variant.price}\n                  style={this.props.greyDisabledFields(this.variant)}\n                  disabled={this.props.hasChildVariants(this.variant)}\n                  onBlur={this.handleFieldBlur}\n                  onChange={this.handleFieldChange}\n                  onReturnKeyDown={this.handleFieldBlur}\n                />\n              </div>\n            </div>\n            <Divider />\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <TextField\n                  i18nKeyLabel=\"productVariant.width\"\n                  i18nKeyPlaceholder=\"0\"\n                  placeholder=\"0\"\n                  label=\"Width\"\n                  name=\"width\"\n                  ref=\"widthInput\"\n                  value={this.variant.width}\n                  onBlur={this.handleFieldBlur}\n                  onChange={this.handleFieldChange}\n                  onReturnKeyDown={this.handleFieldBlur}\n                />\n              </div>\n              <div className=\"col-sm-6\">\n                <TextField\n                  i18nKeyLabel=\"productVariant.length\"\n                  i18nKeyPlaceholder=\"0\"\n                  placeholder=\"0\"\n                  label=\"Length\"\n                  name=\"length\"\n                  ref=\"lengthInput\"\n                  value={this.variant.length}\n                  onBlur={this.handleFieldBlur}\n                  onChange={this.handleFieldChange}\n                  onReturnKeyDown={this.handleFieldBlur}\n                />\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <TextField\n                  i18nKeyLabel=\"productVariant.height\"\n                  i18nKeyPlaceholder=\"0\"\n                  placeholder=\"0\"\n                  label=\"Height\"\n                  name=\"height\"\n                  ref=\"heightInput\"\n                  value={this.variant.height}\n                  onBlur={this.handleFieldBlur}\n                  onChange={this.handleFieldChange}\n                  onReturnKeyDown={this.handleFieldBlur}\n                />\n              </div>\n              <div className=\"col-sm-6\">\n                <TextField\n                  i18nKeyLabel=\"productVariant.weight\"\n                  i18nKeyPlaceholder=\"0\"\n                  placeholder=\"0\"\n                  label=\"Weight\"\n                  name=\"weight\"\n                  ref=\"weightInput\"\n                  value={this.variant.weight}\n                  onBlur={this.handleFieldBlur}\n                  onChange={this.handleFieldChange}\n                  onReturnKeyDown={this.handleFieldBlur}\n                />\n              </div>\n            </div>\n          </CardBody>\n        </Card>\n\n        <SettingsCard\n          enabled={this.state.taxable}\n          expandable={true}\n          expanded={this.isExpanded(\"taxable\")}\n          i18nKeyTitle=\"productVariant.taxable\"\n          name=\"taxable\"\n          showSwitch={true}\n          title=\"Taxable\"\n          onExpand={this.handleCardExpand.bind(this, \"taxable\")}\n          onSwitchChange={this.handleCheckboxChange}\n        >\n          {this.renderTaxCodeField()}\n          <TextField\n            i18nKeyLabel=\"productVariant.taxDescription\"\n            i18nKeyPlaceholder=\"productVariant.taxDescription\"\n            placeholder=\"Tax Description\"\n            label=\"Tax Description\"\n            name=\"taxDescription\"\n            ref=\"taxDescriptionInput\"\n            value={this.variant.taxDescription}\n            onBlur={this.handleFieldBlur}\n            onChange={this.handleFieldChange}\n            onReturnKeyDown={this.handleFieldBlur}\n          />\n        </SettingsCard>\n\n        <SettingsCard\n          enabled={this.state.inventoryManagement}\n          expandable={true}\n          expanded={this.isExpanded(\"inventoryManagement\")}\n          i18nKeyTitle=\"productVariant.inventoryManagement\"\n          name=\"inventoryManagement\"\n          showSwitch={true}\n          title=\"Inventory Tracking\"\n          onExpand={this.handleCardExpand.bind(this, \"inventoryManagement\")}\n          onSwitchChange={this.handleCheckboxChange}\n        >\n          <div className=\"row\">\n            {this.renderQuantityField()}\n            <div className=\"col-sm-6\">\n              <TextField\n                i18nKeyLabel=\"productVariant.lowInventoryWarningThreshold\"\n                i18nKeyPlaceholder=\"0\"\n                placeholder=\"0\"\n                label=\"Warn At\"\n                name=\"lowInventoryWarningThreshold\"\n                ref=\"lowInventoryWarningThresholdInput\"\n                value={this.variant.lowInventoryWarningThreshold}\n                onBlur={this.handleFieldBlur}\n                onChange={this.handleFieldChange}\n                onReturnKeyDown={this.handleFieldBlur}\n              />\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-sm-6\">\n              <Switch\n                i18nKeyLabel=\"productVariant.inventoryPolicy\"\n                i18nKeyOnLabel=\"productVariant.inventoryPolicy\"\n                name=\"inventoryPolicy\"\n                label={\"Allow Backorder\"}\n                onLabel={\"Allow Backorder\"}\n                checked={this.state.inventoryPolicy}\n                onChange={this.handleCheckboxChange}\n              />\n            </div>\n          </div>\n        </SettingsCard>\n      </CardGroup>\n    );\n  }\n}\n\nVariantForm.propTypes = {\n  cloneVariant: PropTypes.func,\n  countries: PropTypes.arrayOf(PropTypes.object),\n  editFocus: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  fetchTaxCodes: PropTypes.func,\n  greyDisabledFields: PropTypes.func,\n  hasChildVariants: PropTypes.func,\n  isDeleted: PropTypes.bool,\n  isProviderEnabled: PropTypes.func,\n  onCardExpand: PropTypes.func,\n  onFieldChange: PropTypes.func,\n  onUpdateQuantityField: PropTypes.func,\n  onVariantFieldSave: PropTypes.func,\n  removeVariant: PropTypes.func,\n  restoreVariant: PropTypes.func,\n  variant: PropTypes.object\n};\n\nexport default VariantForm;\n"]},"hash":"dc990c6468b2fff15620159065d22d1a21848655"}
