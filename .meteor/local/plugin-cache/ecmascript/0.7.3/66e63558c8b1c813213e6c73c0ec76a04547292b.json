{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component","PropTypes"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"},{"kind":"named","imported":"PropTypes","local":"PropTypes"}]},{"source":"classnames","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"classnames"}]},{"source":"/imports/plugins/core/ui/client/components","imported":["Translation"],"specifiers":[{"kind":"named","imported":"Translation","local":"Translation"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/core/ui/client/components/switch/switch.js","filenameRelative":"/imports/plugins/core/ui/client/components/switch/switch.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/core/ui/client/components/switch/switch.js"],"names":["React","Component","PropTypes","classnames","Translation","Switch","defaultProps","checked","propTypes","bool","i18nKeyLabel","string","i18nKeyOnLabel","label","name","onChange","func","onLabel","constructor","props","state","handleChange","event","isInputChecked","renderLabel","labelElement","checkboxRef","ref","_checkbox","render","baseClassName","rui","switch","switchControlClassName"],"mappings":";;;;;;;;;;;;;;AAAA;IAAA;;OAA4C,WAA5C;;;;;;;;;;;;;;;;;;;;;;GACA,AAAO,AAAgB,AACvB,AAAS,AAAmB,AAE5B;;;;;AAgBU,kBAAN;AAEA;;+DAAK,sBAAL,AAAa,AACX,AAAS;;UAMH,gCAAN,AAAuB,AAAC,AAAK,AAAM,AACnC;UAAK,MAAL,AAAW,MAAX,AAAoB,UAApB,AAA2B,AAAgB,AAAK,AAAM,AACvD;0CAJH,AAKC;;;AAED;AAAc,AACZ,AAAI;;kCAsCgB,KADsB,AAExC;YAAU,YAF8B,AAE9B,AAAK,AAAM;AAFvB,AAA+B,AAK/B,AACE,AAAC,AAAM,AAAU,AAAC;;AAxDpB;eAKF;AAFC;;AAEc,AAAC,AAAU,AACxB,AAAI,AAAK,AAAM,AAAU,AACvB;;;2BAQF;UAAA,AAAI,AAAK,AAAM,AAAY,AAAS,AAAK,AAAM,AAAO,AACpD,AACE,AAAC,AAAY,AAAa,AAAC,AAAK,AAAM,AAAO,AAAQ,AAAC,AAAK,AAAM,AAEpE;;AAJD,UAIO,KAAI,MAAA,AAAK,AAAM,YAAX,AAAuB,SAAvB,KAA+B,MAAA,AAAK,AAAM,OAA9C,AAAuD,AAC5D;AADK,AACL,AACE,AAAC,AAAY,AAAa,AAAC,AAAK,AAAM,AAAS,AAAQ,AAAC,AAAK,AAAM,AAEtE,2CAAM,AAAI,AAAK;AAAT,AAAI,AAAW,AAAO;8BAC3B,AACE,AAAC,AAAY,AAAa,AAAC,AAAK,AAAM,AAAO,AAAQ,AAAC,AAAK,AAAM,AAEpE;;;AAED,2CAAA;AAAkB;8BAChB,AACE,AAAC,AAAI,AAAU;AAFf;AAGE,aAAC,SAAD;AAFJ,AAGE,AAAE,AAEL;;8BAED;;AAAA,AAAO,AACR;;wBAED;AAAc,AAAC,AAAQ,AACrB;AAAK;;AAAL,AAAiB,uBADnB,AACE,AACD;;AAED,AAAS,AACP;;AAAM,AAAgB,AAAW,AAC/B,AAAK,AACL;;aAF+B,AAEvB;AAFV,AAAsB,AAKtB,AAAM,AAAyB,AAAW,AACxC;;;;;mBAME,AAAC;sBAAD,AACE,AAAQ,AAAC,AAAK,AAAM,AACpB,AAAS,AAAC,AAAK,AACf,AAAI,AAAC,AAAK,AACV,AAAK;AAEP,AAAC,UAAD,AAAK,AAAU,AAAC;AAChB,AAAC,aAAD,AAAC,AAAK;AACR,AAAE,kBAnFuB,AAyE3B,AAYD;AAJK,AAAe;;0BAOvB;AAAe,uBAAf;;;;;;;;;;;;;;;;;;;;;;;;EAxFA,AAAqB,AAAU,AAC7B;;AADF,AAAM,OACJ,AAAO;WAAP,AAAsB,AACX,AAGX,AAAO,AAAY,AACjB;AALoB,AACpB;OAIS;WACK,UAFG,AAEO,AACxB;gBAAgB,UAHC,AAGS,AAC1B;AAAO,kBAJU,AAIA,UACjB;AAAM,SAAU,UALC,AAMjB;QAAU,UANO,AAMG,AACpB;AAAS,YAAU,UAPrB,AAAmB;qBAUnB,AAAY,AAAO,AACjB;AAXiB,AACE,AACnB;OAXG,OAAS,WAAhB,AAA2B,QAA3B","file":"/imports/plugins/core/ui/client/components/switch/switch.js.map","sourcesContent":["import React, { Component, PropTypes } from \"react\";\nimport classnames from \"classnames\";\nimport { Translation } from \"/imports/plugins/core/ui/client/components\";\n\nclass Switch extends Component {\n  static defaultProps = {\n    checked: false\n  }\n\n  static propTypes = {\n    checked: PropTypes.bool,\n    i18nKeyLabel: PropTypes.string,\n    i18nKeyOnLabel: PropTypes.string,\n    label: PropTypes.string,\n    name: PropTypes.string,\n    onChange: PropTypes.func,\n    onLabel: PropTypes.string\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      checked: false\n    };\n  }\n\n  handleChange = (event) => {\n    if (this.props.onChange) {\n      const isInputChecked = !this.props.checked;\n      this.props.onChange(event, isInputChecked, this.props.name);\n    }\n  }\n\n  renderLabel() {\n    let labelElement;\n\n    if (this.props.checked === false && this.props.label) {\n      labelElement = (\n        <Translation defaultValue={this.props.label} i18nKey={this.props.i18nKeyLabel} />\n      );\n    } else if (this.props.checked === true && this.props.onLabel) {\n      labelElement = (\n        <Translation defaultValue={this.props.onLabel} i18nKey={this.props.i18nKeyOnLabel} />\n      );\n    } else if (this.props.label) {\n      labelElement = (\n        <Translation defaultValue={this.props.label} i18nKey={this.props.i18nKeyLabel} />\n      );\n    }\n\n    if (labelElement) {\n      return (\n        <div className=\"control-label\">\n          {labelElement}\n        </div>\n      );\n    }\n\n    return null;\n  }\n\n  checkboxRef = (ref) => {\n    this._checkbox = ref;\n  }\n\n  render() {\n    const baseClassName = classnames({\n      rui: true,\n      switch: true\n    });\n\n    const switchControlClassName = classnames({\n      \"switch-control\": true,\n      \"active\": this.props.checked\n    });\n\n    return (\n      <label className={baseClassName}>\n        <input\n          checked={this.props.checked}\n          onChange={this.handleChange}\n          ref={this.checkboxRef}\n          type=\"checkbox\"\n        />\n        <div className={switchControlClassName} />\n        {this.renderLabel()}\n      </label>\n    );\n  }\n}\n\nexport default Switch;\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/core/ui/client/components/switch/switch.js.map","sourceFileName":"/imports/plugins/core/ui/client/components/switch/switch.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"switch"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0,\n    Component = void 0,\n    PropTypes = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  },\n  PropTypes: function (v) {\n    PropTypes = v;\n  }\n}, 0);\nvar classnames = void 0;\nmodule.importSync(\"classnames\", {\n  \"default\": function (v) {\n    classnames = v;\n  }\n}, 1);\nvar Translation = void 0;\nmodule.importSync(\"/imports/plugins/core/ui/client/components\", {\n  Translation: function (v) {\n    Translation = v;\n  }\n}, 2);\n\nvar Switch = function (_Component) {\n  (0, _inherits3.default)(Switch, _Component);\n\n  function Switch(props) {\n    (0, _classCallCheck3.default)(this, Switch);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));\n\n    _this.handleChange = function (event) {\n      if (_this.props.onChange) {\n        var isInputChecked = !_this.props.checked;\n\n        _this.props.onChange(event, isInputChecked, _this.props.name);\n      }\n    };\n\n    _this.checkboxRef = function (ref) {\n      _this._checkbox = ref;\n    };\n\n    _this.state = {\n      checked: false\n    };\n    return _this;\n  }\n\n  Switch.prototype.renderLabel = function () {\n    function renderLabel() {\n      var labelElement = void 0;\n\n      if (this.props.checked === false && this.props.label) {\n        labelElement = React.createElement(Translation, {\n          defaultValue: this.props.label,\n          i18nKey: this.props.i18nKeyLabel\n        });\n      } else if (this.props.checked === true && this.props.onLabel) {\n        labelElement = React.createElement(Translation, {\n          defaultValue: this.props.onLabel,\n          i18nKey: this.props.i18nKeyOnLabel\n        });\n      } else if (this.props.label) {\n        labelElement = React.createElement(Translation, {\n          defaultValue: this.props.label,\n          i18nKey: this.props.i18nKeyLabel\n        });\n      }\n\n      if (labelElement) {\n        return React.createElement(\n          \"div\",\n          {\n            className: \"control-label\"\n          },\n          labelElement\n        );\n      }\n\n      return null;\n    }\n\n    return renderLabel;\n  }();\n\n  Switch.prototype.render = function () {\n    function render() {\n      var baseClassName = classnames({\n        rui: true,\n        \"switch\": true\n      });\n      var switchControlClassName = classnames({\n        \"switch-control\": true,\n        \"active\": this.props.checked\n      });\n      return React.createElement(\n        \"label\",\n        {\n          className: baseClassName\n        },\n        React.createElement(\"input\", {\n          checked: this.props.checked,\n          onChange: this.handleChange,\n          ref: this.checkboxRef,\n          type: \"checkbox\"\n        }),\n        React.createElement(\"div\", {\n          className: switchControlClassName\n        }),\n        this.renderLabel()\n      );\n    }\n\n    return render;\n  }();\n\n  return Switch;\n}(Component);\n\nSwitch.defaultProps = {\n  checked: false\n};\nSwitch.propTypes = {\n  checked: PropTypes.bool,\n  i18nKeyLabel: PropTypes.string,\n  i18nKeyOnLabel: PropTypes.string,\n  label: PropTypes.string,\n  name: PropTypes.string,\n  onChange: PropTypes.func,\n  onLabel: PropTypes.string\n};\nmodule.export(\"default\", exports.default = Switch);","map":{"version":3,"sources":["/imports/plugins/core/ui/client/components/switch/switch.js"],"names":["React","Component","PropTypes","classnames","Translation","Switch","defaultProps","checked","propTypes","bool","i18nKeyLabel","string","i18nKeyOnLabel","label","name","onChange","func","onLabel","constructor","props","state","handleChange","event","isInputChecked","renderLabel","labelElement","checkboxRef","ref","_checkbox","render","baseClassName","rui","switch","switchControlClassName"],"mappings":";;;;;;;;;;;;;;AAAA;IAAA;;OAA4C,WAA5C;;;;;;;;;;;;;;;;;;;;;;GACA,AAAO,AAAgB,AACvB,AAAS,AAAmB,AAE5B;;;;;AAgBU,kBAAN;AAEA;;+DAAK,sBAAL,AAAa,AACX,AAAS;;UAMH,gCAAN,AAAuB,AAAC,AAAK,AAAM,AACnC;UAAK,MAAL,AAAW,MAAX,AAAoB,UAApB,AAA2B,AAAgB,AAAK,AAAM,AACvD;0CAJH,AAKC;;;AAED;AAAc,AACZ,AAAI;;kCAsCgB,KADsB,AAExC;YAAU,YAF8B,AAE9B,AAAK,AAAM;AAFvB,AAA+B,AAK/B,AACE,AAAC,AAAM,AAAU,AAAC;;AAxDpB;eAKF;AAFC;;AAEc,AAAC,AAAU,AACxB,AAAI,AAAK,AAAM,AAAU,AACvB;;;2BAQF;UAAA,AAAI,AAAK,AAAM,AAAY,AAAS,AAAK,AAAM,AAAO,AACpD,AACE,AAAC,AAAY,AAAa,AAAC,AAAK,AAAM,AAAO,AAAQ,AAAC,AAAK,AAAM,AAEpE;;AAJD,UAIO,KAAI,MAAA,AAAK,AAAM,YAAX,AAAuB,SAAvB,KAA+B,MAAA,AAAK,AAAM,OAA9C,AAAuD,AAC5D;AADK,AACL,AACE,AAAC,AAAY,AAAa,AAAC,AAAK,AAAM,AAAS,AAAQ,AAAC,AAAK,AAAM,AAEtE,2CAAM,AAAI,AAAK;AAAT,AAAI,AAAW,AAAO;8BAC3B,AACE,AAAC,AAAY,AAAa,AAAC,AAAK,AAAM,AAAO,AAAQ,AAAC,AAAK,AAAM,AAEpE;;;AAED,2CAAA;AAAkB;8BAChB,AACE,AAAC,AAAI,AAAU;AAFf;AAGE,aAAC,SAAD;AAFJ,AAGE,AAAE,AAEL;;8BAED;;AAAA,AAAO,AACR;;wBAED;AAAc,AAAC,AAAQ,AACrB;AAAK;;AAAL,AAAiB,uBADnB,AACE,AACD;;AAED,AAAS,AACP;;AAAM,AAAgB,AAAW,AAC/B,AAAK,AACL;;aAF+B,AAEvB;AAFV,AAAsB,AAKtB,AAAM,AAAyB,AAAW,AACxC;;;;;mBAME,AAAC;sBAAD,AACE,AAAQ,AAAC,AAAK,AAAM,AACpB,AAAS,AAAC,AAAK,AACf,AAAI,AAAC,AAAK,AACV,AAAK;AAEP,AAAC,UAAD,AAAK,AAAU,AAAC;AAChB,AAAC,aAAD,AAAC,AAAK;AACR,AAAE,kBAnFuB,AAyE3B,AAYD;AAJK,AAAe;;0BAOvB;AAAe,uBAAf;;;;;;;;;;;;;;;;;;;;;;;;EAxFA,AAAqB,AAAU,AAC7B;;AADF,AAAM,OACJ,AAAO;WAAP,AAAsB,AACX,AAGX,AAAO,AAAY,AACjB;AALoB,AACpB;OAIS;WACK,UAFG,AAEO,AACxB;gBAAgB,UAHC,AAGS,AAC1B;AAAO,kBAJU,AAIA,UACjB;AAAM,SAAU,UALC,AAMjB;QAAU,UANO,AAMG,AACpB;AAAS,YAAU,UAPrB,AAAmB;qBAUnB,AAAY,AAAO,AACjB;AAXiB,AACE,AACnB;OAXG,OAAS,WAAhB,AAA2B,QAA3B","file":"/imports/plugins/core/ui/client/components/switch/switch.js.map","sourcesContent":["import React, { Component, PropTypes } from \"react\";\nimport classnames from \"classnames\";\nimport { Translation } from \"/imports/plugins/core/ui/client/components\";\n\nclass Switch extends Component {\n  static defaultProps = {\n    checked: false\n  }\n\n  static propTypes = {\n    checked: PropTypes.bool,\n    i18nKeyLabel: PropTypes.string,\n    i18nKeyOnLabel: PropTypes.string,\n    label: PropTypes.string,\n    name: PropTypes.string,\n    onChange: PropTypes.func,\n    onLabel: PropTypes.string\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      checked: false\n    };\n  }\n\n  handleChange = (event) => {\n    if (this.props.onChange) {\n      const isInputChecked = !this.props.checked;\n      this.props.onChange(event, isInputChecked, this.props.name);\n    }\n  }\n\n  renderLabel() {\n    let labelElement;\n\n    if (this.props.checked === false && this.props.label) {\n      labelElement = (\n        <Translation defaultValue={this.props.label} i18nKey={this.props.i18nKeyLabel} />\n      );\n    } else if (this.props.checked === true && this.props.onLabel) {\n      labelElement = (\n        <Translation defaultValue={this.props.onLabel} i18nKey={this.props.i18nKeyOnLabel} />\n      );\n    } else if (this.props.label) {\n      labelElement = (\n        <Translation defaultValue={this.props.label} i18nKey={this.props.i18nKeyLabel} />\n      );\n    }\n\n    if (labelElement) {\n      return (\n        <div className=\"control-label\">\n          {labelElement}\n        </div>\n      );\n    }\n\n    return null;\n  }\n\n  checkboxRef = (ref) => {\n    this._checkbox = ref;\n  }\n\n  render() {\n    const baseClassName = classnames({\n      rui: true,\n      switch: true\n    });\n\n    const switchControlClassName = classnames({\n      \"switch-control\": true,\n      \"active\": this.props.checked\n    });\n\n    return (\n      <label className={baseClassName}>\n        <input\n          checked={this.props.checked}\n          onChange={this.handleChange}\n          ref={this.checkboxRef}\n          type=\"checkbox\"\n        />\n        <div className={switchControlClassName} />\n        {this.renderLabel()}\n      </label>\n    );\n  }\n}\n\nexport default Switch;\n"]},"hash":"66e63558c8b1c813213e6c73c0ec76a04547292b"}
