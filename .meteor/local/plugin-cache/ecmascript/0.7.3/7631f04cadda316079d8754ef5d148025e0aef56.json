{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"/lib/collections","imported":["Templates"],"specifiers":[{"kind":"named","imported":"Templates","local":"Templates"}]}],"exports":{"exported":["methods"],"specifiers":[{"kind":"local","local":"methods","exported":"methods"}]}}},"options":{"filename":"/imports/plugins/core/templates/server/methods.js","filenameRelative":"/imports/plugins/core/templates/server/methods.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/core/templates/server/methods.js"],"names":["Templates","methods","templateId","doc","check","String","Object","update","_id","type","$set","title","name","language","template","subject","enabled","Meteor"],"mappings":"AAAA,OAAS;AAAT;AAA0B;;;IAA1B;;;;;GAEA,AAAO,AAAM,AAAU,AACrB;;AAOA,AAA0B,AAAU,AAAY,AAAK,AACnD,AAAM,AAAY,AAClB;;;;;;KAFmD,AAEnD,AAAM,AAAK,AACX;sBAEA;eACA,QAFA;AAGA;AAAO,AAAU,AAAO,AACtB;AADsB,AACjB,AACL;;;AACC,WACD;YAAM,AACJ;AALG,AAAiB,KAEhB;;eAKM,IAHN,AAGU,AACd;kBAJI,AAIM,AAAI,AACd;AAAS,kBAAI,IALT,AAMJ;AAAS,kBAAI,IANT;qBAJR,AAAO,AAGJ;qBAlBA,AAAgB,AA4BpB,AAGH;AAZY,AAEE,AAAI,AACV;AAHI,AACG,AAAI,AACX;AAUR,AAAO,AAAQ","file":"/imports/plugins/core/templates/server/methods.js.map","sourcesContent":["import { Templates } from \"/lib/collections\";\n\nexport const methods = {\n  /**\n   * templates/email/update\n   * @summary updates email template in Templates collection\n   * @param {String} templateId - id of template to remove\n   * @param {Object} doc - data to update\n   * @return {Number} remove template\n   */\n  \"templates/email/update\": function (templateId, doc) {\n    check(templateId, String);\n    check(doc, Object);\n    // TODO: add permissions\n    // if (!Reaction.hasPermission(\"shipping\")) {\n    //   throw new Meteor.Error(403, \"Access Denied\");\n    // }\n    return Templates.update({\n      _id: templateId,\n      type: \"email\"\n    }, {\n      $set: {\n        title: doc.title,\n        name: doc.name,\n        language: doc.language,\n        template: doc.template,\n        subject: doc.subject,\n        enabled: doc.enabled\n      }\n    });\n  }\n};\n\nMeteor.methods(methods);\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/core/templates/server/methods.js.map","sourceFileName":"/imports/plugins/core/templates/server/methods.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"methods"},"ignored":false,"code":"module.export({\n  methods: function () {\n    return methods;\n  }\n});\nvar Templates = void 0;\nmodule.importSync(\"/lib/collections\", {\n  Templates: function (v) {\n    Templates = v;\n  }\n}, 0);\nvar methods = {\n  /**\n   * templates/email/update\n   * @summary updates email template in Templates collection\n   * @param {String} templateId - id of template to remove\n   * @param {Object} doc - data to update\n   * @return {Number} remove template\n   */\"templates/email/update\": function (templateId, doc) {\n    check(templateId, String);\n    check(doc, Object); // TODO: add permissions\n    // if (!Reaction.hasPermission(\"shipping\")) {\n    //   throw new Meteor.Error(403, \"Access Denied\");\n    // }\n\n    return Templates.update({\n      _id: templateId,\n      type: \"email\"\n    }, {\n      $set: {\n        title: doc.title,\n        name: doc.name,\n        language: doc.language,\n        template: doc.template,\n        subject: doc.subject,\n        enabled: doc.enabled\n      }\n    });\n  }\n};\nMeteor.methods(methods);","map":{"version":3,"sources":["/imports/plugins/core/templates/server/methods.js"],"names":["Templates","methods","templateId","doc","check","String","Object","update","_id","type","$set","title","name","language","template","subject","enabled","Meteor"],"mappings":"AAAA,OAAS;AAAT;AAA0B;;;IAA1B;;;;;GAEA,AAAO,AAAM,AAAU,AACrB;;AAOA,AAA0B,AAAU,AAAY,AAAK,AACnD,AAAM,AAAY,AAClB;;;;;;KAFmD,AAEnD,AAAM,AAAK,AACX;sBAEA;eACA,QAFA;AAGA;AAAO,AAAU,AAAO,AACtB;AADsB,AACjB,AACL;;;AACC,WACD;YAAM,AACJ;AALG,AAAiB,KAEhB;;eAKM,IAHN,AAGU,AACd;kBAJI,AAIM,AAAI,AACd;AAAS,kBAAI,IALT,AAMJ;AAAS,kBAAI,IANT;qBAJR,AAAO,AAGJ;qBAlBA,AAAgB,AA4BpB,AAGH;AAZY,AAEE,AAAI,AACV;AAHI,AACG,AAAI,AACX;AAUR,AAAO,AAAQ","file":"/imports/plugins/core/templates/server/methods.js.map","sourcesContent":["import { Templates } from \"/lib/collections\";\n\nexport const methods = {\n  /**\n   * templates/email/update\n   * @summary updates email template in Templates collection\n   * @param {String} templateId - id of template to remove\n   * @param {Object} doc - data to update\n   * @return {Number} remove template\n   */\n  \"templates/email/update\": function (templateId, doc) {\n    check(templateId, String);\n    check(doc, Object);\n    // TODO: add permissions\n    // if (!Reaction.hasPermission(\"shipping\")) {\n    //   throw new Meteor.Error(403, \"Access Denied\");\n    // }\n    return Templates.update({\n      _id: templateId,\n      type: \"email\"\n    }, {\n      $set: {\n        title: doc.title,\n        name: doc.name,\n        language: doc.language,\n        template: doc.template,\n        subject: doc.subject,\n        enabled: doc.enabled\n      }\n    });\n  }\n};\n\nMeteor.methods(methods);\n"]},"hash":"7631f04cadda316079d8754ef5d148025e0aef56"}
