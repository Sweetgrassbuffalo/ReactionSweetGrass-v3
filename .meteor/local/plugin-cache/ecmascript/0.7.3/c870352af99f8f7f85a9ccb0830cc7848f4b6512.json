{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"/lib/collections","imported":["Shops"],"specifiers":[{"kind":"named","imported":"Shops","local":"Shops"}]},{"source":"/server/api","imported":["Logger","Reaction"],"specifiers":[{"kind":"named","imported":"Logger","local":"Logger"},{"kind":"named","imported":"Reaction","local":"Reaction"}]},{"source":"/server/api/core/import","imported":["Fixture"],"specifiers":[{"kind":"named","imported":"Fixture","local":"Fixture"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/server/startup/load-data.js","filenameRelative":"/server/startup/load-data.js","inputSourceMap":{"version":3,"sources":["/server/startup/load-data.js"],"names":["Shops","Logger","Reaction","Fixture","info","Import","process","Assets","getText","shop","flush","error","shipping","load"],"mappings":"AAAA;OAAsB;;;;;;;;;;;;;;;;;;;;GACtB,AAAS,AAAQ,AAAgB,AACjC,AAAS,AAAe,AAExB,AAAe,AAAY,AACzB;OALO,OAAT,mBAAA;AAQE,AAAO,AAAK,AAEZ;;KAAI,YAAA,AACF,AAAS,AAAO,AAAQ,AAAO,AAAQ,AAAoB,AAAC,AAAS,AAAS,AAAO,AACrF;;MACA;aAAA,AAAS,OAAT,AAAgB,AAAM,QAAtB,6DAHF,AAIC,OAAC,AAAO,AAAO,AACd;;AAAO,aAAP,AAAY,aAAZ,AACD;;gBAED;AAAI,AACF,AAAQ,AAAQ,AAAO,AAAQ,AAAuB,AAAC,AAAS,AAAS,AAAO,AACjF;;AAFD,AAEE,MAAA,AAAO,AAAO,AACd;AAAO,YAAP,AAAY,8CAAZ,0BACD;;gBAED;AAAI,AACF,AAAQ,AAAQ,AAAO,AAAQ,AAAuB,AAAC,AAAU,AAAS,AAAO,AAClF;;AAFD,AAEE,MAAA,AAAO,AAAO,AACd;AAAO,YAAP,AAAY,8CAAZ,2BACD;;gBAED;AAAI,AACF,AAAQ,AAAQ,AAAO,AAAQ,AAAmB,AAAC,AAAS,AAAS,AAAO,AAC7E;;AAFD,AAEE,MAAA,AAAO,AAAO,AACd;AAAO,YAAP,AAAY,0CAAZ,0BACD;AA9BwB,IA+BzB,cACA;gBACA;AACA;;AACA;AAAA,AAAQ,AACT","file":"/server/startup/load-data.js.map","sourcesContent":["import { Shops } from \"/lib/collections\";\nimport { Logger, Reaction } from \"/server/api\";\nimport { Fixture } from \"/server/api/core/import\";\n\nexport default function () {\n  /**\n   * Hook to setup core additional imports during Reaction init (shops process first)\n   */\n  Logger.info(\"Load default data from /private/data/\");\n\n  try {\n    Reaction.Import.process(Assets.getText(\"data/Shops.json\"), [\"name\"], Reaction.Import.shop);\n    // ensure Shops are loaded first.\n    Reaction.Import.flush(Shops);\n  } catch (error) {\n    Logger.info(\"Bypassing loading Shop default data\");\n  }\n\n  try {\n    Fixture.process(Assets.getText(\"data/Shipping.json\"), [\"name\"], Reaction.Import.shipping);\n  } catch (error) {\n    Logger.info(\"Bypassing loading Shipping default data.\");\n  }\n\n  try {\n    Fixture.process(Assets.getText(\"data/Products.json\"), [\"title\"], Reaction.Import.load);\n  } catch (error) {\n    Logger.info(\"Bypassing loading Products default data.\");\n  }\n\n  try {\n    Fixture.process(Assets.getText(\"data/Tags.json\"), [\"name\"], Reaction.Import.load);\n  } catch (error) {\n    Logger.info(\"Bypassing loading Tags default data.\");\n  }\n  //\n  // these will flush and import with the rest of the imports from core init.\n  // but Bulk.find.upsert() = false\n  //\n  Fixture.flush();\n}\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/server/startup/load-data.js.map","sourceFileName":"/server/startup/load-data.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"load-data"},"ignored":false,"code":"var Shops = void 0;\nmodule.importSync(\"/lib/collections\", {\n  Shops: function (v) {\n    Shops = v;\n  }\n}, 0);\nvar Logger = void 0,\n    Reaction = void 0;\nmodule.importSync(\"/server/api\", {\n  Logger: function (v) {\n    Logger = v;\n  },\n  Reaction: function (v) {\n    Reaction = v;\n  }\n}, 1);\nvar Fixture = void 0;\nmodule.importSync(\"/server/api/core/import\", {\n  Fixture: function (v) {\n    Fixture = v;\n  }\n}, 2);\nmodule.export(\"default\", exports.default = function () {\n  /**\n   * Hook to setup core additional imports during Reaction init (shops process first)\n   */Logger.info(\"Load default data from /private/data/\");\n\n  try {\n    Reaction.Import.process(Assets.getText(\"data/Shops.json\"), [\"name\"], Reaction.Import.shop); // ensure Shops are loaded first.\n\n    Reaction.Import.flush(Shops);\n  } catch (error) {\n    Logger.info(\"Bypassing loading Shop default data\");\n  }\n\n  try {\n    Fixture.process(Assets.getText(\"data/Shipping.json\"), [\"name\"], Reaction.Import.shipping);\n  } catch (error) {\n    Logger.info(\"Bypassing loading Shipping default data.\");\n  }\n\n  try {\n    Fixture.process(Assets.getText(\"data/Products.json\"), [\"title\"], Reaction.Import.load);\n  } catch (error) {\n    Logger.info(\"Bypassing loading Products default data.\");\n  }\n\n  try {\n    Fixture.process(Assets.getText(\"data/Tags.json\"), [\"name\"], Reaction.Import.load);\n  } catch (error) {\n    Logger.info(\"Bypassing loading Tags default data.\");\n  } //\n  // these will flush and import with the rest of the imports from core init.\n  // but Bulk.find.upsert() = false\n  //\n\n\n  Fixture.flush();\n});","map":{"version":3,"sources":["/server/startup/load-data.js"],"names":["Shops","Logger","Reaction","Fixture","info","Import","process","Assets","getText","shop","flush","error","shipping","load"],"mappings":"AAAA;OAAsB;;;;;;;;;;;;;;;;;;;;GACtB,AAAS,AAAQ,AAAgB,AACjC,AAAS,AAAe,AAExB,AAAe,AAAY,AACzB;OALO,OAAT,mBAAA;AAQE,AAAO,AAAK,AAEZ;;KAAI,YAAA,AACF,AAAS,AAAO,AAAQ,AAAO,AAAQ,AAAoB,AAAC,AAAS,AAAS,AAAO,AACrF;;MACA;aAAA,AAAS,OAAT,AAAgB,AAAM,QAAtB,6DAHF,AAIC,OAAC,AAAO,AAAO,AACd;;AAAO,aAAP,AAAY,aAAZ,AACD;;gBAED;AAAI,AACF,AAAQ,AAAQ,AAAO,AAAQ,AAAuB,AAAC,AAAS,AAAS,AAAO,AACjF;;AAFD,AAEE,MAAA,AAAO,AAAO,AACd;AAAO,YAAP,AAAY,8CAAZ,0BACD;;gBAED;AAAI,AACF,AAAQ,AAAQ,AAAO,AAAQ,AAAuB,AAAC,AAAU,AAAS,AAAO,AAClF;;AAFD,AAEE,MAAA,AAAO,AAAO,AACd;AAAO,YAAP,AAAY,8CAAZ,2BACD;;gBAED;AAAI,AACF,AAAQ,AAAQ,AAAO,AAAQ,AAAmB,AAAC,AAAS,AAAS,AAAO,AAC7E;;AAFD,AAEE,MAAA,AAAO,AAAO,AACd;AAAO,YAAP,AAAY,0CAAZ,0BACD;AA9BwB,IA+BzB,cACA;gBACA;AACA;;AACA;AAAA,AAAQ,AACT","file":"/server/startup/load-data.js.map","sourcesContent":["import { Shops } from \"/lib/collections\";\nimport { Logger, Reaction } from \"/server/api\";\nimport { Fixture } from \"/server/api/core/import\";\n\nexport default function () {\n  /**\n   * Hook to setup core additional imports during Reaction init (shops process first)\n   */\n  Logger.info(\"Load default data from /private/data/\");\n\n  try {\n    Reaction.Import.process(Assets.getText(\"data/Shops.json\"), [\"name\"], Reaction.Import.shop);\n    // ensure Shops are loaded first.\n    Reaction.Import.flush(Shops);\n  } catch (error) {\n    Logger.info(\"Bypassing loading Shop default data\");\n  }\n\n  try {\n    Fixture.process(Assets.getText(\"data/Shipping.json\"), [\"name\"], Reaction.Import.shipping);\n  } catch (error) {\n    Logger.info(\"Bypassing loading Shipping default data.\");\n  }\n\n  try {\n    Fixture.process(Assets.getText(\"data/Products.json\"), [\"title\"], Reaction.Import.load);\n  } catch (error) {\n    Logger.info(\"Bypassing loading Products default data.\");\n  }\n\n  try {\n    Fixture.process(Assets.getText(\"data/Tags.json\"), [\"name\"], Reaction.Import.load);\n  } catch (error) {\n    Logger.info(\"Bypassing loading Tags default data.\");\n  }\n  //\n  // these will flush and import with the rest of the imports from core init.\n  // but Bulk.find.upsert() = false\n  //\n  Fixture.flush();\n}\n"]},"hash":"c870352af99f8f7f85a9ccb0830cc7848f4b6512"}
