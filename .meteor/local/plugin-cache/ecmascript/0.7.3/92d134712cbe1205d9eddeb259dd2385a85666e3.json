{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"/client/api","imported":["Router"],"specifiers":[{"kind":"named","imported":"Router","local":"Router"}]},{"source":"/lib/collections","imported":["Themes"],"specifiers":[{"kind":"named","imported":"Themes","local":"Themes"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/core/ui/client/templates/themeEditor/themeEditor.js","filenameRelative":"/imports/plugins/core/ui/client/templates/themeEditor/themeEditor.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/core/ui/client/templates/themeEditor/themeEditor.js"],"names":["Router","Themes","Template","uiThemeEditor","onCreated","state","ReactiveDict","setDefault","selectors","annotations","selectedComponent","styles","theme","subscribe","findComponentByName","name","get","_","find","components","component","selectThemeComponent","set","autorun","componentName","getQueryParam","Meteor","call","error","result","annotation","rule","previewTheme","output","$","text","findOne","helpers","instance","stylesObject","stylesArray","map","declarations","selector","label","value","property","updateStyles","componentSelectProps","options","onSelect","events","event","currentTarget","dataset","css","boxShadow","target","closest","attr","data","Alerts","toast"],"mappings":"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","file":"/imports/plugins/core/ui/client/templates/themeEditor/themeEditor.js.map","sourcesContent":["import { Router } from \"/client/api\";\nimport { Themes } from \"/lib/collections\";\n\nTemplate.uiThemeEditor.onCreated(function () {\n  this.state = new ReactiveDict();\n  this.state.setDefault({\n    selectors: [],\n    annotations: {},\n    selectedComponent: null,\n    styles: {},\n    theme: {}\n  });\n\n  this.subscribe(\"Themes\");\n\n  this.findComponentByName = (name) => {\n    const theme = this.state.get(\"theme\");\n    if (theme) {\n      return _.find(theme.components, (component) => {\n        return component.name === name;\n      });\n    }\n  };\n\n  this.selectThemeComponent = (name) => {\n    this.state.set(\"selectedComponent\", name);\n  };\n\n  this.autorun(() => {\n    const componentName = Router.getQueryParam(\"component\");\n    const component = this.findComponentByName(componentName);\n\n    this.state.set(\"selectedComponent\", component);\n    if (component) {\n      // Get a freestyle-like object from raw css\n      Meteor.call(\"ui/cssToObject\", component.styles, (error, result) => {\n        this.state.set(\"styles\", result);\n      });\n\n      const annotations = {};\n\n      for (const annotation of component.annotations) {\n        if (annotation.rule) {\n          annotations[annotation.rule] = annotation;\n        }\n      }\n\n      this.state.set(\"annotations\", annotations);\n    }\n  });\n\n  this.previewTheme = (theme) => {\n    let output = \"\";\n    for (const component of theme.components) {\n      output += component.styles;\n    }\n    $(\"#reactionLayoutStyles\").text(output);\n  };\n\n  this.autorun(() => {\n    const theme = Themes.findOne({ name: \"base\" });\n    this.state.set(\"theme\", theme);\n\n    if (theme) {\n      this.previewTheme(theme);\n    }\n  });\n});\n\n\nTemplate.uiThemeEditor.helpers({\n  component() {\n    const instance = Template.instance();\n    const theme = instance.state.get(\"theme\");\n    const selectedComponent = instance.state.get(\"selectedComponent\");\n    if (theme) {\n      return selectedComponent;\n    }\n  },\n\n  styles() {\n    const instance = Template.instance();\n    const stylesObject = instance.state.get(\"styles\");\n    const annotations = instance.state.get(\"annotations\") || {};\n\n    const stylesArray = _.map(stylesObject, (declarations, selector) => {\n      return {\n        selector,\n        annotation: annotations[selector] || {\n          label: selector\n        },\n        declarations: _.map(declarations, (value, property) => {\n          return {\n            property,\n            value\n          };\n        })\n      };\n    });\n    return stylesArray;\n  },\n\n  updateStyles() {\n    return () => {\n    };\n  },\n\n  componentSelectProps() {\n    const instance = Template.instance();\n    let options = [];\n    const theme = instance.state.get(\"theme\");\n\n    if (theme) {\n      options = theme.components.map((component) => {\n        return {\n          label: component.label || component.name,\n          value: component.name\n        };\n      });\n    }\n\n    return {\n      options,\n      onSelect(value) {\n        instance.selectThemeComponent(value);\n      }\n    };\n  }\n});\n\nTemplate.uiThemeEditor.events({\n  \"mouseover [data-rule]\"(event) {\n    const selector = event.currentTarget.dataset.selector;\n\n    $(selector).css({\n      boxShadow: \"0 0 5px 2px #00dcdd\"\n    });\n  },\n\n  \"mouseout [data-rule]\"(event) {\n    const selector = event.currentTarget.dataset.selector;\n    $(selector).css({\n      boxShadow: \"none\"\n    });\n  },\n\n\n  \"input input\"(event, instance) {\n    const selector = $(event.target).closest(\"[data-selector]\").attr(\"data-selector\");\n    const property = event.target.name;\n    const value = event.target.value;\n    const theme = instance.state.get(\"theme\");\n    const component = instance.state.get(\"selectedComponent\");\n    const styles = instance.state.get(\"styles\");\n\n    styles[selector][property] = value;\n\n    // Update style value\n    const data = {\n      theme,\n      component,\n      styles\n    };\n\n    Meteor.call(\"ui/updateStyles\", data, (error) => {\n      if (error) {\n        Alerts.toast(`Couldn't update theme ${theme.name}`);\n      }\n    });\n  }\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/core/ui/client/templates/themeEditor/themeEditor.js.map","sourceFileName":"/imports/plugins/core/ui/client/templates/themeEditor/themeEditor.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"themeEditor"},"ignored":false,"code":"var Router = void 0;\nmodule.importSync(\"/client/api\", {\n  Router: function (v) {\n    Router = v;\n  }\n}, 0);\nvar Themes = void 0;\nmodule.importSync(\"/lib/collections\", {\n  Themes: function (v) {\n    Themes = v;\n  }\n}, 1);\nTemplate.uiThemeEditor.onCreated(function () {\n  var _this = this;\n\n  this.state = new ReactiveDict();\n  this.state.setDefault({\n    selectors: [],\n    annotations: {},\n    selectedComponent: null,\n    styles: {},\n    theme: {}\n  });\n  this.subscribe(\"Themes\");\n\n  this.findComponentByName = function (name) {\n    var theme = _this.state.get(\"theme\");\n\n    if (theme) {\n      return _.find(theme.components, function (component) {\n        return component.name === name;\n      });\n    }\n  };\n\n  this.selectThemeComponent = function (name) {\n    _this.state.set(\"selectedComponent\", name);\n  };\n\n  this.autorun(function () {\n    var componentName = Router.getQueryParam(\"component\");\n\n    var component = _this.findComponentByName(componentName);\n\n    _this.state.set(\"selectedComponent\", component);\n\n    if (component) {\n      // Get a freestyle-like object from raw css\n      Meteor.call(\"ui/cssToObject\", component.styles, function (error, result) {\n        _this.state.set(\"styles\", result);\n      });\n      var annotations = {};\n\n      for (var _iterator = component.annotations, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var annotation = _ref;\n\n        if (annotation.rule) {\n          annotations[annotation.rule] = annotation;\n        }\n      }\n\n      _this.state.set(\"annotations\", annotations);\n    }\n  });\n\n  this.previewTheme = function (theme) {\n    var output = \"\";\n\n    for (var _iterator2 = theme.components, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var component = _ref2;\n      output += component.styles;\n    }\n\n    $(\"#reactionLayoutStyles\").text(output);\n  };\n\n  this.autorun(function () {\n    var theme = Themes.findOne({\n      name: \"base\"\n    });\n\n    _this.state.set(\"theme\", theme);\n\n    if (theme) {\n      _this.previewTheme(theme);\n    }\n  });\n});\nTemplate.uiThemeEditor.helpers({\n  component: function () {\n    var instance = Template.instance();\n    var theme = instance.state.get(\"theme\");\n    var selectedComponent = instance.state.get(\"selectedComponent\");\n\n    if (theme) {\n      return selectedComponent;\n    }\n  },\n  styles: function () {\n    var instance = Template.instance();\n    var stylesObject = instance.state.get(\"styles\");\n    var annotations = instance.state.get(\"annotations\") || {};\n\n    var stylesArray = _.map(stylesObject, function (declarations, selector) {\n      return {\n        selector: selector,\n        annotation: annotations[selector] || {\n          label: selector\n        },\n        declarations: _.map(declarations, function (value, property) {\n          return {\n            property: property,\n            value: value\n          };\n        })\n      };\n    });\n\n    return stylesArray;\n  },\n  updateStyles: function () {\n    return function () {};\n  },\n  componentSelectProps: function () {\n    var instance = Template.instance();\n    var options = [];\n    var theme = instance.state.get(\"theme\");\n\n    if (theme) {\n      options = theme.components.map(function (component) {\n        return {\n          label: component.label || component.name,\n          value: component.name\n        };\n      });\n    }\n\n    return {\n      options: options,\n      onSelect: function (value) {\n        instance.selectThemeComponent(value);\n      }\n    };\n  }\n});\nTemplate.uiThemeEditor.events({\n  \"mouseover [data-rule]\": function (event) {\n    var selector = event.currentTarget.dataset.selector;\n    $(selector).css({\n      boxShadow: \"0 0 5px 2px #00dcdd\"\n    });\n  },\n  \"mouseout [data-rule]\": function (event) {\n    var selector = event.currentTarget.dataset.selector;\n    $(selector).css({\n      boxShadow: \"none\"\n    });\n  },\n  \"input input\": function (event, instance) {\n    var selector = $(event.target).closest(\"[data-selector]\").attr(\"data-selector\");\n    var property = event.target.name;\n    var value = event.target.value;\n    var theme = instance.state.get(\"theme\");\n    var component = instance.state.get(\"selectedComponent\");\n    var styles = instance.state.get(\"styles\");\n    styles[selector][property] = value; // Update style value\n\n    var data = {\n      theme: theme,\n      component: component,\n      styles: styles\n    };\n    Meteor.call(\"ui/updateStyles\", data, function (error) {\n      if (error) {\n        Alerts.toast(\"Couldn't update theme \" + theme.name);\n      }\n    });\n  }\n});","map":{"version":3,"sources":["/imports/plugins/core/ui/client/templates/themeEditor/themeEditor.js"],"names":["Router","Themes","Template","uiThemeEditor","onCreated","state","ReactiveDict","setDefault","selectors","annotations","selectedComponent","styles","theme","subscribe","findComponentByName","name","get","_","find","components","component","selectThemeComponent","set","autorun","componentName","getQueryParam","Meteor","call","error","result","annotation","rule","previewTheme","output","$","text","findOne","helpers","instance","stylesObject","stylesArray","map","declarations","selector","label","value","property","updateStyles","componentSelectProps","options","onSelect","events","event","currentTarget","dataset","css","boxShadow","target","closest","attr","data","Alerts","toast"],"mappings":"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","file":"/imports/plugins/core/ui/client/templates/themeEditor/themeEditor.js.map","sourcesContent":["import { Router } from \"/client/api\";\nimport { Themes } from \"/lib/collections\";\n\nTemplate.uiThemeEditor.onCreated(function () {\n  this.state = new ReactiveDict();\n  this.state.setDefault({\n    selectors: [],\n    annotations: {},\n    selectedComponent: null,\n    styles: {},\n    theme: {}\n  });\n\n  this.subscribe(\"Themes\");\n\n  this.findComponentByName = (name) => {\n    const theme = this.state.get(\"theme\");\n    if (theme) {\n      return _.find(theme.components, (component) => {\n        return component.name === name;\n      });\n    }\n  };\n\n  this.selectThemeComponent = (name) => {\n    this.state.set(\"selectedComponent\", name);\n  };\n\n  this.autorun(() => {\n    const componentName = Router.getQueryParam(\"component\");\n    const component = this.findComponentByName(componentName);\n\n    this.state.set(\"selectedComponent\", component);\n    if (component) {\n      // Get a freestyle-like object from raw css\n      Meteor.call(\"ui/cssToObject\", component.styles, (error, result) => {\n        this.state.set(\"styles\", result);\n      });\n\n      const annotations = {};\n\n      for (const annotation of component.annotations) {\n        if (annotation.rule) {\n          annotations[annotation.rule] = annotation;\n        }\n      }\n\n      this.state.set(\"annotations\", annotations);\n    }\n  });\n\n  this.previewTheme = (theme) => {\n    let output = \"\";\n    for (const component of theme.components) {\n      output += component.styles;\n    }\n    $(\"#reactionLayoutStyles\").text(output);\n  };\n\n  this.autorun(() => {\n    const theme = Themes.findOne({ name: \"base\" });\n    this.state.set(\"theme\", theme);\n\n    if (theme) {\n      this.previewTheme(theme);\n    }\n  });\n});\n\n\nTemplate.uiThemeEditor.helpers({\n  component() {\n    const instance = Template.instance();\n    const theme = instance.state.get(\"theme\");\n    const selectedComponent = instance.state.get(\"selectedComponent\");\n    if (theme) {\n      return selectedComponent;\n    }\n  },\n\n  styles() {\n    const instance = Template.instance();\n    const stylesObject = instance.state.get(\"styles\");\n    const annotations = instance.state.get(\"annotations\") || {};\n\n    const stylesArray = _.map(stylesObject, (declarations, selector) => {\n      return {\n        selector,\n        annotation: annotations[selector] || {\n          label: selector\n        },\n        declarations: _.map(declarations, (value, property) => {\n          return {\n            property,\n            value\n          };\n        })\n      };\n    });\n    return stylesArray;\n  },\n\n  updateStyles() {\n    return () => {\n    };\n  },\n\n  componentSelectProps() {\n    const instance = Template.instance();\n    let options = [];\n    const theme = instance.state.get(\"theme\");\n\n    if (theme) {\n      options = theme.components.map((component) => {\n        return {\n          label: component.label || component.name,\n          value: component.name\n        };\n      });\n    }\n\n    return {\n      options,\n      onSelect(value) {\n        instance.selectThemeComponent(value);\n      }\n    };\n  }\n});\n\nTemplate.uiThemeEditor.events({\n  \"mouseover [data-rule]\"(event) {\n    const selector = event.currentTarget.dataset.selector;\n\n    $(selector).css({\n      boxShadow: \"0 0 5px 2px #00dcdd\"\n    });\n  },\n\n  \"mouseout [data-rule]\"(event) {\n    const selector = event.currentTarget.dataset.selector;\n    $(selector).css({\n      boxShadow: \"none\"\n    });\n  },\n\n\n  \"input input\"(event, instance) {\n    const selector = $(event.target).closest(\"[data-selector]\").attr(\"data-selector\");\n    const property = event.target.name;\n    const value = event.target.value;\n    const theme = instance.state.get(\"theme\");\n    const component = instance.state.get(\"selectedComponent\");\n    const styles = instance.state.get(\"styles\");\n\n    styles[selector][property] = value;\n\n    // Update style value\n    const data = {\n      theme,\n      component,\n      styles\n    };\n\n    Meteor.call(\"ui/updateStyles\", data, (error) => {\n      if (error) {\n        Alerts.toast(`Couldn't update theme ${theme.name}`);\n      }\n    });\n  }\n});\n"]},"hash":"92d134712cbe1205d9eddeb259dd2385a85666e3"}
