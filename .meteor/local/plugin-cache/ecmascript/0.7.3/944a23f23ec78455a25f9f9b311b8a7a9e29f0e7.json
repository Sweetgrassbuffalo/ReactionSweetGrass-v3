{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/random","imported":["Random"],"specifiers":[{"kind":"named","imported":"Random","local":"Random"}]},{"source":"meteor/aldeed:simple-schema","imported":["SimpleSchema"],"specifiers":[{"kind":"named","imported":"SimpleSchema","local":"SimpleSchema"}]},{"source":"/lib/api","imported":["ReactionProduct","getSlug"],"specifiers":[{"kind":"named","imported":"ReactionProduct","local":"ReactionProduct"},{"kind":"named","imported":"getSlug","local":"getSlug"}]},{"source":"./helpers","imported":["shopIdAutoValue"],"specifiers":[{"kind":"named","imported":"shopIdAutoValue","local":"shopIdAutoValue"}]},{"source":"./metafield","imported":["Metafield"],"specifiers":[{"kind":"named","imported":"Metafield","local":"Metafield"}]},{"source":"./shipping","imported":["ShippingParcel"],"specifiers":[{"kind":"named","imported":"ShippingParcel","local":"ShippingParcel"}]},{"source":"./workflow","imported":["Workflow"],"specifiers":[{"kind":"named","imported":"Workflow","local":"Workflow"}]}],"exports":{"exported":["VariantMedia","ProductPosition","ProductVariant","PriceRange","Product"],"specifiers":[{"kind":"local","local":"VariantMedia","exported":"VariantMedia"},{"kind":"local","local":"ProductPosition","exported":"ProductPosition"},{"kind":"local","local":"ProductVariant","exported":"ProductVariant"},{"kind":"local","local":"PriceRange","exported":"PriceRange"},{"kind":"local","local":"Product","exported":"Product"}]}}},"options":{"filename":"/lib/collections/schemas/products.js","filenameRelative":"/lib/collections/schemas/products.js","inputSourceMap":{"version":3,"sources":["/lib/collections/schemas/products.js"],"names":["Meteor","Random","SimpleSchema","ReactionProduct","getSlug","shopIdAutoValue","Metafield","ShippingParcel","Workflow","VariantMedia","mediaId","type","String","optional","priority","Number","metafields","updatedAt","Date","createdAt","autoValue","isInsert","isUpsert","$setOnInsert","denyUpdate","ProductPosition","tag","position","pinned","Boolean","weight","defaultValue","min","max","ProductVariant","_id","label","ancestors","index","isVisible","isDeleted","barcode","custom","isClient","siblingField","value","compareAtPrice","decimal","fulfillmentService","length","width","height","inventoryManagement","inventoryPolicy","lowInventoryWarningThreshold","inventoryQuantity","checkChildVariants","docId","minOrderQuantity","isLowQuantity","isSoldOut","price","shopId","sku","taxable","taxCode","taxDescription","title","optionTitle","workflow","originCountry","PriceRange","range","Product","pageTitle","description","vendor","positions","Object","blackbox","isBackorder","requiresShipping","parcel","hashtags","twitterMsg","facebookMsg","googleplusMsg","pinterestMsg","metaDescription","handle","slug","id","template","publishedAt","publishedScope"],"mappings":"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","file":"/lib/collections/schemas/products.js.map","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport { Random } from \"meteor/random\";\nimport { SimpleSchema } from \"meteor/aldeed:simple-schema\";\nimport { ReactionProduct, getSlug } from \"/lib/api\";\nimport { shopIdAutoValue } from \"./helpers\";\nimport { Metafield } from \"./metafield\";\nimport { ShippingParcel } from \"./shipping\";\nimport { Workflow } from \"./workflow\";\n\n\n/**\n * VariantMedia Schema\n */\nexport const VariantMedia = new SimpleSchema({\n  mediaId: {\n    type: String,\n    optional: true\n  },\n  priority: {\n    type: Number,\n    optional: true\n  },\n  metafields: {\n    type: [Metafield],\n    optional: true\n  },\n  updatedAt: {\n    type: Date,\n    optional: true\n  },\n  createdAt: {\n    type: Date,\n    autoValue: function () {\n      if (this.isInsert) {\n        return new Date;\n      } else if (this.isUpsert) {\n        return {\n          $setOnInsert: new Date\n        };\n      }\n    },\n    denyUpdate: true\n  }\n});\n\n/**\n * ProductPosition Schema\n */\nexport const ProductPosition = new SimpleSchema({\n  tag: {\n    type: String,\n    optional: true\n  },\n  position: {\n    type: Number,\n    optional: true\n  },\n  pinned: {\n    type: Boolean,\n    optional: true\n  },\n  weight: {\n    type: Number,\n    optional: true,\n    defaultValue: 0,\n    min: 0,\n    max: 3\n  },\n  updatedAt: {\n    type: Date\n  }\n});\n\n/**\n * ProductVariant Schema\n */\nexport const ProductVariant = new SimpleSchema({\n  _id: {\n    type: String,\n    label: \"Variant ID\"\n  },\n  ancestors: {\n    type: [String],\n    defaultValue: []\n  },\n  // since implementing of flattened model this property is used for keeping\n  // array index. This is needed for moving variants through list (drag'n'drop)\n  index: {\n    label: \"Variant position number in list\",\n    type: Number,\n    optional: true\n  },\n  isVisible: {\n    type: Boolean,\n    index: 1,\n    defaultValue: false\n  },\n  isDeleted: {\n    type: Boolean,\n    index: 1,\n    defaultValue: false\n  },\n  barcode: {\n    label: \"Barcode\",\n    type: String,\n    optional: true,\n    custom: function () {\n      if (Meteor.isClient) {\n        if (this.siblingField(\"type\").value === \"inventory\" && !this.value) {\n          return \"required\";\n        }\n      }\n    }\n  },\n  compareAtPrice: {\n    label: \"MSRP\",\n    type: Number,\n    optional: true,\n    decimal: true,\n    min: 0,\n    defaultValue: 0.00\n  },\n  fulfillmentService: {\n    label: \"Fulfillment service\",\n    type: String,\n    optional: true\n  },\n  weight: {\n    label: \"Weight\",\n    type: Number,\n    min: 0,\n    optional: true,\n    defaultValue: 0,\n    custom: function () {\n      if (Meteor.isClient) {\n        if (!(this.siblingField(\"type\").value === \"inventory\" || this.value ||\n          this.value === 0)) {\n          return \"required\";\n        }\n      }\n    }\n  },\n  length: {\n    label: \"Length\",\n    type: Number,\n    min: 0,\n    optional: true,\n    defaultValue: 0\n  },\n  width: {\n    label: \"Width\",\n    type: Number,\n    min: 0,\n    optional: true,\n    defaultValue: 0\n  },\n  height: {\n    label: \"Height\",\n    type: Number,\n    min: 0,\n    optional: true,\n    defaultValue: 0\n  },\n  inventoryManagement: {\n    type: Boolean,\n    label: \"Inventory Tracking\",\n    optional: true,\n    defaultValue: true,\n    custom: function () {\n      if (Meteor.isClient) {\n        if (!(this.siblingField(\"type\").value === \"inventory\" || this.value ||\n          this.value === false)) {\n          return \"required\";\n        }\n      }\n    }\n  },\n  // this represents an ability to sell item without keeping it on stock. In\n  // other words if it is disabled, then you can sell item even if it is not in\n  // stock.\n  inventoryPolicy: {\n    type: Boolean,\n    label: \"Deny when out of stock\",\n    optional: true,\n    defaultValue: false,\n    custom: function () {\n      if (Meteor.isClient) {\n        if (!(this.siblingField(\"type\").value === \"inventory\" || this.value ||\n          this.value === false)) {\n          return \"required\";\n        }\n      }\n    }\n  },\n  lowInventoryWarningThreshold: {\n    type: Number,\n    label: \"Warn at\",\n    min: 0,\n    optional: true,\n    defaultValue: 0\n  },\n  inventoryQuantity: {\n    type: Number,\n    label: \"Quantity\",\n    optional: true,\n    defaultValue: 0,\n    min: 0,\n    custom: function () {\n      if (Meteor.isClient) {\n        if (this.siblingField(\"type\").value !== \"inventory\") {\n          if (ReactionProduct.checkChildVariants(this.docId) === 0 && !this.value) {\n            return \"required\";\n          }\n        }\n      }\n    }\n  },\n  minOrderQuantity: {\n    label: \"Minimum order quantity\",\n    type: Number,\n    optional: true\n  },\n  // Denormalized field: Indicates when at least one of variants\n  // `inventoryQuantity` are lower then their `lowInventoryWarningThreshold`.\n  // This is some kind of marketing course.\n  isLowQuantity: {\n    label: \"Indicates that the product quantity is too low\",\n    type: Boolean,\n    optional: true\n  },\n  // Denormalized field: Indicates when all variants `inventoryQuantity` is zero\n  isSoldOut: {\n    label: \"Indicates when the product quantity is zero\",\n    type: Boolean,\n    optional: true\n  },\n  price: {\n    label: \"Price\",\n    type: Number,\n    decimal: true,\n    defaultValue: 0.00,\n    min: 0\n  },\n  shopId: {\n    type: String,\n    autoValue: shopIdAutoValue,\n    index: 1,\n    label: \"Variant ShopId\"\n  },\n  sku: {\n    label: \"SKU\",\n    type: String,\n    optional: true\n  },\n  type: {\n    label: \"Type\",\n    type: String,\n    defaultValue: \"variant\"\n  },\n  taxable: {\n    label: \"Taxable\",\n    type: Boolean,\n    defaultValue: true,\n    optional: true\n  },\n  taxCode: {\n    label: \"Tax Code\",\n    type: String,\n    defaultValue: \"0000\",\n    optional: true\n  },\n  taxDescription: {\n    type: String,\n    optional: true,\n    label: \"Tax Description\"\n  },\n  // Label for customers\n  title: {\n    label: \"Label\",\n    type: String,\n    defaultValue: \"\"\n  },\n  // Option internal name\n  optionTitle: {\n    label: \"Option\",\n    type: String,\n    optional: true,\n    defaultValue: \"Untitled Option\"\n  },\n  metafields: {\n    type: [Metafield],\n    optional: true\n  },\n  createdAt: {\n    label: \"Created at\",\n    type: Date,\n    optional: true\n  },\n  updatedAt: {\n    label: \"Updated at\",\n    type: Date,\n    optional: true\n  },\n  workflow: {\n    type: Workflow,\n    optional: true\n  },\n  originCountry: {\n    type: String,\n    optional: true\n  }\n});\n\nexport const PriceRange = new SimpleSchema({\n  range: {\n    type: String,\n    defaultValue: \"0.00\"\n  },\n  min: {\n    type: Number,\n    decimal: true,\n    defaultValue: 0,\n    optional: true\n  },\n  max: {\n    type: Number,\n    decimal: true,\n    defaultValue: 0,\n    optional: true\n  }\n});\n\n/**\n * Product Schema\n */\nexport const Product = new SimpleSchema({\n  _id: {\n    type: String,\n    label: \"Product Id\"\n  },\n  ancestors: {\n    type: [String],\n    defaultValue: []\n  },\n  shopId: {\n    type: String,\n    autoValue: shopIdAutoValue,\n    index: 1,\n    label: \"Product ShopId\"\n  },\n  title: {\n    type: String,\n    defaultValue: \"\",\n    label: \"Product Title\"\n  },\n  pageTitle: {\n    type: String,\n    optional: true\n  },\n  description: {\n    type: String,\n    optional: true\n  },\n  originCountry: {\n    type: String,\n    optional: true\n  },\n  type: {\n    label: \"Type\",\n    type: String,\n    defaultValue: \"simple\"\n  },\n  vendor: {\n    type: String,\n    optional: true\n  },\n  metafields: {\n    type: [Metafield],\n    optional: true\n  },\n  positions: {\n    type: Object, // ProductPosition\n    blackbox: true,\n    optional: true\n  },\n  // Denormalized field: object with range string, min and max\n  price: {\n    label: \"Price\",\n    type: PriceRange\n  },\n  // Denormalized field: Indicates when at least one of variants\n  // `inventoryQuantity` are lower then their `lowInventoryWarningThreshold`.\n  // This is some kind of marketing course.\n  isLowQuantity: {\n    label: \"Indicates that the product quantity is too low\",\n    type: Boolean,\n    optional: true\n  },\n  // Denormalized field: Indicates when all variants `inventoryQuantity` is zero\n  isSoldOut: {\n    label: \"Indicates when the product quantity is zero\",\n    type: Boolean,\n    optional: true\n  },\n  // Denormalized field. It is `true` if product not in stock, but customers\n  // anyway could order it.\n  isBackorder: {\n    label: \"Indicates when the seller has allowed the sale of product which\" +\n    \" is not in stock\",\n    type: Boolean,\n    optional: true\n  },\n  requiresShipping: {\n    label: \"Require a shipping address\",\n    type: Boolean,\n    defaultValue: true,\n    optional: true\n  },\n  parcel: {\n    type: ShippingParcel,\n    optional: true\n  },\n  hashtags: {\n    type: [String],\n    optional: true,\n    index: 1\n  },\n  twitterMsg: {\n    type: String,\n    optional: true,\n    max: 140\n  },\n  facebookMsg: {\n    type: String,\n    optional: true,\n    max: 255\n  },\n  googleplusMsg: {\n    type: String,\n    optional: true,\n    max: 255\n  },\n  pinterestMsg: {\n    type: String,\n    optional: true,\n    max: 255\n  },\n  metaDescription: {\n    type: String,\n    optional: true\n  },\n  handle: {\n    type: String,\n    optional: true,\n    index: 1,\n    autoValue: function () {\n      let slug = getSlug(this.value);\n\n      if (!slug && this.siblingField(\"title\").value) {\n        slug = getSlug(this.siblingField(\"title\").value);\n      } else if (!slug) {\n        slug = this.siblingField(\"_id\").value || Random.id();\n      }\n      if (this.isInsert) {\n        return slug;\n      } else if (this.isUpsert) {\n        return {\n          $setOnInsert: slug\n        };\n      }\n    }\n  },\n  isDeleted: {\n    type: Boolean,\n    index: 1,\n    defaultValue: false\n  },\n  isVisible: {\n    type: Boolean,\n    index: 1,\n    defaultValue: false\n  },\n  template: {\n    label: \"Template\",\n    type: String,\n    defaultValue: \"productDetailSimple\"\n  },\n  createdAt: {\n    type: Date,\n    autoValue: function () {\n      if (this.isInsert) {\n        return new Date;\n      } else if (this.isUpsert) {\n        return {\n          $setOnInsert: new Date\n        };\n      }\n    }\n  },\n  updatedAt: {\n    type: Date,\n    autoValue: function () {\n      return new Date;\n    },\n    optional: true\n  },\n  publishedAt: {\n    type: Date,\n    optional: true\n  },\n  publishedScope: {\n    type: String,\n    optional: true\n  },\n  workflow: {\n    type: Workflow,\n    optional: true\n  }\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/lib/collections/schemas/products.js.map","sourceFileName":"/lib/collections/schemas/products.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"products"},"ignored":false,"code":"module.export({\n  VariantMedia: function () {\n    return VariantMedia;\n  },\n  ProductPosition: function () {\n    return ProductPosition;\n  },\n  ProductVariant: function () {\n    return ProductVariant;\n  },\n  PriceRange: function () {\n    return PriceRange;\n  },\n  Product: function () {\n    return Product;\n  }\n});\nvar Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Random = void 0;\nmodule.importSync(\"meteor/random\", {\n  Random: function (v) {\n    Random = v;\n  }\n}, 1);\nvar SimpleSchema = void 0;\nmodule.importSync(\"meteor/aldeed:simple-schema\", {\n  SimpleSchema: function (v) {\n    SimpleSchema = v;\n  }\n}, 2);\nvar ReactionProduct = void 0,\n    getSlug = void 0;\nmodule.importSync(\"/lib/api\", {\n  ReactionProduct: function (v) {\n    ReactionProduct = v;\n  },\n  getSlug: function (v) {\n    getSlug = v;\n  }\n}, 3);\nvar shopIdAutoValue = void 0;\nmodule.importSync(\"./helpers\", {\n  shopIdAutoValue: function (v) {\n    shopIdAutoValue = v;\n  }\n}, 4);\nvar Metafield = void 0;\nmodule.importSync(\"./metafield\", {\n  Metafield: function (v) {\n    Metafield = v;\n  }\n}, 5);\nvar ShippingParcel = void 0;\nmodule.importSync(\"./shipping\", {\n  ShippingParcel: function (v) {\n    ShippingParcel = v;\n  }\n}, 6);\nvar Workflow = void 0;\nmodule.importSync(\"./workflow\", {\n  Workflow: function (v) {\n    Workflow = v;\n  }\n}, 7);\nvar VariantMedia = new SimpleSchema({\n  mediaId: {\n    type: String,\n    optional: true\n  },\n  priority: {\n    type: Number,\n    optional: true\n  },\n  metafields: {\n    type: [Metafield],\n    optional: true\n  },\n  updatedAt: {\n    type: Date,\n    optional: true\n  },\n  createdAt: {\n    type: Date,\n    autoValue: function () {\n      if (this.isInsert) {\n        return new Date();\n      } else if (this.isUpsert) {\n        return {\n          $setOnInsert: new Date()\n        };\n      }\n    },\n    denyUpdate: true\n  }\n});\nvar ProductPosition = new SimpleSchema({\n  tag: {\n    type: String,\n    optional: true\n  },\n  position: {\n    type: Number,\n    optional: true\n  },\n  pinned: {\n    type: Boolean,\n    optional: true\n  },\n  weight: {\n    type: Number,\n    optional: true,\n    defaultValue: 0,\n    min: 0,\n    max: 3\n  },\n  updatedAt: {\n    type: Date\n  }\n});\nvar ProductVariant = new SimpleSchema({\n  _id: {\n    type: String,\n    label: \"Variant ID\"\n  },\n  ancestors: {\n    type: [String],\n    defaultValue: []\n  },\n  // since implementing of flattened model this property is used for keeping\n  // array index. This is needed for moving variants through list (drag'n'drop)\n  index: {\n    label: \"Variant position number in list\",\n    type: Number,\n    optional: true\n  },\n  isVisible: {\n    type: Boolean,\n    index: 1,\n    defaultValue: false\n  },\n  isDeleted: {\n    type: Boolean,\n    index: 1,\n    defaultValue: false\n  },\n  barcode: {\n    label: \"Barcode\",\n    type: String,\n    optional: true,\n    custom: function () {\n      if (Meteor.isClient) {\n        if (this.siblingField(\"type\").value === \"inventory\" && !this.value) {\n          return \"required\";\n        }\n      }\n    }\n  },\n  compareAtPrice: {\n    label: \"MSRP\",\n    type: Number,\n    optional: true,\n    decimal: true,\n    min: 0,\n    defaultValue: 0.00\n  },\n  fulfillmentService: {\n    label: \"Fulfillment service\",\n    type: String,\n    optional: true\n  },\n  weight: {\n    label: \"Weight\",\n    type: Number,\n    min: 0,\n    optional: true,\n    defaultValue: 0,\n    custom: function () {\n      if (Meteor.isClient) {\n        if (!(this.siblingField(\"type\").value === \"inventory\" || this.value || this.value === 0)) {\n          return \"required\";\n        }\n      }\n    }\n  },\n  length: {\n    label: \"Length\",\n    type: Number,\n    min: 0,\n    optional: true,\n    defaultValue: 0\n  },\n  width: {\n    label: \"Width\",\n    type: Number,\n    min: 0,\n    optional: true,\n    defaultValue: 0\n  },\n  height: {\n    label: \"Height\",\n    type: Number,\n    min: 0,\n    optional: true,\n    defaultValue: 0\n  },\n  inventoryManagement: {\n    type: Boolean,\n    label: \"Inventory Tracking\",\n    optional: true,\n    defaultValue: true,\n    custom: function () {\n      if (Meteor.isClient) {\n        if (!(this.siblingField(\"type\").value === \"inventory\" || this.value || this.value === false)) {\n          return \"required\";\n        }\n      }\n    }\n  },\n  // this represents an ability to sell item without keeping it on stock. In\n  // other words if it is disabled, then you can sell item even if it is not in\n  // stock.\n  inventoryPolicy: {\n    type: Boolean,\n    label: \"Deny when out of stock\",\n    optional: true,\n    defaultValue: false,\n    custom: function () {\n      if (Meteor.isClient) {\n        if (!(this.siblingField(\"type\").value === \"inventory\" || this.value || this.value === false)) {\n          return \"required\";\n        }\n      }\n    }\n  },\n  lowInventoryWarningThreshold: {\n    type: Number,\n    label: \"Warn at\",\n    min: 0,\n    optional: true,\n    defaultValue: 0\n  },\n  inventoryQuantity: {\n    type: Number,\n    label: \"Quantity\",\n    optional: true,\n    defaultValue: 0,\n    min: 0,\n    custom: function () {\n      if (Meteor.isClient) {\n        if (this.siblingField(\"type\").value !== \"inventory\") {\n          if (ReactionProduct.checkChildVariants(this.docId) === 0 && !this.value) {\n            return \"required\";\n          }\n        }\n      }\n    }\n  },\n  minOrderQuantity: {\n    label: \"Minimum order quantity\",\n    type: Number,\n    optional: true\n  },\n  // Denormalized field: Indicates when at least one of variants\n  // `inventoryQuantity` are lower then their `lowInventoryWarningThreshold`.\n  // This is some kind of marketing course.\n  isLowQuantity: {\n    label: \"Indicates that the product quantity is too low\",\n    type: Boolean,\n    optional: true\n  },\n  // Denormalized field: Indicates when all variants `inventoryQuantity` is zero\n  isSoldOut: {\n    label: \"Indicates when the product quantity is zero\",\n    type: Boolean,\n    optional: true\n  },\n  price: {\n    label: \"Price\",\n    type: Number,\n    decimal: true,\n    defaultValue: 0.00,\n    min: 0\n  },\n  shopId: {\n    type: String,\n    autoValue: shopIdAutoValue,\n    index: 1,\n    label: \"Variant ShopId\"\n  },\n  sku: {\n    label: \"SKU\",\n    type: String,\n    optional: true\n  },\n  type: {\n    label: \"Type\",\n    type: String,\n    defaultValue: \"variant\"\n  },\n  taxable: {\n    label: \"Taxable\",\n    type: Boolean,\n    defaultValue: true,\n    optional: true\n  },\n  taxCode: {\n    label: \"Tax Code\",\n    type: String,\n    defaultValue: \"0000\",\n    optional: true\n  },\n  taxDescription: {\n    type: String,\n    optional: true,\n    label: \"Tax Description\"\n  },\n  // Label for customers\n  title: {\n    label: \"Label\",\n    type: String,\n    defaultValue: \"\"\n  },\n  // Option internal name\n  optionTitle: {\n    label: \"Option\",\n    type: String,\n    optional: true,\n    defaultValue: \"Untitled Option\"\n  },\n  metafields: {\n    type: [Metafield],\n    optional: true\n  },\n  createdAt: {\n    label: \"Created at\",\n    type: Date,\n    optional: true\n  },\n  updatedAt: {\n    label: \"Updated at\",\n    type: Date,\n    optional: true\n  },\n  workflow: {\n    type: Workflow,\n    optional: true\n  },\n  originCountry: {\n    type: String,\n    optional: true\n  }\n});\nvar PriceRange = new SimpleSchema({\n  range: {\n    type: String,\n    defaultValue: \"0.00\"\n  },\n  min: {\n    type: Number,\n    decimal: true,\n    defaultValue: 0,\n    optional: true\n  },\n  max: {\n    type: Number,\n    decimal: true,\n    defaultValue: 0,\n    optional: true\n  }\n});\nvar Product = new SimpleSchema({\n  _id: {\n    type: String,\n    label: \"Product Id\"\n  },\n  ancestors: {\n    type: [String],\n    defaultValue: []\n  },\n  shopId: {\n    type: String,\n    autoValue: shopIdAutoValue,\n    index: 1,\n    label: \"Product ShopId\"\n  },\n  title: {\n    type: String,\n    defaultValue: \"\",\n    label: \"Product Title\"\n  },\n  pageTitle: {\n    type: String,\n    optional: true\n  },\n  description: {\n    type: String,\n    optional: true\n  },\n  originCountry: {\n    type: String,\n    optional: true\n  },\n  type: {\n    label: \"Type\",\n    type: String,\n    defaultValue: \"simple\"\n  },\n  vendor: {\n    type: String,\n    optional: true\n  },\n  metafields: {\n    type: [Metafield],\n    optional: true\n  },\n  positions: {\n    type: Object,\n    // ProductPosition\n    blackbox: true,\n    optional: true\n  },\n  // Denormalized field: object with range string, min and max\n  price: {\n    label: \"Price\",\n    type: PriceRange\n  },\n  // Denormalized field: Indicates when at least one of variants\n  // `inventoryQuantity` are lower then their `lowInventoryWarningThreshold`.\n  // This is some kind of marketing course.\n  isLowQuantity: {\n    label: \"Indicates that the product quantity is too low\",\n    type: Boolean,\n    optional: true\n  },\n  // Denormalized field: Indicates when all variants `inventoryQuantity` is zero\n  isSoldOut: {\n    label: \"Indicates when the product quantity is zero\",\n    type: Boolean,\n    optional: true\n  },\n  // Denormalized field. It is `true` if product not in stock, but customers\n  // anyway could order it.\n  isBackorder: {\n    label: \"Indicates when the seller has allowed the sale of product which\" + \" is not in stock\",\n    type: Boolean,\n    optional: true\n  },\n  requiresShipping: {\n    label: \"Require a shipping address\",\n    type: Boolean,\n    defaultValue: true,\n    optional: true\n  },\n  parcel: {\n    type: ShippingParcel,\n    optional: true\n  },\n  hashtags: {\n    type: [String],\n    optional: true,\n    index: 1\n  },\n  twitterMsg: {\n    type: String,\n    optional: true,\n    max: 140\n  },\n  facebookMsg: {\n    type: String,\n    optional: true,\n    max: 255\n  },\n  googleplusMsg: {\n    type: String,\n    optional: true,\n    max: 255\n  },\n  pinterestMsg: {\n    type: String,\n    optional: true,\n    max: 255\n  },\n  metaDescription: {\n    type: String,\n    optional: true\n  },\n  handle: {\n    type: String,\n    optional: true,\n    index: 1,\n    autoValue: function () {\n      var slug = getSlug(this.value);\n\n      if (!slug && this.siblingField(\"title\").value) {\n        slug = getSlug(this.siblingField(\"title\").value);\n      } else if (!slug) {\n        slug = this.siblingField(\"_id\").value || Random.id();\n      }\n\n      if (this.isInsert) {\n        return slug;\n      } else if (this.isUpsert) {\n        return {\n          $setOnInsert: slug\n        };\n      }\n    }\n  },\n  isDeleted: {\n    type: Boolean,\n    index: 1,\n    defaultValue: false\n  },\n  isVisible: {\n    type: Boolean,\n    index: 1,\n    defaultValue: false\n  },\n  template: {\n    label: \"Template\",\n    type: String,\n    defaultValue: \"productDetailSimple\"\n  },\n  createdAt: {\n    type: Date,\n    autoValue: function () {\n      if (this.isInsert) {\n        return new Date();\n      } else if (this.isUpsert) {\n        return {\n          $setOnInsert: new Date()\n        };\n      }\n    }\n  },\n  updatedAt: {\n    type: Date,\n    autoValue: function () {\n      return new Date();\n    },\n    optional: true\n  },\n  publishedAt: {\n    type: Date,\n    optional: true\n  },\n  publishedScope: {\n    type: String,\n    optional: true\n  },\n  workflow: {\n    type: Workflow,\n    optional: true\n  }\n});","map":{"version":3,"sources":["/lib/collections/schemas/products.js"],"names":["Meteor","Random","SimpleSchema","ReactionProduct","getSlug","shopIdAutoValue","Metafield","ShippingParcel","Workflow","VariantMedia","mediaId","type","String","optional","priority","Number","metafields","updatedAt","Date","createdAt","autoValue","isInsert","isUpsert","$setOnInsert","denyUpdate","ProductPosition","tag","position","pinned","Boolean","weight","defaultValue","min","max","ProductVariant","_id","label","ancestors","index","isVisible","isDeleted","barcode","custom","isClient","siblingField","value","compareAtPrice","decimal","fulfillmentService","length","width","height","inventoryManagement","inventoryPolicy","lowInventoryWarningThreshold","inventoryQuantity","checkChildVariants","docId","minOrderQuantity","isLowQuantity","isSoldOut","price","shopId","sku","taxable","taxCode","taxDescription","title","optionTitle","workflow","originCountry","PriceRange","range","Product","pageTitle","description","vendor","positions","Object","blackbox","isBackorder","requiresShipping","parcel","hashtags","twitterMsg","facebookMsg","googleplusMsg","pinterestMsg","metaDescription","handle","slug","id","template","publishedAt","publishedScope"],"mappings":"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","file":"/lib/collections/schemas/products.js.map","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport { Random } from \"meteor/random\";\nimport { SimpleSchema } from \"meteor/aldeed:simple-schema\";\nimport { ReactionProduct, getSlug } from \"/lib/api\";\nimport { shopIdAutoValue } from \"./helpers\";\nimport { Metafield } from \"./metafield\";\nimport { ShippingParcel } from \"./shipping\";\nimport { Workflow } from \"./workflow\";\n\n\n/**\n * VariantMedia Schema\n */\nexport const VariantMedia = new SimpleSchema({\n  mediaId: {\n    type: String,\n    optional: true\n  },\n  priority: {\n    type: Number,\n    optional: true\n  },\n  metafields: {\n    type: [Metafield],\n    optional: true\n  },\n  updatedAt: {\n    type: Date,\n    optional: true\n  },\n  createdAt: {\n    type: Date,\n    autoValue: function () {\n      if (this.isInsert) {\n        return new Date;\n      } else if (this.isUpsert) {\n        return {\n          $setOnInsert: new Date\n        };\n      }\n    },\n    denyUpdate: true\n  }\n});\n\n/**\n * ProductPosition Schema\n */\nexport const ProductPosition = new SimpleSchema({\n  tag: {\n    type: String,\n    optional: true\n  },\n  position: {\n    type: Number,\n    optional: true\n  },\n  pinned: {\n    type: Boolean,\n    optional: true\n  },\n  weight: {\n    type: Number,\n    optional: true,\n    defaultValue: 0,\n    min: 0,\n    max: 3\n  },\n  updatedAt: {\n    type: Date\n  }\n});\n\n/**\n * ProductVariant Schema\n */\nexport const ProductVariant = new SimpleSchema({\n  _id: {\n    type: String,\n    label: \"Variant ID\"\n  },\n  ancestors: {\n    type: [String],\n    defaultValue: []\n  },\n  // since implementing of flattened model this property is used for keeping\n  // array index. This is needed for moving variants through list (drag'n'drop)\n  index: {\n    label: \"Variant position number in list\",\n    type: Number,\n    optional: true\n  },\n  isVisible: {\n    type: Boolean,\n    index: 1,\n    defaultValue: false\n  },\n  isDeleted: {\n    type: Boolean,\n    index: 1,\n    defaultValue: false\n  },\n  barcode: {\n    label: \"Barcode\",\n    type: String,\n    optional: true,\n    custom: function () {\n      if (Meteor.isClient) {\n        if (this.siblingField(\"type\").value === \"inventory\" && !this.value) {\n          return \"required\";\n        }\n      }\n    }\n  },\n  compareAtPrice: {\n    label: \"MSRP\",\n    type: Number,\n    optional: true,\n    decimal: true,\n    min: 0,\n    defaultValue: 0.00\n  },\n  fulfillmentService: {\n    label: \"Fulfillment service\",\n    type: String,\n    optional: true\n  },\n  weight: {\n    label: \"Weight\",\n    type: Number,\n    min: 0,\n    optional: true,\n    defaultValue: 0,\n    custom: function () {\n      if (Meteor.isClient) {\n        if (!(this.siblingField(\"type\").value === \"inventory\" || this.value ||\n          this.value === 0)) {\n          return \"required\";\n        }\n      }\n    }\n  },\n  length: {\n    label: \"Length\",\n    type: Number,\n    min: 0,\n    optional: true,\n    defaultValue: 0\n  },\n  width: {\n    label: \"Width\",\n    type: Number,\n    min: 0,\n    optional: true,\n    defaultValue: 0\n  },\n  height: {\n    label: \"Height\",\n    type: Number,\n    min: 0,\n    optional: true,\n    defaultValue: 0\n  },\n  inventoryManagement: {\n    type: Boolean,\n    label: \"Inventory Tracking\",\n    optional: true,\n    defaultValue: true,\n    custom: function () {\n      if (Meteor.isClient) {\n        if (!(this.siblingField(\"type\").value === \"inventory\" || this.value ||\n          this.value === false)) {\n          return \"required\";\n        }\n      }\n    }\n  },\n  // this represents an ability to sell item without keeping it on stock. In\n  // other words if it is disabled, then you can sell item even if it is not in\n  // stock.\n  inventoryPolicy: {\n    type: Boolean,\n    label: \"Deny when out of stock\",\n    optional: true,\n    defaultValue: false,\n    custom: function () {\n      if (Meteor.isClient) {\n        if (!(this.siblingField(\"type\").value === \"inventory\" || this.value ||\n          this.value === false)) {\n          return \"required\";\n        }\n      }\n    }\n  },\n  lowInventoryWarningThreshold: {\n    type: Number,\n    label: \"Warn at\",\n    min: 0,\n    optional: true,\n    defaultValue: 0\n  },\n  inventoryQuantity: {\n    type: Number,\n    label: \"Quantity\",\n    optional: true,\n    defaultValue: 0,\n    min: 0,\n    custom: function () {\n      if (Meteor.isClient) {\n        if (this.siblingField(\"type\").value !== \"inventory\") {\n          if (ReactionProduct.checkChildVariants(this.docId) === 0 && !this.value) {\n            return \"required\";\n          }\n        }\n      }\n    }\n  },\n  minOrderQuantity: {\n    label: \"Minimum order quantity\",\n    type: Number,\n    optional: true\n  },\n  // Denormalized field: Indicates when at least one of variants\n  // `inventoryQuantity` are lower then their `lowInventoryWarningThreshold`.\n  // This is some kind of marketing course.\n  isLowQuantity: {\n    label: \"Indicates that the product quantity is too low\",\n    type: Boolean,\n    optional: true\n  },\n  // Denormalized field: Indicates when all variants `inventoryQuantity` is zero\n  isSoldOut: {\n    label: \"Indicates when the product quantity is zero\",\n    type: Boolean,\n    optional: true\n  },\n  price: {\n    label: \"Price\",\n    type: Number,\n    decimal: true,\n    defaultValue: 0.00,\n    min: 0\n  },\n  shopId: {\n    type: String,\n    autoValue: shopIdAutoValue,\n    index: 1,\n    label: \"Variant ShopId\"\n  },\n  sku: {\n    label: \"SKU\",\n    type: String,\n    optional: true\n  },\n  type: {\n    label: \"Type\",\n    type: String,\n    defaultValue: \"variant\"\n  },\n  taxable: {\n    label: \"Taxable\",\n    type: Boolean,\n    defaultValue: true,\n    optional: true\n  },\n  taxCode: {\n    label: \"Tax Code\",\n    type: String,\n    defaultValue: \"0000\",\n    optional: true\n  },\n  taxDescription: {\n    type: String,\n    optional: true,\n    label: \"Tax Description\"\n  },\n  // Label for customers\n  title: {\n    label: \"Label\",\n    type: String,\n    defaultValue: \"\"\n  },\n  // Option internal name\n  optionTitle: {\n    label: \"Option\",\n    type: String,\n    optional: true,\n    defaultValue: \"Untitled Option\"\n  },\n  metafields: {\n    type: [Metafield],\n    optional: true\n  },\n  createdAt: {\n    label: \"Created at\",\n    type: Date,\n    optional: true\n  },\n  updatedAt: {\n    label: \"Updated at\",\n    type: Date,\n    optional: true\n  },\n  workflow: {\n    type: Workflow,\n    optional: true\n  },\n  originCountry: {\n    type: String,\n    optional: true\n  }\n});\n\nexport const PriceRange = new SimpleSchema({\n  range: {\n    type: String,\n    defaultValue: \"0.00\"\n  },\n  min: {\n    type: Number,\n    decimal: true,\n    defaultValue: 0,\n    optional: true\n  },\n  max: {\n    type: Number,\n    decimal: true,\n    defaultValue: 0,\n    optional: true\n  }\n});\n\n/**\n * Product Schema\n */\nexport const Product = new SimpleSchema({\n  _id: {\n    type: String,\n    label: \"Product Id\"\n  },\n  ancestors: {\n    type: [String],\n    defaultValue: []\n  },\n  shopId: {\n    type: String,\n    autoValue: shopIdAutoValue,\n    index: 1,\n    label: \"Product ShopId\"\n  },\n  title: {\n    type: String,\n    defaultValue: \"\",\n    label: \"Product Title\"\n  },\n  pageTitle: {\n    type: String,\n    optional: true\n  },\n  description: {\n    type: String,\n    optional: true\n  },\n  originCountry: {\n    type: String,\n    optional: true\n  },\n  type: {\n    label: \"Type\",\n    type: String,\n    defaultValue: \"simple\"\n  },\n  vendor: {\n    type: String,\n    optional: true\n  },\n  metafields: {\n    type: [Metafield],\n    optional: true\n  },\n  positions: {\n    type: Object, // ProductPosition\n    blackbox: true,\n    optional: true\n  },\n  // Denormalized field: object with range string, min and max\n  price: {\n    label: \"Price\",\n    type: PriceRange\n  },\n  // Denormalized field: Indicates when at least one of variants\n  // `inventoryQuantity` are lower then their `lowInventoryWarningThreshold`.\n  // This is some kind of marketing course.\n  isLowQuantity: {\n    label: \"Indicates that the product quantity is too low\",\n    type: Boolean,\n    optional: true\n  },\n  // Denormalized field: Indicates when all variants `inventoryQuantity` is zero\n  isSoldOut: {\n    label: \"Indicates when the product quantity is zero\",\n    type: Boolean,\n    optional: true\n  },\n  // Denormalized field. It is `true` if product not in stock, but customers\n  // anyway could order it.\n  isBackorder: {\n    label: \"Indicates when the seller has allowed the sale of product which\" +\n    \" is not in stock\",\n    type: Boolean,\n    optional: true\n  },\n  requiresShipping: {\n    label: \"Require a shipping address\",\n    type: Boolean,\n    defaultValue: true,\n    optional: true\n  },\n  parcel: {\n    type: ShippingParcel,\n    optional: true\n  },\n  hashtags: {\n    type: [String],\n    optional: true,\n    index: 1\n  },\n  twitterMsg: {\n    type: String,\n    optional: true,\n    max: 140\n  },\n  facebookMsg: {\n    type: String,\n    optional: true,\n    max: 255\n  },\n  googleplusMsg: {\n    type: String,\n    optional: true,\n    max: 255\n  },\n  pinterestMsg: {\n    type: String,\n    optional: true,\n    max: 255\n  },\n  metaDescription: {\n    type: String,\n    optional: true\n  },\n  handle: {\n    type: String,\n    optional: true,\n    index: 1,\n    autoValue: function () {\n      let slug = getSlug(this.value);\n\n      if (!slug && this.siblingField(\"title\").value) {\n        slug = getSlug(this.siblingField(\"title\").value);\n      } else if (!slug) {\n        slug = this.siblingField(\"_id\").value || Random.id();\n      }\n      if (this.isInsert) {\n        return slug;\n      } else if (this.isUpsert) {\n        return {\n          $setOnInsert: slug\n        };\n      }\n    }\n  },\n  isDeleted: {\n    type: Boolean,\n    index: 1,\n    defaultValue: false\n  },\n  isVisible: {\n    type: Boolean,\n    index: 1,\n    defaultValue: false\n  },\n  template: {\n    label: \"Template\",\n    type: String,\n    defaultValue: \"productDetailSimple\"\n  },\n  createdAt: {\n    type: Date,\n    autoValue: function () {\n      if (this.isInsert) {\n        return new Date;\n      } else if (this.isUpsert) {\n        return {\n          $setOnInsert: new Date\n        };\n      }\n    }\n  },\n  updatedAt: {\n    type: Date,\n    autoValue: function () {\n      return new Date;\n    },\n    optional: true\n  },\n  publishedAt: {\n    type: Date,\n    optional: true\n  },\n  publishedScope: {\n    type: String,\n    optional: true\n  },\n  workflow: {\n    type: Workflow,\n    optional: true\n  }\n});\n"]},"hash":"944a23f23ec78455a25f9f9b311b8a7a9e29f0e7"}
