{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"lodash/includes","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_includes"}]},{"source":"lodash/pull","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_pull"}]},{"source":"meteor/templating","imported":["Template"],"specifiers":[{"kind":"named","imported":"Template","local":"Template"}]},{"source":"/lib/collections","imported":["ProductSearch","Tags","OrderSearch","AccountSearch"],"specifiers":[{"kind":"named","imported":"ProductSearch","local":"ProductSearch"},{"kind":"named","imported":"Tags","local":"Tags"},{"kind":"named","imported":"OrderSearch","local":"OrderSearch"},{"kind":"named","imported":"AccountSearch","local":"AccountSearch"}]},{"source":"/imports/plugins/core/ui/client/components","imported":["IconButton"],"specifiers":[{"kind":"named","imported":"IconButton","local":"IconButton"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/included/ui-search/client/templates/searchModal/searchModal.js","filenameRelative":"/imports/plugins/included/ui-search/client/templates/searchModal/searchModal.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/included/ui-search/client/templates/searchModal/searchModal.js"],"names":["Template","ProductSearch","Tags","OrderSearch","AccountSearch","IconButton","tagToggle","arr","val","length","push","searchModal","onCreated","state","ReactiveDict","setDefault","initialLoad","slug","canLoadMoreProducts","searchQuery","productSearchResults","tagSearchResults","$","document","on","event","keyCode","view","fadeOut","css","Blaze","remove","autorun","searchCollection","get","facets","sub","subscribe","ready","productResults","find","fetch","productResultsCount","set","hashtags","product","hashtag","tagResults","_id","$in","accountResults","accountResultsCount","orderResults","orderResultsCount","helpers","IconButtonComponent","instance","component","icon","onClick","results","showSearchResults","events","templateInstance","preventDefault","value","addClass","hasClass","newFacet","target","data","toggleClass","delay","focus","not","removeClass","onDestroyed","off"],"mappings":"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","file":"/imports/plugins/included/ui-search/client/templates/searchModal/searchModal.js.map","sourcesContent":["import _ from \"lodash\";\nimport { Template } from \"meteor/templating\";\nimport { ProductSearch, Tags, OrderSearch, AccountSearch } from \"/lib/collections\";\nimport { IconButton } from \"/imports/plugins/core/ui/client/components\";\n\n/*\n * searchModal extra functions\n */\nfunction tagToggle(arr, val) {\n  if (arr.length === _.pull(arr, val).length) {\n    arr.push(val);\n  }\n  return arr;\n}\n\n/*\n * searchModal onCreated\n */\nTemplate.searchModal.onCreated(function () {\n  this.state = new ReactiveDict();\n  this.state.setDefault({\n    initialLoad: true,\n    slug: \"\",\n    canLoadMoreProducts: false,\n    searchQuery: \"\",\n    productSearchResults: [],\n    tagSearchResults: []\n  });\n\n\n  // Allow modal to be closed by clicking ESC\n  // Must be done in Template.searchModal.onCreated and not in Template.searchModal.events\n  $(document).on(\"keyup\", (event) => {\n    if (event.keyCode === 27) {\n      const view = this.view;\n      $(\".js-search-modal\").fadeOut(400, () => {\n        $(\"body\").css(\"overflow\", \"visible\");\n        Blaze.remove(view);\n      });\n    }\n  });\n\n\n  this.autorun(() => {\n    const searchCollection = this.state.get(\"searchCollection\") || \"products\";\n    const searchQuery = this.state.get(\"searchQuery\");\n    const facets = this.state.get(\"facets\") || [];\n    const sub = this.subscribe(\"SearchResults\", searchCollection, searchQuery, facets);\n\n    if (sub.ready()) {\n      /*\n       * Product Search\n       */\n      if (searchCollection === \"products\") {\n        const productResults = ProductSearch.find().fetch();\n        const productResultsCount = productResults.length;\n        this.state.set(\"productSearchResults\", productResults);\n        this.state.set(\"productSearchCount\", productResultsCount);\n\n        const hashtags = [];\n        for (const product of productResults) {\n          if (product.hashtags) {\n            for (const hashtag of product.hashtags) {\n              if (!_.includes(hashtags, hashtag)) {\n                hashtags.push(hashtag);\n              }\n            }\n          }\n        }\n        const tagResults = Tags.find({\n          _id: { $in: hashtags }\n        }).fetch();\n        this.state.set(\"tagSearchResults\", tagResults);\n\n        // TODO: Do we need this?\n        this.state.set(\"accountSearchResults\", \"\");\n        this.state.set(\"orderSearchResults\", \"\");\n      }\n\n      /*\n       * Account Search\n       */\n      if (searchCollection === \"accounts\") {\n        const accountResults = AccountSearch.find().fetch();\n        const accountResultsCount = accountResults.length;\n        this.state.set(\"accountSearchResults\", accountResults);\n        this.state.set(\"accountSearchCount\", accountResultsCount);\n\n        // TODO: Do we need this?\n        this.state.set(\"orderSearchResults\", \"\");\n        this.state.set(\"productSearchResults\", \"\");\n        this.state.set(\"tagSearchResults\", \"\");\n      }\n\n      /*\n       * Order Search\n       */\n      if (searchCollection === \"orders\") {\n        const orderResults = OrderSearch.find().fetch();\n        const orderResultsCount = orderResults.length;\n        this.state.set(\"orderSearchResults\", orderResults);\n        this.state.set(\"orderSearchCount\", orderResultsCount);\n\n\n        // TODO: Do we need this?\n        this.state.set(\"accountSearchResults\", \"\");\n        this.state.set(\"productSearchResults\", \"\");\n        this.state.set(\"tagSearchResults\", \"\");\n      }\n    }\n  });\n});\n\n\n/*\n * searchModal helpers\n */\nTemplate.searchModal.helpers({\n  IconButtonComponent() {\n    const instance = Template.instance();\n    const view = instance.view;\n\n    return {\n      component: IconButton,\n      icon: \"fa fa-times\",\n      onClick() {\n        $(\".js-search-modal\").fadeOut(400, () => {\n          $(\"body\").css(\"overflow\", \"visible\");\n          Blaze.remove(view);\n        });\n      }\n    };\n  },\n  productSearchResults() {\n    const instance = Template.instance();\n    const results = instance.state.get(\"productSearchResults\");\n    return results;\n  },\n  tagSearchResults() {\n    const instance = Template.instance();\n    const results = instance.state.get(\"tagSearchResults\");\n    return results;\n  },\n  showSearchResults() {\n    return false;\n  }\n});\n\n\n/*\n * searchModal events\n */\nTemplate.searchModal.events({\n  // on type, reload Reaction.SaerchResults\n  \"keyup input\": (event, templateInstance) => {\n    event.preventDefault();\n    const searchQuery = templateInstance.find(\"#search-input\").value;\n    templateInstance.state.set(\"searchQuery\", searchQuery);\n    $(\".search-modal-header:not(.active-search)\").addClass(\".active-search\");\n    if (!$(\".search-modal-header\").hasClass(\"active-search\")) {\n      $(\".search-modal-header\").addClass(\"active-search\");\n    }\n  },\n  \"click [data-event-action=filter]\": function (event, templateInstance) {\n    event.preventDefault();\n    const instance = Template.instance();\n    const facets = instance.state.get(\"facets\") || [];\n    const newFacet = $(event.target).data(\"event-value\");\n\n    tagToggle(facets, newFacet);\n\n    $(event.target).toggleClass(\"active-tag btn-active\");\n\n    templateInstance.state.set(\"facets\", facets);\n  },\n  \"click [data-event-action=productClick]\": function () {\n    const instance = Template.instance();\n    const view = instance.view;\n    $(\".js-search-modal\").delay(400).fadeOut(400, () => {\n      Blaze.remove(view);\n    });\n  },\n  \"click [data-event-action=clearSearch]\": function (event, templateInstance) {\n    $(\"#search-input\").val(\"\");\n    $(\"#search-input\").focus();\n    const searchQuery = templateInstance.find(\"#search-input\").value;\n    templateInstance.state.set(\"searchQuery\", searchQuery);\n  },\n  \"click [data-event-action=searchCollection]\": function (event, templateInstance) {\n    event.preventDefault();\n    const searchCollection = $(event.target).data(\"event-value\");\n\n    $(\".search-type-option\").not(event.target).removeClass(\"search-type-active\");\n    $(event.target).addClass(\"search-type-active\");\n\n    $(\"#search-input\").focus();\n\n    templateInstance.state.set(\"searchCollection\", searchCollection);\n  }\n});\n\n\n/*\n * searchModal onDestroyed\n */\nTemplate.searchModal.onDestroyed(() => {\n  // Kill Allow modal to be closed by clicking ESC, which was initiated in Template.searchModal.onCreated\n  $(document).off(\"keyup\");\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/included/ui-search/client/templates/searchModal/searchModal.js.map","sourceFileName":"/imports/plugins/included/ui-search/client/templates/searchModal/searchModal.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"searchModal"},"ignored":false,"code":"var _includes = void 0;\n\nmodule.importSync(\"lodash/includes\", {\n  \"default\": function (v) {\n    _includes = v;\n  }\n}, 0);\n\nvar _pull = void 0;\n\nmodule.importSync(\"lodash/pull\", {\n  \"default\": function (v) {\n    _pull = v;\n  }\n}, 1);\nvar Template = void 0;\nmodule.importSync(\"meteor/templating\", {\n  Template: function (v) {\n    Template = v;\n  }\n}, 2);\nvar ProductSearch = void 0,\n    Tags = void 0,\n    OrderSearch = void 0,\n    AccountSearch = void 0;\nmodule.importSync(\"/lib/collections\", {\n  ProductSearch: function (v) {\n    ProductSearch = v;\n  },\n  Tags: function (v) {\n    Tags = v;\n  },\n  OrderSearch: function (v) {\n    OrderSearch = v;\n  },\n  AccountSearch: function (v) {\n    AccountSearch = v;\n  }\n}, 3);\nvar IconButton = void 0;\nmodule.importSync(\"/imports/plugins/core/ui/client/components\", {\n  IconButton: function (v) {\n    IconButton = v;\n  }\n}, 4);\n\n/*\n * searchModal extra functions\n */function tagToggle(arr, val) {\n  if (arr.length === _pull(arr, val).length) {\n    arr.push(val);\n  }\n\n  return arr;\n} /*\n   * searchModal onCreated\n   */\n\nTemplate.searchModal.onCreated(function () {\n  var _this = this;\n\n  this.state = new ReactiveDict();\n  this.state.setDefault({\n    initialLoad: true,\n    slug: \"\",\n    canLoadMoreProducts: false,\n    searchQuery: \"\",\n    productSearchResults: [],\n    tagSearchResults: []\n  }); // Allow modal to be closed by clicking ESC\n  // Must be done in Template.searchModal.onCreated and not in Template.searchModal.events\n\n  $(document).on(\"keyup\", function (event) {\n    if (event.keyCode === 27) {\n      var view = _this.view;\n      $(\".js-search-modal\").fadeOut(400, function () {\n        $(\"body\").css(\"overflow\", \"visible\");\n        Blaze.remove(view);\n      });\n    }\n  });\n  this.autorun(function () {\n    var searchCollection = _this.state.get(\"searchCollection\") || \"products\";\n\n    var searchQuery = _this.state.get(\"searchQuery\");\n\n    var facets = _this.state.get(\"facets\") || [];\n\n    var sub = _this.subscribe(\"SearchResults\", searchCollection, searchQuery, facets);\n\n    if (sub.ready()) {\n      /*\n       * Product Search\n       */if (searchCollection === \"products\") {\n        var productResults = ProductSearch.find().fetch();\n        var productResultsCount = productResults.length;\n\n        _this.state.set(\"productSearchResults\", productResults);\n\n        _this.state.set(\"productSearchCount\", productResultsCount);\n\n        var hashtags = [];\n\n        for (var _iterator = productResults, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n          var _ref;\n\n          if (_isArray) {\n            if (_i >= _iterator.length) break;\n            _ref = _iterator[_i++];\n          } else {\n            _i = _iterator.next();\n            if (_i.done) break;\n            _ref = _i.value;\n          }\n\n          var product = _ref;\n\n          if (product.hashtags) {\n            for (var _iterator2 = product.hashtags, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n              var _ref2;\n\n              if (_isArray2) {\n                if (_i2 >= _iterator2.length) break;\n                _ref2 = _iterator2[_i2++];\n              } else {\n                _i2 = _iterator2.next();\n                if (_i2.done) break;\n                _ref2 = _i2.value;\n              }\n\n              var hashtag = _ref2;\n\n              if (!_includes(hashtags, hashtag)) {\n                hashtags.push(hashtag);\n              }\n            }\n          }\n        }\n\n        var tagResults = Tags.find({\n          _id: {\n            $in: hashtags\n          }\n        }).fetch();\n\n        _this.state.set(\"tagSearchResults\", tagResults); // TODO: Do we need this?\n\n\n        _this.state.set(\"accountSearchResults\", \"\");\n\n        _this.state.set(\"orderSearchResults\", \"\");\n      } /*\n         * Account Search\n         */\n\n      if (searchCollection === \"accounts\") {\n        var accountResults = AccountSearch.find().fetch();\n        var accountResultsCount = accountResults.length;\n\n        _this.state.set(\"accountSearchResults\", accountResults);\n\n        _this.state.set(\"accountSearchCount\", accountResultsCount); // TODO: Do we need this?\n\n\n        _this.state.set(\"orderSearchResults\", \"\");\n\n        _this.state.set(\"productSearchResults\", \"\");\n\n        _this.state.set(\"tagSearchResults\", \"\");\n      } /*\n         * Order Search\n         */\n\n      if (searchCollection === \"orders\") {\n        var orderResults = OrderSearch.find().fetch();\n        var orderResultsCount = orderResults.length;\n\n        _this.state.set(\"orderSearchResults\", orderResults);\n\n        _this.state.set(\"orderSearchCount\", orderResultsCount); // TODO: Do we need this?\n\n\n        _this.state.set(\"accountSearchResults\", \"\");\n\n        _this.state.set(\"productSearchResults\", \"\");\n\n        _this.state.set(\"tagSearchResults\", \"\");\n      }\n    }\n  });\n}); /*\n     * searchModal helpers\n     */\nTemplate.searchModal.helpers({\n  IconButtonComponent: function () {\n    var instance = Template.instance();\n    var view = instance.view;\n    return {\n      component: IconButton,\n      icon: \"fa fa-times\",\n      onClick: function () {\n        $(\".js-search-modal\").fadeOut(400, function () {\n          $(\"body\").css(\"overflow\", \"visible\");\n          Blaze.remove(view);\n        });\n      }\n    };\n  },\n  productSearchResults: function () {\n    var instance = Template.instance();\n    var results = instance.state.get(\"productSearchResults\");\n    return results;\n  },\n  tagSearchResults: function () {\n    var instance = Template.instance();\n    var results = instance.state.get(\"tagSearchResults\");\n    return results;\n  },\n  showSearchResults: function () {\n    return false;\n  }\n}); /*\n     * searchModal events\n     */\nTemplate.searchModal.events({\n  // on type, reload Reaction.SaerchResults\n  \"keyup input\": function (event, templateInstance) {\n    event.preventDefault();\n    var searchQuery = templateInstance.find(\"#search-input\").value;\n    templateInstance.state.set(\"searchQuery\", searchQuery);\n    $(\".search-modal-header:not(.active-search)\").addClass(\".active-search\");\n\n    if (!$(\".search-modal-header\").hasClass(\"active-search\")) {\n      $(\".search-modal-header\").addClass(\"active-search\");\n    }\n  },\n  \"click [data-event-action=filter]\": function (event, templateInstance) {\n    event.preventDefault();\n    var instance = Template.instance();\n    var facets = instance.state.get(\"facets\") || [];\n    var newFacet = $(event.target).data(\"event-value\");\n    tagToggle(facets, newFacet);\n    $(event.target).toggleClass(\"active-tag btn-active\");\n    templateInstance.state.set(\"facets\", facets);\n  },\n  \"click [data-event-action=productClick]\": function () {\n    var instance = Template.instance();\n    var view = instance.view;\n    $(\".js-search-modal\").delay(400).fadeOut(400, function () {\n      Blaze.remove(view);\n    });\n  },\n  \"click [data-event-action=clearSearch]\": function (event, templateInstance) {\n    $(\"#search-input\").val(\"\");\n    $(\"#search-input\").focus();\n    var searchQuery = templateInstance.find(\"#search-input\").value;\n    templateInstance.state.set(\"searchQuery\", searchQuery);\n  },\n  \"click [data-event-action=searchCollection]\": function (event, templateInstance) {\n    event.preventDefault();\n    var searchCollection = $(event.target).data(\"event-value\");\n    $(\".search-type-option\").not(event.target).removeClass(\"search-type-active\");\n    $(event.target).addClass(\"search-type-active\");\n    $(\"#search-input\").focus();\n    templateInstance.state.set(\"searchCollection\", searchCollection);\n  }\n}); /*\n     * searchModal onDestroyed\n     */\nTemplate.searchModal.onDestroyed(function () {\n  // Kill Allow modal to be closed by clicking ESC, which was initiated in Template.searchModal.onCreated\n  $(document).off(\"keyup\");\n});","map":{"version":3,"sources":["/imports/plugins/included/ui-search/client/templates/searchModal/searchModal.js"],"names":["Template","ProductSearch","Tags","OrderSearch","AccountSearch","IconButton","tagToggle","arr","val","length","push","searchModal","onCreated","state","ReactiveDict","setDefault","initialLoad","slug","canLoadMoreProducts","searchQuery","productSearchResults","tagSearchResults","$","document","on","event","keyCode","view","fadeOut","css","Blaze","remove","autorun","searchCollection","get","facets","sub","subscribe","ready","productResults","find","fetch","productResultsCount","set","hashtags","product","hashtag","tagResults","_id","$in","accountResults","accountResultsCount","orderResults","orderResultsCount","helpers","IconButtonComponent","instance","component","icon","onClick","results","showSearchResults","events","templateInstance","preventDefault","value","addClass","hasClass","newFacet","target","data","toggleClass","delay","focus","not","removeClass","onDestroyed","off"],"mappings":"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","file":"/imports/plugins/included/ui-search/client/templates/searchModal/searchModal.js.map","sourcesContent":["import _ from \"lodash\";\nimport { Template } from \"meteor/templating\";\nimport { ProductSearch, Tags, OrderSearch, AccountSearch } from \"/lib/collections\";\nimport { IconButton } from \"/imports/plugins/core/ui/client/components\";\n\n/*\n * searchModal extra functions\n */\nfunction tagToggle(arr, val) {\n  if (arr.length === _.pull(arr, val).length) {\n    arr.push(val);\n  }\n  return arr;\n}\n\n/*\n * searchModal onCreated\n */\nTemplate.searchModal.onCreated(function () {\n  this.state = new ReactiveDict();\n  this.state.setDefault({\n    initialLoad: true,\n    slug: \"\",\n    canLoadMoreProducts: false,\n    searchQuery: \"\",\n    productSearchResults: [],\n    tagSearchResults: []\n  });\n\n\n  // Allow modal to be closed by clicking ESC\n  // Must be done in Template.searchModal.onCreated and not in Template.searchModal.events\n  $(document).on(\"keyup\", (event) => {\n    if (event.keyCode === 27) {\n      const view = this.view;\n      $(\".js-search-modal\").fadeOut(400, () => {\n        $(\"body\").css(\"overflow\", \"visible\");\n        Blaze.remove(view);\n      });\n    }\n  });\n\n\n  this.autorun(() => {\n    const searchCollection = this.state.get(\"searchCollection\") || \"products\";\n    const searchQuery = this.state.get(\"searchQuery\");\n    const facets = this.state.get(\"facets\") || [];\n    const sub = this.subscribe(\"SearchResults\", searchCollection, searchQuery, facets);\n\n    if (sub.ready()) {\n      /*\n       * Product Search\n       */\n      if (searchCollection === \"products\") {\n        const productResults = ProductSearch.find().fetch();\n        const productResultsCount = productResults.length;\n        this.state.set(\"productSearchResults\", productResults);\n        this.state.set(\"productSearchCount\", productResultsCount);\n\n        const hashtags = [];\n        for (const product of productResults) {\n          if (product.hashtags) {\n            for (const hashtag of product.hashtags) {\n              if (!_.includes(hashtags, hashtag)) {\n                hashtags.push(hashtag);\n              }\n            }\n          }\n        }\n        const tagResults = Tags.find({\n          _id: { $in: hashtags }\n        }).fetch();\n        this.state.set(\"tagSearchResults\", tagResults);\n\n        // TODO: Do we need this?\n        this.state.set(\"accountSearchResults\", \"\");\n        this.state.set(\"orderSearchResults\", \"\");\n      }\n\n      /*\n       * Account Search\n       */\n      if (searchCollection === \"accounts\") {\n        const accountResults = AccountSearch.find().fetch();\n        const accountResultsCount = accountResults.length;\n        this.state.set(\"accountSearchResults\", accountResults);\n        this.state.set(\"accountSearchCount\", accountResultsCount);\n\n        // TODO: Do we need this?\n        this.state.set(\"orderSearchResults\", \"\");\n        this.state.set(\"productSearchResults\", \"\");\n        this.state.set(\"tagSearchResults\", \"\");\n      }\n\n      /*\n       * Order Search\n       */\n      if (searchCollection === \"orders\") {\n        const orderResults = OrderSearch.find().fetch();\n        const orderResultsCount = orderResults.length;\n        this.state.set(\"orderSearchResults\", orderResults);\n        this.state.set(\"orderSearchCount\", orderResultsCount);\n\n\n        // TODO: Do we need this?\n        this.state.set(\"accountSearchResults\", \"\");\n        this.state.set(\"productSearchResults\", \"\");\n        this.state.set(\"tagSearchResults\", \"\");\n      }\n    }\n  });\n});\n\n\n/*\n * searchModal helpers\n */\nTemplate.searchModal.helpers({\n  IconButtonComponent() {\n    const instance = Template.instance();\n    const view = instance.view;\n\n    return {\n      component: IconButton,\n      icon: \"fa fa-times\",\n      onClick() {\n        $(\".js-search-modal\").fadeOut(400, () => {\n          $(\"body\").css(\"overflow\", \"visible\");\n          Blaze.remove(view);\n        });\n      }\n    };\n  },\n  productSearchResults() {\n    const instance = Template.instance();\n    const results = instance.state.get(\"productSearchResults\");\n    return results;\n  },\n  tagSearchResults() {\n    const instance = Template.instance();\n    const results = instance.state.get(\"tagSearchResults\");\n    return results;\n  },\n  showSearchResults() {\n    return false;\n  }\n});\n\n\n/*\n * searchModal events\n */\nTemplate.searchModal.events({\n  // on type, reload Reaction.SaerchResults\n  \"keyup input\": (event, templateInstance) => {\n    event.preventDefault();\n    const searchQuery = templateInstance.find(\"#search-input\").value;\n    templateInstance.state.set(\"searchQuery\", searchQuery);\n    $(\".search-modal-header:not(.active-search)\").addClass(\".active-search\");\n    if (!$(\".search-modal-header\").hasClass(\"active-search\")) {\n      $(\".search-modal-header\").addClass(\"active-search\");\n    }\n  },\n  \"click [data-event-action=filter]\": function (event, templateInstance) {\n    event.preventDefault();\n    const instance = Template.instance();\n    const facets = instance.state.get(\"facets\") || [];\n    const newFacet = $(event.target).data(\"event-value\");\n\n    tagToggle(facets, newFacet);\n\n    $(event.target).toggleClass(\"active-tag btn-active\");\n\n    templateInstance.state.set(\"facets\", facets);\n  },\n  \"click [data-event-action=productClick]\": function () {\n    const instance = Template.instance();\n    const view = instance.view;\n    $(\".js-search-modal\").delay(400).fadeOut(400, () => {\n      Blaze.remove(view);\n    });\n  },\n  \"click [data-event-action=clearSearch]\": function (event, templateInstance) {\n    $(\"#search-input\").val(\"\");\n    $(\"#search-input\").focus();\n    const searchQuery = templateInstance.find(\"#search-input\").value;\n    templateInstance.state.set(\"searchQuery\", searchQuery);\n  },\n  \"click [data-event-action=searchCollection]\": function (event, templateInstance) {\n    event.preventDefault();\n    const searchCollection = $(event.target).data(\"event-value\");\n\n    $(\".search-type-option\").not(event.target).removeClass(\"search-type-active\");\n    $(event.target).addClass(\"search-type-active\");\n\n    $(\"#search-input\").focus();\n\n    templateInstance.state.set(\"searchCollection\", searchCollection);\n  }\n});\n\n\n/*\n * searchModal onDestroyed\n */\nTemplate.searchModal.onDestroyed(() => {\n  // Kill Allow modal to be closed by clicking ESC, which was initiated in Template.searchModal.onCreated\n  $(document).off(\"keyup\");\n});\n"]},"hash":"9de062158314e48d04f3443c69dd9f0aa511c41f"}
