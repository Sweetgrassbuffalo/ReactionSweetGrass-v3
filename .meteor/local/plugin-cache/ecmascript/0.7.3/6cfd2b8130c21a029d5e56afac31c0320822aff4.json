{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"/server/api","imported":["Reaction"],"specifiers":[{"kind":"named","imported":"Reaction","local":"Reaction"}]},{"source":"../lib/paths.js","imported":["*"],"specifiers":[{"kind":"namespace","local":"TemplatePaths"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/included/email-templates/server/index.js","filenameRelative":"/imports/plugins/included/email-templates/server/index.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/included/email-templates/server/index.js"],"names":["Reaction","TemplatePaths","registerTemplate","title","name","coreDefaultTemplate","type","template","Email","getTemplateFile","subject","inviteShopMemberTemplate","resetPaswordTemplate","welcomeEmailTemplate","verifyEmailTemplate","coreOrderNewTemplate","orderShipped","orderRefunded"],"mappings":"AAAA,IAAS;AAAT,OAAyB,WAAzB;;;;;;;;;;GACA,A,AAAA,AAAO,AAAK,AAAmB,AAE/B;AAIA,AAAS,AAAiB,AACxB,AAAO;;;YACa;AACd,SAHkB,AAIxB;QAAU,AAAS,cAJK,AAId,AAAe,AAAgB,AAAc,AACvD;QALF,AAA0B,AAKf;A,AAIX;WAIA;AAb0B,AAGxB,CADA,AAAM,GAeR,AAAS,AAAiB,AACxB,AAAO,AACP,AAAM,AAAc;;QAFtB,A,AAA0B,AAGxB,AAAM,AACN,AAAU,AAAS,AAAM,AAAgB,AAAc,AACvD,AAAS,AAGX;;;;;;sBAIA;QAAA,AAAS,AAAiB,AACxB;AAAO,2BADiB,8BAExB;AAAM,WAFkB,AAEJ,AACpB,AAAM,AACN,AAAU,AAAS,AAAM,AAAgB,AAAc;IAJzD,AAKE,A,AALwB,AAKf,AAGX;;;;;SAIA,AAAS,AAAiB,AACxB;QAAO,cADiB,AAExB;QAFwB,AAElB,AAAc,AACpB;AAAM,YAHkB,6CAIxB;WAJF,AAA0B,A,AAId,AAAS,AAAM,AAAgB,AAAc,AACvD,AAAS,AAGX;AARA;;;;AAaA,SAAA,AAAS;SAAiB,AACjB,AACP;QAAM,cAFkB,AAEJ,AACpB;QAHwB,AAGlB,AACN;YAAU,SAAA,AAAS,MAAT,AAAe,gBAAgB,cAJjB,AAId,AAA6C,AACvD;WALF,AAA0B,AAKf,A,AAIX;AAT0B,AACxB,IAYF,AAIA,AAAS,AAAiB;;;;;AACxB,SAAO;AACD,SAFkB,AAEJ,AACpB;QAHwB,AAGlB,cACN;QAJwB,AAId,AAAS,AAAM,AAAgB,AAAc,AACvD;AAAS,yDALX,AAA0B;A,AAQ1B;AAR0B,AAExB,IAWF,AAAS,AAAiB,AACxB,AAAO,AACP,AAAM,AAAc;;QAFtB,AAA0B,AAGlB,AACN,AAAU,AAAS,AAAM,AAAgB,AAAc,AACvD,A,AAFA,AAES,AAGX;;;;;;;QAKA;AAAS,qBAAT,AAA0B,oCACxB;AAAO,WADiB,AAExB,AAAM,AAAc,AACpB,AAAM;IAHR,AAA0B,AAIxB,AAAU,AAAS,AAAM,AAAgB,AAAc,AACvD,AAAS","file":"/imports/plugins/included/email-templates/server/index.js.map","sourcesContent":["import { Reaction } from \"/server/api\";\nimport * as TemplatePaths from \"../lib/paths.js\";\n\n/*\n * Default email templates\n * Used when no other template is found\n */\nReaction.registerTemplate({\n  title: \"Default\",\n  name: TemplatePaths.coreDefaultTemplate,\n  type: \"email\",\n  template: Reaction.Email.getTemplateFile(TemplatePaths.coreDefaultTemplate),\n  subject: \"A message from {{shop.name}}\"\n});\n\n\n/*\n * Account related email templates\n */\n\n/*\n * Accounts - Invite Shop member\n * When: Admin invites new member to shop\n */\nReaction.registerTemplate({\n  title: \"Accounts - Invite Shop Member\",\n  name: TemplatePaths.inviteShopMemberTemplate,\n  type: \"email\",\n  template: Reaction.Email.getTemplateFile(TemplatePaths.inviteShopMemberTemplate),\n  subject: \"You have been invited to join {{shop.name}}\"\n});\n\n/*\n * Accounts - Reset Password\n * When: User requests to reset their password\n */\nReaction.registerTemplate({\n  title: \"Accounts - Reset Password\",\n  name: TemplatePaths.resetPaswordTemplate,\n  type: \"email\",\n  template: Reaction.Email.getTemplateFile(TemplatePaths.resetPaswordTemplate),\n  subject: \"{{shop.name}}: Here's your password reset link\"\n});\n\n/*\n * Accounts - Welcome Email\n * When: New user signs up for an account\n */\nReaction.registerTemplate({\n  title: \"Accounts - Welcome Email\",\n  name: TemplatePaths.welcomeEmailTemplate,\n  type: \"email\",\n  template: Reaction.Email.getTemplateFile(TemplatePaths.welcomeEmailTemplate),\n  subject: \"You're In. Welcome to {{shop.name}}!\"\n});\n\n/*\n * Accounts - Verify Email\n * When: A user signs up through launchdock\n * TODO: Used by launchdock, I haven't been able to test efficiently\n */\nReaction.registerTemplate({\n  title: \"Accounts - Verify Account (via LaunchDock)\",\n  name: TemplatePaths.verifyEmailTemplate,\n  type: \"email\",\n  template: Reaction.Email.getTemplateFile(TemplatePaths.verifyEmailTemplate),\n  subject: \"{{shopName}}: Please verify your email address\"\n});\n\n\n/*\n * Order (coreOrder) related email templates\n */\n\n/*\n * Orders - New Order Place\n * When: A user completes the cart checkout flow and a new order is placed\n */\nReaction.registerTemplate({\n  title: \"Orders - New Order Placed\",\n  name: TemplatePaths.coreOrderNewTemplate,\n  type: \"email\",\n  template: Reaction.Email.getTemplateFile(TemplatePaths.coreOrderNewTemplate),\n  subject: \"Your order is confirmed - {{order._id}}\"\n});\n\n/*\n * Orders - Order Shipped\n * When: Admin completes the order flow and item is shipped\n * When: Admin resends shipment notification\n */\nReaction.registerTemplate({\n  title: \"Orders - Order Shipped\",\n  name: TemplatePaths.orderShipped,\n  type: \"email\",\n  template: Reaction.Email.getTemplateFile(TemplatePaths.orderShipped),\n  subject: \"{{shop.name}}: Your order has shipped - {{order._id}}\"\n});\n\n/*\n * Orders - Order Refunded\n * When: Admin completes the order flow and item is shipped\n * When: Admin resends shipment notification\n */\nReaction.registerTemplate({\n  title: \"Orders - Order Refunded\",\n  name: TemplatePaths.orderRefunded,\n  type: \"email\",\n  template: Reaction.Email.getTemplateFile(TemplatePaths.orderRefunded),\n  subject: \"{{shop.name}}: Confirmation of refund for {{order._id}}\"\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/included/email-templates/server/index.js.map","sourceFileName":"/imports/plugins/included/email-templates/server/index.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"index"},"ignored":false,"code":"var Reaction = void 0;\nmodule.importSync(\"/server/api\", {\n  Reaction: function (v) {\n    Reaction = v;\n  }\n}, 0);\nvar TemplatePaths = Object.create(null);\nmodule.importSync(\"../lib/paths.js\", {\n  \"*\": function (v, n) {\n    TemplatePaths[n] = v;\n  }\n}, 1);\n/*\n * Default email templates\n * Used when no other template is found\n */Reaction.registerTemplate({\n  title: \"Default\",\n  name: TemplatePaths.coreDefaultTemplate,\n  type: \"email\",\n  template: Reaction.Email.getTemplateFile(TemplatePaths.coreDefaultTemplate),\n  subject: \"A message from {{shop.name}}\"\n}); /*\n     * Account related email templates\n     */ /*\n         * Accounts - Invite Shop member\n         * When: Admin invites new member to shop\n         */\nReaction.registerTemplate({\n  title: \"Accounts - Invite Shop Member\",\n  name: TemplatePaths.inviteShopMemberTemplate,\n  type: \"email\",\n  template: Reaction.Email.getTemplateFile(TemplatePaths.inviteShopMemberTemplate),\n  subject: \"You have been invited to join {{shop.name}}\"\n}); /*\n     * Accounts - Reset Password\n     * When: User requests to reset their password\n     */\nReaction.registerTemplate({\n  title: \"Accounts - Reset Password\",\n  name: TemplatePaths.resetPaswordTemplate,\n  type: \"email\",\n  template: Reaction.Email.getTemplateFile(TemplatePaths.resetPaswordTemplate),\n  subject: \"{{shop.name}}: Here's your password reset link\"\n}); /*\n     * Accounts - Welcome Email\n     * When: New user signs up for an account\n     */\nReaction.registerTemplate({\n  title: \"Accounts - Welcome Email\",\n  name: TemplatePaths.welcomeEmailTemplate,\n  type: \"email\",\n  template: Reaction.Email.getTemplateFile(TemplatePaths.welcomeEmailTemplate),\n  subject: \"You're In. Welcome to {{shop.name}}!\"\n}); /*\n     * Accounts - Verify Email\n     * When: A user signs up through launchdock\n     * TODO: Used by launchdock, I haven't been able to test efficiently\n     */\nReaction.registerTemplate({\n  title: \"Accounts - Verify Account (via LaunchDock)\",\n  name: TemplatePaths.verifyEmailTemplate,\n  type: \"email\",\n  template: Reaction.Email.getTemplateFile(TemplatePaths.verifyEmailTemplate),\n  subject: \"{{shopName}}: Please verify your email address\"\n}); /*\n     * Order (coreOrder) related email templates\n     */ /*\n         * Orders - New Order Place\n         * When: A user completes the cart checkout flow and a new order is placed\n         */\nReaction.registerTemplate({\n  title: \"Orders - New Order Placed\",\n  name: TemplatePaths.coreOrderNewTemplate,\n  type: \"email\",\n  template: Reaction.Email.getTemplateFile(TemplatePaths.coreOrderNewTemplate),\n  subject: \"Your order is confirmed - {{order._id}}\"\n}); /*\n     * Orders - Order Shipped\n     * When: Admin completes the order flow and item is shipped\n     * When: Admin resends shipment notification\n     */\nReaction.registerTemplate({\n  title: \"Orders - Order Shipped\",\n  name: TemplatePaths.orderShipped,\n  type: \"email\",\n  template: Reaction.Email.getTemplateFile(TemplatePaths.orderShipped),\n  subject: \"{{shop.name}}: Your order has shipped - {{order._id}}\"\n}); /*\n     * Orders - Order Refunded\n     * When: Admin completes the order flow and item is shipped\n     * When: Admin resends shipment notification\n     */\nReaction.registerTemplate({\n  title: \"Orders - Order Refunded\",\n  name: TemplatePaths.orderRefunded,\n  type: \"email\",\n  template: Reaction.Email.getTemplateFile(TemplatePaths.orderRefunded),\n  subject: \"{{shop.name}}: Confirmation of refund for {{order._id}}\"\n});","map":{"version":3,"sources":["/imports/plugins/included/email-templates/server/index.js"],"names":["Reaction","TemplatePaths","registerTemplate","title","name","coreDefaultTemplate","type","template","Email","getTemplateFile","subject","inviteShopMemberTemplate","resetPaswordTemplate","welcomeEmailTemplate","verifyEmailTemplate","coreOrderNewTemplate","orderShipped","orderRefunded"],"mappings":"AAAA,IAAS;AAAT,OAAyB,WAAzB;;;;;;;;;;GACA,A,AAAA,AAAO,AAAK,AAAmB,AAE/B;AAIA,AAAS,AAAiB,AACxB,AAAO;;;YACa;AACd,SAHkB,AAIxB;QAAU,AAAS,cAJK,AAId,AAAe,AAAgB,AAAc,AACvD;QALF,AAA0B,AAKf;A,AAIX;WAIA;AAb0B,AAGxB,CADA,AAAM,GAeR,AAAS,AAAiB,AACxB,AAAO,AACP,AAAM,AAAc;;QAFtB,A,AAA0B,AAGxB,AAAM,AACN,AAAU,AAAS,AAAM,AAAgB,AAAc,AACvD,AAAS,AAGX;;;;;;sBAIA;QAAA,AAAS,AAAiB,AACxB;AAAO,2BADiB,8BAExB;AAAM,WAFkB,AAEJ,AACpB,AAAM,AACN,AAAU,AAAS,AAAM,AAAgB,AAAc;IAJzD,AAKE,A,AALwB,AAKf,AAGX;;;;;SAIA,AAAS,AAAiB,AACxB;QAAO,cADiB,AAExB;QAFwB,AAElB,AAAc,AACpB;AAAM,YAHkB,6CAIxB;WAJF,AAA0B,A,AAId,AAAS,AAAM,AAAgB,AAAc,AACvD,AAAS,AAGX;AARA;;;;AAaA,SAAA,AAAS;SAAiB,AACjB,AACP;QAAM,cAFkB,AAEJ,AACpB;QAHwB,AAGlB,AACN;YAAU,SAAA,AAAS,MAAT,AAAe,gBAAgB,cAJjB,AAId,AAA6C,AACvD;WALF,AAA0B,AAKf,A,AAIX;AAT0B,AACxB,IAYF,AAIA,AAAS,AAAiB;;;;;AACxB,SAAO;AACD,SAFkB,AAEJ,AACpB;QAHwB,AAGlB,cACN;QAJwB,AAId,AAAS,AAAM,AAAgB,AAAc,AACvD;AAAS,yDALX,AAA0B;A,AAQ1B;AAR0B,AAExB,IAWF,AAAS,AAAiB,AACxB,AAAO,AACP,AAAM,AAAc;;QAFtB,AAA0B,AAGlB,AACN,AAAU,AAAS,AAAM,AAAgB,AAAc,AACvD,A,AAFA,AAES,AAGX;;;;;;;QAKA;AAAS,qBAAT,AAA0B,oCACxB;AAAO,WADiB,AAExB,AAAM,AAAc,AACpB,AAAM;IAHR,AAA0B,AAIxB,AAAU,AAAS,AAAM,AAAgB,AAAc,AACvD,AAAS","file":"/imports/plugins/included/email-templates/server/index.js.map","sourcesContent":["import { Reaction } from \"/server/api\";\nimport * as TemplatePaths from \"../lib/paths.js\";\n\n/*\n * Default email templates\n * Used when no other template is found\n */\nReaction.registerTemplate({\n  title: \"Default\",\n  name: TemplatePaths.coreDefaultTemplate,\n  type: \"email\",\n  template: Reaction.Email.getTemplateFile(TemplatePaths.coreDefaultTemplate),\n  subject: \"A message from {{shop.name}}\"\n});\n\n\n/*\n * Account related email templates\n */\n\n/*\n * Accounts - Invite Shop member\n * When: Admin invites new member to shop\n */\nReaction.registerTemplate({\n  title: \"Accounts - Invite Shop Member\",\n  name: TemplatePaths.inviteShopMemberTemplate,\n  type: \"email\",\n  template: Reaction.Email.getTemplateFile(TemplatePaths.inviteShopMemberTemplate),\n  subject: \"You have been invited to join {{shop.name}}\"\n});\n\n/*\n * Accounts - Reset Password\n * When: User requests to reset their password\n */\nReaction.registerTemplate({\n  title: \"Accounts - Reset Password\",\n  name: TemplatePaths.resetPaswordTemplate,\n  type: \"email\",\n  template: Reaction.Email.getTemplateFile(TemplatePaths.resetPaswordTemplate),\n  subject: \"{{shop.name}}: Here's your password reset link\"\n});\n\n/*\n * Accounts - Welcome Email\n * When: New user signs up for an account\n */\nReaction.registerTemplate({\n  title: \"Accounts - Welcome Email\",\n  name: TemplatePaths.welcomeEmailTemplate,\n  type: \"email\",\n  template: Reaction.Email.getTemplateFile(TemplatePaths.welcomeEmailTemplate),\n  subject: \"You're In. Welcome to {{shop.name}}!\"\n});\n\n/*\n * Accounts - Verify Email\n * When: A user signs up through launchdock\n * TODO: Used by launchdock, I haven't been able to test efficiently\n */\nReaction.registerTemplate({\n  title: \"Accounts - Verify Account (via LaunchDock)\",\n  name: TemplatePaths.verifyEmailTemplate,\n  type: \"email\",\n  template: Reaction.Email.getTemplateFile(TemplatePaths.verifyEmailTemplate),\n  subject: \"{{shopName}}: Please verify your email address\"\n});\n\n\n/*\n * Order (coreOrder) related email templates\n */\n\n/*\n * Orders - New Order Place\n * When: A user completes the cart checkout flow and a new order is placed\n */\nReaction.registerTemplate({\n  title: \"Orders - New Order Placed\",\n  name: TemplatePaths.coreOrderNewTemplate,\n  type: \"email\",\n  template: Reaction.Email.getTemplateFile(TemplatePaths.coreOrderNewTemplate),\n  subject: \"Your order is confirmed - {{order._id}}\"\n});\n\n/*\n * Orders - Order Shipped\n * When: Admin completes the order flow and item is shipped\n * When: Admin resends shipment notification\n */\nReaction.registerTemplate({\n  title: \"Orders - Order Shipped\",\n  name: TemplatePaths.orderShipped,\n  type: \"email\",\n  template: Reaction.Email.getTemplateFile(TemplatePaths.orderShipped),\n  subject: \"{{shop.name}}: Your order has shipped - {{order._id}}\"\n});\n\n/*\n * Orders - Order Refunded\n * When: Admin completes the order flow and item is shipped\n * When: Admin resends shipment notification\n */\nReaction.registerTemplate({\n  title: \"Orders - Order Refunded\",\n  name: TemplatePaths.orderRefunded,\n  type: \"email\",\n  template: Reaction.Email.getTemplateFile(TemplatePaths.orderRefunded),\n  subject: \"{{shop.name}}: Confirmation of refund for {{order._id}}\"\n});\n"]},"hash":"6cfd2b8130c21a029d5e56afac31c0320822aff4"}
