{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","extends","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component","PropTypes"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"},{"kind":"named","imported":"PropTypes","local":"PropTypes"}]},{"source":"react/lib/update","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"update"}]},{"source":"/client/api","imported":["Reaction"],"specifiers":[{"kind":"named","imported":"Reaction","local":"Reaction"}]},{"source":"/lib/api/compose","imported":["composeWithTracker"],"specifiers":[{"kind":"named","imported":"composeWithTracker","local":"composeWithTracker"}]},{"source":"/lib/api","imported":["ReactionProduct"],"specifiers":[{"kind":"named","imported":"ReactionProduct","local":"ReactionProduct"}]},{"source":"/lib/collections","imported":["Tags","Media","Templates"],"specifiers":[{"kind":"named","imported":"Tags","local":"Tags"},{"kind":"named","imported":"Media","local":"Media"},{"kind":"named","imported":"Templates","local":"Templates"}]},{"source":"/client/collections","imported":["Countries"],"specifiers":[{"kind":"named","imported":"Countries","local":"Countries"}]},{"source":"../components","imported":["ProductAdmin"],"specifiers":[{"kind":"named","imported":"ProductAdmin","local":"ProductAdmin"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/included/product-admin/client/containers/productAdminContainer.js","filenameRelative":"/imports/plugins/included/product-admin/client/containers/productAdminContainer.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/included/product-admin/client/containers/productAdminContainer.js"],"names":["React","Component","PropTypes","update","Reaction","composeWithTracker","ReactionProduct","Tags","Media","Templates","Countries","ProductAdmin","ProductAdminContainer","constructor","props","state","newMetafield","key","value","handleCardExpand","cardName","set","handleDeleteProduct","product","archiveProduct","handleProductFieldSave","productId","fieldName","updateValue","getSlug","Meteor","call","error","Alerts","toast","message","forceUpdate","handleMetaChange","metafield","index","newState","metafields","$set","setState","handleMetafieldSave","handleMetaRemove","handleProductRestore","_id","render","composer","onData","selectedProduct","tags","media","revisonDocumentIds","_","isArray","hashtags","map","id","findOne","selectedVariant","find","sort","templates","parser","provides","templateFor","$in","enabled","template","label","title","name","countries","fetch","editFocus","get","propTypes","object","arrayOf"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;IAAA;;OAA4C,WAA5C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GACA,AAAO,AAAY,AACnB,AAAS,AAAgB,AACzB,AAAS,AAA0B,AACnC,AAAS,AAAuB,AAChC,AAAS,AAAM,AAAO,AAAiB,AACvC,AAAS,AAAiB,AAC1B,AAAS,AAAoB,AAE7B;;IAAA,AAAM;;;iCACJ,AAAY;AAAO,AACjB;;qFAAA,AAAM,AAEN,AAAK,AAAQ,AACX;;UAQF,AAAS,AAAM,6BAAf,AAAmB,UADrB,AACE,AAAiC,AAClC;uCAED;AAAsB,AAAC,AAAY,AACjC,AAAgB,AAAe,AAAW,AAAK,AAChD;;UAFD,yCAIA;sBAAyB,AAAC,eAAD,AAAY,WAAZ,AAAuB,MAAvB,AAAiC,AACxD;AADwD,AACxD,AAAI,AAAc,AAClB,AACA;;UAAI,AAAc,mCAAlB,AAA4B;UACZ,cAAd,AAAc,AAAS,AAAQ,AAChC,MADC;;kCAEF;AAAA,AAAO,AAAK,uCAAZ,AAA2C,AAAW,AAAW,AAAa,AAAC,AAAU,AACvF;AAAA,AAAI,AAAO,AACT;;aAAO,KAAP,AAAa,AAAM,AAAS,mFAC5B;YAAK,OAAL,AACD;sCAJH,AAKC;;gBAXH,AAYC;AAGD;AAAmB,AAAC,AAAW,AAAU,AACvC;AAAA,AAAI,AAAW,AAEf,AAAI,AAAS,AAAG,AACd;;UAAW,6BAAO,AAAK,WAAZ,AAAmB,OAC5B;UAAS,WACP,AAAY,AACV;;UAAC,SAAD;AAAS,AACP;;;;AAHG;oBAFb,AAUC,AAAM,AACL,AAAW,AACT,AAAc,AAEjB;AAbC,AAAW,AAAmB;AAEd;AACD,SACD;;;AAWhB,AAAK,AAAS,wBAnBhB,AAmBE,AACD,AAED;AAHE;AAGoB,AAAC,AAAW,AAAW,AAAU,AACrD,AACA;;AAAI,YAAS,SAAb,AAAgB,AACd;AADF,AACE,AAAO,AAAK,AAA6B,AAAW,AAAW,AAChE,AAAM,AAAI,AAAU,AAAO,AAAU,AAAO,AAC3C;;UAAA,AAAO,AAAK,2CAAZ,WAAA,AAAyC,OAAzC,AAAoD,AACrD;;sBAED;AAAK,eAAL,KAAc,mDACZ;iBAAc,kCACZ;eADY,AACP,6CACL;AAHU,AACE,AAEL;;AAHX;;eAQiB,AAAC,AAAW,AAAc,AAC3C;AAAO,iBADT,AACE,AAAY,AAA6B,AAAW,AACrD,AAED,AAAuB,AAAC,AAAY,AAClC;AALF;AAhBA,AAcC;AAMD,AACE,AAAO,AAAK,AAA+B,AAAQ,AAAK,AAAa,AACtE;;6DAED;aAAS,6CACP;AAAA,AACE,AAAC,AACC,AAAa,AAAC,AAAK,AAAM,AACzB,AAAa,AAAC,AAAK,AACnB,AAAgB,AAAC,AAAK,AACtB,AAAa,AAAC,AAAK,AACnB,AAAa,AAAC,AAAK,AACnB,AAAW,AAAC,AAAK,AACjB,AAAmB,AAAC,AAAK,AACzB,AAAiB,AAAC,AAAK,AACvB,AAAI,AAAK,AAGd;;oDA/F2C;;AAmG9C,AAAS,AAAS,AAAO,AAAQ,AAC/B;;;AA/FkB,AACP;aADO,AAEL;eAHX,AAAa,AAMd;AAHK;AAFY,AACZ;;AAMN,AAAmB,AAAC,AAAa,AAC/B;;kCAuFI;sBAAN,AAAgB,AAAgB,AAChC;AAAA,AAAI,AACJ,iCAAA,AACA,AAAI;sBAAJ;2BAEA,AAAI;AAAJ,AAAa,8BACX;AAAI,AAAE,AAAQ,sBAAQ,KAAtB,AAAI,AAA6B,AAC/B;AAAO,AAAE,AAAI,2BAAN,AAAc,AAAU,AAAU,AAAI,AAC3C;AAAO,oBAAK,KADP,AACL,AAAO,AAAa,AACrB;AAFD,iCAGD;;AARC,cAUF,AAAM,AAAkB,AAAgB,AAExC;AAAA,AAAI,AAAiB,AACnB,AAAQ,AAAM,AAAK,AACjB,AAAsB,AAAgB,AACrC;;;;;;EArHT,AAAoC,AAAU,AAC5C;;AAqHM,SAAM,wBACJ;gBAAqB,gBADjB;MADL;MAFH,AAAQ,AAOT;MAED;;eAAA,AAAqB,AAAC,AAAQ,AAE9B;UAAM,QAAY,QAAA,AAAU,WAAK,AAC/B;mBAD+B,gCAE/B;eAAU,KAFqB,QAG/B;AAAa,AAAE,OAFP;AADuB,AAGlB,AAAO,AAAC,AACrB;;QAAS,kCAJO,AAAe,AAK9B,AAAI,AAAC,AAAa,AACnB;;QAAO,iBACL;oBAAgB;AACT,AAAS,8CAFlB,AAAO;AAAA,AAEL,OADO;;AAKL,AAAY,+BAAlB,AAAkB,AAAU,AAAK,AAAI,AAErC,AAAO,AAAM,AACX,AAAW,AAAS,AAAM,AAAI,AAC9B;AAJF;AAZA,AAAkB,AAUjB;AAIY,AAEF,AACT,AACA;;AAJW,kCAAA,AAKX,AACA;QANW;cAAb,AAAa;gBAnCf,AA4CC;AAAM;cACL;;AAAO,eAAP,AAAa,AACd;AAJG,+BAKL;;wBAED;eAAsB,SAAtB,AAAkC,AAChC,AAAS,AAAU,AACnB;;A,AAFF,AAAkC,AAE1B,AAAU,AAAQ,AAAU,AAGpC;uCACA,AAAe,AAAmB,AAAU;;;;;;;;;;;;;;;;;;;;OAzKrC,OAAS,WAAhB,AAA2B,QAA3B","file":"/imports/plugins/included/product-admin/client/containers/productAdminContainer.js.map","sourcesContent":["import React, { Component, PropTypes } from \"react\";\nimport update from \"react/lib/update\";\nimport { Reaction } from \"/client/api\";\nimport { composeWithTracker } from \"/lib/api/compose\";\nimport { ReactionProduct } from \"/lib/api\";\nimport { Tags, Media, Templates } from \"/lib/collections\";\nimport { Countries } from \"/client/collections\";\nimport { ProductAdmin } from \"../components\";\n\nclass ProductAdminContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      newMetafield: {\n        key: \"\",\n        value: \"\"\n      }\n    };\n  }\n\n  handleCardExpand = (cardName) => {\n    Reaction.state.set(\"edit/focus\", cardName);\n  }\n\n  handleDeleteProduct = (product) => {\n    ReactionProduct.archiveProduct(product || this.product);\n  }\n\n  handleProductFieldSave = (productId, fieldName, value) => {\n    let updateValue = value;\n    // special case, slugify handles.\n    if (fieldName === \"handle\") {\n      updateValue = Reaction.getSlug(value);\n    }\n    Meteor.call(\"products/updateProductField\", productId, fieldName, updateValue, (error) => {\n      if (error) {\n        Alerts.toast(error.message, \"error\");\n        this.forceUpdate();\n      }\n    });\n  }\n\n\n  handleMetaChange = (metafield, index) => {\n    let newState = {};\n\n    if (index >= 0) {\n      newState = update(this.state, {\n        product: {\n          metafields: {\n            [index]: {\n              $set: metafield\n            }\n          }\n        }\n      });\n    } else {\n      newState = {\n        newMetafield: metafield\n      };\n    }\n\n    this.setState(newState);\n  }\n\n  handleMetafieldSave = (productId, metafield, index) => {\n    // update existing metafield\n    if (index >= 0) {\n      Meteor.call(\"products/updateMetaFields\", productId, metafield, index);\n    } else if (metafield.key && metafield.value) {\n      Meteor.call(\"products/updateMetaFields\", productId, metafield);\n    }\n\n    this.setState({\n      newMetafield: {\n        key: \"\",\n        value: \"\"\n      }\n    });\n  }\n\n  handleMetaRemove = (productId, metafield) => {\n    Meteor.call(\"products/removeMetaFields\", productId, metafield);\n  }\n\n  handleProductRestore = (product) => {\n    Meteor.call(\"products/updateProductField\", product._id, \"isDeleted\", false);\n  }\n\n  render() {\n    return (\n      <ProductAdmin\n        newMetafield={this.state.newMetafield}\n        onCardExpand={this.handleCardExpand}\n        onDeleteProduct={this.handleDeleteProduct}\n        onMetaChange={this.handleMetaChange}\n        onMetaRemove={this.handleMetaRemove}\n        onMetaSave={this.handleMetafieldSave}\n        onProductFieldSave={this.handleProductFieldSave}\n        onRestoreProduct={this.handleProductRestore}\n        {...this.props}\n      />\n    );\n  }\n}\n\n\nfunction composer(props, onData) {\n  const product = ReactionProduct.selectedProduct();\n  let tags;\n  let media;\n  let revisonDocumentIds;\n\n  if (product) {\n    if (_.isArray(product.hashtags)) {\n      tags = _.map(product.hashtags, function (id) {\n        return Tags.findOne(id);\n      });\n    }\n\n    const selectedVariant = ReactionProduct.selectedVariant();\n\n    if (selectedVariant) {\n      media = Media.find({\n        \"metadata.variantId\": selectedVariant._id\n      }, {\n        sort: {\n          \"metadata.priority\": 1\n        }\n      });\n    }\n\n    revisonDocumentIds = [product._id];\n\n    const templates = Templates.find({\n      parser: \"react\",\n      provides: \"template\",\n      templateFor: { $in: [\"pdp\"] },\n      enabled: true\n    }).map((template) => {\n      return {\n        label: template.title,\n        value: template.name\n      };\n    });\n\n    const countries = Countries.find({}).fetch();\n\n    onData(null, {\n      editFocus: Reaction.state.get(\"edit/focus\"),\n      product: product,\n      media,\n      tags,\n      revisonDocumentIds,\n      templates,\n      countries\n    });\n  } else {\n    onData(null, {});\n  }\n}\n\nProductAdminContainer.propTypes = {\n  product: PropTypes.object,\n  tags: PropTypes.arrayOf(PropTypes.object)\n};\n\n// Decorate component and export\nexport default composeWithTracker(composer)(ProductAdminContainer);\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/included/product-admin/client/containers/productAdminContainer.js.map","sourceFileName":"/imports/plugins/included/product-admin/client/containers/productAdminContainer.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"productAdminContainer"},"ignored":false,"code":"var _extends2 = require(\"babel-runtime/helpers/extends\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0,\n    Component = void 0,\n    PropTypes = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  },\n  PropTypes: function (v) {\n    PropTypes = v;\n  }\n}, 0);\nvar update = void 0;\nmodule.importSync(\"react/lib/update\", {\n  \"default\": function (v) {\n    update = v;\n  }\n}, 1);\nvar Reaction = void 0;\nmodule.importSync(\"/client/api\", {\n  Reaction: function (v) {\n    Reaction = v;\n  }\n}, 2);\nvar composeWithTracker = void 0;\nmodule.importSync(\"/lib/api/compose\", {\n  composeWithTracker: function (v) {\n    composeWithTracker = v;\n  }\n}, 3);\nvar ReactionProduct = void 0;\nmodule.importSync(\"/lib/api\", {\n  ReactionProduct: function (v) {\n    ReactionProduct = v;\n  }\n}, 4);\nvar Tags = void 0,\n    Media = void 0,\n    Templates = void 0;\nmodule.importSync(\"/lib/collections\", {\n  Tags: function (v) {\n    Tags = v;\n  },\n  Media: function (v) {\n    Media = v;\n  },\n  Templates: function (v) {\n    Templates = v;\n  }\n}, 5);\nvar Countries = void 0;\nmodule.importSync(\"/client/collections\", {\n  Countries: function (v) {\n    Countries = v;\n  }\n}, 6);\nvar ProductAdmin = void 0;\nmodule.importSync(\"../components\", {\n  ProductAdmin: function (v) {\n    ProductAdmin = v;\n  }\n}, 7);\n\nvar ProductAdminContainer = function (_Component) {\n  (0, _inherits3.default)(ProductAdminContainer, _Component);\n\n  function ProductAdminContainer(props) {\n    (0, _classCallCheck3.default)(this, ProductAdminContainer);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));\n\n    _this.handleCardExpand = function (cardName) {\n      Reaction.state.set(\"edit/focus\", cardName);\n    };\n\n    _this.handleDeleteProduct = function (product) {\n      ReactionProduct.archiveProduct(product || _this.product);\n    };\n\n    _this.handleProductFieldSave = function (productId, fieldName, value) {\n      var updateValue = value; // special case, slugify handles.\n\n      if (fieldName === \"handle\") {\n        updateValue = Reaction.getSlug(value);\n      }\n\n      Meteor.call(\"products/updateProductField\", productId, fieldName, updateValue, function (error) {\n        if (error) {\n          Alerts.toast(error.message, \"error\");\n\n          _this.forceUpdate();\n        }\n      });\n    };\n\n    _this.handleMetaChange = function (metafield, index) {\n      var newState = {};\n\n      if (index >= 0) {\n        var _metafields;\n\n        newState = update(_this.state, {\n          product: {\n            metafields: (_metafields = {}, _metafields[index] = {\n              $set: metafield\n            }, _metafields)\n          }\n        });\n      } else {\n        newState = {\n          newMetafield: metafield\n        };\n      }\n\n      _this.setState(newState);\n    };\n\n    _this.handleMetafieldSave = function (productId, metafield, index) {\n      // update existing metafield\n      if (index >= 0) {\n        Meteor.call(\"products/updateMetaFields\", productId, metafield, index);\n      } else if (metafield.key && metafield.value) {\n        Meteor.call(\"products/updateMetaFields\", productId, metafield);\n      }\n\n      _this.setState({\n        newMetafield: {\n          key: \"\",\n          value: \"\"\n        }\n      });\n    };\n\n    _this.handleMetaRemove = function (productId, metafield) {\n      Meteor.call(\"products/removeMetaFields\", productId, metafield);\n    };\n\n    _this.handleProductRestore = function (product) {\n      Meteor.call(\"products/updateProductField\", product._id, \"isDeleted\", false);\n    };\n\n    _this.state = {\n      newMetafield: {\n        key: \"\",\n        value: \"\"\n      }\n    };\n    return _this;\n  }\n\n  ProductAdminContainer.prototype.render = function () {\n    function render() {\n      return React.createElement(ProductAdmin, (0, _extends3.default)({\n        newMetafield: this.state.newMetafield,\n        onCardExpand: this.handleCardExpand,\n        onDeleteProduct: this.handleDeleteProduct,\n        onMetaChange: this.handleMetaChange,\n        onMetaRemove: this.handleMetaRemove,\n        onMetaSave: this.handleMetafieldSave,\n        onProductFieldSave: this.handleProductFieldSave,\n        onRestoreProduct: this.handleProductRestore\n      }, this.props));\n    }\n\n    return render;\n  }();\n\n  return ProductAdminContainer;\n}(Component);\n\nfunction composer(props, onData) {\n  var product = ReactionProduct.selectedProduct();\n  var tags = void 0;\n  var media = void 0;\n  var revisonDocumentIds = void 0;\n\n  if (product) {\n    if (_.isArray(product.hashtags)) {\n      tags = _.map(product.hashtags, function (id) {\n        return Tags.findOne(id);\n      });\n    }\n\n    var selectedVariant = ReactionProduct.selectedVariant();\n\n    if (selectedVariant) {\n      media = Media.find({\n        \"metadata.variantId\": selectedVariant._id\n      }, {\n        sort: {\n          \"metadata.priority\": 1\n        }\n      });\n    }\n\n    revisonDocumentIds = [product._id];\n    var templates = Templates.find({\n      parser: \"react\",\n      provides: \"template\",\n      templateFor: {\n        $in: [\"pdp\"]\n      },\n      enabled: true\n    }).map(function (template) {\n      return {\n        label: template.title,\n        value: template.name\n      };\n    });\n    var countries = Countries.find({}).fetch();\n    onData(null, {\n      editFocus: Reaction.state.get(\"edit/focus\"),\n      product: product,\n      media: media,\n      tags: tags,\n      revisonDocumentIds: revisonDocumentIds,\n      templates: templates,\n      countries: countries\n    });\n  } else {\n    onData(null, {});\n  }\n}\n\nProductAdminContainer.propTypes = {\n  product: PropTypes.object,\n  tags: PropTypes.arrayOf(PropTypes.object)\n}; // Decorate component and export\n\nmodule.export(\"default\", exports.default = composeWithTracker(composer)(ProductAdminContainer));","map":{"version":3,"sources":["/imports/plugins/included/product-admin/client/containers/productAdminContainer.js"],"names":["React","Component","PropTypes","update","Reaction","composeWithTracker","ReactionProduct","Tags","Media","Templates","Countries","ProductAdmin","ProductAdminContainer","constructor","props","state","newMetafield","key","value","handleCardExpand","cardName","set","handleDeleteProduct","product","archiveProduct","handleProductFieldSave","productId","fieldName","updateValue","getSlug","Meteor","call","error","Alerts","toast","message","forceUpdate","handleMetaChange","metafield","index","newState","metafields","$set","setState","handleMetafieldSave","handleMetaRemove","handleProductRestore","_id","render","composer","onData","selectedProduct","tags","media","revisonDocumentIds","_","isArray","hashtags","map","id","findOne","selectedVariant","find","sort","templates","parser","provides","templateFor","$in","enabled","template","label","title","name","countries","fetch","editFocus","get","propTypes","object","arrayOf"],"mappings":"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","file":"/imports/plugins/included/product-admin/client/containers/productAdminContainer.js.map","sourcesContent":["import React, { Component, PropTypes } from \"react\";\nimport update from \"react/lib/update\";\nimport { Reaction } from \"/client/api\";\nimport { composeWithTracker } from \"/lib/api/compose\";\nimport { ReactionProduct } from \"/lib/api\";\nimport { Tags, Media, Templates } from \"/lib/collections\";\nimport { Countries } from \"/client/collections\";\nimport { ProductAdmin } from \"../components\";\n\nclass ProductAdminContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      newMetafield: {\n        key: \"\",\n        value: \"\"\n      }\n    };\n  }\n\n  handleCardExpand = (cardName) => {\n    Reaction.state.set(\"edit/focus\", cardName);\n  }\n\n  handleDeleteProduct = (product) => {\n    ReactionProduct.archiveProduct(product || this.product);\n  }\n\n  handleProductFieldSave = (productId, fieldName, value) => {\n    let updateValue = value;\n    // special case, slugify handles.\n    if (fieldName === \"handle\") {\n      updateValue = Reaction.getSlug(value);\n    }\n    Meteor.call(\"products/updateProductField\", productId, fieldName, updateValue, (error) => {\n      if (error) {\n        Alerts.toast(error.message, \"error\");\n        this.forceUpdate();\n      }\n    });\n  }\n\n\n  handleMetaChange = (metafield, index) => {\n    let newState = {};\n\n    if (index >= 0) {\n      newState = update(this.state, {\n        product: {\n          metafields: {\n            [index]: {\n              $set: metafield\n            }\n          }\n        }\n      });\n    } else {\n      newState = {\n        newMetafield: metafield\n      };\n    }\n\n    this.setState(newState);\n  }\n\n  handleMetafieldSave = (productId, metafield, index) => {\n    // update existing metafield\n    if (index >= 0) {\n      Meteor.call(\"products/updateMetaFields\", productId, metafield, index);\n    } else if (metafield.key && metafield.value) {\n      Meteor.call(\"products/updateMetaFields\", productId, metafield);\n    }\n\n    this.setState({\n      newMetafield: {\n        key: \"\",\n        value: \"\"\n      }\n    });\n  }\n\n  handleMetaRemove = (productId, metafield) => {\n    Meteor.call(\"products/removeMetaFields\", productId, metafield);\n  }\n\n  handleProductRestore = (product) => {\n    Meteor.call(\"products/updateProductField\", product._id, \"isDeleted\", false);\n  }\n\n  render() {\n    return (\n      <ProductAdmin\n        newMetafield={this.state.newMetafield}\n        onCardExpand={this.handleCardExpand}\n        onDeleteProduct={this.handleDeleteProduct}\n        onMetaChange={this.handleMetaChange}\n        onMetaRemove={this.handleMetaRemove}\n        onMetaSave={this.handleMetafieldSave}\n        onProductFieldSave={this.handleProductFieldSave}\n        onRestoreProduct={this.handleProductRestore}\n        {...this.props}\n      />\n    );\n  }\n}\n\n\nfunction composer(props, onData) {\n  const product = ReactionProduct.selectedProduct();\n  let tags;\n  let media;\n  let revisonDocumentIds;\n\n  if (product) {\n    if (_.isArray(product.hashtags)) {\n      tags = _.map(product.hashtags, function (id) {\n        return Tags.findOne(id);\n      });\n    }\n\n    const selectedVariant = ReactionProduct.selectedVariant();\n\n    if (selectedVariant) {\n      media = Media.find({\n        \"metadata.variantId\": selectedVariant._id\n      }, {\n        sort: {\n          \"metadata.priority\": 1\n        }\n      });\n    }\n\n    revisonDocumentIds = [product._id];\n\n    const templates = Templates.find({\n      parser: \"react\",\n      provides: \"template\",\n      templateFor: { $in: [\"pdp\"] },\n      enabled: true\n    }).map((template) => {\n      return {\n        label: template.title,\n        value: template.name\n      };\n    });\n\n    const countries = Countries.find({}).fetch();\n\n    onData(null, {\n      editFocus: Reaction.state.get(\"edit/focus\"),\n      product: product,\n      media,\n      tags,\n      revisonDocumentIds,\n      templates,\n      countries\n    });\n  } else {\n    onData(null, {});\n  }\n}\n\nProductAdminContainer.propTypes = {\n  product: PropTypes.object,\n  tags: PropTypes.arrayOf(PropTypes.object)\n};\n\n// Decorate component and export\nexport default composeWithTracker(composer)(ProductAdminContainer);\n"]},"hash":"1e333221f75dbb357afc6596df6860760bbd34c4"}
