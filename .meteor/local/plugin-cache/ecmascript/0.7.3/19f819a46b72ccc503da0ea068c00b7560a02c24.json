{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"lodash/isArray","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_isArray"}]},{"source":"/client/api","imported":["Reaction","i18next"],"specifiers":[{"kind":"named","imported":"Reaction","local":"Reaction"},{"kind":"named","imported":"i18next","local":"i18next"}]},{"source":"/lib/collections","imported":["Media","Packages","Shops"],"specifiers":[{"kind":"named","imported":"Media","local":"Media"},{"kind":"named","imported":"Packages","local":"Packages"},{"kind":"named","imported":"Shops","local":"Shops"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/core/dashboard/client/templates/shop/settings/settings.js","filenameRelative":"/imports/plugins/core/dashboard/client/templates/shop/settings/settings.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/core/dashboard/client/templates/shop/settings/settings.js"],"names":["Reaction","i18next","Media","Packages","Shops","Template","shopBrandImageOption","helpers","cardProps","data","props","controls","push","icon","onIcon","toggle","toggleOn","selected","onClick","asset","mediaId","option","_id","type","Meteor","call","error","result","Alerts","toast","alert","title","showCancelButton","confirmButtonText","findOne","remove","shopSettings","brandImageSelectProps","media","find","shop","getShopId","selectedMediaId","brandAssets","options","key","optionTemplate","classNames","itemList","half","input","hidden","onSelect","value","handleFileUpload","userId","shopId","files","file","metadata","ownerId","insert","packageData","name","addressBook","address","AutoForm","hooks","shopEditForm","onSuccess","t","onError","operation","shopEditAddressForm","shopEditExternalServicesForm","shopEditOptionsForm"],"mappings":"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","file":"/imports/plugins/core/dashboard/client/templates/shop/settings/settings.js.map","sourcesContent":["import _ from \"lodash\";\nimport { Reaction, i18next } from \"/client/api\";\nimport { Media, Packages, Shops } from \"/lib/collections\";\n\nTemplate.shopBrandImageOption.helpers({\n  cardProps(data) {\n    const props = {\n      controls: []\n    };\n\n    // Add the enable / disable toggle button\n    props.controls.push({\n      icon: \"square-o\",\n      onIcon: \"check-square-o\",\n      toggle: true,\n      toggleOn: data.selected,\n      onClick() {\n        const asset = {\n          mediaId: data.option._id,\n          type: \"navbarBrandImage\"\n        };\n\n        Meteor.call(\"shop/updateBrandAssets\", asset, (error, result) => {\n          if (error) {\n            // Display Error\n            return Alerts.toast(\"Couldn't update brand asset.\", \"error\");\n          }\n\n          if (result === 1) {\n            Alerts.toast(\"Updated brand asset\", \"success\");\n          }\n        });\n      }\n    });\n\n    // Show the delete button for brand assets that are not enabled.\n    // This will prevent users from deleting assets that are being used at the moment.\n    if (!data.selected) {\n      props.controls.push({\n        icon: \"trash-o\",\n        onClick() {\n          Alerts.alert({\n            title: \"Remove this brand image?\",\n            type: \"warning\",\n            showCancelButton: true,\n            confirmButtonText: \"Remove\"\n          }, () => {\n            Media.findOne(data.option._id).remove();\n          });\n        }\n      });\n    }\n\n    return props;\n  }\n});\n\n/**\n * shopSettings helpers\n *\n */\nTemplate.shopSettings.helpers({\n  brandImageSelectProps() {\n    const media = Media.find({\n      \"metadata.type\": \"brandAsset\"\n    });\n\n    const shop = Shops.findOne({\n      \"_id\": Reaction.getShopId(),\n      \"brandAssets.type\": \"navbarBrandImage\"\n    });\n\n    let selectedMediaId;\n    if (shop && _.isArray(shop.brandAssets)) {\n      selectedMediaId = shop.brandAssets[0].mediaId;\n    }\n\n    return {\n      type: \"radio\",\n      options: media,\n      key: \"_id\",\n      optionTemplate: \"shopBrandImageOption\",\n      selected: selectedMediaId,\n      classNames: {\n        itemList: { half: true },\n        input: { hidden: true }\n      },\n      onSelect(value) {\n        const asset = {\n          mediaId: value,\n          type: \"navbarBrandImage\"\n        };\n\n        Meteor.call(\"shop/updateBrandAssets\", asset, (error, result) => {\n          if (error) {\n            // Display Error\n            return Alerts.toast(\"Couldn't update brand asset.\", \"error\");\n          }\n\n          if (result === 1) {\n            Alerts.toast(\"Updated brand asset\", \"success\");\n          }\n        });\n      }\n    };\n  },\n\n  handleFileUpload() {\n    const userId = Meteor.userId();\n    const shopId = Reaction.getShopId();\n\n    return (files) => {\n      for (const file of files) {\n        file.metadata = {\n          type: \"brandAsset\",\n          ownerId: userId,\n          shopId: shopId\n        };\n\n        Media.insert(file);\n      }\n    };\n  },\n\n  shop: function () {\n    return Shops.findOne();\n  },\n  packageData: function () {\n    return Packages.findOne({\n      name: \"core\"\n    });\n  },\n  addressBook: function () {\n    const address = Shops.findOne().addressBook;\n    return address[0];\n  }\n});\n\n/**\n * shopSettings autoform alerts\n */\n\nAutoForm.hooks({\n  shopEditForm: {\n    onSuccess: function () {\n      return Alerts.toast(i18next.t(\"shopSettings.shopGeneralSettingsSaved\"),\n        \"success\");\n    },\n    onError: function (operation, error) {\n      return Alerts.toast(\n        `${i18next.t(\"shopSettings.shopGeneralSettingsFailed\")} ${error}`, \"error\"\n      );\n    }\n  }\n});\n\nAutoForm.hooks({\n  shopEditAddressForm: {\n    onSuccess: function () {\n      return Alerts.toast(i18next.t(\"shopSettings.shopAddressSettingsSaved\"),\n        \"success\");\n    },\n    onError: function (operation, error) {\n      return Alerts.toast(\n        `${i18next.t(\"shopSettings.shopAddressSettingsFailed\")} ${error}`, \"error\"\n      );\n    }\n  }\n});\n\nAutoForm.hooks({\n  shopEditExternalServicesForm: {\n    onSuccess: function () {\n      return Alerts.toast(\n        i18next.t(\"shopSettings.shopExternalServicesSettingsSaved\"), \"success\"\n      );\n    },\n    onError: function (operation, error) {\n      return Alerts.toast(\n        `${i18next.t(\"shopSettings.shopExternalServicesSettingsFailed\")} ${error}`,\n        \"error\"\n      );\n    }\n  }\n});\n\nAutoForm.hooks({\n  shopEditOptionsForm: {\n    onSuccess: function () {\n      return Alerts.toast(i18next.t(\"shopSettings.shopOptionsSettingsSaved\"),\n        \"success\");\n    },\n    onError: function (operation, error) {\n      return Alerts.toast(\n        `${i18next.t(\"shopSettings.shopOptionsSettingsFailed\")} ${error}`, \"error\"\n      );\n    }\n  }\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/core/dashboard/client/templates/shop/settings/settings.js.map","sourceFileName":"/imports/plugins/core/dashboard/client/templates/shop/settings/settings.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"settings"},"ignored":false,"code":"var _isArray = void 0;\n\nmodule.importSync(\"lodash/isArray\", {\n  \"default\": function (v) {\n    _isArray = v;\n  }\n}, 0);\nvar Reaction = void 0,\n    i18next = void 0;\nmodule.importSync(\"/client/api\", {\n  Reaction: function (v) {\n    Reaction = v;\n  },\n  i18next: function (v) {\n    i18next = v;\n  }\n}, 1);\nvar Media = void 0,\n    Packages = void 0,\n    Shops = void 0;\nmodule.importSync(\"/lib/collections\", {\n  Media: function (v) {\n    Media = v;\n  },\n  Packages: function (v) {\n    Packages = v;\n  },\n  Shops: function (v) {\n    Shops = v;\n  }\n}, 2);\nTemplate.shopBrandImageOption.helpers({\n  cardProps: function (data) {\n    var props = {\n      controls: []\n    }; // Add the enable / disable toggle button\n\n    props.controls.push({\n      icon: \"square-o\",\n      onIcon: \"check-square-o\",\n      toggle: true,\n      toggleOn: data.selected,\n      onClick: function () {\n        var asset = {\n          mediaId: data.option._id,\n          type: \"navbarBrandImage\"\n        };\n        Meteor.call(\"shop/updateBrandAssets\", asset, function (error, result) {\n          if (error) {\n            // Display Error\n            return Alerts.toast(\"Couldn't update brand asset.\", \"error\");\n          }\n\n          if (result === 1) {\n            Alerts.toast(\"Updated brand asset\", \"success\");\n          }\n        });\n      }\n    }); // Show the delete button for brand assets that are not enabled.\n    // This will prevent users from deleting assets that are being used at the moment.\n\n    if (!data.selected) {\n      props.controls.push({\n        icon: \"trash-o\",\n        onClick: function () {\n          Alerts.alert({\n            title: \"Remove this brand image?\",\n            type: \"warning\",\n            showCancelButton: true,\n            confirmButtonText: \"Remove\"\n          }, function () {\n            Media.findOne(data.option._id).remove();\n          });\n        }\n      });\n    }\n\n    return props;\n  }\n}); /**\n     * shopSettings helpers\n     *\n     */\nTemplate.shopSettings.helpers({\n  brandImageSelectProps: function () {\n    var media = Media.find({\n      \"metadata.type\": \"brandAsset\"\n    });\n    var shop = Shops.findOne({\n      \"_id\": Reaction.getShopId(),\n      \"brandAssets.type\": \"navbarBrandImage\"\n    });\n    var selectedMediaId = void 0;\n\n    if (shop && _isArray(shop.brandAssets)) {\n      selectedMediaId = shop.brandAssets[0].mediaId;\n    }\n\n    return {\n      type: \"radio\",\n      options: media,\n      key: \"_id\",\n      optionTemplate: \"shopBrandImageOption\",\n      selected: selectedMediaId,\n      classNames: {\n        itemList: {\n          half: true\n        },\n        input: {\n          hidden: true\n        }\n      },\n      onSelect: function (value) {\n        var asset = {\n          mediaId: value,\n          type: \"navbarBrandImage\"\n        };\n        Meteor.call(\"shop/updateBrandAssets\", asset, function (error, result) {\n          if (error) {\n            // Display Error\n            return Alerts.toast(\"Couldn't update brand asset.\", \"error\");\n          }\n\n          if (result === 1) {\n            Alerts.toast(\"Updated brand asset\", \"success\");\n          }\n        });\n      }\n    };\n  },\n  handleFileUpload: function () {\n    var userId = Meteor.userId();\n    var shopId = Reaction.getShopId();\n    return function (files) {\n      for (var _iterator = files, _isArray2 = Array.isArray(_iterator), _i = 0, _iterator = _isArray2 ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray2) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var file = _ref;\n        file.metadata = {\n          type: \"brandAsset\",\n          ownerId: userId,\n          shopId: shopId\n        };\n        Media.insert(file);\n      }\n    };\n  },\n  shop: function () {\n    return Shops.findOne();\n  },\n  packageData: function () {\n    return Packages.findOne({\n      name: \"core\"\n    });\n  },\n  addressBook: function () {\n    var address = Shops.findOne().addressBook;\n    return address[0];\n  }\n}); /**\n     * shopSettings autoform alerts\n     */\nAutoForm.hooks({\n  shopEditForm: {\n    onSuccess: function () {\n      return Alerts.toast(i18next.t(\"shopSettings.shopGeneralSettingsSaved\"), \"success\");\n    },\n    onError: function (operation, error) {\n      return Alerts.toast(i18next.t(\"shopSettings.shopGeneralSettingsFailed\") + \" \" + error, \"error\");\n    }\n  }\n});\nAutoForm.hooks({\n  shopEditAddressForm: {\n    onSuccess: function () {\n      return Alerts.toast(i18next.t(\"shopSettings.shopAddressSettingsSaved\"), \"success\");\n    },\n    onError: function (operation, error) {\n      return Alerts.toast(i18next.t(\"shopSettings.shopAddressSettingsFailed\") + \" \" + error, \"error\");\n    }\n  }\n});\nAutoForm.hooks({\n  shopEditExternalServicesForm: {\n    onSuccess: function () {\n      return Alerts.toast(i18next.t(\"shopSettings.shopExternalServicesSettingsSaved\"), \"success\");\n    },\n    onError: function (operation, error) {\n      return Alerts.toast(i18next.t(\"shopSettings.shopExternalServicesSettingsFailed\") + \" \" + error, \"error\");\n    }\n  }\n});\nAutoForm.hooks({\n  shopEditOptionsForm: {\n    onSuccess: function () {\n      return Alerts.toast(i18next.t(\"shopSettings.shopOptionsSettingsSaved\"), \"success\");\n    },\n    onError: function (operation, error) {\n      return Alerts.toast(i18next.t(\"shopSettings.shopOptionsSettingsFailed\") + \" \" + error, \"error\");\n    }\n  }\n});","map":{"version":3,"sources":["/imports/plugins/core/dashboard/client/templates/shop/settings/settings.js"],"names":["Reaction","i18next","Media","Packages","Shops","Template","shopBrandImageOption","helpers","cardProps","data","props","controls","push","icon","onIcon","toggle","toggleOn","selected","onClick","asset","mediaId","option","_id","type","Meteor","call","error","result","Alerts","toast","alert","title","showCancelButton","confirmButtonText","findOne","remove","shopSettings","brandImageSelectProps","media","find","shop","getShopId","selectedMediaId","brandAssets","options","key","optionTemplate","classNames","itemList","half","input","hidden","onSelect","value","handleFileUpload","userId","shopId","files","file","metadata","ownerId","insert","packageData","name","addressBook","address","AutoForm","hooks","shopEditForm","onSuccess","t","onError","operation","shopEditAddressForm","shopEditExternalServicesForm","shopEditOptionsForm"],"mappings":"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","file":"/imports/plugins/core/dashboard/client/templates/shop/settings/settings.js.map","sourcesContent":["import _ from \"lodash\";\nimport { Reaction, i18next } from \"/client/api\";\nimport { Media, Packages, Shops } from \"/lib/collections\";\n\nTemplate.shopBrandImageOption.helpers({\n  cardProps(data) {\n    const props = {\n      controls: []\n    };\n\n    // Add the enable / disable toggle button\n    props.controls.push({\n      icon: \"square-o\",\n      onIcon: \"check-square-o\",\n      toggle: true,\n      toggleOn: data.selected,\n      onClick() {\n        const asset = {\n          mediaId: data.option._id,\n          type: \"navbarBrandImage\"\n        };\n\n        Meteor.call(\"shop/updateBrandAssets\", asset, (error, result) => {\n          if (error) {\n            // Display Error\n            return Alerts.toast(\"Couldn't update brand asset.\", \"error\");\n          }\n\n          if (result === 1) {\n            Alerts.toast(\"Updated brand asset\", \"success\");\n          }\n        });\n      }\n    });\n\n    // Show the delete button for brand assets that are not enabled.\n    // This will prevent users from deleting assets that are being used at the moment.\n    if (!data.selected) {\n      props.controls.push({\n        icon: \"trash-o\",\n        onClick() {\n          Alerts.alert({\n            title: \"Remove this brand image?\",\n            type: \"warning\",\n            showCancelButton: true,\n            confirmButtonText: \"Remove\"\n          }, () => {\n            Media.findOne(data.option._id).remove();\n          });\n        }\n      });\n    }\n\n    return props;\n  }\n});\n\n/**\n * shopSettings helpers\n *\n */\nTemplate.shopSettings.helpers({\n  brandImageSelectProps() {\n    const media = Media.find({\n      \"metadata.type\": \"brandAsset\"\n    });\n\n    const shop = Shops.findOne({\n      \"_id\": Reaction.getShopId(),\n      \"brandAssets.type\": \"navbarBrandImage\"\n    });\n\n    let selectedMediaId;\n    if (shop && _.isArray(shop.brandAssets)) {\n      selectedMediaId = shop.brandAssets[0].mediaId;\n    }\n\n    return {\n      type: \"radio\",\n      options: media,\n      key: \"_id\",\n      optionTemplate: \"shopBrandImageOption\",\n      selected: selectedMediaId,\n      classNames: {\n        itemList: { half: true },\n        input: { hidden: true }\n      },\n      onSelect(value) {\n        const asset = {\n          mediaId: value,\n          type: \"navbarBrandImage\"\n        };\n\n        Meteor.call(\"shop/updateBrandAssets\", asset, (error, result) => {\n          if (error) {\n            // Display Error\n            return Alerts.toast(\"Couldn't update brand asset.\", \"error\");\n          }\n\n          if (result === 1) {\n            Alerts.toast(\"Updated brand asset\", \"success\");\n          }\n        });\n      }\n    };\n  },\n\n  handleFileUpload() {\n    const userId = Meteor.userId();\n    const shopId = Reaction.getShopId();\n\n    return (files) => {\n      for (const file of files) {\n        file.metadata = {\n          type: \"brandAsset\",\n          ownerId: userId,\n          shopId: shopId\n        };\n\n        Media.insert(file);\n      }\n    };\n  },\n\n  shop: function () {\n    return Shops.findOne();\n  },\n  packageData: function () {\n    return Packages.findOne({\n      name: \"core\"\n    });\n  },\n  addressBook: function () {\n    const address = Shops.findOne().addressBook;\n    return address[0];\n  }\n});\n\n/**\n * shopSettings autoform alerts\n */\n\nAutoForm.hooks({\n  shopEditForm: {\n    onSuccess: function () {\n      return Alerts.toast(i18next.t(\"shopSettings.shopGeneralSettingsSaved\"),\n        \"success\");\n    },\n    onError: function (operation, error) {\n      return Alerts.toast(\n        `${i18next.t(\"shopSettings.shopGeneralSettingsFailed\")} ${error}`, \"error\"\n      );\n    }\n  }\n});\n\nAutoForm.hooks({\n  shopEditAddressForm: {\n    onSuccess: function () {\n      return Alerts.toast(i18next.t(\"shopSettings.shopAddressSettingsSaved\"),\n        \"success\");\n    },\n    onError: function (operation, error) {\n      return Alerts.toast(\n        `${i18next.t(\"shopSettings.shopAddressSettingsFailed\")} ${error}`, \"error\"\n      );\n    }\n  }\n});\n\nAutoForm.hooks({\n  shopEditExternalServicesForm: {\n    onSuccess: function () {\n      return Alerts.toast(\n        i18next.t(\"shopSettings.shopExternalServicesSettingsSaved\"), \"success\"\n      );\n    },\n    onError: function (operation, error) {\n      return Alerts.toast(\n        `${i18next.t(\"shopSettings.shopExternalServicesSettingsFailed\")} ${error}`,\n        \"error\"\n      );\n    }\n  }\n});\n\nAutoForm.hooks({\n  shopEditOptionsForm: {\n    onSuccess: function () {\n      return Alerts.toast(i18next.t(\"shopSettings.shopOptionsSettingsSaved\"),\n        \"success\");\n    },\n    onError: function (operation, error) {\n      return Alerts.toast(\n        `${i18next.t(\"shopSettings.shopOptionsSettingsFailed\")} ${error}`, \"error\"\n      );\n    }\n  }\n});\n"]},"hash":"19f819a46b72ccc503da0ea068c00b7560a02c24"}
