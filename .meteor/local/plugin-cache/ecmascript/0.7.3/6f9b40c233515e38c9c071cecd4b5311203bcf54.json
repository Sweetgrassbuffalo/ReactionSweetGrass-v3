{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"/client/api","imported":["Reaction","i18next"],"specifiers":[{"kind":"named","imported":"Reaction","local":"Reaction"},{"kind":"named","imported":"i18next","local":"i18next"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/templating","imported":["Template"],"specifiers":[{"kind":"named","imported":"Template","local":"Template"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/client/modules/accounts/templates/members/memberForm.js","filenameRelative":"/client/modules/accounts/templates/members/memberForm.js","inputSourceMap":{"version":3,"sources":["/client/modules/accounts/templates/members/memberForm.js"],"names":["Reaction","i18next","Meteor","Template","memberForm","events","event","template","preventDefault","newMemberEmail","$","val","newMemberName","call","getShopId","error","result","message","reason","t","Alerts","toast","html","timeout","show"],"mappings":"AAAA,IAAS;IAAT,AAAmB;AAAnB,OAAkC,WAAlC;;;;;;;;;;;;;;;;;;;GACA,AAAS,AAAc,A,AACvB,AAAS,AAAgB,AAEzB;AAIA,AAAS,AAAW,AAAO,AACzB,AAAe,AAAU,AAAO,AAAU;;;YAClC,WAAN;AAEM,2BAAiB,OAAA,AAAS,AAAE,UAAlC,AAAuB,AAAkC,AACzD;UAAA,AAAM,AAAgB,AAAS,AAAE,AAAsB,AAEvD,AAAO,AAAO,AAAK,AAA6B,AAAS,AACvD,AAAgB,AAAe,AAAU,AAAO,AAAQ,AACtD;QAAA,AAAI,AAAO,mDACT;QAAA,AAAI,iDACJ;kBAAU,KAAN,AAAiB,sCAArB,AAAyD,AACvD,aAAU,gBAAA,AAAQ,AAAE,wCAApB,AAAU,AACX;AAFD,UAEO,OAAA,AAAI,AAAM,AAAW,AAAI,AAC9B;YADK,AACL,AAAU,AACX;;YAAM,qDACL;AAAW,oBAAE,QAAQ,EAArB,AAAa,AAAU,AACpB,AAAG,AAAM,AACb;;oBACD;AAAO,eAAP,AAAa,AAAS,AAAS,AAC7B;AAD6B,AACvB,8BACN,8CAFF,AAA+B,AAEpB;AAEX;;AAAO,eAAP;;mBAEF,AAAI,AAAQ,AACV;AAFD;AAEQ,eAAP,AAAa,AAAQ,AAAE,AACrB,AAAqB,AAEvB;AAAA,AAAS,AAAE,AAAuC,AAAI,AACtD;;AAAE,kBAAF,AAA4B,AAE5B;AAAO,eAAP,gBACD,uDA1BL,AAAO,AA2BJ,AAEJ;8DApCH,AAA2B;;;;KAWb;;AAPV,CAFA","file":"/client/modules/accounts/templates/members/memberForm.js.map","sourcesContent":["import { Reaction, i18next } from \"/client/api\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Template } from \"meteor/templating\";\n\n/**\n * memberForm events\n *\n */\nTemplate.memberForm.events({\n  \"submit form\": function (event, template) {\n    event.preventDefault();\n\n    const newMemberEmail = template.$('input[name=\"email\"]').val();\n    const newMemberName = template.$('input[name=\"name\"]').val();\n\n    return Meteor.call(\"accounts/inviteShopMember\", Reaction.getShopId(),\n      newMemberEmail, newMemberName, function (error, result) {\n        if (error) {\n          let message;\n          if (error.reason === \"Unable to send invitation email.\") {\n            message = i18next.t(\"accountsUI.error.unableToSendInvitationEmail\");\n          } else if (error.reason !== \"\") {\n            message = error;\n          } else {\n            message = `${i18next.t(\"accountsUI.error.errorSendingEmail\")\n              } ${error}`;\n          }\n          Alerts.toast(message, \"error\", {\n            html: true,\n            timeout: 10000\n          });\n          return false;\n        }\n        if (result) {\n          Alerts.toast(i18next.t(\"accountsUI.info.invitationSent\",\n            \"Invitation sent.\"), \"success\");\n\n          template.$(\"input[type=text], input[type=email]\").val(\"\");\n          $(\".settings-account-list\").show();\n\n          return true;\n        }\n      }\n    );\n  }\n});\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/modules/accounts/templates/members/memberForm.js.map","sourceFileName":"/client/modules/accounts/templates/members/memberForm.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"memberForm"},"ignored":false,"code":"var Reaction = void 0,\n    i18next = void 0;\nmodule.importSync(\"/client/api\", {\n  Reaction: function (v) {\n    Reaction = v;\n  },\n  i18next: function (v) {\n    i18next = v;\n  }\n}, 0);\nvar Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\nvar Template = void 0;\nmodule.importSync(\"meteor/templating\", {\n  Template: function (v) {\n    Template = v;\n  }\n}, 2);\n/**\n * memberForm events\n *\n */Template.memberForm.events({\n  \"submit form\": function (event, template) {\n    event.preventDefault();\n    var newMemberEmail = template.$('input[name=\"email\"]').val();\n    var newMemberName = template.$('input[name=\"name\"]').val();\n    return Meteor.call(\"accounts/inviteShopMember\", Reaction.getShopId(), newMemberEmail, newMemberName, function (error, result) {\n      if (error) {\n        var message = void 0;\n\n        if (error.reason === \"Unable to send invitation email.\") {\n          message = i18next.t(\"accountsUI.error.unableToSendInvitationEmail\");\n        } else if (error.reason !== \"\") {\n          message = error;\n        } else {\n          message = i18next.t(\"accountsUI.error.errorSendingEmail\") + \" \" + error;\n        }\n\n        Alerts.toast(message, \"error\", {\n          html: true,\n          timeout: 10000\n        });\n        return false;\n      }\n\n      if (result) {\n        Alerts.toast(i18next.t(\"accountsUI.info.invitationSent\", \"Invitation sent.\"), \"success\");\n        template.$(\"input[type=text], input[type=email]\").val(\"\");\n        $(\".settings-account-list\").show();\n        return true;\n      }\n    });\n  }\n});","map":{"version":3,"sources":["/client/modules/accounts/templates/members/memberForm.js"],"names":["Reaction","i18next","Meteor","Template","memberForm","events","event","template","preventDefault","newMemberEmail","$","val","newMemberName","call","getShopId","error","result","message","reason","t","Alerts","toast","html","timeout","show"],"mappings":"AAAA,IAAS;IAAT,AAAmB;AAAnB,OAAkC,WAAlC;;;;;;;;;;;;;;;;;;;GACA,AAAS,AAAc,A,AACvB,AAAS,AAAgB,AAEzB;AAIA,AAAS,AAAW,AAAO,AACzB,AAAe,AAAU,AAAO,AAAU;;;YAClC,WAAN;AAEM,2BAAiB,OAAA,AAAS,AAAE,UAAlC,AAAuB,AAAkC,AACzD;UAAA,AAAM,AAAgB,AAAS,AAAE,AAAsB,AAEvD,AAAO,AAAO,AAAK,AAA6B,AAAS,AACvD,AAAgB,AAAe,AAAU,AAAO,AAAQ,AACtD;QAAA,AAAI,AAAO,mDACT;QAAA,AAAI,iDACJ;kBAAU,KAAN,AAAiB,sCAArB,AAAyD,AACvD,aAAU,gBAAA,AAAQ,AAAE,wCAApB,AAAU,AACX;AAFD,UAEO,OAAA,AAAI,AAAM,AAAW,AAAI,AAC9B;YADK,AACL,AAAU,AACX;;YAAM,qDACL;AAAW,oBAAE,QAAQ,EAArB,AAAa,AAAU,AACpB,AAAG,AAAM,AACb;;oBACD;AAAO,eAAP,AAAa,AAAS,AAAS,AAC7B;AAD6B,AACvB,8BACN,8CAFF,AAA+B,AAEpB;AAEX;;AAAO,eAAP;;mBAEF,AAAI,AAAQ,AACV;AAFD;AAEQ,eAAP,AAAa,AAAQ,AAAE,AACrB,AAAqB,AAEvB;AAAA,AAAS,AAAE,AAAuC,AAAI,AACtD;;AAAE,kBAAF,AAA4B,AAE5B;AAAO,eAAP,gBACD,uDA1BL,AAAO,AA2BJ,AAEJ;8DApCH,AAA2B;;;;KAWb;;AAPV,CAFA","file":"/client/modules/accounts/templates/members/memberForm.js.map","sourcesContent":["import { Reaction, i18next } from \"/client/api\";\nimport { Meteor } from \"meteor/meteor\";\nimport { Template } from \"meteor/templating\";\n\n/**\n * memberForm events\n *\n */\nTemplate.memberForm.events({\n  \"submit form\": function (event, template) {\n    event.preventDefault();\n\n    const newMemberEmail = template.$('input[name=\"email\"]').val();\n    const newMemberName = template.$('input[name=\"name\"]').val();\n\n    return Meteor.call(\"accounts/inviteShopMember\", Reaction.getShopId(),\n      newMemberEmail, newMemberName, function (error, result) {\n        if (error) {\n          let message;\n          if (error.reason === \"Unable to send invitation email.\") {\n            message = i18next.t(\"accountsUI.error.unableToSendInvitationEmail\");\n          } else if (error.reason !== \"\") {\n            message = error;\n          } else {\n            message = `${i18next.t(\"accountsUI.error.errorSendingEmail\")\n              } ${error}`;\n          }\n          Alerts.toast(message, \"error\", {\n            html: true,\n            timeout: 10000\n          });\n          return false;\n        }\n        if (result) {\n          Alerts.toast(i18next.t(\"accountsUI.info.invitationSent\",\n            \"Invitation sent.\"), \"success\");\n\n          template.$(\"input[type=text], input[type=email]\").val(\"\");\n          $(\".settings-account-list\").show();\n\n          return true;\n        }\n      }\n    );\n  }\n});\n"]},"hash":"6f9b40c233515e38c9c071cecd4b5311203bcf54"}
