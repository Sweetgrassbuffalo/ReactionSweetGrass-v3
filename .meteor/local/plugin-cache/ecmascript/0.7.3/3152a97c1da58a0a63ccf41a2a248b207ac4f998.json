{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"react","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"React"}]},{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"/lib/api/compose","imported":["composeWithTracker"],"specifiers":[{"kind":"named","imported":"composeWithTracker","local":"composeWithTracker"}]},{"source":"/client/api","imported":["Reaction","i18next"],"specifiers":[{"kind":"named","imported":"Reaction","local":"Reaction"},{"kind":"named","imported":"i18next","local":"i18next"}]},{"source":"/lib/collections","imported":["Tags"],"specifiers":[{"kind":"named","imported":"Tags","local":"Tags"}]},{"source":"/imports/plugins/core/ui/client/providers","imported":["TranslationProvider","AdminContextProvider"],"specifiers":[{"kind":"named","imported":"TranslationProvider","local":"TranslationProvider"},{"kind":"named","imported":"AdminContextProvider","local":"AdminContextProvider"}]},{"source":"/imports/plugins/core/revisions/lib/api","imported":["isRevisionControlEnabled"],"specifiers":[{"kind":"named","imported":"isRevisionControlEnabled","local":"isRevisionControlEnabled"}]}],"exports":{"exported":["ToolbarContainer","Comp"],"specifiers":[{"kind":"local","local":"ToolbarContainer","exported":"default"},{"kind":"local","local":"Comp","exported":"default"}]}}},"options":{"filename":"/imports/plugins/core/dashboard/client/containers/toolbarContainer.js","filenameRelative":"/imports/plugins/core/dashboard/client/containers/toolbarContainer.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/core/dashboard/client/containers/toolbarContainer.js"],"names":["React","Meteor","composeWithTracker","Reaction","i18next","Tags","TranslationProvider","AdminContextProvider","isRevisionControlEnabled","handleAddProduct","setUserPreferences","call","error","productId","isClient","currentTag","currentTagId","Error","Session","get","findOne","name","Router","go","handle","handleViewContextChange","event","value","isPreview","saveActionViewState","getActionView","hideActionView","composer","props","onData","routeName","getRouteName","packageButtons","showPackageShortcuts","registryItems","Apps","provides","container","item","hasPermission","route","userId","icon","push","href","tooltip","t","i18nKeyLabel","i18n","tooltipPosition","onClick","showActionView","dashboardHeaderTemplate","data","dashboardHeader","isEnabled","isActionViewAtRootView","actionViewIsOpen","isActionViewOpen","hasCreateProductAccess","shopId","onAddProduct","onViewContextChange","ToolbarContainer","Comp","CompositeComponent"],"mappings":"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","file":"/imports/plugins/core/dashboard/client/containers/toolbarContainer.js.map","sourcesContent":["import React from \"react\";\nimport { Meteor } from \"meteor/meteor\";\nimport { composeWithTracker } from \"/lib/api/compose\";\nimport { Reaction, i18next } from \"/client/api\";\nimport { Tags } from \"/lib/collections\";\nimport { TranslationProvider, AdminContextProvider } from \"/imports/plugins/core/ui/client/providers\";\nimport { isRevisionControlEnabled } from \"/imports/plugins/core/revisions/lib/api\";\n\nconst handleAddProduct = () => {\n  Reaction.setUserPreferences(\"reaction-dashboard\", \"viewAs\", \"administrator\");\n  Meteor.call(\"products/createProduct\", (error, productId) => {\n    if (Meteor.isClient) {\n      let currentTag;\n      let currentTagId;\n\n      if (error) {\n        throw new Meteor.Error(\"createProduct error\", error);\n      } else if (productId) {\n        currentTagId = Session.get(\"currentTag\");\n        currentTag = Tags.findOne(currentTagId);\n        if (currentTag) {\n          Meteor.call(\"products/updateProductTags\", productId, currentTag.name, currentTagId);\n        }\n        // go to new product\n        Reaction.Router.go(\"product\", {\n          handle: productId\n        });\n      }\n    }\n  });\n};\n\nconst handleViewContextChange = (event, value) => {\n  Reaction.setUserPreferences(\"reaction-dashboard\", \"viewAs\", value);\n\n  if (Reaction.isPreview() === true) {\n    // Save last action view state\n    const saveActionViewState = Reaction.getActionView();\n    Reaction.setUserPreferences(\"reaction-dashboard\", \"savedActionViewState\", saveActionViewState);\n\n    // hideActionView during isPreview === true\n    Reaction.hideActionView();\n  } else {\n    // // Reload previous actionView, if saved. Otherwise, don't show.\n    // const savedActionViewState = Reaction.getUserPreferences(\"reaction-dashboard\", \"savedActionViewState\");\n    //\n    // if (savedActionViewState) {\n    //   Reaction.showActionView(savedActionViewState);\n    // }\n  }\n};\n\nfunction composer(props, onData) {\n  // Reactive data sources\n  const routeName = Reaction.Router.getRouteName();\n\n  // Standard variables\n  const packageButtons = [];\n\n  if (routeName !== \"dashboard\" && props.showPackageShortcuts) {\n    const registryItems = Reaction.Apps({ provides: \"settings\", container: \"dashboard\" });\n\n    for (const item of registryItems) {\n      if (Reaction.hasPermission(item.route, Meteor.userId())) {\n        let icon = item.icon;\n\n        if (!item.icon && item.provides === \"settings\") {\n          icon = \"gear\";\n        }\n\n        packageButtons.push({\n          href: item.route,\n          icon: icon,\n          tooltip: i18next.t(item.i18nKeyLabel, item.i18n),\n          tooltipPosition: \"left middle\",\n          onClick() {\n            Reaction.showActionView(item);\n          }\n        });\n      }\n    }\n  }\n\n  onData(null, {\n    packageButtons,\n    dashboardHeaderTemplate: props.data.dashboardHeader,\n    isPreview: Reaction.isPreview(),\n    isEnabled: isRevisionControlEnabled(),\n    isActionViewAtRootView: Reaction.isActionViewAtRootView(),\n    actionViewIsOpen: Reaction.isActionViewOpen(),\n    hasCreateProductAccess: Reaction.hasPermission(\"createProduct\", Meteor.userId(), Reaction.shopId),\n\n    // Callbacks\n    onAddProduct: handleAddProduct,\n    onViewContextChange: handleViewContextChange\n  });\n}\n\nexport default function ToolbarContainer(Comp) {\n  function CompositeComponent(props) {\n    return (\n      <TranslationProvider>\n        <AdminContextProvider>\n          <Comp {...props} />\n        </AdminContextProvider>\n      </TranslationProvider>\n    );\n  }\n\n  return composeWithTracker(composer, null)(CompositeComponent);\n}\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/core/dashboard/client/containers/toolbarContainer.js.map","sourceFileName":"/imports/plugins/core/dashboard/client/containers/toolbarContainer.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"toolbarContainer"},"ignored":false,"code":"module.export({\n  \"default\": function () {\n    return ToolbarContainer;\n  }\n});\nvar React = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  }\n}, 0);\nvar Meteor = void 0;\nmodule.importSync(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\nvar composeWithTracker = void 0;\nmodule.importSync(\"/lib/api/compose\", {\n  composeWithTracker: function (v) {\n    composeWithTracker = v;\n  }\n}, 2);\nvar Reaction = void 0,\n    i18next = void 0;\nmodule.importSync(\"/client/api\", {\n  Reaction: function (v) {\n    Reaction = v;\n  },\n  i18next: function (v) {\n    i18next = v;\n  }\n}, 3);\nvar Tags = void 0;\nmodule.importSync(\"/lib/collections\", {\n  Tags: function (v) {\n    Tags = v;\n  }\n}, 4);\nvar TranslationProvider = void 0,\n    AdminContextProvider = void 0;\nmodule.importSync(\"/imports/plugins/core/ui/client/providers\", {\n  TranslationProvider: function (v) {\n    TranslationProvider = v;\n  },\n  AdminContextProvider: function (v) {\n    AdminContextProvider = v;\n  }\n}, 5);\nvar isRevisionControlEnabled = void 0;\nmodule.importSync(\"/imports/plugins/core/revisions/lib/api\", {\n  isRevisionControlEnabled: function (v) {\n    isRevisionControlEnabled = v;\n  }\n}, 6);\n\nvar handleAddProduct = function () {\n  Reaction.setUserPreferences(\"reaction-dashboard\", \"viewAs\", \"administrator\");\n  Meteor.call(\"products/createProduct\", function (error, productId) {\n    if (Meteor.isClient) {\n      var currentTag = void 0;\n      var currentTagId = void 0;\n\n      if (error) {\n        throw new Meteor.Error(\"createProduct error\", error);\n      } else if (productId) {\n        currentTagId = Session.get(\"currentTag\");\n        currentTag = Tags.findOne(currentTagId);\n\n        if (currentTag) {\n          Meteor.call(\"products/updateProductTags\", productId, currentTag.name, currentTagId);\n        } // go to new product\n\n\n        Reaction.Router.go(\"product\", {\n          handle: productId\n        });\n      }\n    }\n  });\n};\n\nvar handleViewContextChange = function (event, value) {\n  Reaction.setUserPreferences(\"reaction-dashboard\", \"viewAs\", value);\n\n  if (Reaction.isPreview() === true) {\n    // Save last action view state\n    var saveActionViewState = Reaction.getActionView();\n    Reaction.setUserPreferences(\"reaction-dashboard\", \"savedActionViewState\", saveActionViewState); // hideActionView during isPreview === true\n\n    Reaction.hideActionView();\n  } else {// // Reload previous actionView, if saved. Otherwise, don't show.\n    // const savedActionViewState = Reaction.getUserPreferences(\"reaction-dashboard\", \"savedActionViewState\");\n    //\n    // if (savedActionViewState) {\n    //   Reaction.showActionView(savedActionViewState);\n    // }\n  }\n};\n\nfunction composer(props, onData) {\n  // Reactive data sources\n  var routeName = Reaction.Router.getRouteName(); // Standard variables\n\n  var packageButtons = [];\n\n  if (routeName !== \"dashboard\" && props.showPackageShortcuts) {\n    var registryItems = Reaction.Apps({\n      provides: \"settings\",\n      container: \"dashboard\"\n    });\n\n    var _loop = function (item) {\n      if (Reaction.hasPermission(item.route, Meteor.userId())) {\n        var icon = item.icon;\n\n        if (!item.icon && item.provides === \"settings\") {\n          icon = \"gear\";\n        }\n\n        packageButtons.push({\n          href: item.route,\n          icon: icon,\n          tooltip: i18next.t(item.i18nKeyLabel, item.i18n),\n          tooltipPosition: \"left middle\",\n          onClick: function () {\n            Reaction.showActionView(item);\n          }\n        });\n      }\n    };\n\n    for (var _iterator = registryItems, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var item = _ref;\n\n      _loop(item);\n    }\n  }\n\n  onData(null, {\n    packageButtons: packageButtons,\n    dashboardHeaderTemplate: props.data.dashboardHeader,\n    isPreview: Reaction.isPreview(),\n    isEnabled: isRevisionControlEnabled(),\n    isActionViewAtRootView: Reaction.isActionViewAtRootView(),\n    actionViewIsOpen: Reaction.isActionViewOpen(),\n    hasCreateProductAccess: Reaction.hasPermission(\"createProduct\", Meteor.userId(), Reaction.shopId),\n    // Callbacks\n    onAddProduct: handleAddProduct,\n    onViewContextChange: handleViewContextChange\n  });\n}\n\nfunction ToolbarContainer(Comp) {\n  function CompositeComponent(props) {\n    return React.createElement(\n      TranslationProvider,\n      null,\n      React.createElement(\n        AdminContextProvider,\n        null,\n        React.createElement(Comp, props)\n      )\n    );\n  }\n\n  return composeWithTracker(composer, null)(CompositeComponent);\n}","map":{"version":3,"sources":["/imports/plugins/core/dashboard/client/containers/toolbarContainer.js"],"names":["React","Meteor","composeWithTracker","Reaction","i18next","Tags","TranslationProvider","AdminContextProvider","isRevisionControlEnabled","handleAddProduct","setUserPreferences","call","error","productId","isClient","currentTag","currentTagId","Error","Session","get","findOne","name","Router","go","handle","handleViewContextChange","event","value","isPreview","saveActionViewState","getActionView","hideActionView","composer","props","onData","routeName","getRouteName","packageButtons","showPackageShortcuts","registryItems","Apps","provides","container","item","hasPermission","route","userId","icon","push","href","tooltip","t","i18nKeyLabel","i18n","tooltipPosition","onClick","showActionView","dashboardHeaderTemplate","data","dashboardHeader","isEnabled","isActionViewAtRootView","actionViewIsOpen","isActionViewOpen","hasCreateProductAccess","shopId","onAddProduct","onViewContextChange","ToolbarContainer","Comp","CompositeComponent"],"mappings":"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","file":"/imports/plugins/core/dashboard/client/containers/toolbarContainer.js.map","sourcesContent":["import React from \"react\";\nimport { Meteor } from \"meteor/meteor\";\nimport { composeWithTracker } from \"/lib/api/compose\";\nimport { Reaction, i18next } from \"/client/api\";\nimport { Tags } from \"/lib/collections\";\nimport { TranslationProvider, AdminContextProvider } from \"/imports/plugins/core/ui/client/providers\";\nimport { isRevisionControlEnabled } from \"/imports/plugins/core/revisions/lib/api\";\n\nconst handleAddProduct = () => {\n  Reaction.setUserPreferences(\"reaction-dashboard\", \"viewAs\", \"administrator\");\n  Meteor.call(\"products/createProduct\", (error, productId) => {\n    if (Meteor.isClient) {\n      let currentTag;\n      let currentTagId;\n\n      if (error) {\n        throw new Meteor.Error(\"createProduct error\", error);\n      } else if (productId) {\n        currentTagId = Session.get(\"currentTag\");\n        currentTag = Tags.findOne(currentTagId);\n        if (currentTag) {\n          Meteor.call(\"products/updateProductTags\", productId, currentTag.name, currentTagId);\n        }\n        // go to new product\n        Reaction.Router.go(\"product\", {\n          handle: productId\n        });\n      }\n    }\n  });\n};\n\nconst handleViewContextChange = (event, value) => {\n  Reaction.setUserPreferences(\"reaction-dashboard\", \"viewAs\", value);\n\n  if (Reaction.isPreview() === true) {\n    // Save last action view state\n    const saveActionViewState = Reaction.getActionView();\n    Reaction.setUserPreferences(\"reaction-dashboard\", \"savedActionViewState\", saveActionViewState);\n\n    // hideActionView during isPreview === true\n    Reaction.hideActionView();\n  } else {\n    // // Reload previous actionView, if saved. Otherwise, don't show.\n    // const savedActionViewState = Reaction.getUserPreferences(\"reaction-dashboard\", \"savedActionViewState\");\n    //\n    // if (savedActionViewState) {\n    //   Reaction.showActionView(savedActionViewState);\n    // }\n  }\n};\n\nfunction composer(props, onData) {\n  // Reactive data sources\n  const routeName = Reaction.Router.getRouteName();\n\n  // Standard variables\n  const packageButtons = [];\n\n  if (routeName !== \"dashboard\" && props.showPackageShortcuts) {\n    const registryItems = Reaction.Apps({ provides: \"settings\", container: \"dashboard\" });\n\n    for (const item of registryItems) {\n      if (Reaction.hasPermission(item.route, Meteor.userId())) {\n        let icon = item.icon;\n\n        if (!item.icon && item.provides === \"settings\") {\n          icon = \"gear\";\n        }\n\n        packageButtons.push({\n          href: item.route,\n          icon: icon,\n          tooltip: i18next.t(item.i18nKeyLabel, item.i18n),\n          tooltipPosition: \"left middle\",\n          onClick() {\n            Reaction.showActionView(item);\n          }\n        });\n      }\n    }\n  }\n\n  onData(null, {\n    packageButtons,\n    dashboardHeaderTemplate: props.data.dashboardHeader,\n    isPreview: Reaction.isPreview(),\n    isEnabled: isRevisionControlEnabled(),\n    isActionViewAtRootView: Reaction.isActionViewAtRootView(),\n    actionViewIsOpen: Reaction.isActionViewOpen(),\n    hasCreateProductAccess: Reaction.hasPermission(\"createProduct\", Meteor.userId(), Reaction.shopId),\n\n    // Callbacks\n    onAddProduct: handleAddProduct,\n    onViewContextChange: handleViewContextChange\n  });\n}\n\nexport default function ToolbarContainer(Comp) {\n  function CompositeComponent(props) {\n    return (\n      <TranslationProvider>\n        <AdminContextProvider>\n          <Comp {...props} />\n        </AdminContextProvider>\n      </TranslationProvider>\n    );\n  }\n\n  return composeWithTracker(composer, null)(CompositeComponent);\n}\n"]},"hash":"3152a97c1da58a0a63ccf41a2a248b207ac4f998"}
