{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component","PropTypes"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"},{"kind":"named","imported":"PropTypes","local":"PropTypes"}]},{"source":"/imports/plugins/core/ui/client/components","imported":["Button","Card","CardHeader","CardBody","CardGroup","TextField","Select"],"specifiers":[{"kind":"named","imported":"Button","local":"Button"},{"kind":"named","imported":"Card","local":"Card"},{"kind":"named","imported":"CardHeader","local":"CardHeader"},{"kind":"named","imported":"CardBody","local":"CardBody"},{"kind":"named","imported":"CardGroup","local":"CardGroup"},{"kind":"named","imported":"TextField","local":"TextField"},{"kind":"named","imported":"Select","local":"Select"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/included/sms/client/components/smsSettings.js","filenameRelative":"/imports/plugins/included/sms/client/components/smsSettings.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/included/sms/client/components/smsSettings.js"],"names":["React","Component","PropTypes","Button","Card","CardHeader","CardBody","CardGroup","TextField","Select","SmsSettings","constructor","props","state","settings","isSaving","handleStateChange","bind","handleSubmit","handleSelect","e","target","name","value","setState","preventDefault","saveSettings","smsProvider","handleProductFieldSave","productId","fieldName","updateValue","Reaction","getSlug","Meteor","call","render","smsProviders","label","smsPhone","apiKey","apiToken","propTypes","func","isRequired","shape","string"],"mappings":"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","file":"/imports/plugins/included/sms/client/components/smsSettings.js.map","sourcesContent":["import React, { Component, PropTypes } from \"react\";\nimport { Button, Card, CardHeader, CardBody, CardGroup, TextField, Select } from \"/imports/plugins/core/ui/client/components\";\n\nclass SmsSettings extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      settings: props.settings || {},\n      isSaving: false\n    };\n    this.handleStateChange = this.handleStateChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n  }\n\n  handleStateChange(e) {\n    const { settings } = this.state;\n    settings[e.target.name] = e.target.value;\n    this.setState({ settings });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const { saveSettings } = this.props;\n    const { settings } = this.state;\n    this.setState({ isSaving: true });\n    saveSettings(settings, () => this.setState({ isSaving: false }));\n  }\n\n  handleSelect(e) {\n    const { settings } = this.state;\n    settings.smsProvider = e;\n    this.setState({ settings });\n  }\n\n  handleProductFieldSave = (productId, fieldName, value) => {\n    let updateValue = value;\n    // special case, slugify handles.\n    if (fieldName === \"handle\") {\n      updateValue = Reaction.getSlug(value);\n    }\n    Meteor.call(\"products/updateProductField\", productId, fieldName, updateValue);\n  }\n\n\n  render() {\n    const settings = this.state.settings;\n    const isSaving = this.state.isSaving;\n\n    const smsProviders = [{\n      label: \"Twilio\", value: \"twilio\"\n    }, {\n      label: \"Nexmo\", value: \"nexmo\"\n    }];\n\n    return (\n      <CardGroup>\n        <Card\n          expanded={true}\n        >\n          <CardHeader\n            actAsExpander={true}\n            i18nKeyTitle=\"admin.settings.smsProvider\"\n            title=\"SMS Provider\"\n          />\n          <CardBody expandable={true}>\n            <form onSubmit={this.handleSubmit}>\n              <Select\n                clearable={false}\n                label=\"Provider Name\"\n                i18nKeyLabel=\"admin.settings.providerName\"\n                placeholder=\"Select an SMS provider\"\n                i18nKeyPlaceholder=\"admin.settings.selectProvider\"\n                name=\"smsProvider\"\n                onChange={this.handleSelect}\n                options={smsProviders}\n                value={settings.smsProvider || \"\"}\n              />\n              <hr/>\n              <TextField\n                label=\"SMS Phone Number\"\n                type=\"text\"\n                i18nKeyLabel=\"admin.settings.phoneNumber\"\n                name=\"smsPhone\"\n                value={settings.smsPhone || \"\"}\n                onChange={this.handleStateChange}\n              />\n              <TextField\n                label=\"API Key\"\n                type=\"password\"\n                i18nKeyLabel=\"admin.settings.apiKey\"\n                name=\"apiKey\"\n                value={settings.apiKey || \"\"}\n                onChange={this.handleStateChange}\n              />\n              <TextField\n                label=\"API Token/Secret\"\n                type=\"password\"\n                i18nKeyLabel=\"admin.settings.apiToken\"\n                name=\"apiToken\"\n                value={settings.apiToken || \"\"}\n                onChange={this.handleStateChange}\n              />\n              <Button\n                bezelStyle=\"solid\"\n                status=\"primary\"\n                className=\"pull-right\"\n                type=\"submit\" disabled={isSaving}\n              >\n                {isSaving ?\n                    <i className=\"fa fa-refresh fa-spin\"/>\n                  : <span data-i18n=\"app.save\">Save</span>}\n              </Button>\n            </form>\n          </CardBody>\n        </Card>\n      </CardGroup>\n    );\n  }\n}\n\nSmsSettings.propTypes = {\n  saveSettings: PropTypes.func.isRequired,\n  settings: PropTypes.shape({\n    apiKey: PropTypes.string,\n    apiToken: PropTypes.string,\n    smsPhone: PropTypes.string,\n    smsProvider: PropTypes.string\n  })\n};\n\nexport default SmsSettings;\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/included/sms/client/components/smsSettings.js.map","sourceFileName":"/imports/plugins/included/sms/client/components/smsSettings.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"smsSettings"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0,\n    Component = void 0,\n    PropTypes = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  },\n  PropTypes: function (v) {\n    PropTypes = v;\n  }\n}, 0);\nvar Button = void 0,\n    Card = void 0,\n    CardHeader = void 0,\n    CardBody = void 0,\n    CardGroup = void 0,\n    TextField = void 0,\n    Select = void 0;\nmodule.importSync(\"/imports/plugins/core/ui/client/components\", {\n  Button: function (v) {\n    Button = v;\n  },\n  Card: function (v) {\n    Card = v;\n  },\n  CardHeader: function (v) {\n    CardHeader = v;\n  },\n  CardBody: function (v) {\n    CardBody = v;\n  },\n  CardGroup: function (v) {\n    CardGroup = v;\n  },\n  TextField: function (v) {\n    TextField = v;\n  },\n  Select: function (v) {\n    Select = v;\n  }\n}, 1);\n\nvar SmsSettings = function (_Component) {\n  (0, _inherits3.default)(SmsSettings, _Component);\n\n  function SmsSettings(props) {\n    (0, _classCallCheck3.default)(this, SmsSettings);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));\n\n    _this.handleProductFieldSave = function (productId, fieldName, value) {\n      var updateValue = value; // special case, slugify handles.\n\n      if (fieldName === \"handle\") {\n        updateValue = Reaction.getSlug(value);\n      }\n\n      Meteor.call(\"products/updateProductField\", productId, fieldName, updateValue);\n    };\n\n    _this.state = {\n      settings: props.settings || {},\n      isSaving: false\n    };\n    _this.handleStateChange = _this.handleStateChange.bind(_this);\n    _this.handleSubmit = _this.handleSubmit.bind(_this);\n    _this.handleSelect = _this.handleSelect.bind(_this);\n    return _this;\n  }\n\n  SmsSettings.prototype.handleStateChange = function () {\n    function handleStateChange(e) {\n      var settings = this.state.settings;\n      settings[e.target.name] = e.target.value;\n      this.setState({\n        settings: settings\n      });\n    }\n\n    return handleStateChange;\n  }();\n\n  SmsSettings.prototype.handleSubmit = function () {\n    function handleSubmit(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n      var saveSettings = this.props.saveSettings;\n      var settings = this.state.settings;\n      this.setState({\n        isSaving: true\n      });\n      saveSettings(settings, function () {\n        return _this2.setState({\n          isSaving: false\n        });\n      });\n    }\n\n    return handleSubmit;\n  }();\n\n  SmsSettings.prototype.handleSelect = function () {\n    function handleSelect(e) {\n      var settings = this.state.settings;\n      settings.smsProvider = e;\n      this.setState({\n        settings: settings\n      });\n    }\n\n    return handleSelect;\n  }();\n\n  SmsSettings.prototype.render = function () {\n    function render() {\n      var settings = this.state.settings;\n      var isSaving = this.state.isSaving;\n      var smsProviders = [{\n        label: \"Twilio\",\n        value: \"twilio\"\n      }, {\n        label: \"Nexmo\",\n        value: \"nexmo\"\n      }];\n      return React.createElement(\n        CardGroup,\n        null,\n        React.createElement(\n          Card,\n          {\n            expanded: true\n          },\n          React.createElement(CardHeader, {\n            actAsExpander: true,\n            i18nKeyTitle: \"admin.settings.smsProvider\",\n            title: \"SMS Provider\"\n          }),\n          React.createElement(\n            CardBody,\n            {\n              expandable: true\n            },\n            React.createElement(\n              \"form\",\n              {\n                onSubmit: this.handleSubmit\n              },\n              React.createElement(Select, {\n                clearable: false,\n                label: \"Provider Name\",\n                i18nKeyLabel: \"admin.settings.providerName\",\n                placeholder: \"Select an SMS provider\",\n                i18nKeyPlaceholder: \"admin.settings.selectProvider\",\n                name: \"smsProvider\",\n                onChange: this.handleSelect,\n                options: smsProviders,\n                value: settings.smsProvider || \"\"\n              }),\n              React.createElement(\"hr\", null),\n              React.createElement(TextField, {\n                label: \"SMS Phone Number\",\n                type: \"text\",\n                i18nKeyLabel: \"admin.settings.phoneNumber\",\n                name: \"smsPhone\",\n                value: settings.smsPhone || \"\",\n                onChange: this.handleStateChange\n              }),\n              React.createElement(TextField, {\n                label: \"API Key\",\n                type: \"password\",\n                i18nKeyLabel: \"admin.settings.apiKey\",\n                name: \"apiKey\",\n                value: settings.apiKey || \"\",\n                onChange: this.handleStateChange\n              }),\n              React.createElement(TextField, {\n                label: \"API Token/Secret\",\n                type: \"password\",\n                i18nKeyLabel: \"admin.settings.apiToken\",\n                name: \"apiToken\",\n                value: settings.apiToken || \"\",\n                onChange: this.handleStateChange\n              }),\n              React.createElement(\n                Button,\n                {\n                  bezelStyle: \"solid\",\n                  status: \"primary\",\n                  className: \"pull-right\",\n                  type: \"submit\",\n                  disabled: isSaving\n                },\n                isSaving ? React.createElement(\"i\", {\n                  className: \"fa fa-refresh fa-spin\"\n                }) : React.createElement(\n                  \"span\",\n                  {\n                    \"data-i18n\": \"app.save\"\n                  },\n                  \"Save\"\n                )\n              )\n            )\n          )\n        )\n      );\n    }\n\n    return render;\n  }();\n\n  return SmsSettings;\n}(Component);\n\nSmsSettings.propTypes = {\n  saveSettings: PropTypes.func.isRequired,\n  settings: PropTypes.shape({\n    apiKey: PropTypes.string,\n    apiToken: PropTypes.string,\n    smsPhone: PropTypes.string,\n    smsProvider: PropTypes.string\n  })\n};\nmodule.export(\"default\", exports.default = SmsSettings);","map":{"version":3,"sources":["/imports/plugins/included/sms/client/components/smsSettings.js"],"names":["React","Component","PropTypes","Button","Card","CardHeader","CardBody","CardGroup","TextField","Select","SmsSettings","constructor","props","state","settings","isSaving","handleStateChange","bind","handleSubmit","handleSelect","e","target","name","value","setState","preventDefault","saveSettings","smsProvider","handleProductFieldSave","productId","fieldName","updateValue","Reaction","getSlug","Meteor","call","render","smsProviders","label","smsPhone","apiKey","apiToken","propTypes","func","isRequired","shape","string"],"mappings":"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","file":"/imports/plugins/included/sms/client/components/smsSettings.js.map","sourcesContent":["import React, { Component, PropTypes } from \"react\";\nimport { Button, Card, CardHeader, CardBody, CardGroup, TextField, Select } from \"/imports/plugins/core/ui/client/components\";\n\nclass SmsSettings extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      settings: props.settings || {},\n      isSaving: false\n    };\n    this.handleStateChange = this.handleStateChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n  }\n\n  handleStateChange(e) {\n    const { settings } = this.state;\n    settings[e.target.name] = e.target.value;\n    this.setState({ settings });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const { saveSettings } = this.props;\n    const { settings } = this.state;\n    this.setState({ isSaving: true });\n    saveSettings(settings, () => this.setState({ isSaving: false }));\n  }\n\n  handleSelect(e) {\n    const { settings } = this.state;\n    settings.smsProvider = e;\n    this.setState({ settings });\n  }\n\n  handleProductFieldSave = (productId, fieldName, value) => {\n    let updateValue = value;\n    // special case, slugify handles.\n    if (fieldName === \"handle\") {\n      updateValue = Reaction.getSlug(value);\n    }\n    Meteor.call(\"products/updateProductField\", productId, fieldName, updateValue);\n  }\n\n\n  render() {\n    const settings = this.state.settings;\n    const isSaving = this.state.isSaving;\n\n    const smsProviders = [{\n      label: \"Twilio\", value: \"twilio\"\n    }, {\n      label: \"Nexmo\", value: \"nexmo\"\n    }];\n\n    return (\n      <CardGroup>\n        <Card\n          expanded={true}\n        >\n          <CardHeader\n            actAsExpander={true}\n            i18nKeyTitle=\"admin.settings.smsProvider\"\n            title=\"SMS Provider\"\n          />\n          <CardBody expandable={true}>\n            <form onSubmit={this.handleSubmit}>\n              <Select\n                clearable={false}\n                label=\"Provider Name\"\n                i18nKeyLabel=\"admin.settings.providerName\"\n                placeholder=\"Select an SMS provider\"\n                i18nKeyPlaceholder=\"admin.settings.selectProvider\"\n                name=\"smsProvider\"\n                onChange={this.handleSelect}\n                options={smsProviders}\n                value={settings.smsProvider || \"\"}\n              />\n              <hr/>\n              <TextField\n                label=\"SMS Phone Number\"\n                type=\"text\"\n                i18nKeyLabel=\"admin.settings.phoneNumber\"\n                name=\"smsPhone\"\n                value={settings.smsPhone || \"\"}\n                onChange={this.handleStateChange}\n              />\n              <TextField\n                label=\"API Key\"\n                type=\"password\"\n                i18nKeyLabel=\"admin.settings.apiKey\"\n                name=\"apiKey\"\n                value={settings.apiKey || \"\"}\n                onChange={this.handleStateChange}\n              />\n              <TextField\n                label=\"API Token/Secret\"\n                type=\"password\"\n                i18nKeyLabel=\"admin.settings.apiToken\"\n                name=\"apiToken\"\n                value={settings.apiToken || \"\"}\n                onChange={this.handleStateChange}\n              />\n              <Button\n                bezelStyle=\"solid\"\n                status=\"primary\"\n                className=\"pull-right\"\n                type=\"submit\" disabled={isSaving}\n              >\n                {isSaving ?\n                    <i className=\"fa fa-refresh fa-spin\"/>\n                  : <span data-i18n=\"app.save\">Save</span>}\n              </Button>\n            </form>\n          </CardBody>\n        </Card>\n      </CardGroup>\n    );\n  }\n}\n\nSmsSettings.propTypes = {\n  saveSettings: PropTypes.func.isRequired,\n  settings: PropTypes.shape({\n    apiKey: PropTypes.string,\n    apiToken: PropTypes.string,\n    smsPhone: PropTypes.string,\n    smsProvider: PropTypes.string\n  })\n};\n\nexport default SmsSettings;\n"]},"hash":"03dd237ccf2c142a808bf6a30814fba5bd974fd8"}
