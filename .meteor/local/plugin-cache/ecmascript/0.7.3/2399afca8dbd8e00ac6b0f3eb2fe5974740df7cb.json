{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Children","Component","PropTypes"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Children","local":"Children"},{"kind":"named","imported":"Component","local":"Component"},{"kind":"named","imported":"PropTypes","local":"PropTypes"}]},{"source":"classnames","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"classnames"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/core/ui/client/components/cards/card.js","filenameRelative":"/imports/plugins/core/ui/client/components/cards/card.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/core/ui/client/components/cards/card.js"],"names":["React","Children","Component","PropTypes","classnames","Card","constructor","props","state","expanded","componentWillReceiveProps","nextProps","setState","handleExpanderClick","event","onExpand","name","render","elements","map","children","child","newProps","actAsExpander","onClick","expandable","cloneElement","baseClassName","style","defaultProps","propTypes","node","bool","string","func","object"],"mappings":";;;;;;;;;;;;;;AAAA;IAAA;;;OAAA,AAAsD,WAAtD;;;;;;;;;;;;;;;;;;;GACA,AAAO,AAAgB,AAEvB;;IAAA,AAAM;;;AAGI,gBAAN;AAEA;;+DAAK,sBAAL,AAAa,AACX,AAAU,AAAM;;UAYN,AAAC,AAAK,gCAAL,AAAW,OADV;AAAd,AAEG,YAAM;AACH,mBAAO,MAAA,AAAK,MAAhB,AAAI,AAAkB,AAAa,AAAY,AAC7C;AADF,qBACE,AAAK,AAAM,AAAS,AAAO,AAAM,AAAK,AAAM,AAAM,AAAK,AAAM,AAC9D;wDALH,AAMC;2EAPH,AAQC;;AAED;AAAS,AACP,AAAM,AAAW,AAAS,AAAI,AAAK,AAAM,AAAU,AAAC,AAAU,AAC5D;;AAvBF;sBAKF;AAFC;;AAED,AAA0B,AAAW,AACnC,AAAK,AAAS,AACZ;;iBAAU,AAAU;kDADR;AAAd;4BAKF;AAFC;AAEqB,AAAC,AAAU,AAC/B,AAAK,AAAS,AACZ;;;;;;;AAUA,AAAM,AAAW;;wEAEjB;AAAI,YAAA,AAAM,AAAM,WAAhB,AAA+B,AAC7B,AAAS,AAAgB,AACzB;;kBAAS,MAAT,AAAmB,AAAK,eAAxB,AACD;;oCAED;AAAA,AAAI,AAAM,AAAM,AAAc,AAAM,AAAM,AAAe,AACvD,AAAS,AAAW,AAAK,AAAM,AAChC;;;2CAED;AAZF,AAAiB,AAYf,AAAO,AAAM,AAAa,AAAO,AAClC,AAED;;AAAM,qBAAgB,aAAW,OAC/B;AAD+B,AACtB,AACT,AAAiB,AACjB;UAAgB;iBAHI,AAAW,AAIrB,AAAK,AAAM,AAAa;AAJpC,yBAOA;AACE,AAAC,AAAI,wBAAU,KAAC,MAAhB,AAAe,AAAgB,AAAM,AAAC,AAAK,AAAM;AAC/C,AAAC,kBAAD,wBAFJ,AAGE,AAAE,AAEL;AAZkC,AAI/B,OADgB,AAAK,AAAM;AA7CJ;;;;;;AAyD7B,AAAK,AAAe,AAClB,AAAY,AACZ;;AAFF,AAAoB,AAER,AAGZ,AAAK,AAAY;;;;;;EA9DjB,AAAmB,AAAU,AAE3B,AAAY,AAAO,AACjB;;AA4DF,KAAU;cADK,AAEH,AAAU,AACtB;YAHe,AAGL,AAAU,AACpB,AAAM,AAAU,AAChB,AAAU,AAAU;AALL,AACK,AACpB;AAIA,KAAO;sBAGT;cAAA,AAAe;;;;;AATf,AAAiB,AAME;OAvEZ,OAAS,WAAhB,AAA0B,QAA1B,AAAqC","file":"/imports/plugins/core/ui/client/components/cards/card.js.map","sourcesContent":["import React, { Children, Component, PropTypes } from \"react\";\nimport classnames from \"classnames\";\n\nclass Card extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      expanded: props.expanded\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      expanded: nextProps.expanded\n    });\n  }\n\n  handleExpanderClick = (event) => {\n    this.setState({\n      expanded: !this.state.expanded\n    }, () => {\n      if (typeof this.props.onExpand === \"function\") {\n        this.props.onExpand(event, this, this.props.name, this.state.expanded);\n      }\n    });\n  }\n\n  render() {\n    const elements = Children.map(this.props.children, (child) => {\n      const newProps = {};\n\n      if (child.props.actAsExpander) {\n        newProps.actAsExpander = true;\n        newProps.onClick = this.handleExpanderClick;\n      }\n\n      if (child.props.expandable || child.props.actAsExpander) {\n        newProps.expanded = this.state.expanded;\n      }\n\n      return React.cloneElement(child, newProps);\n    });\n\n    const baseClassName = classnames({\n      \"panel\": true,\n      \"panel-default\": true,\n      \"panel-active\": this.state.expanded,\n      \"closed\": this.state.expanded === false\n    });\n\n    return (\n      <div className={baseClassName} style={this.props.style}>\n        {elements}\n      </div>\n    );\n  }\n}\n\nCard.defaultProps = {\n  expandable: false,\n  expanded: true\n};\n\nCard.propTypes = {\n  children: PropTypes.node,\n  expandable: PropTypes.bool,\n  expanded: PropTypes.bool,\n  name: PropTypes.string,\n  onExpand: PropTypes.func,\n  style: PropTypes.object\n};\n\nexport default Card;\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/core/ui/client/components/cards/card.js.map","sourceFileName":"/imports/plugins/core/ui/client/components/cards/card.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"card"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0,\n    Children = void 0,\n    Component = void 0,\n    PropTypes = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  Children: function (v) {\n    Children = v;\n  },\n  Component: function (v) {\n    Component = v;\n  },\n  PropTypes: function (v) {\n    PropTypes = v;\n  }\n}, 0);\nvar classnames = void 0;\nmodule.importSync(\"classnames\", {\n  \"default\": function (v) {\n    classnames = v;\n  }\n}, 1);\n\nvar Card = function (_Component) {\n  (0, _inherits3.default)(Card, _Component);\n\n  function Card(props) {\n    (0, _classCallCheck3.default)(this, Card);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));\n\n    _this.handleExpanderClick = function (event) {\n      _this.setState({\n        expanded: !_this.state.expanded\n      }, function () {\n        if (typeof _this.props.onExpand === \"function\") {\n          _this.props.onExpand(event, _this, _this.props.name, _this.state.expanded);\n        }\n      });\n    };\n\n    _this.state = {\n      expanded: props.expanded\n    };\n    return _this;\n  }\n\n  Card.prototype.componentWillReceiveProps = function () {\n    function componentWillReceiveProps(nextProps) {\n      this.setState({\n        expanded: nextProps.expanded\n      });\n    }\n\n    return componentWillReceiveProps;\n  }();\n\n  Card.prototype.render = function () {\n    function render() {\n      var _this2 = this;\n\n      var elements = Children.map(this.props.children, function (child) {\n        var newProps = {};\n\n        if (child.props.actAsExpander) {\n          newProps.actAsExpander = true;\n          newProps.onClick = _this2.handleExpanderClick;\n        }\n\n        if (child.props.expandable || child.props.actAsExpander) {\n          newProps.expanded = _this2.state.expanded;\n        }\n\n        return React.cloneElement(child, newProps);\n      });\n      var baseClassName = classnames({\n        \"panel\": true,\n        \"panel-default\": true,\n        \"panel-active\": this.state.expanded,\n        \"closed\": this.state.expanded === false\n      });\n      return React.createElement(\n        \"div\",\n        {\n          className: baseClassName,\n          style: this.props.style\n        },\n        elements\n      );\n    }\n\n    return render;\n  }();\n\n  return Card;\n}(Component);\n\nCard.defaultProps = {\n  expandable: false,\n  expanded: true\n};\nCard.propTypes = {\n  children: PropTypes.node,\n  expandable: PropTypes.bool,\n  expanded: PropTypes.bool,\n  name: PropTypes.string,\n  onExpand: PropTypes.func,\n  style: PropTypes.object\n};\nmodule.export(\"default\", exports.default = Card);","map":{"version":3,"sources":["/imports/plugins/core/ui/client/components/cards/card.js"],"names":["React","Children","Component","PropTypes","classnames","Card","constructor","props","state","expanded","componentWillReceiveProps","nextProps","setState","handleExpanderClick","event","onExpand","name","render","elements","map","children","child","newProps","actAsExpander","onClick","expandable","cloneElement","baseClassName","style","defaultProps","propTypes","node","bool","string","func","object"],"mappings":";;;;;;;;;;;;;;AAAA;IAAA;;;OAAA,AAAsD,WAAtD;;;;;;;;;;;;;;;;;;;GACA,AAAO,AAAgB,AAEvB;;IAAA,AAAM;;;AAGI,gBAAN;AAEA;;+DAAK,sBAAL,AAAa,AACX,AAAU,AAAM;;UAYN,AAAC,AAAK,gCAAL,AAAW,OADV;AAAd,AAEG,YAAM;AACH,mBAAO,MAAA,AAAK,MAAhB,AAAI,AAAkB,AAAa,AAAY,AAC7C;AADF,qBACE,AAAK,AAAM,AAAS,AAAO,AAAM,AAAK,AAAM,AAAM,AAAK,AAAM,AAC9D;wDALH,AAMC;2EAPH,AAQC;;AAED;AAAS,AACP,AAAM,AAAW,AAAS,AAAI,AAAK,AAAM,AAAU,AAAC,AAAU,AAC5D;;AAvBF;sBAKF;AAFC;;AAED,AAA0B,AAAW,AACnC,AAAK,AAAS,AACZ;;iBAAU,AAAU;kDADR;AAAd;4BAKF;AAFC;AAEqB,AAAC,AAAU,AAC/B,AAAK,AAAS,AACZ;;;;;;;AAUA,AAAM,AAAW;;wEAEjB;AAAI,YAAA,AAAM,AAAM,WAAhB,AAA+B,AAC7B,AAAS,AAAgB,AACzB;;kBAAS,MAAT,AAAmB,AAAK,eAAxB,AACD;;oCAED;AAAA,AAAI,AAAM,AAAM,AAAc,AAAM,AAAM,AAAe,AACvD,AAAS,AAAW,AAAK,AAAM,AAChC;;;2CAED;AAZF,AAAiB,AAYf,AAAO,AAAM,AAAa,AAAO,AAClC,AAED;;AAAM,qBAAgB,aAAW,OAC/B;AAD+B,AACtB,AACT,AAAiB,AACjB;UAAgB;iBAHI,AAAW,AAIrB,AAAK,AAAM,AAAa;AAJpC,yBAOA;AACE,AAAC,AAAI,wBAAU,KAAC,MAAhB,AAAe,AAAgB,AAAM,AAAC,AAAK,AAAM;AAC/C,AAAC,kBAAD,wBAFJ,AAGE,AAAE,AAEL;AAZkC,AAI/B,OADgB,AAAK,AAAM;AA7CJ;;;;;;AAyD7B,AAAK,AAAe,AAClB,AAAY,AACZ;;AAFF,AAAoB,AAER,AAGZ,AAAK,AAAY;;;;;;EA9DjB,AAAmB,AAAU,AAE3B,AAAY,AAAO,AACjB;;AA4DF,KAAU;cADK,AAEH,AAAU,AACtB;YAHe,AAGL,AAAU,AACpB,AAAM,AAAU,AAChB,AAAU,AAAU;AALL,AACK,AACpB;AAIA,KAAO;sBAGT;cAAA,AAAe;;;;;AATf,AAAiB,AAME;OAvEZ,OAAS,WAAhB,AAA0B,QAA1B,AAAqC","file":"/imports/plugins/core/ui/client/components/cards/card.js.map","sourcesContent":["import React, { Children, Component, PropTypes } from \"react\";\nimport classnames from \"classnames\";\n\nclass Card extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      expanded: props.expanded\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      expanded: nextProps.expanded\n    });\n  }\n\n  handleExpanderClick = (event) => {\n    this.setState({\n      expanded: !this.state.expanded\n    }, () => {\n      if (typeof this.props.onExpand === \"function\") {\n        this.props.onExpand(event, this, this.props.name, this.state.expanded);\n      }\n    });\n  }\n\n  render() {\n    const elements = Children.map(this.props.children, (child) => {\n      const newProps = {};\n\n      if (child.props.actAsExpander) {\n        newProps.actAsExpander = true;\n        newProps.onClick = this.handleExpanderClick;\n      }\n\n      if (child.props.expandable || child.props.actAsExpander) {\n        newProps.expanded = this.state.expanded;\n      }\n\n      return React.cloneElement(child, newProps);\n    });\n\n    const baseClassName = classnames({\n      \"panel\": true,\n      \"panel-default\": true,\n      \"panel-active\": this.state.expanded,\n      \"closed\": this.state.expanded === false\n    });\n\n    return (\n      <div className={baseClassName} style={this.props.style}>\n        {elements}\n      </div>\n    );\n  }\n}\n\nCard.defaultProps = {\n  expandable: false,\n  expanded: true\n};\n\nCard.propTypes = {\n  children: PropTypes.node,\n  expandable: PropTypes.bool,\n  expanded: PropTypes.bool,\n  name: PropTypes.string,\n  onExpand: PropTypes.func,\n  style: PropTypes.object\n};\n\nexport default Card;\n"]},"hash":"2399afca8dbd8e00ac6b0f3eb2fe5974740df7cb"}
