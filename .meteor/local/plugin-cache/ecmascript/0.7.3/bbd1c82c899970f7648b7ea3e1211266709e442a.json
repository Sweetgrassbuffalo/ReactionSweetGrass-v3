{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck","interopRequireDefault"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component","PropTypes"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"},{"kind":"named","imported":"PropTypes","local":"PropTypes"}]},{"source":"./metafield","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Metafield"}]}],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/imports/plugins/core/ui/client/components/metadata/metadata.js","filenameRelative":"/imports/plugins/core/ui/client/components/metadata/metadata.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/core/ui/client/components/metadata/metadata.js"],"names":["React","Component","PropTypes","Metafield","Metadata","handleSubmit","event","preventDefault","handleMetaChange","metafield","index","props","onMetaChange","handleMetaSave","onMetaSave","handleMetaRemove","onMetaRemove","renderMetadata","metafields","map","metadata","key","value","renderMetadataForm","renderMetadataCreateForm","newMetafield","render","editable","defaultProps","propTypes","bool","arrayOf","object","func"],"mappings":";;;;;;;;;;;;;;AAAA;IAAA;;OAA4C,WAA5C;;;;;;;;;;;;;;;;GACA,AAAO,AAAe,AAEtB;;IAAA,AAAM;;;;;;;;;;;;0JAOI,yBAAN,OADF,AAEC;YAED;AAAmB,AAAC,AAAO,AAAW,AAAU,AAC9C,AAAI,AAAK,AAAM,AAAc,AAC3B,aAAA,AAAK,AAAM,oCAAX,AAAwB,AAAO,WAA/B,AAA0C,OAA1C,AACD;oCAHH,AAIC;mDAED;AAAiB,AAAC,AAAO,AAAW,AAAU,AAC5C;AAAA,AAAI,AAAK,AAAM,AAAY,AACzB,AAAK,AAAM,AAAW,AAAO,AAAW,AACzC,iEAHH,AAIC;kCAED;oBAAmB,AAAC,WAAO,OAAR,AAAmB,WAAU,AAC9C;AAAA,AAAI,AAAK,AAAM,AAAc,AAC3B;AAAA,AAAK,AAAM,AAAa,AAAO,AAAW,AAC3C,AACF,aA1B8B,AAsB/B,AAMA;;;;AAIA,AAAiB,AACf;IA3BF,AAAe,AAAC,AAAU,AACxB;;;;;;AA0BA,AAAI,AAAK,AAAM,AAAY,AACzB,AAAO,AAAK,AAAM,AAAW,AAAI,AAAC,AAAU,AAAU,AACpD,AACE,AAAC,AAAI,AAAU,AAAgB,AAAI,AAAC,AAClC,AAAC,AAAI,AAAU,AAAe,AAAC,AAAS,AAAI,AAAE;;;wBAC9C,AAAC,AAAI;8BAAL,AAAe,AAAiB,AAAC,AAAS,AAAM,AAAE;UACpD,AAAE,KAJJ,AAIE,kBAEH;AAPD,AAAO,oEAQR;;;;;mBAED,AAAO;;AAAP;;;;;uBA5C6B,AA6C9B,AAED;;;;;;;;;;;AAIA,AAAqB,AACnB;;AAAI,aAAJ,AAAI,AAAK,AAAM,AAAY,AACzB;AAAO,AAAK,AAAM,AAAW,AAAI,AAAC,AAAU,AAAU,AACpD,AACE,AAAC,AACC,AAAM,AAAC,AACP,AAAI,AAAC,AACL,AAAU,AAAC,AACX,AAAO,AAAC,AAAK,AACb,AAAS,AAAC,AAAK,AACf,AAAS,AAAC,AAAK,AAGpB;;;OAXD,AAAO,AAYR,AAED,AAAO,AACR;;;;;;;;;iCAED;0BAA2B,0CACzB;AAvE6B,AAuE7B,AACE,AAAC,AACC,AAAM,AAAC,AACP,AAAU,AAAC,AAAK,AAAM,AACtB,AAAO,AAAC,AAAK,AACb,AAAS,AAAC,AAAK,AACf,AAAI,AAGT,AAED;;;;2BAIA,AAAS;6BACP;6BACA,AAAI,AAAK,AAAM,AAAU,AACvB,AACE,AAAC,AAAI,AAAU;;AACb,AAAC,AAAK;AAFV,AAGI,AAAC,AAAK,AACR,AAAE,AAEL;;AATM,AAWP;AACA;;;;;qBACE,AAAC,AAAI,AAAU;wCAAf;AACE,AAAC,AAAK,iCAFV,AAGE,AAAE,AAEL;;8BAvG8B;;uBA0GjC;AAAS,aACP,A,AADF,AAAwB,AACZ,AAGZ;AATM;AAUN,AAAS,AAAY,AACnB;;;OADmB,AACT,AAAU,AACpB,AAAY,AAAU,AAAQ,AAAU,AACxC,AAAc,AAAU,AACxB,AAAc,AAAU,AACxB;;;;;;;AALF,AAAqB,AAMP,AAAU;+BAGxB;AAAA,AAAe;;;;;;;;OATM,AAKL,AAAU,AACxB;;;;;;;;;;;;;;;;EArHF,AAAuB,AAAU,AAC/B;;;;;;;;;;;;;;OAJK,OAAS,WAAhB,AAA2B,QAA3B","file":"/imports/plugins/core/ui/client/components/metadata/metadata.js.map","sourcesContent":["import React, { Component, PropTypes } from \"react\";\nimport Metafield from \"./metafield\";\n\nclass Metadata extends Component {\n  /**\n   * Handle form submit\n   * @param  {Event} event Event object\n   * @return {void} no return value\n   */\n  handleSubmit = (event) => {\n    event.preventDefault();\n  }\n\n  handleMetaChange = (event, metafield, index) => {\n    if (this.props.onMetaChange) {\n      this.props.onMetaChange(event, metafield, index);\n    }\n  }\n\n  handleMetaSave = (event, metafield, index) => {\n    if (this.props.onMetaSave) {\n      this.props.onMetaSave(event, metafield, index);\n    }\n  }\n\n  handleMetaRemove = (event, metafield, index) => {\n    if (this.props.onMetaRemove) {\n      this.props.onMetaRemove(event, metafield, index);\n    }\n  }\n\n  /**\n   * Render user readable metadata\n   * @return {JSX} metadata\n   */\n  renderMetadata() {\n    if (this.props.metafields) {\n      return this.props.metafields.map((metadata, index) => {\n        return (\n          <div className=\"rui meta-item\" key={index}>\n            <div className=\"rui meta-key\">{metadata.key}</div>\n            <div className=\"rui meta-value\">{metadata.value}</div>\n          </div>\n        );\n      });\n    }\n\n    return null;\n  }\n\n  /**\n   * Render a metadata form\n   * @return {JSX} metadata forms for each row of metadata\n   */\n  renderMetadataForm() {\n    if (this.props.metafields) {\n      return this.props.metafields.map((metadata, index) => {\n        return (\n          <Metafield\n            index={index}\n            key={index}\n            metafield={metadata}\n            onBlur={this.handleMetaSave}\n            onChange={this.handleMetaChange}\n            onRemove={this.handleMetaRemove}\n          />\n        );\n      });\n    }\n\n    return null;\n  }\n\n  renderMetadataCreateForm() {\n    return (\n      <Metafield\n        blank={true}\n        metafield={this.props.newMetafield}\n        onBlur={this.handleMetaSave}\n        onChange={this.handleMetaChange}\n        ref=\"newMetadataFields\"\n      />\n    );\n  }\n\n  /**\n   * render\n   * @return {JSX} component\n   */\n  render() {\n    // Admin editable metadata\n    if (this.props.editable) {\n      return (\n        <div className=\"rui list-group product-detail-edit product-attributes\">\n          {this.renderMetadataForm()}\n          {this.renderMetadataCreateForm()}\n        </div>\n      );\n    }\n\n    // User readable metadata\n    return (\n      <div className=\"rui metadata\">\n        {this.renderMetadata()}\n      </div>\n    );\n  }\n}\n\nMetadata.defaultProps = {\n  editable: true\n};\n\n// Prop Types\nMetadata.propTypes = {\n  editable: PropTypes.bool,\n  metafields: PropTypes.arrayOf(PropTypes.object),\n  newMetafield: PropTypes.object,\n  onMetaChange: PropTypes.func,\n  onMetaRemove: PropTypes.func,\n  onMetaSave: PropTypes.func\n};\n\nexport default Metadata;\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/core/ui/client/components/metadata/metadata.js.map","sourceFileName":"/imports/plugins/core/ui/client/components/metadata/metadata.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"metadata"},"ignored":false,"code":"var _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar React = void 0,\n    Component = void 0,\n    PropTypes = void 0;\nmodule.importSync(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  },\n  PropTypes: function (v) {\n    PropTypes = v;\n  }\n}, 0);\nvar Metafield = void 0;\nmodule.importSync(\"./metafield\", {\n  \"default\": function (v) {\n    Metafield = v;\n  }\n}, 1);\n\nvar Metadata = function (_Component) {\n  (0, _inherits3.default)(Metadata, _Component);\n\n  function Metadata() {\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, Metadata);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.handleSubmit = function (event) {\n      event.preventDefault();\n    }, _this.handleMetaChange = function (event, metafield, index) {\n      if (_this.props.onMetaChange) {\n        _this.props.onMetaChange(event, metafield, index);\n      }\n    }, _this.handleMetaSave = function (event, metafield, index) {\n      if (_this.props.onMetaSave) {\n        _this.props.onMetaSave(event, metafield, index);\n      }\n    }, _this.handleMetaRemove = function (event, metafield, index) {\n      if (_this.props.onMetaRemove) {\n        _this.props.onMetaRemove(event, metafield, index);\n      }\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  } /**\n     * Handle form submit\n     * @param  {Event} event Event object\n     * @return {void} no return value\n     */\n\n  /**\n   * Render user readable metadata\n   * @return {JSX} metadata\n   */Metadata.prototype.renderMetadata = function () {\n    function renderMetadata() {\n      if (this.props.metafields) {\n        return this.props.metafields.map(function (metadata, index) {\n          return React.createElement(\n            \"div\",\n            {\n              className: \"rui meta-item\",\n              key: index\n            },\n            React.createElement(\n              \"div\",\n              {\n                className: \"rui meta-key\"\n              },\n              metadata.key\n            ),\n            React.createElement(\n              \"div\",\n              {\n                className: \"rui meta-value\"\n              },\n              metadata.value\n            )\n          );\n        });\n      }\n\n      return null;\n    }\n\n    return renderMetadata;\n  }(); /**\n        * Render a metadata form\n        * @return {JSX} metadata forms for each row of metadata\n        */\n\n  Metadata.prototype.renderMetadataForm = function () {\n    function renderMetadataForm() {\n      var _this2 = this;\n\n      if (this.props.metafields) {\n        return this.props.metafields.map(function (metadata, index) {\n          return React.createElement(Metafield, {\n            index: index,\n            key: index,\n            metafield: metadata,\n            onBlur: _this2.handleMetaSave,\n            onChange: _this2.handleMetaChange,\n            onRemove: _this2.handleMetaRemove\n          });\n        });\n      }\n\n      return null;\n    }\n\n    return renderMetadataForm;\n  }();\n\n  Metadata.prototype.renderMetadataCreateForm = function () {\n    function renderMetadataCreateForm() {\n      return React.createElement(Metafield, {\n        blank: true,\n        metafield: this.props.newMetafield,\n        onBlur: this.handleMetaSave,\n        onChange: this.handleMetaChange,\n        ref: \"newMetadataFields\"\n      });\n    }\n\n    return renderMetadataCreateForm;\n  }(); /**\n        * render\n        * @return {JSX} component\n        */\n\n  Metadata.prototype.render = function () {\n    function render() {\n      // Admin editable metadata\n      if (this.props.editable) {\n        return React.createElement(\n          \"div\",\n          {\n            className: \"rui list-group product-detail-edit product-attributes\"\n          },\n          this.renderMetadataForm(),\n          this.renderMetadataCreateForm()\n        );\n      } // User readable metadata\n\n\n      return React.createElement(\n        \"div\",\n        {\n          className: \"rui metadata\"\n        },\n        this.renderMetadata()\n      );\n    }\n\n    return render;\n  }();\n\n  return Metadata;\n}(Component);\n\nMetadata.defaultProps = {\n  editable: true\n}; // Prop Types\n\nMetadata.propTypes = {\n  editable: PropTypes.bool,\n  metafields: PropTypes.arrayOf(PropTypes.object),\n  newMetafield: PropTypes.object,\n  onMetaChange: PropTypes.func,\n  onMetaRemove: PropTypes.func,\n  onMetaSave: PropTypes.func\n};\nmodule.export(\"default\", exports.default = Metadata);","map":{"version":3,"sources":["/imports/plugins/core/ui/client/components/metadata/metadata.js"],"names":["React","Component","PropTypes","Metafield","Metadata","handleSubmit","event","preventDefault","handleMetaChange","metafield","index","props","onMetaChange","handleMetaSave","onMetaSave","handleMetaRemove","onMetaRemove","renderMetadata","metafields","map","metadata","key","value","renderMetadataForm","renderMetadataCreateForm","newMetafield","render","editable","defaultProps","propTypes","bool","arrayOf","object","func"],"mappings":";;;;;;;;;;;;;;AAAA;IAAA;;OAA4C,WAA5C;;;;;;;;;;;;;;;;GACA,AAAO,AAAe,AAEtB;;IAAA,AAAM;;;;;;;;;;;;0JAOI,yBAAN,OADF,AAEC;YAED;AAAmB,AAAC,AAAO,AAAW,AAAU,AAC9C,AAAI,AAAK,AAAM,AAAc,AAC3B,aAAA,AAAK,AAAM,oCAAX,AAAwB,AAAO,WAA/B,AAA0C,OAA1C,AACD;oCAHH,AAIC;mDAED;AAAiB,AAAC,AAAO,AAAW,AAAU,AAC5C;AAAA,AAAI,AAAK,AAAM,AAAY,AACzB,AAAK,AAAM,AAAW,AAAO,AAAW,AACzC,iEAHH,AAIC;kCAED;oBAAmB,AAAC,WAAO,OAAR,AAAmB,WAAU,AAC9C;AAAA,AAAI,AAAK,AAAM,AAAc,AAC3B;AAAA,AAAK,AAAM,AAAa,AAAO,AAAW,AAC3C,AACF,aA1B8B,AAsB/B,AAMA;;;;AAIA,AAAiB,AACf;IA3BF,AAAe,AAAC,AAAU,AACxB;;;;;;AA0BA,AAAI,AAAK,AAAM,AAAY,AACzB,AAAO,AAAK,AAAM,AAAW,AAAI,AAAC,AAAU,AAAU,AACpD,AACE,AAAC,AAAI,AAAU,AAAgB,AAAI,AAAC,AAClC,AAAC,AAAI,AAAU,AAAe,AAAC,AAAS,AAAI,AAAE;;;wBAC9C,AAAC,AAAI;8BAAL,AAAe,AAAiB,AAAC,AAAS,AAAM,AAAE;UACpD,AAAE,KAJJ,AAIE,kBAEH;AAPD,AAAO,oEAQR;;;;;mBAED,AAAO;;AAAP;;;;;uBA5C6B,AA6C9B,AAED;;;;;;;;;;;AAIA,AAAqB,AACnB;;AAAI,aAAJ,AAAI,AAAK,AAAM,AAAY,AACzB;AAAO,AAAK,AAAM,AAAW,AAAI,AAAC,AAAU,AAAU,AACpD,AACE,AAAC,AACC,AAAM,AAAC,AACP,AAAI,AAAC,AACL,AAAU,AAAC,AACX,AAAO,AAAC,AAAK,AACb,AAAS,AAAC,AAAK,AACf,AAAS,AAAC,AAAK,AAGpB;;;OAXD,AAAO,AAYR,AAED,AAAO,AACR;;;;;;;;;iCAED;0BAA2B,0CACzB;AAvE6B,AAuE7B,AACE,AAAC,AACC,AAAM,AAAC,AACP,AAAU,AAAC,AAAK,AAAM,AACtB,AAAO,AAAC,AAAK,AACb,AAAS,AAAC,AAAK,AACf,AAAI,AAGT,AAED;;;;2BAIA,AAAS;6BACP;6BACA,AAAI,AAAK,AAAM,AAAU,AACvB,AACE,AAAC,AAAI,AAAU;;AACb,AAAC,AAAK;AAFV,AAGI,AAAC,AAAK,AACR,AAAE,AAEL;;AATM,AAWP;AACA;;;;;qBACE,AAAC,AAAI,AAAU;wCAAf;AACE,AAAC,AAAK,iCAFV,AAGE,AAAE,AAEL;;8BAvG8B;;uBA0GjC;AAAS,aACP,A,AADF,AAAwB,AACZ,AAGZ;AATM;AAUN,AAAS,AAAY,AACnB;;;OADmB,AACT,AAAU,AACpB,AAAY,AAAU,AAAQ,AAAU,AACxC,AAAc,AAAU,AACxB,AAAc,AAAU,AACxB;;;;;;;AALF,AAAqB,AAMP,AAAU;+BAGxB;AAAA,AAAe;;;;;;;;OATM,AAKL,AAAU,AACxB;;;;;;;;;;;;;;;;EArHF,AAAuB,AAAU,AAC/B;;;;;;;;;;;;;;OAJK,OAAS,WAAhB,AAA2B,QAA3B","file":"/imports/plugins/core/ui/client/components/metadata/metadata.js.map","sourcesContent":["import React, { Component, PropTypes } from \"react\";\nimport Metafield from \"./metafield\";\n\nclass Metadata extends Component {\n  /**\n   * Handle form submit\n   * @param  {Event} event Event object\n   * @return {void} no return value\n   */\n  handleSubmit = (event) => {\n    event.preventDefault();\n  }\n\n  handleMetaChange = (event, metafield, index) => {\n    if (this.props.onMetaChange) {\n      this.props.onMetaChange(event, metafield, index);\n    }\n  }\n\n  handleMetaSave = (event, metafield, index) => {\n    if (this.props.onMetaSave) {\n      this.props.onMetaSave(event, metafield, index);\n    }\n  }\n\n  handleMetaRemove = (event, metafield, index) => {\n    if (this.props.onMetaRemove) {\n      this.props.onMetaRemove(event, metafield, index);\n    }\n  }\n\n  /**\n   * Render user readable metadata\n   * @return {JSX} metadata\n   */\n  renderMetadata() {\n    if (this.props.metafields) {\n      return this.props.metafields.map((metadata, index) => {\n        return (\n          <div className=\"rui meta-item\" key={index}>\n            <div className=\"rui meta-key\">{metadata.key}</div>\n            <div className=\"rui meta-value\">{metadata.value}</div>\n          </div>\n        );\n      });\n    }\n\n    return null;\n  }\n\n  /**\n   * Render a metadata form\n   * @return {JSX} metadata forms for each row of metadata\n   */\n  renderMetadataForm() {\n    if (this.props.metafields) {\n      return this.props.metafields.map((metadata, index) => {\n        return (\n          <Metafield\n            index={index}\n            key={index}\n            metafield={metadata}\n            onBlur={this.handleMetaSave}\n            onChange={this.handleMetaChange}\n            onRemove={this.handleMetaRemove}\n          />\n        );\n      });\n    }\n\n    return null;\n  }\n\n  renderMetadataCreateForm() {\n    return (\n      <Metafield\n        blank={true}\n        metafield={this.props.newMetafield}\n        onBlur={this.handleMetaSave}\n        onChange={this.handleMetaChange}\n        ref=\"newMetadataFields\"\n      />\n    );\n  }\n\n  /**\n   * render\n   * @return {JSX} component\n   */\n  render() {\n    // Admin editable metadata\n    if (this.props.editable) {\n      return (\n        <div className=\"rui list-group product-detail-edit product-attributes\">\n          {this.renderMetadataForm()}\n          {this.renderMetadataCreateForm()}\n        </div>\n      );\n    }\n\n    // User readable metadata\n    return (\n      <div className=\"rui metadata\">\n        {this.renderMetadata()}\n      </div>\n    );\n  }\n}\n\nMetadata.defaultProps = {\n  editable: true\n};\n\n// Prop Types\nMetadata.propTypes = {\n  editable: PropTypes.bool,\n  metafields: PropTypes.arrayOf(PropTypes.object),\n  newMetafield: PropTypes.object,\n  onMetaChange: PropTypes.func,\n  onMetaRemove: PropTypes.func,\n  onMetaSave: PropTypes.func\n};\n\nexport default Metadata;\n"]},"hash":"bbd1c82c899970f7648b7ea3e1211266709e442a"}
