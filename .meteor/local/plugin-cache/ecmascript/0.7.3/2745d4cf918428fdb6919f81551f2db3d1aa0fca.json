{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/packages/ongoworks:security/lib/builtInRules.js","filenameRelative":"/packages/ongoworks:security/lib/builtInRules.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/ongoworks:security/lib/builtInRules.js.map","sourceFileName":"/packages/ongoworks:security/lib/builtInRules.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"builtInRules"},"ignored":false,"code":"/*\n * This file defines built-in restriction methods\n */ /*\n     * No one\n     */Security.defineMethod(\"never\", {\n  fetch: [],\n  transform: null,\n  allow: function () {\n    return false;\n  }\n}); /*\n     * Logged In\n     */\nSecurity.defineMethod(\"ifLoggedIn\", {\n  fetch: [],\n  transform: null,\n  allow: function (type, arg, userId) {\n    return !!userId;\n  }\n}); /*\n     * Specific User ID\n     */\nSecurity.defineMethod(\"ifHasUserId\", {\n  fetch: [],\n  transform: null,\n  allow: function (type, arg, userId) {\n    return userId === arg;\n  }\n}); /*\n     * Specific Roles\n     */ /*\n         * alanning:roles support\n         */\n\nif (Package && Package[\"alanning:roles\"]) {\n  var Roles = Package[\"alanning:roles\"].Roles;\n  Security.defineMethod(\"ifHasRole\", {\n    fetch: [],\n    transform: null,\n    allow: function (type, arg, userId) {\n      if (!arg) throw new Error('ifHasRole security rule method requires an argument');\n\n      if (arg.role) {\n        return Roles.userIsInRole(userId, arg.role, arg.group);\n      } else {\n        return Roles.userIsInRole(userId, arg);\n      }\n    }\n  });\n} /*\n   * nicolaslopezj:roles support\n   * Note: doesn't support groups\n   */\n\nif (Package && Package[\"nicolaslopezj:roles\"]) {\n  var Roles = Package[\"nicolaslopezj:roles\"].Roles;\n  Security.defineMethod(\"ifHasRole\", {\n    fetch: [],\n    transform: null,\n    allow: function (type, arg, userId) {\n      if (!arg) throw new Error('ifHasRole security rule method requires an argument');\n      return Roles.userHasRole(userId, arg);\n    }\n  });\n} /*\n   * Specific Properties\n   */\n\nSecurity.defineMethod(\"onlyProps\", {\n  fetch: [],\n  transform: null,\n  allow: function (type, arg, userId, doc, fieldNames) {\n    if (!_.isArray(arg)) arg = [arg];\n    fieldNames = fieldNames || _.keys(doc);\n    return _.every(fieldNames, function (fieldName) {\n      return _.contains(arg, fieldName);\n    });\n  }\n});\nSecurity.defineMethod(\"exceptProps\", {\n  fetch: [],\n  transform: null,\n  allow: function (type, arg, userId, doc, fieldNames) {\n    if (!_.isArray(arg)) arg = [arg];\n    fieldNames = fieldNames || _.keys(doc);\n    return !_.any(fieldNames, function (fieldName) {\n      return _.contains(arg, fieldName);\n    });\n  }\n});","map":{"version":3,"sources":["/packages/ongoworks:security/lib/builtInRules.js"],"names":["Security","defineMethod","fetch","transform","allow","type","arg","userId","Package","Roles","Error","role","userIsInRole","group","userHasRole","doc","fieldNames","_","isArray","keys","every","fieldName","contains","any"],"mappings":"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","file":"/packages/ongoworks:security/lib/builtInRules.js.map","sourcesContent":["/*\n * This file defines built-in restriction methods\n */\n\n/*\n * No one\n */\n\nSecurity.defineMethod(\"never\", {\n  fetch: [],\n  transform: null,\n  allow() {\n    return false;\n  },\n});\n\n/*\n * Logged In\n */\n\nSecurity.defineMethod(\"ifLoggedIn\", {\n  fetch: [],\n  transform: null,\n  allow(type, arg, userId) {\n    return !!userId;\n  },\n});\n\n/*\n * Specific User ID\n */\n\nSecurity.defineMethod(\"ifHasUserId\", {\n  fetch: [],\n  transform: null,\n  allow(type, arg, userId) {\n    return userId === arg;\n  },\n});\n\n/*\n * Specific Roles\n */\n\n/*\n * alanning:roles support\n */\nif (Package && Package[\"alanning:roles\"]) {\n\n  var Roles = Package[\"alanning:roles\"].Roles;\n\n  Security.defineMethod(\"ifHasRole\", {\n    fetch: [],\n    transform: null,\n    allow(type, arg, userId) {\n      if (!arg) throw new Error('ifHasRole security rule method requires an argument');\n      if (arg.role) {\n        return Roles.userIsInRole(userId, arg.role, arg.group);\n      } else {\n        return Roles.userIsInRole(userId, arg);\n      }\n    },\n  });\n\n}\n\n/*\n * nicolaslopezj:roles support\n * Note: doesn't support groups\n */\nif (Package && Package[\"nicolaslopezj:roles\"]) {\n\n  var Roles = Package[\"nicolaslopezj:roles\"].Roles;\n\n  Security.defineMethod(\"ifHasRole\", {\n    fetch: [],\n    transform: null,\n    allow(type, arg, userId) {\n      if (!arg) throw new Error('ifHasRole security rule method requires an argument');\n      return Roles.userHasRole(userId, arg);\n    }\n  });\n\n}\n\n/*\n * Specific Properties\n */\n\nSecurity.defineMethod(\"onlyProps\", {\n  fetch: [],\n  transform: null,\n  allow(type, arg, userId, doc, fieldNames) {\n    if (!_.isArray(arg)) arg = [arg];\n\n    fieldNames = fieldNames || _.keys(doc);\n\n    return _.every(fieldNames, function (fieldName) {\n      return _.contains(arg, fieldName);\n    });\n  },\n});\n\nSecurity.defineMethod(\"exceptProps\", {\n  fetch: [],\n  transform: null,\n  allow(type, arg, userId, doc, fieldNames) {\n    if (!_.isArray(arg)) arg = [arg];\n\n    fieldNames = fieldNames || _.keys(doc);\n\n    return !_.any(fieldNames, function (fieldName) {\n      return _.contains(arg, fieldName);\n    });\n  },\n});\n"]},"hash":"2745d4cf918428fdb6919f81551f2db3d1aa0fca"}
