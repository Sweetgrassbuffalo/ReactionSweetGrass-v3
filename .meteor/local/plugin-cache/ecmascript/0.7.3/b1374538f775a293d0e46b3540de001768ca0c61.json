{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"lodash/replace","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_replace"}]},{"source":"lodash/split","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"_split"}]}],"exports":{"exported":["transformations"],"specifiers":[{"kind":"local","local":"transformations","exported":"transformations"}]}}},"options":{"filename":"/imports/plugins/included/search-mongo/server/methods/transformations.js","filenameRelative":"/imports/plugins/included/search-mongo/server/methods/transformations.js","inputSourceMap":{"version":3,"sources":["/imports/plugins/included/search-mongo/server/methods/transformations.js"],"names":["transformations","products","accounts","orders","metafields","fieldData","values","field","push","value","emails","email","address","profile","profileObject","addressBook","fullName","firstName","lastName","phone"],"mappings":";;;;;;;;;;;;;;;;;;;;GAEA;AAAO,IAAM,kBAAN,AAAwB;AAC/B,gBAAA,AAAgB,WAAhB,AAA2B;AAC3B,gBAAA,AAAgB,WAAhB,AAA2B;AAC3B,gBAAA,AAAgB,SAAhB,AAAyB;;AAEzB,gBAAA,AAAgB,SAAhB,AAAyB,aAAa,UAAA,AAAU,WAAW,AACzD;MAAM,SAAN,AAAe;;iBACf;AAAI;AACF;;;;;;;;;;;UADF,AAAe;AACR,aAAM,KAAX,MAAA,AAAoB,AAAW,AAC7B;AAAA,AAAO,AAAK,AAAM,AACnB;AACF;;;AACD,AAAO;;AAPT,AAQC;eAED;;MAAgB,WAAhB,AAAyB,AAAS,AAAU,AAAW,AACrD;AAAM;;;;;;;;;;;;UAAN,AAAe;wBACf;AAAA,AAAI,AAAW,AACb;AAAA,AAAK,AAAM,AAAS,AAAW,AAC7B;;SAAA,AAAO,AAAK,AAAM,AACnB;AACF;;wDACD;MAPF,AAOE,AAAO,AACR;;;;AAEe,iBAAhB,OAAA,AAAyB,UAAU,AAAU,eAAV,AAAqB,eACtD;AAAI,gBAAJ;6DACA,AAAI,AAAa,AAAU,AAAe,AAAU,AAAY,AAAM,AAAU,AAAY,AAAG,AAAU,AACvG;AAHJ;AAGoB,AACd;;SADc,AACH,AAAQ,AAAU,AAAY,AAAG,AAAU,AAAK,AAC3D;AALN,AAGI,AAAgB,AAEJ,AAAQ,AAAU,AAAY,AAAG,AAAU,AAAK,AAC1D,AAAO,AAAU,AAAU,AAAY,AAAG,AAAO,AAAO,AAE3D,AACD,AAAO,AACR","file":"/imports/plugins/included/search-mongo/server/methods/transformations.js.map","sourcesContent":["import _ from \"lodash\";\n\nexport const transformations = {};\ntransformations.products = {};\ntransformations.accounts = {};\ntransformations.orders = {};\n\ntransformations.products.metafields = function (fieldData) {\n  const values = [];\n  if (fieldData) {\n    for (const field of fieldData) {\n      values.push(field.value);\n    }\n  }\n  return values;\n};\n\ntransformations.accounts.emails = function (fieldData) {\n  const values = [];\n  if (fieldData) {\n    for (const email of fieldData) {\n      values.push(email.address);\n    }\n  }\n  return values;\n};\n\ntransformations.accounts.profile = function (fieldData) {\n  let profileObject;\n  if (fieldData && fieldData.addressBook && fieldData.addressBook[0] && fieldData.addressBook[0].fullName) {\n    profileObject = {\n      firstName: _.split(fieldData.addressBook[0].fullName, \" \")[0],\n      lastName: _.split(fieldData.addressBook[0].fullName, \" \")[1],\n      phone: _.replace(fieldData.addressBook[0].phone, /\\D/g, \"\")\n    };\n  }\n  return profileObject;\n};\n"]},"env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/plugins/included/search-mongo/server/methods/transformations.js.map","sourceFileName":"/imports/plugins/included/search-mongo/server/methods/transformations.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"transformations"},"ignored":false,"code":"module.export({\n  transformations: function () {\n    return transformations;\n  }\n});\n\nvar _replace = void 0;\n\nmodule.importSync(\"lodash/replace\", {\n  \"default\": function (v) {\n    _replace = v;\n  }\n}, 0);\n\nvar _split = void 0;\n\nmodule.importSync(\"lodash/split\", {\n  \"default\": function (v) {\n    _split = v;\n  }\n}, 1);\nvar transformations = {};\ntransformations.products = {};\ntransformations.accounts = {};\ntransformations.orders = {};\n\ntransformations.products.metafields = function (fieldData) {\n  var values = [];\n\n  if (fieldData) {\n    for (var _iterator = fieldData, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var field = _ref;\n      values.push(field.value);\n    }\n  }\n\n  return values;\n};\n\ntransformations.accounts.emails = function (fieldData) {\n  var values = [];\n\n  if (fieldData) {\n    for (var _iterator2 = fieldData, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var email = _ref2;\n      values.push(email.address);\n    }\n  }\n\n  return values;\n};\n\ntransformations.accounts.profile = function (fieldData) {\n  var profileObject = void 0;\n\n  if (fieldData && fieldData.addressBook && fieldData.addressBook[0] && fieldData.addressBook[0].fullName) {\n    profileObject = {\n      firstName: _split(fieldData.addressBook[0].fullName, \" \")[0],\n      lastName: _split(fieldData.addressBook[0].fullName, \" \")[1],\n      phone: _replace(fieldData.addressBook[0].phone, /\\D/g, \"\")\n    };\n  }\n\n  return profileObject;\n};","map":{"version":3,"sources":["/imports/plugins/included/search-mongo/server/methods/transformations.js"],"names":["transformations","products","accounts","orders","metafields","fieldData","values","field","push","value","emails","email","address","profile","profileObject","addressBook","fullName","firstName","lastName","phone"],"mappings":";;;;;;;;;;;;;;;;;;;;GAEA;AAAO,IAAM,kBAAN,AAAwB;AAC/B,gBAAA,AAAgB,WAAhB,AAA2B;AAC3B,gBAAA,AAAgB,WAAhB,AAA2B;AAC3B,gBAAA,AAAgB,SAAhB,AAAyB;;AAEzB,gBAAA,AAAgB,SAAhB,AAAyB,aAAa,UAAA,AAAU,WAAW,AACzD;MAAM,SAAN,AAAe;;iBACf;AAAI;AACF;;;;;;;;;;;UADF,AAAe;AACR,aAAM,KAAX,MAAA,AAAoB,AAAW,AAC7B;AAAA,AAAO,AAAK,AAAM,AACnB;AACF;;;AACD,AAAO;;AAPT,AAQC;eAED;;MAAgB,WAAhB,AAAyB,AAAS,AAAU,AAAW,AACrD;AAAM;;;;;;;;;;;;UAAN,AAAe;wBACf;AAAA,AAAI,AAAW,AACb;AAAA,AAAK,AAAM,AAAS,AAAW,AAC7B;;SAAA,AAAO,AAAK,AAAM,AACnB;AACF;;wDACD;MAPF,AAOE,AAAO,AACR;;;;AAEe,iBAAhB,OAAA,AAAyB,UAAU,AAAU,eAAV,AAAqB,eACtD;AAAI,gBAAJ;6DACA,AAAI,AAAa,AAAU,AAAe,AAAU,AAAY,AAAM,AAAU,AAAY,AAAG,AAAU,AACvG;AAHJ;AAGoB,AACd;;SADc,AACH,AAAQ,AAAU,AAAY,AAAG,AAAU,AAAK,AAC3D;AALN,AAGI,AAAgB,AAEJ,AAAQ,AAAU,AAAY,AAAG,AAAU,AAAK,AAC1D,AAAO,AAAU,AAAU,AAAY,AAAG,AAAO,AAAO,AAE3D,AACD,AAAO,AACR","file":"/imports/plugins/included/search-mongo/server/methods/transformations.js.map","sourcesContent":["import _ from \"lodash\";\n\nexport const transformations = {};\ntransformations.products = {};\ntransformations.accounts = {};\ntransformations.orders = {};\n\ntransformations.products.metafields = function (fieldData) {\n  const values = [];\n  if (fieldData) {\n    for (const field of fieldData) {\n      values.push(field.value);\n    }\n  }\n  return values;\n};\n\ntransformations.accounts.emails = function (fieldData) {\n  const values = [];\n  if (fieldData) {\n    for (const email of fieldData) {\n      values.push(email.address);\n    }\n  }\n  return values;\n};\n\ntransformations.accounts.profile = function (fieldData) {\n  let profileObject;\n  if (fieldData && fieldData.addressBook && fieldData.addressBook[0] && fieldData.addressBook[0].fullName) {\n    profileObject = {\n      firstName: _.split(fieldData.addressBook[0].fullName, \" \")[0],\n      lastName: _.split(fieldData.addressBook[0].fullName, \" \")[1],\n      phone: _.replace(fieldData.addressBook[0].phone, /\\D/g, \"\")\n    };\n  }\n  return profileObject;\n};\n"]},"hash":"b1374538f775a293d0e46b3540de001768ca0c61"}
