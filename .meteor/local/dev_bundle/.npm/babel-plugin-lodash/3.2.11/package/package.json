{"name":"babel-plugin-lodash","version":"3.2.11","description":"Modular Lodash builds without the hassle.","keywords":["babel-plugin","cherry-pick","lodash","modules"],"repository":{"type":"git","url":"git+https://github.com/lodash/babel-plugin-lodash.git"},"license":"MIT","main":"lib/index.js","author":{"name":"Graeme Yeates","email":"megawac@gmail.com","url":"https://github.com/megawac"},"contributors":[{"name":"Graeme Yeates","email":"megawac@gmail.com","url":"https://github.com/megawac"},{"name":"John-David Dalton","email":"john.david.dalton@gmail.com","url":"http://allyoucanleet.com/"}],"scripts":{"build":"babel src --out-dir lib || true","prepublish":"npm run build","test":"mocha --check-leaks --compilers js:babel-register"},"devDependencies":{"async":"^2.1.4","babel-cli":"^6.18.0","babel-core":"^6.20.0","babel-plugin-add-module-exports":"~0.2.1","babel-plugin-lodash":"3.2.10","babel-plugin-syntax-flow":"^6.18.0","babel-plugin-syntax-jsx":"^6.18.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-plugin-transform-runtime":"^6.15.0","babel-preset-env":"^1.1.1","babel-preset-es2015":"^6.18.0","babel-preset-react":"^6.16.0","babel-preset-stage-0":"^6.16.0","babel-register":"^6.18.0","chai":"^3.5.0","lodash-bound":"^1.1.2","lodash-compat":"^3.10.2","lodash-es":"^4.17.2","mocha":"^3.2.0","ramda":"^0.22.1","react-bootstrap":"^0.30.7"},"dependencies":{"glob":"^7.1.1","lodash":"^4.17.2"},"files":["lib"],"greenkeeper":{"ignore":["babel-plugin-lodash"]},"readme":"# babel-plugin-lodash v3.2.11\n\nA simple transform to cherry-pick Lodash modules so you don’t have to.\n\nCombine with [lodash-webpack-plugin](https://www.npmjs.com/package/lodash-webpack-plugin)\nfor even smaller cherry-picked builds!\n\n## Install\n\n```shell\n$ npm i --save lodash\n$ npm i --save-dev babel-plugin-lodash babel-cli babel-preset-es2015\n```\n\n## Example\n\nTransforms\n```js\nimport _ from 'lodash';\nimport { add } from 'lodash/fp';\n\nconst addOne = add(1);\n_.map([1, 2, 3], addOne);\n```\n\nroughly to\n```js\nimport _add from 'lodash/fp/add';\nimport _map from 'lodash/map';\n\nconst addOne = _add(1);\n_map([1, 2, 3], addOne);\n```\n\n## Usage\n\n###### .babelrc\n```json\n{\n  \"plugins\": [\"lodash\"],\n  \"presets\": [\"es2015\"]\n}\n```\n\nSet plugin options using an array of `[pluginName, optionsObject]`.\n```json\n{\n  \"plugins\": [[\"lodash\", { \"id\": \"lodash-compat\", \"cwd\": \"some/path\" }]],\n  \"presets\": [\"es2015\"]\n}\n```\n\nThe `options.id` can be an array of ids.\n```json\n{\n  \"plugins\": [[\"lodash\", { \"id\": [\"async\", \"lodash-bound\"] }]],\n  \"presets\": [\"es2015\"]\n}\n```\n\n###### Babel CLI\n```sh\n$ babel --plugins lodash --presets es2015 script.js\n```\n\n###### Babel API\n```js\nrequire('babel-core').transform('code', {\n  'plugins': ['lodash'],\n  'presets': ['es2015']\n});\n```\n\n###### webpack.config.js\n```js\n'module': {\n  'loaders': [{\n    'loader': 'babel-loader',\n    'test': /\\.js$/,\n    'exclude': /node_modules/,\n    'query': {\n      'plugins': ['lodash'],\n      'presets': ['es2015']\n    }\n  }]\n}\n```\n\n## FAQ\n\n> Can this plugin produce ES2015 imports rather than CommonJS imports?\n\nThis plugin produces ES2015 imports by default. The\n[transform-es2015-modules-commonjs](https://www.npmjs.com/package/babel-plugin-transform-es2015-modules-commonjs)\nplugin, which is included in the Babel [es2015](http://babeljs.io/docs/plugins/preset-es2015/)\npreset, transforms ES2015 `import` statements to CommonJS. Omit it from your\npreset to preserve ES2015 style imports.\n\n## Limitations\n\n* You must use ES2015 imports to load Lodash\n* Babel < 6 & Node.js < 4 aren’t supported\n* Chain sequences aren’t supported. See [this blog post](https://medium.com/making-internets/why-using-chain-is-a-mistake-9bc1f80d51ba) for alternatives.\n* Modularized [method packages](https://www.npmjs.com/browse/keyword/lodash-modularized) aren’t supported\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/lodash/babel-plugin-lodash/issues"},"homepage":"https://github.com/lodash/babel-plugin-lodash#readme","_id":"babel-plugin-lodash@3.2.11","_shasum":"21c8fdec9fe1835efaa737873e3902bdd66d5701","_resolved":"https://registry.npmjs.org/babel-plugin-lodash/-/babel-plugin-lodash-3.2.11.tgz","_from":"https://registry.npmjs.org/babel-plugin-lodash/-/babel-plugin-lodash-3.2.11.tgz"}